; ModuleID = '/llk/IR_all_yes/drivers/irqchip/irq-gic-v3-its.c_pt.bc'
source_filename = "../drivers/irqchip/irq-gic-v3-its.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.list_head = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.irq_domain_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.syscore_ops = type { %struct.list_head, ptr, ptr, ptr }
%struct.cpu_lpi_count = type { %struct.atomic_t, %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.memblock = type { i8, i32, %struct.memblock_type, %struct.memblock_type }
%struct.memblock_type = type { i32, i32, i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon }
%union.anon = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.cpumask = type { [1 x i32] }
%struct.cpu_cache_fns = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.fwnode_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.gic_quirk = type { ptr, ptr, ptr, i32, i32 }
%struct.msi_domain_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.irq_chip = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.anon.108 = type { %struct.raw_spinlock, ptr, ptr, i32 }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.anon = type { %struct.raw_spinlock, ptr, ptr, i32, i64, ptr, ptr }
%struct.rdists = type { ptr, i32, ptr, i64, i32, i32, i32, i8, i8, i8, i8 }
%struct.fwnode_handle = type { ptr, ptr, ptr, %struct.list_head, %struct.list_head, i8 }
%struct.its_device = type { %struct.list_head, ptr, %struct.event_lpi_map, ptr, i32, i32, i8 }
%struct.event_lpi_map = type { ptr, ptr, i32, i32, %struct.raw_spinlock, ptr, ptr, i32 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.device_node = type { ptr, i32, ptr, %struct.fwnode_handle, ptr, ptr, ptr, ptr, ptr, %struct.kobject, i32, ptr }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.its_cmd_desc = type { %union.anon.87 }
%union.anon.87 = type { %struct.anon.99 }
%struct.anon.99 = type { ptr, ptr, i32, i32, i8 }
%struct.its_node = type { %struct.raw_spinlock, %struct.mutex, %struct.list_head, ptr, ptr, i32, ptr, ptr, [8 x %struct.its_baser], ptr, ptr, ptr, i64, i64, i32, i32, %struct.list_head, i64, i32, i32, i32, i32, i32 }
%struct.its_baser = type { ptr, i64, i32, i32 }
%struct.its_collection = type { i64, i16 }
%struct.anon.92 = type { ptr, i32 }
%struct.its_cmd_block = type { %union.anon.81 }
%union.anon.81 = type { [4 x i64] }
%struct.irq_domain = type { %struct.list_head, ptr, ptr, ptr, i32, i32, ptr, i32, ptr, ptr, i32, i32, %struct.xarray, %struct.mutex, [0 x ptr] }
%struct.msi_domain_info = type { i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.irq_fwspec = type { ptr, i32, [16 x i32] }
%struct.msi_alloc_info = type { ptr, i32, i32, [2 x %union.anon.104] }
%union.anon.104 = type { i32 }
%struct.irq_data = type { i32, i32, i32, ptr, ptr, ptr, ptr, ptr }
%struct.anon.91 = type { ptr, i32 }
%struct.irq_common_data = type { i32, ptr, ptr, ptr, ptr, i32 }
%struct.anon.93 = type { ptr, i32, i32 }
%struct.anon.95 = type { ptr, i32 }
%struct.anon.94 = type { ptr, ptr, i32 }
%struct.anon.90 = type { ptr, i32 }
%struct.msi_msg = type { %union.anon.75, %union.anon.76, %union.anon.77 }
%union.anon.75 = type { i32 }
%union.anon.76 = type { i32 }
%union.anon.77 = type { i32 }
%struct.anon.89 = type { ptr, i32 }
%struct.its_vm = type { ptr, ptr, ptr, ptr, i32, i32, ptr, i32, [16 x i32] }
%struct.anon.98 = type { ptr, ptr, i8 }
%struct.its_vpe = type { ptr, ptr, %struct.atomic_t, i32, i32, i8, i8, %union.anon.82, %struct.raw_spinlock, i16, i16, i8 }
%union.anon.82 = type { %struct.anon.84 }
%struct.anon.84 = type { ptr, ptr, [16 x %struct.anon.85], %struct.atomic_t }
%struct.anon.85 = type { i8, i8, i8 }
%struct.its_cmd_info = type { i32, %union.anon.105 }
%union.anon.105 = type { ptr }
%struct.its_vlpi_map = type { ptr, ptr, i32, i8, i8 }
%struct.anon.100 = type { ptr, ptr, i32, i8 }
%struct.anon.88 = type { ptr, i32 }
%struct.lpi_range = type { %struct.list_head, i32, i32 }
%struct.anon.103 = type { ptr, i8, i8, i8, i8, i8 }
%struct.anon.107 = type { i8, i8 }
%struct.anon.101 = type { ptr, ptr, i16, i16 }
%struct.anon.106 = type { i8, i8 }

@its_nodes = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @its_nodes, ptr @its_nodes }, [24 x i8] zeroinitializer }, align 32
@gic_rdists = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@its_parent = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@its_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.1, ptr @.str.2, ptr @.str.3, i32 5555, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\014ITS: No ITS available, not enabling LPIs\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"its_init\00", [23 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"drivers/irqchip/irq-gic-v3-its.c\00", [63 x i8] zeroinitializer }, align 32
@its_init._entry_ptr = internal global ptr @its_init._entry, section ".printk_index", align 4
@its_sgi_domain_ops = internal constant { %struct.irq_domain_ops, [52 x i8] } { %struct.irq_domain_ops { ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_sgi_irq_domain_alloc, ptr @its_sgi_irq_domain_free, ptr @its_sgi_irq_domain_activate, ptr @its_sgi_irq_domain_deactivate, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@its_vpe_domain_ops = internal constant { %struct.irq_domain_ops, [52 x i8] } { %struct.irq_domain_ops { ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_vpe_irq_domain_alloc, ptr @its_vpe_irq_domain_free, ptr @its_vpe_irq_domain_activate, ptr @its_vpe_irq_domain_deactivate, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@its_init._entry.4 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.2, ptr @.str.3, i32 5583, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013ITS: Disabling GICv4 support\0A\00", [32 x i8] zeroinitializer }, align 32
@its_init._entry_ptr.6 = internal global ptr @its_init._entry.4, section ".printk_index", align 4
@its_syscore_ops = internal global { %struct.syscore_ops, [44 x i8] } { %struct.syscore_ops { %struct.list_head zeroinitializer, ptr @its_save_disable, ptr @its_restore_enable, ptr null }, [44 x i8] zeroinitializer }, align 32
@__pcpu_unique_cpu_lpi_count = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@cpu_lpi_count = weak dso_local global %struct.cpu_lpi_count zeroinitializer, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@redist_disable_lpis._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str.3, i32 5146, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"\016CPU%d: LPIs not supported\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"redist_disable_lpis\00", [44 x i8] zeroinitializer }, align 32
@redist_disable_lpis._entry_ptr = internal global ptr @redist_disable_lpis._entry, section ".printk_index", align 4
@redist_disable_lpis._entry.9 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.8, ptr @.str.3, i32 5169, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\014GICv3: CPU%d: Booted with LPIs enabled, memory probably corrupted\0A\00", [59 x i8] zeroinitializer }, align 32
@redist_disable_lpis._entry_ptr.11 = internal global ptr @redist_disable_lpis._entry.9, section ".printk_index", align 4
@redist_disable_lpis._entry.12 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.8, ptr @.str.3, i32 5187, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013CPU%d: Timeout while disabling LPIs\0A\00", [57 x i8] zeroinitializer }, align 32
@redist_disable_lpis._entry_ptr.14 = internal global ptr @redist_disable_lpis._entry.12, section ".printk_index", align 4
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@redist_disable_lpis._entry.15 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.8, ptr @.str.3, i32 5200, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013CPU%d: Failed to disable LPIs\0A\00", [63 x i8] zeroinitializer }, align 32
@redist_disable_lpis._entry_ptr.17 = internal global ptr @redist_disable_lpis._entry.15, section ".printk_index", align 4
@lpi_id_bits = internal global { i32, [28 x i8] } zeroinitializer, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@its_cpu_init_lpis.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@its_cpu_init_lpis._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str.3, i32 3099, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\016GIC: using cache flushing for LPI property table\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"its_cpu_init_lpis\00", [46 x i8] zeroinitializer }, align 32
@its_cpu_init_lpis._entry_ptr = internal global ptr @its_cpu_init_lpis._entry, section ".printk_index", align 4
@its_cpu_init_lpis.__UNIQUE_ID_ddebug412 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.19, ptr @.str.3, ptr @.str.21, i8 3, i8 16, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.20 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"irq_gic_v3_its\00", [17 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"GICv4: CPU%d: Init IDbits to 0x%llx for GICR_VPROPBASER\0A\00", [39 x i8] zeroinitializer }, align 32
@its_cpu_init_lpis._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.19, ptr @.str.3, i32 3168, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\016GICv3: CPU%d: using %s LPI pending table @%pa\0A\00", [47 x i8] zeroinitializer }, align 32
@its_cpu_init_lpis._entry_ptr.24 = internal global ptr @its_cpu_init_lpis._entry.22, section ".printk_index", align 4
@.str.25 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"reserved\00", [23 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"allocated\00", [22 x i8] zeroinitializer }, align 32
@memblock = external dso_local global %struct.memblock, align 4
@gic_check_reserved_range._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.28, ptr @.str.3, i32 2216, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"\014GICv3: Expected reserved range [%pa:%pa], not found\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"gic_check_reserved_range\00", [39 x i8] zeroinitializer }, align 32
@gic_check_reserved_range._entry_ptr = internal global ptr @gic_check_reserved_range._entry, section ".printk_index", align 4
@elfcorehdr_addr = external dso_local local_unnamed_addr global i64, align 8
@its_clear_vpend_valid._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.its_clear_vpend_valid = private unnamed_addr constant [22 x i8] c"its_clear_vpend_valid\00", align 1
@its_clear_vpend_valid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @__func__.its_clear_vpend_valid, ptr @.str.3, i32 3037, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013ITS virtual pending table not cleaning\0A\00", [54 x i8] zeroinitializer }, align 32
@its_clear_vpend_valid._entry_ptr = internal global ptr @its_clear_vpend_valid._entry, section ".printk_index", align 4
@allocate_vpe_l1_table.__UNIQUE_ID_ddebug405 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.31, ptr @.str.3, ptr @.str.32, i8 2, i8 -44, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.31 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"allocate_vpe_l1_table\00", [42 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"np = %d, npg = %lld, psz = %d, epp = %d, esz = %d\0A\00", [45 x i8] zeroinitializer }, align 32
@allocate_vpe_l1_table.__UNIQUE_ID_ddebug411 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.31, ptr @.str.3, ptr @.str.33, i8 2, i8 -39, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.33 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"CPU%d: VPROPBASER = %llx %*pbl\0A\00", [32 x i8] zeroinitializer }, align 32
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.35 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@its_lock = internal global { %struct.raw_spinlock, [52 x i8] } { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.36, i8 0, i8 2, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"its_lock\00", [23 x i8] zeroinitializer }, align 32
@its_send_single_command._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.its_send_single_command = private unnamed_addr constant [24 x i8] c"its_send_single_command\00", align 1
@its_send_single_command._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @__func__.its_send_single_command, ptr @.str.3, i32 1142, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"\013ITS cmd %ps failed\0A\00", [42 x i8] zeroinitializer }, align 32
@its_send_single_command._entry_ptr = internal global ptr @its_send_single_command._entry, section ".printk_index", align 4
@its_allocate_entry._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.its_allocate_entry = private unnamed_addr constant [19 x i8] c"its_allocate_entry\00", align 1
@its_allocate_entry._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.38, ptr @__func__.its_allocate_entry, ptr @.str.3, i32 1004, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"\013ITS queue not draining\0A\00", [38 x i8] zeroinitializer }, align 32
@its_allocate_entry._entry_ptr = internal global ptr @its_allocate_entry._entry, section ".printk_index", align 4
@cpu_cache = external dso_local local_unnamed_addr global %struct.cpu_cache_fns, align 4
@its_wait_for_range_completion._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.its_wait_for_range_completion = private unnamed_addr constant [30 x i8] c"its_wait_for_range_completion\00", align 1
@its_wait_for_range_completion._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @__func__.its_wait_for_range_completion, ptr @.str.3, i32 1081, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\013ITS queue timeout (%llu %llu)\0A\00", [63 x i8] zeroinitializer }, align 32
@its_wait_for_range_completion._entry_ptr = internal global ptr @its_wait_for_range_completion._entry, section ".printk_index", align 4
@of_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 4
@its_device_id = internal constant { [2 x %struct.of_device_id], [120 x i8] } { [2 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"arm,gic-v3-its\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id zeroinitializer], [120 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"msi-controller\00", [17 x i8] zeroinitializer }, align 32
@its_of_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.43, ptr @.str.3, i32 5322, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"\014%pOF: no msi-controller property, ITS ignored\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"its_of_probe\00", [19 x i8] zeroinitializer }, align 32
@its_of_probe._entry_ptr = internal global ptr @its_of_probe._entry, section ".printk_index", align 4
@its_of_probe._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.43, ptr @.str.3, i32 5327, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"\014%pOF: no regs?\0A\00", [46 x i8] zeroinitializer }, align 32
@its_of_probe._entry_ptr.46 = internal global ptr @its_of_probe._entry.44, section ".printk_index", align 4
@its_map_one._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.47, ptr @.str.48, ptr @.str.3, i32 4866, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014ITS@%pa: Unable to map ITS registers\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"its_map_one\00", [20 x i8] zeroinitializer }, align 32
@its_map_one._entry_ptr = internal global ptr @its_map_one._entry, section ".printk_index", align 4
@its_map_one._entry.49 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.50, ptr @.str.48, ptr @.str.3, i32 4873, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014ITS@%pa: No ITS detected, giving up\0A\00", [57 x i8] zeroinitializer }, align 32
@its_map_one._entry_ptr.51 = internal global ptr @its_map_one._entry.49, section ".printk_index", align 4
@its_map_one._entry.52 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.48, ptr @.str.3, i32 4880, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014ITS@%pa: Failed to quiesce, giving up\0A\00", [55 x i8] zeroinitializer }, align 32
@its_map_one._entry_ptr.54 = internal global ptr @its_map_one._entry.52, section ".printk_index", align 4
@its_probe_one._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.55, ptr @.str.56, ptr @.str.3, i32 5007, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"\016ITS %pR\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"its_probe_one\00", [18 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr = internal global ptr @its_probe_one._entry, section ".printk_index", align 4
@its_probe_one.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.57 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&its->lock\00", [21 x i8] zeroinitializer }, align 32
@its_probe_one.__key.58 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.59 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&its->dev_alloc_lock\00", [43 x i8] zeroinitializer }, align 32
@its_probe_one._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.56, ptr @.str.3, i32 5032, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\016ITS@%pa: Using ITS number %d\0A\00", [32 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr.62 = internal global ptr @its_probe_one._entry.60, section ".printk_index", align 4
@its_probe_one._entry.63 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.56, ptr @.str.3, i32 5034, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"\016ITS@%pa: Single VMOVP capable\0A\00", [63 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr.65 = internal global ptr @its_probe_one._entry.63, section ".printk_index", align 4
@its_probe_one._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.56, ptr @.str.3, i32 5049, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\016ITS@%pa: Using GICv4.1 mode %08x %08x\0A\00", [55 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr.68 = internal global ptr @its_probe_one._entry.66, section ".printk_index", align 4
@its_probe_one._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.56, ptr @.str.3, i32 5098, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"\016ITS: using cache flushing for cmd queue\0A\00", [53 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr.71 = internal global ptr @its_probe_one._entry.69, section ".printk_index", align 4
@its_probe_one._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.73, ptr @.str.56, ptr @.str.3, i32 5130, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"\013ITS@%pa: failed probing (%d)\0A\00", [32 x i8] zeroinitializer }, align 32
@its_probe_one._entry_ptr.74 = internal global ptr @its_probe_one._entry.72, section ".printk_index", align 4
@its_list_map = internal global { i32, [28 x i8] } zeroinitializer, align 32
@its_compute_its_list_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.76, ptr @.str.3, i32 4970, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013ITS@%pa: No ITSList entry available!\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"its_compute_its_list_map\00", [39 x i8] zeroinitializer }, align 32
@its_compute_its_list_map._entry_ptr = internal global ptr @its_compute_its_list_map._entry, section ".printk_index", align 4
@its_compute_its_list_map._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.76, ptr @.str.3, i32 4986, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\013ITS@%pa: Duplicate ITSList entry %d\0A\00", [57 x i8] zeroinitializer }, align 32
@its_compute_its_list_map._entry_ptr.79 = internal global ptr @its_compute_its_list_map._entry.77, section ".printk_index", align 4
@its_quirks = internal constant { [1 x %struct.gic_quirk], [44 x i8] } zeroinitializer, align 32
@its_parse_indirect_baser._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.80, ptr @.str.81, ptr @.str.3, i32 2446, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\014ITS@%pa: %s Table too large, reduce ids %llu->%u\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"its_parse_indirect_baser\00", [39 x i8] zeroinitializer }, align 32
@its_parse_indirect_baser._entry_ptr = internal global ptr @its_parse_indirect_baser._entry, section ".printk_index", align 4
@its_base_type_string = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr null, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88], [32 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Devices\00", [24 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Virtual CPUs\00", [19 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Reserved (3)\00", [19 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"Interrupt Collections\00", [42 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Reserved (5)\00", [19 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Reserved (6)\00", [19 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Reserved (7)\00", [19 x i8] zeroinitializer }, align 32
@its_setup_baser._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.90, ptr @.str.3, i32 2308, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\014ITS@%pa: %s too large, reduce ITS pages %u->%u\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"its_setup_baser\00", [16 x i8] zeroinitializer }, align 32
@its_setup_baser._entry_ptr = internal global ptr @its_setup_baser._entry, section ".printk_index", align 4
@its_setup_baser._entry.91 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.90, ptr @.str.3, i32 2379, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\013ITS@%pa: %s doesn't stick: %llx %llx\0A\00", [56 x i8] zeroinitializer }, align 32
@its_setup_baser._entry_ptr.93 = internal global ptr @its_setup_baser._entry.91, section ".printk_index", align 4
@its_setup_baser._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.90, ptr @.str.3, i32 2394, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"\016ITS@%pa: allocated %d %s @%lx (%s, esz %d, psz %dK, shr %d)\0A\00", [33 x i8] zeroinitializer }, align 32
@its_setup_baser._entry_ptr.96 = internal global ptr @its_setup_baser._entry.94, section ".printk_index", align 4
@.str.97 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"indirect\00", [23 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"flat\00", [27 x i8] zeroinitializer }, align 32
@its_domain_ops = internal constant { %struct.irq_domain_ops, [52 x i8] } { %struct.irq_domain_ops { ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_irq_domain_alloc, ptr @its_irq_domain_free, ptr @its_irq_domain_activate, ptr @its_irq_domain_deactivate, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@its_msi_domain_ops = internal global { %struct.msi_domain_ops, [32 x i8] } { %struct.msi_domain_ops { ptr null, ptr null, ptr null, ptr null, ptr @its_msi_prepare, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@its_irq_chip = internal global { %struct.irq_chip, [56 x i8] } { %struct.irq_chip { ptr null, ptr @.str.101, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_mask_irq, ptr null, ptr @its_unmask_irq, ptr @irq_chip_eoi_parent, ptr @its_set_affinity, ptr @its_irq_retrigger, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_irq_compose_msi_msg, ptr null, ptr null, ptr @its_irq_set_irqchip_state, ptr @its_irq_set_vcpu_affinity, ptr null, ptr null, ptr null, ptr null, i32 0 }, [56 x i8] zeroinitializer }, align 32
@its_irq_domain_alloc.__UNIQUE_ID_ddebug429 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.99, ptr @.str.3, ptr @.str.100, i8 3, i8 123, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"its_irq_domain_alloc\00", [43 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"ID:%d pID:%d vID:%d\0A\00", [43 x i8] zeroinitializer }, align 32
@irqchip_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 4
@.str.101 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ITS\00", [28 x i8] zeroinitializer }, align 32
@dev_event_to_vlpi_map.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@its_send_single_vcommand._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.its_send_single_vcommand = private unnamed_addr constant [25 x i8] c"its_send_single_vcommand\00", align 1
@its_send_single_vcommand._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.37, ptr @__func__.its_send_single_vcommand, ptr @.str.3, i32 1155, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@its_send_single_vcommand._entry_ptr = internal global ptr @its_send_single_vcommand._entry, section ".printk_index", align 4
@valid_col.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@its_select_cpu.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.102, ptr @.str.3, ptr @.str.103, i8 1, i8 -103, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.102 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"its_select_cpu\00", [17 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IRQ%d -> %*pbl CPU%d\0A\00", [42 x i8] zeroinitializer }, align 32
@cpu_bit_bitmap = external dso_local local_unnamed_addr constant [33 x [1 x i32]], align 4
@vmovp_lock = internal global { %struct.raw_spinlock, [52 x i8] } { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.104, i8 0, i8 2, i8 0, i32 0, i32 0 } }, [52 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"vmovp_lock\00", [21 x i8] zeroinitializer }, align 32
@lpi_range_lock = internal global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.105, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @lpi_range_lock, i64 52), ptr getelementptr (i8, ptr @lpi_range_lock, i64 52) }, ptr @lpi_range_lock, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.106, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@lpi_range_list = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @lpi_range_list, ptr @lpi_range_list }, [24 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"lpi_range_lock.wait_lock\00", [39 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"lpi_range_lock\00", [17 x i8] zeroinitializer }, align 32
@vpe_proxy = internal global { %struct.anon.108, [40 x i8] } zeroinitializer, align 32
@its_msi_prepare.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.107 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"DevId %x clashes with GICv4 VPE proxy device\0A\00", [50 x i8] zeroinitializer }, align 32
@its_msi_prepare.__UNIQUE_ID_ddebug427 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.108, ptr @.str.3, ptr @.str.109, i8 3, i8 104, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.108 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"its_msi_prepare\00", [16 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Reusing ITT for devID %x\0A\00", [38 x i8] zeroinitializer }, align 32
@its_msi_prepare.__UNIQUE_ID_ddebug428 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.108, ptr @.str.3, ptr @.str.110, i8 3, i8 107, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.110 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"ITT %d entries, %d bits\0A\00", [39 x i8] zeroinitializer }, align 32
@its_create_device.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.111 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&dev->event_map.vlpi_lock\00", [38 x i8] zeroinitializer }, align 32
@alloc_lpi_range.__UNIQUE_ID_ddebug249 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.112, ptr @.str.3, ptr @.str.113, i8 2, i8 2, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.112 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"alloc_lpi_range\00", [16 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"ITS: alloc %u:%u\0A\00", [46 x i8] zeroinitializer }, align 32
@allocate_lpi_tables._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.115, ptr @.str.3, i32 2987, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"\016GICv3: Using preallocated redistributor tables\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"allocate_lpi_tables\00", [44 x i8] zeroinitializer }, align 32
@allocate_lpi_tables._entry_ptr = internal global ptr @allocate_lpi_tables._entry, section ".printk_index", align 4
@allocate_lpi_tables._entry.116 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @.str.115, ptr @.str.3, i32 3004, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\013Failed to allocate PENDBASE for CPU%d\0A\00", [55 x i8] zeroinitializer }, align 32
@allocate_lpi_tables._entry_ptr.118 = internal global ptr @allocate_lpi_tables._entry.116, section ".printk_index", align 4
@its_setup_lpi_prop_table._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.119, ptr @.str.120, ptr @.str.3, i32 2250, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"\013Failed to allocate PROPBASE\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"its_setup_lpi_prop_table\00", [39 x i8] zeroinitializer }, align 32
@its_setup_lpi_prop_table._entry_ptr = internal global ptr @its_setup_lpi_prop_table._entry, section ".printk_index", align 4
@its_setup_lpi_prop_table._entry.121 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.122, ptr @.str.120, ptr @.str.3, i32 2261, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\016GICv3: using LPI property table @%pa\0A\00", [56 x i8] zeroinitializer }, align 32
@its_setup_lpi_prop_table._entry_ptr.123 = internal global ptr @its_setup_lpi_prop_table._entry.121, section ".printk_index", align 4
@its_lpi_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.125, ptr @.str.3, i32 2116, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"\016ITS: Using hypervisor restricted LPI range [%u]\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"its_lpi_init\00", [19 x i8] zeroinitializer }, align 32
@its_lpi_init._entry_ptr = internal global ptr @its_lpi_init._entry, section ".printk_index", align 4
@its_lpi_init.__UNIQUE_ID_ddebug250 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.20, ptr @.str.125, ptr @.str.3, ptr @.str.126, i8 2, i8 19, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.126 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"ITS: Allocator initialized for %u LPIs\0A\00", [56 x i8] zeroinitializer }, align 32
@its_sgi_irq_chip = internal global { %struct.irq_chip, [56 x i8] } { %struct.irq_chip { ptr null, ptr @.str.127, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_sgi_mask_irq, ptr null, ptr @its_sgi_unmask_irq, ptr null, ptr @its_sgi_set_affinity, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_sgi_get_irqchip_state, ptr @its_sgi_set_irqchip_state, ptr @its_sgi_set_vcpu_affinity, ptr null, ptr null, ptr null, ptr null, i32 0 }, [56 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GICv4.1-sgi\00", [20 x i8] zeroinitializer }, align 32
@find_4_1_its.its = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@its_sgi_get_irqchip_state._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.29, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.its_sgi_get_irqchip_state = private unnamed_addr constant [26 x i8] c"its_sgi_get_irqchip_state\00", align 1
@its_sgi_get_irqchip_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.128, ptr @__func__.its_sgi_get_irqchip_state, ptr @.str.3, i32 4268, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013Unable to get SGI status\0A\00", [36 x i8] zeroinitializer }, align 32
@its_sgi_get_irqchip_state._entry_ptr = internal global ptr @its_sgi_get_irqchip_state._entry, section ".printk_index", align 4
@its_init_vpe_domain._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.3, i32 4923, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\016ITS: Using DirectLPI for VPE invalidation\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"its_init_vpe_domain\00", [44 x i8] zeroinitializer }, align 32
@its_init_vpe_domain._entry_ptr = internal global ptr @its_init_vpe_domain._entry, section ".printk_index", align 4
@its_init_vpe_domain._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.130, ptr @.str.3, i32 4941, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"\013ITS: Can't allocate GICv4 proxy device\0A\00", [54 x i8] zeroinitializer }, align 32
@its_init_vpe_domain._entry_ptr.133 = internal global ptr @its_init_vpe_domain._entry.131, section ".printk_index", align 4
@its_init_vpe_domain.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.134 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&vpe_proxy.lock\00", [16 x i8] zeroinitializer }, align 32
@its_init_vpe_domain._entry.135 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.136, ptr @.str.130, ptr @.str.3, i32 4950, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\016ITS: Allocated DevID %x as GICv4 proxy device (%d slots)\0A\00", [36 x i8] zeroinitializer }, align 32
@its_init_vpe_domain._entry_ptr.137 = internal global ptr @its_init_vpe_domain._entry.135, section ".printk_index", align 4
@its_vpe_irq_chip = internal global { %struct.irq_chip, [56 x i8] } { %struct.irq_chip { ptr null, ptr @.str.138, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_vpe_mask_irq, ptr null, ptr @its_vpe_unmask_irq, ptr @irq_chip_eoi_parent, ptr @its_vpe_set_affinity, ptr @its_vpe_retrigger, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_vpe_set_irqchip_state, ptr @its_vpe_set_vcpu_affinity, ptr null, ptr null, ptr null, ptr null, i32 0 }, [56 x i8] zeroinitializer }, align 32
@its_vpe_4_1_irq_chip = internal global { %struct.irq_chip, [56 x i8] } { %struct.irq_chip { ptr null, ptr @.str.139, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_vpe_4_1_mask_irq, ptr null, ptr @its_vpe_4_1_unmask_irq, ptr @irq_chip_eoi_parent, ptr @its_vpe_set_affinity, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @its_vpe_4_1_set_vcpu_affinity, ptr null, ptr null, ptr null, ptr null, i32 0 }, [56 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"GICv4-vpe\00", [22 x i8] zeroinitializer }, align 32
@vmovp_seq_num = internal global { i16, [30 x i8] } zeroinitializer, align 32
@its_wait_vpt_parse_complete.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.139 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"GICv4.1-vpe\00", [20 x i8] zeroinitializer }, align 32
@its_vpe_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.140 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"&vpe->vpe_lock\00", [17 x i8] zeroinitializer }, align 32
@its_vpeid_ida = internal global { %struct.ida, [44 x i8] } { %struct.ida { %struct.xarray { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.141, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108869, ptr null } }, [44 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"its_vpeid_ida.xa_lock\00", [42 x i8] zeroinitializer }, align 32
@its_save_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.142, ptr @.str.143, ptr @.str.3, i32 4772, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"\013ITS@%pa: failed to quiesce: %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"its_save_disable\00", [47 x i8] zeroinitializer }, align 32
@its_save_disable._entry_ptr = internal global ptr @its_save_disable._entry, section ".printk_index", align 4
@its_restore_enable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.145, ptr @.str.3, i32 4818, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"\013ITS@%pa: failed to quiesce on resume: %d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"its_restore_enable\00", [45 x i8] zeroinitializer }, align 32
@its_restore_enable._entry_ptr = internal global ptr @its_restore_enable._entry, section ".printk_index", align 4
@switch.table.its_vpe_irq_domain_alloc = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 4096, i32 16384, i32 65536], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 2, i64 1, i64 2]
@__sancov_gen_cov_switch_values.146 = internal global [4 x i64] [i64 2, i64 17, i64 16384, i64 65536]
@__sancov_gen_cov_switch_values.147 = internal global [4 x i64] [i64 2, i64 3, i64 1, i64 2]
@__sancov_gen_cov_switch_values.148 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.149 = internal global [4 x i64] [i64 2, i64 32, i64 16384, i64 65536]
@__sancov_gen_cov_switch_values.150 = internal global [4 x i64] [i64 2, i64 8, i64 48, i64 64]
@__sancov_gen_cov_switch_values.151 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.152 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.153 = internal global [6 x i64] [i64 4, i64 32, i64 4, i64 5, i64 6, i64 7]
@__sancov_gen_cov_switch_values.154 = internal global [6 x i64] [i64 4, i64 32, i64 4, i64 5, i64 6, i64 7]
@___asan_gen_.155 = private unnamed_addr constant [10 x i8] c"its_nodes\00", align 1
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 187, i32 8 }
@___asan_gen_.158 = private unnamed_addr constant [11 x i8] c"gic_rdists\00", align 1
@___asan_gen_.160 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 189, i32 23 }
@___asan_gen_.161 = private unnamed_addr constant [11 x i8] c"its_parent\00", align 1
@___asan_gen_.163 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 190, i32 27 }
@___asan_gen_.175 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5555, i32 3 }
@___asan_gen_.176 = private unnamed_addr constant [19 x i8] c"its_sgi_domain_ops\00", align 1
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4372, i32 36 }
@___asan_gen_.179 = private unnamed_addr constant [19 x i8] c"its_vpe_domain_ops\00", align 1
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4576, i32 36 }
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5583, i32 4 }
@___asan_gen_.188 = private unnamed_addr constant [16 x i8] c"its_syscore_ops\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4854, i32 27 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5146, i32 3 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5168, i32 2 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5186, i32 4 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5200, i32 3 }
@___asan_gen_.218 = private unnamed_addr constant [12 x i8] c"lpi_id_bits\00", align 1
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 53, i32 12 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3099, i32 3 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3138, i32 3 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3164, i32 2 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2215, i32 2 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3037, i32 3 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2896, i32 2 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2916, i32 2 }
@___asan_gen_.279 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.279, i32 108, i32 2 }
@___asan_gen_.281 = private unnamed_addr constant [9 x i8] c"its_lock\00", align 1
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 188, i32 8 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1141, i32 8 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1004, i32 4 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1080, i32 4 }
@___asan_gen_.314 = private unnamed_addr constant [14 x i8] c"its_device_id\00", align 1
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5286, i32 34 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5307, i32 34 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5321, i32 4 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5327, i32 4 }
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4866, i32 3 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4873, i32 3 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4880, i32 3 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5007, i32 2 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5015, i32 2 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5016, i32 2 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5031, i32 4 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5034, i32 4 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5048, i32 4 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5098, i32 3 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 5130, i32 2 }
@___asan_gen_.407 = private unnamed_addr constant [13 x i8] c"its_list_map\00", align 1
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 192, i32 22 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4969, i32 3 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4985, i32 3 }
@___asan_gen_.425 = private unnamed_addr constant [11 x i8] c"its_quirks\00", align 1
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4701, i32 31 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2444, i32 3 }
@___asan_gen_.437 = private unnamed_addr constant [21 x i8] c"its_base_type_string\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2266, i32 20 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2267, i32 29 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2268, i32 28 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2269, i32 32 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2270, i32 33 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2271, i32 33 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2272, i32 33 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2273, i32 33 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2306, i32 3 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2377, i32 3 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2389, i32 2 }
@___asan_gen_.488 = private unnamed_addr constant [15 x i8] c"its_domain_ops\00", align 1
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3646, i32 36 }
@___asan_gen_.491 = private unnamed_addr constant [19 x i8] c"its_msi_domain_ops\00", align 1
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3508, i32 30 }
@___asan_gen_.494 = private unnamed_addr constant [13 x i8] c"its_irq_chip\00", align 1
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1979, i32 24 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3565, i32 3 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1980, i32 12 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1154, i32 8 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 1639, i32 2 }
@___asan_gen_.518 = private unnamed_addr constant [11 x i8] c"vmovp_lock\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 194, i32 8 }
@___asan_gen_.524 = private unnamed_addr constant [15 x i8] c"lpi_range_lock\00", align 1
@___asan_gen_.527 = private unnamed_addr constant [15 x i8] c"lpi_range_list\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2010, i32 8 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2009, i32 8 }
@___asan_gen_.536 = private unnamed_addr constant [10 x i8] c"vpe_proxy\00", align 1
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 178, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3474, i32 3 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3488, i32 3 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3501, i32 2 }
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3407, i32 2 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2056, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2987, i32 3 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3004, i32 4 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2250, i32 4 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2260, i32 2 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2115, i32 3 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 2124, i32 2 }
@___asan_gen_.605 = private unnamed_addr constant [17 x i8] c"its_sgi_irq_chip\00", align 1
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4304, i32 24 }
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4305, i32 12 }
@___asan_gen_.611 = private unnamed_addr constant [4 x i8] c"its\00", align 1
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4012, i32 26 }
@___asan_gen_.614 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4268, i32 4 }
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4923, i32 3 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4941, i32 3 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4947, i32 2 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4949, i32 2 }
@___asan_gen_.650 = private unnamed_addr constant [17 x i8] c"its_vpe_irq_chip\00", align 1
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 3999, i32 24 }
@___asan_gen_.653 = private unnamed_addr constant [21 x i8] c"its_vpe_4_1_irq_chip\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4154, i32 24 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4000, i32 12 }
@___asan_gen_.659 = private unnamed_addr constant [14 x i8] c"vmovp_seq_num\00", align 1
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 193, i32 12 }
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4155, i32 12 }
@___asan_gen_.665 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4412, i32 2 }
@___asan_gen_.671 = private unnamed_addr constant [14 x i8] c"its_vpeid_ida\00", align 1
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 196, i32 8 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4771, i32 4 }
@___asan_gen_.686 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.692 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.693 = private constant [36 x i8] c"../drivers/irqchip/irq-gic-v3-its.c\00", align 1
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.693, i32 4817, i32 4 }
@___asan_gen_.695 = private unnamed_addr constant [38 x i8] c"switch.table.its_vpe_irq_domain_alloc\00", align 1
@llvm.compiler.used = appending global [223 x ptr] [ptr @allocate_lpi_tables._entry, ptr @allocate_lpi_tables._entry.116, ptr @allocate_lpi_tables._entry_ptr, ptr @allocate_lpi_tables._entry_ptr.118, ptr @gic_check_reserved_range._entry, ptr @gic_check_reserved_range._entry_ptr, ptr @its_allocate_entry._entry, ptr @its_allocate_entry._entry_ptr, ptr @its_clear_vpend_valid._entry, ptr @its_clear_vpend_valid._entry_ptr, ptr @its_compute_its_list_map._entry, ptr @its_compute_its_list_map._entry.77, ptr @its_compute_its_list_map._entry_ptr, ptr @its_compute_its_list_map._entry_ptr.79, ptr @its_cpu_init_lpis._entry, ptr @its_cpu_init_lpis._entry.22, ptr @its_cpu_init_lpis._entry_ptr, ptr @its_cpu_init_lpis._entry_ptr.24, ptr @its_init._entry, ptr @its_init._entry.4, ptr @its_init._entry_ptr, ptr @its_init._entry_ptr.6, ptr @its_init_vpe_domain._entry, ptr @its_init_vpe_domain._entry.131, ptr @its_init_vpe_domain._entry.135, ptr @its_init_vpe_domain._entry_ptr, ptr @its_init_vpe_domain._entry_ptr.133, ptr @its_init_vpe_domain._entry_ptr.137, ptr @its_lpi_init._entry, ptr @its_lpi_init._entry_ptr, ptr @its_map_one._entry, ptr @its_map_one._entry.49, ptr @its_map_one._entry.52, ptr @its_map_one._entry_ptr, ptr @its_map_one._entry_ptr.51, ptr @its_map_one._entry_ptr.54, ptr @its_of_probe._entry, ptr @its_of_probe._entry.44, ptr @its_of_probe._entry_ptr, ptr @its_of_probe._entry_ptr.46, ptr @its_parse_indirect_baser._entry, ptr @its_parse_indirect_baser._entry_ptr, ptr @its_probe_one._entry, ptr @its_probe_one._entry.60, ptr @its_probe_one._entry.63, ptr @its_probe_one._entry.66, ptr @its_probe_one._entry.69, ptr @its_probe_one._entry.72, ptr @its_probe_one._entry_ptr, ptr @its_probe_one._entry_ptr.62, ptr @its_probe_one._entry_ptr.65, ptr @its_probe_one._entry_ptr.68, ptr @its_probe_one._entry_ptr.71, ptr @its_probe_one._entry_ptr.74, ptr @its_restore_enable._entry, ptr @its_restore_enable._entry_ptr, ptr @its_save_disable._entry, ptr @its_save_disable._entry_ptr, ptr @its_send_single_command._entry, ptr @its_send_single_command._entry_ptr, ptr @its_send_single_vcommand._entry, ptr @its_send_single_vcommand._entry_ptr, ptr @its_setup_baser._entry, ptr @its_setup_baser._entry.91, ptr @its_setup_baser._entry.94, ptr @its_setup_baser._entry_ptr, ptr @its_setup_baser._entry_ptr.93, ptr @its_setup_baser._entry_ptr.96, ptr @its_setup_lpi_prop_table._entry, ptr @its_setup_lpi_prop_table._entry.121, ptr @its_setup_lpi_prop_table._entry_ptr, ptr @its_setup_lpi_prop_table._entry_ptr.123, ptr @its_sgi_get_irqchip_state._entry, ptr @its_sgi_get_irqchip_state._entry_ptr, ptr @its_wait_for_range_completion._entry, ptr @its_wait_for_range_completion._entry_ptr, ptr @redist_disable_lpis._entry, ptr @redist_disable_lpis._entry.12, ptr @redist_disable_lpis._entry.15, ptr @redist_disable_lpis._entry.9, ptr @redist_disable_lpis._entry_ptr, ptr @redist_disable_lpis._entry_ptr.11, ptr @redist_disable_lpis._entry_ptr.14, ptr @redist_disable_lpis._entry_ptr.17, ptr @its_nodes, ptr @gic_rdists, ptr @its_parent, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @its_sgi_domain_ops, ptr @its_vpe_domain_ops, ptr @.str.5, ptr @its_syscore_ops, ptr @.str.7, ptr @.str.8, ptr @.str.10, ptr @.str.13, ptr @.str.16, ptr @lpi_id_bits, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.23, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @its_clear_vpend_valid._rs, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.35, ptr @its_lock, ptr @.str.36, ptr @its_send_single_command._rs, ptr @.str.37, ptr @its_allocate_entry._rs, ptr @.str.38, ptr @its_wait_for_range_completion._rs, ptr @.str.39, ptr @its_device_id, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.45, ptr @.str.47, ptr @.str.48, ptr @.str.50, ptr @.str.53, ptr @.str.55, ptr @.str.56, ptr @its_probe_one.__key, ptr @.str.57, ptr @its_probe_one.__key.58, ptr @.str.59, ptr @.str.61, ptr @.str.64, ptr @.str.67, ptr @.str.70, ptr @.str.73, ptr @its_list_map, ptr @.str.75, ptr @.str.76, ptr @.str.78, ptr @its_quirks, ptr @.str.80, ptr @.str.81, ptr @its_base_type_string, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.92, ptr @.str.95, ptr @.str.97, ptr @.str.98, ptr @its_domain_ops, ptr @its_msi_domain_ops, ptr @its_irq_chip, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @its_send_single_vcommand._rs, ptr @.str.102, ptr @.str.103, ptr @vmovp_lock, ptr @.str.104, ptr @lpi_range_lock, ptr @lpi_range_list, ptr @.str.105, ptr @.str.106, ptr @vpe_proxy, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @its_create_device.__key, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.117, ptr @.str.119, ptr @.str.120, ptr @.str.122, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @its_sgi_irq_chip, ptr @.str.127, ptr @find_4_1_its.its, ptr @its_sgi_get_irqchip_state._rs, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @its_init_vpe_domain.__key, ptr @.str.134, ptr @.str.136, ptr @its_vpe_irq_chip, ptr @its_vpe_4_1_irq_chip, ptr @.str.138, ptr @vmovp_seq_num, ptr @.str.139, ptr @its_vpe_init.__key, ptr @.str.140, ptr @its_vpeid_ida, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @switch.table.its_vpe_irq_domain_alloc], section "llvm.metadata"
@0 = internal global [181 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_nodes to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gic_rdists to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.158 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_parent to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_sgi_domain_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_vpe_domain_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init._entry.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_syscore_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @redist_disable_lpis._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @redist_disable_lpis._entry.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @redist_disable_lpis._entry.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @redist_disable_lpis._entry.15 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lpi_id_bits to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.218 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_cpu_init_lpis._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_cpu_init_lpis._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gic_check_reserved_range._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_clear_vpend_valid._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_clear_vpend_valid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_send_single_command._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_send_single_command._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_allocate_entry._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_allocate_entry._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_wait_for_range_completion._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_wait_for_range_completion._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_device_id to i32), i32 392, i32 512, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_of_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_of_probe._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_map_one._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_map_one._entry.49 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_map_one._entry.52 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one.__key.58 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry.63 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_probe_one._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_list_map to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_compute_its_list_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_compute_its_list_map._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_quirks to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_parse_indirect_baser._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_base_type_string to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_setup_baser._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_setup_baser._entry.91 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_setup_baser._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_domain_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_msi_domain_ops to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_irq_chip to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_send_single_vcommand._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_send_single_vcommand._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vmovp_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lpi_range_lock to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @lpi_range_list to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vpe_proxy to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_create_device.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @allocate_lpi_tables._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @allocate_lpi_tables._entry.116 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_setup_lpi_prop_table._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_setup_lpi_prop_table._entry.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_lpi_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_sgi_irq_chip to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_4_1_its.its to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_sgi_get_irqchip_state._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_sgi_get_irqchip_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init_vpe_domain._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init_vpe_domain._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init_vpe_domain.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_init_vpe_domain._entry.135 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_vpe_irq_chip to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_vpe_4_1_irq_chip to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.653 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @vmovp_seq_num to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.659 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_vpe_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_vpeid_ida to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.671 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_save_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @its_restore_enable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.686 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.692 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.its_vpe_irq_domain_alloc to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.695 to i32), i32 ptrtoint (ptr @___asan_gen_.693 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @its_cpu_init() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr @its_nodes, align 4
  %cmp.i.not = icmp eq ptr %0, @its_nodes
  br i1 %cmp.i.not, label %entry.return_crit_edge, label %if.then

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.then:                                          ; preds = %entry
  %1 = load ptr, ptr @gic_rdists, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %10, %4
  %11 = inttoptr i32 %add.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rd_base.i, align 4
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 8
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %add.ptr.i.i.i = getelementptr i8, ptr %13, i32 12
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #15, !srcloc !361
  %16 = and i32 %14, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not.i = icmp eq i32 %16, 0
  br i1 %tobool.i.not.i, label %if.then.cleanup_crit_edge, label %if.end.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %13) #15, !srcloc !361
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #15
  %19 = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.end.i.if.end_crit_edge, label %do.body14.i

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.body14.i:                                      ; preds = %if.end.i
  %20 = load ptr, ptr @gic_rdists, align 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %20, align 8
  %23 = ptrtoint ptr %22 to i32
  %24 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu.i, align 4
  %arrayidx24.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx24.i, align 4
  %add25.i = add i32 %27, %23
  %28 = inttoptr i32 %add25.i to ptr
  %flags.i = getelementptr inbounds %struct.anon, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %flags.i, align 8
  %and26.i = and i64 %30, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and26.i)
  %tobool27.not.i = icmp eq i64 %and26.i, 0
  br i1 %tobool27.not.i, label %lor.lhs.false.i, label %do.body14.i.if.end_crit_edge

do.body14.i.if.end_crit_edge:                     ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

lor.lhs.false.i:                                  ; preds = %do.body14.i
  %flags28.i = getelementptr inbounds %struct.rdists, ptr %20, i32 0, i32 3
  %31 = ptrtoint ptr %flags28.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %flags28.i, align 8
  %and29.i = and i64 %32, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and29.i)
  %tobool30.not.i = icmp eq i64 %and29.i, 0
  br i1 %tobool30.not.i, label %do.end35.i, label %lor.lhs.false.i.if.end_crit_edge

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end35.i:                                       ; preds = %lor.lhs.false.i
  %call39.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, i32 noundef %25) #18
  tail call void @add_taint(i32 noundef 10, i32 noundef 0) #15
  %and40.i = and i32 %18, -2
  %33 = tail call i32 @llvm.bswap.i32(i32 %and40.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %13, i32 %33) #15, !srcloc !362
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !363
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %13) #15, !srcloc !361
  %35 = and i32 %34, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool48.not82.i = icmp eq i32 %35, 0
  br i1 %tobool48.not82.i, label %do.end35.i.while.end.i_crit_edge, label %do.end35.i.while.body.i_crit_edge

do.end35.i.while.body.i_crit_edge:                ; preds = %do.end35.i
  br label %while.body.i

do.end35.i.while.end.i_crit_edge:                 ; preds = %do.end35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.body.i:                                     ; preds = %if.end58.i.while.body.i_crit_edge, %do.end35.i.while.body.i_crit_edge
  %timeout.083.i = phi i64 [ %dec.i, %if.end58.i.while.body.i_crit_edge ], [ 1000000, %do.end35.i.while.body.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %timeout.083.i)
  %tobool49.not.i = icmp eq i64 %timeout.083.i, 0
  br i1 %tobool49.not.i, label %while.body.i.cleanup_crit_edge, label %if.end58.i

while.body.i.cleanup_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end58.i:                                       ; preds = %while.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %36 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %36(i32 noundef 214748) #15
  %dec.i = add nsw i64 %timeout.083.i, -1
  %37 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %13) #15, !srcloc !361
  %38 = and i32 %37, 134217728
  %tobool48.not.i = icmp eq i32 %38, 0
  br i1 %tobool48.not.i, label %if.end58.i.while.end.i_crit_edge, label %if.end58.i.while.body.i_crit_edge

if.end58.i.while.body.i_crit_edge:                ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

if.end58.i.while.end.i_crit_edge:                 ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.end.i:                                      ; preds = %if.end58.i.while.end.i_crit_edge, %do.end35.i.while.end.i_crit_edge
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %13) #15, !srcloc !361
  %40 = and i32 %39, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool64.not.i = icmp eq i32 %40, 0
  br i1 %tobool64.not.i, label %while.end.i.if.end_crit_edge, label %while.end.i.cleanup_crit_edge

while.end.i.cleanup_crit_edge:                    ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

while.end.i.if.end_crit_edge:                     ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end:                                           ; preds = %while.end.i.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %do.body14.i.if.end_crit_edge, %if.end.i.if.end_crit_edge
  tail call fastcc void @its_cpu_init_lpis()
  tail call void @_raw_spin_lock(ptr noundef nonnull @its_lock) #15
  %.pn8.i = load ptr, ptr @its_nodes, align 4
  %cmp.not9.i = icmp eq ptr %.pn8.i, @its_nodes
  br i1 %cmp.not9.i, label %if.end.cleanup.thread_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.cleanup.thread_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.thread

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %.pn10.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn8.i, %if.end.for.body.i_crit_edge ]
  %its.0.i = getelementptr i8, ptr %.pn10.i, i32 -136
  tail call fastcc void @its_cpu_init_collection(ptr noundef %its.0.i) #15
  %41 = ptrtoint ptr %.pn10.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn.i = load ptr, ptr %.pn10.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp.not.i, label %for.body.i.cleanup.thread_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.body.i.cleanup.thread_crit_edge:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %for.body.i.cleanup.thread_crit_edge, %if.end.cleanup.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @its_lock) #15
  br label %return

cleanup:                                          ; preds = %while.end.i.cleanup_crit_edge, %while.body.i.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %.str.16.sink.i = phi ptr [ @.str.7, %if.then.cleanup_crit_edge ], [ @.str.16, %while.end.i.cleanup_crit_edge ], [ @.str.13, %while.body.i.cleanup_crit_edge ]
  %retval.0.ph.i = phi i32 [ -6, %if.then.cleanup_crit_edge ], [ -16, %while.end.i.cleanup_crit_edge ], [ -110, %while.body.i.cleanup_crit_edge ]
  %42 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu.i, align 4
  %call72.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.16.sink.i, i32 noundef %43) #18
  br label %return

return:                                           ; preds = %cleanup, %cleanup.thread, %entry.return_crit_edge
  %retval.1 = phi i32 [ %retval.0.ph.i, %cleanup ], [ 0, %cleanup.thread ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_cpu_init_lpis() unnamed_addr #0 align 64 {
entry:
  %paddr = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rd_base, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %paddr) #15
  %13 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %0, align 8
  %15 = ptrtoint ptr %14 to i32
  %add14 = add i32 %9, %15
  %16 = inttoptr i32 %add14 to ptr
  %flags = getelementptr inbounds %struct.anon, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %flags, align 8
  %and = and i64 %18, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %12) #15, !srcloc !361
  %20 = load ptr, ptr @gic_rdists, align 4
  %flags17 = getelementptr inbounds %struct.rdists, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %flags17 to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %flags17, align 8
  %and18 = and i64 %22, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and18)
  %tobool19.not = icmp eq i64 %and18, 0
  %23 = and i32 %19, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool21.not = icmp eq i32 %23, 0
  %or.cond = select i1 %tobool19.not, i1 true, i1 %tobool21.not
  br i1 %or.cond, label %do.body113, label %if.then22

if.then22:                                        ; preds = %if.end
  %add.ptr23 = getelementptr i8, ptr %12, i32 112
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr23) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %12, i32 116
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %26 = and i32 %24, 15794175
  %27 = call i32 @llvm.bswap.i32(i32 %26)
  %28 = load ptr, ptr @gic_rdists, align 4
  %prop_table_pa = getelementptr inbounds %struct.rdists, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %prop_table_pa to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %prop_table_pa, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %27)
  %cmp.not = icmp eq i32 %30, %27
  br i1 %cmp.not, label %if.then22.if.end57_crit_edge, label %do.end41, !prof !364

if.then22.if.end57_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57

do.end41:                                         ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3063, i32 noundef 9, ptr noundef null) #15
  tail call void @add_taint(i32 noundef 10, i32 noundef 0) #15
  br label %if.end57

if.end57:                                         ; preds = %do.end41, %if.then22.if.end57_crit_edge
  %add.ptr58 = getelementptr i8, ptr %12, i32 120
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr58) #15, !srcloc !361
  %add.ptr.i323 = getelementptr i8, ptr %12, i32 124
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i323) #15, !srcloc !361
  %33 = and i32 %31, 65535
  %34 = call i32 @llvm.bswap.i32(i32 %33)
  %35 = ptrtoint ptr %paddr to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %paddr, align 4
  %36 = load i32, ptr @lpi_id_bits, align 4
  %shl = shl nuw i32 1, %36
  %div322 = lshr i32 %shl, 3
  %add65 = add nuw nsw i32 %div322, 65535
  %and66 = and i32 %add65, 1073676288
  %call67 = tail call fastcc zeroext i1 @gic_check_reserved_range(i32 noundef %34, i32 noundef %and66)
  br i1 %call67, label %if.end57.if.end91_crit_edge, label %do.end85, !prof !364

if.end57.if.end91_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end91

do.end85:                                         ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3069, i32 noundef 9, ptr noundef null) #15
  br label %if.end91

if.end91:                                         ; preds = %do.end85, %if.end57.if.end91_crit_edge
  %37 = load ptr, ptr @gic_rdists, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 8
  %40 = ptrtoint ptr %39 to i32
  %41 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cpu, align 4
  %arrayidx109 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %42
  %43 = ptrtoint ptr %arrayidx109 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %arrayidx109, align 4
  %add110 = add i32 %44, %40
  %45 = inttoptr i32 %add110 to ptr
  %flags111 = getelementptr inbounds %struct.anon, ptr %45, i32 0, i32 4
  %46 = ptrtoint ptr %flags111 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %flags111, align 8
  %or = or i64 %47, 2
  store i64 %or, ptr %flags111, align 8
  br label %do.body250

do.body113:                                       ; preds = %if.end
  %48 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %20, align 8
  %50 = ptrtoint ptr %49 to i32
  %51 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %cpu, align 4
  %arrayidx123 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx123 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx123, align 4
  %add124 = add i32 %54, %50
  %55 = inttoptr i32 %add124 to ptr
  %pend_page125 = getelementptr inbounds %struct.anon, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %pend_page125 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %pend_page125, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %58 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %57 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %58 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %59 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add126 = add i32 %sub.ptr.div, %59
  %shl127 = shl i32 %add126, 12
  %60 = ptrtoint ptr %paddr to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %shl127, ptr %paddr, align 4
  %prop_table_pa128 = getelementptr inbounds %struct.rdists, ptr %20, i32 0, i32 1
  %61 = ptrtoint ptr %prop_table_pa128 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %prop_table_pa128, align 4
  %63 = load i32, ptr @lpi_id_bits, align 4
  %sub = add i32 %63, 31
  %and132 = and i32 %sub, 31
  %64 = or i32 %and132, %62
  %or134320 = or i32 %64, 1920
  %add.ptr135 = getelementptr i8, ptr %12, i32 112
  %65 = tail call i32 @llvm.bswap.i32(i32 %or134320) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr135, i32 %65) #15, !srcloc !362
  %add.ptr.i324 = getelementptr i8, ptr %12, i32 116
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i324, i32 0) #15, !srcloc !362
  %66 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr135) #15, !srcloc !361
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i324) #15, !srcloc !361
  %68 = call i32 @llvm.bswap.i32(i32 %66)
  %xor341 = xor i32 %68, %or134320
  %69 = and i32 %xor341, 3072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool139.not = icmp eq i32 %69, 0
  br i1 %tobool139.not, label %do.body113.if.end175_crit_edge, label %if.then140

do.body113.if.end175_crit_edge:                   ; preds = %do.body113
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end175

if.then140:                                       ; preds = %do.body113
  %70 = and i32 %68, 3072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool142.not = icmp eq i32 %70, 0
  br i1 %tobool142.not, label %if.then143, label %if.then140.land.end_crit_edge

if.then140.land.end_crit_edge:                    ; preds = %if.then140
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.end

if.then143:                                       ; preds = %if.then140
  call void @__sanitizer_cov_trace_pc() #17
  %and144 = and i32 %64, -3969
  %or145 = or i32 %and144, 128
  %71 = tail call i32 @llvm.bswap.i32(i32 %or145) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr135, i32 %71) #15, !srcloc !362
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i324, i32 0) #15, !srcloc !362
  br label %land.end

land.end:                                         ; preds = %if.then143, %if.then140.land.end_crit_edge
  %.b321 = load i1, ptr @its_cpu_init_lpis.__already_done, align 1
  br i1 %.b321, label %land.end.if.end165_crit_edge, label %if.then159, !prof !364

land.end.if.end165_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end165

if.then159:                                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @its_cpu_init_lpis.__already_done, align 1
  %call164 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18) #18
  br label %if.end165

if.end165:                                        ; preds = %if.then159, %land.end.if.end165_crit_edge
  %72 = load ptr, ptr @gic_rdists, align 4
  %flags173 = getelementptr inbounds %struct.rdists, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %flags173 to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %flags173, align 8
  %or174 = or i64 %74, 1
  store i64 %or174, ptr %flags173, align 8
  br label %if.end175

if.end175:                                        ; preds = %if.end165, %do.body113.if.end175_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %75 = load ptr, ptr @mem_map, align 4
  %sub.ptr.rhs.cast177 = ptrtoint ptr %75 to i32
  %sub.ptr.sub178 = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast177
  %sub.ptr.div179 = sdiv exact i32 %sub.ptr.sub178, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %76 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add180 = add i32 %sub.ptr.div179, %76
  %shl181 = shl i32 %add180, 12
  %77 = or i32 %shl181, 1920
  %add.ptr185 = getelementptr i8, ptr %12, i32 120
  %78 = tail call i32 @llvm.bswap.i32(i32 %77) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr185, i32 %78) #15, !srcloc !362
  %add.ptr.i331 = getelementptr i8, ptr %12, i32 124
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i331, i32 0) #15, !srcloc !362
  %79 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr185) #15, !srcloc !361
  %80 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i331) #15, !srcloc !361
  %81 = and i32 %79, 786432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool189.not = icmp eq i32 %81, 0
  br i1 %tobool189.not, label %if.then190, label %if.end175.if.end194_crit_edge

if.end175.if.end194_crit_edge:                    ; preds = %if.end175
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end194

if.then190:                                       ; preds = %if.end175
  call void @__sanitizer_cov_trace_pc() #17
  %82 = or i32 %shl181, 128
  %83 = tail call i32 @llvm.bswap.i32(i32 %82) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr185, i32 %83) #15, !srcloc !362
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i331, i32 0) #15, !srcloc !362
  br label %if.end194

if.end194:                                        ; preds = %if.then190, %if.end175.if.end194_crit_edge
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %12) #15, !srcloc !361
  %85 = or i32 %84, 16777216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %12, i32 %85) #15, !srcloc !362
  %86 = load ptr, ptr @gic_rdists, align 4
  %has_vlpis = getelementptr inbounds %struct.rdists, ptr %86, i32 0, i32 7
  %87 = ptrtoint ptr %has_vlpis to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %has_vlpis, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %88)
  %tobool203.not = icmp eq i8 %88, 0
  br i1 %tobool203.not, label %if.end194.if.end243_crit_edge, label %land.lhs.true205

if.end194.if.end243_crit_edge:                    ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end243

land.lhs.true205:                                 ; preds = %if.end194
  %has_rvpeid = getelementptr inbounds %struct.rdists, ptr %86, i32 0, i32 8
  %89 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %has_rvpeid, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool206.not = icmp eq i8 %90, 0
  br i1 %tobool206.not, label %if.then207, label %land.lhs.true205.if.end243_crit_edge

land.lhs.true205.if.end243_crit_edge:             ; preds = %land.lhs.true205
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end243

if.then207:                                       ; preds = %land.lhs.true205
  %91 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %86, align 8
  %93 = ptrtoint ptr %92 to i32
  %94 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %cpu, align 4
  %arrayidx218 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %95
  %96 = ptrtoint ptr %arrayidx218 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %arrayidx218, align 4
  %add219 = add i32 %97, %93
  %98 = inttoptr i32 %add219 to ptr
  %rd_base220 = getelementptr inbounds %struct.anon, ptr %98, i32 0, i32 1
  %99 = ptrtoint ptr %rd_base220 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %rd_base220, align 4
  %add.ptr221 = getelementptr i8, ptr %100, i32 131072
  %101 = load i32, ptr @lpi_id_bits, align 4
  %sub222 = add i32 %101, 31
  %and223 = and i32 %sub222, 31
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_cpu_init_lpis.__UNIQUE_ID_ddebug412, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_cpu_init_lpis, %if.then235)) #15
          to label %do.end240 [label %if.then235], !srcloc !366

if.then235:                                       ; preds = %if.then207
  call void @__sanitizer_cov_trace_pc() #17
  %conv224 = zext i32 %and223 to i64
  %102 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cpu, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_cpu_init_lpis.__UNIQUE_ID_ddebug412, ptr noundef nonnull @.str.21, i32 noundef %103, i64 noundef %conv224) #15
  br label %do.end240

do.end240:                                        ; preds = %if.then235, %if.then207
  %add.ptr241 = getelementptr i8, ptr %100, i32 131184
  %104 = shl nuw nsw i32 %and223, 24
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr241, i32 %104) #15, !srcloc !362
  %add.ptr.i339 = getelementptr i8, ptr %100, i32 131188
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i339, i32 0) #15, !srcloc !362
  %call242 = tail call fastcc i64 @its_clear_vpend_valid(ptr noundef %add.ptr221, i64 noundef 0, i64 noundef 0)
  br label %if.end243

if.end243:                                        ; preds = %do.end240, %land.lhs.true205.if.end243_crit_edge, %if.end194.if.end243_crit_edge
  %call244 = tail call fastcc i32 @allocate_vpe_l1_table()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call244)
  %tobool245.not = icmp eq i32 %call244, 0
  br i1 %tobool245.not, label %if.end243.if.end249_crit_edge, label %if.then246

if.end243.if.end249_crit_edge:                    ; preds = %if.end243
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end249

if.then246:                                       ; preds = %if.end243
  call void @__sanitizer_cov_trace_pc() #17
  %105 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid247 = getelementptr inbounds %struct.rdists, ptr %105, i32 0, i32 8
  %106 = ptrtoint ptr %has_rvpeid247 to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 0, ptr %has_rvpeid247, align 1
  %has_vlpis248 = getelementptr inbounds %struct.rdists, ptr %105, i32 0, i32 7
  %107 = ptrtoint ptr %has_vlpis248 to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 0, ptr %has_vlpis248, align 4
  br label %if.end249

if.end249:                                        ; preds = %if.then246, %if.end243.if.end249_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !367
  br label %do.body250

do.body250:                                       ; preds = %if.end249, %if.end91
  %108 = load ptr, ptr @gic_rdists, align 4
  %109 = ptrtoint ptr %108 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %108, align 8
  %111 = ptrtoint ptr %110 to i32
  %112 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %cpu, align 4
  %arrayidx260 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %113
  %114 = ptrtoint ptr %arrayidx260 to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx260, align 4
  %add261 = add i32 %115, %111
  %116 = inttoptr i32 %add261 to ptr
  %flags262 = getelementptr inbounds %struct.anon, ptr %116, i32 0, i32 4
  %117 = ptrtoint ptr %flags262 to i32
  call void @__asan_load8_noabort(i32 %117)
  %118 = load i64, ptr %flags262, align 8
  %or263 = or i64 %118, 1
  store i64 %or263, ptr %flags262, align 8
  %119 = load i32, ptr %cpu, align 4
  %120 = load ptr, ptr %108, align 8
  %121 = ptrtoint ptr %120 to i32
  %arrayidx280 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %119
  %122 = ptrtoint ptr %arrayidx280 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx280, align 4
  %add281 = add i32 %123, %121
  %124 = inttoptr i32 %add281 to ptr
  %flags282 = getelementptr inbounds %struct.anon, ptr %124, i32 0, i32 4
  %125 = ptrtoint ptr %flags282 to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %flags282, align 8
  %and283 = and i64 %126, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and283)
  %tobool284.not = icmp eq i64 %and283, 0
  %cond = select i1 %tobool284.not, ptr @.str.26, ptr @.str.25
  %call285 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, i32 noundef %119, ptr noundef nonnull %cond, ptr noundef nonnull %paddr) #18
  br label %cleanup

cleanup:                                          ; preds = %do.body250, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %paddr) #15
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @its_lpi_memreserve_init() local_unnamed_addr #2 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @its_init(ptr noundef %handle, ptr noundef %rdists, ptr noundef %parent_domain) local_unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  store ptr %rdists, ptr @gic_rdists, align 4
  store ptr %parent_domain, ptr @its_parent, align 4
  %tobool.not.i.i = icmp eq ptr %handle, null
  %cmp.i.i = icmp ugt ptr %handle, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i = or i1 %tobool.not.i.i, %cmp.i.i
  br i1 %spec.select.i.i, label %entry.if.end_crit_edge, label %is_of_node.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

is_of_node.exit:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.fwnode_handle, ptr %handle, i32 0, i32 1
  %0 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops.i, align 4
  %cmp.i = icmp ne ptr %1, @of_fwnode_ops
  %add.ptr = getelementptr i8, ptr %handle, i32 -12
  %tobool.not = icmp eq ptr %add.ptr, null
  %or.cond = or i1 %tobool.not, %cmp.i
  br i1 %or.cond, label %is_of_node.exit.if.end_crit_edge, label %if.then

is_of_node.exit.if.end_crit_edge:                 ; preds = %is_of_node.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %is_of_node.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_of_probe(ptr noundef nonnull %add.ptr) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %is_of_node.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %2 = load volatile ptr, ptr @its_nodes, align 4
  %cmp.i116.not = icmp eq ptr %2, @its_nodes
  br i1 %cmp.i116.not, label %do.end, label %if.end8

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.1) #18
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %call9 = tail call fastcc i32 @allocate_lpi_tables() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %for.cond.preheader, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end8
  %.pn122 = load ptr, ptr @its_nodes, align 4
  %cmp.not123 = icmp eq ptr %.pn122, @its_nodes
  br i1 %cmp.not123, label %for.cond.preheader.land.rhs_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.land.rhs_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %.pn126 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn122, %for.cond.preheader.for.body_crit_edge ]
  %has_v4.0.off0125 = phi i32 [ %or, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %has_v4_1.0.off0124 = phi i1 [ %tobool32, %for.body.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %typer = getelementptr i8, ptr %.pn126, i32 240
  %3 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %typer, align 8
  %5 = trunc i64 %4 to i32
  %6 = lshr i32 %5, 1
  %7 = and i32 %6, 1
  %or = or i32 %7, %has_v4.0.off0125
  %and23 = lshr i64 %4, 40
  %8 = trunc i64 %and23 to i32
  %9 = and i32 %8, 1
  %conv30 = zext i1 %has_v4_1.0.off0124 to i32
  %or31 = or i32 %9, %conv30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or31)
  %tobool32 = icmp ne i32 %or31, 0
  %10 = ptrtoint ptr %.pn126 to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn = load ptr, ptr %.pn126, align 4
  %cmp.not = icmp eq ptr %.pn, @its_nodes
  br i1 %cmp.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %for.body
  br i1 %tobool32, label %for.end.if.end72_crit_edge, label %for.end.land.rhs_crit_edge

for.end.land.rhs_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.rhs

for.end.if.end72_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end72

land.rhs:                                         ; preds = %for.end.land.rhs_crit_edge, %for.cond.preheader.land.rhs_crit_edge
  %has_v4.0.off0.lcssa132 = phi i32 [ %or, %for.end.land.rhs_crit_edge ], [ 0, %for.cond.preheader.land.rhs_crit_edge ]
  %has_rvpeid = getelementptr inbounds %struct.rdists, ptr %rdists, i32 0, i32 8
  %11 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %has_rvpeid, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool39.not = icmp eq i8 %12, 0
  br i1 %tobool39.not, label %land.rhs.if.end72_crit_edge, label %do.end55, !prof !364

land.rhs.if.end72_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end72

do.end55:                                         ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 5569, i32 noundef 9, ptr noundef null) #15
  %13 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %has_rvpeid, align 1
  br label %if.end72

if.end72:                                         ; preds = %do.end55, %land.rhs.if.end72_crit_edge, %for.end.if.end72_crit_edge
  %has_v4.0.off0.lcssa133 = phi i32 [ %or, %for.end.if.end72_crit_edge ], [ %has_v4.0.off0.lcssa132, %land.rhs.if.end72_crit_edge ], [ %has_v4.0.off0.lcssa132, %do.end55 ]
  %has_v4_1.0.off0.lcssa131 = phi ptr [ @its_sgi_domain_ops, %for.end.if.end72_crit_edge ], [ null, %land.rhs.if.end72_crit_edge ], [ null, %do.end55 ]
  %has_vlpis = getelementptr inbounds %struct.rdists, ptr %rdists, i32 0, i32 7
  %14 = ptrtoint ptr %has_vlpis to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %has_vlpis, align 4, !range !365
  %16 = zext i8 %15 to i32
  %and77 = and i32 %has_v4.0.off0.lcssa133, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.end72.if.end96_crit_edge, label %if.then79

if.end72.if.end96_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end96

if.then79:                                        ; preds = %if.end72
  %17 = load ptr, ptr @gic_rdists, align 4
  %has_direct_lpi.i = getelementptr inbounds %struct.rdists, ptr %17, i32 0, i32 9
  %18 = ptrtoint ptr %has_direct_lpi.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %has_direct_lpi.i, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool.not.i = icmp eq i8 %19, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #17
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.129) #18
  br label %lor.lhs.false

if.end.i:                                         ; preds = %if.then79
  %20 = load ptr, ptr @its_nodes, align 4
  %add.ptr.i = getelementptr i8, ptr %20, i32 -136
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i86.i = add i32 %21, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i86.i)
  %tobool.not.i.i.i.i = icmp eq i32 %sub.i86.i, 0
  %22 = tail call i32 @llvm.ctlz.i32(i32 %sub.i86.i, i1 true) #15, !range !368
  %sub.i.i.i.i = sub nuw nsw i32 32, %22
  %sub.i.i.op.i.i = shl nuw i32 1, %sub.i.i.i.i
  %shl.i.i = select i1 %tobool.not.i.i.i.i, i32 1, i32 %sub.i.i.op.i.i
  %23 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %shl.i.i, i32 4) #15
  %24 = extractvalue { i32, i1 } %23, 1
  br i1 %24, label %kcalloc.exit.thread.i, label %if.end7.i.i.i, !prof !369

kcalloc.exit.thread.i:                            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  br label %if.then88

if.end7.i.i.i:                                    ; preds = %if.end.i
  %25 = extractvalue { i32, i1 } %23, 0
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %25, i32 noundef 3520) #20
  store ptr %call8.i.i.i, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %tobool22.not.i = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool22.not.i, label %if.end7.i.i.i.if.then88_crit_edge, label %do.end39.i

if.end7.i.i.i.if.then88_crit_edge:                ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then88

do.end39.i:                                       ; preds = %if.end7.i.i.i
  %typer.i = getelementptr i8, ptr %20, i32 240
  %26 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %typer.i, align 8
  %28 = trunc i64 %27 to i32
  %29 = lshr i32 %28, 13
  %30 = and i32 %29, 31
  %sh_prom.i = xor i32 %30, 31
  %shr44.i = lshr i32 -1, %sh_prom.i
  %call47.i = tail call fastcc ptr @its_create_device(ptr noundef %add.ptr.i, i32 noundef %shr44.i, i32 noundef %shl.i.i, i1 noundef zeroext false) #15
  store ptr %call47.i, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %tobool48.not.i = icmp eq ptr %call47.i, null
  br i1 %tobool48.not.i, label %if.then49.i, label %do.body56.i

if.then49.i:                                      ; preds = %do.end39.i
  call void @__sanitizer_cov_trace_pc() #17
  %31 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  tail call void @kfree(ptr noundef %31) #15
  %call54.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132) #18
  br label %if.then88

do.body56.i:                                      ; preds = %do.end39.i
  %nr_ites.i = getelementptr inbounds %struct.its_device, ptr %call47.i, i32 0, i32 4
  %32 = ptrtoint ptr %nr_ites.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %nr_ites.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i.i, i32 %33)
  %cmp57.i = icmp ugt i32 %shl.i.i, %33
  br i1 %cmp57.i, label %do.body62.i, label %do.body71.i, !prof !369

do.body62.i:                                      ; preds = %do.body56.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/irqchip/irq-gic-v3-its.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4945, 0\0A.popsection", ""() #15, !srcloc !370
  unreachable

do.body71.i:                                      ; preds = %do.body56.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @__raw_spin_lock_init(ptr noundef nonnull @vpe_proxy, ptr noundef nonnull @.str.134, ptr noundef nonnull @its_init_vpe_domain.__key, i16 noundef signext 2) #15
  store i32 0, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %34 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %nr_ites78.i = getelementptr inbounds %struct.its_device, ptr %34, i32 0, i32 4
  %35 = ptrtoint ptr %nr_ites78.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nr_ites78.i, align 4
  %call79.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.136, i32 noundef %shr44.i, i32 noundef %36) #18
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.body71.i, %do.end.i
  %call86 = tail call i32 @its_init_v4(ptr noundef %parent_domain, ptr noundef nonnull @its_vpe_domain_ops, ptr noundef %has_v4_1.0.off0.lcssa131) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %lor.lhs.false.if.end96_crit_edge, label %lor.lhs.false.if.then88_crit_edge

lor.lhs.false.if.then88_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then88

lor.lhs.false.if.end96_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end96

if.then88:                                        ; preds = %lor.lhs.false.if.then88_crit_edge, %if.then49.i, %if.end7.i.i.i.if.then88_crit_edge, %kcalloc.exit.thread.i
  %37 = ptrtoint ptr %has_vlpis to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 0, ptr %has_vlpis, align 4
  %call94 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.5) #18
  br label %if.end96

if.end96:                                         ; preds = %if.then88, %lor.lhs.false.if.end96_crit_edge, %if.end72.if.end96_crit_edge
  tail call void @register_syscore_ops(ptr noundef nonnull @its_syscore_ops) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end96, %if.end8.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -6, %do.end ], [ 0, %if.end96 ], [ %call9, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_of_probe(ptr noundef %node) unnamed_addr #3 section ".init.text" align 64 {
entry:
  %res = alloca %struct.resource, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %res) #15
  %0 = call ptr @memset(ptr %res, i32 255, i32 32)
  %call.i = tail call ptr @of_find_matching_node_and_match(ptr noundef %node, ptr noundef nonnull @its_device_id, ptr noundef null) #15
  %tobool.not11 = icmp eq ptr %call.i, null
  br i1 %tobool.not11, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %np.012 = phi ptr [ %call.i2, %for.inc.for.body_crit_edge ], [ %call.i, %entry.for.body_crit_edge ]
  %call1 = call zeroext i1 @of_device_is_available(ptr noundef nonnull %np.012) #15
  br i1 %call1, label %lor.lhs.false, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %call.i1 = call ptr @of_find_property(ptr noundef nonnull %np.012, ptr noundef nonnull @.str.41, ptr noundef null) #15
  %tobool.i.not = icmp eq ptr %call.i1, null
  br i1 %tobool.i.not, label %lor.lhs.false.for.inc_crit_edge, label %lor.lhs.false3

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = call i32 @of_address_to_resource(ptr noundef nonnull %np.012, i32 noundef 0, ptr noundef nonnull %res) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end, label %lor.lhs.false3.for.inc_crit_edge

lor.lhs.false3.for.inc_crit_edge:                 ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = call fastcc i32 @its_reset_one(ptr noundef nonnull %res) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end.for.inc_crit_edge, label %if.end.cleanup36_crit_edge

if.end.cleanup36_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup36

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

for.inc:                                          ; preds = %if.end.for.inc_crit_edge, %lor.lhs.false3.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %call.i2 = call ptr @of_find_matching_node_and_match(ptr noundef nonnull %np.012, ptr noundef nonnull @its_device_id, ptr noundef null) #15
  %tobool.not = icmp eq ptr %call.i2, null
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %call.i3 = call ptr @of_find_matching_node_and_match(ptr noundef %node, ptr noundef nonnull @its_device_id, ptr noundef null) #15
  %tobool13.not13 = icmp eq ptr %call.i3, null
  br i1 %tobool13.not13, label %for.end.cleanup36_crit_edge, label %for.end.for.body14_crit_edge

for.end.for.body14_crit_edge:                     ; preds = %for.end
  br label %for.body14

for.end.cleanup36_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup36

for.body14:                                       ; preds = %for.inc33.for.body14_crit_edge, %for.end.for.body14_crit_edge
  %np.114 = phi ptr [ %call.i6, %for.inc33.for.body14_crit_edge ], [ %call.i3, %for.end.for.body14_crit_edge ]
  %call15 = call zeroext i1 @of_device_is_available(ptr noundef nonnull %np.114) #15
  br i1 %call15, label %if.end17, label %for.body14.for.inc33_crit_edge

for.body14.for.inc33_crit_edge:                   ; preds = %for.body14
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc33

if.end17:                                         ; preds = %for.body14
  %call.i4 = call ptr @of_find_property(ptr noundef nonnull %np.114, ptr noundef nonnull @.str.41, ptr noundef null) #15
  %tobool.i5.not = icmp eq ptr %call.i4, null
  br i1 %tobool.i5.not, label %do.end, label %if.end21

do.end:                                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  %call20 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42, ptr noundef nonnull %np.114) #18
  br label %for.inc33

if.end21:                                         ; preds = %if.end17
  %call22 = call i32 @of_address_to_resource(ptr noundef nonnull %np.114, i32 noundef 0, ptr noundef nonnull %res) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end30, label %do.end27

do.end27:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  %call29 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, ptr noundef nonnull %np.114) #18
  br label %for.inc33

if.end30:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  %fwnode = getelementptr inbounds %struct.device_node, ptr %np.114, i32 0, i32 3
  call fastcc void @its_probe_one(ptr noundef nonnull %res, ptr noundef %fwnode) #19
  br label %for.inc33

for.inc33:                                        ; preds = %if.end30, %do.end27, %do.end, %for.body14.for.inc33_crit_edge
  %call.i6 = call ptr @of_find_matching_node_and_match(ptr noundef nonnull %np.114, ptr noundef nonnull @its_device_id, ptr noundef null) #15
  %tobool13.not = icmp eq ptr %call.i6, null
  br i1 %tobool13.not, label %for.inc33.cleanup36_crit_edge, label %for.inc33.for.body14_crit_edge

for.inc33.for.body14_crit_edge:                   ; preds = %for.inc33
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body14

for.inc33.cleanup36_crit_edge:                    ; preds = %for.inc33
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup36

cleanup36:                                        ; preds = %for.inc33.cleanup36_crit_edge, %for.end.cleanup36_crit_edge, %if.end.cleanup36_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %res) #15
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @allocate_lpi_tables() unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu2 = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu2, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rd_base, align 4
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %12) #15, !srcloc !361
  %14 = and i32 %13, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not = icmp eq i32 %14, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %15 = load ptr, ptr @gic_rdists, align 4
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 8
  %18 = ptrtoint ptr %17 to i32
  %19 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 3
  %21 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %22
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %24, %18
  %25 = inttoptr i32 %add.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %rd_base.i, align 4
  %add.ptr.i = getelementptr i8, ptr %27, i32 112
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %add.ptr.i.i = getelementptr i8, ptr %27, i32 116
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %30 = and i32 %28, 15794175
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #15
  %32 = load i32, ptr @lpi_id_bits, align 4
  %shl.i = shl nuw i32 1, %32
  %add3.i = add nuw i32 %shl.i, 65535
  %and4.i = and i32 %add3.i, -65536
  %call5.i = tail call fastcc zeroext i1 @gic_check_reserved_range(i32 noundef %31, i32 noundef %and4.i) #15
  br i1 %call5.i, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %33 = load ptr, ptr @gic_rdists, align 4
  %flags = getelementptr inbounds %struct.rdists, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %flags, align 8
  %or = or i64 %35, 3
  store i64 %or, ptr %flags, align 8
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.114) #18
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call12 = tail call fastcc i32 @its_setup_lpi_prop_table() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %for.cond.preheader, label %if.end.cleanup38_crit_edge

if.end.cleanup38_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup38

for.cond.preheader:                               ; preds = %if.end
  %call1647 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %36 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1647, i32 %36)
  %cmp48 = icmp ult i32 %call1647, %36
  br i1 %cmp48, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.cleanup38_crit_edge

for.cond.preheader.cleanup38_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup38

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %if.end26.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %call1649 = phi i32 [ %call16, %if.end26.for.body_crit_edge ], [ %call1647, %for.cond.preheader.for.body_crit_edge ]
  %call18 = tail call fastcc ptr @its_allocate_pending_table(i32 noundef 2048)
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %do.end23, label %if.end26

do.end23:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117, i32 noundef %call1649) #18
  br label %cleanup38

if.end26:                                         ; preds = %for.body
  %37 = load ptr, ptr @gic_rdists, align 4
  %38 = ptrtoint ptr %37 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %37, align 8
  %40 = ptrtoint ptr %39 to i32
  %arrayidx35 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call1649
  %41 = ptrtoint ptr %arrayidx35 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx35, align 4
  %add36 = add i32 %42, %40
  %43 = inttoptr i32 %add36 to ptr
  %pend_page37 = getelementptr inbounds %struct.anon, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %pend_page37 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %call18, ptr %pend_page37, align 8
  %call16 = tail call i32 @cpumask_next(i32 noundef %call1649, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %45 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call16, %45
  br i1 %cmp, label %if.end26.for.body_crit_edge, label %if.end26.cleanup38_crit_edge

if.end26.cleanup38_crit_edge:                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup38

if.end26.for.body_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

cleanup38:                                        ; preds = %if.end26.cleanup38_crit_edge, %do.end23, %for.cond.preheader.cleanup38_crit_edge, %if.end.cleanup38_crit_edge
  %retval.2 = phi i32 [ %call12, %if.end.cleanup38_crit_edge ], [ -12, %do.end23 ], [ 0, %for.cond.preheader.cleanup38_crit_edge ], [ 0, %if.end26.cleanup38_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @its_init_v4(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @register_syscore_ops(ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_taint(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @gic_check_reserved_range(i32 noundef %addr, i32 noundef %size) unnamed_addr #0 align 64 {
entry:
  %addr.addr = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %addr_end = alloca i32, align 4
  %i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %addr.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %addr, ptr %addr.addr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %start) #15
  %1 = ptrtoint ptr %start to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %start, align 4, !annotation !371
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %end) #15
  %2 = ptrtoint ptr %end to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %end, align 4, !annotation !371
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addr_end) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %i) #15
  call void @__asan_load8_noabort(i32 ptrtoint (ptr @elfcorehdr_addr to i32))
  %3 = load i64, ptr @elfcorehdr_addr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %3)
  %cmp.i.not = icmp eq i64 %3, -1
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %addr, -1
  %sub = add i32 %add, %size
  %4 = ptrtoint ptr %addr_end to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %sub, ptr %addr_end, align 4
  %5 = ptrtoint ptr %i to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 0, ptr %i, align 8
  call void @__next_mem_range(ptr noundef nonnull %i, i32 noundef -1, i32 noundef 0, ptr noundef getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 3), ptr noundef null, ptr noundef nonnull %start, ptr noundef nonnull %end, ptr noundef null) #15
  %6 = ptrtoint ptr %i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %7)
  %cmp.not9 = icmp eq i64 %7, -1
  br i1 %cmp.not9, label %if.end.do.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %8 = ptrtoint ptr %addr.addr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %addr.addr, align 4
  %10 = ptrtoint ptr %start to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %start, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp1.not = icmp ult i32 %9, %11
  br i1 %cmp1.not, label %for.body.for.inc_crit_edge, label %land.lhs.true

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %12 = ptrtoint ptr %addr_end to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %addr_end, align 4
  %14 = ptrtoint ptr %end to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %end, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp2.not = icmp ugt i32 %13, %15
  br i1 %cmp2.not, label %land.lhs.true.for.inc_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  call void @__next_mem_range(ptr noundef nonnull %i, i32 noundef -1, i32 noundef 0, ptr noundef getelementptr inbounds (%struct.memblock, ptr @memblock, i32 0, i32 3), ptr noundef null, ptr noundef nonnull %start, ptr noundef nonnull %end, ptr noundef null) #15
  %16 = ptrtoint ptr %i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %i, align 8
  %cmp.not = icmp eq i64 %17, -1
  br i1 %cmp.not, label %for.inc.do.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.do.end_crit_edge:                         ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

do.end:                                           ; preds = %for.inc.do.end_crit_edge, %if.end.do.end_crit_edge
  %call5 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, ptr noundef nonnull %addr.addr, ptr noundef nonnull %addr_end) #18
  call void @add_taint(i32 noundef 10, i32 noundef 0) #15
  br label %cleanup

cleanup:                                          ; preds = %do.end, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %do.end ], [ true, %entry.cleanup_crit_edge ], [ true, %land.lhs.true.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addr_end) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %end) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %start) #15
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @its_clear_vpend_valid(ptr noundef %vlpi_base, i64 noundef %clr, i64 noundef %set) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %vlpi_base, i32 120
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %vlpi_base, i32 124
  %1 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %2 = zext i32 %0 to i64
  %3 = shl nuw i64 %2, 32
  %4 = and i32 %1, -129
  %.masked = zext i32 %4 to i64
  %5 = or i64 %3, %.masked
  %6 = tail call i64 @llvm.bswap.i64(i64 %5)
  %neg = xor i64 %clr, -1
  %and1 = and i64 %6, %neg
  %or = or i64 %and1, %set
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %8)
  %tobool.not.i = icmp sgt i32 %8, -1
  br i1 %tobool.not.i, label %entry.gicr_write_vpendbaser.exit_crit_edge, label %if.then.i

entry.gicr_write_vpendbaser.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %gicr_write_vpendbaser.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %and3.i = and i32 %8, 2147483647
  %9 = tail call i32 @llvm.bswap.i32(i32 %and3.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %9) #15, !srcloc !362
  br label %gicr_write_vpendbaser.exit

gicr_write_vpendbaser.exit:                       ; preds = %if.then.i, %entry.gicr_write_vpendbaser.exit_crit_edge
  %conv.i.i = trunc i64 %or to i32
  %10 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %10) #15, !srcloc !362
  %shr.i.i = lshr i64 %or, 32
  %conv1.i.i = trunc i64 %shr.i.i to i32
  %11 = tail call i32 @llvm.bswap.i32(i32 %conv1.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %11) #15, !srcloc !362
  br label %do.body

do.body:                                          ; preds = %do.cond14.do.body_crit_edge, %gicr_write_vpendbaser.exit
  %count.0 = phi i32 [ 1000000, %gicr_write_vpendbaser.exit ], [ %dec, %do.cond14.do.body_crit_edge ]
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %14 = zext i32 %13 to i64
  %15 = zext i32 %12 to i64
  %16 = shl nuw i64 %15, 32
  %17 = or i64 %16, %14
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #15
  %and5 = and i64 %18, 1152921504606846976
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5)
  %tobool.not = icmp eq i64 %and5, 0
  br i1 %tobool.not, label %do.body.if.end33_crit_edge, label %do.cond14

do.body.if.end33_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

do.cond14:                                        ; preds = %do.body
  %dec = add nsw i32 %count.0, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !372
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !373
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %19 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %19(i32 noundef 214748) #15
  %tobool16.not = icmp eq i32 %dec, 0
  br i1 %tobool16.not, label %if.then23, label %do.cond14.do.body_crit_edge

do.cond14.do.body_crit_edge:                      ; preds = %do.cond14
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body

if.then23:                                        ; preds = %do.cond14
  %call24 = tail call i32 @___ratelimit(ptr noundef nonnull @its_clear_vpend_valid._rs, ptr noundef nonnull @__func__.its_clear_vpend_valid) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.then23.if.end31_crit_edge, label %do.end29

if.then23.if.end31_crit_edge:                     ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end31

do.end29:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #17
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.30) #18
  br label %if.end31

if.end31:                                         ; preds = %do.end29, %if.then23.if.end31_crit_edge
  %or32 = or i64 %18, 2305843009213693952
  br label %if.end33

if.end33:                                         ; preds = %if.end31, %do.body.if.end33_crit_edge
  %val.0 = phi i64 [ %or32, %if.end31 ], [ %18, %do.body.if.end33_crit_edge ]
  ret i64 %val.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @allocate_vpe_l1_table() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 8
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rd_base, align 4
  %has_rvpeid = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 8
  %13 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %has_rvpeid, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not = icmp eq i8 %14, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr2 = getelementptr i8, ptr %12, i32 131192
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr2) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %12, i32 131196
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %17 = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool4.not = icmp eq i32 %17, 0
  br i1 %tobool4.not, label %if.end.do.body8_crit_edge, label %if.then5

if.end.do.body8_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body8

if.then5:                                         ; preds = %if.end
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %tobool.not.i444 = icmp sgt i32 %19, -1
  br i1 %tobool.not.i444, label %if.then5.gicr_write_vpendbaser.exit_crit_edge, label %if.then.i445

if.then5.gicr_write_vpendbaser.exit_crit_edge:    ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  br label %gicr_write_vpendbaser.exit

if.then.i445:                                     ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  %and3.i = and i32 %19, 2147483647
  %20 = tail call i32 @llvm.bswap.i32(i32 %and3.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %20) #15, !srcloc !362
  br label %gicr_write_vpendbaser.exit

gicr_write_vpendbaser.exit:                       ; preds = %if.then.i445, %if.then5.gicr_write_vpendbaser.exit_crit_edge
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr2, i32 0) #15, !srcloc !362
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 32) #15, !srcloc !362
  br label %do.body8

do.body8:                                         ; preds = %gicr_write_vpendbaser.exit, %if.end.do.body8_crit_edge
  %21 = load ptr, ptr @gic_rdists, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 8
  %24 = ptrtoint ptr %23 to i32
  %25 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu, align 4
  %arrayidx18 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %28, %24
  %29 = inttoptr i32 %add19 to ptr
  %vpe_table_mask = getelementptr inbounds %struct.anon, ptr %29, i32 0, i32 5
  %30 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i to ptr
  %cpu2.i = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %cpu2.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu2.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx.i, align 4
  %add.i447 = add i32 %35, %24
  %36 = inttoptr i32 %add.i447 to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rd_base.i, align 4
  %add.ptr.i448 = getelementptr i8, ptr %38, i32 8
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i448) #15, !srcloc !361
  %add.ptr.i.i = getelementptr i8, ptr %38, i32 12
  %40 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %41 = zext i32 %40 to i64
  %42 = zext i32 %39 to i64
  %43 = shl nuw i64 %42, 32
  %44 = or i64 %43, %41
  %45 = tail call i64 @llvm.bswap.i64(i64 %44) #15
  %shr.i.i = lshr i64 %45, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  %46 = trunc i64 %45 to i32
  %47 = lshr i32 %46, 21
  %mul.i.i = and i32 %47, 24
  %shr32.i.i = lshr i32 -1, %mul.i.i
  %neg.i.i = xor i32 %shr32.i.i, -1
  %and33.i.i = and i32 %neg.i.i, %conv.i.i
  %call585.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %48 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call585.i, i32 %48)
  %cmp86.i = icmp ult i32 %call585.i, %48
  br i1 %cmp86.i, label %do.body8.for.body.i_crit_edge, label %do.body8.if.end24_crit_edge

do.body8.if.end24_crit_edge:                      ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end24

do.body8.for.body.i_crit_edge:                    ; preds = %do.body8
  br label %for.body.i

for.body.i:                                       ; preds = %cleanup.i.for.body.i_crit_edge, %do.body8.for.body.i_crit_edge
  %call587.i = phi i32 [ %call5.i, %cleanup.i.for.body.i_crit_edge ], [ %call585.i, %do.body8.for.body.i_crit_edge ]
  %49 = load ptr, ptr @gic_rdists, align 4
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %52 = ptrtoint ptr %51 to i32
  %arrayidx14.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call587.i
  %53 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx14.i, align 4
  %add15.i = add i32 %54, %52
  %55 = inttoptr i32 %add15.i to ptr
  %rd_base16.i = getelementptr inbounds %struct.anon, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %rd_base16.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %rd_base16.i, align 4
  %tobool.not.i449 = icmp eq ptr %57, null
  br i1 %tobool.not.i449, label %for.body.i.cleanup.i_crit_edge, label %lor.lhs.false.i

for.body.i.cleanup.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %58 = ptrtoint ptr %cpu2.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %cpu2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call587.i, i32 %59)
  %cmp19.i = icmp eq i32 %call587.i, %59
  br i1 %cmp19.i, label %lor.lhs.false.i.cleanup.i_crit_edge, label %if.end.i450

lor.lhs.false.i.cleanup.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i

if.end.i450:                                      ; preds = %lor.lhs.false.i
  %add.ptr20.i = getelementptr i8, ptr %57, i32 8
  %60 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr20.i) #15, !srcloc !361
  %add.ptr.i75.i = getelementptr i8, ptr %57, i32 12
  %61 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i75.i) #15, !srcloc !361
  %62 = zext i32 %61 to i64
  %63 = zext i32 %60 to i64
  %64 = shl nuw i64 %63, 32
  %65 = or i64 %64, %62
  %66 = tail call i64 @llvm.bswap.i64(i64 %65) #15
  %shr.i76.i = lshr i64 %66, 32
  %conv.i77.i = trunc i64 %shr.i76.i to i32
  %67 = trunc i64 %66 to i32
  %68 = lshr i32 %67, 21
  %mul.i78.i = and i32 %68, 24
  %shr32.i79.i = lshr i32 -1, %mul.i78.i
  %neg.i80.i = xor i32 %shr32.i79.i, -1
  %and33.i81.i = and i32 %neg.i80.i, %conv.i77.i
  call void @__sanitizer_cov_trace_cmp4(i32 %and33.i.i, i32 %and33.i81.i)
  %cmp23.not.i = icmp eq i32 %and33.i.i, %and33.i81.i
  br i1 %cmp23.not.i, label %inherit_vpe_l1_table_from_rd.exit, label %if.end.i450.cleanup.i_crit_edge

if.end.i450.cleanup.i_crit_edge:                  ; preds = %if.end.i450
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.end.i450.cleanup.i_crit_edge, %lor.lhs.false.i.cleanup.i_crit_edge, %for.body.i.cleanup.i_crit_edge
  %call5.i = tail call i32 @cpumask_next(i32 noundef %call587.i, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %69 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i451 = icmp ult i32 %call5.i, %69
  br i1 %cmp.i451, label %cleanup.i.for.body.i_crit_edge, label %cleanup.i.if.end24_crit_edge

cleanup.i.if.end24_crit_edge:                     ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end24

cleanup.i.for.body.i_crit_edge:                   ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

inherit_vpe_l1_table_from_rd.exit:                ; preds = %if.end.i450
  %add.ptr27.i = getelementptr i8, ptr %57, i32 131184
  %70 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27.i) #15, !srcloc !361
  %add.ptr.i82.i = getelementptr i8, ptr %57, i32 131188
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i82.i) #15, !srcloc !361
  %72 = zext i32 %70 to i64
  %73 = shl nuw i64 %72, 32
  %74 = and i32 %71, -4097
  %.masked.i = zext i32 %74 to i64
  %75 = or i64 %73, %.masked.i
  %76 = tail call i64 @llvm.bswap.i64(i64 %75) #15
  %77 = load ptr, ptr @gic_rdists, align 4
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %77, align 8
  %80 = ptrtoint ptr %79 to i32
  %81 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx14.i, align 4
  %add38.i = add i32 %82, %80
  %83 = inttoptr i32 %add38.i to ptr
  %vpe_l1_base.i = getelementptr inbounds %struct.anon, ptr %83, i32 0, i32 6
  %84 = ptrtoint ptr %vpe_l1_base.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %vpe_l1_base.i, align 4
  %86 = ptrtoint ptr %cpu2.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %cpu2.i, align 4
  %arrayidx49.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %87
  %88 = ptrtoint ptr %arrayidx49.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %arrayidx49.i, align 4
  %add50.i = add i32 %89, %80
  %90 = inttoptr i32 %add50.i to ptr
  %vpe_l1_base51.i = getelementptr inbounds %struct.anon, ptr %90, i32 0, i32 6
  %91 = ptrtoint ptr %vpe_l1_base51.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %85, ptr %vpe_l1_base51.i, align 4
  %92 = load ptr, ptr %77, align 8
  %93 = ptrtoint ptr %92 to i32
  %94 = load i32, ptr %arrayidx14.i, align 4
  %add61.i = add i32 %94, %93
  %95 = inttoptr i32 %add61.i to ptr
  %vpe_table_mask.i = getelementptr inbounds %struct.anon, ptr %95, i32 0, i32 5
  %96 = ptrtoint ptr %vpe_table_mask.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %vpe_table_mask.i, align 8
  %98 = ptrtoint ptr %vpe_table_mask to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr %97, ptr %vpe_table_mask, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %76)
  %tobool22.not = icmp sgt i64 %76, -1
  br i1 %tobool22.not, label %inherit_vpe_l1_table_from_rd.exit.if.end24_crit_edge, label %inherit_vpe_l1_table_from_rd.exit.out_crit_edge

inherit_vpe_l1_table_from_rd.exit.out_crit_edge:  ; preds = %inherit_vpe_l1_table_from_rd.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

inherit_vpe_l1_table_from_rd.exit.if.end24_crit_edge: ; preds = %inherit_vpe_l1_table_from_rd.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end24

if.end24:                                         ; preds = %inherit_vpe_l1_table_from_rd.exit.if.end24_crit_edge, %cleanup.i.if.end24_crit_edge, %do.body8.if.end24_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %99 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %99, i32 noundef 2848, i32 noundef 4) #22
  %100 = load ptr, ptr @gic_rdists, align 4
  %101 = ptrtoint ptr %100 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %100, align 8
  %103 = ptrtoint ptr %102 to i32
  %104 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %cpu, align 4
  %arrayidx36 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %105
  %106 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %arrayidx36, align 4
  %add37 = add i32 %107, %103
  %108 = inttoptr i32 %add37 to ptr
  %vpe_table_mask38 = getelementptr inbounds %struct.anon, ptr %108, i32 0, i32 5
  %109 = ptrtoint ptr %vpe_table_mask38 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %call7.i.i, ptr %vpe_table_mask38, align 8
  %110 = load ptr, ptr %100, align 8
  %111 = ptrtoint ptr %110 to i32
  %112 = load i32, ptr %cpu, align 4
  %arrayidx49 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %112
  %113 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %arrayidx49, align 4
  %add50 = add i32 %114, %111
  %115 = inttoptr i32 %add50 to ptr
  %vpe_table_mask51 = getelementptr inbounds %struct.anon, ptr %115, i32 0, i32 5
  %116 = ptrtoint ptr %vpe_table_mask51 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %vpe_table_mask51, align 8
  %tobool52.not = icmp eq ptr %117, null
  br i1 %tobool52.not, label %if.end24.cleanup_crit_edge, label %if.end54

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end54:                                         ; preds = %if.end24
  %118 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i452 = and i32 %118, -16384
  %119 = inttoptr i32 %and.i.i452 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %119, i32 0, i32 3
  %120 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %cpu.i, align 4
  %arrayidx.i453 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %121
  %122 = ptrtoint ptr %arrayidx.i453 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %arrayidx.i453, align 4
  %add.i454 = add i32 %123, %111
  %124 = inttoptr i32 %add.i454 to ptr
  %rd_base.i455 = getelementptr inbounds %struct.anon, ptr %124, i32 0, i32 1
  %125 = ptrtoint ptr %rd_base.i455 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %rd_base.i455, align 4
  %add.ptr.i456 = getelementptr i8, ptr %126, i32 8
  %127 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i456) #15, !srcloc !361
  %add.ptr.i.i457 = getelementptr i8, ptr %126, i32 12
  %128 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i457) #15, !srcloc !361
  %129 = zext i32 %128 to i64
  %130 = zext i32 %127 to i64
  %131 = shl nuw i64 %130, 32
  %132 = or i64 %131, %129
  %133 = tail call i64 @llvm.bswap.i64(i64 %132) #15
  %shr.i.i458 = lshr i64 %133, 32
  %conv.i.i459 = trunc i64 %shr.i.i458 to i32
  %134 = trunc i64 %133 to i32
  %135 = lshr i32 %134, 21
  %mul.i.i460 = and i32 %135, 24
  %shr32.i.i461 = lshr i32 -1, %mul.i.i460
  %neg.i.i462 = xor i32 %shr32.i.i461, -1
  %and33.i.i463 = and i32 %neg.i.i462, %conv.i.i459
  %.pn290.i = load ptr, ptr @its_nodes, align 4
  %cmp.not291.i = icmp eq ptr %.pn290.i, @its_nodes
  br i1 %cmp.not291.i, label %if.end54.do.end74_crit_edge, label %if.end54.for.body.i466_crit_edge

if.end54.for.body.i466_crit_edge:                 ; preds = %if.end54
  br label %for.body.i466

if.end54.do.end74_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end74

for.body.i466:                                    ; preds = %cleanup.i469.for.body.i466_crit_edge, %if.end54.for.body.i466_crit_edge
  %.pn292.i = phi ptr [ %.pn.i, %cleanup.i469.for.body.i466_crit_edge ], [ %.pn290.i, %if.end54.for.body.i466_crit_edge ]
  %typer.i = getelementptr i8, ptr %.pn292.i, i32 240
  %136 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %136)
  %137 = load i64, ptr %typer.i, align 8
  %and.i464 = and i64 %137, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i464)
  %tobool.not.i465 = icmp eq i64 %and.i464, 0
  %138 = and i64 %137, 6597069766656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %138)
  %tobool25.not.i = icmp eq i64 %138, 0
  %or.cond286.i = or i1 %tobool.not.i465, %tobool25.not.i
  br i1 %or.cond286.i, label %for.body.i466.cleanup.i469_crit_edge, label %if.end27.i

for.body.i466.cleanup.i469_crit_edge:             ; preds = %for.body.i466
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i469

if.end27.i:                                       ; preds = %for.body.i466
  %mpidr.i.i = getelementptr i8, ptr %.pn292.i, i32 260
  %139 = ptrtoint ptr %mpidr.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %mpidr.i.i, align 4
  %sum.shift.i.i = lshr i64 %137, 38
  %141 = trunc i64 %sum.shift.i.i to i32
  %142 = and i32 %141, 24
  %shr32.i.i.i = lshr i32 -1, %142
  %neg.i.i.i = xor i32 %shr32.i.i.i, -1
  %and33.i.i.i = and i32 %140, %neg.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %and33.i.i463, i32 %and33.i.i.i)
  %cmp29.not.i = icmp eq i32 %and33.i.i463, %and33.i.i.i
  br i1 %cmp29.not.i, label %if.end31.i, label %if.end27.i.cleanup.i469_crit_edge

if.end27.i.cleanup.i469_crit_edge:                ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i469

if.end31.i:                                       ; preds = %if.end27.i
  %val33.i = getelementptr i8, ptr %.pn292.i, i32 88
  %143 = ptrtoint ptr %val33.i to i32
  call void @__asan_load8_noabort(i32 %143)
  %144 = load i64, ptr %val33.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %144)
  %tobool35.not.i = icmp sgt i64 %144, -1
  br i1 %tobool35.not.i, label %if.end31.i.cleanup.i469_crit_edge, label %if.end37.i

if.end31.i.cleanup.i469_crit_edge:                ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup.i469

if.end37.i:                                       ; preds = %if.end31.i
  %arrayidx32.i = getelementptr i8, ptr %.pn292.i, i32 80
  %145 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %arrayidx32.i, align 8
  %147 = load ptr, ptr @gic_rdists, align 4
  %148 = ptrtoint ptr %147 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %147, align 8
  %150 = ptrtoint ptr %149 to i32
  %151 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %cpu.i, align 4
  %arrayidx50.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %152
  %153 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %arrayidx50.i, align 4
  %add51.i = add i32 %154, %150
  %155 = inttoptr i32 %add51.i to ptr
  %vpe_l1_base.i467 = getelementptr inbounds %struct.anon, ptr %155, i32 0, i32 6
  %156 = ptrtoint ptr %vpe_l1_base.i467 to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %146, ptr %vpe_l1_base.i467, align 4
  %and52.i = and i64 %144, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and52.i)
  %tobool53.not.i = icmp eq i64 %and52.i, 0
  %spec.select.i = select i1 %tobool53.not.i, i64 -9223372036854775808, i64 -9187343239835811840
  %and88.i = lshr i64 %144, 8
  %shr89.i = and i64 %and88.i, 3
  %shl.i = shl nuw nsw i64 %shr89.i, 53
  %or91.i = or i64 %spec.select.i, %shl.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 2, i64 %shr89.i)
  %cond257.i = icmp eq i64 %shr89.i, 2
  br i1 %cond257.i, label %sw.bb.i, label %sw.default.i

sw.bb.i:                                          ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  %and110.i = and i64 %144, 281474976645120
  %157 = shl i64 %144, 36
  %shl113.i = and i64 %157, 4222124650659840
  %or114.i = or i64 %shl113.i, %and110.i
  br label %inherit_vpe_l1_table_from_its.exit

sw.default.i:                                     ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  %and115.i = and i64 %144, 281474976706560
  br label %inherit_vpe_l1_table_from_its.exit

cleanup.i469:                                     ; preds = %if.end31.i.cleanup.i469_crit_edge, %if.end27.i.cleanup.i469_crit_edge, %for.body.i466.cleanup.i469_crit_edge
  %158 = ptrtoint ptr %.pn292.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %.pn.i = load ptr, ptr %.pn292.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp.not.i, label %cleanup.i469.do.end74_crit_edge, label %cleanup.i469.for.body.i466_crit_edge

cleanup.i469.for.body.i466_crit_edge:             ; preds = %cleanup.i469
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i466

cleanup.i469.do.end74_crit_edge:                  ; preds = %cleanup.i469
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end74

inherit_vpe_l1_table_from_its.exit:               ; preds = %sw.default.i, %sw.bb.i
  %addr.0.i = phi i64 [ %or114.i, %sw.bb.i ], [ %and115.i, %sw.default.i ]
  %and140.i = and i64 %addr.0.i, 4503599627366400
  %or141.i = or i64 %and140.i, %or91.i
  %shr175.i = and i64 %144, 3072
  %or178.i = or i64 %or141.i, %shr175.i
  %159 = lshr i64 %144, 52
  %shl213.i = and i64 %159, 896
  %or215.i = or i64 %or178.i, %shl213.i
  %and247.i = and i64 %144, 127
  %or248.i = or i64 %or215.i, %and247.i
  br label %out

do.end74:                                         ; preds = %cleanup.i469.do.end74_crit_edge, %if.end54.do.end74_crit_edge
  %add.ptr76 = getelementptr i8, ptr %12, i32 131184
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr76, i32 0) #15, !srcloc !362
  %add.ptr.i471 = getelementptr i8, ptr %12, i32 131188
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i471, i32 16384) #15, !srcloc !362
  %160 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr76) #15, !srcloc !361
  %161 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i471) #15, !srcloc !361
  %162 = zext i32 %161 to i64
  %163 = tail call i64 @llvm.bswap.i64(i64 %162) #15
  %and95 = lshr i64 %163, 53
  %and112 = lshr i64 %163, 59
  %164 = trunc i64 %and112 to i32
  %conv = and i32 %164, 7
  %trunc = trunc i64 %and95 to i2
  %165 = zext i2 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %165, ptr @__sancov_gen_cov_switch_values)
  switch i2 %trunc, label %do.end74.sw.epilog_crit_edge [
    i2 -2, label %sw.bb115
    i2 1, label %sw.bb114
  ]

do.end74.sw.epilog_crit_edge:                     ; preds = %do.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb114:                                         ; preds = %do.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb115:                                         ; preds = %do.end74
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb115, %sw.bb114, %do.end74.sw.epilog_crit_edge
  %psz.0 = phi i32 [ 65536, %sw.bb115 ], [ 16384, %sw.bb114 ], [ 4096, %do.end74.sw.epilog_crit_edge ]
  %gpsz.1 = phi i64 [ 18014398509481984, %sw.bb115 ], [ 9007199254740992, %sw.bb114 ], [ 0, %do.end74.sw.epilog_crit_edge ]
  %conv160 = zext i32 %conv to i64
  %shl161 = shl nuw nsw i64 %conv160, 59
  %or163 = or i64 %gpsz.1, %shl161
  %inc = add nuw nsw i32 %conv, 1
  %mul = shl nuw nsw i32 %inc, 3
  %div = udiv i32 %psz.0, %mul
  %166 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid164 = getelementptr inbounds %struct.rdists, ptr %166, i32 0, i32 8
  %167 = ptrtoint ptr %has_rvpeid164 to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %has_rvpeid164, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %168)
  %tobool165.not = icmp eq i8 %168, 0
  br i1 %tobool165.not, label %sw.epilog.if.end191_crit_edge, label %land.lhs.true

sw.epilog.if.end191_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end191

land.lhs.true:                                    ; preds = %sw.epilog
  %gicd_typer2 = getelementptr inbounds %struct.rdists, ptr %166, i32 0, i32 5
  %169 = ptrtoint ptr %gicd_typer2 to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %gicd_typer2, align 4
  %and167 = and i32 %170, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and167)
  %tobool168.not = icmp eq i32 %and167, 0
  %and171 = and i32 %170, 31
  %add172 = add nuw nsw i32 %and171, 1
  %nvpeid.0 = select i1 %tobool168.not, i32 16, i32 %add172
  %div.highbits = lshr i32 %div, %nvpeid.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %div.highbits)
  %cmp = icmp eq i32 %div.highbits, 0
  br i1 %cmp, label %land.lhs.true183.critedge, label %land.lhs.true.do.end224_crit_edge

land.lhs.true.do.end224_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end224

land.lhs.true183.critedge:                        ; preds = %land.lhs.true
  %171 = ptrtoint ptr %gicd_typer2 to i32
  call void @__asan_load4_noabort(i32 %171)
  %172 = load i32, ptr %gicd_typer2, align 4
  %and185 = and i32 %172, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and185)
  %tobool186.not = icmp eq i32 %and185, 0
  br i1 %tobool186.not, label %land.lhs.true183.critedge.if.end191_crit_edge, label %if.then187

land.lhs.true183.critedge.if.end191_crit_edge:    ; preds = %land.lhs.true183.critedge
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end191

if.then187:                                       ; preds = %land.lhs.true183.critedge
  call void @__sanitizer_cov_trace_pc() #17
  %and189 = and i32 %172, 31
  %add190 = add nuw nsw i32 %and189, 1
  br label %if.end191

if.end191:                                        ; preds = %if.then187, %land.lhs.true183.critedge.if.end191_crit_edge, %sw.epilog.if.end191_crit_edge
  %nvpeid179.0 = phi i32 [ %add190, %if.then187 ], [ 16, %land.lhs.true183.critedge.if.end191_crit_edge ], [ 16, %sw.epilog.if.end191_crit_edge ]
  %or178483 = or i64 %or163, 36028797018963968
  %shl193 = shl nuw i32 1, %nvpeid179.0
  %add194 = add nsw i32 %div, -1
  %sub = add i32 %add194, %shl193
  %div195 = udiv i32 %sub, %div
  %mul196 = shl nuw nsw i32 %div195, 3
  %add197 = add nsw i32 %psz.0, -1
  %sub198 = add nuw nsw i32 %add197, %mul196
  %div199 = udiv i32 %sub198, %psz.0
  %conv200 = zext i32 %div199 to i64
  br label %do.end224

do.end224:                                        ; preds = %if.end191, %land.lhs.true.do.end224_crit_edge
  %npg.0 = phi i64 [ %conv200, %if.end191 ], [ 1, %land.lhs.true.do.end224_crit_edge ]
  %val.0 = phi i64 [ %or178483, %if.end191 ], [ %or163, %land.lhs.true.do.end224_crit_edge ]
  %sub209 = add nuw nsw i64 %npg.0, 127
  %and228 = and i64 %sub209, 127
  %conv230 = zext i32 %psz.0 to i64
  %mul231 = mul nuw nsw i64 %npg.0, %conv230
  %div234438 = lshr exact i64 %mul231, 12
  %conv235 = trunc i64 %div234438 to i32
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @allocate_vpe_l1_table.__UNIQUE_ID_ddebug405, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@allocate_vpe_l1_table, %if.then242)) #15
          to label %get_order.exit [label %if.then242], !srcloc !366

if.then242:                                       ; preds = %do.end224
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @allocate_vpe_l1_table.__UNIQUE_ID_ddebug405, ptr noundef nonnull @.str.32, i32 noundef %conv235, i64 noundef %npg.0, i32 noundef %psz.0, i32 noundef %div, i32 noundef %inc) #15
  br label %get_order.exit

get_order.exit:                                   ; preds = %if.then242, %do.end224
  %mul246 = shl i32 %conv235, 12
  %dec.i = add i32 %mul246, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %dec.i)
  %tobool.not.i.i = icmp eq i32 %dec.i, 4095
  %shr.i = lshr i32 %dec.i, 12
  %173 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #15, !range !368
  %sub.i.i = sub nuw nsw i32 32, %173
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef 2848, i32 noundef %cond.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool249.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool249.not, label %get_order.exit.cleanup_crit_edge, label %if.end251

get_order.exit.cleanup_crit_edge:                 ; preds = %get_order.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end251:                                        ; preds = %get_order.exit
  %call252 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #15
  %174 = load ptr, ptr @gic_rdists, align 4
  %175 = ptrtoint ptr %174 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %174, align 8
  %177 = ptrtoint ptr %176 to i32
  %178 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load i32, ptr %cpu, align 4
  %arrayidx263 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %179
  %180 = ptrtoint ptr %arrayidx263 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load i32, ptr %arrayidx263, align 4
  %add264 = add i32 %181, %177
  %182 = inttoptr i32 %add264 to ptr
  %vpe_l1_base = getelementptr inbounds %struct.anon, ptr %182, i32 0, i32 6
  %183 = ptrtoint ptr %vpe_l1_base to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr %call252, ptr %vpe_l1_base, align 4
  %call265 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #15
  %184 = ptrtoint ptr %call265 to i32
  %call.i = tail call i32 @__virt_to_phys(i32 noundef %184) #15
  %conv267 = zext i32 %call.i to i64
  %sub269 = add nuw nsw i64 %conv230, 4294967295
  %and270 = and i64 %sub269, %conv267
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and270)
  %cmp271.not = icmp eq i64 %and270, 0
  br i1 %cmp271.not, label %if.end251.if.end296_crit_edge, label %do.end290, !prof !364

if.end251.if.end296_crit_edge:                    ; preds = %if.end251
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end296

do.end290:                                        ; preds = %if.end251
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2904, i32 noundef 9, ptr noundef null) #15
  br label %if.end296

if.end296:                                        ; preds = %do.end290, %if.end251.if.end296_crit_edge
  %shl329 = and i64 %conv267, 4294963200
  %or229 = or i64 %val.0, %and228
  %or331 = or i64 %or229, %shl329
  %or335 = or i64 %or331, -9218868437227403904
  br label %out

out:                                              ; preds = %if.end296, %inherit_vpe_l1_table_from_its.exit, %inherit_vpe_l1_table_from_rd.exit.out_crit_edge
  %val.1 = phi i64 [ %76, %inherit_vpe_l1_table_from_rd.exit.out_crit_edge ], [ %or248.i, %inherit_vpe_l1_table_from_its.exit ], [ %or335, %if.end296 ]
  %add.ptr336 = getelementptr i8, ptr %12, i32 131184
  %conv.i = trunc i64 %val.1 to i32
  %185 = tail call i32 @llvm.bswap.i32(i32 %conv.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr336, i32 %185) #15, !srcloc !362
  %shr.i473 = lshr i64 %val.1, 32
  %conv1.i = trunc i64 %shr.i473 to i32
  %186 = tail call i32 @llvm.bswap.i32(i32 %conv1.i) #15
  %add.ptr.i474 = getelementptr i8, ptr %12, i32 131188
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i474, i32 %186) #15, !srcloc !362
  %187 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load i32, ptr %cpu, align 4
  %189 = load ptr, ptr @gic_rdists, align 4
  %190 = ptrtoint ptr %189 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %189, align 8
  %192 = ptrtoint ptr %191 to i32
  %arrayidx349 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %188
  %193 = ptrtoint ptr %arrayidx349 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %arrayidx349, align 4
  %add350 = add i32 %194, %192
  %195 = inttoptr i32 %add350 to ptr
  %vpe_table_mask351 = getelementptr inbounds %struct.anon, ptr %195, i32 0, i32 5
  %196 = ptrtoint ptr %vpe_table_mask351 to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %vpe_table_mask351, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %198 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %198, i32 %188)
  %cmp.not.i.i.i = icmp ugt i32 %198, %188
  br i1 %cmp.not.i.i.i, label %out.cpumask_set_cpu.exit_crit_edge, label %land.rhs.i.i.i

out.cpumask_set_cpu.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_set_cpu.exit

land.rhs.i.i.i:                                   ; preds = %out
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_set_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !364

land.rhs.i.i.i.cpumask_set_cpu.exit_crit_edge:    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_set_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.35, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpumask_set_cpu.exit

cpumask_set_cpu.exit:                             ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_set_cpu.exit_crit_edge, %out.cpumask_set_cpu.exit_crit_edge
  tail call void @_set_bit(i32 noundef %188, ptr noundef %197) #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @allocate_vpe_l1_table.__UNIQUE_ID_ddebug411, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@allocate_vpe_l1_table, %if.then364)) #15
          to label %cleanup [label %if.then364], !srcloc !366

if.then364:                                       ; preds = %cpumask_set_cpu.exit
  call void @__sanitizer_cov_trace_pc() #17
  %199 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %201 = load i32, ptr @nr_cpu_ids, align 4
  %202 = load ptr, ptr @gic_rdists, align 4
  %203 = ptrtoint ptr %202 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %202, align 8
  %205 = ptrtoint ptr %204 to i32
  %arrayidx377 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %200
  %206 = ptrtoint ptr %arrayidx377 to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %arrayidx377, align 4
  %add378 = add i32 %207, %205
  %208 = inttoptr i32 %add378 to ptr
  %vpe_table_mask379 = getelementptr inbounds %struct.anon, ptr %208, i32 0, i32 5
  %209 = ptrtoint ptr %vpe_table_mask379 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %vpe_table_mask379, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @allocate_vpe_l1_table.__UNIQUE_ID_ddebug411, ptr noundef nonnull @.str.33, i32 noundef %200, i64 noundef %val.1, i32 noundef %201, ptr noundef %210) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then364, %cpumask_set_cpu.exit, %get_order.exit.cleanup_crit_edge, %if.end24.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -12, %if.end24.cleanup_crit_edge ], [ -12, %get_order.exit.cleanup_crit_edge ], [ 0, %if.then364 ], [ 0, %cpumask_set_cpu.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__next_mem_range(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__virt_to_phys(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_cpu_init_collection(ptr noundef %its) unnamed_addr #0 align 64 {
entry:
  %desc.i59 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu1 = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu1, align 4
  %flags = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 17
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flags, align 8
  %and = and i64 %5, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.then:                                          ; preds = %entry
  %call2 = tail call ptr @of_get_cpu_node(i32 noundef %3, ptr noundef null) #15
  %numa_node = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 19
  %6 = ptrtoint ptr %numa_node to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %numa_node, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.not = icmp eq i32 %7, -1
  br i1 %cmp.not, label %if.then.if.end7_crit_edge, label %if.then.cleanup39_crit_edge

if.then.cleanup39_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup39

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7

if.end7:                                          ; preds = %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  %base = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 3
  %8 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %base, align 8
  %add.ptr = getelementptr i8, ptr %9, i32 8
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %9, i32 12
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %12 = and i32 %10, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool10.not = icmp eq i32 %12, 0
  %13 = load ptr, ptr @gic_rdists, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  %16 = ptrtoint ptr %15 to i32
  %17 = ptrtoint ptr %cpu1 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %cpu1, align 4
  %arrayidx25 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %18
  %19 = ptrtoint ptr %arrayidx25 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx25, align 4
  %add26 = add i32 %20, %16
  %21 = inttoptr i32 %add26 to ptr
  br i1 %tobool10.not, label %do.body15, label %do.body

do.body:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  %phys_base = getelementptr inbounds %struct.anon, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %phys_base to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %phys_base, align 4
  %conv = zext i32 %23 to i64
  br label %if.end30

do.body15:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #17
  %rd_base = getelementptr inbounds %struct.anon, ptr %21, i32 0, i32 1
  %24 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rd_base, align 4
  %add.ptr27 = getelementptr i8, ptr %25, i32 8
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr27) #15, !srcloc !361
  %add.ptr.i58 = getelementptr i8, ptr %25, i32 12
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i58) #15, !srcloc !361
  %28 = call i32 @llvm.bswap.i32(i32 %26)
  %29 = zext i32 %28 to i64
  %30 = shl nuw nsw i64 %29, 8
  %shl = and i64 %30, 4294901760
  br label %if.end30

if.end30:                                         ; preds = %do.body15, %do.body
  %target.0 = phi i64 [ %conv, %do.body ], [ %shl, %do.body15 ]
  %collections = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %31 = ptrtoint ptr %collections to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %collections, align 8
  %arrayidx31 = getelementptr %struct.its_collection, ptr %32, i32 %3
  %33 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %target.0, ptr %arrayidx31, align 8
  %conv32 = trunc i32 %3 to i16
  %34 = load ptr, ptr %collections, align 8
  %col_id = getelementptr %struct.its_collection, ptr %34, i32 %3, i32 1
  %35 = ptrtoint ptr %col_id to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %conv32, ptr %col_id, align 8
  %36 = load ptr, ptr %collections, align 8
  %arrayidx36 = getelementptr %struct.its_collection, ptr %36, i32 %3
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %37 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %38 = call ptr @memset(ptr %37, i32 255, i32 12)
  %39 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %arrayidx36, ptr %desc.i, align 4
  %valid3.i = getelementptr inbounds %struct.anon.92, ptr %desc.i, i32 0, i32 1
  %40 = ptrtoint ptr %valid3.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 1, ptr %valid3.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %its, ptr noundef nonnull @its_build_mapc_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  %41 = ptrtoint ptr %collections to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %collections, align 8
  %arrayidx38 = getelementptr %struct.its_collection, ptr %42, i32 %3
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i59) #15
  %43 = getelementptr inbounds i8, ptr %desc.i59, i32 4
  %44 = call ptr @memset(ptr %43, i32 255, i32 16)
  %45 = ptrtoint ptr %desc.i59 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %arrayidx38, ptr %desc.i59, align 4
  call fastcc void @its_send_single_command(ptr noundef %its, ptr noundef nonnull @its_build_invall_cmd, ptr noundef nonnull %desc.i59) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i59) #15
  br label %cleanup39

cleanup39:                                        ; preds = %if.end30, %if.then.cleanup39_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_cpu_node(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_send_single_command(ptr noundef %its, ptr noundef %builder, ptr noundef %desc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %its) #15
  %call1 = tail call fastcc ptr @its_allocate_entry(ptr noundef %its)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %do.body2, label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %its, i32 noundef %call) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %call11 = tail call ptr %builder(ptr noundef %its, ptr noundef nonnull %call1, ptr noundef %desc) #15
  %flags.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 17
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %2(ptr noundef nonnull %call1, i32 noundef 32) #15
  br label %its_flush_cmd.exit

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !374
  br label %its_flush_cmd.exit

its_flush_cmd.exit:                               ; preds = %if.else.i, %if.then.i
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %its_flush_cmd.exit.post_crit_edge, label %if.then13

its_flush_cmd.exit.post_crit_edge:                ; preds = %its_flush_cmd.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %post

if.then13:                                        ; preds = %its_flush_cmd.exit
  %call14 = tail call fastcc ptr @its_allocate_entry(ptr noundef %its)
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.then13.post_crit_edge, label %if.end17

if.then13.post_crit_edge:                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  br label %post

if.end17:                                         ; preds = %if.then13
  %3 = ptrtoint ptr %call14 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %call14, align 8
  %and4.i.i.i = and i64 %4, -256
  %or.i.i.i = or i64 %and4.i.i.i, 5
  store i64 %or.i.i.i, ptr %call14, align 8
  %5 = ptrtoint ptr %call11 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %call11, align 8
  %arrayidx.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 2
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %arrayidx.i.i, align 8
  %and4.i.i1.i = and i64 %8, -4503599627304961
  %and7.i.i.i = and i64 %6, 4503599627304960
  %or.i.i2.i = or i64 %and4.i.i1.i, %and7.i.i.i
  %9 = tail call i64 @llvm.bswap.i64(i64 %or.i.i.i) #15
  %10 = ptrtoint ptr %call14 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %call14, align 8
  %arrayidx2.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 1
  %11 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %arrayidx2.i.i, align 8
  %13 = tail call i64 @llvm.bswap.i64(i64 %12) #15
  %14 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %arrayidx2.i.i, align 8
  %15 = tail call i64 @llvm.bswap.i64(i64 %or.i.i2.i) #15
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %arrayidx.i.i, align 8
  %arrayidx6.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 3
  %17 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %arrayidx6.i.i, align 8
  %19 = tail call i64 @llvm.bswap.i64(i64 %18) #15
  %20 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %arrayidx6.i.i, align 8
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %flags.i, align 8
  %and.i70 = and i64 %22, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i70)
  %tobool.not.i71 = icmp eq i64 %and.i70, 0
  br i1 %tobool.not.i71, label %if.else.i73, label %if.then.i72

if.then.i72:                                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %23(ptr noundef nonnull %call14, i32 noundef 32) #15
  br label %post

if.else.i73:                                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !374
  br label %post

post:                                             ; preds = %if.else.i73, %if.then.i72, %if.then13.post_crit_edge, %its_flush_cmd.exit.post_crit_edge
  %base = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 3
  %24 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %base, align 8
  %add.ptr = getelementptr i8, ptr %25, i32 144
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %27 = tail call i32 @llvm.bswap.i32(i32 %26)
  %conv21 = zext i32 %27 to i64
  %cmd_write.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 7
  %28 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %cmd_write.i, align 8
  %cmd_base.i.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 6
  %30 = ptrtoint ptr %cmd_base.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cmd_base.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %29 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %31 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %32 = tail call i32 @llvm.bswap.i32(i32 %sub.ptr.sub.i.i) #15
  %33 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base, align 8
  %add.ptr.i = getelementptr i8, ptr %34, i32 136
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %32) #15, !srcloc !362
  %35 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cmd_write.i, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %its, i32 noundef %call) #15
  %call33 = tail call fastcc i32 @its_wait_for_range_completion(ptr noundef %its, i64 noundef %conv21, ptr noundef %36)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %post.cleanup_crit_edge, label %if.then35

post.cleanup_crit_edge:                           ; preds = %post
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then35:                                        ; preds = %post
  %call36 = tail call i32 @___ratelimit(ptr noundef nonnull @its_send_single_command._rs, ptr noundef nonnull @__func__.its_send_single_command) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.then35.cleanup_crit_edge, label %do.end41

if.then35.cleanup_crit_edge:                      ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end41:                                         ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #17
  %call43 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.37, ptr noundef %builder) #18
  br label %cleanup

cleanup:                                          ; preds = %do.end41, %if.then35.cleanup_crit_edge, %post.cleanup_crit_edge, %do.body2
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @its_build_mapc_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %1, -256
  %or.i.i = or i64 %and4.i.i, 9
  store i64 %or.i.i, ptr %cmd, align 8
  %2 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %desc, align 4
  %col_id = getelementptr inbounds %struct.its_collection, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %col_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %col_id, align 8
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i = zext i16 %5 to i64
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i10 = and i64 %7, -65536
  %or.i.i11 = or i64 %and4.i.i10, %conv.i
  store i64 %or.i.i11, ptr %arrayidx.i, align 8
  %8 = load ptr, ptr %desc, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %8, align 8
  %and4.i.i13 = and i64 %or.i.i11, -4503599627304961
  %and7.i.i = and i64 %10, 4503599627304960
  %or.i.i14 = or i64 %and7.i.i, %and4.i.i13
  store i64 %or.i.i14, ptr %arrayidx.i, align 8
  %valid = getelementptr inbounds %struct.anon.92, ptr %desc, i32 0, i32 1
  %11 = ptrtoint ptr %valid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %valid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool.not.i = icmp eq i32 %12, 0
  %and4.i.i16 = and i64 %or.i.i14, 9223372036854775807
  %shl6.i.i = select i1 %tobool.not.i, i64 0, i64 -9223372036854775808
  %or.i.i17 = or i64 %shl6.i.i, %and4.i.i16
  %13 = tail call i64 @llvm.bswap.i64(i64 %or.i.i) #15
  %14 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %cmd, align 8
  %arrayidx2.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %arrayidx2.i, align 8
  %17 = tail call i64 @llvm.bswap.i64(i64 %16) #15
  %18 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %arrayidx2.i, align 8
  %19 = tail call i64 @llvm.bswap.i64(i64 %or.i.i17) #15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %arrayidx.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %21 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %arrayidx6.i, align 8
  %23 = tail call i64 @llvm.bswap.i64(i64 %22) #15
  %24 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %arrayidx6.i, align 8
  %25 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %desc, align 4
  ret ptr %26
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @its_allocate_entry(ptr nocapture noundef %its) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_write.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 7
  %cmd_base.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 6
  %base.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 3
  %0 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cmd_write.i, align 8
  %2 = ptrtoint ptr %cmd_base.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cmd_base.i, align 4
  %sub.ptr.lhs.cast.i37 = ptrtoint ptr %1 to i32
  %sub.ptr.rhs.cast.i38 = ptrtoint ptr %3 to i32
  %sub.ptr.sub.i39 = sub i32 %sub.ptr.lhs.cast.i37, %sub.ptr.rhs.cast.i38
  %4 = lshr exact i32 %sub.ptr.sub.i39, 5
  %5 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %base.i, align 8
  %add.ptr.i40 = getelementptr i8, ptr %6, i32 144
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i40) #15, !srcloc !361
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #15
  %div4.i41 = lshr i32 %8, 5
  %add.i42 = add nuw nsw i32 %4, 1
  %rem.i43 = and i32 %add.i42, 2047
  call void @__sanitizer_cov_trace_cmp4(i32 %rem.i43, i32 %div4.i41)
  %cmp.i.not44 = icmp eq i32 %rem.i43, %div4.i41
  br i1 %cmp.i.not44, label %entry.while.body_crit_edge, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

while.body:                                       ; preds = %do.end11.while.body_crit_edge, %entry.while.body_crit_edge
  %count.045 = phi i32 [ %dec, %do.end11.while.body_crit_edge ], [ 1000000, %entry.while.body_crit_edge ]
  %dec = add nsw i32 %count.045, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool1.not = icmp eq i32 %dec, 0
  br i1 %tobool1.not, label %if.then, label %do.end11

if.then:                                          ; preds = %while.body
  %call2 = tail call i32 @___ratelimit(ptr noundef nonnull @its_allocate_entry._rs, ptr noundef nonnull @__func__.its_allocate_entry) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.then.cleanup_crit_edge, label %do.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.38) #18
  br label %cleanup

do.end11:                                         ; preds = %while.body
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !375
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !376
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %9 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %9(i32 noundef 214748) #15
  %10 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cmd_write.i, align 8
  %12 = ptrtoint ptr %cmd_base.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cmd_base.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %13 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %14 = lshr exact i32 %sub.ptr.sub.i, 5
  %15 = ptrtoint ptr %base.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %base.i, align 8
  %add.ptr.i = getelementptr i8, ptr %16, i32 144
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #15
  %div4.i = lshr i32 %18, 5
  %add.i = add nuw nsw i32 %14, 1
  %rem.i = and i32 %add.i, 2047
  %cmp.i.not = icmp eq i32 %rem.i, %div4.i
  br i1 %cmp.i.not, label %do.end11.while.body_crit_edge, label %do.end11.while.end_crit_edge

do.end11.while.end_crit_edge:                     ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

do.end11.while.body_crit_edge:                    ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

while.end:                                        ; preds = %do.end11.while.end_crit_edge, %entry.while.end_crit_edge
  %19 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cmd_write.i, align 8
  %incdec.ptr = getelementptr %struct.its_cmd_block, ptr %20, i32 1
  %21 = ptrtoint ptr %cmd_base.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cmd_base.i, align 4
  %add.ptr = getelementptr %struct.its_cmd_block, ptr %22, i32 2048
  %cmp = icmp eq ptr %incdec.ptr, %add.ptr
  %spec.store.select = select i1 %cmp, ptr %22, ptr %incdec.ptr
  store ptr %spec.store.select, ptr %cmd_write.i, align 8
  %23 = call ptr @memset(ptr %20, i32 0, i32 32)
  br label %cleanup

cleanup:                                          ; preds = %while.end, %do.end, %if.then.cleanup_crit_edge
  %retval.0 = phi ptr [ %20, %while.end ], [ null, %do.end ], [ null, %if.then.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_wait_for_range_completion(ptr nocapture noundef readonly %its, i64 noundef %prev_idx, ptr noundef %to) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %cmd_base.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 6
  %0 = ptrtoint ptr %cmd_base.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cmd_base.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %to to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %1 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %conv.i = zext i32 %sub.ptr.sub.i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %conv.i, i64 %prev_idx)
  %cmp = icmp ult i64 %conv.i, %prev_idx
  %add = add nuw nsw i64 %conv.i, 65536
  %spec.select = select i1 %cmp, i64 %add, i64 %conv.i
  %base = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 3
  %2 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %base, align 8
  %add.ptr55 = getelementptr i8, ptr %3, i32 144
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr55) #15, !srcloc !361
  %5 = tail call i32 @llvm.bswap.i32(i32 %4)
  %conv56 = zext i32 %5 to i64
  %sub57 = sub i64 %conv56, %prev_idx
  call void @__sanitizer_cov_trace_cmp8(i64 %conv56, i64 %prev_idx)
  %cmp258 = icmp ult i64 %conv56, %prev_idx
  %add559 = add i64 %sub57, 65536
  %spec.select4660 = select i1 %cmp258, i64 %add559, i64 %sub57
  %add761 = add i64 %spec.select4660, %prev_idx
  call void @__sanitizer_cov_trace_cmp8(i64 %add761, i64 %spec.select)
  %cmp8.not62 = icmp ult i64 %add761, %spec.select
  br i1 %cmp8.not62, label %entry.if.end11_crit_edge, label %entry.cleanup29_crit_edge

entry.cleanup29_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup29

entry.if.end11_crit_edge:                         ; preds = %entry
  br label %if.end11

if.end11:                                         ; preds = %cleanup.if.end11_crit_edge, %entry.if.end11_crit_edge
  %add765 = phi i64 [ %add7, %cleanup.if.end11_crit_edge ], [ %add761, %entry.if.end11_crit_edge ]
  %conv64 = phi i64 [ %conv, %cleanup.if.end11_crit_edge ], [ %conv56, %entry.if.end11_crit_edge ]
  %count.063 = phi i32 [ %dec, %cleanup.if.end11_crit_edge ], [ 1000000, %entry.if.end11_crit_edge ]
  %dec = add nsw i32 %count.063, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %if.then12, label %cleanup

if.then12:                                        ; preds = %if.end11
  %call13 = tail call i32 @___ratelimit(ptr noundef nonnull @its_wait_for_range_completion._rs, ptr noundef nonnull @__func__.its_wait_for_range_completion) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then12.cleanup29_crit_edge, label %do.end

if.then12.cleanup29_crit_edge:                    ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup29

do.end:                                           ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  %call17 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, i64 noundef %spec.select, i64 noundef %add765) #18
  br label %cleanup29

cleanup:                                          ; preds = %if.end11
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !377
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !378
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %6(i32 noundef 214748) #15
  %7 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %base, align 8
  %add.ptr = getelementptr i8, ptr %8, i32 144
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %10 = tail call i32 @llvm.bswap.i32(i32 %9)
  %conv = zext i32 %10 to i64
  %sub = sub nsw i64 %conv, %conv64
  call void @__sanitizer_cov_trace_cmp8(i64 %conv64, i64 %conv)
  %cmp2 = icmp ugt i64 %conv64, %conv
  %add5 = add nsw i64 %sub, 65536
  %spec.select46 = select i1 %cmp2, i64 %add5, i64 %sub
  %add7 = add i64 %spec.select46, %add765
  %cmp8.not = icmp ult i64 %add7, %spec.select
  br i1 %cmp8.not, label %cleanup.if.end11_crit_edge, label %cleanup.cleanup29_crit_edge

cleanup.cleanup29_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup29

cleanup.if.end11_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11

cleanup29:                                        ; preds = %cleanup.cleanup29_crit_edge, %do.end, %if.then12.cleanup29_crit_edge, %entry.cleanup29_crit_edge
  %retval.2 = phi i32 [ -1, %do.end ], [ -1, %if.then12.cleanup29_crit_edge ], [ 0, %entry.cleanup29_crit_edge ], [ 0, %cleanup.cleanup29_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #6

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @its_build_invall_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %1, -256
  %or.i.i = or i64 %and4.i.i, 13
  store i64 %or.i.i, ptr %cmd, align 8
  %2 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %desc, align 4
  %col_id = getelementptr inbounds %struct.its_collection, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %col_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %col_id, align 8
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i = zext i16 %5 to i64
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i5 = and i64 %7, -65536
  %or.i.i6 = or i64 %and4.i.i5, %conv.i
  %8 = tail call i64 @llvm.bswap.i64(i64 %or.i.i) #15
  %9 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %cmd, align 8
  %arrayidx2.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %10 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx2.i, align 8
  %12 = tail call i64 @llvm.bswap.i64(i64 %11) #15
  %13 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %arrayidx2.i, align 8
  %14 = tail call i64 @llvm.bswap.i64(i64 %or.i.i6) #15
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %16 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx6.i, align 8
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #15
  %19 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %arrayidx6.i, align 8
  %20 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %desc, align 4
  ret ptr %21
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_pages(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_device_is_available(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_address_to_resource(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_reset_one(ptr noundef %res) unnamed_addr #3 section ".init.text" align 64 {
entry:
  %err = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %err) #15
  %0 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %err, align 4, !annotation !371
  %call = call fastcc ptr @its_map_one(ptr noundef %res, ptr noundef nonnull %err) #19
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %add.ptr = getelementptr i8, ptr %call, i32 256
  br label %for.body

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %1 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %err, align 4
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader
  %i.08 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.body.for.body_crit_edge ]
  %shl = shl i32 %i.08, 3
  %add.ptr1 = getelementptr i8, ptr %add.ptr, i32 %shl
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1, i32 0) #15, !srcloc !362
  %add.ptr.i = getelementptr i8, ptr %add.ptr1, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #15, !srcloc !362
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond.not = icmp eq i32 %inc, 8
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @iounmap(ptr noundef nonnull %call) #15
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi i32 [ 0, %for.end ], [ %2, %if.then ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %err) #15
  ret i32 %retval.0
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_probe_one(ptr noundef %res, ptr noundef %handle) unnamed_addr #3 section ".init.text" align 64 {
entry:
  %err = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %err) #15
  %call = call fastcc ptr @its_map_one(ptr noundef %res, ptr noundef nonnull %err) #19
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup157_crit_edge, label %do.end

entry.cleanup157_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup157

do.end:                                           ; preds = %entry
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.55, ptr noundef %res) #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 440) #22
  %tobool4.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool4.not, label %if.then5, label %do.body7

if.then5:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  %1 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -12, ptr %err, align 4
  br label %out_unmap

do.body7:                                         ; preds = %do.end
  tail call void @__raw_spin_lock_init(ptr noundef nonnull %call7.i.i, ptr noundef nonnull @.str.57, ptr noundef nonnull @its_probe_one.__key, i16 noundef signext 2) #15
  %dev_alloc_lock = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 1
  tail call void @__mutex_init(ptr noundef %dev_alloc_lock, ptr noundef nonnull @.str.59, ptr noundef nonnull @its_probe_one.__key.58) #15
  %entry13 = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %entry13 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %entry13, ptr %entry13, align 8
  %prev.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 2, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %entry13, ptr %prev.i, align 4
  %its_device_list = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 16
  %4 = ptrtoint ptr %its_device_list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %its_device_list, ptr %its_device_list, align 8
  %prev.i1 = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 16, i32 1
  %5 = ptrtoint ptr %prev.i1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %its_device_list, ptr %prev.i1, align 4
  %add.ptr = getelementptr i8, ptr %call, i32 8
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %call, i32 12
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %8 = zext i32 %7 to i64
  %9 = zext i32 %6 to i64
  %10 = shl nuw i64 %9, 32
  %11 = or i64 %10, %8
  %12 = tail call i64 @llvm.bswap.i64(i64 %11) #15
  %typer15 = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 12
  %13 = ptrtoint ptr %typer15 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %typer15, align 8
  %base = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 3
  %14 = ptrtoint ptr %base to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call, ptr %base, align 8
  %15 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %res, align 4
  %phys_base = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 5
  %17 = ptrtoint ptr %phys_base to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %phys_base, align 8
  %and = and i64 %12, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool17.not = icmp eq i64 %and, 0
  br i1 %tobool17.not, label %do.body7.if.end76_crit_edge, label %if.then18

do.body7.if.end76_crit_edge:                      ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76

if.then18:                                        ; preds = %do.body7
  %and19 = and i64 %12, 137438953472
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and19)
  %tobool20.not = icmp eq i64 %and19, 0
  br i1 %tobool20.not, label %if.then21, label %do.end33

if.then21:                                        ; preds = %if.then18
  %call22 = tail call fastcc i32 @its_compute_its_list_map(ptr noundef %res, ptr noundef nonnull %call) #19
  %18 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %call22, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp = icmp slt i32 %call22, 0
  br i1 %cmp, label %if.then21.out_free_its_crit_edge, label %if.end24

if.then21.out_free_its_crit_edge:                 ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_free_its

if.end24:                                         ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #17
  %list_nr = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 18
  %19 = ptrtoint ptr %list_nr to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %call22, ptr %list_nr, align 8
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.61, ptr noundef %res, i32 noundef %call22) #18
  br label %if.end37

do.end33:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #17
  %call36 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64, ptr noundef %res) #18
  br label %if.end37

if.end37:                                         ; preds = %do.end33, %if.end24
  %20 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %typer15, align 8
  %and39 = and i64 %21, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and39)
  %tobool40.not = icmp eq i64 %and39, 0
  br i1 %tobool40.not, label %if.end37.if.end76_crit_edge, label %if.then41

if.end37.if.end76_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76

if.then41:                                        ; preds = %if.end37
  %22 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %res, align 4
  %add = add i32 %23, 131072
  %call60 = tail call ptr @ioremap(i32 noundef %add, i32 noundef 65536) #15
  %sgir_base = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 4
  %24 = ptrtoint ptr %sgir_base to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call60, ptr %sgir_base, align 4
  %tobool62.not = icmp eq ptr %call60, null
  br i1 %tobool62.not, label %cleanup, label %cleanup.thread

cleanup.thread:                                   ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #17
  %and58 = lshr i64 %12, 41
  %25 = trunc i64 %and58 to i32
  %conv = and i32 %25, 3
  %add.ptr65 = getelementptr i8, ptr %call, i32 24
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr65) #15, !srcloc !361
  %27 = tail call i32 @llvm.bswap.i32(i32 %26)
  %mpidr = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 15
  %28 = ptrtoint ptr %mpidr to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %mpidr, align 4
  %call74 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, ptr noundef %res, i32 noundef %27, i32 noundef %conv) #18
  br label %if.end76

cleanup:                                          ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 -12, ptr %err, align 4
  br label %out_free_its

if.end76:                                         ; preds = %cleanup.thread, %if.end37.if.end76_crit_edge, %do.body7.if.end76_crit_edge
  %numa_node77 = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 19
  %30 = ptrtoint ptr %numa_node77 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %numa_node77, align 4
  %call38.i.i = tail call ptr @__alloc_pages(i32 noundef 3520, i32 noundef 4, i32 noundef 0, ptr noundef null) #15
  %tobool81.not = icmp eq ptr %call38.i.i, null
  br i1 %tobool81.not, label %if.then82, label %if.end83

if.then82:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #17
  %31 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 -12, ptr %err, align 4
  br label %out_unmap_sgir

if.end83:                                         ; preds = %if.end76
  %call84 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i) #15
  %cmd_base = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 6
  %32 = ptrtoint ptr %cmd_base to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %call84, ptr %cmd_base, align 4
  %cmd_write = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 7
  %33 = ptrtoint ptr %cmd_write to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call84, ptr %cmd_write, align 8
  %fwnode_handle = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 10
  %34 = ptrtoint ptr %fwnode_handle to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %handle, ptr %fwnode_handle, align 4
  %get_msi_base = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 11
  %35 = ptrtoint ptr %get_msi_base to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @its_irq_get_msi_base, ptr %get_msi_base, align 8
  %msi_domain_flags = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 20
  %36 = ptrtoint ptr %msi_domain_flags to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 32, ptr %msi_domain_flags, align 8
  %37 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %base, align 8
  %add.ptr.i2 = getelementptr i8, ptr %38, i32 4
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i2) #15, !srcloc !361
  %40 = tail call i32 @llvm.bswap.i32(i32 %39) #15
  tail call void @gic_enable_quirks(i32 noundef %40, ptr noundef nonnull @its_quirks, ptr noundef nonnull %call7.i.i) #15
  %flags.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 17
  %41 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %42, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  %spec.select.i = select i1 %tobool.not.i, i64 4035225266123964416, i64 0
  %tables.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 8
  %mpidr.i.i.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 15
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end83
  %shr.0204.i = phi i64 [ 1024, %if.end83 ], [ %shr.1.ph.i, %for.inc.i.for.body.i_crit_edge ]
  %cache.1201.i = phi i64 [ %spec.select.i, %if.end83 ], [ %cache.2.ph.i, %for.inc.i.for.body.i_crit_edge ]
  %i.0199.i = phi i32 [ 0, %if.end83 ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %add.ptr.i3 = getelementptr %struct.its_baser, ptr %tables.i, i32 %i.0199.i
  %43 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %base, align 8
  %add.ptr.i.i = getelementptr i8, ptr %44, i32 256
  %shl.i.i = shl nsw i32 %i.0199.i, 3
  %add.ptr1.i.i = getelementptr i8, ptr %add.ptr.i.i, i32 %shl.i.i
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i) #15, !srcloc !361
  %add.ptr.i.i.i = getelementptr i8, ptr %add.ptr1.i.i, i32 4
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #15, !srcloc !361
  %47 = zext i32 %46 to i64
  %48 = tail call i64 @llvm.bswap.i64(i64 %47) #15
  %shr1.i = lshr i64 %48, 56
  %49 = and i64 %48, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %49)
  %cmp3.i = icmp eq i64 %49, 0
  br i1 %cmp3.i, label %for.body.i.for.inc.i_crit_edge, label %if.end5.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end5.i:                                        ; preds = %for.body.i
  %val2.i.i.i = getelementptr %struct.its_baser, ptr %tables.i, i32 %i.0199.i, i32 1
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %while.cond.i.i.backedge, %if.end5.i
  %switch.selectcmp.i.i = phi i1 [ false, %if.end5.i ], [ %switch.selectcmp.i.i.be, %while.cond.i.i.backedge ]
  %switch.selectcmp60.i.i = phi i1 [ true, %if.end5.i ], [ false, %while.cond.i.i.backedge ]
  %psz.0.i.i.off0 = phi i17 [ -65536, %if.end5.i ], [ %psz.0.i.i.off0.be, %while.cond.i.i.backedge ]
  %psz.0.i.i.off095 = phi i32 [ 65536, %if.end5.i ], [ %psz.0.i.i.off095.be, %while.cond.i.i.backedge ]
  %50 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %base, align 8
  %add.ptr.i.i127.i = getelementptr i8, ptr %51, i32 256
  %add.ptr1.i.i.i = getelementptr i8, ptr %add.ptr.i.i127.i, i32 %shl.i.i
  %52 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i.i) #15, !srcloc !361
  %add.ptr.i.i.i.i = getelementptr i8, ptr %add.ptr1.i.i.i, i32 4
  %53 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i) #15, !srcloc !361
  %54 = zext i32 %53 to i64
  %55 = zext i32 %52 to i64
  %56 = shl nuw i64 %55, 32
  %.masked.i.i = and i64 %56, -844429225099264
  %57 = or i64 %.masked.i.i, %54
  %58 = tail call i64 @llvm.bswap.i64(i64 %57) #15
  %switch.select.i.i = zext i1 %switch.selectcmp.i.i to i64
  %switch.select61.i.i = select i1 %switch.selectcmp60.i.i, i64 2, i64 %switch.select.i.i
  %shl.i128.i = shl nuw nsw i64 %switch.select61.i.i, 8
  %or.i.i = or i64 %58, %shl.i128.i
  %59 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %base, align 8
  %add.ptr.i68.i.i = getelementptr i8, ptr %60, i32 256
  %add.ptr1.i70.i.i = getelementptr i8, ptr %add.ptr.i68.i.i, i32 %shl.i.i
  %conv.i.i.i.i = trunc i64 %or.i.i to i32
  %61 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1.i70.i.i, i32 %61) #15, !srcloc !362
  %shr.i.i.i.i = lshr i64 %58, 32
  %conv1.i.i.i.i = trunc i64 %shr.i.i.i.i to i32
  %62 = tail call i32 @llvm.bswap.i32(i32 %conv1.i.i.i.i) #15
  %add.ptr.i.i71.i.i = getelementptr i8, ptr %add.ptr1.i70.i.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i71.i.i, i32 %62) #15, !srcloc !362
  %63 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %base, align 8
  %add.ptr.i7.i.i.i = getelementptr i8, ptr %64, i32 256
  %add.ptr1.i.i.i.i = getelementptr i8, ptr %add.ptr.i7.i.i.i, i32 %shl.i.i
  %65 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i.i.i) #15, !srcloc !361
  %add.ptr.i.i.i.i.i = getelementptr i8, ptr %add.ptr1.i.i.i.i, i32 4
  %66 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i.i) #15, !srcloc !361
  %67 = zext i32 %66 to i64
  %68 = zext i32 %65 to i64
  %69 = shl nuw i64 %68, 32
  %70 = or i64 %69, %67
  %71 = tail call i64 @llvm.bswap.i64(i64 %70) #15
  %72 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %71, ptr %val2.i.i.i, align 8
  %and35.i.i = lshr i64 %71, 8
  %shr36.i.i = and i64 %and35.i.i, 3
  call void @__sanitizer_cov_trace_cmp8(i64 %shr36.i.i, i64 %switch.select61.i.i)
  %cmp.i129.i = icmp eq i64 %shr36.i.i, %switch.select61.i.i
  br i1 %cmp.i129.i, label %if.end9.i, label %if.end38.i.i

if.end38.i.i:                                     ; preds = %while.cond.i.i
  %73 = zext i17 %psz.0.i.i.off0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %73, ptr @__sancov_gen_cov_switch_values.146)
  switch i17 %psz.0.i.i.off0, label %if.end38.i.i.its_alloc_tables.exit_crit_edge [
    i17 -65536, label %if.end38.i.i.while.cond.i.i.backedge_crit_edge
    i17 16384, label %sw.bb40.i.i
  ]

if.end38.i.i.while.cond.i.i.backedge_crit_edge:   ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.i.i.backedge

if.end38.i.i.its_alloc_tables.exit_crit_edge:     ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_alloc_tables.exit

sw.bb40.i.i:                                      ; preds = %if.end38.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.i.i.backedge

while.cond.i.i.backedge:                          ; preds = %sw.bb40.i.i, %if.end38.i.i.while.cond.i.i.backedge_crit_edge
  %switch.selectcmp.i.i.be = phi i1 [ true, %if.end38.i.i.while.cond.i.i.backedge_crit_edge ], [ false, %sw.bb40.i.i ]
  %psz.0.i.i.off0.be = phi i17 [ 16384, %if.end38.i.i.while.cond.i.i.backedge_crit_edge ], [ 4096, %sw.bb40.i.i ]
  %psz.0.i.i.off095.be = phi i32 [ 16384, %if.end38.i.i.while.cond.i.i.backedge_crit_edge ], [ 4096, %sw.bb40.i.i ]
  br label %while.cond.i.i

if.end9.i:                                        ; preds = %while.cond.i.i
  %psz45.i.i = getelementptr %struct.its_baser, ptr %tables.i, i32 %i.0199.i, i32 3
  %74 = ptrtoint ptr %psz45.i.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %psz.0.i.i.off095, ptr %psz45.i.i, align 4
  %sub.i.i = add nsw i32 %psz.0.i.i.off095, -1
  %shr.i.i = lshr i32 %sub.i.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %sub.i.i)
  %tobool.not.i.i.i = icmp eq i32 %sub.i.i, 4095
  %75 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i, i1 true) #15, !range !368
  %sub.i.i.i = sub nuw nsw i32 32, %75
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 0, i32 %sub.i.i.i
  %trunc.i = trunc i64 %shr1.i to i3
  %76 = zext i3 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %76, ptr @__sancov_gen_cov_switch_values.147)
  switch i3 %trunc.i, label %if.end9.i.sw.epilog.i_crit_edge [
    i3 1, label %sw.bb.i
    i3 2, label %sw.bb26.i
  ]

if.end9.i.sw.epilog.i_crit_edge:                  ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  %77 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %77)
  %78 = load i64, ptr %typer15, align 8
  %79 = trunc i64 %78 to i32
  %80 = lshr i32 %79, 13
  %81 = and i32 %80, 31
  %conv.i = add nuw nsw i32 %81, 1
  br label %sw.epilog.sink.split.i

sw.bb26.i:                                        ; preds = %if.end9.i
  %82 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %82)
  %83 = load i64, ptr %typer15, align 8
  %and28.i = and i64 %83, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and28.i)
  %tobool29.not.i = icmp eq i64 %and28.i, 0
  br i1 %tobool29.not.i, label %sw.bb26.i.if.end64.i_crit_edge, label %if.then30.i

sw.bb26.i.if.end64.i_crit_edge:                   ; preds = %sw.bb26.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64.i

if.then30.i:                                      ; preds = %sw.bb26.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %i.0199.i)
  %cmp31.not.i = icmp eq i32 %i.0199.i, 2
  br i1 %cmp31.not.i, label %if.then30.i.if.end50.i_crit_edge, label %do.end44.i, !prof !364

if.then30.i.if.end50.i_crit_edge:                 ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end50.i

do.end44.i:                                       ; preds = %if.then30.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2611, i32 noundef 9, ptr noundef null) #15
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end44.i, %if.then30.i.if.end50.i_crit_edge
  %84 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %84)
  %85 = load i64, ptr %typer15, align 8
  %86 = and i64 %85, 6597069766656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %86)
  %tobool.not.i130.i = icmp eq i64 %86, 0
  br i1 %tobool.not.i130.i, label %if.end50.i.if.end64.i_crit_edge, label %if.end.i131.i

if.end50.i.if.end64.i_crit_edge:                  ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64.i

if.end.i131.i:                                    ; preds = %if.end50.i
  %87 = ptrtoint ptr %mpidr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %mpidr.i.i.i, align 4
  %sum.shift.i.i.i = lshr i64 %85, 38
  %89 = trunc i64 %sum.shift.i.i.i to i32
  %90 = and i32 %89, 24
  %shr32.i.i.i.i = lshr i32 -1, %90
  %neg.i.i.i.i = xor i32 %shr32.i.i.i.i, -1
  %and33.i.i.i.i = and i32 %88, %neg.i.i.i.i
  %.pn73.i.i = load ptr, ptr @its_nodes, align 4
  %cmp.not75.i.i = icmp eq ptr %.pn73.i.i, @its_nodes
  br i1 %cmp.not75.i.i, label %if.end.i131.i.if.end64.i_crit_edge, label %if.end.i131.i.for.body.i.i_crit_edge

if.end.i131.i.for.body.i.i_crit_edge:             ; preds = %if.end.i131.i
  br label %for.body.i.i

if.end.i131.i.if.end64.i_crit_edge:               ; preds = %if.end.i131.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64.i

for.body.i.i:                                     ; preds = %for.cond.backedge.i.i.for.body.i.i_crit_edge, %if.end.i131.i.for.body.i.i_crit_edge
  %.pn76.i.i = phi ptr [ %.pn.i.i, %for.cond.backedge.i.i.for.body.i.i_crit_edge ], [ %.pn73.i.i, %if.end.i131.i.for.body.i.i_crit_edge ]
  %its.077.i.i = getelementptr i8, ptr %.pn76.i.i, i32 -136
  %typer15.i.i = getelementptr i8, ptr %.pn76.i.i, i32 240
  %91 = ptrtoint ptr %typer15.i.i to i32
  call void @__asan_load8_noabort(i32 %91)
  %92 = load i64, ptr %typer15.i.i, align 8
  %and16.i.i = and i64 %92, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and16.i.i)
  %tobool17.not.i.i = icmp eq i64 %and16.i.i, 0
  %cmp18.i.i = icmp eq ptr %its.077.i.i, %call7.i.i
  %or.cond.i.i = select i1 %tobool17.not.i.i, i1 true, i1 %cmp18.i.i
  %93 = and i64 %92, 6597069766656
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %93)
  %tobool40.not.i.i = icmp eq i64 %93, 0
  %or.cond66.i.i = select i1 %or.cond.i.i, i1 true, i1 %tobool40.not.i.i
  br i1 %or.cond66.i.i, label %for.body.i.i.for.cond.backedge.i.i_crit_edge, label %if.end42.i.i

for.body.i.i.for.cond.backedge.i.i_crit_edge:     ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge.i.i

if.end42.i.i:                                     ; preds = %for.body.i.i
  %mpidr.i68.i.i = getelementptr i8, ptr %.pn76.i.i, i32 260
  %94 = ptrtoint ptr %mpidr.i68.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %mpidr.i68.i.i, align 4
  %sum.shift.i69.i.i = lshr i64 %92, 38
  %96 = trunc i64 %sum.shift.i69.i.i to i32
  %97 = and i32 %96, 24
  %shr32.i.i70.i.i = lshr i32 -1, %97
  %neg.i.i71.i.i = xor i32 %shr32.i.i70.i.i, -1
  %and33.i.i72.i.i = and i32 %95, %neg.i.i71.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %and33.i.i.i.i, i32 %and33.i.i72.i.i)
  %cmp44.not.i.i = icmp eq i32 %and33.i.i.i.i, %and33.i.i72.i.i
  br i1 %cmp44.not.i.i, label %if.end46.i.i, label %if.end42.i.i.for.cond.backedge.i.i_crit_edge

if.end42.i.i.for.cond.backedge.i.i_crit_edge:     ; preds = %if.end42.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge.i.i

if.end46.i.i:                                     ; preds = %if.end42.i.i
  %val.i.i = getelementptr i8, ptr %.pn76.i.i, i32 88
  %98 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load8_noabort(i32 %98)
  %99 = load i64, ptr %val.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %99)
  %tobool48.not.i.i = icmp sgt i64 %99, -1
  br i1 %tobool48.not.i.i, label %if.end46.i.i.for.cond.backedge.i.i_crit_edge, label %find_sibling_its.exit.i

if.end46.i.i.for.cond.backedge.i.i_crit_edge:     ; preds = %if.end46.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.backedge.i.i

for.cond.backedge.i.i:                            ; preds = %if.end46.i.i.for.cond.backedge.i.i_crit_edge, %if.end42.i.i.for.cond.backedge.i.i_crit_edge, %for.body.i.i.for.cond.backedge.i.i_crit_edge
  %100 = ptrtoint ptr %.pn76.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %.pn.i.i = load ptr, ptr %.pn76.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.cond.backedge.i.i.if.end64.i_crit_edge, label %for.cond.backedge.i.i.for.body.i.i_crit_edge

for.cond.backedge.i.i.for.body.i.i_crit_edge:     ; preds = %for.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.cond.backedge.i.i.if.end64.i_crit_edge:       ; preds = %for.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64.i

find_sibling_its.exit.i:                          ; preds = %if.end46.i.i
  %tobool59.not.i = icmp eq ptr %its.077.i.i, null
  br i1 %tobool59.not.i, label %find_sibling_its.exit.i.if.end64.i_crit_edge, label %cleanup.i

find_sibling_its.exit.i.if.end64.i_crit_edge:     ; preds = %find_sibling_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end64.i

cleanup.i:                                        ; preds = %find_sibling_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.i = getelementptr i8, ptr %.pn76.i.i, i32 80
  %101 = call ptr @memcpy(ptr %add.ptr.i3, ptr %arrayidx.i, i32 24)
  %102 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %102)
  %103 = load i64, ptr %val2.i.i.i, align 8
  %104 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %base, align 8
  %add.ptr.i139.i = getelementptr i8, ptr %105, i32 256
  %add.ptr1.i141.i = getelementptr i8, ptr %add.ptr.i139.i, i32 %shl.i.i
  %conv.i.i.i = trunc i64 %103 to i32
  %106 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1.i141.i, i32 %106) #15, !srcloc !362
  %shr.i.i.i = lshr i64 %103, 32
  %conv1.i.i.i = trunc i64 %shr.i.i.i to i32
  %107 = tail call i32 @llvm.bswap.i32(i32 %conv1.i.i.i) #15
  %add.ptr.i.i142.i = getelementptr i8, ptr %add.ptr1.i141.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i142.i, i32 %107) #15, !srcloc !362
  %108 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %base, align 8
  %add.ptr.i7.i.i = getelementptr i8, ptr %109, i32 256
  %add.ptr1.i.i143.i = getelementptr i8, ptr %add.ptr.i7.i.i, i32 %shl.i.i
  %110 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i143.i) #15, !srcloc !361
  %add.ptr.i.i.i144.i = getelementptr i8, ptr %add.ptr1.i.i143.i, i32 4
  %111 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i144.i) #15, !srcloc !361
  %112 = zext i32 %111 to i64
  %113 = zext i32 %110 to i64
  %114 = shl nuw i64 %113, 32
  %115 = or i64 %114, %112
  %116 = tail call i64 @llvm.bswap.i64(i64 %115) #15
  %117 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_store8_noabort(i32 %117)
  store i64 %116, ptr %val2.i.i.i, align 8
  br label %for.inc.i

if.end64.i:                                       ; preds = %find_sibling_its.exit.i.if.end64.i_crit_edge, %for.cond.backedge.i.i.if.end64.i_crit_edge, %if.end.i131.i.if.end64.i_crit_edge, %if.end50.i.if.end64.i_crit_edge, %sw.bb26.i.if.end64.i_crit_edge
  %118 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i = getelementptr inbounds %struct.rdists, ptr %118, i32 0, i32 8
  %119 = ptrtoint ptr %has_rvpeid.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %has_rvpeid.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %120)
  %tobool65.not.i = icmp eq i8 %120, 0
  br i1 %tobool65.not.i, label %if.end64.i.sw.epilog.sink.split.i_crit_edge, label %land.lhs.true.i

if.end64.i.sw.epilog.sink.split.i_crit_edge:      ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i

land.lhs.true.i:                                  ; preds = %if.end64.i
  %gicd_typer2.i = getelementptr inbounds %struct.rdists, ptr %118, i32 0, i32 5
  %121 = ptrtoint ptr %gicd_typer2.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %gicd_typer2.i, align 4
  %and67.i = and i32 %122, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and67.i)
  %tobool68.not.i = icmp eq i32 %and67.i, 0
  br i1 %tobool68.not.i, label %land.lhs.true.i.sw.epilog.sink.split.i_crit_edge, label %if.then69.i

land.lhs.true.i.sw.epilog.sink.split.i_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.sink.split.i

if.then69.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %and71.i = and i32 %122, 31
  %add72.i = add nuw nsw i32 %and71.i, 1
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %if.then69.i, %land.lhs.true.i.sw.epilog.sink.split.i_crit_edge, %if.end64.i.sw.epilog.sink.split.i_crit_edge, %sw.bb.i
  %nvpeid.0.sink.i = phi i32 [ %conv.i, %sw.bb.i ], [ %add72.i, %if.then69.i ], [ 16, %land.lhs.true.i.sw.epilog.sink.split.i_crit_edge ], [ 16, %if.end64.i.sw.epilog.sink.split.i_crit_edge ]
  %123 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %base, align 8
  %add.ptr.i.i24 = getelementptr i8, ptr %124, i32 256
  %add.ptr1.i.i26 = getelementptr i8, ptr %add.ptr.i.i24, i32 %shl.i.i
  %125 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i26) #15, !srcloc !361
  %add.ptr.i.i.i27 = getelementptr i8, ptr %add.ptr1.i.i26, i32 4
  %126 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i27) #15, !srcloc !361
  %127 = zext i32 %126 to i64
  %128 = tail call i64 @llvm.bswap.i64(i64 %127) #15
  %shr.i28 = lshr i64 %128, 56
  %shr1.i29 = lshr i64 %128, 48
  %and2.i = and i64 %shr1.i29, 31
  %add.i = add nuw nsw i64 %and2.i, 1
  %129 = ptrtoint ptr %psz45.i.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %psz45.i.i, align 4
  %sh_prom.i = zext i32 %nvpeid.0.sink.i to i64
  %shl.i = shl nuw nsw i64 %add.i, %sh_prom.i
  %mul.i = shl i32 %130, 1
  %conv.i30 = zext i32 %mul.i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %shl.i, i64 %conv.i30)
  %cmp.i31 = icmp ugt i64 %shl.i, %conv.i30
  br i1 %cmp.i31, label %if.then.i, label %sw.epilog.sink.split.i.get_order.exit.i50_crit_edge

sw.epilog.sink.split.i.get_order.exit.i50_crit_edge: ; preds = %sw.epilog.sink.split.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %get_order.exit.i50

if.then.i:                                        ; preds = %sw.epilog.sink.split.i
  %131 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %base, align 8
  %add.ptr.i129.i = getelementptr i8, ptr %132, i32 256
  %add.ptr1.i131.i = getelementptr i8, ptr %add.ptr.i129.i, i32 %shl.i.i
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1.i131.i, i32 262144) #15, !srcloc !362
  %add.ptr.i.i132.i = getelementptr i8, ptr %add.ptr1.i131.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i132.i, i32 120) #15, !srcloc !362
  %133 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %base, align 8
  %add.ptr.i7.i.i32 = getelementptr i8, ptr %134, i32 256
  %add.ptr1.i.i.i33 = getelementptr i8, ptr %add.ptr.i7.i.i32, i32 %shl.i.i
  %135 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i.i33) #15, !srcloc !361
  %add.ptr.i.i.i.i34 = getelementptr i8, ptr %add.ptr1.i.i.i33, i32 4
  %136 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i34) #15, !srcloc !361
  %137 = zext i32 %136 to i64
  %138 = zext i32 %135 to i64
  %139 = shl nuw i64 %138, 32
  %140 = or i64 %139, %137
  %141 = tail call i64 @llvm.bswap.i64(i64 %140) #15
  %142 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_store8_noabort(i32 %142)
  store i64 %141, ptr %val2.i.i.i, align 8
  %and6.i = and i64 %141, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and6.i)
  %tobool.not.i35 = icmp eq i64 %and6.i, 0
  br i1 %tobool.not.i35, label %if.then.i.get_order.exit.i50_crit_edge, label %cond.end23.i

if.then.i.get_order.exit.i50_crit_edge:           ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %get_order.exit.i50

cond.end23.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv10.i = trunc i64 %add.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %130, i32 %conv10.i)
  %tobool.not.i.i133.i = icmp ult i32 %130, %conv10.i
  %div.i = udiv i32 %130, %conv10.i
  %143 = tail call i32 @llvm.ctlz.i32(i32 %div.i, i1 true) #15, !range !368
  %sub.i.op.i.neg.i = add nsw i32 %143, -31
  %sub.i134.neg.i = select i1 %tobool.not.i.i133.i, i32 1, i32 %sub.i.op.i.neg.i
  %sub25.i = add nsw i32 %sub.i134.neg.i, %nvpeid.0.sink.i
  %.pre.i = zext i32 %sub25.i to i64
  br label %get_order.exit.i50

get_order.exit.i50:                               ; preds = %cond.end23.i, %if.then.i.get_order.exit.i50_crit_edge, %sw.epilog.sink.split.i.get_order.exit.i50_crit_edge
  %sh_prom27.pre-phi.i = phi i64 [ %sh_prom.i, %if.then.i.get_order.exit.i50_crit_edge ], [ %.pre.i, %cond.end23.i ], [ %sh_prom.i, %sw.epilog.sink.split.i.get_order.exit.i50_crit_edge ]
  %indirect.0.shrunk.i36 = phi i1 [ false, %if.then.i.get_order.exit.i50_crit_edge ], [ true, %cond.end23.i ], [ false, %sw.epilog.sink.split.i.get_order.exit.i50_crit_edge ]
  %esz.0.i = phi i64 [ %add.i, %if.then.i.get_order.exit.i50_crit_edge ], [ 8, %cond.end23.i ], [ %add.i, %sw.epilog.sink.split.i.get_order.exit.i50_crit_edge ]
  %shl28.i = shl i64 %esz.0.i, %sh_prom27.pre-phi.i
  %conv29.i = trunc i64 %shl28.i to i32
  %dec.i.i = add i32 %conv29.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %dec.i.i)
  %tobool.not.i.i.i45 = icmp ult i32 %dec.i.i, 4096
  %shr.i.i44 = lshr i32 %dec.i.i, 12
  %144 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i44, i1 true) #15, !range !368
  %sub.i.i.i46 = sub nuw nsw i32 32, %144
  %cond.i.i.i47 = select i1 %tobool.not.i.i.i45, i32 0, i32 %sub.i.i.i46
  %145 = tail call i32 @llvm.umax.i32(i32 %cond.i.i.i47, i32 %cond.i.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 11, i32 %145)
  %cmp38.i = icmp ugt i32 %145, 11
  br i1 %cmp38.i, label %if.then40.i, label %get_order.exit.i50.sw.epilog.i_crit_edge

get_order.exit.i50.sw.epilog.i_crit_edge:         ; preds = %get_order.exit.i50
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.i

if.then40.i:                                      ; preds = %get_order.exit.i50
  call void @__sanitizer_cov_trace_pc() #17
  %conv42.i = trunc i64 %esz.0.i to i32
  %div43.i = udiv i32 8388608, %conv42.i
  %146 = tail call i32 @llvm.ctlz.i32(i32 %div43.i, i1 true) #15, !range !379
  %sub.i.op.i136.i = xor i32 %146, 31
  %147 = trunc i64 %shr.i28 to i32
  %idxprom.i = and i32 %147, 7
  %arrayidx.i51 = getelementptr [8 x ptr], ptr @its_base_type_string, i32 0, i32 %idxprom.i
  %148 = ptrtoint ptr %arrayidx.i51 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %arrayidx.i51, align 4
  %150 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %150)
  %151 = load i64, ptr %typer15, align 8
  %and84.i52 = lshr i64 %151, 13
  %shr85.i = and i64 %and84.i52, 31
  %add86.i = add nuw nsw i64 %shr85.i, 1
  %call87.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.80, ptr noundef %phys_base, ptr noundef %149, i64 noundef %add86.i, i32 noundef %sub.i.op.i136.i) #18
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then40.i, %get_order.exit.i50.sw.epilog.i_crit_edge, %if.end9.i.sw.epilog.i_crit_edge
  %order.i.0 = phi i32 [ %cond.i.i.i, %if.end9.i.sw.epilog.i_crit_edge ], [ 11, %if.then40.i ], [ %145, %get_order.exit.i50.sw.epilog.i_crit_edge ]
  %indirect.0.shrunk.i = phi i1 [ false, %if.end9.i.sw.epilog.i_crit_edge ], [ %indirect.0.shrunk.i36, %if.then40.i ], [ %indirect.0.shrunk.i36, %get_order.exit.i50.sw.epilog.i_crit_edge ]
  %152 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %base, align 8
  %add.ptr.i.i151.i = getelementptr i8, ptr %153, i32 256
  %add.ptr1.i.i153.i = getelementptr i8, ptr %add.ptr.i.i151.i, i32 %shl.i.i
  %154 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i153.i) #15, !srcloc !361
  %add.ptr.i.i.i154.i = getelementptr i8, ptr %add.ptr1.i.i153.i, i32 4
  %155 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i154.i) #15, !srcloc !361
  %156 = zext i32 %155 to i64
  %157 = tail call i64 @llvm.bswap.i64(i64 %156) #15
  %shr1.i.i = lshr i64 %157, 48
  %and.i.i = and i64 %shr1.i.i, 31
  %shr2.i.i = lshr i64 %157, 56
  %and3.i.i = and i64 %shr2.i.i, 7
  %158 = ptrtoint ptr %psz45.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load i32, ptr %psz45.i.i, align 4
  %shl.i155.i = shl i32 4096, %order.i.0
  %div.i.i = udiv i32 %shl.i155.i, %159
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %div.i.i)
  %cmp.i156.i = icmp ugt i32 %div.i.i, 256
  br i1 %cmp.i156.i, label %do.end.i.i, label %sw.epilog.i.if.end.i160.i_crit_edge

sw.epilog.i.if.end.i160.i_crit_edge:              ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i160.i

do.end.i.i:                                       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #17
  %idxprom.i.i = trunc i64 %and3.i.i to i32
  %arrayidx.i.i = getelementptr [8 x ptr], ptr @its_base_type_string, i32 0, i32 %idxprom.i.i
  %160 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %arrayidx.i.i, align 4
  %call6.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89, ptr noundef %phys_base, ptr noundef %161, i32 noundef %div.i.i, i32 noundef 256) #18
  %mul.i.i = shl i32 %159, 8
  %dec.i.i.i = add i32 %mul.i.i, -1
  %shr.i.i159.i = lshr i32 %dec.i.i.i, 12
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %dec.i.i.i)
  %tobool.not.i.i.i.i = icmp ult i32 %dec.i.i.i, 4096
  %162 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i159.i, i1 true) #15, !range !368
  %sub.i.i.i.i = sub nuw nsw i32 32, %162
  %cond.i.i.i.i = select i1 %tobool.not.i.i.i.i, i32 0, i32 %sub.i.i.i.i
  br label %if.end.i160.i

if.end.i160.i:                                    ; preds = %do.end.i.i, %sw.epilog.i.if.end.i160.i_crit_edge
  %order.addr.0.i.i = phi i32 [ %order.i.0, %sw.epilog.i.if.end.i160.i_crit_edge ], [ %cond.i.i.i.i, %do.end.i.i ]
  %alloc_pages.0.i.i = phi i32 [ %div.i.i, %sw.epilog.i.if.end.i160.i_crit_edge ], [ 256, %do.end.i.i ]
  %163 = ptrtoint ptr %numa_node77 to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %numa_node77, align 4
  %165 = zext i32 %164 to i64
  call void @__sanitizer_cov_trace_switch(i64 %165, ptr @__sancov_gen_cov_switch_values.148)
  switch i32 %164, label %do.body3.i.i.i.i [
    i32 -1, label %if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge
    i32 0, label %if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge117
  ], !prof !380

if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge117: ; preds = %if.end.i160.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %alloc_pages_node.exit.i.i

if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge: ; preds = %if.end.i160.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %alloc_pages_node.exit.i.i

do.body3.i.i.i.i:                                 ; preds = %if.end.i160.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 569, 0\0A.popsection", ""() #15, !srcloc !381
  unreachable

alloc_pages_node.exit.i.i:                        ; preds = %if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge, %if.end.i160.i.alloc_pages_node.exit.i.i_crit_edge117
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 3520, i32 noundef %order.addr.0.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i161.i = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i161.i, label %alloc_pages_node.exit.i.i.its_alloc_tables.exit_crit_edge, label %if.end10.i.i

alloc_pages_node.exit.i.i.its_alloc_tables.exit_crit_edge: ; preds = %alloc_pages_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_alloc_tables.exit

if.end10.i.i:                                     ; preds = %alloc_pages_node.exit.i.i
  %call11.i.i = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #15
  %166 = ptrtoint ptr %call11.i.i to i32
  %call.i.i.i = tail call i32 @__virt_to_phys(i32 noundef %166) #15
  %conv.i162.i = zext i32 %call.i.i.i to i64
  %shl13.i.i = shl nuw nsw i64 %and3.i.i, 56
  %or.i163.i = or i64 %shl13.i.i, %conv.i162.i
  %shl14.i.i = shl nuw nsw i64 %and.i.i, 48
  %or15.i.i = or i64 %or.i163.i, %shl14.i.i
  %sub16.i.i = add nsw i32 %alloc_pages.0.i.i, -1
  %conv18.i.i = zext i32 %sub16.i.i to i64
  %cond.i.i = select i1 %indirect.0.shrunk.i, i64 4611686018427387904, i64 0
  %or19.i.i = or i64 %cond.i.i, %conv18.i.i
  %or20.i.i = or i64 %or19.i.i, %or15.i.i
  %shl38.i.i = shl i32 4096, %order.addr.0.i.i
  br label %retry_baser.i.i.outer

retry_baser.i.i.outer:                            ; preds = %if.then37.i.i, %if.end10.i.i
  %shr.addr.0.i.i.ph = phi i64 [ %and35.i171.i, %if.then37.i.i ], [ %shr.0204.i, %if.end10.i.i ]
  %cache.addr.0.i.i.ph = phi i64 [ 576460752303423488, %if.then37.i.i ], [ %cache.1201.i, %if.end10.i.i ]
  br label %retry_baser.i.i

retry_baser.i.i:                                  ; preds = %if.then34.i.i.retry_baser.i.i_crit_edge, %retry_baser.i.i.outer
  %shr.addr.0.i.i = phi i64 [ %and35.i171.i, %if.then34.i.i.retry_baser.i.i_crit_edge ], [ %shr.addr.0.i.i.ph, %retry_baser.i.i.outer ]
  %or21.i.i = or i64 %or20.i.i, %shr.addr.0.i.i
  %or22.i.i = or i64 %or21.i.i, %cache.addr.0.i.i.ph
  %or25.i.i = or i64 %or22.i.i, -9223372036854775808
  %167 = zext i32 %159 to i64
  call void @__sanitizer_cov_trace_switch(i64 %167, ptr @__sancov_gen_cov_switch_values.149)
  switch i32 %159, label %retry_baser.i.i.sw.epilog.i.i_crit_edge [
    i32 65536, label %sw.bb29.i.i
    i32 16384, label %sw.bb27.i.i
  ]

retry_baser.i.i.sw.epilog.i.i_crit_edge:          ; preds = %retry_baser.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog.i.i

sw.bb27.i.i:                                      ; preds = %retry_baser.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %or28.i.i = or i64 %or22.i.i, -9223372036854775552
  br label %sw.epilog.i.i

sw.bb29.i.i:                                      ; preds = %retry_baser.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %or30.i.i = or i64 %or22.i.i, -9223372036854775296
  br label %sw.epilog.i.i

sw.epilog.i.i:                                    ; preds = %sw.bb29.i.i, %sw.bb27.i.i, %retry_baser.i.i.sw.epilog.i.i_crit_edge
  %val.0.i.i = phi i64 [ %or30.i.i, %sw.bb29.i.i ], [ %or28.i.i, %sw.bb27.i.i ], [ %or25.i.i, %retry_baser.i.i.sw.epilog.i.i_crit_edge ]
  %168 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %base, align 8
  %add.ptr.i143.i.i = getelementptr i8, ptr %169, i32 256
  %add.ptr1.i145.i.i = getelementptr i8, ptr %add.ptr.i143.i.i, i32 %shl.i.i
  %conv.i.i.i165.i = trunc i64 %val.0.i.i to i32
  %170 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i.i165.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1.i145.i.i, i32 %170) #15, !srcloc !362
  %shr.i.i.i166.i = lshr i64 %val.0.i.i, 32
  %conv1.i.i.i167.i = trunc i64 %shr.i.i.i166.i to i32
  %171 = tail call i32 @llvm.bswap.i32(i32 %conv1.i.i.i167.i) #15
  %add.ptr.i.i146.i.i = getelementptr i8, ptr %add.ptr1.i145.i.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i146.i.i, i32 %171) #15, !srcloc !362
  %172 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %base, align 8
  %add.ptr.i7.i.i168.i = getelementptr i8, ptr %173, i32 256
  %add.ptr1.i.i.i169.i = getelementptr i8, ptr %add.ptr.i7.i.i168.i, i32 %shl.i.i
  %174 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i.i169.i) #15, !srcloc !361
  %add.ptr.i.i.i.i170.i = getelementptr i8, ptr %add.ptr1.i.i.i169.i, i32 4
  %175 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i170.i) #15, !srcloc !361
  %176 = zext i32 %175 to i64
  %177 = zext i32 %174 to i64
  %178 = shl nuw i64 %177, 32
  %179 = or i64 %178, %176
  %180 = tail call i64 @llvm.bswap.i64(i64 %179) #15
  %181 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_store8_noabort(i32 %181)
  store i64 %180, ptr %val2.i.i.i, align 8
  %xor.i.i = xor i64 %180, %val.0.i.i
  %and32.i.i = and i64 %xor.i.i, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and32.i.i)
  %tobool33.not.i.i = icmp eq i64 %and32.i.i, 0
  br i1 %tobool33.not.i.i, label %if.end40.i.i, label %if.then34.i.i

if.then34.i.i:                                    ; preds = %sw.epilog.i.i
  %and35.i171.i = and i64 %180, 3072
  %tobool36.not.i.i = icmp eq i64 %and35.i171.i, 0
  br i1 %tobool36.not.i.i, label %if.then37.i.i, label %if.then34.i.i.retry_baser.i.i_crit_edge

if.then34.i.i.retry_baser.i.i_crit_edge:          ; preds = %if.then34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %retry_baser.i.i

if.then37.i.i:                                    ; preds = %if.then34.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %182 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %182(ptr noundef %call11.i.i, i32 noundef %shl38.i.i) #15
  br label %retry_baser.i.i.outer

if.end40.i.i:                                     ; preds = %sw.epilog.i.i
  call void @__sanitizer_cov_trace_cmp8(i64 %val.0.i.i, i64 %180)
  %cmp41.not.i.i = icmp eq i64 %val.0.i.i, %180
  br i1 %cmp41.not.i.i, label %if.end82.i, label %do.end46.i.i

do.end46.i.i:                                     ; preds = %if.end40.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %183 = ptrtoint ptr %call11.i.i to i32
  %idxprom49.i.i = trunc i64 %and3.i.i to i32
  %arrayidx50.i.i = getelementptr [8 x ptr], ptr @its_base_type_string, i32 0, i32 %idxprom49.i.i
  %184 = ptrtoint ptr %arrayidx50.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %arrayidx50.i.i, align 4
  %call51.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.92, ptr noundef %phys_base, ptr noundef %185, i64 noundef %val.0.i.i, i64 noundef %180) #18
  tail call void @free_pages(i32 noundef %183, i32 noundef %order.addr.0.i.i) #15
  br label %its_alloc_tables.exit

if.end82.i:                                       ; preds = %if.end40.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %order53.i.i = getelementptr %struct.its_baser, ptr %tables.i, i32 %i.0199.i, i32 2
  %186 = ptrtoint ptr %order53.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store i32 %order.addr.0.i.i, ptr %order53.i.i, align 8
  %187 = ptrtoint ptr %add.ptr.i3 to i32
  call void @__asan_store4_noabort(i32 %187)
  store ptr %call11.i.i, ptr %add.ptr.i3, align 8
  %188 = ptrtoint ptr %psz45.i.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 %159, ptr %psz45.i.i, align 4
  %189 = trunc i64 %and.i.i to i32
  %extract.t.i.i = add nuw nsw i32 %189, 1
  %spec.select.i.i = select i1 %indirect.0.shrunk.i, ptr @.str.97, ptr @.str.98
  %spec.select136.i.i = select i1 %indirect.0.shrunk.i, i32 8, i32 %extract.t.i.i
  %div66.i.i = udiv i32 %shl38.i.i, %spec.select136.i.i
  %idxprom67.i.i = trunc i64 %and3.i.i to i32
  %arrayidx68.i.i = getelementptr [8 x ptr], ptr @its_base_type_string, i32 0, i32 %idxprom67.i.i
  %190 = ptrtoint ptr %arrayidx68.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %arrayidx68.i.i, align 4
  %call.i147.i.i = tail call i32 @__virt_to_phys(i32 noundef %166) #15
  %div74135.i.i = lshr i32 %159, 10
  %conv75.i.i = trunc i64 %shr.addr.0.i.i to i32
  %shr76.i.i = ashr i32 %conv75.i.i, 10
  %call77.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95, ptr noundef %phys_base, i32 noundef %div66.i.i, ptr noundef %191, i32 noundef %call.i147.i.i, ptr noundef nonnull %spec.select.i.i, i32 noundef %extract.t.i.i, i32 noundef %div74135.i.i, i32 noundef %shr76.i.i) #18
  %192 = ptrtoint ptr %val2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %192)
  %193 = load i64, ptr %val2.i.i.i, align 8
  %and84.i = and i64 %193, 4035225266123964416
  %and86.i = and i64 %193, 3072
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end82.i, %cleanup.i, %for.body.i.for.inc.i_crit_edge
  %cache.2.ph.i = phi i64 [ %cache.1201.i, %for.body.i.for.inc.i_crit_edge ], [ %cache.1201.i, %cleanup.i ], [ %and84.i, %if.end82.i ]
  %shr.1.ph.i = phi i64 [ %shr.0204.i, %for.body.i.for.inc.i_crit_edge ], [ %shr.0204.i, %cleanup.i ], [ %and86.i, %if.end82.i ]
  %inc.i = add nuw nsw i32 %i.0199.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 8
  br i1 %exitcond.not.i, label %if.end89, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

its_alloc_tables.exit:                            ; preds = %do.end46.i.i, %alloc_pages_node.exit.i.i.its_alloc_tables.exit_crit_edge, %if.end38.i.i.its_alloc_tables.exit_crit_edge
  %retval.1.i = phi i32 [ -6, %do.end46.i.i ], [ -6, %if.end38.i.i.its_alloc_tables.exit_crit_edge ], [ -12, %alloc_pages_node.exit.i.i.its_alloc_tables.exit_crit_edge ]
  tail call fastcc void @its_free_tables(ptr noundef nonnull %call7.i.i) #15
  %194 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %retval.1.i, ptr %err, align 4
  br label %out_free_cmd

if.end89:                                         ; preds = %for.inc.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %195 = load i32, ptr @nr_cpu_ids, align 4
  %196 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %195, i32 16) #15
  %197 = extractvalue { i32, i1 } %196, 1
  br i1 %197, label %kcalloc.exit.thread.i, label %if.end7.i.i.i, !prof !369

kcalloc.exit.thread.i:                            ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #17
  %collections8.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 9
  %198 = ptrtoint ptr %collections8.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr null, ptr %collections8.i, align 8
  br label %out_free_tables

if.end7.i.i.i:                                    ; preds = %if.end89
  %199 = extractvalue { i32, i1 } %196, 0
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %199, i32 noundef 3520) #20
  %collections.i = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 9
  %200 = ptrtoint ptr %collections.i to i32
  call void @__asan_store4_noabort(i32 %200)
  store ptr %call8.i.i.i, ptr %collections.i, align 8
  %tobool.not.i5 = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool.not.i5, label %if.end7.i.i.i.out_free_tables_crit_edge, label %for.cond.preheader.i

if.end7.i.i.i.out_free_tables_crit_edge:          ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_free_tables

for.cond.preheader.i:                             ; preds = %if.end7.i.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %201 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %201)
  %cmp10.not.i = icmp eq i32 %201, 0
  br i1 %cmp10.not.i, label %for.cond.preheader.i.if.end93_crit_edge, label %for.cond.preheader.i.for.body.i8_crit_edge

for.cond.preheader.i.for.body.i8_crit_edge:       ; preds = %for.cond.preheader.i
  br label %for.body.i8

for.cond.preheader.i.if.end93_crit_edge:          ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end93

for.body.i8:                                      ; preds = %for.body.i8.for.body.i8_crit_edge, %for.cond.preheader.i.for.body.i8_crit_edge
  %i.011.i = phi i32 [ %inc.i7, %for.body.i8.for.body.i8_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i8_crit_edge ]
  %202 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %collections.i, align 8
  %arrayidx.i6 = getelementptr %struct.its_collection, ptr %203, i32 %i.011.i
  %204 = ptrtoint ptr %arrayidx.i6 to i32
  call void @__asan_store8_noabort(i32 %204)
  store i64 -1, ptr %arrayidx.i6, align 8
  %inc.i7 = add nuw i32 %i.011.i, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %205 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %inc.i7, %205
  br i1 %cmp.i, label %for.body.i8.for.body.i8_crit_edge, label %for.body.i8.if.end93_crit_edge

for.body.i8.if.end93_crit_edge:                   ; preds = %for.body.i8
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end93

for.body.i8.for.body.i8_crit_edge:                ; preds = %for.body.i8
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i8

if.end93:                                         ; preds = %for.body.i8.if.end93_crit_edge, %for.cond.preheader.i.if.end93_crit_edge
  %206 = ptrtoint ptr %cmd_base to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %cmd_base, align 4
  %208 = ptrtoint ptr %207 to i32
  %call.i = tail call i32 @__virt_to_phys(i32 noundef %208) #15
  %conv96 = zext i32 %call.i to i64
  %or99 = or i64 %conv96, -5188146770730810353
  %209 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %base, align 8
  %add.ptr101 = getelementptr i8, ptr %210, i32 128
  %conv.i10 = trunc i64 %or99 to i32
  %211 = tail call i32 @llvm.bswap.i32(i32 %conv.i10) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr101, i32 %211) #15, !srcloc !362
  %add.ptr.i11 = getelementptr i8, ptr %210, i32 132
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i11, i32 184) #15, !srcloc !362
  %212 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %base, align 8
  %add.ptr103 = getelementptr i8, ptr %213, i32 128
  %214 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr103) #15, !srcloc !361
  %add.ptr.i12 = getelementptr i8, ptr %213, i32 132
  %215 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i12) #15, !srcloc !361
  %216 = call i32 @llvm.bswap.i32(i32 %214)
  %217 = zext i32 %216 to i64
  %xor = xor i64 %or99, %217
  %and105 = and i64 %xor, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and105)
  %tobool106.not = icmp eq i64 %and105, 0
  br i1 %tobool106.not, label %if.end93.if.end122_crit_edge, label %if.then107

if.end93.if.end122_crit_edge:                     ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end122

if.then107:                                       ; preds = %if.end93
  %and108 = and i64 %217, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and108)
  %tobool109.not = icmp eq i64 %and108, 0
  br i1 %tobool109.not, label %if.then110, label %if.then107.do.end118_crit_edge

if.then107.do.end118_crit_edge:                   ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end118

if.then110:                                       ; preds = %if.then107
  call void @__sanitizer_cov_trace_pc() #17
  %218 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %base, align 8
  %add.ptr114 = getelementptr i8, ptr %219, i32 128
  %conv.i13 = and i32 %conv.i10, -3073
  %220 = tail call i32 @llvm.bswap.i32(i32 %conv.i13) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr114, i32 %220) #15, !srcloc !362
  %add.ptr.i16 = getelementptr i8, ptr %219, i32 132
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16, i32 136) #15, !srcloc !362
  br label %do.end118

do.end118:                                        ; preds = %if.then110, %if.then107.do.end118_crit_edge
  %call120 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70) #18
  %221 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %221)
  %222 = load i64, ptr %flags.i, align 8
  %or121 = or i64 %222, 1
  store i64 %or121, ptr %flags.i, align 8
  br label %if.end122

if.end122:                                        ; preds = %do.end118, %if.end93.if.end122_crit_edge
  %223 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load ptr, ptr %base, align 8
  %add.ptr124 = getelementptr i8, ptr %224, i32 136
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr124, i32 0) #15, !srcloc !362
  %add.ptr.i17 = getelementptr i8, ptr %224, i32 140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i17, i32 0) #15, !srcloc !362
  %225 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %base, align 8
  %227 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %226) #15, !srcloc !361
  %228 = or i32 %227, 16777216
  %229 = tail call i32 @llvm.bswap.i32(i32 %228)
  %230 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %230)
  %231 = load i64, ptr %typer15, align 8
  %232 = trunc i64 %231 to i32
  %233 = and i32 %232, 2
  %234 = or i32 %233, %229
  %235 = tail call i32 @llvm.bswap.i32(i32 %234)
  %236 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load ptr, ptr %base, align 8
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %237, i32 %235) #15, !srcloc !362
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %238 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %238, i32 noundef 3520, i32 noundef 32) #22
  %tobool.not.i18 = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool.not.i18, label %if.end122.out_free_tables_crit_edge, label %if.end.i

if.end122.out_free_tables_crit_edge:              ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_free_tables

if.end.i:                                         ; preds = %if.end122
  %call.i.i = tail call ptr @__irq_domain_add(ptr noundef %handle, i32 noundef 0, i32 noundef -1, i32 noundef 0, ptr noundef nonnull @its_domain_ops, ptr noundef nonnull %call7.i.i) #15
  %tobool2.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool2.not.i, label %if.then3.i, label %if.end142

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #15
  br label %out_free_tables

if.end142:                                        ; preds = %if.end.i
  %239 = load ptr, ptr @its_parent, align 4
  %parent.i = getelementptr inbounds %struct.irq_domain, ptr %call.i.i, i32 0, i32 9
  %240 = ptrtoint ptr %parent.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store ptr %239, ptr %parent.i, align 4
  tail call void @irq_domain_update_bus_token(ptr noundef nonnull %call.i.i, i32 noundef 5) #15
  %241 = ptrtoint ptr %msi_domain_flags to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %msi_domain_flags, align 8
  %flags.i19 = getelementptr inbounds %struct.irq_domain, ptr %call.i.i, i32 0, i32 4
  %243 = ptrtoint ptr %flags.i19 to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %flags.i19, align 4
  %or.i = or i32 %244, %242
  store i32 %or.i, ptr %flags.i19, align 4
  %ops.i = getelementptr inbounds %struct.msi_domain_info, ptr %call7.i.i.i, i32 0, i32 1
  %245 = ptrtoint ptr %ops.i to i32
  call void @__asan_store4_noabort(i32 %245)
  store ptr @its_msi_domain_ops, ptr %ops.i, align 4
  %data.i = getelementptr inbounds %struct.msi_domain_info, ptr %call7.i.i.i, i32 0, i32 7
  %246 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %246)
  store ptr %call7.i.i, ptr %data.i, align 4
  %host_data.i = getelementptr inbounds %struct.irq_domain, ptr %call.i.i, i32 0, i32 3
  %247 = ptrtoint ptr %host_data.i to i32
  call void @__asan_store4_noabort(i32 %247)
  store ptr %call7.i.i.i, ptr %host_data.i, align 4
  %248 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %248)
  store i32 0, ptr %err, align 4
  tail call void @_raw_spin_lock(ptr noundef nonnull @its_lock) #15
  %249 = load ptr, ptr @its_nodes, align 4
  %call.i.i22 = tail call zeroext i1 @__list_add_valid(ptr noundef %entry13, ptr noundef nonnull @its_nodes, ptr noundef %249) #15
  br i1 %call.i.i22, label %if.end.i.i, label %if.end142.list_add.exit_crit_edge

if.end142.list_add.exit_crit_edge:                ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %249, i32 0, i32 1
  %250 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %250)
  store ptr %entry13, ptr %prev1.i.i, align 4
  %251 = ptrtoint ptr %entry13 to i32
  call void @__asan_store4_noabort(i32 %251)
  store ptr %249, ptr %entry13, align 8
  %252 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %252)
  store ptr @its_nodes, ptr %prev.i, align 4
  store volatile ptr %entry13, ptr @its_nodes, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end142.list_add.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @its_lock) #15
  br label %cleanup157

out_free_tables:                                  ; preds = %if.then3.i, %if.end122.out_free_tables_crit_edge, %if.end7.i.i.i.out_free_tables_crit_edge, %kcalloc.exit.thread.i
  %253 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %253)
  store i32 -12, ptr %err, align 4
  tail call fastcc void @its_free_tables(ptr noundef nonnull %call7.i.i)
  br label %out_free_cmd

out_free_cmd:                                     ; preds = %out_free_tables, %its_alloc_tables.exit
  %254 = ptrtoint ptr %cmd_base to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %cmd_base, align 4
  %256 = ptrtoint ptr %255 to i32
  tail call void @free_pages(i32 noundef %256, i32 noundef 4) #15
  br label %out_unmap_sgir

out_unmap_sgir:                                   ; preds = %out_free_cmd, %if.then82
  %sgir_base146 = getelementptr inbounds %struct.its_node, ptr %call7.i.i, i32 0, i32 4
  %257 = ptrtoint ptr %sgir_base146 to i32
  call void @__asan_load4_noabort(i32 %257)
  %258 = load ptr, ptr %sgir_base146, align 4
  %tobool147.not = icmp eq ptr %258, null
  br i1 %tobool147.not, label %out_unmap_sgir.out_free_its_crit_edge, label %if.then148

out_unmap_sgir.out_free_its_crit_edge:            ; preds = %out_unmap_sgir
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_free_its

if.then148:                                       ; preds = %out_unmap_sgir
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @iounmap(ptr noundef nonnull %258) #15
  br label %out_free_its

out_free_its:                                     ; preds = %if.then148, %out_unmap_sgir.out_free_its_crit_edge, %cleanup, %if.then21.out_free_its_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #15
  br label %out_unmap

out_unmap:                                        ; preds = %out_free_its, %if.then5
  tail call void @iounmap(ptr noundef nonnull %call) #15
  %259 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load i32, ptr %err, align 4
  %call156 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.73, ptr noundef %res, i32 noundef %260) #18
  br label %cleanup157

cleanup157:                                       ; preds = %out_unmap, %list_add.exit, %entry.cleanup157_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %err) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_matching_node_and_match(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @its_map_one(ptr noundef %res, ptr nocapture noundef writeonly %err) unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %res to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %res, align 4
  %call = tail call ptr @ioremap(i32 noundef %1, i32 noundef 65536) #15
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.47, ptr noundef %res) #18
  %2 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -12, ptr %err, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr i8, ptr %call, i32 65512
  %3 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %4 = lshr i32 %3, 24
  %5 = trunc i32 %4 to i8
  %trunc = and i8 %5, -16
  %6 = zext i8 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.150)
  switch i8 %trunc, label %do.end9 [
    i8 48, label %if.end.if.end13_crit_edge
    i8 64, label %if.end.if.end13_crit_edge36
  ]

if.end.if.end13_crit_edge36:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13

do.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call12 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.50, ptr noundef %res) #18
  %7 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -19, ptr %err, align 4
  br label %out_unmap

if.end13:                                         ; preds = %if.end.if.end13_crit_edge, %if.end.if.end13_crit_edge36
  %call14 = tail call fastcc i32 @its_force_quiescent(ptr noundef nonnull %call)
  %8 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %call14, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end13.cleanup_crit_edge, label %do.end19

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end19:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #17
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53, ptr noundef %res) #18
  br label %out_unmap

out_unmap:                                        ; preds = %do.end19, %do.end9
  tail call void @iounmap(ptr noundef nonnull %call) #15
  br label %cleanup

cleanup:                                          ; preds = %out_unmap, %if.end13.cleanup_crit_edge, %do.end
  %retval.0 = phi ptr [ null, %out_unmap ], [ null, %do.end ], [ %call, %if.end13.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @iounmap(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @ioremap(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_force_quiescent(ptr noundef %base) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %base) #15, !srcloc !361
  %1 = tail call i32 @llvm.bswap.i32(i32 %0)
  %2 = and i32 %1, -2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %2)
  %3 = icmp eq i32 %2, -2147483648
  br i1 %3, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %and3 = and i32 %1, -4
  %4 = tail call i32 @llvm.bswap.i32(i32 %and3)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %base, i32 %4) #15, !srcloc !362
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %base) #15, !srcloc !361
  %.mask30 = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask30)
  %tobool10.not31 = icmp eq i32 %.mask30, 0
  br i1 %tobool10.not31, label %if.end.if.end12_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.if.end12_crit_edge:                        ; preds = %if.end
  br label %if.end12

if.end12:                                         ; preds = %do.end.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %count.032 = phi i32 [ %dec, %do.end.if.end12_crit_edge ], [ 1000000, %if.end.if.end12_crit_edge ]
  %dec = add nsw i32 %count.032, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool13.not = icmp eq i32 %dec, 0
  br i1 %tobool13.not, label %if.end12.cleanup_crit_edge, label %do.end

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end:                                           ; preds = %if.end12
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !382
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !383
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %6(i32 noundef 214748) #15
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %base) #15, !srcloc !361
  %.mask = and i32 %7, 128
  %tobool10.not = icmp eq i32 %.mask, 0
  br i1 %tobool10.not, label %do.end.if.end12_crit_edge, label %do.end.cleanup_crit_edge

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end.if.end12_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12

cleanup:                                          ; preds = %do.end.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %do.end.cleanup_crit_edge ], [ -16, %if.end12.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_compute_its_list_map(ptr noundef %res, ptr noundef %its_base) unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @_find_first_zero_bit_be(ptr noundef nonnull @its_list_map, i32 noundef 16) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %call)
  %cmp = icmp sgt i32 %call, 15
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef %res) #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %its_base) #15, !srcloc !361
  %1 = and i32 %0, 268435455
  %2 = tail call i32 @llvm.bswap.i32(i32 %1)
  %shl = shl i32 %call, 4
  %or = or i32 %2, %shl
  %3 = tail call i32 @llvm.bswap.i32(i32 %or)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %its_base, i32 %3) #15, !srcloc !362
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %its_base) #15, !srcloc !361
  %5 = lshr i32 %4, 24
  %and9 = and i32 %5, 240
  call void @__sanitizer_cov_trace_cmp4(i32 %and9, i32 %shl)
  %cmp11.not = icmp eq i32 %and9, %shl
  %6 = lshr i32 %4, 28
  %spec.select = select i1 %cmp11.not, i32 %call, i32 %6
  %call15 = tail call i32 @_test_and_set_bit(i32 noundef %spec.select, ptr noundef nonnull @its_list_map) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool.not = icmp eq i32 %call15, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %do.end19

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end19:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call22 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.78, ptr noundef %res, i32 noundef %spec.select) #18
  br label %cleanup

cleanup:                                          ; preds = %do.end19, %if.end.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ -22, %do.end19 ], [ %spec.select, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i64 @its_irq_get_msi_base(ptr nocapture noundef readonly %its_dev) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %its1 = getelementptr inbounds %struct.its_device, ptr %its_dev, i32 0, i32 1
  %0 = ptrtoint ptr %its1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %its1, align 4
  %phys_base = getelementptr inbounds %struct.its_node, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %phys_base to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %phys_base, align 8
  %add = add i32 %3, 65600
  %conv = zext i32 %add to i64
  ret i64 %conv
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_free_tables(ptr nocapture noundef %its) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 0
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.for.inc_crit_edge, label %if.then

entry.for.inc_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %1 to i32
  %order = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 0, i32 2
  %3 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %order, align 8
  tail call void @free_pages(i32 noundef %2, i32 noundef %4) #15
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %arrayidx, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.then, %entry.for.inc_crit_edge
  %arrayidx.1 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 1
  %6 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx.1, align 8
  %tobool.not.1 = icmp eq ptr %7, null
  br i1 %tobool.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.1

if.then.1:                                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %7 to i32
  %order.1 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 1, i32 2
  %9 = ptrtoint ptr %order.1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %order.1, align 8
  tail call void @free_pages(i32 noundef %8, i32 noundef %10) #15
  %11 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %arrayidx.1, align 8
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc.for.inc.1_crit_edge
  %arrayidx.2 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 2
  %12 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.2, align 8
  %tobool.not.2 = icmp eq ptr %13, null
  br i1 %tobool.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.2

if.then.2:                                        ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %13 to i32
  %order.2 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 2, i32 2
  %15 = ptrtoint ptr %order.2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %order.2, align 8
  tail call void @free_pages(i32 noundef %14, i32 noundef %16) #15
  %17 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %arrayidx.2, align 8
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then.2, %for.inc.1.for.inc.2_crit_edge
  %arrayidx.3 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 3
  %18 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.3, align 8
  %tobool.not.3 = icmp eq ptr %19, null
  br i1 %tobool.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.3

if.then.3:                                        ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %19 to i32
  %order.3 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 3, i32 2
  %21 = ptrtoint ptr %order.3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %order.3, align 8
  tail call void @free_pages(i32 noundef %20, i32 noundef %22) #15
  %23 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %arrayidx.3, align 8
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then.3, %for.inc.2.for.inc.3_crit_edge
  %arrayidx.4 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 4
  %24 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx.4, align 8
  %tobool.not.4 = icmp eq ptr %25, null
  br i1 %tobool.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.4

if.then.4:                                        ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #17
  %26 = ptrtoint ptr %25 to i32
  %order.4 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 4, i32 2
  %27 = ptrtoint ptr %order.4 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %order.4, align 8
  tail call void @free_pages(i32 noundef %26, i32 noundef %28) #15
  %29 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %arrayidx.4, align 8
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then.4, %for.inc.3.for.inc.4_crit_edge
  %arrayidx.5 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 5
  %30 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.5, align 8
  %tobool.not.5 = icmp eq ptr %31, null
  br i1 %tobool.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.then.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.5

if.then.5:                                        ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %31 to i32
  %order.5 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 5, i32 2
  %33 = ptrtoint ptr %order.5 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %order.5, align 8
  tail call void @free_pages(i32 noundef %32, i32 noundef %34) #15
  %35 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr null, ptr %arrayidx.5, align 8
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then.5, %for.inc.4.for.inc.5_crit_edge
  %arrayidx.6 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 6
  %36 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx.6, align 8
  %tobool.not.6 = icmp eq ptr %37, null
  br i1 %tobool.not.6, label %for.inc.5.for.inc.6_crit_edge, label %if.then.6

for.inc.5.for.inc.6_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.6

if.then.6:                                        ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %37 to i32
  %order.6 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 6, i32 2
  %39 = ptrtoint ptr %order.6 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %order.6, align 8
  tail call void @free_pages(i32 noundef %38, i32 noundef %40) #15
  %41 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr null, ptr %arrayidx.6, align 8
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then.6, %for.inc.5.for.inc.6_crit_edge
  %arrayidx.7 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 7
  %42 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx.7, align 8
  %tobool.not.7 = icmp eq ptr %43, null
  br i1 %tobool.not.7, label %for.inc.6.for.inc.7_crit_edge, label %if.then.7

for.inc.6.for.inc.7_crit_edge:                    ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.7

if.then.7:                                        ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #17
  %44 = ptrtoint ptr %43 to i32
  %order.7 = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 7, i32 2
  %45 = ptrtoint ptr %order.7 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %order.7, align 8
  tail call void @free_pages(i32 noundef %44, i32 noundef %46) #15
  %47 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %arrayidx.7, align 8
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then.7, %for.inc.6.for.inc.7_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_zero_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @gic_enable_quirks(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #6

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_domain_update_bus_token(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__irq_domain_add(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_irq_domain_alloc(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs, ptr nocapture noundef readonly %args) #0 align 64 {
entry:
  %fwspec.i = alloca %struct.irq_fwspec, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %scratchpad = getelementptr inbounds %struct.msi_alloc_info, ptr %args, i32 0, i32 3
  %0 = ptrtoint ptr %scratchpad to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %scratchpad, align 4
  %its1 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %its1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %its1, align 4
  %event_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %event_map.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %event_map.i, align 4
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %6 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs)
  %cmp.i.i = icmp eq i32 %nr_irqs, 0
  br i1 %cmp.i.i, label %entry.get_count_order.exit.i_crit_edge, label %if.end.i.i

entry.get_count_order.exit.i_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %get_count_order.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %dec.i.i = add i32 %nr_irqs, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i.i = icmp eq i32 %dec.i.i, 0
  %8 = tail call i32 @llvm.ctlz.i32(i32 %dec.i.i, i1 true) #15, !range !368
  %sub.i.i.i = sub nuw nsw i32 32, %8
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 0, i32 %sub.i.i.i
  br label %get_count_order.exit.i

get_count_order.exit.i:                           ; preds = %if.end.i.i, %entry.get_count_order.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %cond.i.i.i, %if.end.i.i ], [ -1, %entry.get_count_order.exit.i_crit_edge ]
  %call2.i = tail call i32 @bitmap_find_free_region(ptr noundef %5, i32 noundef %7, i32 noundef %retval.0.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp.i = icmp slt i32 %call2.i, 0
  br i1 %cmp.i, label %get_count_order.exit.i.cleanup_crit_edge, label %if.end

get_count_order.exit.i.cleanup_crit_edge:         ; preds = %get_count_order.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %get_count_order.exit.i
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %9 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %lpi_base.i, align 4
  %add.i = add i32 %10, %call2.i
  %get_msi_base = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 11
  %11 = ptrtoint ptr %get_msi_base to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %get_msi_base, align 8
  %call2 = tail call i64 %12(ptr noundef %1) #15
  br i1 %cmp.i.i, label %if.end.cleanup_crit_edge, label %for.body.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %parent.i = getelementptr inbounds %struct.irq_domain, ptr %domain, i32 0, i32 9
  %param_count.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 1
  %param.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2
  %arrayidx4.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2, i32 1
  %arrayidx6.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.073 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %add = add i32 %i.073, %virq
  %add8 = add i32 %add.i, %i.073
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %fwspec.i) #15
  %13 = call ptr @memset(ptr %fwspec.i, i32 255, i32 72)
  %14 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %parent.i, align 4
  %fwnode.i.i = getelementptr inbounds %struct.irq_domain, ptr %15, i32 0, i32 6
  %16 = ptrtoint ptr %fwnode.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %fwnode.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %17, null
  %cmp.i.i.i.i = icmp ugt ptr %17, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i.i.i = or i1 %tobool.not.i.i.i.i, %cmp.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %for.body.if.else.i_crit_edge, label %is_of_node.exit.i.i

for.body.if.else.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

is_of_node.exit.i.i:                              ; preds = %for.body
  %ops.i.i.i = getelementptr inbounds %struct.fwnode_handle, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i.i.i, align 4
  %cmp.i.i.i = icmp ne ptr %19, @of_fwnode_ops
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 -12
  %tobool.not.i = icmp eq ptr %add.ptr.i.i, null
  %or.cond.i = select i1 %cmp.i.i.i, i1 true, i1 %tobool.not.i
  br i1 %or.cond.i, label %is_of_node.exit.i.i.if.else.i_crit_edge, label %if.then.i

is_of_node.exit.i.i.if.else.i_crit_edge:          ; preds = %is_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.then.i:                                        ; preds = %is_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %fwspec.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %fwspec.i, align 4
  %21 = ptrtoint ptr %param_count.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 3, ptr %param_count.i, align 4
  %22 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -1592735507, ptr %param.i, align 4
  br label %its_irq_gic_domain_alloc.exit

if.else.i:                                        ; preds = %is_of_node.exit.i.i.if.else.i_crit_edge, %for.body.if.else.i_crit_edge
  br i1 %tobool.not.i.i.i.i, label %if.else.i.its_irq_gic_domain_alloc.exit.thread_crit_edge, label %is_fwnode_irqchip.exit.i

if.else.i.its_irq_gic_domain_alloc.exit.thread_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_irq_gic_domain_alloc.exit.thread

is_fwnode_irqchip.exit.i:                         ; preds = %if.else.i
  %ops.i.i = getelementptr inbounds %struct.fwnode_handle, ptr %17, i32 0, i32 1
  %23 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i.i, align 4
  %cmp.i.i59 = icmp eq ptr %24, @irqchip_fwnode_ops
  br i1 %cmp.i.i59, label %if.then10.i, label %is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge

is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge: ; preds = %is_fwnode_irqchip.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_irq_gic_domain_alloc.exit.thread

if.then10.i:                                      ; preds = %is_fwnode_irqchip.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %fwspec.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %17, ptr %fwspec.i, align 4
  %26 = ptrtoint ptr %param_count.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 2, ptr %param_count.i, align 4
  br label %its_irq_gic_domain_alloc.exit

its_irq_gic_domain_alloc.exit.thread:             ; preds = %is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge, %if.else.i.its_irq_gic_domain_alloc.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %fwspec.i) #15
  br label %cleanup

its_irq_gic_domain_alloc.exit:                    ; preds = %if.then10.i, %if.then.i
  %arrayidx4.i.sink = phi ptr [ %arrayidx4.i, %if.then.i ], [ %param.i, %if.then10.i ]
  %arrayidx18.sink.i = phi ptr [ %arrayidx6.i, %if.then.i ], [ %arrayidx4.i, %if.then10.i ]
  %27 = ptrtoint ptr %arrayidx4.i.sink to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %add8, ptr %arrayidx4.i.sink, align 4
  %28 = ptrtoint ptr %arrayidx18.sink.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 1, ptr %arrayidx18.sink.i, align 4
  %call21.i = call i32 @irq_domain_alloc_irqs_parent(ptr noundef %domain, i32 noundef %add, i32 noundef 1, ptr noundef nonnull %fwspec.i) #15
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %fwspec.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool10.not = icmp eq i32 %call21.i, 0
  br i1 %tobool10.not, label %if.end12, label %its_irq_gic_domain_alloc.exit.cleanup_crit_edge

its_irq_gic_domain_alloc.exit.cleanup_crit_edge:  ; preds = %its_irq_gic_domain_alloc.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end12:                                         ; preds = %its_irq_gic_domain_alloc.exit
  %call15 = call i32 @irq_domain_set_hwirq_and_chip(ptr noundef %domain, i32 noundef %add, i32 noundef %add8, ptr noundef nonnull @its_irq_chip, ptr noundef %1) #15
  %call17 = call ptr @irq_get_irq_data(i32 noundef %add) #15
  %common.i = getelementptr inbounds %struct.irq_data, ptr %call17, i32 0, i32 3
  %29 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %common.i, align 4
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %30, align 4
  %or.i = or i32 %32, 16777216
  store i32 %or.i, ptr %30, align 4
  %33 = load ptr, ptr %common.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %or.i62 = or i32 %35, 536870912
  store i32 %or.i62, ptr %33, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_irq_domain_alloc.__UNIQUE_ID_ddebug429, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_irq_domain_alloc, %if.then22)) #15
          to label %for.inc [label %if.then22], !srcloc !366

if.then22:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  %36 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %lpi_base.i, align 4
  %sub = sub i32 %add8, %37
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_irq_domain_alloc.__UNIQUE_ID_ddebug429, ptr noundef nonnull @.str.100, i32 noundef %sub, i32 noundef %add8, i32 noundef %add) #15
  br label %for.inc

for.inc:                                          ; preds = %if.then22, %if.end12
  %inc = add nuw i32 %i.073, 1
  %exitcond.not = icmp eq i32 %inc, %nr_irqs
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %its_irq_gic_domain_alloc.exit.cleanup_crit_edge, %its_irq_gic_domain_alloc.exit.thread, %if.end.cleanup_crit_edge, %get_count_order.exit.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -28, %get_count_order.exit.i.cleanup_crit_edge ], [ -22, %its_irq_gic_domain_alloc.exit.thread ], [ 0, %if.end.cleanup_crit_edge ], [ %call21.i, %its_irq_gic_domain_alloc.exit.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_irq_domain_free(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @irq_domain_get_irq_data(ptr noundef %domain, i32 noundef %virq) #15
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %call, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %its2 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %its2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %its2, align 4
  %event_map = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %event_map to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %event_map, align 4
  %call3 = tail call ptr @irq_domain_get_irq_data(ptr noundef %domain, i32 noundef %virq) #15
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %call3, i32 0, i32 7
  %6 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %chip_data.i.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %7, i32 0, i32 2, i32 2
  %10 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %9, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs)
  %cmp.i = icmp eq i32 %nr_irqs, 0
  br i1 %cmp.i, label %get_count_order.exit.thread, label %for.body.preheader

get_count_order.exit.thread:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @bitmap_release_region(ptr noundef %5, i32 noundef %sub.i, i32 noundef -1) #15
  br label %for.end

for.body.preheader:                               ; preds = %entry
  %dec.i = add i32 %nr_irqs, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool.not.i.i = icmp eq i32 %dec.i, 0
  %12 = tail call i32 @llvm.ctlz.i32(i32 %dec.i, i1 true) #15, !range !368
  %sub.i.i = sub nuw nsw i32 32, %12
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  tail call void @bitmap_release_region(ptr noundef %5, i32 noundef %sub.i, i32 noundef %cond.i.i) #15
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.046 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %add = add i32 %i.046, %virq
  %call6 = tail call ptr @irq_domain_get_irq_data(ptr noundef %domain, i32 noundef %add) #15
  tail call void @irq_domain_reset_irq_data(ptr noundef %call6) #15
  %inc = add nuw i32 %i.046, 1
  %exitcond.not = icmp eq i32 %inc, %nr_irqs
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %get_count_order.exit.thread
  %dev_alloc_lock = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %dev_alloc_lock, i32 noundef 0) #15
  %shared = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %shared to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %shared, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not = icmp eq i8 %14, 0
  br i1 %tobool.not, label %land.lhs.true, label %for.end.if.end_crit_edge

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %for.end
  %nr_lpis = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %15 = ptrtoint ptr %nr_lpis to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %nr_lpis, align 4
  %17 = ptrtoint ptr %event_map to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %event_map, align 4
  %call.i = tail call i32 @_find_first_bit_be(ptr noundef %18, i32 noundef %16) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %16)
  %cmp4.i = icmp eq i32 %call.i, %16
  br i1 %cmp4.i, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %19 = ptrtoint ptr %event_map to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %event_map, align 4
  %lpi_base = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %21 = ptrtoint ptr %lpi_base to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %lpi_base, align 4
  %23 = ptrtoint ptr %nr_lpis to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_lpis, align 4
  %call.i40 = tail call fastcc i32 @free_lpi_range(i32 noundef %22, i32 noundef %24) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i40)
  %tobool.not.i41 = icmp eq i32 %call.i40, 0
  br i1 %tobool.not.i41, label %if.then.its_lpi_free.exit_crit_edge, label %do.end.i, !prof !364

if.then.its_lpi_free.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_free.exit

do.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2162, i32 noundef 9, ptr noundef null) #15
  br label %its_lpi_free.exit

its_lpi_free.exit:                                ; preds = %do.end.i, %if.then.its_lpi_free.exit_crit_edge
  tail call void @bitmap_free(ptr noundef %20) #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %25 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %26 = call ptr @memset(ptr %25, i32 255, i32 12)
  %27 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %1, ptr %desc.i, align 4
  %valid3.i = getelementptr inbounds %struct.anon.91, ptr %desc.i, i32 0, i32 1
  %28 = ptrtoint ptr %valid3.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %valid3.i, align 4
  %29 = ptrtoint ptr %its2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %its2, align 4
  call fastcc void @its_send_single_command(ptr noundef %30, ptr noundef nonnull @its_build_mapd_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  %31 = ptrtoint ptr %its2 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %its2, align 4
  %call.i44 = call i32 @_raw_spin_lock_irqsave(ptr noundef %32) #15
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %its_lpi_free.exit.its_free_device.exit_crit_edge

its_lpi_free.exit.its_free_device.exit_crit_edge: ; preds = %its_lpi_free.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_free_device.exit

if.end.i.i.i:                                     ; preds = %its_lpi_free.exit
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %33 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i.i, align 4
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %1, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev1.i.i.i.i, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %36, ptr %34, align 4
  br label %its_free_device.exit

its_free_device.exit:                             ; preds = %if.end.i.i.i, %its_lpi_free.exit.its_free_device.exit_crit_edge
  %39 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr inttoptr (i32 256 to ptr), ptr %1, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %40 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %41 = ptrtoint ptr %its2 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %its2, align 4
  call void @_raw_spin_unlock_irqrestore(ptr noundef %42, i32 noundef %call.i44) #15
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %43 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %col_map.i, align 4
  call void @kfree(ptr noundef %44) #15
  %itt.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 3
  %45 = ptrtoint ptr %itt.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %itt.i, align 4
  call void @kfree(ptr noundef %46) #15
  call void @kfree(ptr noundef %1) #15
  br label %if.end

if.end:                                           ; preds = %its_free_device.exit, %land.lhs.true.if.end_crit_edge, %for.end.if.end_crit_edge
  call void @mutex_unlock(ptr noundef %dev_alloc_lock) #15
  call void @irq_domain_free_irqs_parent(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_irq_domain_activate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d, i1 noundef zeroext %reserve) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %3, %5
  %call2 = tail call fastcc i32 @its_select_cpu(ptr noundef %d, ptr noundef nonnull @__cpu_online_mask)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call2, i32 %6)
  %cmp3.not = icmp ult i32 %call2, %6
  br i1 %cmp3.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %common.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %7 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %common.i.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %and.i.i = and i32 %10, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  %arrayidx8.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call2
  %11 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx8.i, align 4
  %add9.i = add i32 %12, ptrtoint (ptr @cpu_lpi_count to i32)
  %13 = inttoptr i32 %add9.i to ptr
  br i1 %tobool.i.not.i, label %do.body2.i, label %do.body.i

do.body.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %13, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %13, i32 1, i32 3, i32 1) #15
  %14 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %13, ptr %13, i32 1, ptr elementtype(i32) %13) #15, !srcloc !384
  br label %its_inc_lpi_count.exit

do.body2.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %unmanaged.i = getelementptr inbounds %struct.cpu_lpi_count, ptr %13, i32 0, i32 1
  %call.i.i11.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %unmanaged.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %unmanaged.i, i32 1, i32 3, i32 1) #15
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %unmanaged.i, ptr %unmanaged.i, i32 1, ptr elementtype(i32) %unmanaged.i) #15, !srcloc !384
  br label %its_inc_lpi_count.exit

its_inc_lpi_count.exit:                           ; preds = %do.body2.i, %do.body.i
  %conv = trunc i32 %call2 to i16
  %col_map = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %col_map to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %col_map, align 4
  %arrayidx = getelementptr i16, ptr %17, i32 %sub.i
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv, ptr %arrayidx, align 2
  %rem.i = and i32 %call2, 31
  %add.i = add nuw nsw i32 %rem.i, 1
  %arrayidx.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i
  %div3.i = lshr i32 %call2, 5
  %idx.neg.i = sub nsw i32 0, %div3.i
  %add.ptr.i = getelementptr i32, ptr %arrayidx.i, i32 %idx.neg.i
  %19 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %common.i.i, align 4
  %effective_affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %20, i32 0, i32 4
  %21 = ptrtoint ptr %effective_affinity.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %effective_affinity.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %23 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %23, 31
  %24 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %24, 536870908
  %25 = call ptr @memcpy(ptr %22, ptr %add.ptr.i, i32 %mul.i.i.i)
  %26 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %hwirq.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %28 = getelementptr inbounds i8, ptr %desc.i, i32 12
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_storeN_noabort(i32 %29, i32 8)
  store i64 -1, ptr %28, align 4
  %30 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %1, ptr %desc.i, align 4
  %phys_id.i = getelementptr inbounds %struct.anon.93, ptr %desc.i, i32 0, i32 1
  %31 = ptrtoint ptr %phys_id.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %27, ptr %phys_id.i, align 4
  %event_id.i = getelementptr inbounds %struct.anon.93, ptr %desc.i, i32 0, i32 2
  %32 = ptrtoint ptr %event_id.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %sub.i, ptr %event_id.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %33 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %34, ptr noundef nonnull @its_build_mapti_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %cleanup

cleanup:                                          ; preds = %its_inc_lpi_count.exit, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %its_inc_lpi_count.exit ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_irq_domain_deactivate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %3, %5
  %col_map = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %6 = ptrtoint ptr %col_map to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %col_map, align 4
  %arrayidx = getelementptr i16, ptr %7, i32 %sub.i
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %arrayidx, align 2
  %conv = zext i16 %9 to i32
  %common.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %10 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %common.i.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 4
  %and.i.i = and i32 %13, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  %arrayidx8.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv
  %14 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx8.i, align 4
  %add9.i = add i32 %15, ptrtoint (ptr @cpu_lpi_count to i32)
  %16 = inttoptr i32 %add9.i to ptr
  br i1 %tobool.i.not.i, label %do.body2.i, label %do.body.i

do.body.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %16, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %16, i32 1, i32 3, i32 1) #15
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #15, !srcloc !385
  br label %its_dec_lpi_count.exit

do.body2.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %unmanaged.i = getelementptr inbounds %struct.cpu_lpi_count, ptr %16, i32 0, i32 1
  %call.i.i11.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %unmanaged.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %unmanaged.i, i32 1, i32 3, i32 1) #15
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %unmanaged.i, ptr %unmanaged.i, i32 1, ptr elementtype(i32) %unmanaged.i) #15, !srcloc !385
  br label %its_dec_lpi_count.exit

its_dec_lpi_count.exit:                           ; preds = %do.body2.i, %do.body.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %19 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %20 = call ptr @memset(ptr %19, i32 255, i32 12)
  %21 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %1, ptr %desc.i, align 4
  %event_id.i = getelementptr inbounds %struct.anon.95, ptr %desc.i, i32 0, i32 1
  %22 = ptrtoint ptr %event_id.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %sub.i, ptr %event_id.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %23 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %24, ptr noundef nonnull @its_build_discard_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_domain_set_hwirq_and_chip(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @irq_get_irq_data(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bitmap_find_free_region(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_domain_alloc_irqs_parent(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_mask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %0 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %common.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %and.i = and i32 %3, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_vlpi_set_doorbell(ptr noundef %d, i1 noundef zeroext false)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @lpi_update_config(ptr noundef %d, i8 noundef zeroext 1, i8 noundef zeroext 0)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_unmask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %0 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %common.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %and.i = and i32 %3, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_vlpi_set_doorbell(ptr noundef %d, i1 noundef zeroext true)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @lpi_update_config(ptr noundef %d, i8 noundef zeroext 0, i8 noundef zeroext 1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_chip_eoi_parent(ptr noundef) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_set_affinity(ptr nocapture noundef readonly %d, ptr noundef %mask_val, i1 noundef zeroext %force) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %3, %5
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %6 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %common.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %and.i = and i32 %9, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %col_map = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %10 = ptrtoint ptr %col_map to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %col_map, align 4
  %arrayidx = getelementptr i16, ptr %11, i32 %sub.i
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %arrayidx, align 2
  %conv = zext i16 %13 to i32
  %and.i.i = and i32 %9, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  %arrayidx8.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv
  %14 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx8.i, align 4
  %add9.i = add i32 %15, ptrtoint (ptr @cpu_lpi_count to i32)
  %16 = inttoptr i32 %add9.i to ptr
  br i1 %tobool.i.not.i, label %do.body2.i, label %do.body.i

do.body.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %16, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %16, i32 1, i32 3, i32 1) #15
  %17 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %16, ptr %16, i32 1, ptr elementtype(i32) %16) #15, !srcloc !385
  br label %its_dec_lpi_count.exit

do.body2.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %unmanaged.i = getelementptr inbounds %struct.cpu_lpi_count, ptr %16, i32 0, i32 1
  %call.i.i11.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %unmanaged.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %unmanaged.i, i32 1, i32 3, i32 1) #15
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %unmanaged.i, ptr %unmanaged.i, i32 1, ptr elementtype(i32) %unmanaged.i) #15, !srcloc !385
  br label %its_dec_lpi_count.exit

its_dec_lpi_count.exit:                           ; preds = %do.body2.i, %do.body.i
  br i1 %force, label %if.else, label %if.then3

if.then3:                                         ; preds = %its_dec_lpi_count.exit
  call void @__sanitizer_cov_trace_pc() #17
  %call4 = tail call fastcc i32 @its_select_cpu(ptr noundef %d, ptr noundef %mask_val)
  br label %if.end6

if.else:                                          ; preds = %its_dec_lpi_count.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %19 = load i32, ptr @nr_cpu_ids, align 4
  %call8.i = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef %mask_val) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call8.i, i32 %19)
  %cmp9.i = icmp ult i32 %call8.i, %19
  br i1 %cmp9.i, label %if.else.for.body.i_crit_edge, label %if.else.if.end6_crit_edge

if.else.if.end6_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.else.for.body.i_crit_edge:                     ; preds = %if.else
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.else.for.body.i_crit_edge
  %call12.i = phi i32 [ %call.i, %for.body.i.for.body.i_crit_edge ], [ %call8.i, %if.else.for.body.i_crit_edge ]
  %count.011.i = phi i32 [ %28, %for.body.i.for.body.i_crit_edge ], [ 2147483647, %if.else.for.body.i_crit_edge ]
  %cpu.010.i = phi i32 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ %19, %if.else.for.body.i_crit_edge ]
  %20 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %common.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %and.i.i.i = and i32 %23, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  %arrayidx9.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i
  %24 = ptrtoint ptr %arrayidx9.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx9.i.i, align 4
  %add10.i.i = add i32 %25, ptrtoint (ptr @cpu_lpi_count to i32)
  %26 = inttoptr i32 %add10.i.i to ptr
  %unmanaged.i.i = getelementptr inbounds %struct.cpu_lpi_count, ptr %26, i32 0, i32 1
  %unmanaged.sink.i.i = select i1 %tobool.i.not.i.i, ptr %unmanaged.i.i, ptr %26
  %call.i.i13.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %unmanaged.sink.i.i, i32 noundef 4) #15
  %27 = ptrtoint ptr %unmanaged.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %retval.0.i.i = load volatile i32, ptr %unmanaged.sink.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i, i32 %count.011.i)
  %cmp2.i = icmp slt i32 %retval.0.i.i, %count.011.i
  %spec.select.i = select i1 %cmp2.i, i32 %call12.i, i32 %cpu.010.i
  %28 = tail call i32 @llvm.smin.i32(i32 %retval.0.i.i, i32 %count.011.i) #15
  %call.i = tail call i32 @cpumask_next(i32 noundef %call12.i, ptr noundef %mask_val) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i, %29
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end6_crit_edge

for.body.i.if.end6_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

if.end6:                                          ; preds = %for.body.i.if.end6_crit_edge, %if.else.if.end6_crit_edge, %if.then3
  %cpu.0 = phi i32 [ %call4, %if.then3 ], [ %19, %if.else.if.end6_crit_edge ], [ %spec.select.i, %for.body.i.if.end6_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cpu.0)
  %cmp = icmp slt i32 %cpu.0, 0
  br i1 %cmp, label %if.end6.err_crit_edge, label %lor.lhs.false

if.end6.err_crit_edge:                            ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %err

lor.lhs.false:                                    ; preds = %if.end6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %30 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cpu.0, i32 %30)
  %cmp8.not = icmp ult i32 %cpu.0, %30
  br i1 %cmp8.not, label %if.end11, label %lor.lhs.false.err_crit_edge

lor.lhs.false.err_crit_edge:                      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %err

if.end11:                                         ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_cmp4(i32 %cpu.0, i32 %conv)
  %cmp12.not = icmp eq i32 %cpu.0, %conv
  br i1 %cmp12.not, label %if.end11.if.end21_crit_edge, label %if.then14

if.end11.if.end21_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end21

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #17
  %its = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %31 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %its, align 4
  %collections = getelementptr inbounds %struct.its_node, ptr %32, i32 0, i32 9
  %33 = ptrtoint ptr %collections to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %collections, align 8
  %arrayidx15 = getelementptr %struct.its_collection, ptr %34, i32 %cpu.0
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %35 = getelementptr inbounds i8, ptr %desc.i, i32 12
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_storeN_noabort(i32 %36, i32 8)
  store i64 -1, ptr %35, align 4
  %37 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %1, ptr %desc.i, align 4
  %col2.i = getelementptr inbounds %struct.anon.94, ptr %desc.i, i32 0, i32 1
  %38 = ptrtoint ptr %col2.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %arrayidx15, ptr %col2.i, align 4
  %event_id.i = getelementptr inbounds %struct.anon.94, ptr %desc.i, i32 0, i32 2
  %39 = ptrtoint ptr %event_id.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %sub.i, ptr %event_id.i, align 4
  %40 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_command(ptr noundef %41, ptr noundef nonnull @its_build_movi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  %conv16 = trunc i32 %cpu.0 to i16
  %42 = ptrtoint ptr %col_map to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %col_map, align 4
  %arrayidx19 = getelementptr i16, ptr %43, i32 %sub.i
  %44 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_store2_noabort(i32 %44)
  store i16 %conv16, ptr %arrayidx19, align 2
  %rem.i = and i32 %cpu.0, 31
  %add.i = add nuw nsw i32 %rem.i, 1
  %arrayidx.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i
  %div3.i = lshr i32 %cpu.0, 5
  %idx.neg.i = sub nsw i32 0, %div3.i
  %add.ptr.i = getelementptr i32, ptr %arrayidx.i, i32 %idx.neg.i
  %45 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %common.i, align 4
  %effective_affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %46, i32 0, i32 4
  %47 = ptrtoint ptr %effective_affinity.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %effective_affinity.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %49 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %49, 31
  %50 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %50, 536870908
  %51 = call ptr @memcpy(ptr %48, ptr %add.ptr.i, i32 %mul.i.i.i)
  br label %if.end21

if.end21:                                         ; preds = %if.then14, %if.end11.if.end21_crit_edge
  %52 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %common.i, align 4
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %53, align 4
  %and.i.i50 = and i32 %55, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i50)
  %tobool.i.not.i51 = icmp eq i32 %and.i.i50, 0
  %arrayidx8.i52 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0
  %56 = ptrtoint ptr %arrayidx8.i52 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx8.i52, align 4
  %add9.i53 = add i32 %57, ptrtoint (ptr @cpu_lpi_count to i32)
  %58 = inttoptr i32 %add9.i53 to ptr
  br i1 %tobool.i.not.i51, label %do.body2.i58, label %do.body.i55

do.body.i55:                                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i54 = call zeroext i1 @__kasan_check_write(ptr noundef %58, i32 noundef 4) #15
  call void @llvm.prefetch.p0(ptr %58, i32 1, i32 3, i32 1) #15
  %59 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %58, ptr %58, i32 1, ptr elementtype(i32) %58) #15, !srcloc !384
  br label %cleanup

do.body2.i58:                                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #17
  %unmanaged.i56 = getelementptr inbounds %struct.cpu_lpi_count, ptr %58, i32 0, i32 1
  %call.i.i11.i57 = call zeroext i1 @__kasan_check_write(ptr noundef %unmanaged.i56, i32 noundef 4) #15
  call void @llvm.prefetch.p0(ptr %unmanaged.i56, i32 1, i32 3, i32 1) #15
  %60 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %unmanaged.i56, ptr %unmanaged.i56, i32 1, ptr elementtype(i32) %unmanaged.i56) #15, !srcloc !384
  br label %cleanup

err:                                              ; preds = %lor.lhs.false.err_crit_edge, %if.end6.err_crit_edge
  %61 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %common.i, align 4
  %63 = ptrtoint ptr %62 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %62, align 4
  %and.i.i60 = and i32 %64, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i60)
  %tobool.i.not.i61 = icmp eq i32 %and.i.i60, 0
  %65 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %arrayidx8.i, align 4
  %add9.i63 = add i32 %66, ptrtoint (ptr @cpu_lpi_count to i32)
  %67 = inttoptr i32 %add9.i63 to ptr
  br i1 %tobool.i.not.i61, label %do.body2.i68, label %do.body.i65

do.body.i65:                                      ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i.i64 = tail call zeroext i1 @__kasan_check_write(ptr noundef %67, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %67, i32 1, i32 3, i32 1) #15
  %68 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %67, ptr %67, i32 1, ptr elementtype(i32) %67) #15, !srcloc !384
  br label %cleanup

do.body2.i68:                                     ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  %unmanaged.i66 = getelementptr inbounds %struct.cpu_lpi_count, ptr %67, i32 0, i32 1
  %call.i.i11.i67 = tail call zeroext i1 @__kasan_check_write(ptr noundef %unmanaged.i66, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %unmanaged.i66, i32 1, i32 3, i32 1) #15
  %69 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %unmanaged.i66, ptr %unmanaged.i66, i32 1, ptr elementtype(i32) %unmanaged.i66) #15, !srcloc !384
  br label %cleanup

cleanup:                                          ; preds = %do.body2.i68, %do.body.i65, %do.body2.i58, %do.body.i55, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 2, %do.body.i55 ], [ 2, %do.body2.i58 ], [ -22, %do.body.i65 ], [ -22, %do.body2.i68 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_irq_retrigger(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i25.i = alloca %struct.its_cmd_desc, align 4
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i.i, align 4
  %hwirq.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i.i, align 4
  %lpi_base.i.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i.i, align 4
  %sub.i.i = sub i32 %3, %5
  %common.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %6 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %common.i.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %and.i.i = and i32 %9, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.else6.i, label %if.then3.i

if.then3.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %10 = getelementptr inbounds i8, ptr %desc.i.i, i32 8
  %11 = call ptr @memset(ptr %10, i32 255, i32 12)
  %12 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %1, ptr %desc.i.i, align 4
  %event_id2.i.i = getelementptr inbounds %struct.anon.90, ptr %desc.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %event_id2.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub.i.i, ptr %event_id2.i.i, align 4
  %its.i.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %its.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %its.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %15, ptr noundef nonnull @its_build_vint_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  br label %its_irq_set_irqchip_state.exit

if.else6.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i25.i) #15
  %16 = getelementptr inbounds i8, ptr %desc.i25.i, i32 8
  %17 = call ptr @memset(ptr %16, i32 255, i32 12)
  %18 = ptrtoint ptr %desc.i25.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %1, ptr %desc.i25.i, align 4
  %event_id2.i26.i = getelementptr inbounds %struct.anon.90, ptr %desc.i25.i, i32 0, i32 1
  %19 = ptrtoint ptr %event_id2.i26.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %sub.i.i, ptr %event_id2.i26.i, align 4
  %its.i27.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %20 = ptrtoint ptr %its.i27.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %its.i27.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %21, ptr noundef nonnull @its_build_int_cmd, ptr noundef nonnull %desc.i25.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i25.i) #15
  br label %its_irq_set_irqchip_state.exit

its_irq_set_irqchip_state.exit:                   ; preds = %if.else6.i, %if.then3.i
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_irq_compose_msi_msg(ptr nocapture noundef readonly %d, ptr nocapture noundef writeonly %msg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %its1 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %its1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %its1, align 4
  %get_msi_base = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %get_msi_base to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %get_msi_base, align 8
  %call2 = tail call i64 %5(ptr noundef %1) #15
  %conv = trunc i64 %call2 to i32
  %6 = ptrtoint ptr %msg to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %conv, ptr %msg, align 4
  %shr = lshr i64 %call2, 32
  %conv4 = trunc i64 %shr to i32
  %7 = getelementptr inbounds %struct.msi_msg, ptr %msg, i32 0, i32 1
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv4, ptr %7, align 4
  %9 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %11 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %10, i32 0, i32 2, i32 2
  %13 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %12, %14
  %15 = getelementptr inbounds %struct.msi_msg, ptr %msg, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub.i, ptr %15, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_irq_set_irqchip_state(ptr nocapture noundef readonly %d, i32 noundef %which, i1 noundef zeroext %state) #0 align 64 {
entry:
  %desc.i28 = alloca %struct.its_cmd_desc, align 4
  %desc.i25 = alloca %struct.its_cmd_desc, align 4
  %desc.i22 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %3, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %which)
  %cmp.not = icmp eq i32 %which, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %6 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %common.i, align 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %and.i = and i32 %9, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.else6, label %if.then3

if.then3:                                         ; preds = %if.end
  br i1 %state, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %10 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %11 = call ptr @memset(ptr %10, i32 255, i32 12)
  %12 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %1, ptr %desc.i, align 4
  %event_id2.i = getelementptr inbounds %struct.anon.90, ptr %desc.i, i32 0, i32 1
  %13 = ptrtoint ptr %event_id2.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %sub.i, ptr %event_id2.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %14 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %15, ptr noundef nonnull @its_build_vint_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %cleanup

if.else:                                          ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i22) #15
  %16 = getelementptr inbounds i8, ptr %desc.i22, i32 8
  %17 = call ptr @memset(ptr %16, i32 255, i32 12)
  %18 = ptrtoint ptr %desc.i22 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %1, ptr %desc.i22, align 4
  %event_id2.i23 = getelementptr inbounds %struct.anon.89, ptr %desc.i22, i32 0, i32 1
  %19 = ptrtoint ptr %event_id2.i23 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %sub.i, ptr %event_id2.i23, align 4
  %its.i24 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %20 = ptrtoint ptr %its.i24 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %its.i24, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %21, ptr noundef nonnull @its_build_vclear_cmd, ptr noundef nonnull %desc.i22) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i22) #15
  br label %cleanup

if.else6:                                         ; preds = %if.end
  br i1 %state, label %if.then8, label %if.else9

if.then8:                                         ; preds = %if.else6
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i25) #15
  %22 = getelementptr inbounds i8, ptr %desc.i25, i32 8
  %23 = call ptr @memset(ptr %22, i32 255, i32 12)
  %24 = ptrtoint ptr %desc.i25 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %1, ptr %desc.i25, align 4
  %event_id2.i26 = getelementptr inbounds %struct.anon.90, ptr %desc.i25, i32 0, i32 1
  %25 = ptrtoint ptr %event_id2.i26 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %sub.i, ptr %event_id2.i26, align 4
  %its.i27 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %26 = ptrtoint ptr %its.i27 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %its.i27, align 4
  call fastcc void @its_send_single_command(ptr noundef %27, ptr noundef nonnull @its_build_int_cmd, ptr noundef nonnull %desc.i25) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i25) #15
  br label %cleanup

if.else9:                                         ; preds = %if.else6
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i28) #15
  %28 = getelementptr inbounds i8, ptr %desc.i28, i32 8
  %29 = call ptr @memset(ptr %28, i32 255, i32 12)
  %30 = ptrtoint ptr %desc.i28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %1, ptr %desc.i28, align 4
  %event_id2.i29 = getelementptr inbounds %struct.anon.89, ptr %desc.i28, i32 0, i32 1
  %31 = ptrtoint ptr %event_id2.i29 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %sub.i, ptr %event_id2.i29, align 4
  %its.i30 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %32 = ptrtoint ptr %its.i30 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %its.i30, align 4
  call fastcc void @its_send_single_command(ptr noundef %33, ptr noundef nonnull @its_build_clear_cmd, ptr noundef nonnull %desc.i28) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i28) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else9, %if.then8, %if.else, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.then8 ], [ 0, %if.else9 ], [ 0, %if.then4 ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_irq_set_vcpu_affinity(ptr nocapture noundef readonly %d, ptr noundef readonly %vcpu_info) #0 align 64 {
entry:
  %desc.i65.i = alloca %struct.its_cmd_desc, align 4
  %desc.i62.i = alloca %struct.its_cmd_desc, align 4
  %desc.i39.i.i = alloca %struct.its_cmd_desc, align 4
  %desc.i.i.i19 = alloca %struct.its_cmd_desc, align 4
  %desc.i.i20 = alloca %struct.its_cmd_desc, align 4
  %desc.i.i.i = alloca %struct.its_cmd_desc, align 4
  %desc.i32.i = alloca %struct.its_cmd_desc, align 4
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %its = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %its, align 4
  %typer = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %typer, align 8
  %and = and i64 %5, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool1.not = icmp eq ptr %vcpu_info, null
  br i1 %tobool1.not, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %hwirq.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %6 = ptrtoint ptr %hwirq.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hwirq.i.i, align 4
  %lpi_base.i.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %8 = ptrtoint ptr %lpi_base.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lpi_base.i.i, align 4
  %sub.i.i = sub i32 %7, %9
  %vlpi_lock.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 4
  tail call void @_raw_spin_lock(ptr noundef %vlpi_lock.i) #15
  %vm.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 5
  %10 = ptrtoint ptr %vm.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %vm.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %if.then2.its_vlpi_unmap.exit_crit_edge, label %lor.lhs.false.i

if.then2.its_vlpi_unmap.exit_crit_edge:           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_unmap.exit

lor.lhs.false.i:                                  ; preds = %if.then2
  %common.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %12 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %common.i.i, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %and.i.i = and i32 %15, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %lor.lhs.false.i.its_vlpi_unmap.exit_crit_edge, label %if.end.i

lor.lhs.false.i.its_vlpi_unmap.exit_crit_edge:    ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_unmap.exit

if.end.i:                                         ; preds = %lor.lhs.false.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %16 = getelementptr inbounds i8, ptr %desc.i.i, i32 8
  %17 = call ptr @memset(ptr %16, i32 255, i32 12)
  %18 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %1, ptr %desc.i.i, align 4
  %event_id.i.i = getelementptr inbounds %struct.anon.95, ptr %desc.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %event_id.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %sub.i.i, ptr %event_id.i.i, align 4
  %20 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_command(ptr noundef %21, ptr noundef nonnull @its_build_discard_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  %22 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %common.i.i, align 4
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  %and.i31.i = and i32 %25, -1048577
  store i32 %and.i31.i, ptr %23, align 4
  %26 = ptrtoint ptr %hwirq.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %hwirq.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i32.i) #15
  %28 = getelementptr inbounds i8, ptr %desc.i32.i, i32 12
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_storeN_noabort(i32 %29, i32 8)
  store i64 -1, ptr %28, align 4
  %30 = ptrtoint ptr %desc.i32.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %1, ptr %desc.i32.i, align 4
  %phys_id.i.i = getelementptr inbounds %struct.anon.93, ptr %desc.i32.i, i32 0, i32 1
  %31 = ptrtoint ptr %phys_id.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %27, ptr %phys_id.i.i, align 4
  %event_id.i33.i = getelementptr inbounds %struct.anon.93, ptr %desc.i32.i, i32 0, i32 2
  %32 = ptrtoint ptr %event_id.i33.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %sub.i.i, ptr %event_id.i33.i, align 4
  %33 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_command(ptr noundef %34, ptr noundef nonnull @its_build_mapti_cmd, ptr noundef nonnull %desc.i32.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i32.i) #15
  call fastcc void @lpi_update_config(ptr noundef %d, i8 noundef zeroext -1, i8 noundef zeroext -93) #15
  %35 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %its, align 4
  %37 = ptrtoint ptr %vm.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %vm.i, align 4
  %39 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i.i.i = icmp eq i32 %39, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.its_unmap_vm.exit.i_crit_edge, label %gic_requires_eager_mapping.exit.i.i

if.end.i.its_unmap_vm.exit.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_unmap_vm.exit.i

gic_requires_eager_mapping.exit.i.i:              ; preds = %if.end.i
  %40 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i.i = getelementptr inbounds %struct.rdists, ptr %40, i32 0, i32 8
  %41 = ptrtoint ptr %has_rvpeid.i.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %has_rvpeid.i.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %tobool1.not.i.not.i.i = icmp eq i8 %42, 0
  br i1 %tobool1.not.i.not.i.i, label %do.body.i.i, label %gic_requires_eager_mapping.exit.i.i.its_unmap_vm.exit.i_crit_edge

gic_requires_eager_mapping.exit.i.i.its_unmap_vm.exit.i_crit_edge: ; preds = %gic_requires_eager_mapping.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_unmap_vm.exit.i

do.body.i.i:                                      ; preds = %gic_requires_eager_mapping.exit.i.i
  %call1.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vmovp_lock) #15
  %list_nr.i.i = getelementptr inbounds %struct.its_node, ptr %36, i32 0, i32 18
  %43 = ptrtoint ptr %list_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %list_nr.i.i, align 8
  %arrayidx.i.i = getelementptr %struct.its_vm, ptr %38, i32 0, i32 8, i32 %44
  %45 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx.i.i, align 4
  %dec.i.i = add i32 %46, -1
  store i32 %dec.i.i, ptr %arrayidx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %tobool.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %tobool.not.i.i, label %for.cond.preheader.i.i, label %do.body.i.i.do.body7.i.i_crit_edge

do.body.i.i.do.body7.i.i_crit_edge:               ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body7.i.i

for.cond.preheader.i.i:                           ; preds = %do.body.i.i
  %nr_vpes.i.i = getelementptr inbounds %struct.its_vm, ptr %38, i32 0, i32 4
  %47 = ptrtoint ptr %nr_vpes.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nr_vpes.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp321.i.i = icmp sgt i32 %48, 0
  br i1 %cmp321.i.i, label %for.body.lr.ph.i.i, label %for.cond.preheader.i.i.do.body7.i.i_crit_edge

for.cond.preheader.i.i.do.body7.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body7.i.i

for.body.lr.ph.i.i:                               ; preds = %for.cond.preheader.i.i
  %vpes.i.i = getelementptr inbounds %struct.its_vm, ptr %38, i32 0, i32 3
  %49 = getelementptr inbounds i8, ptr %desc.i.i.i, i32 8
  %collections.i.i.i = getelementptr inbounds %struct.its_node, ptr %36, i32 0, i32 9
  %col.i.i.i = getelementptr inbounds %struct.anon.98, ptr %desc.i.i.i, i32 0, i32 1
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %i.022.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %50 = ptrtoint ptr %vpes.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %vpes.i.i, align 4
  %arrayidx5.i.i = getelementptr ptr, ptr %51, i32 %i.022.i.i
  %52 = ptrtoint ptr %arrayidx5.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx5.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i.i) #15
  %54 = call ptr @memset(ptr %49, i32 255, i32 12)
  %55 = ptrtoint ptr %desc.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %53, ptr %desc.i.i.i, align 4
  %56 = ptrtoint ptr %49 to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 0, ptr %49, align 4
  %57 = ptrtoint ptr %collections.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %collections.i.i.i, align 8
  %col_idx.i.i.i = getelementptr inbounds %struct.its_vpe, ptr %53, i32 0, i32 9
  %59 = ptrtoint ptr %col_idx.i.i.i to i32
  call void @__asan_load2_noabort(i32 %59)
  %60 = load i16, ptr %col_idx.i.i.i, align 4
  %idxprom.i.i.i = zext i16 %60 to i32
  %arrayidx.i.i.i = getelementptr %struct.its_collection, ptr %58, i32 %idxprom.i.i.i
  %61 = ptrtoint ptr %col.i.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %arrayidx.i.i.i, ptr %col.i.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %36, ptr noundef nonnull @its_build_vmapp_cmd, ptr noundef nonnull %desc.i.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i.i) #15
  %inc.i.i = add nuw nsw i32 %i.022.i.i, 1
  %62 = ptrtoint ptr %nr_vpes.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %nr_vpes.i.i, align 4
  %cmp3.i.i = icmp slt i32 %inc.i.i, %63
  br i1 %cmp3.i.i, label %for.body.i.i.for.body.i.i_crit_edge, label %for.body.i.i.do.body7.i.i_crit_edge

for.body.i.i.do.body7.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body7.i.i

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

do.body7.i.i:                                     ; preds = %for.body.i.i.do.body7.i.i_crit_edge, %for.cond.preheader.i.i.do.body7.i.i_crit_edge, %do.body.i.i.do.body7.i.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vmovp_lock, i32 noundef %call1.i.i) #15
  br label %its_unmap_vm.exit.i

its_unmap_vm.exit.i:                              ; preds = %do.body7.i.i, %gic_requires_eager_mapping.exit.i.i.its_unmap_vm.exit.i_crit_edge, %if.end.i.its_unmap_vm.exit.i_crit_edge
  %nr_vlpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 7
  %64 = ptrtoint ptr %nr_vlpis.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %nr_vlpis.i, align 4
  %dec.i = add i32 %65, -1
  store i32 %dec.i, ptr %nr_vlpis.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool7.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool7.not.i, label %if.then8.i, label %its_unmap_vm.exit.i.its_vlpi_unmap.exit_crit_edge

its_unmap_vm.exit.i.its_vlpi_unmap.exit_crit_edge: ; preds = %its_unmap_vm.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_unmap.exit

if.then8.i:                                       ; preds = %its_unmap_vm.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %66 = ptrtoint ptr %vm.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %vm.i, align 4
  %vlpi_maps.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %67 = ptrtoint ptr %vlpi_maps.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %vlpi_maps.i, align 4
  call void @kfree(ptr noundef %68) #15
  br label %its_vlpi_unmap.exit

its_vlpi_unmap.exit:                              ; preds = %if.then8.i, %its_unmap_vm.exit.i.its_vlpi_unmap.exit_crit_edge, %lor.lhs.false.i.its_vlpi_unmap.exit_crit_edge, %if.then2.its_vlpi_unmap.exit_crit_edge
  %ret.0.i = phi i32 [ 0, %its_unmap_vm.exit.i.its_vlpi_unmap.exit_crit_edge ], [ 0, %if.then8.i ], [ -22, %lor.lhs.false.i.its_vlpi_unmap.exit_crit_edge ], [ -22, %if.then2.its_vlpi_unmap.exit_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %vlpi_lock.i) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %69 = ptrtoint ptr %vcpu_info to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %vcpu_info, align 4
  %71 = zext i32 %70 to i64
  call void @__sanitizer_cov_trace_switch(i64 %71, ptr @__sancov_gen_cov_switch_values.151)
  switch i32 %70, label %if.end4.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb6
    i32 2, label %if.end4.sw.bb8_crit_edge
    i32 3, label %if.end4.sw.bb8_crit_edge81
  ]

if.end4.sw.bb8_crit_edge81:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb8

if.end4.sw.bb8_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb8

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.end4
  %hwirq.i.i22 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %72 = ptrtoint ptr %hwirq.i.i22 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %hwirq.i.i22, align 4
  %lpi_base.i.i23 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %74 = ptrtoint ptr %lpi_base.i.i23 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %lpi_base.i.i23, align 4
  %sub.i.i24 = sub i32 %73, %75
  %76 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %77 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %76, align 4
  %tobool.not.i25 = icmp eq ptr %78, null
  br i1 %tobool.not.i25, label %sw.bb.cleanup_crit_edge, label %if.end.i28

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i28:                                       ; preds = %sw.bb
  %vlpi_lock.i26 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 4
  tail call void @_raw_spin_lock(ptr noundef %vlpi_lock.i26) #15
  %vm.i27 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 5
  %79 = ptrtoint ptr %vm.i27 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %vm.i27, align 4
  %tobool3.not.i = icmp eq ptr %80, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.else.i

if.then4.i:                                       ; preds = %if.end.i28
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %81 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %nr_lpis.i, align 4
  %83 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %82, i32 16) #15
  %84 = extractvalue { i32, i1 } %83, 1
  br i1 %84, label %if.then4.i.out.i_crit_edge, label %if.end7.i.i.i, !prof !369

if.then4.i.out.i_crit_edge:                       ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.end7.i.i.i:                                    ; preds = %if.then4.i
  %85 = extractvalue { i32, i1 } %83, 0
  %call8.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %85, i32 noundef 2848) #20
  %tobool7.not.i29 = icmp eq ptr %call8.i.i.i, null
  br i1 %tobool7.not.i29, label %if.end7.i.i.i.out.i_crit_edge, label %cleanup.i

if.end7.i.i.i.out.i_crit_edge:                    ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

cleanup.i:                                        ; preds = %if.end7.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %86 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %76, align 4
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 4
  %90 = ptrtoint ptr %vm.i27 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %89, ptr %vm.i27, align 4
  %vlpi_maps.i30 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %91 = ptrtoint ptr %vlpi_maps.i30 to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call8.i.i.i, ptr %vlpi_maps.i30, align 4
  br label %if.end19.i

if.else.i:                                        ; preds = %if.end.i28
  %92 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %76, align 4
  %94 = ptrtoint ptr %93 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %93, align 4
  %cmp.not.i = icmp eq ptr %80, %95
  br i1 %cmp.not.i, label %if.else.i.if.end19.i_crit_edge, label %if.else.i.out.i_crit_edge

if.else.i.out.i_crit_edge:                        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.else.i.if.end19.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.else.i.if.end19.i_crit_edge, %cleanup.i
  %vlpi_maps21.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %96 = ptrtoint ptr %vlpi_maps21.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %vlpi_maps21.i, align 4
  %arrayidx.i = getelementptr %struct.its_vlpi_map, ptr %97, i32 %sub.i.i24
  %98 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %76, align 4
  %100 = call ptr @memcpy(ptr %arrayidx.i, ptr %99, i32 16)
  %common.i.i31 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %101 = ptrtoint ptr %common.i.i31 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %common.i.i31, align 4
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %and.i.i32 = and i32 %104, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i32)
  %tobool.i.not.i33 = icmp eq i32 %and.i.i32, 0
  br i1 %tobool.i.not.i33, label %if.else24.i, label %if.then23.i

if.then23.i:                                      ; preds = %if.end19.i
  %nr_lpis.i.i.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %105 = ptrtoint ptr %nr_lpis.i.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %nr_lpis.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %106, i32 %sub.i.i24)
  %cmp.not.i.i.i = icmp ugt i32 %106, %sub.i.i24
  br i1 %cmp.not.i.i.i, label %if.end37.i.i.i, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then23.i
  %.b43.i.i.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i.i, label %land.rhs.i.i.i.its_send_vmovi.exit.i_crit_edge, label %if.then.i.i.i, !prof !364

land.rhs.i.i.i.its_send_vmovi.exit.i_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_send_vmovi.exit.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %its_send_vmovi.exit.i

if.end37.i.i.i:                                   ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #17
  %107 = ptrtoint ptr %vlpi_maps21.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %vlpi_maps21.i, align 4
  %arrayidx.i.i.i34 = getelementptr %struct.its_vlpi_map, ptr %108, i32 %sub.i.i24
  br label %its_send_vmovi.exit.i

its_send_vmovi.exit.i:                            ; preds = %if.end37.i.i.i, %if.then.i.i.i, %land.rhs.i.i.i.its_send_vmovi.exit.i_crit_edge
  %retval.0.i.i59.i = phi ptr [ %arrayidx.i.i.i34, %if.end37.i.i.i ], [ null, %if.then.i.i.i ], [ null, %land.rhs.i.i.i.its_send_vmovi.exit.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i20) #15
  %109 = getelementptr inbounds i8, ptr %desc.i.i20, i32 12
  %110 = ptrtoint ptr %109 to i32
  call void @__asan_storeN_noabort(i32 %110, i32 8)
  store i64 -1, ptr %109, align 4
  %vpe.i.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i59.i, i32 0, i32 1
  %111 = ptrtoint ptr %vpe.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %vpe.i.i, align 4
  %113 = ptrtoint ptr %desc.i.i20 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %112, ptr %desc.i.i20, align 4
  %dev2.i.i = getelementptr inbounds %struct.anon.100, ptr %desc.i.i20, i32 0, i32 1
  %114 = ptrtoint ptr %dev2.i.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %1, ptr %dev2.i.i, align 4
  %event_id.i.i35 = getelementptr inbounds %struct.anon.100, ptr %desc.i.i20, i32 0, i32 2
  %115 = ptrtoint ptr %event_id.i.i35 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 %sub.i.i24, ptr %event_id.i.i35, align 4
  %db_enabled.i.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i59.i, i32 0, i32 4
  %116 = ptrtoint ptr %db_enabled.i.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %db_enabled.i.i, align 1, !range !365
  store i8 %117, ptr %109, align 4
  %118 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %119, ptr noundef nonnull @its_build_vmovi_cmd, ptr noundef nonnull %desc.i.i20) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i20) #15
  br label %out.i

if.else24.i:                                      ; preds = %if.end19.i
  %120 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %its, align 4
  %122 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %76, align 4
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %123, align 4
  %126 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool.not.i.i.i37 = icmp eq i32 %126, 0
  br i1 %tobool.not.i.i.i37, label %if.else24.i.its_map_vm.exit.i_crit_edge, label %gic_requires_eager_mapping.exit.i.i40

if.else24.i.its_map_vm.exit.i_crit_edge:          ; preds = %if.else24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_map_vm.exit.i

gic_requires_eager_mapping.exit.i.i40:            ; preds = %if.else24.i
  %127 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i.i38 = getelementptr inbounds %struct.rdists, ptr %127, i32 0, i32 8
  %128 = ptrtoint ptr %has_rvpeid.i.i.i38 to i32
  call void @__asan_load1_noabort(i32 %128)
  %129 = load i8, ptr %has_rvpeid.i.i.i38, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %129)
  %tobool1.not.i.not.i.i39 = icmp eq i8 %129, 0
  br i1 %tobool1.not.i.not.i.i39, label %do.body.i.i45, label %gic_requires_eager_mapping.exit.i.i40.its_map_vm.exit.i_crit_edge

gic_requires_eager_mapping.exit.i.i40.its_map_vm.exit.i_crit_edge: ; preds = %gic_requires_eager_mapping.exit.i.i40
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_map_vm.exit.i

do.body.i.i45:                                    ; preds = %gic_requires_eager_mapping.exit.i.i40
  %call1.i.i41 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vmovp_lock) #15
  %list_nr.i.i42 = getelementptr inbounds %struct.its_node, ptr %121, i32 0, i32 18
  %130 = ptrtoint ptr %list_nr.i.i42 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %list_nr.i.i42, align 8
  %arrayidx.i.i43 = getelementptr %struct.its_vm, ptr %125, i32 0, i32 8, i32 %131
  %132 = ptrtoint ptr %arrayidx.i.i43 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %arrayidx.i.i43, align 4
  %inc.i.i44 = add i32 %133, 1
  store i32 %inc.i.i44, ptr %arrayidx.i.i43, align 4
  %134 = load i32, ptr %list_nr.i.i42, align 8
  %arrayidx4.i.i = getelementptr %struct.its_vm, ptr %125, i32 0, i32 8, i32 %134
  %135 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %arrayidx4.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %136)
  %cmp5.i.i = icmp eq i32 %136, 1
  br i1 %cmp5.i.i, label %for.cond.preheader.i.i47, label %do.body.i.i45.do.body19.i.i_crit_edge

do.body.i.i45.do.body19.i.i_crit_edge:            ; preds = %do.body.i.i45
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body19.i.i

for.cond.preheader.i.i47:                         ; preds = %do.body.i.i45
  %nr_vpes.i.i46 = getelementptr inbounds %struct.its_vm, ptr %125, i32 0, i32 4
  %137 = ptrtoint ptr %nr_vpes.i.i46 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %nr_vpes.i.i46, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %138)
  %cmp842.i.i = icmp sgt i32 %138, 0
  br i1 %cmp842.i.i, label %for.body.lr.ph.i.i51, label %for.cond.preheader.i.i47.do.body19.i.i_crit_edge

for.cond.preheader.i.i47.do.body19.i.i_crit_edge: ; preds = %for.cond.preheader.i.i47
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body19.i.i

for.body.lr.ph.i.i51:                             ; preds = %for.cond.preheader.i.i47
  %vpes.i.i48 = getelementptr inbounds %struct.its_vm, ptr %125, i32 0, i32 3
  %139 = getelementptr inbounds i8, ptr %desc.i.i.i19, i32 8
  %collections.i.i.i49 = getelementptr inbounds %struct.its_node, ptr %121, i32 0, i32 9
  %col.i.i.i50 = getelementptr inbounds %struct.anon.98, ptr %desc.i.i.i19, i32 0, i32 1
  %140 = getelementptr inbounds i8, ptr %desc.i39.i.i, i32 4
  br label %for.body.i.i53

for.body.i.i53:                                   ; preds = %for.body.i.i53.for.body.i.i53_crit_edge, %for.body.lr.ph.i.i51
  %i.043.i.i = phi i32 [ 0, %for.body.lr.ph.i.i51 ], [ %inc17.i.i, %for.body.i.i53.for.body.i.i53_crit_edge ]
  %141 = ptrtoint ptr %vpes.i.i48 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %vpes.i.i48, align 4
  %arrayidx10.i.i = getelementptr ptr, ptr %142, i32 %i.043.i.i
  %143 = ptrtoint ptr %arrayidx10.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %arrayidx10.i.i, align 4
  %irq.i.i = getelementptr inbounds %struct.its_vpe, ptr %144, i32 0, i32 3
  %145 = ptrtoint ptr %irq.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %irq.i.i, align 4
  %call11.i.i = call ptr @irq_get_irq_data(i32 noundef %146) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %147 = load i32, ptr @nr_cpu_ids, align 4
  %call.i.i.i = call i32 @_find_first_bit_be(ptr noundef nonnull @__cpu_online_mask, i32 noundef %147) #15
  %conv13.i.i = trunc i32 %call.i.i.i to i16
  %col_idx.i.i = getelementptr inbounds %struct.its_vpe, ptr %144, i32 0, i32 9
  %148 = ptrtoint ptr %col_idx.i.i to i32
  call void @__asan_store2_noabort(i32 %148)
  store i16 %conv13.i.i, ptr %col_idx.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i.i19) #15
  %149 = call ptr @memset(ptr %139, i32 255, i32 12)
  %150 = ptrtoint ptr %desc.i.i.i19 to i32
  call void @__asan_store4_noabort(i32 %150)
  store ptr %144, ptr %desc.i.i.i19, align 4
  %151 = ptrtoint ptr %139 to i32
  call void @__asan_store1_noabort(i32 %151)
  store i8 1, ptr %139, align 4
  %152 = ptrtoint ptr %collections.i.i.i49 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %collections.i.i.i49, align 8
  %idxprom.i.i.i52 = and i32 %call.i.i.i, 65535
  %arrayidx.i.i60.i = getelementptr %struct.its_collection, ptr %153, i32 %idxprom.i.i.i52
  %154 = ptrtoint ptr %col.i.i.i50 to i32
  call void @__asan_store4_noabort(i32 %154)
  store ptr %arrayidx.i.i60.i, ptr %col.i.i.i50, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %121, ptr noundef nonnull @its_build_vmapp_cmd, ptr noundef nonnull %desc.i.i.i19) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i.i19) #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i39.i.i) #15
  %155 = call ptr @memset(ptr %140, i32 255, i32 16)
  %156 = ptrtoint ptr %desc.i39.i.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store ptr %144, ptr %desc.i39.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %121, ptr noundef nonnull @its_build_vinvall_cmd, ptr noundef nonnull %desc.i39.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i39.i.i) #15
  %157 = ptrtoint ptr %col_idx.i.i to i32
  call void @__asan_load2_noabort(i32 %157)
  %158 = load i16, ptr %col_idx.i.i, align 4
  %conv15.i.i = zext i16 %158 to i32
  %rem.i.i.i = and i32 %conv15.i.i, 31
  %add.i.i.i = add nuw nsw i32 %rem.i.i.i, 1
  %arrayidx.i40.i.i = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i.i.i
  %div3.i.i.i = lshr i32 %conv15.i.i, 5
  %idx.neg.i.i.i = sub nsw i32 0, %div3.i.i.i
  %add.ptr.i.i.i = getelementptr i32, ptr %arrayidx.i40.i.i, i32 %idx.neg.i.i.i
  %common.i.i.i = getelementptr inbounds %struct.irq_data, ptr %call11.i.i, i32 0, i32 3
  %159 = ptrtoint ptr %common.i.i.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %common.i.i.i, align 4
  %effective_affinity.i.i.i = getelementptr inbounds %struct.irq_common_data, ptr %160, i32 0, i32 4
  %161 = ptrtoint ptr %effective_affinity.i.i.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %effective_affinity.i.i.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %163 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i.i.i = add i32 %163, 31
  %164 = lshr i32 %sub.i.i.i.i.i, 3
  %mul.i.i.i.i.i = and i32 %164, 536870908
  %165 = call ptr @memcpy(ptr %162, ptr %add.ptr.i.i.i, i32 %mul.i.i.i.i.i)
  %inc17.i.i = add nuw nsw i32 %i.043.i.i, 1
  %166 = ptrtoint ptr %nr_vpes.i.i46 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %nr_vpes.i.i46, align 4
  %cmp8.i.i = icmp slt i32 %inc17.i.i, %167
  br i1 %cmp8.i.i, label %for.body.i.i53.for.body.i.i53_crit_edge, label %for.body.i.i53.do.body19.i.i_crit_edge

for.body.i.i53.do.body19.i.i_crit_edge:           ; preds = %for.body.i.i53
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body19.i.i

for.body.i.i53.for.body.i.i53_crit_edge:          ; preds = %for.body.i.i53
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i53

do.body19.i.i:                                    ; preds = %for.body.i.i53.do.body19.i.i_crit_edge, %for.cond.preheader.i.i47.do.body19.i.i_crit_edge, %do.body.i.i45.do.body19.i.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vmovp_lock, i32 noundef %call1.i.i41) #15
  br label %its_map_vm.exit.i

its_map_vm.exit.i:                                ; preds = %do.body19.i.i, %gic_requires_eager_mapping.exit.i.i40.its_map_vm.exit.i_crit_edge, %if.else24.i.its_map_vm.exit.i_crit_edge
  %168 = ptrtoint ptr %common.i.i31 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %common.i.i31, align 4
  %170 = ptrtoint ptr %169 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %169, align 4
  %or.i.i = or i32 %171, 1048576
  store i32 %or.i.i, ptr %169, align 4
  %172 = ptrtoint ptr %76 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %76, align 4
  %properties.i = getelementptr inbounds %struct.its_vlpi_map, ptr %173, i32 0, i32 3
  %174 = ptrtoint ptr %properties.i to i32
  call void @__asan_load1_noabort(i32 %174)
  %175 = load i8, ptr %properties.i, align 4
  call fastcc void @lpi_write_config(ptr noundef %d, i8 noundef zeroext -1, i8 noundef zeroext %175) #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i62.i) #15
  %176 = getelementptr inbounds i8, ptr %desc.i62.i, i32 8
  %177 = call ptr @memset(ptr %176, i32 255, i32 12)
  %178 = ptrtoint ptr %desc.i62.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store ptr %1, ptr %desc.i62.i, align 4
  %event_id.i63.i = getelementptr inbounds %struct.anon.95, ptr %desc.i62.i, i32 0, i32 1
  %179 = ptrtoint ptr %event_id.i63.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %sub.i.i24, ptr %event_id.i63.i, align 4
  %180 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_command(ptr noundef %181, ptr noundef nonnull @its_build_discard_cmd, ptr noundef nonnull %desc.i62.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i62.i) #15
  %nr_lpis.i.i66.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %182 = ptrtoint ptr %nr_lpis.i.i66.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %nr_lpis.i.i66.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %183, i32 %sub.i.i24)
  %cmp.not.i.i67.i = icmp ugt i32 %183, %sub.i.i24
  br i1 %cmp.not.i.i67.i, label %if.end37.i.i73.i, label %land.rhs.i.i69.i

land.rhs.i.i69.i:                                 ; preds = %its_map_vm.exit.i
  %.b43.i.i68.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i68.i, label %land.rhs.i.i69.i.its_send_vmapti.exit.i_crit_edge, label %if.then.i.i70.i, !prof !364

land.rhs.i.i69.i.its_send_vmapti.exit.i_crit_edge: ; preds = %land.rhs.i.i69.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_send_vmapti.exit.i

if.then.i.i70.i:                                  ; preds = %land.rhs.i.i69.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %its_send_vmapti.exit.i

if.end37.i.i73.i:                                 ; preds = %its_map_vm.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %184 = ptrtoint ptr %vlpi_maps21.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %vlpi_maps21.i, align 4
  %arrayidx.i.i72.i = getelementptr %struct.its_vlpi_map, ptr %185, i32 %sub.i.i24
  br label %its_send_vmapti.exit.i

its_send_vmapti.exit.i:                           ; preds = %if.end37.i.i73.i, %if.then.i.i70.i, %land.rhs.i.i69.i.its_send_vmapti.exit.i_crit_edge
  %retval.0.i.i74.i = phi ptr [ %arrayidx.i.i72.i, %if.end37.i.i73.i ], [ null, %if.then.i.i70.i ], [ null, %land.rhs.i.i69.i.its_send_vmapti.exit.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i65.i) #15
  %186 = getelementptr inbounds i8, ptr %desc.i65.i, i32 16
  %187 = ptrtoint ptr %186 to i32
  call void @__asan_store4_noabort(i32 %187)
  store i32 -1, ptr %186, align 4
  %vpe.i75.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i74.i, i32 0, i32 1
  %188 = ptrtoint ptr %vpe.i75.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %vpe.i75.i, align 4
  %190 = ptrtoint ptr %desc.i65.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store ptr %189, ptr %desc.i65.i, align 4
  %dev2.i76.i = getelementptr inbounds %struct.anon.99, ptr %desc.i65.i, i32 0, i32 1
  %191 = ptrtoint ptr %dev2.i76.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %1, ptr %dev2.i76.i, align 4
  %vintid.i.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i74.i, i32 0, i32 2
  %192 = ptrtoint ptr %vintid.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %vintid.i.i, align 4
  %virt_id.i.i = getelementptr inbounds %struct.anon.99, ptr %desc.i65.i, i32 0, i32 2
  %194 = ptrtoint ptr %virt_id.i.i to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %193, ptr %virt_id.i.i, align 4
  %event_id.i77.i = getelementptr inbounds %struct.anon.99, ptr %desc.i65.i, i32 0, i32 3
  %195 = ptrtoint ptr %event_id.i77.i to i32
  call void @__asan_store4_noabort(i32 %195)
  store i32 %sub.i.i24, ptr %event_id.i77.i, align 4
  %db_enabled.i78.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i74.i, i32 0, i32 4
  %196 = ptrtoint ptr %db_enabled.i78.i to i32
  call void @__asan_load1_noabort(i32 %196)
  %197 = load i8, ptr %db_enabled.i78.i, align 1, !range !365
  store i8 %197, ptr %186, align 4
  %198 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %199, ptr noundef nonnull @its_build_vmapti_cmd, ptr noundef nonnull %desc.i65.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i65.i) #15
  %nr_vlpis.i54 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 7
  %200 = ptrtoint ptr %nr_vlpis.i54 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %nr_vlpis.i54, align 4
  %inc.i = add i32 %201, 1
  store i32 %inc.i, ptr %nr_vlpis.i54, align 4
  br label %out.i

out.i:                                            ; preds = %its_send_vmapti.exit.i, %its_send_vmovi.exit.i, %if.else.i.out.i_crit_edge, %if.end7.i.i.i.out.i_crit_edge, %if.then4.i.out.i_crit_edge
  %ret.2.i = phi i32 [ 0, %its_send_vmovi.exit.i ], [ 0, %its_send_vmapti.exit.i ], [ -22, %if.else.i.out.i_crit_edge ], [ -12, %if.end7.i.i.i.out.i_crit_edge ], [ -12, %if.then4.i.out.i_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %vlpi_lock.i26) #15
  br label %cleanup

sw.bb6:                                           ; preds = %if.end4
  %vlpi_lock.i56 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 4
  tail call void @_raw_spin_lock(ptr noundef %vlpi_lock.i56) #15
  %common.i.i.i57 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %202 = ptrtoint ptr %common.i.i.i57 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %common.i.i.i57, align 4
  %204 = ptrtoint ptr %203 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %203, align 4
  %and.i.i.i = and i32 %205, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %sw.bb6.its_vlpi_get.exit_crit_edge, label %if.then.i.i

sw.bb6.its_vlpi_get.exit_crit_edge:               ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_get.exit

if.then.i.i:                                      ; preds = %sw.bb6
  %206 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %208 = ptrtoint ptr %hwirq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load i32, ptr %hwirq.i.i.i, align 4
  %lpi_base.i.i.i = getelementptr inbounds %struct.its_device, ptr %207, i32 0, i32 2, i32 2
  %210 = ptrtoint ptr %lpi_base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load i32, ptr %lpi_base.i.i.i, align 4
  %sub.i.i.i = sub i32 %209, %211
  %nr_lpis.i.i.i58 = getelementptr inbounds %struct.its_device, ptr %207, i32 0, i32 2, i32 3
  %212 = ptrtoint ptr %nr_lpis.i.i.i58 to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %nr_lpis.i.i.i58, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %213, i32 %sub.i.i.i)
  %cmp.not.i.i.i59 = icmp ugt i32 %213, %sub.i.i.i
  br i1 %cmp.not.i.i.i59, label %get_vlpi_map.exit.i, label %land.rhs.i.i.i61

land.rhs.i.i.i61:                                 ; preds = %if.then.i.i
  %.b43.i.i.i60 = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i.i60, label %land.rhs.i.i.i61.its_vlpi_get.exit_crit_edge, label %if.then.i.i.i62, !prof !364

land.rhs.i.i.i61.its_vlpi_get.exit_crit_edge:     ; preds = %land.rhs.i.i.i61
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_get.exit

if.then.i.i.i62:                                  ; preds = %land.rhs.i.i.i61
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %its_vlpi_get.exit

get_vlpi_map.exit.i:                              ; preds = %if.then.i.i
  %vlpi_maps.i.i.i = getelementptr inbounds %struct.its_device, ptr %207, i32 0, i32 2, i32 6
  %214 = ptrtoint ptr %vlpi_maps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %vlpi_maps.i.i.i, align 4
  %arrayidx.i.i.i63 = getelementptr %struct.its_vlpi_map, ptr %215, i32 %sub.i.i.i
  %vm.i64 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 5
  %216 = ptrtoint ptr %vm.i64 to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %vm.i64, align 4
  %tobool.not.i65 = icmp eq ptr %217, null
  %tobool3.not.i66 = icmp eq ptr %arrayidx.i.i.i63, null
  %or.cond.i = select i1 %tobool.not.i65, i1 true, i1 %tobool3.not.i66
  br i1 %or.cond.i, label %get_vlpi_map.exit.i.its_vlpi_get.exit_crit_edge, label %if.end.i67

get_vlpi_map.exit.i.its_vlpi_get.exit_crit_edge:  ; preds = %get_vlpi_map.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vlpi_get.exit

if.end.i67:                                       ; preds = %get_vlpi_map.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %218 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %219 = ptrtoint ptr %218 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %218, align 4
  %221 = call ptr @memcpy(ptr %220, ptr %arrayidx.i.i.i63, i32 16)
  br label %its_vlpi_get.exit

its_vlpi_get.exit:                                ; preds = %if.end.i67, %get_vlpi_map.exit.i.its_vlpi_get.exit_crit_edge, %if.then.i.i.i62, %land.rhs.i.i.i61.its_vlpi_get.exit_crit_edge, %sw.bb6.its_vlpi_get.exit_crit_edge
  %ret.0.i68 = phi i32 [ 0, %if.end.i67 ], [ -22, %get_vlpi_map.exit.i.its_vlpi_get.exit_crit_edge ], [ -22, %sw.bb6.its_vlpi_get.exit_crit_edge ], [ -22, %if.then.i.i.i62 ], [ -22, %land.rhs.i.i.i61.its_vlpi_get.exit_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %vlpi_lock.i56) #15
  br label %cleanup

sw.bb8:                                           ; preds = %if.end4.sw.bb8_crit_edge, %if.end4.sw.bb8_crit_edge81
  %vm.i71 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 5
  %222 = ptrtoint ptr %vm.i71 to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %vm.i71, align 4
  %tobool.not.i72 = icmp eq ptr %223, null
  br i1 %tobool.not.i72, label %sw.bb8.cleanup_crit_edge, label %lor.lhs.false.i76

sw.bb8.cleanup_crit_edge:                         ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

lor.lhs.false.i76:                                ; preds = %sw.bb8
  %common.i.i73 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %224 = ptrtoint ptr %common.i.i73 to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %common.i.i73, align 4
  %226 = ptrtoint ptr %225 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load i32, ptr %225, align 4
  %and.i.i74 = and i32 %227, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i74)
  %tobool.i.not.i75 = icmp eq i32 %and.i.i74, 0
  br i1 %tobool.i.not.i75, label %lor.lhs.false.i76.cleanup_crit_edge, label %if.end.i77

lor.lhs.false.i76.cleanup_crit_edge:              ; preds = %lor.lhs.false.i76
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i77:                                       ; preds = %lor.lhs.false.i76
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %70)
  %cmp.i = icmp eq i32 %70, 3
  %228 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %229 = ptrtoint ptr %228 to i32
  call void @__asan_load1_noabort(i32 %229)
  %230 = load i8, ptr %228, align 4
  br i1 %cmp.i, label %if.then2.i, label %if.else.i78

if.then2.i:                                       ; preds = %if.end.i77
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @lpi_update_config(ptr noundef %d, i8 noundef zeroext -1, i8 noundef zeroext %230) #15
  br label %if.end3.i

if.else.i78:                                      ; preds = %if.end.i77
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @lpi_write_config(ptr noundef %d, i8 noundef zeroext -1, i8 noundef zeroext %230) #15
  br label %if.end3.i

if.end3.i:                                        ; preds = %if.else.i78, %if.then2.i
  %231 = ptrtoint ptr %228 to i32
  call void @__asan_load1_noabort(i32 %231)
  %232 = load i8, ptr %228, align 4
  %233 = and i8 %232, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %233)
  %tobool4.i = icmp ne i8 %233, 0
  tail call fastcc void @its_vlpi_set_doorbell(ptr noundef %d, i1 noundef zeroext %tobool4.i) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end3.i, %lor.lhs.false.i76.cleanup_crit_edge, %sw.bb8.cleanup_crit_edge, %its_vlpi_get.exit, %out.i, %sw.bb.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %its_vlpi_unmap.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0.i68, %its_vlpi_get.exit ], [ %ret.0.i, %its_vlpi_unmap.exit ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end4.cleanup_crit_edge ], [ %ret.2.i, %out.i ], [ -22, %sw.bb.cleanup_crit_edge ], [ 0, %if.end3.i ], [ -22, %lor.lhs.false.i76.cleanup_crit_edge ], [ -22, %sw.bb8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_vlpi_set_doorbell(ptr nocapture noundef readonly %d, i1 noundef zeroext %enable) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %enable to i8
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq.i, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 2
  %4 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %3, %5
  %its = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %its, align 4
  %typer = getelementptr inbounds %struct.its_node, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %typer, align 8
  %and = and i64 %9, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %10 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %sub.i)
  %cmp.not.i = icmp ugt i32 %11, %sub.i
  br i1 %cmp.not.i, label %if.end37.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %if.end
  %.b43.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge:  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %dev_event_to_vlpi_map.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %dev_event_to_vlpi_map.exit

if.end37.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %vlpi_maps.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %12 = ptrtoint ptr %vlpi_maps.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vlpi_maps.i, align 4
  %arrayidx.i = getelementptr %struct.its_vlpi_map, ptr %13, i32 %sub.i
  br label %dev_event_to_vlpi_map.exit

dev_event_to_vlpi_map.exit:                       ; preds = %if.end37.i, %if.then.i, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge
  %retval.0.i = phi ptr [ %arrayidx.i, %if.end37.i ], [ null, %if.then.i ], [ null, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge ]
  %db_enabled = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i, i32 0, i32 4
  %14 = ptrtoint ptr %db_enabled to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %db_enabled, align 1, !range !365
  call void @__sanitizer_cov_trace_cmp1(i8 %15, i8 %frombool)
  %cmp = icmp eq i8 %15, %frombool
  br i1 %cmp, label %dev_event_to_vlpi_map.exit.cleanup_crit_edge, label %if.end8

dev_event_to_vlpi_map.exit.cleanup_crit_edge:     ; preds = %dev_event_to_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end8:                                          ; preds = %dev_event_to_vlpi_map.exit
  %16 = ptrtoint ptr %db_enabled to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %frombool, ptr %db_enabled, align 1
  %17 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %sub.i)
  %cmp.not.i.i = icmp ugt i32 %18, %sub.i
  br i1 %cmp.not.i.i, label %if.end37.i.i, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %if.end8
  %.b43.i.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i, label %land.rhs.i.i.its_send_vmovi.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.its_send_vmovi.exit_crit_edge:       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_send_vmovi.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %its_send_vmovi.exit

if.end37.i.i:                                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %vlpi_maps.i.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %19 = ptrtoint ptr %vlpi_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %vlpi_maps.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.its_vlpi_map, ptr %20, i32 %sub.i
  br label %its_send_vmovi.exit

its_send_vmovi.exit:                              ; preds = %if.end37.i.i, %if.then.i.i, %land.rhs.i.i.its_send_vmovi.exit_crit_edge
  %retval.0.i.i = phi ptr [ %arrayidx.i.i, %if.end37.i.i ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.its_send_vmovi.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %21 = getelementptr inbounds i8, ptr %desc.i, i32 12
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_storeN_noabort(i32 %22, i32 8)
  store i64 -1, ptr %21, align 4
  %vpe.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i, i32 0, i32 1
  %23 = ptrtoint ptr %vpe.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %vpe.i, align 4
  %25 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %24, ptr %desc.i, align 4
  %dev2.i = getelementptr inbounds %struct.anon.100, ptr %desc.i, i32 0, i32 1
  %26 = ptrtoint ptr %dev2.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %1, ptr %dev2.i, align 4
  %event_id.i = getelementptr inbounds %struct.anon.100, ptr %desc.i, i32 0, i32 2
  %27 = ptrtoint ptr %event_id.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %sub.i, ptr %event_id.i, align 4
  %db_enabled.i = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i.i, i32 0, i32 4
  %28 = ptrtoint ptr %db_enabled.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %db_enabled.i, align 1, !range !365
  store i8 %29, ptr %21, align 4
  %30 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %its, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %31, ptr noundef nonnull @its_build_vmovi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %cleanup

cleanup:                                          ; preds = %its_send_vmovi.exit, %dev_event_to_vlpi_map.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lpi_update_config(ptr nocapture noundef readonly %d, i8 noundef zeroext %clr, i8 noundef zeroext %set) unnamed_addr #0 align 64 {
entry:
  %desc.i27 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  tail call fastcc void @lpi_write_config(ptr noundef %d, i8 noundef zeroext %clr, i8 noundef zeroext %set)
  %2 = load ptr, ptr @gic_rdists, align 4
  %has_direct_lpi = getelementptr inbounds %struct.rdists, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %has_direct_lpi to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %has_direct_lpi, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %its = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %its, align 4
  %typer = getelementptr inbounds %struct.its_node, ptr %6, i32 0, i32 12
  %7 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %typer, align 8
  %and = and i64 %8, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool1.not = icmp eq i64 %and, 0
  br i1 %tobool1.not, label %lor.lhs.false, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

lor.lhs.false:                                    ; preds = %land.lhs.true
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %9 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %common.i, align 4
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  %and.i = and i32 %12, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %lor.lhs.false.if.then_crit_edge, label %lor.lhs.false.if.else_crit_edge

lor.lhs.false.if.else_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

lor.lhs.false.if.then_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then:                                          ; preds = %lor.lhs.false.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  %common.i.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %13 = ptrtoint ptr %common.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %common.i.i.i, align 4
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %14, align 4
  %and.i.i.i = and i32 %16, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.then.if.else.i_crit_edge, label %if.then.i.i

if.then.if.else.i_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.then.i.i:                                      ; preds = %if.then
  %17 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %19 = ptrtoint ptr %hwirq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %hwirq.i.i.i, align 4
  %lpi_base.i.i.i = getelementptr inbounds %struct.its_device, ptr %18, i32 0, i32 2, i32 2
  %21 = ptrtoint ptr %lpi_base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %lpi_base.i.i.i, align 4
  %sub.i.i.i = sub i32 %20, %22
  %nr_lpis.i.i.i = getelementptr inbounds %struct.its_device, ptr %18, i32 0, i32 2, i32 3
  %23 = ptrtoint ptr %nr_lpis.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_lpis.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %sub.i.i.i)
  %cmp.not.i.i.i = icmp ugt i32 %24, %sub.i.i.i
  br i1 %cmp.not.i.i.i, label %get_vlpi_map.exit.i, label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %if.then.i.i
  %.b43.i.i.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i.i, label %land.rhs.i.i.i.if.else.i_crit_edge, label %if.then.i.i.i, !prof !364

land.rhs.i.i.i.if.else.i_crit_edge:               ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %if.else.i

get_vlpi_map.exit.i:                              ; preds = %if.then.i.i
  %vlpi_maps.i.i.i = getelementptr inbounds %struct.its_device, ptr %18, i32 0, i32 2, i32 6
  %25 = ptrtoint ptr %vlpi_maps.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vlpi_maps.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr %struct.its_vlpi_map, ptr %26, i32 %sub.i.i.i
  %tobool.not.i = icmp eq ptr %arrayidx.i.i.i, null
  br i1 %tobool.not.i, label %get_vlpi_map.exit.i.if.else.i_crit_edge, label %if.then.i

get_vlpi_map.exit.i.if.else.i_crit_edge:          ; preds = %get_vlpi_map.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i

if.then.i:                                        ; preds = %get_vlpi_map.exit.i
  %its.i = getelementptr inbounds %struct.its_device, ptr %18, i32 0, i32 1
  %27 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %its.i, align 4
  %typer.i = getelementptr inbounds %struct.its_node, ptr %28, i32 0, i32 12
  %29 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %typer.i, align 8
  %and.i17 = and i64 %30, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i17)
  %tobool2.not.i = icmp eq i64 %and.i17, 0
  br i1 %tobool2.not.i, label %do.end.i, label %if.then.i.if.end.i_crit_edge, !prof !369

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

do.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 1445, i32 noundef 9, ptr noundef null) #15
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.then.i.if.end.i_crit_edge
  %vintid.i = getelementptr %struct.its_vlpi_map, ptr %26, i32 %sub.i.i.i, i32 2
  br label %if.end82.i

if.else.i:                                        ; preds = %get_vlpi_map.exit.i.if.else.i_crit_edge, %if.then.i.i.i, %land.rhs.i.i.i.if.else.i_crit_edge, %if.then.if.else.i_crit_edge
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  br label %if.end82.i

if.end82.i:                                       ; preds = %if.else.i, %if.end.i
  %val.0.off0.in.i = phi ptr [ %vintid.i, %if.end.i ], [ %hwirq.i, %if.else.i ]
  %31 = ptrtoint ptr %val.0.off0.in.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %val.0.off0.i = load i32, ptr %val.0.off0.in.i, align 4
  %32 = ptrtoint ptr %common.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %common.i.i.i, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %33, align 4
  %and.i.i.i.i = and i32 %35, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.i.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.i.not.i.i.i, label %if.end82.i.if.else.i.i_crit_edge, label %if.then.i.i129.i

if.end82.i.if.else.i.i_crit_edge:                 ; preds = %if.end82.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i

if.then.i.i129.i:                                 ; preds = %if.end82.i
  %36 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i.i.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %38 = ptrtoint ptr %hwirq.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %hwirq.i.i.i.i, align 4
  %lpi_base.i.i.i.i = getelementptr inbounds %struct.its_device, ptr %37, i32 0, i32 2, i32 2
  %40 = ptrtoint ptr %lpi_base.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %lpi_base.i.i.i.i, align 4
  %sub.i.i.i.i = sub i32 %39, %41
  %nr_lpis.i.i.i.i = getelementptr inbounds %struct.its_device, ptr %37, i32 0, i32 2, i32 3
  %42 = ptrtoint ptr %nr_lpis.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %nr_lpis.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %sub.i.i.i.i)
  %cmp.not.i.i.i.i = icmp ugt i32 %43, %sub.i.i.i.i
  br i1 %cmp.not.i.i.i.i, label %get_vlpi_map.exit.i.i, label %land.rhs.i.i.i.i

land.rhs.i.i.i.i:                                 ; preds = %if.then.i.i129.i
  %.b43.i.i.i.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i.i.i, label %land.rhs.i.i.i.i.if.else.i.i_crit_edge, label %if.then.i.i.i.i, !prof !364

land.rhs.i.i.i.i.if.else.i.i_crit_edge:           ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %if.else.i.i

get_vlpi_map.exit.i.i:                            ; preds = %if.then.i.i129.i
  %vlpi_maps.i.i.i.i = getelementptr inbounds %struct.its_device, ptr %37, i32 0, i32 2, i32 6
  %44 = ptrtoint ptr %vlpi_maps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %vlpi_maps.i.i.i.i, align 4
  %arrayidx.i.i.i.i = getelementptr %struct.its_vlpi_map, ptr %45, i32 %sub.i.i.i.i
  %tobool.not.i.i = icmp eq ptr %arrayidx.i.i.i.i, null
  br i1 %tobool.not.i.i, label %get_vlpi_map.exit.i.i.if.else.i.i_crit_edge, label %if.then.i130.i

get_vlpi_map.exit.i.i.if.else.i.i_crit_edge:      ; preds = %get_vlpi_map.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i.i

if.then.i130.i:                                   ; preds = %get_vlpi_map.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %vpe.i.i = getelementptr %struct.its_vlpi_map, ptr %45, i32 %sub.i.i.i.i, i32 1
  %46 = ptrtoint ptr %vpe.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vpe.i.i, align 4
  %vpe_lock.i.i.i = getelementptr inbounds %struct.its_vpe, ptr %47, i32 0, i32 8
  %call.i.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %vpe_lock.i.i.i) #15
  %col_idx.i.i.i = getelementptr inbounds %struct.its_vpe, ptr %47, i32 0, i32 9
  br label %irq_to_cpuid_lock.exit.i

if.else.i.i:                                      ; preds = %get_vlpi_map.exit.i.i.if.else.i.i_crit_edge, %if.then.i.i.i.i, %land.rhs.i.i.i.i.if.else.i.i_crit_edge, %if.end82.i.if.else.i.i_crit_edge
  %48 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %chip_data.i, align 4
  %col_map.i.i = getelementptr inbounds %struct.its_device, ptr %49, i32 0, i32 2, i32 1
  %50 = ptrtoint ptr %col_map.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %col_map.i.i, align 4
  %hwirq.i.i132.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %52 = ptrtoint ptr %hwirq.i.i132.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %hwirq.i.i132.i, align 4
  %lpi_base.i.i133.i = getelementptr inbounds %struct.its_device, ptr %49, i32 0, i32 2, i32 2
  %54 = ptrtoint ptr %lpi_base.i.i133.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %lpi_base.i.i133.i, align 4
  %sub.i.i134.i = sub i32 %53, %55
  %arrayidx.i.i = getelementptr i16, ptr %51, i32 %sub.i.i134.i
  br label %irq_to_cpuid_lock.exit.i

irq_to_cpuid_lock.exit.i:                         ; preds = %if.else.i.i, %if.then.i130.i
  %flags.0.i = phi i32 [ 0, %if.else.i.i ], [ %call.i.i.i, %if.then.i130.i ]
  %cpu.0.in.i.in.i = phi ptr [ %arrayidx.i.i, %if.else.i.i ], [ %col_idx.i.i.i, %if.then.i130.i ]
  %56 = ptrtoint ptr %cpu.0.in.i.in.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %cpu.0.in.i.i = load i16, ptr %cpu.0.in.i.in.i, align 2
  %cpu.0.i.i = zext i16 %cpu.0.in.i.i to i32
  %57 = load ptr, ptr @gic_rdists, align 4
  %58 = ptrtoint ptr %57 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %57, align 8
  %60 = ptrtoint ptr %59 to i32
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %cpu.0.i.i
  %61 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %62, %60
  %63 = inttoptr i32 %add.i to ptr
  tail call void @_raw_spin_lock(ptr noundef %63) #15
  %64 = load ptr, ptr @gic_rdists, align 4
  %65 = ptrtoint ptr %64 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %64, align 8
  %67 = ptrtoint ptr %66 to i32
  %68 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %arrayidx.i, align 4
  %add98.i = add i32 %69, %67
  %70 = inttoptr i32 %add98.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %rd_base.i, align 4
  %73 = tail call i32 @llvm.bswap.i32(i32 %val.0.off0.i) #15
  %add.ptr.i = getelementptr i8, ptr %72, i32 160
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %73) #15, !srcloc !362
  %add.ptr.i.i = getelementptr i8, ptr %72, i32 192
  %74 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %75 = and i32 %74, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.not5.i.i = icmp eq i32 %75, 0
  br i1 %tobool.not5.i.i, label %irq_to_cpuid_lock.exit.i.wait_for_syncr.exit.i_crit_edge, label %irq_to_cpuid_lock.exit.i.do.end.i.i_crit_edge

irq_to_cpuid_lock.exit.i.do.end.i.i_crit_edge:    ; preds = %irq_to_cpuid_lock.exit.i
  br label %do.end.i.i

irq_to_cpuid_lock.exit.i.wait_for_syncr.exit.i_crit_edge: ; preds = %irq_to_cpuid_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %wait_for_syncr.exit.i

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %irq_to_cpuid_lock.exit.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !386
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !387
  %76 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %77 = and i32 %76, 16777216
  %tobool.not.i135.i = icmp eq i32 %77, 0
  br i1 %tobool.not.i135.i, label %do.end.i.i.wait_for_syncr.exit.i_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i.i

do.end.i.i.wait_for_syncr.exit.i_crit_edge:       ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %wait_for_syncr.exit.i

wait_for_syncr.exit.i:                            ; preds = %do.end.i.i.wait_for_syncr.exit.i_crit_edge, %irq_to_cpuid_lock.exit.i.wait_for_syncr.exit.i_crit_edge
  %78 = load ptr, ptr @gic_rdists, align 4
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %78, align 8
  %81 = ptrtoint ptr %80 to i32
  %82 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %arrayidx.i, align 4
  %add110.i = add i32 %83, %81
  %84 = inttoptr i32 %add110.i to ptr
  tail call void @_raw_spin_unlock(ptr noundef %84) #15
  %85 = ptrtoint ptr %common.i.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %common.i.i.i, align 4
  %87 = ptrtoint ptr %86 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %86, align 4
  %and.i.i.i137.i = and i32 %88, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i137.i)
  %tobool.i.not.i.i138.i = icmp eq i32 %and.i.i.i137.i, 0
  br i1 %tobool.i.not.i.i138.i, label %wait_for_syncr.exit.i.if.end8_crit_edge, label %if.then.i.i145.i

wait_for_syncr.exit.i.if.end8_crit_edge:          ; preds = %wait_for_syncr.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

if.then.i.i145.i:                                 ; preds = %wait_for_syncr.exit.i
  %89 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i.i.i140.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %91 = ptrtoint ptr %hwirq.i.i.i140.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %hwirq.i.i.i140.i, align 4
  %lpi_base.i.i.i141.i = getelementptr inbounds %struct.its_device, ptr %90, i32 0, i32 2, i32 2
  %93 = ptrtoint ptr %lpi_base.i.i.i141.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %lpi_base.i.i.i141.i, align 4
  %sub.i.i.i142.i = sub i32 %92, %94
  %nr_lpis.i.i.i143.i = getelementptr inbounds %struct.its_device, ptr %90, i32 0, i32 2, i32 3
  %95 = ptrtoint ptr %nr_lpis.i.i.i143.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %nr_lpis.i.i.i143.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %96, i32 %sub.i.i.i142.i)
  %cmp.not.i.i.i144.i = icmp ugt i32 %96, %sub.i.i.i142.i
  br i1 %cmp.not.i.i.i144.i, label %get_vlpi_map.exit.i152.i, label %land.rhs.i.i.i147.i

land.rhs.i.i.i147.i:                              ; preds = %if.then.i.i145.i
  %.b43.i.i.i146.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i.i146.i, label %land.rhs.i.i.i147.i.if.end8_crit_edge, label %if.then.i.i.i148.i, !prof !364

land.rhs.i.i.i147.i.if.end8_crit_edge:            ; preds = %land.rhs.i.i.i147.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

if.then.i.i.i148.i:                               ; preds = %land.rhs.i.i.i147.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %if.end8

get_vlpi_map.exit.i152.i:                         ; preds = %if.then.i.i145.i
  %vlpi_maps.i.i.i149.i = getelementptr inbounds %struct.its_device, ptr %90, i32 0, i32 2, i32 6
  %97 = ptrtoint ptr %vlpi_maps.i.i.i149.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %vlpi_maps.i.i.i149.i, align 4
  %arrayidx.i.i.i150.i = getelementptr %struct.its_vlpi_map, ptr %98, i32 %sub.i.i.i142.i
  %tobool.not.i151.i = icmp eq ptr %arrayidx.i.i.i150.i, null
  br i1 %tobool.not.i151.i, label %get_vlpi_map.exit.i152.i.if.end8_crit_edge, label %if.then.i155.i

get_vlpi_map.exit.i152.i.if.end8_crit_edge:       ; preds = %get_vlpi_map.exit.i152.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

if.then.i155.i:                                   ; preds = %get_vlpi_map.exit.i152.i
  call void @__sanitizer_cov_trace_pc() #17
  %vpe.i153.i = getelementptr %struct.its_vlpi_map, ptr %98, i32 %sub.i.i.i142.i, i32 1
  %99 = ptrtoint ptr %vpe.i153.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %vpe.i153.i, align 4
  %vpe_lock.i.i154.i = getelementptr inbounds %struct.its_vpe, ptr %100, i32 0, i32 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i.i154.i, i32 noundef %flags.0.i) #15
  br label %if.end8

if.else:                                          ; preds = %lor.lhs.false.if.else_crit_edge, %entry.if.else_crit_edge
  %common.i18 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %101 = ptrtoint ptr %common.i18 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %common.i18, align 4
  %103 = ptrtoint ptr %102 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %102, align 4
  %and.i19 = and i32 %104, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i19)
  %tobool.i20.not = icmp eq i32 %and.i19, 0
  %105 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %chip_data.i, align 4
  %hwirq.i21 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %107 = ptrtoint ptr %hwirq.i21 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %hwirq.i21, align 4
  %lpi_base.i = getelementptr inbounds %struct.its_device, ptr %106, i32 0, i32 2, i32 2
  %109 = ptrtoint ptr %lpi_base.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %lpi_base.i, align 4
  %sub.i = sub i32 %108, %110
  br i1 %tobool.i20.not, label %if.then4, label %if.else6

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %111 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %112 = call ptr @memset(ptr %111, i32 255, i32 12)
  %113 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %1, ptr %desc.i, align 4
  %event_id2.i = getelementptr inbounds %struct.anon.88, ptr %desc.i, i32 0, i32 1
  %114 = ptrtoint ptr %event_id2.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %sub.i, ptr %event_id2.i, align 4
  %its.i22 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %115 = ptrtoint ptr %its.i22 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %its.i22, align 4
  call fastcc void @its_send_single_command(ptr noundef %116, ptr noundef nonnull @its_build_inv_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %if.end8

if.else6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i27) #15
  %117 = getelementptr inbounds i8, ptr %desc.i27, i32 8
  %118 = call ptr @memset(ptr %117, i32 255, i32 12)
  %119 = ptrtoint ptr %desc.i27 to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %1, ptr %desc.i27, align 4
  %event_id2.i28 = getelementptr inbounds %struct.anon.88, ptr %desc.i27, i32 0, i32 1
  %120 = ptrtoint ptr %event_id2.i28 to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %sub.i, ptr %event_id2.i28, align 4
  %its.i29 = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %121 = ptrtoint ptr %its.i29 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %its.i29, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %122, ptr noundef nonnull @its_build_vinv_cmd, ptr noundef nonnull %desc.i27) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i27) #15
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then4, %if.then.i155.i, %get_vlpi_map.exit.i152.i.if.end8_crit_edge, %if.then.i.i.i148.i, %land.rhs.i.i.i147.i.if.end8_crit_edge, %wait_for_syncr.exit.i.if.end8_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_send_single_vcommand(ptr noundef %its, ptr noundef %builder, ptr noundef %desc) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %its) #15
  %call1 = tail call fastcc ptr @its_allocate_entry(ptr noundef %its)
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %do.body2, label %if.end

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %its, i32 noundef %call) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %call11 = tail call ptr %builder(ptr noundef %its, ptr noundef nonnull %call1, ptr noundef %desc) #15
  %flags.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 17
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %flags.i, align 8
  %and.i = and i64 %1, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %2(ptr noundef nonnull %call1, i32 noundef 32) #15
  br label %its_flush_cmd.exit

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !374
  br label %its_flush_cmd.exit

its_flush_cmd.exit:                               ; preds = %if.else.i, %if.then.i
  %tobool12.not = icmp eq ptr %call11, null
  br i1 %tobool12.not, label %its_flush_cmd.exit.post_crit_edge, label %if.then13

its_flush_cmd.exit.post_crit_edge:                ; preds = %its_flush_cmd.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %post

if.then13:                                        ; preds = %its_flush_cmd.exit
  %call14 = tail call fastcc ptr @its_allocate_entry(ptr noundef %its)
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.then13.post_crit_edge, label %if.end17

if.then13.post_crit_edge:                         ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #17
  br label %post

if.end17:                                         ; preds = %if.then13
  %3 = ptrtoint ptr %call14 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %call14, align 8
  %and4.i.i.i = and i64 %4, -256
  %or.i.i.i = or i64 %and4.i.i.i, 37
  store i64 %or.i.i.i, ptr %call14, align 8
  %vpe_id.i = getelementptr inbounds %struct.its_vpe, ptr %call11, i32 0, i32 10
  %5 = ptrtoint ptr %vpe_id.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %vpe_id.i, align 2
  %arrayidx.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 1
  %conv.i.i = zext i16 %6 to i64
  %7 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %arrayidx.i.i, align 8
  %and4.i.i1.i = and i64 %8, -281470681743361
  %shl6.i.i.i = shl nuw nsw i64 %conv.i.i, 32
  %or.i.i2.i = or i64 %and4.i.i1.i, %shl6.i.i.i
  %9 = tail call i64 @llvm.bswap.i64(i64 %or.i.i.i) #15
  %10 = ptrtoint ptr %call14 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %call14, align 8
  %11 = tail call i64 @llvm.bswap.i64(i64 %or.i.i2.i) #15
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %arrayidx.i.i, align 8
  %arrayidx4.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 2
  %13 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx4.i.i, align 8
  %15 = tail call i64 @llvm.bswap.i64(i64 %14) #15
  %16 = ptrtoint ptr %arrayidx4.i.i to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %arrayidx4.i.i, align 8
  %arrayidx6.i.i = getelementptr [4 x i64], ptr %call14, i32 0, i32 3
  %17 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %arrayidx6.i.i, align 8
  %19 = tail call i64 @llvm.bswap.i64(i64 %18) #15
  %20 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %arrayidx6.i.i, align 8
  %21 = ptrtoint ptr %flags.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %flags.i, align 8
  %and.i70 = and i64 %22, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i70)
  %tobool.not.i71 = icmp eq i64 %and.i70, 0
  br i1 %tobool.not.i71, label %if.else.i73, label %if.then.i72

if.then.i72:                                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %23 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %23(ptr noundef nonnull %call14, i32 noundef 32) #15
  br label %post

if.else.i73:                                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !374
  br label %post

post:                                             ; preds = %if.else.i73, %if.then.i72, %if.then13.post_crit_edge, %its_flush_cmd.exit.post_crit_edge
  %base = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 3
  %24 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %base, align 8
  %add.ptr = getelementptr i8, ptr %25, i32 144
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %27 = tail call i32 @llvm.bswap.i32(i32 %26)
  %conv21 = zext i32 %27 to i64
  %cmd_write.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 7
  %28 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %cmd_write.i, align 8
  %cmd_base.i.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 6
  %30 = ptrtoint ptr %cmd_base.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cmd_base.i.i, align 4
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %29 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %31 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %32 = tail call i32 @llvm.bswap.i32(i32 %sub.ptr.sub.i.i) #15
  %33 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %base, align 8
  %add.ptr.i = getelementptr i8, ptr %34, i32 136
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %32) #15, !srcloc !362
  %35 = ptrtoint ptr %cmd_write.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %cmd_write.i, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %its, i32 noundef %call) #15
  %call33 = tail call fastcc i32 @its_wait_for_range_completion(ptr noundef %its, i64 noundef %conv21, ptr noundef %36)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %post.cleanup_crit_edge, label %if.then35

post.cleanup_crit_edge:                           ; preds = %post
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then35:                                        ; preds = %post
  %call36 = tail call i32 @___ratelimit(ptr noundef nonnull @its_send_single_vcommand._rs, ptr noundef nonnull @__func__.its_send_single_vcommand) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.then35.cleanup_crit_edge, label %do.end41

if.then35.cleanup_crit_edge:                      ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end41:                                         ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #17
  %call43 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.37, ptr noundef %builder) #18
  br label %cleanup

cleanup:                                          ; preds = %do.end41, %if.then35.cleanup_crit_edge, %post.cleanup_crit_edge, %do.body2
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vmovi_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %0 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %typer, align 8
  %and = and i64 %1, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %db_enabled = getelementptr inbounds %struct.anon.100, ptr %desc, i32 0, i32 3
  %2 = ptrtoint ptr %db_enabled to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %db_enabled, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vpe_db_lpi, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %db.0 = phi i32 [ %7, %if.then ], [ 1023, %land.lhs.true.if.end_crit_edge ], [ 1023, %entry.if.end_crit_edge ]
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 33
  store i64 %or.i.i, ptr %cmd, align 8
  %dev = getelementptr inbounds %struct.anon.100, ptr %desc, i32 0, i32 1
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i16 = and i64 %or.i.i, 4294967073
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i17 = or i64 %shl6.i.i, %and4.i.i16
  store i64 %or.i.i17, ptr %cmd, align 8
  %14 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i18 = zext i16 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i19 = and i64 %19, -281470681743361
  %shl6.i.i20 = shl nuw nsw i64 %conv.i18, 32
  %or.i.i21 = or i64 %and4.i.i19, %shl6.i.i20
  store i64 %or.i.i21, ptr %arrayidx.i, align 8
  %event_id = getelementptr inbounds %struct.anon.100, ptr %desc, i32 0, i32 2
  %20 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %event_id, align 4
  %conv.i23 = zext i32 %21 to i64
  %and4.i.i24 = and i64 %or.i.i21, -4294967296
  %or.i.i25 = or i64 %and4.i.i24, %conv.i23
  %arrayidx.i26 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i27 = zext i32 %db.0 to i64
  %22 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx.i26, align 8
  %and4.i.i28 = and i64 %23, 4294967294
  %shl6.i.i29 = shl nuw i64 %conv.i27, 32
  %or.i.i30 = or i64 %and4.i.i28, %shl6.i.i29
  %or.i.i32 = or i64 %or.i.i30, 1
  %24 = tail call i64 @llvm.bswap.i64(i64 %or.i.i17) #15
  %25 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %cmd, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %or.i.i25) #15
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx.i, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %or.i.i32) #15
  %29 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx.i26, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %arrayidx6.i, align 8
  %32 = tail call i64 @llvm.bswap.i64(i64 %31) #15
  %33 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %32, ptr %arrayidx6.i, align 8
  %34 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %36 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %35, i32 0, i32 9
  %38 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %col_idx.i, align 4
  %conv.i33 = zext i16 %39 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %37, i32 %conv.i33
  %40 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %41, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.valid_vpe.exit_crit_edge, label %land.rhs.i.i

if.end.valid_vpe.exit_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %if.end
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %if.end.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %if.end.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %35
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @lpi_write_config(ptr nocapture noundef readonly %d, i8 noundef zeroext %clr, i8 noundef zeroext %set) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %common.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %0 = ptrtoint ptr %common.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %common.i.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %1, align 4
  %and.i.i = and i32 %3, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %entry.if.else_crit_edge, label %if.then.i

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then.i:                                        ; preds = %entry
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %4 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %chip_data.i.i, align 4
  %hwirq.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %6 = ptrtoint ptr %hwirq.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hwirq.i.i, align 4
  %lpi_base.i.i = getelementptr inbounds %struct.its_device, ptr %5, i32 0, i32 2, i32 2
  %8 = ptrtoint ptr %lpi_base.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lpi_base.i.i, align 4
  %sub.i.i = sub i32 %7, %9
  %nr_lpis.i.i = getelementptr inbounds %struct.its_device, ptr %5, i32 0, i32 2, i32 3
  %10 = ptrtoint ptr %nr_lpis.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nr_lpis.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %sub.i.i)
  %cmp.not.i.i = icmp ugt i32 %11, %sub.i.i
  br i1 %cmp.not.i.i, label %get_vlpi_map.exit, label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %if.then.i
  %.b43.i.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i.i, label %land.rhs.i.i.if.else_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.if.else_crit_edge:                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %if.else

get_vlpi_map.exit:                                ; preds = %if.then.i
  %vlpi_maps.i.i = getelementptr inbounds %struct.its_device, ptr %5, i32 0, i32 2, i32 6
  %12 = ptrtoint ptr %vlpi_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %vlpi_maps.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.its_vlpi_map, ptr %13, i32 %sub.i.i
  %tobool.not = icmp eq ptr %arrayidx.i.i, null
  br i1 %tobool.not, label %get_vlpi_map.exit.if.else_crit_edge, label %if.then

get_vlpi_map.exit.if.else_crit_edge:              ; preds = %get_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %get_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.i.i, align 4
  %vprop_page = getelementptr inbounds %struct.its_vm, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %vprop_page to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vprop_page, align 4
  %call1 = tail call ptr @page_address(ptr noundef %17) #15
  %vintid = getelementptr %struct.its_vlpi_map, ptr %13, i32 %sub.i.i, i32 2
  %18 = ptrtoint ptr %vintid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %vintid, align 4
  %neg = xor i8 %clr, -1
  %properties = getelementptr %struct.its_vlpi_map, ptr %13, i32 %sub.i.i, i32 3
  %20 = ptrtoint ptr %properties to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %properties, align 4
  %and = and i8 %21, %neg
  %22 = or i8 %and, %set
  %or736 = or i8 %22, 2
  store i8 %or736, ptr %properties, align 4
  br label %if.end

if.else:                                          ; preds = %get_vlpi_map.exit.if.else_crit_edge, %if.then.i.i, %land.rhs.i.i.if.else_crit_edge, %entry.if.else_crit_edge
  %23 = load ptr, ptr @gic_rdists, align 4
  %prop_table_va = getelementptr inbounds %struct.rdists, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %prop_table_va to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prop_table_va, align 8
  %hwirq9 = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %26 = ptrtoint ptr %hwirq9 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %hwirq9, align 4
  %.pre = xor i8 %clr, -1
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %neg12.pre-phi = phi i8 [ %.pre, %if.else ], [ %neg, %if.then ]
  %hwirq.0 = phi i32 [ %27, %if.else ], [ %19, %if.then ]
  %va.0 = phi ptr [ %25, %if.else ], [ %call1, %if.then ]
  %add.ptr = getelementptr i8, ptr %va.0, i32 %hwirq.0
  %add.ptr10 = getelementptr i8, ptr %add.ptr, i32 -8192
  %28 = ptrtoint ptr %add.ptr10 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %add.ptr10, align 1
  %and14 = and i8 %29, %neg12.pre-phi
  %30 = or i8 %and14, %set
  %or1935 = or i8 %30, 2
  store i8 %or1935, ptr %add.ptr10, align 1
  %31 = load ptr, ptr @gic_rdists, align 4
  %flags = getelementptr inbounds %struct.rdists, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %flags, align 8
  %and21 = and i64 %33, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and21)
  %tobool22.not = icmp eq i64 %and21, 0
  br i1 %tobool22.not, label %if.else24, label %if.then23

if.then23:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %34 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %34(ptr noundef %add.ptr10, i32 noundef 1) #15
  br label %if.end25

if.else24:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !388
  br label %if.end25

if.end25:                                         ; preds = %if.else24, %if.then23
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_inv_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.88, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 12
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i10 = zext i32 %16 to i64
  %and4.i.i11 = and i64 %or.i.i, 4294967052
  %shl6.i.i = shl nuw i64 %conv.i10, 32
  %or.i.i12 = or i64 %shl6.i.i, %and4.i.i11
  store i64 %or.i.i12, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i13 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i14 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i13, align 8
  %and4.i.i15 = and i64 %19, -4294967296
  %or.i.i16 = or i64 %and4.i.i15, %conv.i14
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i12) #15
  %21 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cmd, align 8
  %22 = tail call i64 @llvm.bswap.i64(i64 %or.i.i16) #15
  %23 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %arrayidx.i13, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %24 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx4.i, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %25) #15
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx6.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #15
  %31 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx6.i, align 8
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %33, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vinv_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.88, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %4 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not.i = icmp ugt i32 %5, %3
  br i1 %cmp.not.i, label %if.end37.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %.b43.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge:  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %dev_event_to_vlpi_map.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %dev_event_to_vlpi_map.exit

if.end37.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %vlpi_maps.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %6 = ptrtoint ptr %vlpi_maps.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vlpi_maps.i, align 4
  %arrayidx.i = getelementptr %struct.its_vlpi_map, ptr %7, i32 %3
  br label %dev_event_to_vlpi_map.exit

dev_event_to_vlpi_map.exit:                       ; preds = %if.end37.i, %if.then.i, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge
  %retval.0.i = phi ptr [ %arrayidx.i, %if.end37.i ], [ null, %if.then.i ], [ null, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge ]
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 12
  store i64 %or.i.i, ptr %cmd, align 8
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i10 = and i64 %or.i.i, 4294967052
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i11 = or i64 %shl6.i.i, %and4.i.i10
  store i64 %or.i.i11, ptr %cmd, align 8
  %14 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %event_id, align 4
  %arrayidx.i12 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i13 = zext i32 %15 to i64
  %16 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx.i12, align 8
  %and4.i.i14 = and i64 %17, -4294967296
  %or.i.i15 = or i64 %and4.i.i14, %conv.i13
  %18 = tail call i64 @llvm.bswap.i64(i64 %or.i.i11) #15
  %19 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %cmd, align 8
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i15) #15
  %21 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx.i12, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %22 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx4.i, align 8
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #15
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %arrayidx6.i, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %27) #15
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx6.i, align 8
  %vpe = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i, i32 0, i32 1
  %30 = ptrtoint ptr %vpe to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vpe, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %32 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %31, i32 0, i32 9
  %34 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %col_idx.i, align 4
  %conv.i16 = zext i16 %35 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %33, i32 %conv.i16
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %37, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge, label %land.rhs.i.i

dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge: ; preds = %dev_event_to_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %dev_event_to_vlpi_map.exit
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %31
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_select_cpu(ptr nocapture noundef readonly %d, ptr noundef %aff_mask) unnamed_addr #0 align 64 {
entry:
  %tmpmask = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmpmask) #15
  %2 = ptrtoint ptr %tmpmask to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmpmask, align 4, !annotation !371
  %call1 = call zeroext i1 @alloc_cpumask_var(ptr noundef nonnull %tmpmask, i32 noundef 2592) #15
  br i1 %call1, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %its = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %its, align 4
  %numa_node = getelementptr inbounds %struct.its_node, ptr %4, i32 0, i32 19
  %5 = ptrtoint ptr %numa_node to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %numa_node, align 4
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %7 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %common.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  %and.i = and i32 %10, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then3, label %if.end.i.i113

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.not = icmp eq i32 %6, -1
  br i1 %cmp.not, label %if.then3.if.end.i.i72_crit_edge, label %if.end.i.i

if.then3.if.end.i.i72_crit_edge:                  ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i72

if.end.i.i:                                       ; preds = %if.then3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %11 = load i32, ptr @nr_cpu_ids, align 4
  %12 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tmpmask, align 4
  %call.i.i = call i32 @__bitmap_and(ptr noundef %13, ptr noundef nonnull @__cpu_online_mask, ptr noundef %aff_mask, i32 noundef %11) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %14 = load i32, ptr @nr_cpu_ids, align 4
  %15 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %tmpmask, align 4
  %call.i.i62 = call i32 @__bitmap_and(ptr noundef %16, ptr noundef %16, ptr noundef nonnull @__cpu_online_mask, i32 noundef %14) #15
  %17 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tmpmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %19 = load i32, ptr @nr_cpu_ids, align 4
  %call8.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef %18) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call8.i, i32 %19)
  %cmp9.i = icmp ult i32 %call8.i, %19
  br i1 %cmp9.i, label %if.end.i.i.for.body.i_crit_edge, label %if.end.i.i.cpumask_pick_least_loaded.exit_crit_edge

if.end.i.i.cpumask_pick_least_loaded.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_pick_least_loaded.exit

if.end.i.i.for.body.i_crit_edge:                  ; preds = %if.end.i.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.i.for.body.i_crit_edge
  %call12.i = phi i32 [ %call.i, %for.body.i.for.body.i_crit_edge ], [ %call8.i, %if.end.i.i.for.body.i_crit_edge ]
  %count.011.i = phi i32 [ %28, %for.body.i.for.body.i_crit_edge ], [ 2147483647, %if.end.i.i.for.body.i_crit_edge ]
  %cpu.010.i = phi i32 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ %19, %if.end.i.i.for.body.i_crit_edge ]
  %20 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %common.i, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  %and.i.i.i = and i32 %23, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i32 %and.i.i.i, 0
  %arrayidx9.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i
  %24 = ptrtoint ptr %arrayidx9.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx9.i.i, align 4
  %add10.i.i = add i32 %25, ptrtoint (ptr @cpu_lpi_count to i32)
  %26 = inttoptr i32 %add10.i.i to ptr
  %unmanaged.i.i = getelementptr inbounds %struct.cpu_lpi_count, ptr %26, i32 0, i32 1
  %unmanaged.sink.i.i = select i1 %tobool.i.not.i.i, ptr %unmanaged.i.i, ptr %26
  %call.i.i13.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %unmanaged.sink.i.i, i32 noundef 4) #15
  %27 = ptrtoint ptr %unmanaged.sink.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %retval.0.i.i = load volatile i32, ptr %unmanaged.sink.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i, i32 %count.011.i)
  %cmp2.i = icmp slt i32 %retval.0.i.i, %count.011.i
  %spec.select.i = select i1 %cmp2.i, i32 %call12.i, i32 %cpu.010.i
  %28 = call i32 @llvm.smin.i32(i32 %retval.0.i.i, i32 %count.011.i) #15
  %call.i = call i32 @cpumask_next(i32 noundef %call12.i, ptr noundef %18) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i = icmp ult i32 %call.i, %29
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.cpumask_pick_least_loaded.exit_crit_edge

for.body.i.cpumask_pick_least_loaded.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_pick_least_loaded.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

cpumask_pick_least_loaded.exit:                   ; preds = %for.body.i.cpumask_pick_least_loaded.exit_crit_edge, %if.end.i.i.cpumask_pick_least_loaded.exit_crit_edge
  %cpu.0.lcssa.i = phi i32 [ %19, %if.end.i.i.cpumask_pick_least_loaded.exit_crit_edge ], [ %spec.select.i, %for.body.i.cpumask_pick_least_loaded.exit_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %30 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cpu.0.lcssa.i, i32 %30)
  %cmp8 = icmp ult i32 %cpu.0.lcssa.i, %30
  br i1 %cmp8, label %cpumask_pick_least_loaded.exit.out_crit_edge, label %if.end10

cpumask_pick_least_loaded.exit.out_crit_edge:     ; preds = %cpumask_pick_least_loaded.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end10:                                         ; preds = %cpumask_pick_least_loaded.exit
  %31 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %its, align 4
  %flags = getelementptr inbounds %struct.its_node, ptr %32, i32 0, i32 17
  %33 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %flags, align 8
  %and = and i64 %34, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end10.if.end.i.i72_crit_edge, label %if.end10.out_crit_edge

if.end10.out_crit_edge:                           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end10.if.end.i.i72_crit_edge:                  ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i72

if.end.i.i72:                                     ; preds = %if.end10.if.end.i.i72_crit_edge, %if.then3.if.end.i.i72_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %35 = load i32, ptr @nr_cpu_ids, align 4
  %36 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %tmpmask, align 4
  %call.i.i71 = call i32 @__bitmap_and(ptr noundef %37, ptr noundef %aff_mask, ptr noundef nonnull @__cpu_online_mask, i32 noundef %35) #15
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %38 = load i32, ptr @nr_cpu_ids, align 4
  %39 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %tmpmask, align 4
  %call.i.i79 = call i32 @_find_first_bit_be(ptr noundef %40, i32 noundef %38) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i79, i32 %38)
  %cmp4.i.i = icmp eq i32 %call.i.i79, %38
  br i1 %cmp4.i.i, label %if.then17, label %if.end.i.i72.if.end18_crit_edge

if.end.i.i72.if.end18_crit_edge:                  ; preds = %if.end.i.i72
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.then17:                                        ; preds = %if.end.i.i72
  call void @__sanitizer_cov_trace_pc() #17
  %41 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tmpmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %43 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i82 = add i32 %43, 31
  %44 = lshr i32 %sub.i.i82, 3
  %mul.i.i = and i32 %44, 536870908
  %45 = call ptr @memcpy(ptr %42, ptr @__cpu_online_mask, i32 %mul.i.i)
  br label %if.end18

if.end18:                                         ; preds = %if.then17, %if.end.i.i72.if.end18_crit_edge
  %46 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %tmpmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %48 = load i32, ptr @nr_cpu_ids, align 4
  %call8.i83 = call i32 @cpumask_next(i32 noundef -1, ptr noundef %47) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call8.i83, i32 %48)
  %cmp9.i84 = icmp ult i32 %call8.i83, %48
  br i1 %cmp9.i84, label %if.end18.for.body.i102_crit_edge, label %if.end18.out_crit_edge

if.end18.out_crit_edge:                           ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end18.for.body.i102_crit_edge:                 ; preds = %if.end18
  br label %for.body.i102

for.body.i102:                                    ; preds = %for.body.i102.for.body.i102_crit_edge, %if.end18.for.body.i102_crit_edge
  %call12.i87 = phi i32 [ %call.i100, %for.body.i102.for.body.i102_crit_edge ], [ %call8.i83, %if.end18.for.body.i102_crit_edge ]
  %count.011.i88 = phi i32 [ %57, %for.body.i102.for.body.i102_crit_edge ], [ 2147483647, %if.end18.for.body.i102_crit_edge ]
  %cpu.010.i89 = phi i32 [ %spec.select.i99, %for.body.i102.for.body.i102_crit_edge ], [ %48, %if.end18.for.body.i102_crit_edge ]
  %49 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %common.i, align 4
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %50, align 4
  %and.i.i.i90 = and i32 %52, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i90)
  %tobool.i.not.i.i91 = icmp eq i32 %and.i.i.i90, 0
  %arrayidx9.i.i92 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i87
  %53 = ptrtoint ptr %arrayidx9.i.i92 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx9.i.i92, align 4
  %add10.i.i93 = add i32 %54, ptrtoint (ptr @cpu_lpi_count to i32)
  %55 = inttoptr i32 %add10.i.i93 to ptr
  %unmanaged.i.i94 = getelementptr inbounds %struct.cpu_lpi_count, ptr %55, i32 0, i32 1
  %unmanaged.sink.i.i95 = select i1 %tobool.i.not.i.i91, ptr %unmanaged.i.i94, ptr %55
  %call.i.i13.i.i96 = call zeroext i1 @__kasan_check_read(ptr noundef %unmanaged.sink.i.i95, i32 noundef 4) #15
  %56 = ptrtoint ptr %unmanaged.sink.i.i95 to i32
  call void @__asan_load4_noabort(i32 %56)
  %retval.0.i.i97 = load volatile i32, ptr %unmanaged.sink.i.i95, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i97, i32 %count.011.i88)
  %cmp2.i98 = icmp slt i32 %retval.0.i.i97, %count.011.i88
  %spec.select.i99 = select i1 %cmp2.i98, i32 %call12.i87, i32 %cpu.010.i89
  %57 = call i32 @llvm.smin.i32(i32 %retval.0.i.i97, i32 %count.011.i88) #15
  %call.i100 = call i32 @cpumask_next(i32 noundef %call12.i87, ptr noundef %47) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %58 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i101 = icmp ult i32 %call.i100, %58
  br i1 %cmp.i101, label %for.body.i102.for.body.i102_crit_edge, label %for.body.i102.out_crit_edge

for.body.i102.out_crit_edge:                      ; preds = %for.body.i102
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

for.body.i102.for.body.i102_crit_edge:            ; preds = %for.body.i102
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i102

if.end.i.i113:                                    ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %59 = load i32, ptr @nr_cpu_ids, align 4
  %affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %8, i32 0, i32 3
  %60 = ptrtoint ptr %affinity.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %affinity.i, align 4
  %62 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %tmpmask, align 4
  %call.i.i112 = call i32 @__bitmap_and(ptr noundef %63, ptr noundef %61, ptr noundef nonnull @__cpu_online_mask, i32 noundef %59) #15
  %64 = ptrtoint ptr %its to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %its, align 4
  %flags23 = getelementptr inbounds %struct.its_node, ptr %65, i32 0, i32 17
  %66 = ptrtoint ptr %flags23 to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %flags23, align 8
  %and24 = and i64 %67, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and24)
  %tobool25.not = icmp eq i64 %and24, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp26.not = icmp eq i32 %6, -1
  %or.cond = select i1 %tobool25.not, i1 true, i1 %cmp26.not
  br i1 %or.cond, label %if.end.i.i113.if.end29_crit_edge, label %if.end.i.i122

if.end.i.i113.if.end29_crit_edge:                 ; preds = %if.end.i.i113
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

if.end.i.i122:                                    ; preds = %if.end.i.i113
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %68 = load i32, ptr @nr_cpu_ids, align 4
  %69 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %tmpmask, align 4
  %call.i.i121 = call i32 @__bitmap_and(ptr noundef %70, ptr noundef %70, ptr noundef nonnull @__cpu_online_mask, i32 noundef %68) #15
  br label %if.end29

if.end29:                                         ; preds = %if.end.i.i122, %if.end.i.i113.if.end29_crit_edge
  %71 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %tmpmask, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %73 = load i32, ptr @nr_cpu_ids, align 4
  %call8.i124 = call i32 @cpumask_next(i32 noundef -1, ptr noundef %72) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call8.i124, i32 %73)
  %cmp9.i125 = icmp ult i32 %call8.i124, %73
  br i1 %cmp9.i125, label %if.end29.for.body.i143_crit_edge, label %if.end29.out_crit_edge

if.end29.out_crit_edge:                           ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end29.for.body.i143_crit_edge:                 ; preds = %if.end29
  br label %for.body.i143

for.body.i143:                                    ; preds = %for.body.i143.for.body.i143_crit_edge, %if.end29.for.body.i143_crit_edge
  %call12.i128 = phi i32 [ %call.i141, %for.body.i143.for.body.i143_crit_edge ], [ %call8.i124, %if.end29.for.body.i143_crit_edge ]
  %count.011.i129 = phi i32 [ %82, %for.body.i143.for.body.i143_crit_edge ], [ 2147483647, %if.end29.for.body.i143_crit_edge ]
  %cpu.010.i130 = phi i32 [ %spec.select.i140, %for.body.i143.for.body.i143_crit_edge ], [ %73, %if.end29.for.body.i143_crit_edge ]
  %74 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %common.i, align 4
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %75, align 4
  %and.i.i.i131 = and i32 %77, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i131)
  %tobool.i.not.i.i132 = icmp eq i32 %and.i.i.i131, 0
  %arrayidx9.i.i133 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call12.i128
  %78 = ptrtoint ptr %arrayidx9.i.i133 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx9.i.i133, align 4
  %add10.i.i134 = add i32 %79, ptrtoint (ptr @cpu_lpi_count to i32)
  %80 = inttoptr i32 %add10.i.i134 to ptr
  %unmanaged.i.i135 = getelementptr inbounds %struct.cpu_lpi_count, ptr %80, i32 0, i32 1
  %unmanaged.sink.i.i136 = select i1 %tobool.i.not.i.i132, ptr %unmanaged.i.i135, ptr %80
  %call.i.i13.i.i137 = call zeroext i1 @__kasan_check_read(ptr noundef %unmanaged.sink.i.i136, i32 noundef 4) #15
  %81 = ptrtoint ptr %unmanaged.sink.i.i136 to i32
  call void @__asan_load4_noabort(i32 %81)
  %retval.0.i.i138 = load volatile i32, ptr %unmanaged.sink.i.i136, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i.i138, i32 %count.011.i129)
  %cmp2.i139 = icmp slt i32 %retval.0.i.i138, %count.011.i129
  %spec.select.i140 = select i1 %cmp2.i139, i32 %call12.i128, i32 %cpu.010.i130
  %82 = call i32 @llvm.smin.i32(i32 %retval.0.i.i138, i32 %count.011.i129) #15
  %call.i141 = call i32 @cpumask_next(i32 noundef %call12.i128, ptr noundef %72) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %83 = load i32, ptr @nr_cpu_ids, align 4
  %cmp.i142 = icmp ult i32 %call.i141, %83
  br i1 %cmp.i142, label %for.body.i143.for.body.i143_crit_edge, label %for.body.i143.out_crit_edge

for.body.i143.out_crit_edge:                      ; preds = %for.body.i143
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

for.body.i143.for.body.i143_crit_edge:            ; preds = %for.body.i143
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i143

out:                                              ; preds = %for.body.i143.out_crit_edge, %if.end29.out_crit_edge, %for.body.i102.out_crit_edge, %if.end18.out_crit_edge, %if.end10.out_crit_edge, %cpumask_pick_least_loaded.exit.out_crit_edge
  %cpu.0 = phi i32 [ %cpu.0.lcssa.i, %cpumask_pick_least_loaded.exit.out_crit_edge ], [ %cpu.0.lcssa.i, %if.end10.out_crit_edge ], [ %48, %if.end18.out_crit_edge ], [ %73, %if.end29.out_crit_edge ], [ %spec.select.i99, %for.body.i102.out_crit_edge ], [ %spec.select.i140, %for.body.i143.out_crit_edge ]
  %84 = ptrtoint ptr %tmpmask to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %tmpmask, align 4
  call void @free_cpumask_var(ptr noundef %85) #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_select_cpu.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_select_cpu, %if.then36)) #15
          to label %cleanup [label %if.then36], !srcloc !366

if.then36:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  %irq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 1
  %86 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %irq, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %88 = load i32, ptr @nr_cpu_ids, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_select_cpu.__UNIQUE_ID_ddebug248, ptr noundef nonnull @.str.103, i32 noundef %87, i32 noundef %88, ptr noundef %aff_mask, i32 noundef %cpu.0) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then36, %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ %cpu.0, %if.then36 ], [ %cpu.0, %out ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmpmask) #15
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #13

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @alloc_cpumask_var(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_cpumask_var(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_and(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_first_bit_be(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_movi_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.94, ptr %desc, i32 0, i32 2
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 1
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i13 = zext i32 %16 to i64
  %and4.i.i14 = and i64 %or.i.i, 4294967041
  %shl6.i.i = shl nuw i64 %conv.i13, 32
  %or.i.i15 = or i64 %shl6.i.i, %and4.i.i14
  store i64 %or.i.i15, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i16 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i17 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i16 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i16, align 8
  %and4.i.i18 = and i64 %19, -4294967296
  %or.i.i19 = or i64 %and4.i.i18, %conv.i17
  store i64 %or.i.i19, ptr %arrayidx.i16, align 8
  %col3 = getelementptr inbounds %struct.anon.94, ptr %desc, i32 0, i32 1
  %20 = ptrtoint ptr %col3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %col3, align 4
  %col_id = getelementptr inbounds %struct.its_collection, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %col_id to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %col_id, align 8
  %arrayidx.i20 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i21 = zext i16 %23 to i64
  %24 = ptrtoint ptr %arrayidx.i20 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx.i20, align 8
  %and4.i.i22 = and i64 %25, -65536
  %or.i.i23 = or i64 %and4.i.i22, %conv.i21
  %26 = tail call i64 @llvm.bswap.i64(i64 %or.i.i15) #15
  %27 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %cmd, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %or.i.i19) #15
  %29 = ptrtoint ptr %arrayidx.i16 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx.i16, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %or.i.i23) #15
  %31 = ptrtoint ptr %arrayidx.i20 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx.i20, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx6.i, align 8
  %34 = tail call i64 @llvm.bswap.i64(i64 %33) #15
  %35 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %arrayidx6.i, align 8
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %37, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vint_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.90, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %4 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not.i = icmp ugt i32 %5, %3
  br i1 %cmp.not.i, label %if.end37.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %.b43.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge:  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %dev_event_to_vlpi_map.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %dev_event_to_vlpi_map.exit

if.end37.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %vlpi_maps.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %6 = ptrtoint ptr %vlpi_maps.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vlpi_maps.i, align 4
  %arrayidx.i = getelementptr %struct.its_vlpi_map, ptr %7, i32 %3
  br label %dev_event_to_vlpi_map.exit

dev_event_to_vlpi_map.exit:                       ; preds = %if.end37.i, %if.then.i, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge
  %retval.0.i = phi ptr [ %arrayidx.i, %if.end37.i ], [ null, %if.then.i ], [ null, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge ]
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 3
  store i64 %or.i.i, ptr %cmd, align 8
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i10 = and i64 %or.i.i, 4294967043
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i11 = or i64 %shl6.i.i, %and4.i.i10
  store i64 %or.i.i11, ptr %cmd, align 8
  %14 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %event_id, align 4
  %arrayidx.i12 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i13 = zext i32 %15 to i64
  %16 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx.i12, align 8
  %and4.i.i14 = and i64 %17, -4294967296
  %or.i.i15 = or i64 %and4.i.i14, %conv.i13
  %18 = tail call i64 @llvm.bswap.i64(i64 %or.i.i11) #15
  %19 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %cmd, align 8
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i15) #15
  %21 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx.i12, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %22 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx4.i, align 8
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #15
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %arrayidx6.i, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %27) #15
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx6.i, align 8
  %vpe = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i, i32 0, i32 1
  %30 = ptrtoint ptr %vpe to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vpe, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %32 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %31, i32 0, i32 9
  %34 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %col_idx.i, align 4
  %conv.i16 = zext i16 %35 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %33, i32 %conv.i16
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %37, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge, label %land.rhs.i.i

dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge: ; preds = %dev_event_to_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %dev_event_to_vlpi_map.exit
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %31
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vclear_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.89, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %nr_lpis.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 3
  %4 = ptrtoint ptr %nr_lpis.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_lpis.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %3)
  %cmp.not.i = icmp ugt i32 %5, %3
  br i1 %cmp.not.i, label %if.end37.i, label %land.rhs.i

land.rhs.i:                                       ; preds = %entry
  %.b43.i = load i1, ptr @dev_event_to_vlpi_map.__already_done, align 1
  br i1 %.b43.i, label %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge:  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %dev_event_to_vlpi_map.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @dev_event_to_vlpi_map.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 245, i32 noundef 9, ptr noundef null) #15
  br label %dev_event_to_vlpi_map.exit

if.end37.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %vlpi_maps.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 6
  %6 = ptrtoint ptr %vlpi_maps.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %vlpi_maps.i, align 4
  %arrayidx.i = getelementptr %struct.its_vlpi_map, ptr %7, i32 %3
  br label %dev_event_to_vlpi_map.exit

dev_event_to_vlpi_map.exit:                       ; preds = %if.end37.i, %if.then.i, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge
  %retval.0.i = phi ptr [ %arrayidx.i, %if.end37.i ], [ null, %if.then.i ], [ null, %land.rhs.i.dev_event_to_vlpi_map.exit_crit_edge ]
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 4
  store i64 %or.i.i, ptr %cmd, align 8
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i10 = and i64 %or.i.i, 4294967044
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i11 = or i64 %shl6.i.i, %and4.i.i10
  store i64 %or.i.i11, ptr %cmd, align 8
  %14 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %event_id, align 4
  %arrayidx.i12 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i13 = zext i32 %15 to i64
  %16 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx.i12, align 8
  %and4.i.i14 = and i64 %17, -4294967296
  %or.i.i15 = or i64 %and4.i.i14, %conv.i13
  %18 = tail call i64 @llvm.bswap.i64(i64 %or.i.i11) #15
  %19 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %cmd, align 8
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i15) #15
  %21 = ptrtoint ptr %arrayidx.i12 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx.i12, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %22 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx4.i, align 8
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #15
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %arrayidx6.i, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %27) #15
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx6.i, align 8
  %vpe = getelementptr inbounds %struct.its_vlpi_map, ptr %retval.0.i, i32 0, i32 1
  %30 = ptrtoint ptr %vpe to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vpe, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %32 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %31, i32 0, i32 9
  %34 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %col_idx.i, align 4
  %conv.i16 = zext i16 %35 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %33, i32 %conv.i16
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %37, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge, label %land.rhs.i.i

dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge: ; preds = %dev_event_to_vlpi_map.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %dev_event_to_vlpi_map.exit
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %dev_event_to_vlpi_map.exit.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %31
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_int_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.90, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 3
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i10 = zext i32 %16 to i64
  %and4.i.i11 = and i64 %or.i.i, 4294967043
  %shl6.i.i = shl nuw i64 %conv.i10, 32
  %or.i.i12 = or i64 %shl6.i.i, %and4.i.i11
  store i64 %or.i.i12, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i13 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i14 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i13, align 8
  %and4.i.i15 = and i64 %19, -4294967296
  %or.i.i16 = or i64 %and4.i.i15, %conv.i14
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i12) #15
  %21 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cmd, align 8
  %22 = tail call i64 @llvm.bswap.i64(i64 %or.i.i16) #15
  %23 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %arrayidx.i13, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %24 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx4.i, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %25) #15
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx6.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #15
  %31 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx6.i, align 8
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %33, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_clear_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.89, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 4
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i10 = zext i32 %16 to i64
  %and4.i.i11 = and i64 %or.i.i, 4294967044
  %shl6.i.i = shl nuw i64 %conv.i10, 32
  %or.i.i12 = or i64 %shl6.i.i, %and4.i.i11
  store i64 %or.i.i12, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i13 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i14 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i13, align 8
  %and4.i.i15 = and i64 %19, -4294967296
  %or.i.i16 = or i64 %and4.i.i15, %conv.i14
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i12) #15
  %21 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cmd, align 8
  %22 = tail call i64 @llvm.bswap.i64(i64 %or.i.i16) #15
  %23 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %arrayidx.i13, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %24 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx4.i, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %25) #15
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx6.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #15
  %31 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx6.i, align 8
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %33, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_discard_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.95, ptr %desc, i32 0, i32 1
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 15
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i10 = zext i32 %16 to i64
  %and4.i.i11 = and i64 %or.i.i, 4294967055
  %shl6.i.i = shl nuw i64 %conv.i10, 32
  %or.i.i12 = or i64 %shl6.i.i, %and4.i.i11
  store i64 %or.i.i12, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i13 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i14 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i13, align 8
  %and4.i.i15 = and i64 %19, -4294967296
  %or.i.i16 = or i64 %and4.i.i15, %conv.i14
  %20 = tail call i64 @llvm.bswap.i64(i64 %or.i.i12) #15
  %21 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cmd, align 8
  %22 = tail call i64 @llvm.bswap.i64(i64 %or.i.i16) #15
  %23 = ptrtoint ptr %arrayidx.i13 to i32
  call void @__asan_store8_noabort(i32 %23)
  store i64 %22, ptr %arrayidx.i13, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %24 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx4.i, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %25) #15
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx6.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #15
  %31 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx6.i, align 8
  %32 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %33, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_mapti_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %event_id = getelementptr inbounds %struct.anon.93, ptr %desc, i32 0, i32 2
  %2 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %event_id, align 4
  %its1.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %its1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %its1.i, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %collections.i, align 8
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %col_map.i, align 4
  %arrayidx.i = getelementptr i16, ptr %9, i32 %3
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %arrayidx.i, align 2
  %conv.i = zext i16 %11 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %7, i32 %conv.i
  %12 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %13, -256
  %or.i.i = or i64 %and4.i.i, 10
  store i64 %or.i.i, ptr %cmd, align 8
  %14 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %device_id, align 4
  %conv.i14 = zext i32 %16 to i64
  %and4.i.i15 = and i64 %or.i.i, 4294967050
  %shl6.i.i = shl nuw i64 %conv.i14, 32
  %or.i.i16 = or i64 %shl6.i.i, %and4.i.i15
  store i64 %or.i.i16, ptr %cmd, align 8
  %17 = load i32, ptr %event_id, align 4
  %arrayidx.i17 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i18 = zext i32 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i17 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i17, align 8
  %and4.i.i19 = and i64 %19, -4294967296
  %or.i.i20 = or i64 %and4.i.i19, %conv.i18
  store i64 %or.i.i20, ptr %arrayidx.i17, align 8
  %phys_id = getelementptr inbounds %struct.anon.93, ptr %desc, i32 0, i32 1
  %20 = ptrtoint ptr %phys_id to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %phys_id, align 4
  %conv.i22 = zext i32 %21 to i64
  %shl6.i.i24 = shl nuw i64 %conv.i22, 32
  %or.i.i25 = or i64 %shl6.i.i24, %conv.i18
  store i64 %or.i.i25, ptr %arrayidx.i17, align 8
  %col_id = getelementptr %struct.its_collection, ptr %7, i32 %conv.i, i32 1
  %22 = ptrtoint ptr %col_id to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %col_id, align 8
  %arrayidx.i26 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i27 = zext i16 %23 to i64
  %24 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %arrayidx.i26, align 8
  %and4.i.i28 = and i64 %25, -65536
  %or.i.i29 = or i64 %and4.i.i28, %conv.i27
  %26 = tail call i64 @llvm.bswap.i64(i64 %or.i.i16) #15
  %27 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %cmd, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %or.i.i25) #15
  %29 = ptrtoint ptr %arrayidx.i17 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx.i17, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %or.i.i29) #15
  %31 = ptrtoint ptr %arrayidx.i26 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx.i26, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx6.i, align 8
  %34 = tail call i64 @llvm.bswap.i64(i64 %33) #15
  %35 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %arrayidx6.i, align 8
  %36 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %add.ptr.i, align 8
  %and.i = and i64 %37, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.valid_col.exit_crit_edge, label %land.rhs.i

entry.valid_col.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

land.rhs.i:                                       ; preds = %entry
  %.b42.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i, label %land.rhs.i.valid_col.exit_crit_edge, label %if.then.i, !prof !364

land.rhs.i.valid_col.exit_crit_edge:              ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_col.exit

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_col.exit

valid_col.exit:                                   ; preds = %if.then.i, %land.rhs.i.valid_col.exit_crit_edge, %entry.valid_col.exit_crit_edge
  %col..i = phi ptr [ %add.ptr.i, %entry.valid_col.exit_crit_edge ], [ null, %if.then.i ], [ null, %land.rhs.i.valid_col.exit_crit_edge ]
  ret ptr %col..i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vmapp_cmd(ptr nocapture noundef readonly %its, ptr noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %1, -256
  %or.i.i = or i64 %and4.i.i, 41
  store i64 %or.i.i, ptr %cmd, align 8
  %2 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i = zext i16 %5 to i64
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i60 = and i64 %7, -281470681743361
  %shl6.i.i = shl nuw nsw i64 %conv.i, 32
  %or.i.i61 = or i64 %and4.i.i60, %shl6.i.i
  store i64 %or.i.i61, ptr %arrayidx.i, align 8
  %valid = getelementptr inbounds %struct.anon.98, ptr %desc, i32 0, i32 2
  %8 = ptrtoint ptr %valid to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %valid, align 4, !range !365
  %arrayidx.i62 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i = icmp eq i8 %9, 0
  %10 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %arrayidx.i62, align 8
  %and4.i.i63 = and i64 %11, 9223372036854775807
  %shl6.i.i64 = select i1 %tobool.not.i, i64 0, i64 -9223372036854775808
  %or.i.i65 = or i64 %and4.i.i63, %shl6.i.i64
  store i64 %or.i.i65, ptr %arrayidx.i62, align 8
  %12 = ptrtoint ptr %valid to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %valid, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool2.not = icmp eq i8 %13, 0
  br i1 %tobool2.not, label %if.then, label %if.end8

if.then:                                          ; preds = %entry
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %14 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %typer, align 8
  %and = and i64 %15, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool3.not = icmp eq i64 %and, 0
  br i1 %tobool3.not, label %if.then.out_crit_edge, label %if.then4

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.then4:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %16 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %desc, align 4
  %vmapp_count = getelementptr inbounds %struct.its_vpe, ptr %17, i32 0, i32 7, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %vmapp_count, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !389
  tail call void @llvm.prefetch.p0(ptr %vmapp_count, i32 1, i32 3, i32 1) #15
  %18 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %vmapp_count, ptr %vmapp_count, i32 1, ptr elementtype(i32) %vmapp_count) #15, !srcloc !390
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %18, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !391
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %tobool6.not = icmp eq i32 %asmresult.i.i.i.i, 0
  %19 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %cmd, align 8
  %and4.i.i66 = and i64 %20, -257
  %shl6.i.i67 = select i1 %tobool6.not, i64 256, i64 0
  %or.i.i68 = or i64 %and4.i.i66, %shl6.i.i67
  store i64 %or.i.i68, ptr %cmd, align 8
  br label %out

if.end8:                                          ; preds = %entry
  %21 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %desc, align 4
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %call10 = tail call ptr @page_address(ptr noundef %24) #15
  %25 = ptrtoint ptr %call10 to i32
  %call.i = tail call i32 @__virt_to_phys(i32 noundef %25) #15
  %col = getelementptr inbounds %struct.anon.98, ptr %desc, i32 0, i32 1
  %26 = ptrtoint ptr %col to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %col, align 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %27, align 8
  %vlpi_redist_offset = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 22
  %30 = ptrtoint ptr %vlpi_redist_offset to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %vlpi_redist_offset, align 8
  %conv12 = sext i32 %31 to i64
  %add = add i64 %29, %conv12
  %32 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx.i62, align 8
  %and4.i.i70 = and i64 %33, -4503599627304961
  %and7.i.i = and i64 %add, 4503599627304960
  %or.i.i71 = or i64 %and7.i.i, %and4.i.i70
  store i64 %or.i.i71, ptr %arrayidx.i62, align 8
  %arrayidx.i72 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %34 = ptrtoint ptr %arrayidx.i72 to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %arrayidx.i72, align 8
  %and4.i.i73 = and i64 %35, -4503599627304992
  %36 = and i32 %call.i, -65536
  %and7.i.i74 = zext i32 %36 to i64
  %or.i.i75 = or i64 %and4.i.i73, %and7.i.i74
  %37 = load i32, ptr @lpi_id_bits, align 4
  %38 = trunc i32 %37 to i8
  %conv14 = add i8 %38, 31
  %39 = and i8 %conv14, 31
  %and7.i.i78 = zext i8 %39 to i64
  %or.i.i79 = or i64 %or.i.i75, %and7.i.i78
  store i64 %or.i.i79, ptr %arrayidx.i72, align 8
  %typer15 = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %40 = ptrtoint ptr %typer15 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %typer15, align 8
  %and16 = and i64 %41, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and16)
  %tobool17.not = icmp eq i64 %and16, 0
  br i1 %tobool17.not, label %if.end8.out_crit_edge, label %if.end19

if.end8.out_crit_edge:                            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end19:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %42 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %desc, align 4
  %its_vm = getelementptr inbounds %struct.its_vpe, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %its_vm to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %its_vm, align 4
  %vprop_page = getelementptr inbounds %struct.its_vm, ptr %45, i32 0, i32 2
  %46 = ptrtoint ptr %vprop_page to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %vprop_page, align 4
  %call21 = tail call ptr @page_address(ptr noundef %47) #15
  %48 = ptrtoint ptr %call21 to i32
  %call.i80 = tail call i32 @__virt_to_phys(i32 noundef %48) #15
  %49 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %desc, align 4
  %vmapp_count24 = getelementptr inbounds %struct.its_vpe, ptr %50, i32 0, i32 7, i32 0, i32 3
  %call.i.i58 = tail call zeroext i1 @__kasan_check_write(ptr noundef %vmapp_count24, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !392
  tail call void @llvm.prefetch.p0(ptr %vmapp_count24, i32 1, i32 3, i32 1) #15
  %51 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %vmapp_count24, ptr %vmapp_count24, i32 1, ptr elementtype(i32) %vmapp_count24) #15, !srcloc !393
  %asmresult.i.i.i.i59 = extractvalue { i32, i32, i32 } %51, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !394
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i59)
  %tobool26.not = icmp eq i32 %asmresult.i.i.i.i59, 0
  %52 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %cmd, align 8
  %and4.i.i81 = and i64 %53, -4503599627305729
  %shl6.i.i82 = select i1 %tobool26.not, i64 256, i64 0
  %54 = and i32 %call.i80, -65536
  %and7.i.i86 = zext i32 %54 to i64
  %or.i.i83 = or i64 %shl6.i.i82, %and7.i.i86
  %or.i.i87 = or i64 %or.i.i83, %and4.i.i81
  store i64 %or.i.i87, ptr %cmd, align 8
  %55 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %desc, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %56, i32 0, i32 4
  %57 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %vpe_db_lpi, align 4
  %conv.i89 = zext i32 %58 to i64
  %59 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i90 = and i64 %60, -4294967296
  %or.i.i91 = or i64 %and4.i.i90, %conv.i89
  store i64 %or.i.i91, ptr %arrayidx.i, align 8
  br label %out

out:                                              ; preds = %if.end19, %if.end8.out_crit_edge, %if.then4, %if.then.out_crit_edge
  %61 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %cmd, align 8
  %63 = tail call i64 @llvm.bswap.i64(i64 %62) #15
  %64 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %63, ptr %cmd, align 8
  %65 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %arrayidx.i, align 8
  %67 = tail call i64 @llvm.bswap.i64(i64 %66) #15
  %68 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %67, ptr %arrayidx.i, align 8
  %69 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %arrayidx.i62, align 8
  %71 = tail call i64 @llvm.bswap.i64(i64 %70) #15
  %72 = ptrtoint ptr %arrayidx.i62 to i32
  call void @__asan_store8_noabort(i32 %72)
  store i64 %71, ptr %arrayidx.i62, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %73 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %arrayidx6.i, align 8
  %75 = tail call i64 @llvm.bswap.i64(i64 %74) #15
  %76 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %76)
  store i64 %75, ptr %arrayidx6.i, align 8
  %77 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %79 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %78, i32 0, i32 9
  %81 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %col_idx.i, align 4
  %conv.i92 = zext i16 %82 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %80, i32 %conv.i92
  %83 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %83)
  %84 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %84, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %out.valid_vpe.exit_crit_edge, label %land.rhs.i.i

out.valid_vpe.exit_crit_edge:                     ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %out
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %out.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %out.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i93 = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i93, ptr null, ptr %78
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vinvall_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %1, -256
  %or.i.i = or i64 %and4.i.i, 45
  store i64 %or.i.i, ptr %cmd, align 8
  %2 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i = zext i16 %5 to i64
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i5 = and i64 %7, -281470681743361
  %shl6.i.i = shl nuw nsw i64 %conv.i, 32
  %or.i.i6 = or i64 %and4.i.i5, %shl6.i.i
  %8 = tail call i64 @llvm.bswap.i64(i64 %or.i.i) #15
  %9 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %cmd, align 8
  %10 = tail call i64 @llvm.bswap.i64(i64 %or.i.i6) #15
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %arrayidx.i, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %12 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %arrayidx4.i, align 8
  %14 = tail call i64 @llvm.bswap.i64(i64 %13) #15
  %15 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %16 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %arrayidx6.i, align 8
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #15
  %19 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %arrayidx6.i, align 8
  %20 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %22 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %21, i32 0, i32 9
  %24 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %col_idx.i, align 4
  %conv.i7 = zext i16 %25 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %23, i32 %conv.i7
  %26 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %27, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %entry.valid_vpe.exit_crit_edge, label %land.rhs.i.i

entry.valid_vpe.exit_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %entry
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %entry.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %entry.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %21
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vmapti_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %0 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %typer, align 8
  %and = and i64 %1, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %db_enabled = getelementptr inbounds %struct.anon.99, ptr %desc, i32 0, i32 4
  %2 = ptrtoint ptr %db_enabled to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %db_enabled, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not = icmp eq i8 %3, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %vpe_db_lpi, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %db.0 = phi i32 [ %7, %if.then ], [ 1023, %land.lhs.true.if.end_crit_edge ], [ 1023, %entry.if.end_crit_edge ]
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 42
  store i64 %or.i.i, ptr %cmd, align 8
  %dev = getelementptr inbounds %struct.anon.99, ptr %desc, i32 0, i32 1
  %10 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i17 = and i64 %or.i.i, 4294967082
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i18 = or i64 %shl6.i.i, %and4.i.i17
  store i64 %or.i.i18, ptr %cmd, align 8
  %14 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i19 = zext i16 %17 to i64
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i20 = and i64 %19, -281470681743361
  %shl6.i.i21 = shl nuw nsw i64 %conv.i19, 32
  %or.i.i22 = or i64 %and4.i.i20, %shl6.i.i21
  store i64 %or.i.i22, ptr %arrayidx.i, align 8
  %event_id = getelementptr inbounds %struct.anon.99, ptr %desc, i32 0, i32 3
  %20 = ptrtoint ptr %event_id to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %event_id, align 4
  %conv.i24 = zext i32 %21 to i64
  %and4.i.i25 = and i64 %or.i.i22, -4294967296
  %or.i.i26 = or i64 %and4.i.i25, %conv.i24
  store i64 %or.i.i26, ptr %arrayidx.i, align 8
  %arrayidx.i27 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %conv.i28 = zext i32 %db.0 to i64
  %22 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %arrayidx.i27, align 8
  %and4.i.i29 = and i64 %23, 4294967295
  %shl6.i.i30 = shl nuw i64 %conv.i28, 32
  %or.i.i31 = or i64 %and4.i.i29, %shl6.i.i30
  store i64 %or.i.i31, ptr %arrayidx.i27, align 8
  %virt_id = getelementptr inbounds %struct.anon.99, ptr %desc, i32 0, i32 2
  %24 = ptrtoint ptr %virt_id to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %virt_id, align 4
  %conv.i33 = zext i32 %25 to i64
  %or.i.i35 = or i64 %shl6.i.i30, %conv.i33
  %26 = tail call i64 @llvm.bswap.i64(i64 %or.i.i18) #15
  %27 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %cmd, align 8
  %28 = tail call i64 @llvm.bswap.i64(i64 %or.i.i26) #15
  %29 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %arrayidx.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %or.i.i35) #15
  %31 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx.i27, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx6.i, align 8
  %34 = tail call i64 @llvm.bswap.i64(i64 %33) #15
  %35 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %arrayidx6.i, align 8
  %36 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %38 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %37, i32 0, i32 9
  %40 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %col_idx.i, align 4
  %conv.i36 = zext i16 %41 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %39, i32 %conv.i36
  %42 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %43, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.valid_vpe.exit_crit_edge, label %land.rhs.i.i

if.end.valid_vpe.exit_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %if.end
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %if.end.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %if.end.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %37
  ret ptr %.vpe.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @irq_domain_get_irq_data(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bitmap_release_region(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_domain_reset_irq_data(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_domain_free_irqs_parent(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @free_lpi_range(i32 noundef %base, i32 noundef %nr_lpis) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 16) #22
  %tobool.not.i = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %base_id.i = getelementptr inbounds %struct.lpi_range, ptr %call7.i.i, i32 0, i32 1
  %1 = ptrtoint ptr %base_id.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %base, ptr %base_id.i, align 8
  %span1.i = getelementptr inbounds %struct.lpi_range, ptr %call7.i.i, i32 0, i32 2
  %2 = ptrtoint ptr %span1.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %nr_lpis, ptr %span1.i, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @lpi_range_lock, i32 noundef 0) #15
  %old.042 = load ptr, ptr getelementptr inbounds (%struct.list_head, ptr @lpi_range_list, i32 0, i32 1), align 4
  %cmp.not43 = icmp eq ptr %old.042, @lpi_range_list
  br i1 %cmp.not43, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %old.044 = phi ptr [ %old.0, %for.inc.for.body_crit_edge ], [ %old.042, %if.end.for.body_crit_edge ]
  %base_id = getelementptr inbounds %struct.lpi_range, ptr %old.044, i32 0, i32 1
  %3 = ptrtoint ptr %base_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %base_id, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %base)
  %cmp2 = icmp ult i32 %4, %base
  br i1 %cmp2, label %for.body.for.end.loopexit_crit_edge, label %for.inc

for.body.for.end.loopexit_crit_edge:              ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.loopexit

for.inc:                                          ; preds = %for.body
  %prev = getelementptr inbounds %struct.list_head, ptr %old.044, i32 0, i32 1
  %5 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %5)
  %old.0 = load ptr, ptr %prev, align 4
  %cmp.not = icmp eq ptr %old.0, @lpi_range_list
  br i1 %cmp.not, label %for.inc.for.end.loopexit_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.for.end.loopexit_crit_edge:               ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.inc.for.end.loopexit_crit_edge, %for.body.for.end.loopexit_crit_edge
  %old.0.lcssa.ph = phi ptr [ @lpi_range_list, %for.inc.for.end.loopexit_crit_edge ], [ %old.044, %for.body.for.end.loopexit_crit_edge ]
  %6 = xor i1 %cmp2, true
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.end.for.end_crit_edge
  %old.0.lcssa = phi ptr [ @lpi_range_list, %if.end.for.end_crit_edge ], [ %old.0.lcssa.ph, %for.end.loopexit ]
  %cmp.not.lcssa = phi i1 [ true, %if.end.for.end_crit_edge ], [ %6, %for.end.loopexit ]
  %7 = ptrtoint ptr %old.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %old.0.lcssa, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i, ptr noundef %old.0.lcssa, ptr noundef %8) #15
  br i1 %call.i.i, label %if.end.i.i, label %for.end.list_add.exit_crit_edge

for.end.list_add.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add.exit

if.end.i.i:                                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call7.i.i, ptr %prev1.i.i, align 4
  %10 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %8, ptr %call7.i.i, align 8
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %11 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %old.0.lcssa, ptr %prev3.i.i, align 4
  %12 = ptrtoint ptr %old.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %call7.i.i, ptr %old.0.lcssa, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %for.end.list_add.exit_crit_edge
  br i1 %cmp.not.lcssa, label %list_add.exit.merge_lpi_ranges.exit_crit_edge, label %if.end.i

list_add.exit.merge_lpi_ranges.exit_crit_edge:    ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %merge_lpi_ranges.exit

if.end.i:                                         ; preds = %list_add.exit
  %base_id.i25 = getelementptr inbounds %struct.lpi_range, ptr %old.0.lcssa, i32 0, i32 1
  %13 = ptrtoint ptr %base_id.i25 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %base_id.i25, align 4
  %span.i = getelementptr inbounds %struct.lpi_range, ptr %old.0.lcssa, i32 0, i32 2
  %15 = ptrtoint ptr %span.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %span.i, align 4
  %add.i = add i32 %16, %14
  %17 = ptrtoint ptr %base_id.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %base_id.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %18)
  %cmp5.not.i = icmp eq i32 %add.i, %18
  br i1 %cmp5.not.i, label %if.end7.i, label %if.end.i.merge_lpi_ranges.exit_crit_edge

if.end.i.merge_lpi_ranges.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %merge_lpi_ranges.exit

if.end7.i:                                        ; preds = %if.end.i
  %19 = ptrtoint ptr %base_id.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %14, ptr %base_id.i, align 8
  %20 = ptrtoint ptr %span.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %span.i, align 4
  %22 = ptrtoint ptr %span1.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %span1.i, align 4
  %add12.i = add i32 %23, %21
  store i32 %add12.i, ptr %span1.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %old.0.lcssa) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.end7.i.list_del.exit.i_crit_edge

if.end7.i.list_del.exit.i_crit_edge:              ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %old.0.lcssa, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i.i, align 4
  %26 = ptrtoint ptr %old.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %old.0.lcssa, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %if.end7.i.list_del.exit.i_crit_edge
  %30 = ptrtoint ptr %old.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 256 to ptr), ptr %old.0.lcssa, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %old.0.lcssa, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %old.0.lcssa) #15
  br label %merge_lpi_ranges.exit

merge_lpi_ranges.exit:                            ; preds = %list_del.exit.i, %if.end.i.merge_lpi_ranges.exit_crit_edge, %list_add.exit.merge_lpi_ranges.exit_crit_edge
  %32 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %call7.i.i, align 8
  %cmp3.i = icmp eq ptr %33, @lpi_range_list
  br i1 %cmp3.i, label %merge_lpi_ranges.exit.merge_lpi_ranges.exit41_crit_edge, label %if.end.i31

merge_lpi_ranges.exit.merge_lpi_ranges.exit41_crit_edge: ; preds = %merge_lpi_ranges.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %merge_lpi_ranges.exit41

if.end.i31:                                       ; preds = %merge_lpi_ranges.exit
  %34 = ptrtoint ptr %base_id.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %base_id.i, align 8
  %36 = ptrtoint ptr %span1.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %span1.i, align 4
  %add.i28 = add i32 %37, %35
  %base_id4.i29 = getelementptr inbounds %struct.lpi_range, ptr %33, i32 0, i32 1
  %38 = ptrtoint ptr %base_id4.i29 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %base_id4.i29, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i28, i32 %39)
  %cmp5.not.i30 = icmp eq i32 %add.i28, %39
  br i1 %cmp5.not.i30, label %if.end7.i35, label %if.end.i31.merge_lpi_ranges.exit41_crit_edge

if.end.i31.merge_lpi_ranges.exit41_crit_edge:     ; preds = %if.end.i31
  call void @__sanitizer_cov_trace_pc() #17
  br label %merge_lpi_ranges.exit41

if.end7.i35:                                      ; preds = %if.end.i31
  %40 = ptrtoint ptr %base_id4.i29 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %35, ptr %base_id4.i29, align 4
  %41 = ptrtoint ptr %span1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %span1.i, align 4
  %span11.i32 = getelementptr inbounds %struct.lpi_range, ptr %33, i32 0, i32 2
  %43 = ptrtoint ptr %span11.i32 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %span11.i32, align 4
  %add12.i33 = add i32 %44, %42
  store i32 %add12.i33, ptr %span11.i32, align 4
  %call.i.i.i34 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %call7.i.i) #15
  br i1 %call.i.i.i34, label %if.end.i.i.i38, label %if.end7.i35.list_del.exit.i40_crit_edge

if.end7.i35.list_del.exit.i40_crit_edge:          ; preds = %if.end7.i35
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i40

if.end.i.i.i38:                                   ; preds = %if.end7.i35
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i36 = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %45 = ptrtoint ptr %prev.i.i.i36 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i.i.i36, align 4
  %47 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %call7.i.i, align 8
  %prev1.i.i.i.i37 = getelementptr inbounds %struct.list_head, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %prev1.i.i.i.i37 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %46, ptr %prev1.i.i.i.i37, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %48, ptr %46, align 4
  br label %list_del.exit.i40

list_del.exit.i40:                                ; preds = %if.end.i.i.i38, %if.end7.i35.list_del.exit.i40_crit_edge
  %51 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr inttoptr (i32 256 to ptr), ptr %call7.i.i, align 8
  %prev.i.i39 = getelementptr inbounds %struct.list_head, ptr %call7.i.i, i32 0, i32 1
  %52 = ptrtoint ptr %prev.i.i39 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i39, align 4
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #15
  br label %merge_lpi_ranges.exit41

merge_lpi_ranges.exit41:                          ; preds = %list_del.exit.i40, %if.end.i31.merge_lpi_ranges.exit41_crit_edge, %merge_lpi_ranges.exit.merge_lpi_ranges.exit41_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @lpi_range_lock) #15
  br label %cleanup

cleanup:                                          ; preds = %merge_lpi_ranges.exit41, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %merge_lpi_ranges.exit41 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bitmap_free(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal noalias ptr @its_build_mapd_cmd(ptr nocapture noundef readnone %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %desc, align 4
  %nr_ites = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %nr_ites to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_ites, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i.i = icmp eq i32 %3, 0
  %4 = tail call i32 @llvm.ctlz.i32(i32 %3, i1 true) #15, !range !368
  %itt = getelementptr inbounds %struct.its_device, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %itt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %itt, align 4
  %7 = ptrtoint ptr %6 to i32
  %call.i = tail call i32 @__virt_to_phys(i32 noundef %7) #15
  %add = add i32 %call.i, 255
  %8 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %9, -256
  %or.i.i = or i64 %and4.i.i, 8
  store i64 %or.i.i, ptr %cmd, align 8
  %10 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %desc, align 4
  %device_id = getelementptr inbounds %struct.its_device, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %device_id, align 4
  %conv.i = zext i32 %13 to i64
  %and4.i.i31 = and i64 %or.i.i, 4294967048
  %shl6.i.i = shl nuw i64 %conv.i, 32
  %or.i.i32 = or i64 %shl6.i.i, %and4.i.i31
  store i64 %or.i.i32, ptr %cmd, align 8
  %14 = trunc i32 %4 to i8
  %.op = sub nsw i8 30, %14
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i33 = and i64 %16, -32
  %.op.op = and i8 %.op, 31
  %17 = zext i8 %.op.op to i64
  %and7.i.i = select i1 %tobool.not.i.i, i64 30, i64 %17
  %or.i.i34 = or i64 %and4.i.i33, %and7.i.i
  store i64 %or.i.i34, ptr %arrayidx.i, align 8
  %arrayidx.i35 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %18 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i35, align 8
  %and4.i.i36 = and i64 %19, -4503599627370241
  %20 = and i32 %add, -256
  %and7.i.i37 = zext i32 %20 to i64
  %or.i.i38 = or i64 %and4.i.i36, %and7.i.i37
  store i64 %or.i.i38, ptr %arrayidx.i35, align 8
  %valid = getelementptr inbounds %struct.anon.91, ptr %desc, i32 0, i32 1
  %21 = ptrtoint ptr %valid to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %valid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i = icmp eq i32 %22, 0
  %and4.i.i40 = and i64 %or.i.i38, 9218868441522372607
  %shl6.i.i41 = select i1 %tobool.not.i, i64 0, i64 -9223372036854775808
  %or.i.i42 = or i64 %shl6.i.i41, %and4.i.i40
  %23 = tail call i64 @llvm.bswap.i64(i64 %or.i.i32) #15
  %24 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %cmd, align 8
  %25 = tail call i64 @llvm.bswap.i64(i64 %or.i.i34) #15
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %arrayidx.i, align 8
  %27 = tail call i64 @llvm.bswap.i64(i64 %or.i.i42) #15
  %28 = ptrtoint ptr %arrayidx.i35 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %arrayidx.i35, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %29 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %arrayidx6.i, align 8
  %31 = tail call i64 @llvm.bswap.i64(i64 %30) #15
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %arrayidx6.i, align 8
  ret ptr null
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_msi_prepare(ptr noundef %domain, ptr nocapture noundef readnone %dev, i32 noundef %nvec, ptr nocapture noundef %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %scratchpad = getelementptr inbounds %struct.msi_alloc_info, ptr %info, i32 0, i32 3
  %0 = ptrtoint ptr %scratchpad to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %scratchpad, align 4
  %call = tail call ptr @msi_get_domain_info(ptr noundef %domain) #15
  %data = getelementptr inbounds %struct.msi_domain_info, ptr %call, i32 0, i32 7
  %2 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data, align 4
  %4 = load ptr, ptr @gic_rdists, align 4
  %has_direct_lpi = getelementptr inbounds %struct.rdists, ptr %4, i32 0, i32 9
  %5 = ptrtoint ptr %has_direct_lpi to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %has_direct_lpi, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end40_crit_edge

entry.if.end40_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

land.lhs.true:                                    ; preds = %entry
  %7 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %tobool1.not = icmp eq ptr %7, null
  br i1 %tobool1.not, label %land.lhs.true.if.end40_crit_edge, label %land.lhs.true2

land.lhs.true.if.end40_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

land.lhs.true2:                                   ; preds = %land.lhs.true
  %its3 = getelementptr inbounds %struct.its_device, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %its3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %its3, align 4
  %cmp = icmp eq ptr %9, %3
  br i1 %cmp, label %land.lhs.true4, label %land.lhs.true2.if.end40_crit_edge

land.lhs.true2.if.end40_crit_edge:                ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

land.lhs.true4:                                   ; preds = %land.lhs.true2
  %device_id = getelementptr inbounds %struct.its_device, ptr %7, i32 0, i32 5
  %10 = ptrtoint ptr %device_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %device_id, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %11)
  %cmp5 = icmp eq i32 %1, %11
  br i1 %cmp5, label %land.end, label %land.lhs.true4.if.end40_crit_edge

land.lhs.true4.if.end40_crit_edge:                ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

land.end:                                         ; preds = %land.lhs.true4
  %.b118 = load i1, ptr @its_msi_prepare.__already_done, align 1
  br i1 %.b118, label %land.end.cleanup_crit_edge, label %if.then11, !prof !364

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then11:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @its_msi_prepare.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3475, i32 noundef 9, ptr noundef nonnull @.str.107, i32 noundef %1) #15
  br label %cleanup

if.end40:                                         ; preds = %land.lhs.true4.if.end40_crit_edge, %land.lhs.true2.if.end40_crit_edge, %land.lhs.true.if.end40_crit_edge, %entry.if.end40_crit_edge
  %dev_alloc_lock = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 1
  tail call void @mutex_lock_nested(ptr noundef %dev_alloc_lock, i32 noundef 0) #15
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %3) #15
  %its_device_list.i = getelementptr inbounds %struct.its_node, ptr %3, i32 0, i32 16
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end40
  %tmp.0.in.i = phi ptr [ %its_device_list.i, %if.end40 ], [ %tmp.0.i, %for.body.i.for.cond.i_crit_edge ]
  %12 = ptrtoint ptr %tmp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %tmp.0.i = load ptr, ptr %tmp.0.in.i, align 4
  %cmp5.not.i = icmp eq ptr %tmp.0.i, %its_device_list.i
  br i1 %cmp5.not.i, label %its_find_device.exit.thread, label %for.body.i

its_find_device.exit.thread:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %3, i32 noundef %call.i) #15
  br label %if.end58

for.body.i:                                       ; preds = %for.cond.i
  %device_id.i = getelementptr inbounds %struct.its_device, ptr %tmp.0.i, i32 0, i32 5
  %13 = ptrtoint ptr %device_id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %device_id.i, align 4
  %cmp7.i = icmp eq i32 %14, %1
  br i1 %cmp7.i, label %its_find_device.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i

its_find_device.exit:                             ; preds = %for.body.i
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %3, i32 noundef %call.i) #15
  %tobool42.not = icmp eq ptr %tmp.0.i, null
  br i1 %tobool42.not, label %its_find_device.exit.if.end58_crit_edge, label %if.then43

its_find_device.exit.if.end58_crit_edge:          ; preds = %its_find_device.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end58

if.then43:                                        ; preds = %its_find_device.exit
  call void @__sanitizer_cov_trace_pc() #17
  %shared = getelementptr inbounds %struct.its_device, ptr %tmp.0.i, i32 0, i32 6
  %15 = ptrtoint ptr %shared to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 1, ptr %shared, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_msi_prepare.__UNIQUE_ID_ddebug427, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_msi_prepare, %if.then54)) #15
          to label %out [label %if.then54], !srcloc !366

if.then54:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_msi_prepare.__UNIQUE_ID_ddebug427, ptr noundef nonnull @.str.109, i32 noundef %1) #15
  br label %out

if.end58:                                         ; preds = %its_find_device.exit.if.end58_crit_edge, %its_find_device.exit.thread
  %call59 = tail call fastcc ptr @its_create_device(ptr noundef %3, i32 noundef %1, i32 noundef %nvec, i1 noundef zeroext true)
  %tobool60.not = icmp eq ptr %call59, null
  br i1 %tobool60.not, label %if.end58.out_crit_edge, label %if.end62

if.end58.out_crit_edge:                           ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end62:                                         ; preds = %if.end58
  %flags = getelementptr inbounds %struct.msi_alloc_info, ptr %info, i32 0, i32 2
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %and = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool63.not = icmp eq i32 %and, 0
  br i1 %tobool63.not, label %if.end62.do.body67_crit_edge, label %if.then64

if.end62.do.body67_crit_edge:                     ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body67

if.then64:                                        ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #17
  %shared65 = getelementptr inbounds %struct.its_device, ptr %call59, i32 0, i32 6
  %18 = ptrtoint ptr %shared65 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %shared65, align 4
  br label %do.body67

do.body67:                                        ; preds = %if.then64, %if.end62.do.body67_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_msi_prepare.__UNIQUE_ID_ddebug428, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_msi_prepare, %cond.end84)) #15
          to label %out [label %cond.end84], !srcloc !366

cond.end84:                                       ; preds = %do.body67
  call void @__sanitizer_cov_trace_pc() #17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nvec)
  %tobool.not.i.i = icmp eq i32 %nvec, 0
  %19 = tail call i32 @llvm.ctlz.i32(i32 %nvec, i1 true) #15, !range !368
  %sub.i.op.i = xor i32 %19, 31
  %sub.i = select i1 %tobool.not.i.i, i32 -1, i32 %sub.i.op.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_msi_prepare.__UNIQUE_ID_ddebug428, ptr noundef nonnull @.str.110, i32 noundef %nvec, i32 noundef %sub.i) #15
  br label %out

out:                                              ; preds = %cond.end84, %do.body67, %if.end58.out_crit_edge, %if.then54, %if.then43
  %err.0 = phi i32 [ 0, %if.then54 ], [ 0, %cond.end84 ], [ -12, %if.end58.out_crit_edge ], [ 0, %if.then43 ], [ 0, %do.body67 ]
  %its_dev.0 = phi ptr [ %tmp.0.i, %if.then54 ], [ %call59, %cond.end84 ], [ null, %if.end58.out_crit_edge ], [ %tmp.0.i, %if.then43 ], [ %call59, %do.body67 ]
  tail call void @mutex_unlock(ptr noundef %dev_alloc_lock) #15
  %20 = ptrtoint ptr %scratchpad to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %its_dev.0, ptr %scratchpad, align 4
  br label %cleanup

cleanup:                                          ; preds = %out, %if.then11, %land.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %out ], [ -22, %if.then11 ], [ -22, %land.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @msi_get_domain_info(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @its_create_device(ptr noundef %its, i32 noundef %dev_id, i32 noundef %nvecs, i1 noundef zeroext %alloc_lpis) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  %lpi_base = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lpi_base) #15
  %0 = ptrtoint ptr %lpi_base to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %lpi_base, align 4, !annotation !371
  %val.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 0, i32 1
  %1 = ptrtoint ptr %val.i.i to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %val.i.i, align 8
  %3 = and i64 %2, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %3)
  %cmp1.i.i = icmp eq i64 %3, 72057594037927936
  br i1 %cmp1.i.i, label %entry.its_get_baser.exit.i_crit_edge, label %for.inc.i.i

entry.its_get_baser.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.i.i:                                      ; preds = %entry
  %val.1.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 1, i32 1
  %4 = ptrtoint ptr %val.1.i.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %val.1.i.i, align 8
  %6 = and i64 %5, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %6)
  %cmp1.1.i.i = icmp eq i64 %6, 72057594037927936
  br i1 %cmp1.1.i.i, label %for.inc.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.1.i.i

for.inc.i.i.its_get_baser.exit.i_crit_edge:       ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.1.i.i:                                    ; preds = %for.inc.i.i
  %val.2.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 2, i32 1
  %7 = ptrtoint ptr %val.2.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %val.2.i.i, align 8
  %9 = and i64 %8, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %9)
  %cmp1.2.i.i = icmp eq i64 %9, 72057594037927936
  br i1 %cmp1.2.i.i, label %for.inc.1.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.2.i.i

for.inc.1.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.1.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.2.i.i:                                    ; preds = %for.inc.1.i.i
  %val.3.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 3, i32 1
  %10 = ptrtoint ptr %val.3.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %val.3.i.i, align 8
  %12 = and i64 %11, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %12)
  %cmp1.3.i.i = icmp eq i64 %12, 72057594037927936
  br i1 %cmp1.3.i.i, label %for.inc.2.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.3.i.i

for.inc.2.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.3.i.i:                                    ; preds = %for.inc.2.i.i
  %val.4.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 4, i32 1
  %13 = ptrtoint ptr %val.4.i.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %val.4.i.i, align 8
  %15 = and i64 %14, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %15)
  %cmp1.4.i.i = icmp eq i64 %15, 72057594037927936
  br i1 %cmp1.4.i.i, label %for.inc.3.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.4.i.i

for.inc.3.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.3.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.4.i.i:                                    ; preds = %for.inc.3.i.i
  %val.5.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 5, i32 1
  %16 = ptrtoint ptr %val.5.i.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %val.5.i.i, align 8
  %18 = and i64 %17, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %18)
  %cmp1.5.i.i = icmp eq i64 %18, 72057594037927936
  br i1 %cmp1.5.i.i, label %for.inc.4.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.5.i.i

for.inc.4.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.5.i.i:                                    ; preds = %for.inc.4.i.i
  %val.6.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 6, i32 1
  %19 = ptrtoint ptr %val.6.i.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %val.6.i.i, align 8
  %21 = and i64 %20, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %21)
  %cmp1.6.i.i = icmp eq i64 %21, 72057594037927936
  br i1 %cmp1.6.i.i, label %for.inc.5.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.6.i.i

for.inc.5.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

for.inc.6.i.i:                                    ; preds = %for.inc.5.i.i
  %val.7.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 7, i32 1
  %22 = ptrtoint ptr %val.7.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %val.7.i.i, align 8
  %24 = and i64 %23, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 72057594037927936, i64 %24)
  %cmp1.7.i.i = icmp eq i64 %24, 72057594037927936
  br i1 %cmp1.7.i.i, label %for.inc.6.i.i.its_get_baser.exit.i_crit_edge, label %for.inc.6.i.i.its_alloc_device_table.exit_crit_edge

for.inc.6.i.i.its_alloc_device_table.exit_crit_edge: ; preds = %for.inc.6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_alloc_device_table.exit

for.inc.6.i.i.its_get_baser.exit.i_crit_edge:     ; preds = %for.inc.6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i

its_get_baser.exit.i:                             ; preds = %for.inc.6.i.i.its_get_baser.exit.i_crit_edge, %for.inc.5.i.i.its_get_baser.exit.i_crit_edge, %for.inc.4.i.i.its_get_baser.exit.i_crit_edge, %for.inc.3.i.i.its_get_baser.exit.i_crit_edge, %for.inc.2.i.i.its_get_baser.exit.i_crit_edge, %for.inc.1.i.i.its_get_baser.exit.i_crit_edge, %for.inc.i.i.its_get_baser.exit.i_crit_edge, %entry.its_get_baser.exit.i_crit_edge
  %i.010.lcssa.i.i = phi i32 [ 0, %entry.its_get_baser.exit.i_crit_edge ], [ 1, %for.inc.i.i.its_get_baser.exit.i_crit_edge ], [ 2, %for.inc.1.i.i.its_get_baser.exit.i_crit_edge ], [ 3, %for.inc.2.i.i.its_get_baser.exit.i_crit_edge ], [ 4, %for.inc.3.i.i.its_get_baser.exit.i_crit_edge ], [ 5, %for.inc.4.i.i.its_get_baser.exit.i_crit_edge ], [ 6, %for.inc.5.i.i.its_get_baser.exit.i_crit_edge ], [ 7, %for.inc.6.i.i.its_get_baser.exit.i_crit_edge ]
  %arrayidx.i.i = getelementptr %struct.its_node, ptr %its, i32 0, i32 8, i32 %i.010.lcssa.i.i
  %tobool.not.i = icmp eq ptr %arrayidx.i.i, null
  br i1 %tobool.not.i, label %its_get_baser.exit.i.its_alloc_device_table.exit_crit_edge, label %if.end.i

its_get_baser.exit.i.its_alloc_device_table.exit_crit_edge: ; preds = %its_get_baser.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_alloc_device_table.exit

if.end.i:                                         ; preds = %its_get_baser.exit.i
  %call21.i = tail call fastcc zeroext i1 @its_alloc_table_entry(ptr noundef %its, ptr noundef nonnull %arrayidx.i.i, i32 noundef %dev_id) #15
  br i1 %call21.i, label %if.end.i.if.end_crit_edge, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

its_alloc_device_table.exit:                      ; preds = %its_get_baser.exit.i.its_alloc_device_table.exit_crit_edge, %for.inc.6.i.i.its_alloc_device_table.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dev_id)
  %tobool.not.i.i.i = icmp eq i32 %dev_id, 0
  %25 = tail call i32 @llvm.ctlz.i32(i32 %dev_id, i1 true) #15, !range !368
  %sub.i.op.i.i = xor i32 %25, 31
  %sub.i.i = select i1 %tobool.not.i.i.i, i32 -1, i32 %sub.i.op.i.i
  %conv6.i = sext i32 %sub.i.i to i64
  %typer.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %26 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %typer.i, align 8
  %and.i = lshr i64 %27, 13
  %shr.i = and i64 %and.i, 31
  call void @__sanitizer_cov_trace_cmp8(i64 %shr.i, i64 %conv6.i)
  %cmp19.i.not = icmp ult i64 %shr.i, %conv6.i
  br i1 %cmp19.i.not, label %its_alloc_device_table.exit.cleanup_crit_edge, label %its_alloc_device_table.exit.if.end_crit_edge

its_alloc_device_table.exit.if.end_crit_edge:     ; preds = %its_alloc_device_table.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

its_alloc_device_table.exit.cleanup_crit_edge:    ; preds = %its_alloc_device_table.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %its_alloc_device_table.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge
  %28 = tail call i32 @llvm.ctpop.i32(i32 %nvecs) #15, !range !368
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %if.end.if.end44_crit_edge, label %do.end, !prof !395

if.end.if.end44_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end44

do.end:                                           ; preds = %if.end
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3367, i32 noundef 9, ptr noundef null) #15
  %sub.i193 = add i32 %nvecs, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i193)
  %tobool.not.i.i.i194 = icmp eq i32 %sub.i193, 0
  %30 = tail call i32 @llvm.ctlz.i32(i32 %sub.i193, i1 true) #15, !range !368
  %sub.i.i.i = sub nuw nsw i32 32, %30
  %sub.i.i.op.i = shl nuw i32 1, %sub.i.i.i
  br i1 %tobool.not.i.i.i194, label %if.end44.thread, label %do.end.if.end44_crit_edge

do.end.if.end44_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end44

if.end44.thread:                                  ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %31 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i241 = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %31, i32 noundef 3520, i32 noundef 100) #22
  br label %33

if.end44:                                         ; preds = %do.end.if.end44_crit_edge, %if.end.if.end44_crit_edge
  %nvecs.addr.0 = phi i32 [ %sub.i.i.op.i, %do.end.if.end44_crit_edge ], [ %nvecs, %if.end.if.end44_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %32 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %32, i32 noundef 3520, i32 noundef 100) #22
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nvecs.addr.0)
  %cmp47 = icmp slt i32 %nvecs.addr.0, 2
  br i1 %cmp47, label %if.end44._crit_edge, label %if.end44.if.end5.i.i_crit_edge

if.end44.if.end5.i.i_crit_edge:                   ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i.i

if.end44._crit_edge:                              ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #17
  br label %33

33:                                               ; preds = %if.end44._crit_edge, %if.end44.thread
  %call7.i.i246 = phi ptr [ %call7.i.i241, %if.end44.thread ], [ %call7.i.i, %if.end44._crit_edge ]
  %nvecs.addr.0244 = phi i32 [ 1, %if.end44.thread ], [ %nvecs.addr.0, %if.end44._crit_edge ]
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %33, %if.end44.if.end5.i.i_crit_edge
  %call7.i.i245 = phi ptr [ %call7.i.i246, %33 ], [ %call7.i.i, %if.end44.if.end5.i.i_crit_edge ]
  %nvecs.addr.0243 = phi i32 [ %nvecs.addr.0244, %33 ], [ %nvecs.addr.0, %if.end44.if.end5.i.i_crit_edge ]
  %34 = phi i32 [ 2, %33 ], [ %nvecs.addr.0, %if.end44.if.end5.i.i_crit_edge ]
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %35 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %typer, align 8
  %37 = trunc i64 %36 to i32
  %38 = lshr i32 %37, 4
  %39 = and i32 %38, 15
  %40 = add nuw nsw i32 %39, 1
  %conv71 = mul i32 %40, %34
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %conv71)
  %cmp73 = icmp sgt i32 %conv71, 256
  %phi.bo190 = add i32 %conv71, 255
  %cond78 = select i1 %cmp73, i32 %phi.bo190, i32 511
  %call.i2.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %cond78, i32 noundef 3520) #20
  br i1 %alloc_lpis, label %if.end5.i.i.do.body.i_crit_edge, label %if.end7.i.i235

if.end5.i.i.do.body.i_crit_edge:                  ; preds = %if.end5.i.i
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i198.do.body.i_crit_edge, %if.end5.i.i.do.body.i_crit_edge
  %nr_irqs.addr.0.i = phi i32 [ %div.i, %if.end.i198.do.body.i_crit_edge ], [ %nvecs.addr.0243, %if.end5.i.i.do.body.i_crit_edge ]
  %call.i = call fastcc i32 @alloc_lpi_range(i32 noundef %nr_irqs.addr.0.i, ptr noundef nonnull %lpi_base) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i196 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i196, label %do.end.i, label %if.end.i198

if.end.i198:                                      ; preds = %do.body.i
  %div.i = sdiv i32 %nr_irqs.addr.0.i, 2
  %cmp.i197 = icmp sgt i32 %nr_irqs.addr.0.i, 1
  br i1 %cmp.i197, label %if.end.i198.do.body.i_crit_edge, label %if.end.i198.its_lpi_alloc.exit.thread_crit_edge

if.end.i198.its_lpi_alloc.exit.thread_crit_edge:  ; preds = %if.end.i198
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

if.end.i198.do.body.i_crit_edge:                  ; preds = %if.end.i198
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs.addr.0.i)
  %tobool1.not.i.not = icmp eq i32 %nr_irqs.addr.0.i, 0
  br i1 %tobool1.not.i.not, label %do.end.i.its_lpi_alloc.exit.thread_crit_edge, label %if.end6.i

do.end.i.its_lpi_alloc.exit.thread_crit_edge:     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

if.end6.i:                                        ; preds = %do.end.i
  %call7.i = tail call ptr @bitmap_zalloc(i32 noundef %nr_irqs.addr.0.i, i32 noundef 2592) #15
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %if.end6.i.its_lpi_alloc.exit.thread_crit_edge, label %if.then86

if.end6.i.its_lpi_alloc.exit.thread_crit_edge:    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

its_lpi_alloc.exit.thread:                        ; preds = %if.end6.i.its_lpi_alloc.exit.thread_crit_edge, %do.end.i.its_lpi_alloc.exit.thread_crit_edge, %if.end.i198.its_lpi_alloc.exit.thread_crit_edge
  %41 = ptrtoint ptr %lpi_base to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %lpi_base, align 4
  br label %if.then99

if.then86:                                        ; preds = %if.end6.i
  %42 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %nr_irqs.addr.0.i, i32 2) #15
  %43 = extractvalue { i32, i1 } %42, 1
  br i1 %43, label %if.then86.if.then99_crit_edge, label %if.end7.i.i, !prof !369

if.then86.if.then99_crit_edge:                    ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then99

if.end7.i.i:                                      ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #17
  %44 = extractvalue { i32, i1 } %42, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %44, i32 noundef 3520) #20
  br label %if.end90

if.end7.i.i235:                                   ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %45 = shl nuw i32 %34, 1
  %call8.i.i234 = tail call noalias align 128 ptr @__kmalloc(i32 noundef %45, i32 noundef 3520) #20
  %46 = ptrtoint ptr %lpi_base to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %lpi_base, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.end7.i.i235, %if.end7.i.i
  %nr_lpis.1 = phi i32 [ 0, %if.end7.i.i235 ], [ %nr_irqs.addr.0.i, %if.end7.i.i ]
  %col_map.0 = phi ptr [ %call8.i.i234, %if.end7.i.i235 ], [ %call8.i.i, %if.end7.i.i ]
  %lpi_map.0 = phi ptr [ null, %if.end7.i.i235 ], [ %call7.i, %if.end7.i.i ]
  %tobool91.not = icmp eq ptr %call7.i.i245, null
  %tobool92.not = icmp eq ptr %call.i2.i.i, null
  %or.cond = select i1 %tobool91.not, i1 true, i1 %tobool92.not
  %tobool94.not = icmp eq ptr %col_map.0, null
  %or.cond191 = select i1 %or.cond, i1 true, i1 %tobool94.not
  %tobool96.not = icmp eq ptr %lpi_map.0, null
  %47 = and i1 %tobool96.not, %alloc_lpis
  %or.cond265 = select i1 %or.cond191, i1 true, i1 %47
  br i1 %or.cond265, label %if.end90.if.then99_crit_edge, label %if.end100

if.end90.if.then99_crit_edge:                     ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then99

if.then99:                                        ; preds = %if.end90.if.then99_crit_edge, %if.then86.if.then99_crit_edge, %its_lpi_alloc.exit.thread
  %lpi_map.0262 = phi ptr [ %lpi_map.0, %if.end90.if.then99_crit_edge ], [ %call7.i, %if.then86.if.then99_crit_edge ], [ null, %its_lpi_alloc.exit.thread ]
  %col_map.0261 = phi ptr [ %col_map.0, %if.end90.if.then99_crit_edge ], [ null, %if.then86.if.then99_crit_edge ], [ null, %its_lpi_alloc.exit.thread ]
  tail call void @kfree(ptr noundef %call7.i.i245) #15
  tail call void @kfree(ptr noundef %call.i2.i.i) #15
  tail call void @bitmap_free(ptr noundef %lpi_map.0262) #15
  tail call void @kfree(ptr noundef %col_map.0261) #15
  br label %cleanup

if.end100:                                        ; preds = %if.end90
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %48 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %48(ptr noundef nonnull %call.i2.i.i, i32 noundef %cond78) #15
  %its101 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 1
  %49 = ptrtoint ptr %its101 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %its, ptr %its101, align 4
  %itt102 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 3
  %50 = ptrtoint ptr %itt102 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %call.i2.i.i, ptr %itt102, align 4
  %nr_ites103 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 4
  %51 = ptrtoint ptr %nr_ites103 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %34, ptr %nr_ites103, align 4
  %event_map = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 2
  %52 = ptrtoint ptr %event_map to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %lpi_map.0, ptr %event_map, align 4
  %col_map106 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 2, i32 1
  %53 = ptrtoint ptr %col_map106 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %col_map.0, ptr %col_map106, align 4
  %54 = ptrtoint ptr %lpi_base to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %lpi_base, align 4
  %lpi_base108 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 2, i32 2
  %56 = ptrtoint ptr %lpi_base108 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %lpi_base108, align 4
  %nr_lpis110 = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 2, i32 3
  %57 = ptrtoint ptr %nr_lpis110 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %nr_lpis.1, ptr %nr_lpis110, align 4
  %vlpi_lock = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 2, i32 4
  tail call void @__raw_spin_lock_init(ptr noundef %vlpi_lock, ptr noundef nonnull @.str.111, ptr noundef nonnull @its_create_device.__key, i16 noundef signext 2) #15
  %device_id = getelementptr inbounds %struct.its_device, ptr %call7.i.i245, i32 0, i32 5
  %58 = ptrtoint ptr %device_id to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %dev_id, ptr %device_id, align 4
  %59 = ptrtoint ptr %call7.i.i245 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %call7.i.i245, ptr %call7.i.i245, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call7.i.i245, i32 0, i32 1
  %60 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %call7.i.i245, ptr %prev.i, align 4
  %call120 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %its) #15
  %its_device_list = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 16
  %61 = ptrtoint ptr %its_device_list to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %its_device_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %call7.i.i245, ptr noundef %its_device_list, ptr noundef %62) #15
  br i1 %call.i.i, label %if.end.i.i238, label %if.end100.list_add.exit_crit_edge

if.end100.list_add.exit_crit_edge:                ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add.exit

if.end.i.i238:                                    ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call7.i.i245, ptr %prev1.i.i, align 4
  %64 = ptrtoint ptr %call7.i.i245 to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %62, ptr %call7.i.i245, align 4
  %65 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %its_device_list, ptr %prev.i, align 4
  %66 = ptrtoint ptr %its_device_list to i32
  call void @__asan_store4_noabort(i32 %66)
  store volatile ptr %call7.i.i245, ptr %its_device_list, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i238, %if.end100.list_add.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %its, i32 noundef %call120) #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %67 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %68 = call ptr @memset(ptr %67, i32 255, i32 12)
  %69 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %call7.i.i245, ptr %desc.i, align 4
  %valid3.i = getelementptr inbounds %struct.anon.91, ptr %desc.i, i32 0, i32 1
  %70 = ptrtoint ptr %valid3.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 1, ptr %valid3.i, align 4
  %71 = ptrtoint ptr %its101 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %its101, align 4
  call fastcc void @its_send_single_command(ptr noundef %72, ptr noundef nonnull @its_build_mapd_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %cleanup

cleanup:                                          ; preds = %list_add.exit, %if.then99, %its_alloc_device_table.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i245, %list_add.exit ], [ null, %if.then99 ], [ null, %its_alloc_device_table.exit.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lpi_base) #15
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @its_alloc_table_entry(ptr nocapture noundef readonly %its, ptr nocapture noundef readonly %baser, i32 noundef %id) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %val = getelementptr inbounds %struct.its_baser, ptr %baser, i32 0, i32 1
  %0 = ptrtoint ptr %val to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %val, align 8
  %shr = lshr i64 %1, 48
  %2 = trunc i64 %shr to i32
  %3 = and i32 %2, 31
  %conv = add nuw nsw i32 %3, 1
  %and2 = and i64 %1, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2)
  %tobool.not = icmp eq i64 %and2, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %order = getelementptr inbounds %struct.its_baser, ptr %baser, i32 0, i32 2
  %4 = ptrtoint ptr %order to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %order, align 8
  %shl = shl i32 4096, %5
  %div = udiv i32 %shl, %conv
  call void @__sanitizer_cov_trace_cmp4(i32 %div, i32 %id)
  %cmp = icmp ugt i32 %div, %id
  br label %cleanup

if.end:                                           ; preds = %entry
  %psz = getelementptr inbounds %struct.its_baser, ptr %baser, i32 0, i32 3
  %6 = ptrtoint ptr %psz to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %psz, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %7)
  %tobool.not.i.i79.not = icmp ult i32 %3, %7
  %div4 = udiv i32 %7, %conv
  %8 = tail call i32 @llvm.ctlz.i32(i32 %div4, i1 true) #15, !range !368
  %sub.i.op.i = xor i32 %8, 31
  %sub.i80 = select i1 %tobool.not.i.i79.not, i32 %sub.i.op.i, i32 -1
  %shr18 = lshr i32 %id, %sub.i80
  %order19 = getelementptr inbounds %struct.its_baser, ptr %baser, i32 0, i32 2
  %9 = ptrtoint ptr %order19 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %order19, align 8
  %shl20 = shl i32 4096, %10
  %div2178 = lshr exact i32 %shl20, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %shr18, i32 %div2178)
  %cmp22.not = icmp ult i32 %shr18, %div2178
  br i1 %cmp22.not, label %if.end25, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end25:                                         ; preds = %if.end
  %11 = ptrtoint ptr %baser to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %baser, align 8
  %arrayidx = getelementptr i64, ptr %12, i32 %shr18
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %14)
  %tobool26.not = icmp eq i64 %14, 0
  br i1 %tobool26.not, label %if.then27, label %if.end25.cleanup_crit_edge

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then27:                                        ; preds = %if.end25
  %numa_node = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 19
  %15 = ptrtoint ptr %numa_node to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %numa_node, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.152)
  switch i32 %16, label %do.body3.i.i [
    i32 -1, label %if.then27.alloc_pages_node.exit_crit_edge
    i32 0, label %if.then27.alloc_pages_node.exit_crit_edge81
  ], !prof !380

if.then27.alloc_pages_node.exit_crit_edge81:      ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #17
  br label %alloc_pages_node.exit

if.then27.alloc_pages_node.exit_crit_edge:        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #17
  br label %alloc_pages_node.exit

do.body3.i.i:                                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/gfp.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 569, 0\0A.popsection", ""() #15, !srcloc !381
  unreachable

alloc_pages_node.exit:                            ; preds = %if.then27.alloc_pages_node.exit_crit_edge, %if.then27.alloc_pages_node.exit_crit_edge81
  %dec.i = add i32 %7, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %dec.i)
  %tobool.not.i.i = icmp ult i32 %dec.i, 4096
  %shr.i = lshr i32 %dec.i, 12
  %18 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #15, !range !368
  %sub.i.i = sub nuw nsw i32 32, %18
  %cond.i.i = select i1 %tobool.not.i.i, i32 0, i32 %sub.i.i
  %call38.i.i = tail call ptr @__alloc_pages(i32 noundef 3520, i32 noundef %cond.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool31.not = icmp eq ptr %call38.i.i, null
  br i1 %tobool31.not, label %alloc_pages_node.exit.cleanup_crit_edge, label %if.end33

alloc_pages_node.exit.cleanup_crit_edge:          ; preds = %alloc_pages_node.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end33:                                         ; preds = %alloc_pages_node.exit
  %19 = ptrtoint ptr %val to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %val, align 8
  %and35 = and i64 %20, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and35)
  %tobool36.not = icmp eq i64 %and35, 0
  br i1 %tobool36.not, label %if.then37, label %if.end33.if.end40_crit_edge

if.end33.if.end40_crit_edge:                      ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end40

if.then37:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %21 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  %call38 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i) #15
  %22 = ptrtoint ptr %psz to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %psz, align 4
  tail call void %21(ptr noundef %call38, i32 noundef %23) #15
  br label %if.end40

if.end40:                                         ; preds = %if.then37, %if.end33.if.end40_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %24 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %call38.i.i to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %24 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %25 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add41 = add i32 %sub.ptr.div, %25
  %shl42 = shl i32 %add41, 12
  %conv43 = zext i32 %shl42 to i64
  %or = or i64 %conv43, -9223372036854775808
  %26 = tail call i64 @llvm.bswap.i64(i64 %or)
  %27 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx, align 8
  %28 = ptrtoint ptr %val to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %val, align 8
  %and46 = and i64 %29, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and46)
  %tobool47.not = icmp eq i64 %and46, 0
  br i1 %tobool47.not, label %if.then48, label %if.end40.if.end49_crit_edge

if.end40.if.end49_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end49

if.then48:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %30 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %30(ptr noundef %arrayidx, i32 noundef 8) #15
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end40.if.end49_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !396
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %alloc_pages_node.exit.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i1 [ %cmp, %if.then ], [ false, %if.end.cleanup_crit_edge ], [ false, %alloc_pages_node.exit.cleanup_crit_edge ], [ true, %if.end49 ], [ true, %if.end25.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alloc_lpi_range(i32 noundef %nr_lpis, ptr nocapture noundef %base) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @lpi_range_lock, i32 noundef 0) #15
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %range.0.in = phi ptr [ @lpi_range_list, %entry ], [ %range.0, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %range.0.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %range.0 = load ptr, ptr %range.0.in, align 4
  %cmp.not = icmp eq ptr %range.0, @lpi_range_list
  br i1 %cmp.not, label %for.cond.for.end_crit_edge, label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %for.cond
  %span = getelementptr inbounds %struct.lpi_range, ptr %range.0, i32 0, i32 2
  %1 = ptrtoint ptr %span to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %span, align 4
  %cmp7.not = icmp ult i32 %2, %nr_lpis
  br i1 %cmp7.not, label %for.body.for.cond_crit_edge, label %if.then

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond

if.then:                                          ; preds = %for.body
  %span.le = getelementptr inbounds %struct.lpi_range, ptr %range.0, i32 0, i32 2
  %base_id = getelementptr inbounds %struct.lpi_range, ptr %range.0, i32 0, i32 1
  %3 = ptrtoint ptr %base_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %base_id, align 4
  %5 = ptrtoint ptr %base to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %base, align 4
  %6 = load i32, ptr %base_id, align 4
  %add = add i32 %6, %nr_lpis
  store i32 %add, ptr %base_id, align 4
  %7 = ptrtoint ptr %span.le to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %span.le, align 4
  %sub = sub i32 %8, %nr_lpis
  store i32 %sub, ptr %span.le, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %nr_lpis)
  %cmp11 = icmp eq i32 %8, %nr_lpis
  br i1 %cmp11, label %if.then12, label %if.then.for.end_crit_edge

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

if.then12:                                        ; preds = %if.then
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %range.0) #15
  br i1 %call.i.i, label %if.end.i.i, label %if.then12.list_del.exit_crit_edge

if.then12.list_del.exit_crit_edge:                ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %range.0, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %range.0 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %range.0, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then12.list_del.exit_crit_edge
  %15 = ptrtoint ptr %range.0 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 256 to ptr), ptr %range.0, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %range.0, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @kfree(ptr noundef %range.0) #15
  br label %for.end

for.end:                                          ; preds = %list_del.exit, %if.then.for.end_crit_edge, %for.cond.for.end_crit_edge
  %err.0 = phi i32 [ 0, %list_del.exit ], [ 0, %if.then.for.end_crit_edge ], [ -28, %for.cond.for.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @lpi_range_lock) #15
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @alloc_lpi_range.__UNIQUE_ID_ddebug249, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@alloc_lpi_range, %if.then24)) #15
          to label %do.end [label %if.then24], !srcloc !366

if.then24:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %base, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @alloc_lpi_range.__UNIQUE_ID_ddebug249, ptr noundef nonnull @.str.113, i32 noundef %18, i32 noundef %nr_lpis) #15
  br label %do.end

do.end:                                           ; preds = %if.then24, %for.end
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bitmap_zalloc(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_setup_lpi_prop_table() unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %flags = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %flags, align 8
  %and = and i64 %2, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %3 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %0, align 8
  %5 = ptrtoint ptr %4 to i32
  %6 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %9
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, %5
  %12 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rd_base, align 4
  %add.ptr = getelementptr i8, ptr %14, i32 112
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %14, i32 116
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %17 = call i32 @llvm.bswap.i32(i32 %15)
  %18 = and i32 %17, 31
  %conv = add nuw nsw i32 %18, 1
  store i32 %conv, ptr @lpi_id_bits, align 4
  %conv6 = and i32 %17, -4096
  %19 = load ptr, ptr @gic_rdists, align 4
  %prop_table_pa = getelementptr inbounds %struct.rdists, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prop_table_pa to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv6, ptr %prop_table_pa, align 4
  %shl = shl i32 2, %18
  %add8 = add i32 %shl, 65535
  %and9 = and i32 %add8, -65536
  %call10 = tail call ptr @memremap(i32 noundef %conv6, i32 noundef %and9, i32 noundef 1) #15
  %21 = load ptr, ptr @gic_rdists, align 4
  %prop_table_va = getelementptr inbounds %struct.rdists, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %prop_table_va to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call10, ptr %prop_table_va, align 8
  %23 = load i32, ptr @lpi_id_bits, align 4
  %shl.i = shl nuw i32 1, %23
  %add.i = add nuw i32 %shl.i, 65535
  %and.i74 = and i32 %add.i, -65536
  %24 = call ptr @memset(ptr %call10, i32 162, i32 %and.i74)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %25 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %25(ptr noundef %call10, i32 noundef %and.i74) #15
  br label %do.end63

if.else:                                          ; preds = %entry
  %gicd_typer = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 4
  %26 = ptrtoint ptr %gicd_typer to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %gicd_typer, align 8
  %shr = lshr i32 %27, 19
  %and12 = and i32 %shr, 31
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %and12)
  %cmp = icmp ult i32 %and12, 15
  %add13 = add nuw nsw i32 %and12, 1
  %cond = select i1 %cmp, i32 %add13, i32 16
  store i32 %cond, ptr @lpi_id_bits, align 4
  %call16 = tail call fastcc ptr @its_allocate_prop_table(i32 noundef 2048)
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %cleanup, label %cleanup.thread

cleanup.thread:                                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %28 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %call16 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %28 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i32 %sub.ptr.sub, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %29 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add24 = add i32 %sub.ptr.div, %29
  %shl25 = shl i32 %add24, 12
  %30 = load ptr, ptr @gic_rdists, align 4
  %prop_table_pa26 = getelementptr inbounds %struct.rdists, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %prop_table_pa26 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %shl25, ptr %prop_table_pa26, align 4
  %call27 = tail call ptr @page_address(ptr noundef nonnull %call16) #15
  %32 = load ptr, ptr @gic_rdists, align 4
  %prop_table_va28 = getelementptr inbounds %struct.rdists, ptr %32, i32 0, i32 2
  %33 = ptrtoint ptr %prop_table_va28 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call27, ptr %prop_table_va28, align 8
  br label %do.end63

cleanup:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %call23 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.119) #18
  br label %return

do.end63:                                         ; preds = %cleanup.thread, %if.then
  %34 = load ptr, ptr @gic_rdists, align 4
  %prop_table_pa65 = getelementptr inbounds %struct.rdists, ptr %34, i32 0, i32 1
  %call66 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.122, ptr noundef %prop_table_pa65) #18
  %35 = load i32, ptr @lpi_id_bits, align 4
  %call67 = tail call fastcc i32 @its_lpi_init(i32 noundef %35) #19
  br label %return

return:                                           ; preds = %do.end63, %cleanup
  %retval.1 = phi i32 [ %call67, %do.end63 ], [ -12, %cleanup ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @its_allocate_pending_table(i32 noundef %gfp_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %or = or i32 %gfp_flags, 256
  %0 = load i32, ptr @lpi_id_bits, align 4
  %shl = shl nuw i32 1, %0
  %div9 = lshr i32 %shl, 3
  %add = add nuw nsw i32 %div9, 65535
  %and = and i32 %add, 1073676288
  %dec.i = add nsw i32 %and, -1
  %shr.i = lshr i32 %dec.i, 12
  %1 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #15, !range !368
  %sub.i.i = sub nuw nsw i32 32, %1
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %or, i32 noundef %sub.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  %call2 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #15
  %3 = load i32, ptr @lpi_id_bits, align 4
  %shl3 = shl nuw i32 1, %3
  %div410 = lshr i32 %shl3, 3
  %add5 = add nuw nsw i32 %div410, 65535
  %and6 = and i32 %add5, 1073676288
  tail call void %2(ptr noundef %call2, i32 noundef %and6) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret ptr %call38.i.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memremap(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @its_allocate_prop_table(i32 noundef %gfp_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr @lpi_id_bits, align 4
  %shl = shl nuw i32 1, %0
  %add = add nuw i32 %shl, 65535
  %and = and i32 %add, -65536
  %dec.i = add i32 %and, -1
  %shr.i = lshr i32 %dec.i, 12
  %1 = tail call i32 @llvm.ctlz.i32(i32 %shr.i, i1 true) #15, !range !368
  %sub.i.i = sub nuw nsw i32 32, %1
  %call38.i.i.i = tail call ptr @__alloc_pages(i32 noundef %gfp_flags, i32 noundef %sub.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool.not = icmp eq ptr %call38.i.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call2 = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i) #15
  %2 = load i32, ptr @lpi_id_bits, align 4
  %shl.i = shl nuw i32 1, %2
  %add.i5 = add nuw i32 %shl.i, 65535
  %and.i = and i32 %add.i5, -65536
  %3 = call ptr @memset(ptr %call2, i32 162, i32 %and.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %4 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %4(ptr noundef %call2, i32 noundef %and.i) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret ptr %call38.i.i.i
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @its_lpi_init(i32 noundef %id_bits) unnamed_addr #3 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %shl = shl nuw i32 1, %id_bits
  %sub = add i32 %shl, -8192
  %0 = load ptr, ptr @gic_rdists, align 4
  %gicd_typer = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 4
  %1 = ptrtoint ptr %gicd_typer to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %gicd_typer, align 8
  %shr = lshr i32 %2, 11
  %and = and i32 %shr, 31
  %shl1 = shl i32 2, %and
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %shl1)
  %cmp = icmp ugt i32 %shl1, 2
  br i1 %cmp, label %land.lhs.true, label %entry.if.end27_crit_edge

entry.if.end27_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

land.lhs.true:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %shl1, i32 %sub)
  %cmp2 = icmp ugt i32 %shl1, %sub
  br i1 %cmp2, label %do.end, label %if.then22.critedge, !prof !369

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2113, i32 noundef 9, ptr noundef null) #15
  br label %if.end27

if.then22.critedge:                               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, i32 noundef %shl1) #18
  br label %if.end27

if.end27:                                         ; preds = %if.then22.critedge, %do.end, %entry.if.end27_crit_edge
  %lpis.0 = phi i32 [ %shl1, %if.then22.critedge ], [ %sub, %entry.if.end27_crit_edge ], [ %sub, %do.end ]
  %call28 = tail call fastcc i32 @free_lpi_range(i32 noundef 8192, i32 noundef %lpis.0)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @its_lpi_init.__UNIQUE_ID_ddebug250, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@its_lpi_init, %if.then39)) #15
          to label %do.end42 [label %if.then39], !srcloc !366

if.then39:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @its_lpi_init.__UNIQUE_ID_ddebug250, ptr noundef nonnull @.str.126, i32 noundef %lpis.0) #15
  br label %do.end42

do.end42:                                         ; preds = %if.then39, %if.end27
  ret i32 %call28
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_sgi_irq_domain_alloc(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs, ptr noundef %args) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %nr_irqs)
  %cmp.not = icmp eq i32 %nr_irqs, 16
  br i1 %cmp.not, label %entry.for.body.preheader_crit_edge, label %do.end, !prof !364

entry.for.body.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.preheader

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4322, i32 noundef 9, ptr noundef null) #15
  br label %for.body.preheader

for.body.preheader:                               ; preds = %do.end, %entry.for.body.preheader_crit_edge
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.037 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr %struct.its_vpe, ptr %args, i32 0, i32 7, i32 0, i32 2, i32 %i.037
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %arrayidx, align 1
  %enabled = getelementptr %struct.its_vpe, ptr %args, i32 0, i32 7, i32 0, i32 2, i32 %i.037, i32 1
  %1 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %1)
  store i8 0, ptr %enabled, align 1
  %group = getelementptr %struct.its_vpe, ptr %args, i32 0, i32 7, i32 0, i32 2, i32 %i.037, i32 2
  %2 = ptrtoint ptr %group to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 0, ptr %group, align 1
  %add = add i32 %i.037, %virq
  %call = tail call i32 @irq_domain_set_hwirq_and_chip(ptr noundef %domain, i32 noundef %add, i32 noundef %i.037, ptr noundef nonnull @its_sgi_irq_chip, ptr noundef %args) #15
  tail call void @irq_modify_status(i32 noundef %add, i32 noundef 0, i32 noundef 524288) #15
  %inc = add nuw nsw i32 %i.037, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @its_sgi_irq_domain_free(ptr nocapture noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_sgi_irq_domain_activate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d, i1 noundef zeroext %reserve) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %2 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %3 = call ptr @memset(ptr %2, i32 255, i32 12)
  %4 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %desc.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %5 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %hwirq.i, align 4
  %conv.i = trunc i32 %6 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %7 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %conv.i, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %6
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %10 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %9, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %6, i32 1
  %11 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %13 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %12, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %6, i32 2
  %14 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %16 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %15, ptr %group12.i, align 1
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 0, ptr %2, align 4
  %18 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %19 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %20 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %21, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %22 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %22, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_sgi_irq_domain_deactivate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i4 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq, align 4
  %enabled = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %3, i32 1
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %enabled, align 1
  %5 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %6 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %7 = call ptr @memset(ptr %6, i32 255, i32 12)
  %8 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %desc.i, align 4
  %9 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hwirq, align 4
  %conv.i = trunc i32 %10 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %11 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv.i, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %14 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 1
  %15 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %17 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 2
  %18 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %20 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %group12.i, align 1
  %21 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %6, align 4
  %22 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %23 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %24 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %25, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %26 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %26, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  %27 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i4) #15
  %29 = getelementptr inbounds i8, ptr %desc.i4, i32 8
  %30 = call ptr @memset(ptr %29, i32 255, i32 12)
  %31 = ptrtoint ptr %desc.i4 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %desc.i4, align 4
  %32 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %hwirq, align 4
  %conv.i7 = trunc i32 %33 to i8
  %sgi.i8 = getelementptr inbounds %struct.anon.103, ptr %desc.i4, i32 0, i32 1
  %34 = ptrtoint ptr %sgi.i8 to i32
  call void @__asan_store1_noabort(i32 %34)
  store i8 %conv.i7, ptr %sgi.i8, align 4
  %arrayidx.i9 = getelementptr %struct.its_vpe, ptr %28, i32 0, i32 7, i32 0, i32 2, i32 %33
  %35 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.i9, align 1
  %priority3.i10 = getelementptr inbounds %struct.anon.103, ptr %desc.i4, i32 0, i32 2
  %37 = ptrtoint ptr %priority3.i10 to i32
  call void @__asan_store1_noabort(i32 %37)
  store i8 %36, ptr %priority3.i10, align 1
  %enabled.i11 = getelementptr %struct.its_vpe, ptr %28, i32 0, i32 7, i32 0, i32 2, i32 %33, i32 1
  %38 = ptrtoint ptr %enabled.i11 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %enabled.i11, align 1, !range !365
  %enable.i12 = getelementptr inbounds %struct.anon.103, ptr %desc.i4, i32 0, i32 3
  %40 = ptrtoint ptr %enable.i12 to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 %39, ptr %enable.i12, align 2
  %group.i13 = getelementptr %struct.its_vpe, ptr %28, i32 0, i32 7, i32 0, i32 2, i32 %33, i32 2
  %41 = ptrtoint ptr %group.i13 to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %group.i13, align 1, !range !365
  %group12.i14 = getelementptr inbounds %struct.anon.103, ptr %desc.i4, i32 0, i32 4
  %43 = ptrtoint ptr %group12.i14 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %42, ptr %group12.i14, align 1
  %44 = ptrtoint ptr %29 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 1, ptr %29, align 4
  %45 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i16 = icmp eq ptr %45, null
  br i1 %tobool.not.i.i16, label %its_configure_sgi.exit.for.cond.i.i20_crit_edge, label %its_configure_sgi.exit.if.end8.i.i26_crit_edge

its_configure_sgi.exit.if.end8.i.i26_crit_edge:   ; preds = %its_configure_sgi.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i26

its_configure_sgi.exit.for.cond.i.i20_crit_edge:  ; preds = %its_configure_sgi.exit
  br label %for.cond.i.i20

for.cond.i.i20:                                   ; preds = %for.body.i.i24.for.cond.i.i20_crit_edge, %its_configure_sgi.exit.for.cond.i.i20_crit_edge
  %.pn.in.i.i17 = phi ptr [ %.pn.i.i18, %for.body.i.i24.for.cond.i.i20_crit_edge ], [ @its_nodes, %its_configure_sgi.exit.for.cond.i.i20_crit_edge ]
  %46 = ptrtoint ptr %.pn.in.i.i17 to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn.i.i18 = load ptr, ptr %.pn.in.i.i17, align 4
  %cmp.not.i.i19 = icmp eq ptr %.pn.i.i18, @its_nodes
  br i1 %cmp.not.i.i19, label %for.end.i.i25, label %for.body.i.i24

for.body.i.i24:                                   ; preds = %for.cond.i.i20
  %typer.i.i21 = getelementptr i8, ptr %.pn.i.i18, i32 240
  %47 = ptrtoint ptr %typer.i.i21 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %typer.i.i21, align 8
  %and.i.i22 = and i64 %48, 1099511627776
  %tobool2.not.i.i23 = icmp eq i64 %and.i.i22, 0
  br i1 %tobool2.not.i.i23, label %for.body.i.i24.for.cond.i.i20_crit_edge, label %return.loopexit.i.i28

for.body.i.i24.for.cond.i.i20_crit_edge:          ; preds = %for.body.i.i24
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i20

for.end.i.i25:                                    ; preds = %for.cond.i.i20
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i26

if.end8.i.i26:                                    ; preds = %for.end.i.i25, %its_configure_sgi.exit.if.end8.i.i26_crit_edge
  %49 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit30

return.loopexit.i.i28:                            ; preds = %for.body.i.i24
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i27 = getelementptr i8, ptr %.pn.i.i18, i32 -136
  store ptr %storemerge.le11.i.i27, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit30

its_configure_sgi.exit30:                         ; preds = %return.loopexit.i.i28, %if.end8.i.i26
  %retval.0.i.i29 = phi ptr [ %49, %if.end8.i.i26 ], [ %storemerge.le11.i.i27, %return.loopexit.i.i28 ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i29, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i4) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i4) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_sgi_mask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq, align 4
  %enabled = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %3, i32 1
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %enabled, align 1
  %5 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %6 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %7 = call ptr @memset(ptr %6, i32 255, i32 12)
  %8 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %desc.i, align 4
  %9 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hwirq, align 4
  %conv.i = trunc i32 %10 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %11 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv.i, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %14 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 1
  %15 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %17 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 2
  %18 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %20 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %group12.i, align 1
  %21 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %6, align 4
  %22 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %23 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %24 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %25, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %26 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %26, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_sgi_unmask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq, align 4
  %enabled = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %3, i32 1
  %4 = ptrtoint ptr %enabled to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %enabled, align 1
  %5 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %6 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %7 = call ptr @memset(ptr %6, i32 255, i32 12)
  %8 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %desc.i, align 4
  %9 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %hwirq, align 4
  %conv.i = trunc i32 %10 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %11 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %conv.i, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %14 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %13, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 1
  %15 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %17 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %5, i32 0, i32 7, i32 0, i32 2, i32 %10, i32 2
  %18 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %20 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %19, ptr %group12.i, align 1
  %21 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %6, align 4
  %22 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %22, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %23 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %24 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %25, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %26 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %26, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @its_sgi_set_affinity(ptr nocapture noundef readonly %d, ptr nocapture noundef readonly %mask_val, i1 noundef zeroext %force) #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %0 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %common.i, align 4
  %effective_affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %effective_affinity.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %effective_affinity.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %4, 31
  %5 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %5, 536870908
  %6 = call ptr @memcpy(ptr %3, ptr %mask_val, i32 %mul.i.i.i)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_sgi_get_irqchip_state(ptr nocapture noundef readonly %d, i32 noundef %which, ptr nocapture noundef writeonly %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %which)
  %cmp.not = icmp eq i32 %which, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %vpe_lock.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 8
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %vpe_lock.i) #15
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %col_idx.i, align 4
  %conv1.i = zext i16 %3 to i32
  %4 = load ptr, ptr @gic_rdists, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %7 = ptrtoint ptr %6 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv1.i
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %7
  %10 = inttoptr i32 %add to ptr
  tail call void @_raw_spin_lock(ptr noundef %10) #15
  %11 = load ptr, ptr @gic_rdists, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  %14 = ptrtoint ptr %13 to i32
  %15 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx, align 4
  %add12 = add i32 %16, %14
  %17 = inttoptr i32 %add12 to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rd_base, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vpe_id, align 2
  %conv = zext i16 %21 to i32
  %22 = tail call i32 @llvm.bswap.i32(i32 %conv)
  %add.ptr13 = getelementptr i8, ptr %19, i32 131200
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr13, i32 %22) #15, !srcloc !362
  %add.ptr15 = getelementptr i8, ptr %19, i32 131208
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #15, !srcloc !361
  %24 = tail call i32 @llvm.bswap.i32(i32 %23)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %tobool.not85 = icmp sgt i32 %24, -1
  br i1 %tobool.not85, label %if.end.if.end57.critedge_crit_edge, label %if.end.if.end19_crit_edge

if.end.if.end19_crit_edge:                        ; preds = %if.end
  br label %if.end19

if.end.if.end57.critedge_crit_edge:               ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57.critedge

if.end19:                                         ; preds = %do.end36.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %count.086 = phi i32 [ %dec, %do.end36.if.end19_crit_edge ], [ 1000000, %if.end.if.end19_crit_edge ]
  %dec = add nsw i32 %count.086, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool20.not = icmp eq i32 %dec, 0
  br i1 %tobool20.not, label %if.then21, label %do.end36

if.then21:                                        ; preds = %if.end19
  %call22 = tail call i32 @___ratelimit(ptr noundef nonnull @its_sgi_get_irqchip_state._rs, ptr noundef nonnull @__func__.its_sgi_get_irqchip_state) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.then56.critedge77, label %do.end27

do.end27:                                         ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #17
  %call29 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.128) #18
  %25 = load ptr, ptr @gic_rdists, align 4
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %28 = ptrtoint ptr %27 to i32
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx, align 4
  %add53.c76 = add i32 %30, %28
  %31 = inttoptr i32 %add53.c76 to ptr
  tail call void @_raw_spin_unlock(ptr noundef %31) #15
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i, i32 noundef %call.i) #15
  br label %cleanup

do.end36:                                         ; preds = %if.end19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !397
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !398
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %32 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %32(i32 noundef 214748) #15
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr15) #15, !srcloc !361
  %34 = tail call i32 @llvm.bswap.i32(i32 %33)
  %tobool.not = icmp sgt i32 %34, -1
  br i1 %tobool.not, label %do.end36.if.end57.critedge_crit_edge, label %do.end36.if.end19_crit_edge

do.end36.if.end19_crit_edge:                      ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end19

do.end36.if.end57.critedge_crit_edge:             ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end57.critedge

if.then56.critedge77:                             ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #17
  %35 = load ptr, ptr @gic_rdists, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 8
  %38 = ptrtoint ptr %37 to i32
  %39 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx, align 4
  %add53.c78 = add i32 %40, %38
  %41 = inttoptr i32 %add53.c78 to ptr
  tail call void @_raw_spin_unlock(ptr noundef %41) #15
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i, i32 noundef %call.i) #15
  br label %cleanup

if.end57.critedge:                                ; preds = %do.end36.if.end57.critedge_crit_edge, %if.end.if.end57.critedge_crit_edge
  %.lcssa = phi i32 [ %24, %if.end.if.end57.critedge_crit_edge ], [ %34, %do.end36.if.end57.critedge_crit_edge ]
  %42 = load ptr, ptr @gic_rdists, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %42, align 8
  %45 = ptrtoint ptr %44 to i32
  %46 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx, align 4
  %add53.c = add i32 %47, %45
  %48 = inttoptr i32 %add53.c to ptr
  tail call void @_raw_spin_unlock(ptr noundef %48) #15
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i, i32 noundef %call.i) #15
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %49 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %hwirq, align 4
  %shl = shl nuw i32 1, %50
  %and58 = and i32 %shl, %.lcssa
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59 = icmp ne i32 %and58, 0
  %frombool = zext i1 %tobool59 to i8
  %51 = ptrtoint ptr %val to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %frombool, ptr %val, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end57.critedge, %if.then56.critedge77, %do.end27, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end57.critedge ], [ -22, %entry.cleanup_crit_edge ], [ -6, %if.then56.critedge77 ], [ -6, %do.end27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_sgi_set_irqchip_state(ptr nocapture noundef readonly %d, i32 noundef %which, i1 noundef zeroext %state) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %which)
  %cmp.not = icmp eq i32 %which, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  br i1 %state, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %2 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %if.then1.for.cond.i_crit_edge, label %if.then1.if.end8.i_crit_edge

if.then1.if.end8.i_crit_edge:                     ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i

if.then1.for.cond.i_crit_edge:                    ; preds = %if.then1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.then1.for.cond.i_crit_edge
  %.pn.in.i = phi ptr [ %.pn.i, %for.body.i.for.cond.i_crit_edge ], [ @its_nodes, %if.then1.for.cond.i_crit_edge ]
  %3 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp.not.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %typer.i = getelementptr i8, ptr %.pn.i, i32 240
  %4 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %typer.i, align 8
  %and.i = and i64 %5, 1099511627776
  %tobool2.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool2.not.i, label %for.body.i.for.cond.i_crit_edge, label %return.loopexit.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i

if.end8.i:                                        ; preds = %for.end.i, %if.then1.if.end8.i_crit_edge
  %6 = load ptr, ptr @find_4_1_its.its, align 4
  br label %do.end44

return.loopexit.i:                                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i = getelementptr i8, ptr %.pn.i, i32 -136
  store ptr %storemerge.le11.i, ptr @find_4_1_its.its, align 4
  br label %do.end44

do.end44:                                         ; preds = %return.loopexit.i, %if.end8.i
  %retval.0.i = phi ptr [ %6, %if.end8.i ], [ %storemerge.le11.i, %return.loopexit.i ]
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %7 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hwirq, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 10
  %9 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %vpe_id, align 2
  %sgir_base = getelementptr inbounds %struct.its_node, ptr %retval.0.i, i32 0, i32 4
  %11 = ptrtoint ptr %sgir_base to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sgir_base, align 4
  %add.ptr50 = getelementptr i8, ptr %12, i32 32
  %13 = shl i32 %8, 24
  %14 = and i32 %13, 251658240
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr50, i32 %14) #15, !srcloc !362
  %conv1.i = zext i16 %10 to i32
  %15 = tail call i32 @llvm.bswap.i32(i32 %conv1.i) #15
  %add.ptr.i = getelementptr i8, ptr %12, i32 36
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %15) #15, !srcloc !362
  br label %return

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %16 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %17 = call ptr @memset(ptr %16, i32 255, i32 12)
  %18 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %1, ptr %desc.i, align 4
  %hwirq.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %19 = ptrtoint ptr %hwirq.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %hwirq.i, align 4
  %conv.i59 = trunc i32 %20 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %21 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %conv.i59, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %20
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %24 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %23, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %20, i32 1
  %25 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %27 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 2, i32 %20, i32 2
  %28 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %30 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 %29, ptr %group12.i, align 1
  %31 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 1, ptr %16, align 4
  %32 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %32, null
  br i1 %tobool.not.i.i, label %if.else.for.cond.i.i_crit_edge, label %if.else.if.end8.i.i_crit_edge

if.else.if.end8.i.i_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

if.else.for.cond.i.i_crit_edge:                   ; preds = %if.else
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %if.else.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %if.else.for.cond.i.i_crit_edge ]
  %33 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %34 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %35, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %if.else.if.end8.i.i_crit_edge
  %36 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %36, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %return

return:                                           ; preds = %its_configure_sgi.exit, %do.end44, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ 0, %its_configure_sgi.exit ], [ 0, %do.end44 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_sgi_set_vcpu_affinity(ptr nocapture noundef readonly %d, ptr nocapture noundef readonly %vcpu_info) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %vcpu_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vcpu_info, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %1)
  %cond = icmp eq i32 %1, 8
  br i1 %cond, label %sw.bb, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %2 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip_data.i, align 4
  %4 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %4, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %7 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hwirq, align 4
  %arrayidx = getelementptr %struct.its_vpe, ptr %3, i32 0, i32 7, i32 0, i32 2, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %6, ptr %arrayidx, align 1
  %group = getelementptr inbounds %struct.anon.107, ptr %4, i32 0, i32 1
  %10 = ptrtoint ptr %group to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %group, align 1, !range !365
  %12 = load i32, ptr %hwirq, align 4
  %group5 = getelementptr %struct.its_vpe, ptr %3, i32 0, i32 7, i32 0, i32 2, i32 %12, i32 2
  %13 = ptrtoint ptr %group5 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %11, ptr %group5, align 1
  %14 = load ptr, ptr %chip_data.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %15 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %16 = call ptr @memset(ptr %15, i32 255, i32 12)
  %17 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %desc.i, align 4
  %18 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %hwirq, align 4
  %conv.i = trunc i32 %19 to i8
  %sgi.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 1
  %20 = ptrtoint ptr %sgi.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv.i, ptr %sgi.i, align 4
  %arrayidx.i = getelementptr %struct.its_vpe, ptr %14, i32 0, i32 7, i32 0, i32 2, i32 %19
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %arrayidx.i, align 1
  %priority3.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 2
  %23 = ptrtoint ptr %priority3.i to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %priority3.i, align 1
  %enabled.i = getelementptr %struct.its_vpe, ptr %14, i32 0, i32 7, i32 0, i32 2, i32 %19, i32 1
  %24 = ptrtoint ptr %enabled.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %enabled.i, align 1, !range !365
  %enable.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 3
  %26 = ptrtoint ptr %enable.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 %25, ptr %enable.i, align 2
  %group.i = getelementptr %struct.its_vpe, ptr %14, i32 0, i32 7, i32 0, i32 2, i32 %19, i32 2
  %27 = ptrtoint ptr %group.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %group.i, align 1, !range !365
  %group12.i = getelementptr inbounds %struct.anon.103, ptr %desc.i, i32 0, i32 4
  %29 = ptrtoint ptr %group12.i to i32
  call void @__asan_store1_noabort(i32 %29)
  store i8 %28, ptr %group12.i, align 1
  %30 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 0, ptr %15, align 4
  %31 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i, label %sw.bb.for.cond.i.i_crit_edge, label %sw.bb.if.end8.i.i_crit_edge

sw.bb.if.end8.i.i_crit_edge:                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

sw.bb.for.cond.i.i_crit_edge:                     ; preds = %sw.bb
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %sw.bb.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %sw.bb.for.cond.i.i_crit_edge ]
  %32 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %33 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %34, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %sw.bb.if.end8.i.i_crit_edge
  %35 = load ptr, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %its_configure_sgi.exit

its_configure_sgi.exit:                           ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %35, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  call fastcc void @its_send_single_vcommand(ptr noundef %retval.0.i.i, ptr noundef nonnull @its_build_vsgi_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %cleanup

cleanup:                                          ; preds = %its_configure_sgi.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %its_configure_sgi.exit ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vsgi_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %0 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %typer, align 8
  %and = and i64 %1, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %do.end, label %if.end25, !prof !369

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 959, i32 noundef 9, ptr noundef null) #15
  br label %return

if.end25:                                         ; preds = %entry
  %2 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %3, -256
  %or.i.i = or i64 %and4.i.i, 35
  store i64 %or.i.i, ptr %cmd, align 8
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i = zext i16 %7 to i64
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i45 = and i64 %9, -281470681743361
  %shl6.i.i = shl nuw nsw i64 %conv.i, 32
  %or.i.i46 = or i64 %and4.i.i45, %shl6.i.i
  store i64 %or.i.i46, ptr %arrayidx.i, align 8
  %sgi = getelementptr inbounds %struct.anon.103, ptr %desc, i32 0, i32 1
  %10 = ptrtoint ptr %sgi to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sgi, align 4
  %conv.i47 = zext i8 %11 to i64
  %and4.i.i48 = and i64 %or.i.i, -64424509661
  %shl6.i.i49 = shl nuw nsw i64 %conv.i47, 32
  %and7.i.i = and i64 %shl6.i.i49, 64424509440
  %or.i.i50 = or i64 %and7.i.i, %and4.i.i48
  store i64 %or.i.i50, ptr %cmd, align 8
  %priority = getelementptr inbounds %struct.anon.103, ptr %desc, i32 0, i32 2
  %12 = ptrtoint ptr %priority to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %priority, align 1
  %14 = lshr i8 %13, 4
  %15 = zext i8 %14 to i64
  %and4.i.i51 = and i64 %or.i.i50, -15728861
  %shl6.i.i52 = shl nuw nsw i64 %15, 20
  %or.i.i53 = or i64 %and4.i.i51, %shl6.i.i52
  store i64 %or.i.i53, ptr %cmd, align 8
  %group = getelementptr inbounds %struct.anon.103, ptr %desc, i32 0, i32 4
  %16 = ptrtoint ptr %group to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %group, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool26.not = icmp eq i8 %17, 0
  %and4.i.i54 = and i64 %or.i.i53, -1245
  %shl6.i.i55 = select i1 %tobool26.not, i64 0, i64 1024
  %or.i.i56 = or i64 %and4.i.i54, %shl6.i.i55
  %18 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %or.i.i56, ptr %cmd, align 8
  %clear = getelementptr inbounds %struct.anon.103, ptr %desc, i32 0, i32 5
  %19 = ptrtoint ptr %clear to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %clear, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool27.not = icmp eq i8 %20, 0
  %and4.i.i57 = and i64 %or.i.i56, -733
  %shl6.i.i58 = select i1 %tobool27.not, i64 0, i64 512
  %or.i.i59 = or i64 %and4.i.i57, %shl6.i.i58
  %21 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %or.i.i59, ptr %cmd, align 8
  %enable = getelementptr inbounds %struct.anon.103, ptr %desc, i32 0, i32 3
  %22 = ptrtoint ptr %enable to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %enable, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool28.not = icmp eq i8 %23, 0
  %and4.i.i60 = and i64 %or.i.i59, -477
  %shl6.i.i61 = select i1 %tobool28.not, i64 0, i64 256
  %or.i.i62 = or i64 %and4.i.i60, %shl6.i.i61
  %24 = tail call i64 @llvm.bswap.i64(i64 %or.i.i62) #15
  %25 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %cmd, align 8
  %26 = tail call i64 @llvm.bswap.i64(i64 %or.i.i46) #15
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %arrayidx.i, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %28 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %arrayidx4.i, align 8
  %30 = tail call i64 @llvm.bswap.i64(i64 %29) #15
  %31 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %32 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %arrayidx6.i, align 8
  %34 = tail call i64 @llvm.bswap.i64(i64 %33) #15
  %35 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %34, ptr %arrayidx6.i, align 8
  %36 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %38 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %37, i32 0, i32 9
  %40 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %col_idx.i, align 4
  %conv.i63 = zext i16 %41 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %39, i32 %conv.i63
  %42 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %43, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end25.valid_vpe.exit_crit_edge, label %land.rhs.i.i

if.end25.valid_vpe.exit_crit_edge:                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %if.end25
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %if.end25.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %if.end25.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %37
  br label %return

return:                                           ; preds = %valid_vpe.exit, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ %.vpe.i, %valid_vpe.exit ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_modify_status(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_irq_domain_alloc(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs, ptr noundef %args) #0 align 64 {
entry:
  %fwspec.i = alloca %struct.irq_fwspec, align 4
  %base = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %base) #15
  %0 = ptrtoint ptr %base to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %base, align 4, !annotation !371
  %tobool.not = icmp eq ptr %args, null
  br i1 %tobool.not, label %do.body4, label %cond.end26, !prof !369

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/irqchip/irq-gic-v3-its.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4466, 0\0A.popsection", ""() #15, !srcloc !399
  unreachable

cond.end26:                                       ; preds = %entry
  %sub.i121 = add i32 %nr_irqs, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i121)
  %tobool.not.i.i.i = icmp eq i32 %sub.i121, 0
  %1 = tail call i32 @llvm.ctlz.i32(i32 %sub.i121, i1 true) #15, !range !368
  %sub.i.i.i = sub nuw nsw i32 32, %1
  %sub.i.i.op.i = shl nuw i32 1, %sub.i.i.i
  %shl.i = select i1 %tobool.not.i.i.i, i32 1, i32 %sub.i.i.op.i
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i.do.body.i_crit_edge, %cond.end26
  %nr_irqs.addr.0.i = phi i32 [ %shl.i, %cond.end26 ], [ %div.i, %if.end.i.do.body.i_crit_edge ]
  %call.i = call fastcc i32 @alloc_lpi_range(i32 noundef %nr_irqs.addr.0.i, ptr noundef nonnull %base) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.end.i, label %if.end.i

if.end.i:                                         ; preds = %do.body.i
  %div.i = sdiv i32 %nr_irqs.addr.0.i, 2
  %cmp.i = icmp sgt i32 %nr_irqs.addr.0.i, 1
  br i1 %cmp.i, label %if.end.i.do.body.i_crit_edge, label %if.end.i.its_lpi_alloc.exit.thread_crit_edge

if.end.i.its_lpi_alloc.exit.thread_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

if.end.i.do.body.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs.addr.0.i)
  %tobool1.not.i.not = icmp eq i32 %nr_irqs.addr.0.i, 0
  br i1 %tobool1.not.i.not, label %do.end.i.its_lpi_alloc.exit.thread_crit_edge, label %if.end6.i

do.end.i.its_lpi_alloc.exit.thread_crit_edge:     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

if.end6.i:                                        ; preds = %do.end.i
  %call7.i = tail call ptr @bitmap_zalloc(i32 noundef %nr_irqs.addr.0.i, i32 noundef 2592) #15
  %tobool8.not.i = icmp eq ptr %call7.i, null
  br i1 %tobool8.not.i, label %if.end6.i.its_lpi_alloc.exit.thread_crit_edge, label %if.end31

if.end6.i.its_lpi_alloc.exit.thread_crit_edge:    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_alloc.exit.thread

its_lpi_alloc.exit.thread:                        ; preds = %if.end6.i.its_lpi_alloc.exit.thread_crit_edge, %do.end.i.its_lpi_alloc.exit.thread_crit_edge, %if.end.i.its_lpi_alloc.exit.thread_crit_edge
  %2 = ptrtoint ptr %base to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %base, align 4
  br label %cleanup

if.end31:                                         ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_cmp4(i32 %nr_irqs.addr.0.i, i32 %nr_irqs)
  %cmp32 = icmp ult i32 %nr_irqs.addr.0.i, %nr_irqs
  br i1 %cmp32, label %if.then34, label %get_order.exit.i

if.then34:                                        ; preds = %if.end31
  %3 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %base, align 4
  %call.i122 = tail call fastcc i32 @free_lpi_range(i32 noundef %4, i32 noundef %nr_irqs.addr.0.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i122)
  %tobool.not.i123 = icmp eq i32 %call.i122, 0
  br i1 %tobool.not.i123, label %if.then34.its_lpi_free.exit_crit_edge, label %do.end.i124, !prof !364

if.then34.its_lpi_free.exit_crit_edge:            ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_free.exit

do.end.i124:                                      ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2162, i32 noundef 9, ptr noundef null) #15
  br label %its_lpi_free.exit

its_lpi_free.exit:                                ; preds = %do.end.i124, %if.then34.its_lpi_free.exit_crit_edge
  tail call void @bitmap_free(ptr noundef nonnull %call7.i) #15
  br label %cleanup

get_order.exit.i:                                 ; preds = %if.end31
  %5 = load i32, ptr @lpi_id_bits, align 4
  %shl.i126 = shl nuw i32 1, %5
  %add.i = add nuw i32 %shl.i126, 65535
  %and.i = and i32 %add.i, -65536
  %dec.i.i = add i32 %and.i, -1
  %shr.i.i = lshr i32 %dec.i.i, 12
  %6 = tail call i32 @llvm.ctlz.i32(i32 %shr.i.i, i1 true) #15, !range !368
  %sub.i.i.i128 = sub nuw nsw i32 32, %6
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef 3264, i32 noundef %sub.i.i.i128, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i129 = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool.not.i129, label %if.then38, label %if.end39

if.then38:                                        ; preds = %get_order.exit.i
  %7 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %base, align 4
  %call.i131 = tail call fastcc i32 @free_lpi_range(i32 noundef %8, i32 noundef %nr_irqs.addr.0.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i131)
  %tobool.not.i132 = icmp eq i32 %call.i131, 0
  br i1 %tobool.not.i132, label %if.then38.its_lpi_free.exit135_crit_edge, label %do.end.i133, !prof !364

if.then38.its_lpi_free.exit135_crit_edge:         ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_free.exit135

do.end.i133:                                      ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2162, i32 noundef 9, ptr noundef null) #15
  br label %its_lpi_free.exit135

its_lpi_free.exit135:                             ; preds = %do.end.i133, %if.then38.its_lpi_free.exit135_crit_edge
  tail call void @bitmap_free(ptr noundef nonnull %call7.i) #15
  br label %cleanup

if.end39:                                         ; preds = %get_order.exit.i
  %call2.i = tail call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #15
  %9 = load i32, ptr @lpi_id_bits, align 4
  %shl.i.i = shl nuw i32 1, %9
  %add.i5.i = add nuw i32 %shl.i.i, 65535
  %and.i.i = and i32 %add.i5.i, -65536
  %10 = call ptr @memset(ptr %call2.i, i32 162, i32 %and.i.i)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %11(ptr noundef %call2.i, i32 noundef %and.i.i) #15
  %db_bitmap = getelementptr inbounds %struct.its_vm, ptr %args, i32 0, i32 6
  %12 = ptrtoint ptr %db_bitmap to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call7.i, ptr %db_bitmap, align 4
  %13 = ptrtoint ptr %base to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %base, align 4
  %db_lpi_base = getelementptr inbounds %struct.its_vm, ptr %args, i32 0, i32 5
  %15 = ptrtoint ptr %db_lpi_base to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %db_lpi_base, align 4
  %nr_db_lpis = getelementptr inbounds %struct.its_vm, ptr %args, i32 0, i32 7
  %16 = ptrtoint ptr %nr_db_lpis to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %nr_irqs.addr.0.i, ptr %nr_db_lpis, align 4
  %vprop_page40 = getelementptr inbounds %struct.its_vm, ptr %args, i32 0, i32 2
  %17 = ptrtoint ptr %vprop_page40 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call38.i.i.i.i, ptr %vprop_page40, align 4
  %18 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid = getelementptr inbounds %struct.rdists, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %has_rvpeid, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool41.not = icmp eq i8 %20, 0
  %spec.select = select i1 %tobool41.not, ptr @its_vpe_irq_chip, ptr @its_vpe_4_1_irq_chip
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs)
  %cmp44206.not = icmp eq i32 %nr_irqs, 0
  br i1 %cmp44206.not, label %if.end39.cleanup_crit_edge, label %for.body.lr.ph

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end39
  %vpes = getelementptr inbounds %struct.its_vm, ptr %args, i32 0, i32 3
  %parent.i = getelementptr inbounds %struct.irq_domain, ptr %domain, i32 0, i32 9
  %param_count.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 1
  %param.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2
  %arrayidx4.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2, i32 1
  %arrayidx6.i = getelementptr inbounds %struct.irq_fwspec, ptr %fwspec.i, i32 0, i32 2, i32 2
  br label %for.body

for.body:                                         ; preds = %if.end60.for.body_crit_edge, %for.body.lr.ph
  %i.0207 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end60.for.body_crit_edge ]
  %add46 = add i32 %i.0207, %14
  %21 = ptrtoint ptr %vpes to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %vpes, align 4
  %arrayidx = getelementptr ptr, ptr %22, i32 %i.0207
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %arrayidx, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %add46, ptr %vpe_db_lpi, align 4
  %26 = load ptr, ptr %vpes, align 4
  %arrayidx48 = getelementptr ptr, ptr %26, i32 %i.0207
  %27 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx48, align 4
  %29 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i = getelementptr inbounds %struct.rdists, ptr %29, i32 0, i32 8
  %30 = ptrtoint ptr %has_rvpeid.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %has_rvpeid.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.i.i136 = icmp eq i8 %31, 0
  br i1 %tobool.not.i.i136, label %for.body.its_vpe_id_alloc.exit.i_crit_edge, label %land.lhs.true.i.i

for.body.its_vpe_id_alloc.exit.i_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_id_alloc.exit.i

land.lhs.true.i.i:                                ; preds = %for.body
  %gicd_typer2.i.i = getelementptr inbounds %struct.rdists, ptr %29, i32 0, i32 5
  %32 = ptrtoint ptr %gicd_typer2.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %gicd_typer2.i.i, align 4
  %and.i.i137 = and i32 %33, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i137)
  %tobool1.not.i.i = icmp eq i32 %and.i.i137, 0
  br i1 %tobool1.not.i.i, label %land.lhs.true.i.i.its_vpe_id_alloc.exit.i_crit_edge, label %if.then.i.i139

land.lhs.true.i.i.its_vpe_id_alloc.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_id_alloc.exit.i

if.then.i.i139:                                   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %and3.i.i = and i32 %33, 31
  %add.i.i138 = add nuw nsw i32 %and3.i.i, 1
  br label %its_vpe_id_alloc.exit.i

its_vpe_id_alloc.exit.i:                          ; preds = %if.then.i.i139, %land.lhs.true.i.i.its_vpe_id_alloc.exit.i_crit_edge, %for.body.its_vpe_id_alloc.exit.i_crit_edge
  %nvpeid.0.i.i = phi i32 [ %add.i.i138, %if.then.i.i139 ], [ 16, %land.lhs.true.i.i.its_vpe_id_alloc.exit.i_crit_edge ], [ 16, %for.body.its_vpe_id_alloc.exit.i_crit_edge ]
  %notmask.i.i = shl nsw i32 -1, %nvpeid.0.i.i
  %sub.i.i140 = xor i32 %notmask.i.i, -1
  %call.i.i = call i32 @ida_alloc_range(ptr noundef nonnull @its_vpeid_ida, i32 noundef 0, i32 noundef %sub.i.i140, i32 noundef 3264) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.i141 = icmp slt i32 %call.i.i, 0
  br i1 %cmp.i141, label %its_vpe_id_alloc.exit.i.if.then66_crit_edge, label %get_order.exit.i.i

its_vpe_id_alloc.exit.i.if.then66_crit_edge:      ; preds = %its_vpe_id_alloc.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then66

get_order.exit.i.i:                               ; preds = %its_vpe_id_alloc.exit.i
  %34 = load i32, ptr @lpi_id_bits, align 4
  %shl.i.i142 = shl nuw i32 1, %34
  %div9.i.i = lshr i32 %shl.i.i142, 3
  %add.i26.i = add nuw nsw i32 %div9.i.i, 65535
  %and.i27.i = and i32 %add.i26.i, 1073676288
  %dec.i.i.i = add nsw i32 %and.i27.i, -1
  %shr.i.i.i = lshr i32 %dec.i.i.i, 12
  %35 = call i32 @llvm.ctlz.i32(i32 %shr.i.i.i, i1 true) #15, !range !368
  %sub.i.i.i.i = sub nuw nsw i32 32, %35
  %call38.i.i.i.i.i = call ptr @__alloc_pages(i32 noundef 3520, i32 noundef %sub.i.i.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool.not.i28.i = icmp eq ptr %call38.i.i.i.i.i, null
  br i1 %tobool.not.i28.i, label %if.then2.i, label %if.end3.i

if.then2.i:                                       ; preds = %get_order.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv.i.i = and i32 %call.i.i, 65535
  call void @ida_free(ptr noundef nonnull @its_vpeid_ida, i32 noundef %conv.i.i) #15
  br label %if.then66

if.end3.i:                                        ; preds = %get_order.exit.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %36 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  %call2.i.i = call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i.i) #15
  %37 = load i32, ptr @lpi_id_bits, align 4
  %shl3.i.i = shl nuw i32 1, %37
  %div410.i.i = lshr i32 %shl3.i.i, 3
  %add5.i.i = add nuw nsw i32 %div410.i.i, 65535
  %and6.i.i = and i32 %add5.i.i, 1073676288
  call void %36(ptr noundef %call2.i.i, i32 noundef %and6.i.i) #15
  %.pn41.i.i = load ptr, ptr @its_nodes, align 4
  %cmp.not43.i.i = icmp eq ptr %.pn41.i.i, @its_nodes
  br i1 %cmp.not43.i.i, label %if.end3.i.for.end.i.i_crit_edge, label %if.end3.i.for.body.i.i_crit_edge

if.end3.i.for.body.i.i_crit_edge:                 ; preds = %if.end3.i
  br label %for.body.i.i

if.end3.i.for.end.i.i_crit_edge:                  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end3.i.for.body.i.i_crit_edge
  %.pn44.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn41.i.i, %if.end3.i.for.body.i.i_crit_edge ]
  %its.045.i.i = getelementptr i8, ptr %.pn44.i.i, i32 -136
  %typer.i.i = getelementptr i8, ptr %.pn44.i.i, i32 240
  %38 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %typer.i.i, align 8
  %and.i29.i = and i64 %39, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i29.i)
  %tobool.not.i30.i = icmp eq i64 %and.i29.i, 0
  br i1 %tobool.not.i30.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end.i31.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i.i

if.end.i31.i:                                     ; preds = %for.body.i.i
  %val.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 40
  %40 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %val.i.i.i, align 8
  %42 = and i64 %41, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %42)
  %cmp1.i.i.i = icmp eq i64 %42, 144115188075855872
  br i1 %cmp1.i.i.i, label %if.end.i31.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.i.i.i

if.end.i31.i.its_get_baser.exit.i.i_crit_edge:    ; preds = %if.end.i31.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.i.i.i:                                    ; preds = %if.end.i31.i
  %val.1.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 64
  %43 = ptrtoint ptr %val.1.i.i.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %val.1.i.i.i, align 8
  %45 = and i64 %44, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %45)
  %cmp1.1.i.i.i = icmp eq i64 %45, 144115188075855872
  br i1 %cmp1.1.i.i.i, label %for.inc.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.1.i.i.i

for.inc.i.i.i.its_get_baser.exit.i.i_crit_edge:   ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.1.i.i.i:                                  ; preds = %for.inc.i.i.i
  %val.2.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 88
  %46 = ptrtoint ptr %val.2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %val.2.i.i.i, align 8
  %48 = and i64 %47, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %48)
  %cmp1.2.i.i.i = icmp eq i64 %48, 144115188075855872
  br i1 %cmp1.2.i.i.i, label %for.inc.1.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.2.i.i.i

for.inc.1.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.2.i.i.i:                                  ; preds = %for.inc.1.i.i.i
  %val.3.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 112
  %49 = ptrtoint ptr %val.3.i.i.i to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %val.3.i.i.i, align 8
  %51 = and i64 %50, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %51)
  %cmp1.3.i.i.i = icmp eq i64 %51, 144115188075855872
  br i1 %cmp1.3.i.i.i, label %for.inc.2.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.3.i.i.i

for.inc.2.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.3.i.i.i:                                  ; preds = %for.inc.2.i.i.i
  %val.4.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 136
  %52 = ptrtoint ptr %val.4.i.i.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %val.4.i.i.i, align 8
  %54 = and i64 %53, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %54)
  %cmp1.4.i.i.i = icmp eq i64 %54, 144115188075855872
  br i1 %cmp1.4.i.i.i, label %for.inc.3.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.4.i.i.i

for.inc.3.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.4.i.i.i:                                  ; preds = %for.inc.3.i.i.i
  %val.5.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 160
  %55 = ptrtoint ptr %val.5.i.i.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %val.5.i.i.i, align 8
  %57 = and i64 %56, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %57)
  %cmp1.5.i.i.i = icmp eq i64 %57, 144115188075855872
  br i1 %cmp1.5.i.i.i, label %for.inc.4.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.5.i.i.i

for.inc.4.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.5.i.i.i:                                  ; preds = %for.inc.4.i.i.i
  %val.6.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 184
  %58 = ptrtoint ptr %val.6.i.i.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %val.6.i.i.i, align 8
  %60 = and i64 %59, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %60)
  %cmp1.6.i.i.i = icmp eq i64 %60, 144115188075855872
  br i1 %cmp1.6.i.i.i, label %for.inc.5.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.6.i.i.i

for.inc.5.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

for.inc.6.i.i.i:                                  ; preds = %for.inc.5.i.i.i
  %val.7.i.i.i = getelementptr i8, ptr %.pn44.i.i, i32 208
  %61 = ptrtoint ptr %val.7.i.i.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %val.7.i.i.i, align 8
  %63 = and i64 %62, 504403158265495552
  call void @__sanitizer_cov_trace_const_cmp8(i64 144115188075855872, i64 %63)
  %cmp1.7.i.i.i = icmp eq i64 %63, 144115188075855872
  br i1 %cmp1.7.i.i.i, label %for.inc.6.i.i.i.its_get_baser.exit.i.i_crit_edge, label %for.inc.6.i.i.i.if.then5.i_crit_edge

for.inc.6.i.i.i.if.then5.i_crit_edge:             ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

for.inc.6.i.i.i.its_get_baser.exit.i.i_crit_edge: ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_get_baser.exit.i.i

its_get_baser.exit.i.i:                           ; preds = %for.inc.6.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.5.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.4.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.3.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.2.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.1.i.i.i.its_get_baser.exit.i.i_crit_edge, %for.inc.i.i.i.its_get_baser.exit.i.i_crit_edge, %if.end.i31.i.its_get_baser.exit.i.i_crit_edge
  %i.010.lcssa.i.i.i = phi i32 [ 0, %if.end.i31.i.its_get_baser.exit.i.i_crit_edge ], [ 1, %for.inc.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 2, %for.inc.1.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 3, %for.inc.2.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 4, %for.inc.3.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 5, %for.inc.4.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 6, %for.inc.5.i.i.i.its_get_baser.exit.i.i_crit_edge ], [ 7, %for.inc.6.i.i.i.its_get_baser.exit.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr %struct.its_node, ptr %its.045.i.i, i32 0, i32 8, i32 %i.010.lcssa.i.i.i
  %tobool2.not.i.i = icmp eq ptr %arrayidx.i.i.i, null
  br i1 %tobool2.not.i.i, label %its_get_baser.exit.i.i.if.then5.i_crit_edge, label %if.end4.i.i

its_get_baser.exit.i.i.if.then5.i_crit_edge:      ; preds = %its_get_baser.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

if.end4.i.i:                                      ; preds = %its_get_baser.exit.i.i
  %call5.i.i = call fastcc zeroext i1 @its_alloc_table_entry(ptr noundef %its.045.i.i, ptr noundef nonnull %arrayidx.i.i.i, i32 noundef %call.i.i) #15
  br i1 %call5.i.i, label %if.end4.i.i.for.inc.i.i_crit_edge, label %if.end4.i.i.if.then5.i_crit_edge

if.end4.i.i.if.then5.i_crit_edge:                 ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

if.end4.i.i.for.inc.i.i_crit_edge:                ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.end4.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %64 = ptrtoint ptr %.pn44.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %.pn.i.i = load ptr, ptr %.pn44.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.inc.i.i.for.end.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.inc.i.i.for.end.i.i_crit_edge:                ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.inc.i.i.for.end.i.i_crit_edge, %if.end3.i.for.end.i.i_crit_edge
  %65 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i32.i = getelementptr inbounds %struct.rdists, ptr %65, i32 0, i32 8
  %66 = ptrtoint ptr %has_rvpeid.i32.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %has_rvpeid.i32.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool12.not.i.i = icmp eq i8 %67, 0
  br i1 %tobool12.not.i.i, label %for.end.i.i.do.body.i146_crit_edge, label %for.cond15.preheader.i.i

for.end.i.i.do.body.i146_crit_edge:               ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i146

for.cond15.preheader.i.i:                         ; preds = %for.end.i.i
  %call1646.i.i = call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %68 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call1646.i.i, i32 %68)
  %cmp1747.i.i = icmp ult i32 %call1646.i.i, %68
  br i1 %cmp1747.i.i, label %for.cond15.preheader.i.i.for.body18.i.i_crit_edge, label %for.cond15.preheader.i.i.do.body.i146_crit_edge

for.cond15.preheader.i.i.do.body.i146_crit_edge:  ; preds = %for.cond15.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i146

for.cond15.preheader.i.i.for.body18.i.i_crit_edge: ; preds = %for.cond15.preheader.i.i
  br label %for.body18.i.i

for.body18.i.i:                                   ; preds = %for.cond15.backedge.i.i.for.body18.i.i_crit_edge, %for.cond15.preheader.i.i.for.body18.i.i_crit_edge
  %call1648.i.i = phi i32 [ %call16.i.i, %for.cond15.backedge.i.i.for.body18.i.i_crit_edge ], [ %call1646.i.i, %for.cond15.preheader.i.i.for.body18.i.i_crit_edge ]
  %69 = load ptr, ptr @gic_rdists, align 4
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %69, align 8
  %72 = ptrtoint ptr %71 to i32
  %arrayidx.i33.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call1648.i.i
  %73 = ptrtoint ptr %arrayidx.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %arrayidx.i33.i.i, align 4
  %add.i.i33.i = add i32 %74, %72
  %75 = inttoptr i32 %add.i.i33.i to ptr
  %rd_base.i.i.i = getelementptr inbounds %struct.anon, ptr %75, i32 0, i32 1
  %76 = ptrtoint ptr %rd_base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rd_base.i.i.i, align 4
  %has_rvpeid.i.i.i = getelementptr inbounds %struct.rdists, ptr %69, i32 0, i32 8
  %78 = ptrtoint ptr %has_rvpeid.i.i.i to i32
  call void @__asan_load1_noabort(i32 %78)
  %79 = load i8, ptr %has_rvpeid.i.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %79)
  %tobool.not.i.i34.i = icmp eq i8 %79, 0
  %tobool2.not.i.i.i = icmp eq ptr %77, null
  %or.cond.i.i.i = select i1 %tobool.not.i.i34.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i.i, label %for.body18.i.i.for.cond15.backedge.i.i_crit_edge, label %if.end4.i.i.i

for.body18.i.i.for.cond15.backedge.i.i_crit_edge: ; preds = %for.body18.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond15.backedge.i.i

if.end4.i.i.i:                                    ; preds = %for.body18.i.i
  %add.ptr5.i.i.i = getelementptr i8, ptr %77, i32 131184
  %80 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr5.i.i.i) #15, !srcloc !361
  %add.ptr.i.i.i.i = getelementptr i8, ptr %77, i32 131188
  %81 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i) #15, !srcloc !361
  %82 = zext i32 %81 to i64
  %83 = zext i32 %80 to i64
  %84 = shl nuw i64 %83, 32
  %85 = or i64 %84, %82
  %86 = call i64 @llvm.bswap.i64(i64 %85) #15
  %and.i34.i.i = lshr i64 %86, 59
  %87 = trunc i64 %and.i34.i.i to i32
  %88 = and i32 %87, 7
  %conv.i.i.i = add nuw nsw i32 %88, 1
  %and39.i.i.i = lshr i64 %86, 53
  %89 = trunc i64 %and39.i.i.i to i32
  %conv41.i.i.i = and i32 %89, 3
  %90 = trunc i64 %86 to i32
  %91 = and i32 %90, 127
  %conv61.i.i.i = add nuw nsw i32 %91, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %conv41.i.i.i)
  %.not = icmp eq i32 %conv41.i.i.i, 3
  br i1 %.not, label %do.end69.i.i.i, label %switch.lookup

do.end69.i.i.i:                                   ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2753, i32 noundef 9, ptr noundef null) #15
  br label %sw.epilog.i.i.i

switch.lookup:                                    ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.its_vpe_irq_domain_alloc, i32 0, i32 %conv41.i.i.i
  %92 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %92)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %sw.epilog.i.i.i

sw.epilog.i.i.i:                                  ; preds = %switch.lookup, %do.end69.i.i.i
  %psz.0.i.i.i = phi i32 [ 4096, %do.end69.i.i.i ], [ %switch.load, %switch.lookup ]
  %and85.i.i.i = and i64 %86, 36028797018963968
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and85.i.i.i)
  %tobool86.not.i.i.i = icmp eq i64 %and85.i.i.i, 0
  br i1 %tobool86.not.i.i.i, label %if.then87.i.i.i, label %if.end90.i.i.i

if.then87.i.i.i:                                  ; preds = %sw.epilog.i.i.i
  %mul.i.i.i = mul nuw nsw i32 %psz.0.i.i.i, %conv61.i.i.i
  %mul88.i.i.i = shl nuw nsw i32 %conv.i.i.i, 3
  %div.i.i.i = udiv i32 %mul.i.i.i, %mul88.i.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %div.i.i.i, i32 %call.i.i)
  %cmp.i.i.i = icmp ugt i32 %div.i.i.i, %call.i.i
  br i1 %cmp.i.i.i, label %if.then87.i.i.i.for.cond15.backedge.i.i_crit_edge, label %if.then87.i.i.i.if.then5.i_crit_edge

if.then87.i.i.i.if.then5.i_crit_edge:             ; preds = %if.then87.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

if.then87.i.i.i.for.cond15.backedge.i.i_crit_edge: ; preds = %if.then87.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond15.backedge.i.i

for.cond15.backedge.i.i:                          ; preds = %if.end144.i.i.i, %do.body114.i.i.i.for.cond15.backedge.i.i_crit_edge, %if.then87.i.i.i.for.cond15.backedge.i.i_crit_edge, %for.body18.i.i.for.cond15.backedge.i.i_crit_edge
  %call16.i.i = call i32 @cpumask_next(i32 noundef %call1648.i.i, ptr noundef nonnull @__cpu_possible_mask) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %93 = load i32, ptr @nr_cpu_ids, align 4
  %cmp17.i.i = icmp ult i32 %call16.i.i, %93
  br i1 %cmp17.i.i, label %for.cond15.backedge.i.i.for.body18.i.i_crit_edge, label %for.cond15.backedge.i.i.do.body.i146_crit_edge

for.cond15.backedge.i.i.do.body.i146_crit_edge:   ; preds = %for.cond15.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i146

for.cond15.backedge.i.i.for.body18.i.i_crit_edge: ; preds = %for.cond15.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body18.i.i

if.end90.i.i.i:                                   ; preds = %sw.epilog.i.i.i
  %mul91.i.i.i = shl nuw nsw i32 %conv.i.i.i, 3
  %div92.i.i.i = udiv i32 %psz.0.i.i.i, %mul91.i.i.i
  %94 = call i32 @llvm.ctlz.i32(i32 %div92.i.i.i, i1 true) #15, !range !400
  %sub.i.op.i.i.i.i = xor i32 %94, 31
  %shr107.i.i.i = lshr i32 %call.i.i, %sub.i.op.i.i.i.i
  %mul108.i.i.i = mul nuw nsw i32 %psz.0.i.i.i, %conv61.i.i.i
  %div109182.i.i.i = lshr exact i32 %mul108.i.i.i, 3
  call void @__sanitizer_cov_trace_cmp4(i32 %shr107.i.i.i, i32 %div109182.i.i.i)
  %cmp110.not.i.i.i = icmp ult i32 %shr107.i.i.i, %div109182.i.i.i
  br i1 %cmp110.not.i.i.i, label %do.body114.i.i.i, label %if.end90.i.i.i.if.then5.i_crit_edge

if.end90.i.i.i.if.then5.i_crit_edge:              ; preds = %if.end90.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

do.body114.i.i.i:                                 ; preds = %if.end90.i.i.i
  %95 = load ptr, ptr @gic_rdists, align 4
  %96 = ptrtoint ptr %95 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %95, align 8
  %98 = ptrtoint ptr %97 to i32
  %99 = ptrtoint ptr %arrayidx.i33.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx.i33.i.i, align 4
  %add123.i.i.i = add i32 %100, %98
  %101 = inttoptr i32 %add123.i.i.i to ptr
  %vpe_l1_base.i.i.i = getelementptr inbounds %struct.anon, ptr %101, i32 0, i32 6
  %102 = ptrtoint ptr %vpe_l1_base.i.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %vpe_l1_base.i.i.i, align 4
  %arrayidx124.i.i.i = getelementptr i64, ptr %103, i32 %shr107.i.i.i
  %104 = ptrtoint ptr %arrayidx124.i.i.i to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %arrayidx124.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %105)
  %tobool125.not.i.i.i = icmp eq i64 %105, 0
  br i1 %tobool125.not.i.i.i, label %get_order.exit.i.i.i, label %do.body114.i.i.i.for.cond15.backedge.i.i_crit_edge

do.body114.i.i.i.for.cond15.backedge.i.i_crit_edge: ; preds = %do.body114.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond15.backedge.i.i

get_order.exit.i.i.i:                             ; preds = %do.body114.i.i.i
  %sub.i.i.i36.i = add nsw i32 %psz.0.i.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %sub.i.i.i36.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %sub.i.i.i36.i, 4095
  %shr.i.i.i.i = lshr i32 %sub.i.i.i36.i, 12
  %106 = call i32 @llvm.ctlz.i32(i32 %shr.i.i.i.i, i1 true) #15, !range !368
  %sub.i.i.i.i.i = sub nuw nsw i32 32, %106
  %cond.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i, i32 0, i32 %sub.i.i.i.i.i
  %call38.i.i.i.i.i.i = call ptr @__alloc_pages(i32 noundef 3520, i32 noundef %cond.i.i.i.i.i, i32 noundef 0, ptr noundef null) #15
  %tobool129.not.i.i.i = icmp eq ptr %call38.i.i.i.i.i.i, null
  br i1 %tobool129.not.i.i.i, label %get_order.exit.i.i.i.if.then5.i_crit_edge, label %if.end131.i.i.i

get_order.exit.i.i.i.if.then5.i_crit_edge:        ; preds = %get_order.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then5.i

if.end131.i.i.i:                                  ; preds = %get_order.exit.i.i.i
  %and132.i.i.i = and i64 %86, 3072
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and132.i.i.i)
  %tobool133.not.i.i.i = icmp eq i64 %and132.i.i.i, 0
  br i1 %tobool133.not.i.i.i, label %if.then134.i.i.i, label %if.end131.i.i.i.if.end136.i.i.i_crit_edge

if.end131.i.i.i.if.end136.i.i.i_crit_edge:        ; preds = %if.end131.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end136.i.i.i

if.then134.i.i.i:                                 ; preds = %if.end131.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %107 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  %call135.i.i.i = call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i.i.i) #15
  call void %107(ptr noundef %call135.i.i.i, i32 noundef %psz.0.i.i.i) #15
  br label %if.end136.i.i.i

if.end136.i.i.i:                                  ; preds = %if.then134.i.i.i, %if.end131.i.i.i.if.end136.i.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %108 = load ptr, ptr @mem_map, align 4
  %sub.ptr.lhs.cast.i.i.i = ptrtoint ptr %call38.i.i.i.i.i.i to i32
  %sub.ptr.rhs.cast.i.i.i = ptrtoint ptr %108 to i32
  %sub.ptr.sub.i.i.i = sub i32 %sub.ptr.lhs.cast.i.i.i, %sub.ptr.rhs.cast.i.i.i
  %sub.ptr.div.i.i.i = sdiv exact i32 %sub.ptr.sub.i.i.i, 36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %109 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add137.i.i.i = add i32 %sub.ptr.div.i.i.i, %109
  %shl.i.i.i = shl i32 %add137.i.i.i, 12
  %conv138.i.i.i = zext i32 %shl.i.i.i to i64
  %or.i.i.i = or i64 %conv138.i.i.i, -9223372036854775808
  %110 = call i64 @llvm.bswap.i64(i64 %or.i.i.i) #15
  %111 = ptrtoint ptr %arrayidx124.i.i.i to i32
  call void @__asan_store8_noabort(i32 %111)
  store i64 %110, ptr %arrayidx124.i.i.i, align 8
  br i1 %tobool133.not.i.i.i, label %if.then142.i.i.i, label %if.end136.i.i.i.if.end144.i.i.i_crit_edge

if.end136.i.i.i.if.end144.i.i.i_crit_edge:        ; preds = %if.end136.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end144.i.i.i

if.then142.i.i.i:                                 ; preds = %if.end136.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %112 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  call void %112(ptr noundef %arrayidx124.i.i.i, i32 noundef 8) #15
  br label %if.end144.i.i.i

if.end144.i.i.i:                                  ; preds = %if.then142.i.i.i, %if.end136.i.i.i.if.end144.i.i.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #15, !srcloc !401
  br label %for.cond15.backedge.i.i

if.then5.i:                                       ; preds = %get_order.exit.i.i.i.if.then5.i_crit_edge, %if.end90.i.i.i.if.then5.i_crit_edge, %if.then87.i.i.i.if.then5.i_crit_edge, %if.end4.i.i.if.then5.i_crit_edge, %its_get_baser.exit.i.i.if.then5.i_crit_edge, %for.inc.6.i.i.i.if.then5.i_crit_edge
  %conv.i37.i = and i32 %call.i.i, 65535
  call void @ida_free(ptr noundef nonnull @its_vpeid_ida, i32 noundef %conv.i37.i) #15
  %call.i38.i = call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i.i) #15
  %113 = load i32, ptr @lpi_id_bits, align 4
  %shl.i39.i = shl nuw i32 1, %113
  %div2.i.i = lshr i32 %shl.i39.i, 3
  %add.i40.i = add nuw nsw i32 %div2.i.i, 65535
  %and.i41.i = and i32 %add.i40.i, 1073676288
  %dec.i.i47.i = add nsw i32 %and.i41.i, -1
  %shr.i.i48.i = lshr i32 %dec.i.i47.i, 12
  %114 = call i32 @llvm.ctlz.i32(i32 %shr.i.i48.i, i1 true) #15, !range !368
  %sub.i.i.i49.i = sub nuw nsw i32 32, %114
  %115 = ptrtoint ptr %call.i38.i to i32
  call void @free_pages(i32 noundef %115, i32 noundef %sub.i.i.i49.i) #15
  br label %if.then66

do.body.i146:                                     ; preds = %for.cond15.backedge.i.i.do.body.i146_crit_edge, %for.cond15.preheader.i.i.do.body.i146_crit_edge, %for.end.i.i.do.body.i146_crit_edge
  %vpe_lock.i = getelementptr inbounds %struct.its_vpe, ptr %28, i32 0, i32 8
  call void @__raw_spin_lock_init(ptr noundef %vpe_lock.i, ptr noundef nonnull @.str.140, ptr noundef nonnull @its_vpe_init.__key, i16 noundef signext 2) #15
  %conv8.i = trunc i32 %call.i.i to i16
  %vpe_id9.i = getelementptr inbounds %struct.its_vpe, ptr %28, i32 0, i32 10
  %116 = ptrtoint ptr %vpe_id9.i to i32
  call void @__asan_store2_noabort(i32 %116)
  store i16 %conv8.i, ptr %vpe_id9.i, align 2
  %117 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %117)
  store ptr %call38.i.i.i.i.i, ptr %28, align 4
  %118 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i = getelementptr inbounds %struct.rdists, ptr %118, i32 0, i32 8
  %119 = ptrtoint ptr %has_rvpeid.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %has_rvpeid.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %120)
  %tobool11.not.i = icmp eq i8 %120, 0
  br i1 %tobool11.not.i, label %if.else.i, label %if.then12.i147

if.then12.i147:                                   ; preds = %do.body.i146
  call void @__sanitizer_cov_trace_pc() #17
  %vmapp_count.i = getelementptr inbounds %struct.its_vpe, ptr %28, i32 0, i32 7, i32 0, i32 3
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %vmapp_count.i, i32 noundef 4) #15
  %121 = ptrtoint ptr %vmapp_count.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store volatile i32 0, ptr %vmapp_count.i, align 4
  br label %if.end52

if.else.i:                                        ; preds = %do.body.i146
  call void @__sanitizer_cov_trace_pc() #17
  %122 = getelementptr inbounds %struct.its_vpe, ptr %28, i32 0, i32 7
  %123 = ptrtoint ptr %122 to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 -1, ptr %122, align 4
  br label %if.end52

if.end52:                                         ; preds = %if.else.i, %if.then12.i147
  %add53 = add i32 %i.0207, %virq
  %124 = ptrtoint ptr %vpes to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %vpes, align 4
  %arrayidx55 = getelementptr ptr, ptr %125, i32 %i.0207
  %126 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %arrayidx55, align 4
  %vpe_db_lpi56 = getelementptr inbounds %struct.its_vpe, ptr %127, i32 0, i32 4
  %128 = ptrtoint ptr %vpe_db_lpi56 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %vpe_db_lpi56, align 4
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %fwspec.i) #15
  %130 = call ptr @memset(ptr %fwspec.i, i32 255, i32 72)
  %131 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %parent.i, align 4
  %fwnode.i.i = getelementptr inbounds %struct.irq_domain, ptr %132, i32 0, i32 6
  %133 = ptrtoint ptr %fwnode.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %fwnode.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %134, null
  %cmp.i.i.i.i = icmp ugt ptr %134, inttoptr (i32 -4096 to ptr)
  %spec.select.i.i.i.i = or i1 %tobool.not.i.i.i.i, %cmp.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %if.end52.if.else.i150_crit_edge, label %is_of_node.exit.i.i

if.end52.if.else.i150_crit_edge:                  ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i150

is_of_node.exit.i.i:                              ; preds = %if.end52
  %ops.i.i.i = getelementptr inbounds %struct.fwnode_handle, ptr %134, i32 0, i32 1
  %135 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %ops.i.i.i, align 4
  %cmp.i.i.i148 = icmp ne ptr %136, @of_fwnode_ops
  %add.ptr.i.i = getelementptr i8, ptr %134, i32 -12
  %tobool.not.i149 = icmp eq ptr %add.ptr.i.i, null
  %or.cond.i = select i1 %cmp.i.i.i148, i1 true, i1 %tobool.not.i149
  br i1 %or.cond.i, label %is_of_node.exit.i.i.if.else.i150_crit_edge, label %if.then.i

is_of_node.exit.i.i.if.else.i150_crit_edge:       ; preds = %is_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i150

if.then.i:                                        ; preds = %is_of_node.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %137 = ptrtoint ptr %fwspec.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store ptr %134, ptr %fwspec.i, align 4
  %138 = ptrtoint ptr %param_count.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 3, ptr %param_count.i, align 4
  %139 = ptrtoint ptr %param.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 -1592735507, ptr %param.i, align 4
  br label %its_irq_gic_domain_alloc.exit

if.else.i150:                                     ; preds = %is_of_node.exit.i.i.if.else.i150_crit_edge, %if.end52.if.else.i150_crit_edge
  br i1 %tobool.not.i.i.i.i, label %if.else.i150.its_irq_gic_domain_alloc.exit.thread_crit_edge, label %is_fwnode_irqchip.exit.i

if.else.i150.its_irq_gic_domain_alloc.exit.thread_crit_edge: ; preds = %if.else.i150
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_irq_gic_domain_alloc.exit.thread

is_fwnode_irqchip.exit.i:                         ; preds = %if.else.i150
  %ops.i.i = getelementptr inbounds %struct.fwnode_handle, ptr %134, i32 0, i32 1
  %140 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %ops.i.i, align 4
  %cmp.i.i = icmp eq ptr %141, @irqchip_fwnode_ops
  br i1 %cmp.i.i, label %if.then10.i, label %is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge

is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge: ; preds = %is_fwnode_irqchip.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_irq_gic_domain_alloc.exit.thread

if.then10.i:                                      ; preds = %is_fwnode_irqchip.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %142 = ptrtoint ptr %fwspec.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr %134, ptr %fwspec.i, align 4
  %143 = ptrtoint ptr %param_count.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 2, ptr %param_count.i, align 4
  br label %its_irq_gic_domain_alloc.exit

its_irq_gic_domain_alloc.exit.thread:             ; preds = %is_fwnode_irqchip.exit.i.its_irq_gic_domain_alloc.exit.thread_crit_edge, %if.else.i150.its_irq_gic_domain_alloc.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %fwspec.i) #15
  br label %if.then66

its_irq_gic_domain_alloc.exit:                    ; preds = %if.then10.i, %if.then.i
  %arrayidx4.i.sink = phi ptr [ %arrayidx4.i, %if.then.i ], [ %param.i, %if.then10.i ]
  %arrayidx18.sink.i = phi ptr [ %arrayidx6.i, %if.then.i ], [ %arrayidx4.i, %if.then10.i ]
  %144 = ptrtoint ptr %arrayidx4.i.sink to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %129, ptr %arrayidx4.i.sink, align 4
  %145 = ptrtoint ptr %arrayidx18.sink.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 1, ptr %arrayidx18.sink.i, align 4
  %call21.i = call i32 @irq_domain_alloc_irqs_parent(ptr noundef %domain, i32 noundef %add53, i32 noundef 1, ptr noundef nonnull %fwspec.i) #15
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %fwspec.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i)
  %tobool58.not = icmp eq i32 %call21.i, 0
  br i1 %tobool58.not, label %if.end60, label %its_irq_gic_domain_alloc.exit.if.then66_crit_edge

its_irq_gic_domain_alloc.exit.if.then66_crit_edge: ; preds = %its_irq_gic_domain_alloc.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then66

if.end60:                                         ; preds = %its_irq_gic_domain_alloc.exit
  %146 = ptrtoint ptr %vpes to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %vpes, align 4
  %arrayidx63 = getelementptr ptr, ptr %147, i32 %i.0207
  %148 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %arrayidx63, align 4
  %call64 = call i32 @irq_domain_set_hwirq_and_chip(ptr noundef %domain, i32 noundef %add53, i32 noundef %i.0207, ptr noundef nonnull %spec.select, ptr noundef %149) #15
  call void @_set_bit(i32 noundef %i.0207, ptr noundef nonnull %call7.i) #15
  %inc = add nuw i32 %i.0207, 1
  %exitcond.not = icmp eq i32 %inc, %nr_irqs
  br i1 %exitcond.not, label %if.end60.cleanup_crit_edge, label %if.end60.for.body_crit_edge

if.end60.for.body_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

if.end60.cleanup_crit_edge:                       ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then66:                                        ; preds = %its_irq_gic_domain_alloc.exit.if.then66_crit_edge, %its_irq_gic_domain_alloc.exit.thread, %if.then5.i, %if.then2.i, %its_vpe_id_alloc.exit.i.if.then66_crit_edge
  %err.1.ph = phi i32 [ -22, %its_irq_gic_domain_alloc.exit.thread ], [ -12, %if.then2.i ], [ -12, %if.then5.i ], [ %call21.i, %its_irq_gic_domain_alloc.exit.if.then66_crit_edge ], [ %call.i.i, %its_vpe_id_alloc.exit.i.if.then66_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.0207)
  %cmp67 = icmp sgt i32 %i.0207, 0
  br i1 %cmp67, label %if.then69, label %if.then66.if.end70_crit_edge

if.then66.if.end70_crit_edge:                     ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end70

if.then69:                                        ; preds = %if.then66
  call void @__sanitizer_cov_trace_pc() #17
  call void @its_vpe_irq_domain_free(ptr noundef %domain, i32 noundef %virq, i32 noundef %i.0207)
  br label %if.end70

if.end70:                                         ; preds = %if.then69, %if.then66.if.end70_crit_edge
  %call.i152 = call fastcc i32 @free_lpi_range(i32 noundef %14, i32 noundef %nr_irqs.addr.0.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i152)
  %tobool.not.i153 = icmp eq i32 %call.i152, 0
  br i1 %tobool.not.i153, label %if.end70.its_lpi_free.exit156_crit_edge, label %do.end.i154, !prof !364

if.end70.its_lpi_free.exit156_crit_edge:          ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_free.exit156

do.end.i154:                                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2162, i32 noundef 9, ptr noundef null) #15
  br label %its_lpi_free.exit156

its_lpi_free.exit156:                             ; preds = %do.end.i154, %if.end70.its_lpi_free.exit156_crit_edge
  call void @bitmap_free(ptr noundef nonnull %call7.i) #15
  %call.i157 = call ptr @page_address(ptr noundef nonnull %call38.i.i.i.i) #15
  %150 = load i32, ptr @lpi_id_bits, align 4
  %shl.i158 = shl nuw i32 1, %150
  %add.i159 = add nuw i32 %shl.i158, 65535
  %and.i160 = and i32 %add.i159, -65536
  %dec.i.i166 = add i32 %and.i160, -1
  %shr.i.i167 = lshr i32 %dec.i.i166, 12
  %151 = call i32 @llvm.ctlz.i32(i32 %shr.i.i167, i1 true) #15, !range !368
  %sub.i.i.i168 = sub nuw nsw i32 32, %151
  %152 = ptrtoint ptr %call.i157 to i32
  call void @free_pages(i32 noundef %152, i32 noundef %sub.i.i.i168) #15
  br label %cleanup

cleanup:                                          ; preds = %its_lpi_free.exit156, %if.end60.cleanup_crit_edge, %if.end39.cleanup_crit_edge, %its_lpi_free.exit135, %its_lpi_free.exit, %its_lpi_alloc.exit.thread
  %retval.0 = phi i32 [ -12, %its_lpi_free.exit ], [ -12, %its_lpi_free.exit135 ], [ %err.1.ph, %its_lpi_free.exit156 ], [ -12, %its_lpi_alloc.exit.thread ], [ 0, %if.end39.cleanup_crit_edge ], [ 0, %if.end60.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %base) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_irq_domain_free(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs) #0 align 64 {
entry:
  %desc.i.i.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %host_data = getelementptr inbounds %struct.irq_domain, ptr %domain, i32 0, i32 3
  %0 = ptrtoint ptr %host_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %host_data, align 4
  tail call void @irq_domain_free_irqs_parent(ptr noundef %domain, i32 noundef %virq, i32 noundef %nr_irqs) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nr_irqs)
  %cmp40.not = icmp eq i32 %nr_irqs, 0
  br i1 %cmp40.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %db_bitmap = getelementptr inbounds %struct.its_vm, ptr %1, i32 0, i32 6
  %2 = getelementptr inbounds i8, ptr %desc.i.i.i.i, i32 8
  %event_id.i.i.i.i = getelementptr inbounds %struct.anon.95, ptr %desc.i.i.i.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %its_vpe_db_proxy_unmap.exit.i.for.body_crit_edge, %for.body.lr.ph
  %i.041 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %its_vpe_db_proxy_unmap.exit.i.for.body_crit_edge ]
  %add = add i32 %i.041, %virq
  %call = call ptr @irq_domain_get_irq_data(ptr noundef %domain, i32 noundef %add) #15
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %call, i32 0, i32 7
  %3 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %chip_data.i, align 4
  %its_vm = getelementptr inbounds %struct.its_vpe, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %its_vm to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %its_vm, align 4
  %cmp2.not = icmp eq ptr %1, %6
  br i1 %cmp2.not, label %do.end9, label %do.body4, !prof !364

do.body4:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/irqchip/irq-gic-v3-its.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 4444, 0\0A.popsection", ""() #15, !srcloc !402
  unreachable

do.end9:                                          ; preds = %for.body
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %call, i32 0, i32 2
  %7 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hwirq, align 4
  %9 = ptrtoint ptr %db_bitmap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %db_bitmap, align 4
  call void @_clear_bit(i32 noundef %8, ptr noundef %10) #15
  %11 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i = getelementptr inbounds %struct.rdists, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %has_rvpeid.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %has_rvpeid.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end9.its_vpe_db_proxy_unmap.exit.i_crit_edge

do.end9.its_vpe_db_proxy_unmap.exit.i_crit_edge:  ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_db_proxy_unmap.exit.i

if.end.i.i:                                       ; preds = %do.end9
  %has_direct_lpi.i.i = getelementptr inbounds %struct.rdists, ptr %11, i32 0, i32 9
  %14 = ptrtoint ptr %has_direct_lpi.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %has_direct_lpi.i.i, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool1.not.i.i = icmp eq i8 %15, 0
  br i1 %tobool1.not.i.i, label %if.then2.i.i, label %if.end.i.i.its_vpe_db_proxy_unmap.exit.i_crit_edge

if.end.i.i.its_vpe_db_proxy_unmap.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_db_proxy_unmap.exit.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %call.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vpe_proxy) #15
  %16 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i.i = getelementptr inbounds %struct.rdists, ptr %16, i32 0, i32 8
  %17 = ptrtoint ptr %has_rvpeid.i.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %has_rvpeid.i.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool.not.i.i.i = icmp eq i8 %18, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.then2.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge

if.then2.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge: ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_db_proxy_unmap_locked.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then2.i.i
  %19 = getelementptr inbounds %struct.its_vpe, ptr %4, i32 0, i32 7
  %20 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %19, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %cmp.i.i.i = icmp eq i32 %21, -1
  br i1 %cmp.i.i.i, label %if.end.i.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge, label %if.end2.i.i.i

if.end.i.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_db_proxy_unmap_locked.exit.i.i

if.end2.i.i.i:                                    ; preds = %if.end.i.i.i
  %22 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i.i.i) #15
  %23 = call ptr @memset(ptr %2, i32 255, i32 12)
  %24 = ptrtoint ptr %desc.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %22, ptr %desc.i.i.i.i, align 4
  %25 = ptrtoint ptr %event_id.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %21, ptr %event_id.i.i.i.i, align 4
  %its.i.i.i.i = getelementptr inbounds %struct.its_device, ptr %22, i32 0, i32 1
  %26 = ptrtoint ptr %its.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %its.i.i.i.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %27, ptr noundef nonnull @its_build_discard_cmd, ptr noundef nonnull %desc.i.i.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i.i.i) #15
  %28 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %29 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %19, align 4
  %arrayidx.i.i.i = getelementptr ptr, ptr %28, i32 %30
  %31 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %arrayidx.i.i.i, align 4
  %32 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %33 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %arrayidx5.i.i.i = getelementptr ptr, ptr %32, i32 %33
  %34 = ptrtoint ptr %arrayidx5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx5.i.i.i, align 4
  %tobool6.not.i.i.i = icmp eq ptr %35, null
  br i1 %tobool6.not.i.i.i, label %if.end2.i.i.i.if.end9.i.i.i_crit_edge, label %if.then7.i.i.i

if.end2.i.i.i.if.end9.i.i.i_crit_edge:            ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i.i.i

if.then7.i.i.i:                                   ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %36 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %19, align 4
  store i32 %37, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  br label %if.end9.i.i.i

if.end9.i.i.i:                                    ; preds = %if.then7.i.i.i, %if.end2.i.i.i.if.end9.i.i.i_crit_edge
  %38 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 -1, ptr %19, align 4
  br label %its_vpe_db_proxy_unmap_locked.exit.i.i

its_vpe_db_proxy_unmap_locked.exit.i.i:           ; preds = %if.end9.i.i.i, %if.end.i.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge, %if.then2.i.i.its_vpe_db_proxy_unmap_locked.exit.i.i_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vpe_proxy, i32 noundef %call.i.i) #15
  br label %its_vpe_db_proxy_unmap.exit.i

its_vpe_db_proxy_unmap.exit.i:                    ; preds = %its_vpe_db_proxy_unmap_locked.exit.i.i, %if.end.i.i.its_vpe_db_proxy_unmap.exit.i_crit_edge, %do.end9.its_vpe_db_proxy_unmap.exit.i_crit_edge
  %vpe_id.i = getelementptr inbounds %struct.its_vpe, ptr %4, i32 0, i32 10
  %39 = ptrtoint ptr %vpe_id.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %vpe_id.i, align 2
  %conv.i.i = zext i16 %40 to i32
  call void @ida_free(ptr noundef nonnull @its_vpeid_ida, i32 noundef %conv.i.i) #15
  %41 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %4, align 4
  %call.i3.i = call ptr @page_address(ptr noundef %42) #15
  %43 = load i32, ptr @lpi_id_bits, align 4
  %shl.i.i = shl nuw i32 1, %43
  %div2.i.i = lshr i32 %shl.i.i, 3
  %add.i.i = add nuw nsw i32 %div2.i.i, 65535
  %and.i.i = and i32 %add.i.i, 1073676288
  %dec.i.i.i = add nsw i32 %and.i.i, -1
  %shr.i.i.i = lshr i32 %dec.i.i.i, 12
  %44 = call i32 @llvm.ctlz.i32(i32 %shr.i.i.i, i1 true) #15, !range !368
  %sub.i.i.i.i = sub nuw nsw i32 32, %44
  %45 = ptrtoint ptr %call.i3.i to i32
  call void @free_pages(i32 noundef %45, i32 noundef %sub.i.i.i.i) #15
  call void @irq_domain_reset_irq_data(ptr noundef %call) #15
  %inc = add nuw i32 %i.041, 1
  %exitcond.not = icmp eq i32 %inc, %nr_irqs
  br i1 %exitcond.not, label %its_vpe_db_proxy_unmap.exit.i.for.end_crit_edge, label %its_vpe_db_proxy_unmap.exit.i.for.body_crit_edge

its_vpe_db_proxy_unmap.exit.i.for.body_crit_edge: ; preds = %its_vpe_db_proxy_unmap.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

its_vpe_db_proxy_unmap.exit.i.for.end_crit_edge:  ; preds = %its_vpe_db_proxy_unmap.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %its_vpe_db_proxy_unmap.exit.i.for.end_crit_edge, %entry.for.end_crit_edge
  %db_bitmap10 = getelementptr inbounds %struct.its_vm, ptr %1, i32 0, i32 6
  %nr_db_lpis = getelementptr inbounds %struct.its_vm, ptr %1, i32 0, i32 7
  %46 = ptrtoint ptr %nr_db_lpis to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %nr_db_lpis, align 4
  %48 = ptrtoint ptr %db_bitmap10 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %db_bitmap10, align 4
  %call.i = call i32 @_find_first_bit_be(ptr noundef %49, i32 noundef %47) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %47)
  %cmp4.i = icmp eq i32 %call.i, %47
  br i1 %cmp4.i, label %if.then12, label %for.end.if.end15_crit_edge

for.end.if.end15_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15

if.then12:                                        ; preds = %for.end
  %50 = ptrtoint ptr %db_bitmap10 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %db_bitmap10, align 4
  %db_lpi_base = getelementptr inbounds %struct.its_vm, ptr %1, i32 0, i32 5
  %52 = ptrtoint ptr %db_lpi_base to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %db_lpi_base, align 4
  %54 = ptrtoint ptr %nr_db_lpis to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nr_db_lpis, align 4
  %call.i32 = call fastcc i32 @free_lpi_range(i32 noundef %53, i32 noundef %55) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i32)
  %tobool.not.i33 = icmp eq i32 %call.i32, 0
  br i1 %tobool.not.i33, label %if.then12.its_lpi_free.exit_crit_edge, label %do.end.i, !prof !364

if.then12.its_lpi_free.exit_crit_edge:            ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_lpi_free.exit

do.end.i:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 2162, i32 noundef 9, ptr noundef null) #15
  br label %its_lpi_free.exit

its_lpi_free.exit:                                ; preds = %do.end.i, %if.then12.its_lpi_free.exit_crit_edge
  call void @bitmap_free(ptr noundef %51) #15
  %vprop_page = getelementptr inbounds %struct.its_vm, ptr %1, i32 0, i32 2
  %56 = ptrtoint ptr %vprop_page to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %vprop_page, align 4
  %call.i35 = call ptr @page_address(ptr noundef %57) #15
  %58 = load i32, ptr @lpi_id_bits, align 4
  %shl.i = shl nuw i32 1, %58
  %add.i = add nuw i32 %shl.i, 65535
  %and.i36 = and i32 %add.i, -65536
  %dec.i.i = add i32 %and.i36, -1
  %shr.i.i = lshr i32 %dec.i.i, 12
  %59 = call i32 @llvm.ctlz.i32(i32 %shr.i.i, i1 true) #15, !range !368
  %sub.i.i.i39 = sub nuw nsw i32 32, %59
  %60 = ptrtoint ptr %call.i35 to i32
  call void @free_pages(i32 noundef %60, i32 noundef %sub.i.i.i39) #15
  br label %if.end15

if.end15:                                         ; preds = %its_lpi_free.exit, %for.end.if.end15_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_irq_domain_activate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d, i1 noundef zeroext %reserve) #0 align 64 {
entry:
  %desc.i23 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %2 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %gic_requires_eager_mapping.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

gic_requires_eager_mapping.exit:                  ; preds = %entry
  %3 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i = getelementptr inbounds %struct.rdists, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %has_rvpeid.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %has_rvpeid.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i.not = icmp eq i8 %5, 0
  br i1 %tobool1.not.i.not, label %gic_requires_eager_mapping.exit.cleanup_crit_edge, label %gic_requires_eager_mapping.exit.if.end_crit_edge

gic_requires_eager_mapping.exit.if.end_crit_edge: ; preds = %gic_requires_eager_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

gic_requires_eager_mapping.exit.cleanup_crit_edge: ; preds = %gic_requires_eager_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %gic_requires_eager_mapping.exit.if.end_crit_edge, %entry.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %6 = load i32, ptr @nr_cpu_ids, align 4
  %call.i = tail call i32 @_find_first_bit_be(ptr noundef nonnull @__cpu_online_mask, i32 noundef %6) #15
  %conv = trunc i32 %call.i to i16
  %col_idx = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %7 = ptrtoint ptr %col_idx to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv, ptr %col_idx, align 4
  %.pn26 = load ptr, ptr @its_nodes, align 4
  %cmp.not28 = icmp eq ptr %.pn26, @its_nodes
  br i1 %cmp.not28, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %8 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %col.i = getelementptr inbounds %struct.anon.98, ptr %desc.i, i32 0, i32 1
  %9 = getelementptr inbounds i8, ptr %desc.i23, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn29 = phi ptr [ %.pn26, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %typer = getelementptr i8, ptr %.pn29, i32 240
  %10 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %typer, align 8
  %and = and i64 %11, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end6

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.end6:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %its.030 = getelementptr i8, ptr %.pn29, i32 -136
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %12 = call ptr @memset(ptr %8, i32 255, i32 12)
  %13 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %1, ptr %desc.i, align 4
  %14 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %8, align 4
  %collections.i = getelementptr i8, ptr %.pn29, i32 224
  %15 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %collections.i, align 8
  %17 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %col_idx, align 4
  %idxprom.i = zext i16 %18 to i32
  %arrayidx.i = getelementptr %struct.its_collection, ptr %16, i32 %idxprom.i
  %19 = ptrtoint ptr %col.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %arrayidx.i, ptr %col.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %its.030, ptr noundef nonnull @its_build_vmapp_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i23) #15
  %20 = call ptr @memset(ptr %9, i32 255, i32 16)
  %21 = ptrtoint ptr %desc.i23 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %1, ptr %desc.i23, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %its.030, ptr noundef nonnull @its_build_vinvall_cmd, ptr noundef nonnull %desc.i23) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i23) #15
  br label %for.inc

for.inc:                                          ; preds = %if.end6, %for.body.for.inc_crit_edge
  %22 = ptrtoint ptr %.pn29 to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn = load ptr, ptr %.pn29, align 4
  %cmp.not = icmp eq ptr %.pn, @its_nodes
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %23 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %col_idx, align 4
  %conv12 = zext i16 %24 to i32
  %rem.i = and i32 %conv12, 31
  %add.i = add nuw nsw i32 %rem.i, 1
  %arrayidx.i24 = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i
  %div3.i = lshr i32 %conv12, 5
  %idx.neg.i = sub nsw i32 0, %div3.i
  %add.ptr.i = getelementptr i32, ptr %arrayidx.i24, i32 %idx.neg.i
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %25 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %common.i, align 4
  %effective_affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %effective_affinity.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %effective_affinity.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %29, 31
  %30 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %30, 536870908
  %31 = call ptr @memcpy(ptr %28, ptr %add.ptr.i, i32 %mul.i.i.i)
  br label %cleanup

cleanup:                                          ; preds = %for.end, %gic_requires_eager_mapping.exit.cleanup_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_irq_domain_deactivate(ptr nocapture noundef readnone %domain, ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %2 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %entry.for.cond.preheader_crit_edge, label %lor.lhs.false.i

entry.for.cond.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.preheader

lor.lhs.false.i:                                  ; preds = %entry
  %3 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i = getelementptr inbounds %struct.rdists, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %has_rvpeid.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %has_rvpeid.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool1.not.i.not = icmp eq i8 %5, 0
  br i1 %tobool1.not.i.not, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false.i.for.cond.preheader_crit_edge

lor.lhs.false.i.for.cond.preheader_crit_edge:     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.preheader

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.cond.preheader:                               ; preds = %lor.lhs.false.i.for.cond.preheader_crit_edge, %entry.for.cond.preheader_crit_edge
  %.pn27 = load ptr, ptr @its_nodes, align 4
  %cmp.not29 = icmp eq ptr %.pn27, @its_nodes
  br i1 %cmp.not29, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %6 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %col.i = getelementptr inbounds %struct.anon.98, ptr %desc.i, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn30 = phi ptr [ %.pn27, %for.body.lr.ph ], [ %.pn, %for.inc.for.body_crit_edge ]
  %typer = getelementptr i8, ptr %.pn30, i32 240
  %7 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %typer, align 8
  %and = and i64 %8, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end4

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc

if.end4:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %its.032 = getelementptr i8, ptr %.pn30, i32 -136
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %9 = call ptr @memset(ptr %6, i32 255, i32 12)
  %10 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %1, ptr %desc.i, align 4
  %11 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %6, align 4
  %collections.i = getelementptr i8, ptr %.pn30, i32 224
  %12 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %collections.i, align 8
  %14 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %col_idx.i, align 4
  %idxprom.i = zext i16 %15 to i32
  %arrayidx.i = getelementptr %struct.its_collection, ptr %13, i32 %idxprom.i
  %16 = ptrtoint ptr %col.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %arrayidx.i, ptr %col.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %its.032, ptr noundef nonnull @its_build_vmapp_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %for.inc

for.inc:                                          ; preds = %if.end4, %for.body.for.inc_crit_edge
  %17 = ptrtoint ptr %.pn30 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn = load ptr, ptr %.pn30, align 4
  %cmp.not = icmp eq ptr %.pn, @its_nodes
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %18 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i24 = icmp eq ptr %18, null
  br i1 %tobool.not.i24, label %for.end.for.cond.i_crit_edge, label %for.end.if.end8.i_crit_edge

for.end.if.end8.i_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i

for.end.for.cond.i_crit_edge:                     ; preds = %for.end
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %for.end.for.cond.i_crit_edge
  %.pn.in.i = phi ptr [ %.pn.i, %for.body.i.for.cond.i_crit_edge ], [ @its_nodes, %for.end.for.cond.i_crit_edge ]
  %19 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp.not.i, label %for.end.i, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %typer.i = getelementptr i8, ptr %.pn.i, i32 240
  %20 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %typer.i, align 8
  %and.i = and i64 %21, 1099511627776
  %tobool2.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool2.not.i, label %for.body.i.for.cond.i_crit_edge, label %return.loopexit.i

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i

for.end.i:                                        ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i

if.end8.i:                                        ; preds = %for.end.i, %for.end.if.end8.i_crit_edge
  %22 = load ptr, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit

return.loopexit.i:                                ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i = getelementptr i8, ptr %.pn.i, i32 -136
  store ptr %storemerge.le11.i, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit

find_4_1_its.exit:                                ; preds = %return.loopexit.i, %if.end8.i
  %retval.0.i25 = phi ptr [ %22, %if.end8.i ], [ %storemerge.le11.i, %return.loopexit.i ]
  %tobool10.not = icmp eq ptr %retval.0.i25, null
  br i1 %tobool10.not, label %find_4_1_its.exit.cleanup_crit_edge, label %land.lhs.true

find_4_1_its.exit.cleanup_crit_edge:              ; preds = %find_4_1_its.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true:                                    ; preds = %find_4_1_its.exit
  %vmapp_count = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 3
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %vmapp_count, i32 noundef 4) #15
  %23 = ptrtoint ptr %vmapp_count to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %vmapp_count, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool12.not = icmp eq i32 %24, 0
  br i1 %tobool12.not, label %if.then13, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then13:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %25 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  %26 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %1, align 4
  %call14 = call ptr @page_address(ptr noundef %27) #15
  %28 = load i32, ptr @lpi_id_bits, align 4
  %shl = shl nuw i32 1, %28
  %div23 = lshr i32 %shl, 3
  %add = add nuw nsw i32 %div23, 65535
  %and15 = and i32 %add, 1073676288
  call void %25(ptr noundef %call14, i32 noundef %and15) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %land.lhs.true.cleanup_crit_edge, %find_4_1_its.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_mask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %parent_data = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 6
  %0 = ptrtoint ptr %parent_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent_data, align 4
  tail call fastcc void @lpi_write_config(ptr noundef %1, i8 noundef zeroext 1, i8 noundef zeroext 0)
  tail call fastcc void @its_vpe_send_inv(ptr noundef %d)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_unmask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %parent_data = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 6
  %0 = ptrtoint ptr %parent_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent_data, align 4
  tail call fastcc void @lpi_write_config(ptr noundef %1, i8 noundef zeroext 0, i8 noundef zeroext 1)
  tail call fastcc void @its_vpe_send_inv(ptr noundef %d)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_set_affinity(ptr nocapture noundef readonly %d, ptr noundef %mask_val, i1 noundef zeroext %force) #0 align 64 {
entry:
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %2 = load i32, ptr @nr_cpu_ids, align 4
  %call.i = tail call i32 @_find_first_bit_be(ptr noundef %mask_val, i32 noundef %2) #15
  %vpe_lock.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 8
  %call.i32 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %vpe_lock.i) #15
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %3 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %col_idx.i, align 4
  %conv1.i = zext i16 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i, i32 %conv1.i)
  %cmp = icmp eq i32 %call.i, %conv1.i
  br i1 %cmp, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end:                                           ; preds = %entry
  %conv = trunc i32 %call.i to i16
  %5 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %col_idx.i, align 4
  %6 = load ptr, ptr @gic_rdists, align 4
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  %9 = ptrtoint ptr %8 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call.i
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, %9
  %12 = inttoptr i32 %add to ptr
  %vpe_table_mask = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %vpe_table_mask to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %vpe_table_mask, align 8
  %tobool.not = icmp eq ptr %14, null
  br i1 %tobool.not, label %if.end.if.end18_crit_edge, label %land.lhs.true

if.end.if.end18_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

land.lhs.true:                                    ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %15 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %conv1.i)
  %cmp.not.i.i.i = icmp ugt i32 %15, %conv1.i
  br i1 %cmp.not.i.i.i, label %land.lhs.true.cpumask_test_cpu.exit_crit_edge, label %land.rhs.i.i.i

land.lhs.true.cpumask_test_cpu.exit_crit_edge:    ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_test_cpu.exit

land.rhs.i.i.i:                                   ; preds = %land.lhs.true
  %.b37.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i, label %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, label %if.then.i.i.i, !prof !364

land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge:   ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cpumask_test_cpu.exit

if.then.i.i.i:                                    ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.35, i32 noundef 108, i32 noundef 9, ptr noundef null) #15
  br label %cpumask_test_cpu.exit

cpumask_test_cpu.exit:                            ; preds = %if.then.i.i.i, %land.rhs.i.i.i.cpumask_test_cpu.exit_crit_edge, %land.lhs.true.cpumask_test_cpu.exit_crit_edge
  %div3.i.i = lshr i32 %conv1.i, 5
  %arrayidx.i.i = getelementptr i32, ptr %14, i32 %div3.i.i
  %16 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %conv1.i, 31
  %18 = shl nuw i32 1, %and.i.i
  %19 = and i32 %17, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool16.not = icmp eq i32 %19, 0
  br i1 %tobool16.not, label %cpumask_test_cpu.exit.if.end18_crit_edge, label %cpumask_test_cpu.exit.out_crit_edge

cpumask_test_cpu.exit.out_crit_edge:              ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

cpumask_test_cpu.exit.if.end18_crit_edge:         ; preds = %cpumask_test_cpu.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18

if.end18:                                         ; preds = %cpumask_test_cpu.exit.if.end18_crit_edge, %if.end.if.end18_crit_edge
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %20 = getelementptr inbounds i8, ptr %desc.i, i32 4
  %21 = call ptr @memset(ptr %20, i32 0, i32 16)
  %22 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %col_idx.i, align 4
  %conv.i = zext i16 %23 to i32
  %24 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %1, ptr %desc.i, align 4
  %25 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body.i

if.then.i:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  %26 = load ptr, ptr @its_nodes, align 4
  %add.ptr.i = getelementptr i8, ptr %26, i32 -136
  %collections.i = getelementptr i8, ptr %26, i32 224
  %27 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %collections.i, align 8
  %arrayidx.i = getelementptr %struct.its_collection, ptr %28, i32 %conv.i
  %29 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %arrayidx.i, ptr %20, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %add.ptr.i, ptr noundef nonnull @its_build_vmovp_cmd, ptr noundef nonnull %desc.i) #15
  br label %its_send_vmovp.exit

do.body.i:                                        ; preds = %if.end18
  %call.i34 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vmovp_lock) #15
  %30 = load i16, ptr @vmovp_seq_num, align 2
  %inc.i = add i16 %30, 1
  store i16 %inc.i, ptr @vmovp_seq_num, align 2
  %seq_num.i = getelementptr inbounds %struct.anon.101, ptr %desc.i, i32 0, i32 2
  %31 = ptrtoint ptr %seq_num.i to i32
  call void @__asan_store2_noabort(i32 %31)
  store i16 %30, ptr %seq_num.i, align 4
  %its_vm.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 1
  %32 = ptrtoint ptr %its_vm.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %its_vm.i, align 4
  %.pn14.i.i = load ptr, ptr @its_nodes, align 4
  %cmp.not15.i.i = icmp eq ptr %.pn14.i.i, @its_nodes
  br i1 %cmp.not15.i.i, label %get_its_list.exit.thread.i, label %do.body.i.for.body.i.i_crit_edge

do.body.i.for.body.i.i_crit_edge:                 ; preds = %do.body.i
  br label %for.body.i.i

get_its_list.exit.thread.i:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %its_list57.i = getelementptr inbounds %struct.anon.101, ptr %desc.i, i32 0, i32 3
  %34 = ptrtoint ptr %its_list57.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 0, ptr %its_list57.i, align 2
  br label %do.body25.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %do.body.i.for.body.i.i_crit_edge
  %.pn17.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn14.i.i, %do.body.i.for.body.i.i_crit_edge ]
  %or.i1316.i.i = phi i32 [ %or.i12.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ 0, %do.body.i.for.body.i.i_crit_edge ]
  %typer.i.i = getelementptr i8, ptr %.pn17.i.i, i32 240
  %35 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %typer.i.i, align 8
  %and.i.i35 = and i64 %36, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i35)
  %tobool.not.i.i = icmp eq i64 %and.i.i35, 0
  br i1 %tobool.not.i.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %37 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i.i = getelementptr inbounds %struct.rdists, ptr %37, i32 0, i32 8
  %38 = ptrtoint ptr %has_rvpeid.i.i.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %has_rvpeid.i.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool.not.i.i.i = icmp eq i8 %39, 0
  br i1 %tobool.not.i.i.i, label %require_its_list_vmovp.exit.i.i, label %if.end.i.i.if.then2.i.i_crit_edge

if.end.i.i.if.then2.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then2.i.i

require_its_list_vmovp.exit.i.i:                  ; preds = %if.end.i.i
  %list_nr.i.i.i = getelementptr i8, ptr %.pn17.i.i, i32 280
  %40 = ptrtoint ptr %list_nr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %list_nr.i.i.i, align 8
  %arrayidx.i.i.i = getelementptr %struct.its_vm, ptr %33, i32 0, i32 8, i32 %41
  %42 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool1.i.not.i.i = icmp eq i32 %43, 0
  br i1 %tobool1.i.not.i.i, label %require_its_list_vmovp.exit.i.i.for.inc.i.i_crit_edge, label %require_its_list_vmovp.exit.i.i.if.then2.i.i_crit_edge

require_its_list_vmovp.exit.i.i.if.then2.i.i_crit_edge: ; preds = %require_its_list_vmovp.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then2.i.i

require_its_list_vmovp.exit.i.i.for.inc.i.i_crit_edge: ; preds = %require_its_list_vmovp.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i.i

if.then2.i.i:                                     ; preds = %require_its_list_vmovp.exit.i.i.if.then2.i.i_crit_edge, %if.end.i.i.if.then2.i.i_crit_edge
  %list_nr.i.i = getelementptr i8, ptr %.pn17.i.i, i32 280
  %44 = ptrtoint ptr %list_nr.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %list_nr.i.i, align 8
  %rem.i.i.i = and i32 %45, 31
  %shl.i.i.i = shl nuw i32 1, %rem.i.i.i
  %or.i.i.i = or i32 %shl.i.i.i, %or.i1316.i.i
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.then2.i.i, %require_its_list_vmovp.exit.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %or.i12.i.i = phi i32 [ %or.i1316.i.i, %require_its_list_vmovp.exit.i.i.for.inc.i.i_crit_edge ], [ %or.i.i.i, %if.then2.i.i ], [ %or.i1316.i.i, %for.body.i.i.for.inc.i.i_crit_edge ]
  %46 = ptrtoint ptr %.pn17.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %.pn.i.i = load ptr, ptr %.pn17.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.body.lr.ph.i, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.body.lr.ph.i:                                 ; preds = %for.inc.i.i
  %conv.i.i = trunc i32 %or.i12.i.i to i16
  %its_list.i = getelementptr inbounds %struct.anon.101, ptr %desc.i, i32 0, i32 3
  %47 = ptrtoint ptr %its_list.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 %conv.i.i, ptr %its_list.i, align 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn52.i = phi ptr [ %.pn14.i.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %its.053.i = getelementptr i8, ptr %.pn52.i, i32 -136
  %typer.i = getelementptr i8, ptr %.pn52.i, i32 240
  %48 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %typer.i, align 8
  %and.i = and i64 %49, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool11.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool11.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end13.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end13.i:                                       ; preds = %for.body.i
  %50 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i.i = getelementptr inbounds %struct.rdists, ptr %50, i32 0, i32 8
  %51 = ptrtoint ptr %has_rvpeid.i.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %has_rvpeid.i.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %52)
  %tobool.not.i47.i = icmp eq i8 %52, 0
  br i1 %tobool.not.i47.i, label %require_its_list_vmovp.exit.i, label %if.end13.i.if.end17.i_crit_edge

if.end13.i.if.end17.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

require_its_list_vmovp.exit.i:                    ; preds = %if.end13.i
  %53 = ptrtoint ptr %its_vm.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %its_vm.i, align 4
  %list_nr.i48.i = getelementptr i8, ptr %.pn52.i, i32 280
  %55 = ptrtoint ptr %list_nr.i48.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %list_nr.i48.i, align 8
  %arrayidx.i.i36 = getelementptr %struct.its_vm, ptr %54, i32 0, i32 8, i32 %56
  %57 = ptrtoint ptr %arrayidx.i.i36 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %arrayidx.i.i36, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool1.i.not.i = icmp eq i32 %58, 0
  br i1 %tobool1.i.not.i, label %require_its_list_vmovp.exit.i.for.inc.i_crit_edge, label %require_its_list_vmovp.exit.i.if.end17.i_crit_edge

require_its_list_vmovp.exit.i.if.end17.i_crit_edge: ; preds = %require_its_list_vmovp.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end17.i

require_its_list_vmovp.exit.i.for.inc.i_crit_edge: ; preds = %require_its_list_vmovp.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end17.i:                                       ; preds = %require_its_list_vmovp.exit.i.if.end17.i_crit_edge, %if.end13.i.if.end17.i_crit_edge
  %collections18.i = getelementptr i8, ptr %.pn52.i, i32 224
  %59 = ptrtoint ptr %collections18.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %collections18.i, align 8
  %arrayidx19.i = getelementptr %struct.its_collection, ptr %60, i32 %conv.i
  %61 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %arrayidx19.i, ptr %20, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %its.053.i, ptr noundef nonnull @its_build_vmovp_cmd, ptr noundef nonnull %desc.i) #15
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end17.i, %require_its_list_vmovp.exit.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %62 = ptrtoint ptr %.pn52.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %.pn.i = load ptr, ptr %.pn52.i, align 4
  %cmp9.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp9.not.i, label %for.inc.i.do.body25.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.do.body25.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body25.i

do.body25.i:                                      ; preds = %for.inc.i.do.body25.i_crit_edge, %get_its_list.exit.thread.i
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vmovp_lock, i32 noundef %call.i34) #15
  br label %its_send_vmovp.exit

its_send_vmovp.exit:                              ; preds = %do.body25.i, %if.then.i
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  %63 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid.i = getelementptr inbounds %struct.rdists, ptr %63, i32 0, i32 8
  %64 = ptrtoint ptr %has_rvpeid.i to i32
  call void @__asan_load1_noabort(i32 %64)
  %65 = load i8, ptr %has_rvpeid.i, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %tobool.not.i37 = icmp eq i8 %65, 0
  br i1 %tobool.not.i37, label %if.end.i, label %its_send_vmovp.exit.out_crit_edge

its_send_vmovp.exit.out_crit_edge:                ; preds = %its_send_vmovp.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end.i:                                         ; preds = %its_send_vmovp.exit
  %has_direct_lpi.i = getelementptr inbounds %struct.rdists, ptr %63, i32 0, i32 9
  %66 = ptrtoint ptr %has_direct_lpi.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %has_direct_lpi.i, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %tobool1.not.i = icmp eq i8 %67, 0
  br i1 %tobool1.not.i, label %do.body5.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %68 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %63, align 8
  %70 = ptrtoint ptr %69 to i32
  %arrayidx.i38 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv1.i
  %71 = ptrtoint ptr %arrayidx.i38 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %arrayidx.i38, align 4
  %add.i = add i32 %72, %70
  %73 = inttoptr i32 %add.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %73, i32 0, i32 1
  %74 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %rd_base.i, align 4
  %vpe_db_lpi.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 4
  %76 = ptrtoint ptr %vpe_db_lpi.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %vpe_db_lpi.i, align 4
  %78 = call i32 @llvm.bswap.i32(i32 %77) #15
  %add.ptr.i39 = getelementptr i8, ptr %75, i32 72
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i39, i32 %78) #15, !srcloc !362
  %add.ptr.i.i = getelementptr i8, ptr %75, i32 192
  %79 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %80 = and i32 %79, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.not5.i.i = icmp eq i32 %80, 0
  br i1 %tobool.not5.i.i, label %if.then2.i.out_crit_edge, label %if.then2.i.do.end.i.i_crit_edge

if.then2.i.do.end.i.i_crit_edge:                  ; preds = %if.then2.i
  br label %do.end.i.i

if.then2.i.out_crit_edge:                         ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %if.then2.i.do.end.i.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !386
  call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !387
  %81 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %82 = and i32 %81, 16777216
  %tobool.not.i.i40 = icmp eq i32 %82, 0
  br i1 %tobool.not.i.i40, label %do.end.i.i.out_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i.i

do.end.i.i.out_crit_edge:                         ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

do.body5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i41 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vpe_proxy) #15
  call fastcc void @its_vpe_db_proxy_map_locked(ptr noundef %1) #15
  %83 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %83, i32 0, i32 1
  %84 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %its.i, align 4
  %collections.i42 = getelementptr inbounds %struct.its_node, ptr %85, i32 0, i32 9
  %86 = ptrtoint ptr %collections.i42 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %collections.i42, align 8
  %arrayidx9.i = getelementptr %struct.its_collection, ptr %87, i32 %call.i
  %88 = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7
  %89 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %88, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %91 = getelementptr inbounds i8, ptr %desc.i.i, i32 12
  %92 = ptrtoint ptr %91 to i32
  call void @__asan_storeN_noabort(i32 %92, i32 8)
  store i64 -1, ptr %91, align 4
  %93 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %83, ptr %desc.i.i, align 4
  %col2.i.i = getelementptr inbounds %struct.anon.94, ptr %desc.i.i, i32 0, i32 1
  %94 = ptrtoint ptr %col2.i.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %arrayidx9.i, ptr %col2.i.i, align 4
  %event_id.i.i = getelementptr inbounds %struct.anon.94, ptr %desc.i.i, i32 0, i32 2
  %95 = ptrtoint ptr %event_id.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %90, ptr %event_id.i.i, align 4
  %96 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %97, ptr noundef nonnull @its_build_movi_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  %98 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %col_map.i = getelementptr inbounds %struct.its_device, ptr %98, i32 0, i32 2, i32 1
  %99 = ptrtoint ptr %col_map.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %col_map.i, align 4
  %101 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %88, align 4
  %arrayidx12.i = getelementptr i16, ptr %100, i32 %102
  %103 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_store2_noabort(i32 %103)
  store i16 %conv, ptr %arrayidx12.i, align 2
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vpe_proxy, i32 noundef %call.i41) #15
  br label %out

out:                                              ; preds = %do.body5.i, %do.end.i.i.out_crit_edge, %if.then2.i.out_crit_edge, %its_send_vmovp.exit.out_crit_edge, %cpumask_test_cpu.exit.out_crit_edge, %entry.out_crit_edge
  %rem.i = and i32 %call.i, 31
  %add.i43 = add nuw nsw i32 %rem.i, 1
  %arrayidx.i44 = getelementptr [33 x [1 x i32]], ptr @cpu_bit_bitmap, i32 0, i32 %add.i43
  %div3.i = lshr i32 %call.i, 5
  %idx.neg.i = sub nsw i32 0, %div3.i
  %add.ptr.i45 = getelementptr i32, ptr %arrayidx.i44, i32 %idx.neg.i
  %common.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 3
  %104 = ptrtoint ptr %common.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %common.i, align 4
  %effective_affinity.i = getelementptr inbounds %struct.irq_common_data, ptr %105, i32 0, i32 4
  %106 = ptrtoint ptr %effective_affinity.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %effective_affinity.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %108 = load i32, ptr @nr_cpu_ids, align 4
  %sub.i.i.i = add i32 %108, 31
  %109 = lshr i32 %sub.i.i.i, 3
  %mul.i.i.i = and i32 %109, 536870908
  %110 = call ptr @memcpy(ptr %107, ptr %add.ptr.i45, i32 %mul.i.i.i)
  call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i, i32 noundef %call.i32) #15
  ret i32 2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_retrigger(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @its_vpe_set_irqchip_state(ptr noundef %d, i32 noundef 0, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %lnot.ext = zext i1 %tobool.not to i32
  ret i32 %lnot.ext
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_set_irqchip_state(ptr nocapture noundef readonly %d, i32 noundef %which, i1 noundef zeroext %state) #0 align 64 {
entry:
  %desc.i23 = alloca %struct.its_cmd_desc, align 4
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %which)
  %cmp.not = icmp eq i32 %which, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr @gic_rdists, align 4
  %has_direct_lpi = getelementptr inbounds %struct.rdists, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %has_direct_lpi to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %has_direct_lpi, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.else9, label %if.then1

if.then1:                                         ; preds = %if.end
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 8
  %7 = ptrtoint ptr %6 to i32
  %col_idx = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %8 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %col_idx, align 4
  %idxprom = zext i16 %9 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %idxprom
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, %7
  %12 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rd_base, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 4
  %15 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %vpe_db_lpi, align 4
  %17 = tail call i32 @llvm.bswap.i32(i32 %16)
  br i1 %state, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr = getelementptr i8, ptr %14, i32 64
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %17) #15, !srcloc !362
  br label %cleanup

if.else:                                          ; preds = %if.then1
  %add.ptr7 = getelementptr i8, ptr %14, i32 72
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr7, i32 %17) #15, !srcloc !362
  %add.ptr.i = getelementptr i8, ptr %14, i32 192
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %19 = and i32 %18, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not5.i = icmp eq i32 %19, 0
  br i1 %tobool.not5.i, label %if.else.cleanup_crit_edge, label %if.else.do.end.i_crit_edge

if.else.do.end.i_crit_edge:                       ; preds = %if.else
  br label %do.end.i

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %if.else.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !386
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !387
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %21 = and i32 %20, 16777216
  %tobool.not.i = icmp eq i32 %21, 0
  br i1 %tobool.not.i, label %do.end.i.cleanup_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.else9:                                         ; preds = %if.end
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vpe_proxy) #15
  tail call fastcc void @its_vpe_db_proxy_map_locked(ptr noundef %1) #15
  %22 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %23 = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7
  %24 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %23, align 4
  br i1 %state, label %if.then11, label %if.else12

if.then11:                                        ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %26 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %27 = call ptr @memset(ptr %26, i32 255, i32 12)
  %28 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %22, ptr %desc.i, align 4
  %event_id2.i = getelementptr inbounds %struct.anon.90, ptr %desc.i, i32 0, i32 1
  %29 = ptrtoint ptr %event_id2.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %25, ptr %event_id2.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %22, i32 0, i32 1
  %30 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %31, ptr noundef nonnull @its_build_int_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vpe_proxy, i32 noundef %call.i) #15
  br label %cleanup

if.else12:                                        ; preds = %if.else9
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i23) #15
  %32 = getelementptr inbounds i8, ptr %desc.i23, i32 8
  %33 = call ptr @memset(ptr %32, i32 255, i32 12)
  %34 = ptrtoint ptr %desc.i23 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %22, ptr %desc.i23, align 4
  %event_id2.i24 = getelementptr inbounds %struct.anon.89, ptr %desc.i23, i32 0, i32 1
  %35 = ptrtoint ptr %event_id2.i24 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %25, ptr %event_id2.i24, align 4
  %its.i25 = getelementptr inbounds %struct.its_device, ptr %22, i32 0, i32 1
  %36 = ptrtoint ptr %its.i25 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %its.i25, align 4
  call fastcc void @its_send_single_command(ptr noundef %37, ptr noundef nonnull @its_build_clear_cmd, ptr noundef nonnull %desc.i23) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i23) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vpe_proxy, i32 noundef %call.i) #15
  br label %cleanup

cleanup:                                          ; preds = %if.else12, %if.then11, %do.end.i.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %if.then4 ], [ 0, %if.then11 ], [ 0, %if.else12 ], [ 0, %if.else.cleanup_crit_edge ], [ 0, %do.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_set_vcpu_affinity(ptr nocapture noundef readonly %d, ptr nocapture noundef readonly %vcpu_info) #0 align 64 {
entry:
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %2 = ptrtoint ptr %vcpu_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vcpu_info, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.153)
  switch i32 %3, label %entry.cleanup_crit_edge [
    i32 4, label %sw.bb
    i32 5, label %sw.bb1
    i32 6, label %sw.bb2
    i32 7, label %sw.bb3
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %5 = load ptr, ptr @gic_rdists, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %14, %8
  %15 = inttoptr i32 %add.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rd_base.i, align 4
  %its_vm.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 1
  %18 = ptrtoint ptr %its_vm.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %its_vm.i, align 4
  %vprop_page.i = getelementptr inbounds %struct.its_vm, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %vprop_page.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vprop_page.i, align 4
  %call2.i = tail call ptr @page_address(ptr noundef %21) #15
  %22 = ptrtoint ptr %call2.i to i32
  %call.i.i = tail call i32 @__virt_to_phys(i32 noundef %22) #15
  %23 = and i32 %call.i.i, -4096
  %24 = load i32, ptr @lpi_id_bits, align 4
  %sub.i = add i32 %24, 31
  %and4.i = and i32 %sub.i, 31
  %or32.i = or i32 %23, %and4.i
  %25 = or i32 %or32.i, 1408
  %add.ptr8.i = getelementptr i8, ptr %17, i32 131184
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr8.i, i32 %26) #15, !srcloc !362
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 131188
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #15, !srcloc !362
  %27 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %1, align 4
  %call9.i = tail call ptr @page_address(ptr noundef %28) #15
  %29 = ptrtoint ptr %call9.i to i32
  %call.i33.i = tail call i32 @__virt_to_phys(i32 noundef %29) #15
  %idai.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 1
  %30 = ptrtoint ptr %idai.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %idai.i, align 4, !range !365
  %add.ptr.i34.i = getelementptr i8, ptr %17, i32 131196
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i34.i) #15, !srcloc !361
  %33 = tail call i32 @llvm.bswap.i32(i32 %32) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %33)
  %tobool.not.i.i = icmp sgt i32 %33, -1
  br i1 %tobool.not.i.i, label %sw.bb.its_vpe_schedule.exit_crit_edge, label %if.then.i.i

sw.bb.its_vpe_schedule.exit_crit_edge:            ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_schedule.exit

if.then.i.i:                                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  %and3.i.i = and i32 %33, 2147483647
  %34 = tail call i32 @llvm.bswap.i32(i32 %and3.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i34.i, i32 %34) #15, !srcloc !362
  br label %its_vpe_schedule.exit

its_vpe_schedule.exit:                            ; preds = %if.then.i.i, %sw.bb.its_vpe_schedule.exit_crit_edge
  %add.ptr19.i = getelementptr i8, ptr %17, i32 131192
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool.not.i = icmp eq i8 %31, 0
  %cond.i = select i1 %tobool.not.i, i64 0, i64 4611686018427387904
  %35 = and i32 %call.i33.i, -65536
  %or14.i = zext i32 %35 to i64
  %or15.i = or i64 %cond.i, %or14.i
  %or18.i = or i64 %or15.i, -6917529027641079936
  %conv.i.i.i = trunc i64 %or18.i to i32
  %36 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr19.i, i32 %36) #15, !srcloc !362
  %sum.shift.i = lshr i64 %or18.i, 56
  %37 = trunc i64 %sum.shift.i to i32
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i34.i, i32 %37) #15, !srcloc !362
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %38 = load ptr, ptr @gic_rdists, align 4
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %38, align 8
  %41 = ptrtoint ptr %40 to i32
  %42 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i7 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i7 to ptr
  %cpu.i8 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %cpu.i8 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cpu.i8, align 4
  %arrayidx.i9 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %45
  %46 = ptrtoint ptr %arrayidx.i9 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.i9, align 4
  %add.i10 = add i32 %47, %41
  %48 = inttoptr i32 %add.i10 to ptr
  %rd_base.i11 = getelementptr inbounds %struct.anon, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %rd_base.i11 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %rd_base.i11, align 4
  %add.ptr.i = getelementptr i8, ptr %50, i32 131072
  %call2.i12 = tail call fastcc i64 @its_clear_vpend_valid(ptr noundef %add.ptr.i, i64 noundef 0, i64 noundef 0) #15
  %idai.i13 = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7, i32 0, i32 1
  %and.i = lshr i64 %call2.i12, 62
  %51 = trunc i64 %and.i to i8
  %52 = and i8 %51, 1
  %53 = ptrtoint ptr %idai.i13 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %52, ptr %idai.i13, align 4
  %pending_last.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 11
  %and4.i14 = lshr i64 %call2.i12, 61
  %54 = trunc i64 %and4.i14 to i8
  %55 = and i8 %54, 1
  %56 = ptrtoint ptr %pending_last.i to i32
  call void @__asan_store1_noabort(i32 %56)
  store i8 %55, ptr %pending_last.i, align 4
  br label %cleanup

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_wait_vpt_parse_complete()
  br label %cleanup

sw.bb3:                                           ; preds = %entry
  %.pn16.i = load ptr, ptr @its_nodes, align 4
  %cmp.not17.i = icmp eq ptr %.pn16.i, @its_nodes
  br i1 %cmp.not17.i, label %sw.bb3.cleanup_crit_edge, label %for.body.lr.ph.i

sw.bb3.cleanup_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %sw.bb3
  %its_vm.i15 = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn18.i = phi ptr [ %.pn16.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %typer.i = getelementptr i8, ptr %.pn18.i, i32 240
  %57 = ptrtoint ptr %typer.i to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %typer.i, align 8
  %and.i16 = and i64 %58, 2
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i16)
  %tobool.not.i17 = icmp eq i64 %and.i16, 0
  br i1 %tobool.not.i17, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %59 = load i32, ptr @its_list_map, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %tobool2.not.i = icmp eq i32 %59, 0
  br i1 %tobool2.not.i, label %if.end.i.if.end5.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %60 = ptrtoint ptr %its_vm.i15 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %its_vm.i15, align 4
  %list_nr.i = getelementptr i8, ptr %.pn18.i, i32 280
  %62 = ptrtoint ptr %list_nr.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %list_nr.i, align 8
  %arrayidx.i18 = getelementptr %struct.its_vm, ptr %61, i32 0, i32 8, i32 %63
  %64 = ptrtoint ptr %arrayidx.i18 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx.i18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool3.not.i = icmp eq i32 %65, 0
  br i1 %tobool3.not.i, label %land.lhs.true.i.for.inc.i_crit_edge, label %land.lhs.true.i.if.end5.i_crit_edge

land.lhs.true.i.if.end5.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.inc.i

if.end5.i:                                        ; preds = %land.lhs.true.i.if.end5.i_crit_edge, %if.end.i.if.end5.i_crit_edge
  %its.0.le.i = getelementptr i8, ptr %.pn18.i, i32 -136
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %66 = getelementptr inbounds i8, ptr %desc.i.i, i32 4
  %67 = call ptr @memset(ptr %66, i32 255, i32 16)
  %68 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %1, ptr %desc.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef %its.0.le.i, ptr noundef nonnull @its_build_vinvall_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  br label %cleanup

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %69 = ptrtoint ptr %.pn18.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %.pn.i = load ptr, ptr %.pn18.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, @its_nodes
  br i1 %cmp.not.i, label %for.inc.i.cleanup_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.inc.i.cleanup_crit_edge:                      ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %for.inc.i.cleanup_crit_edge, %if.end5.i, %sw.bb3.cleanup_crit_edge, %sw.bb2, %sw.bb1, %its_vpe_schedule.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.bb2 ], [ 0, %sw.bb1 ], [ 0, %its_vpe_schedule.exit ], [ -22, %entry.cleanup_crit_edge ], [ 0, %sw.bb3.cleanup_crit_edge ], [ 0, %if.end5.i ], [ 0, %for.inc.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_vpe_send_inv(ptr nocapture noundef readonly %d) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %2 = load ptr, ptr @gic_rdists, align 4
  %has_direct_lpi = getelementptr inbounds %struct.rdists, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %has_direct_lpi to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %has_direct_lpi, align 2, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not = icmp eq i8 %4, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %5 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %2, align 8
  %7 = ptrtoint ptr %6 to i32
  %col_idx = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %8 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %col_idx, align 4
  %idxprom = zext i16 %9 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %idxprom
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %add = add i32 %11, %7
  %12 = inttoptr i32 %add to ptr
  tail call void @_raw_spin_lock(ptr noundef %12) #15
  %13 = load ptr, ptr @gic_rdists, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 8
  %16 = ptrtoint ptr %15 to i32
  %17 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %col_idx, align 4
  %idxprom11 = zext i16 %18 to i32
  %arrayidx12 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %idxprom11
  %19 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx12, align 4
  %add13 = add i32 %20, %16
  %21 = inttoptr i32 %add13 to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rd_base, align 4
  %parent_data = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 6
  %24 = ptrtoint ptr %parent_data to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %parent_data, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %25, i32 0, i32 2
  %26 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %hwirq, align 4
  %28 = tail call i32 @llvm.bswap.i32(i32 %27)
  %add.ptr = getelementptr i8, ptr %23, i32 160
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %28) #15, !srcloc !362
  %add.ptr.i = getelementptr i8, ptr %23, i32 192
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %30 = and i32 %29, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.not5.i = icmp eq i32 %30, 0
  br i1 %tobool.not5.i, label %if.then.wait_for_syncr.exit_crit_edge, label %if.then.do.end.i_crit_edge

if.then.do.end.i_crit_edge:                       ; preds = %if.then
  br label %do.end.i

if.then.wait_for_syncr.exit_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %wait_for_syncr.exit

do.end.i:                                         ; preds = %do.end.i.do.end.i_crit_edge, %if.then.do.end.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !386
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !387
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %32 = and i32 %31, 16777216
  %tobool.not.i = icmp eq i32 %32, 0
  br i1 %tobool.not.i, label %do.end.i.wait_for_syncr.exit_crit_edge, label %do.end.i.do.end.i_crit_edge

do.end.i.do.end.i_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i

do.end.i.wait_for_syncr.exit_crit_edge:           ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %wait_for_syncr.exit

wait_for_syncr.exit:                              ; preds = %do.end.i.wait_for_syncr.exit_crit_edge, %if.then.wait_for_syncr.exit_crit_edge
  %33 = load ptr, ptr @gic_rdists, align 4
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %33, align 8
  %36 = ptrtoint ptr %35 to i32
  %37 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %col_idx, align 4
  %idxprom23 = zext i16 %38 to i32
  %arrayidx24 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %idxprom23
  %39 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx24, align 4
  %add25 = add i32 %40, %36
  %41 = inttoptr i32 %add25 to ptr
  tail call void @_raw_spin_unlock(ptr noundef %41) #15
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @vpe_proxy) #15
  tail call fastcc void @its_vpe_db_proxy_map_locked(ptr noundef %1) #15
  %42 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %43 = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 7
  %44 = ptrtoint ptr %43 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %43, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %46 = getelementptr inbounds i8, ptr %desc.i, i32 8
  %47 = call ptr @memset(ptr %46, i32 255, i32 12)
  %48 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %42, ptr %desc.i, align 4
  %event_id2.i = getelementptr inbounds %struct.anon.88, ptr %desc.i, i32 0, i32 1
  %49 = ptrtoint ptr %event_id2.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %45, ptr %event_id2.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %42, i32 0, i32 1
  %50 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %51, ptr noundef nonnull @its_build_inv_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @vpe_proxy, i32 noundef %call.i) #15
  br label %if.end

if.end:                                           ; preds = %if.else, %wait_for_syncr.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_vpe_db_proxy_map_locked(ptr noundef %vpe) unnamed_addr #0 align 64 {
entry:
  %desc.i = alloca %struct.its_cmd_desc, align 4
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %has_rvpeid = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 8
  %1 = ptrtoint ptr %has_rvpeid to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %has_rvpeid, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end:                                           ; preds = %entry
  %3 = getelementptr inbounds %struct.its_vpe, ptr %vpe, i32 0, i32 7
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp.not = icmp eq i32 %5, -1
  br i1 %cmp.not, label %if.end2, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %return

if.end2:                                          ; preds = %if.end
  %6 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %7 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %arrayidx = getelementptr ptr, ptr %6, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool3.not = icmp eq ptr %9, null
  br i1 %tobool3.not, label %if.end2.if.end6_crit_edge, label %if.end.i

if.end2.if.end6_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.end.i:                                         ; preds = %if.end2
  %10 = getelementptr inbounds %struct.its_vpe, ptr %9, i32 0, i32 7
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %10, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %cmp.i = icmp eq i32 %12, -1
  br i1 %cmp.i, label %if.end.i.if.end6_crit_edge, label %if.end2.i

if.end.i.if.end6_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end6

if.end2.i:                                        ; preds = %if.end.i
  %13 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %14 = getelementptr inbounds i8, ptr %desc.i.i, i32 8
  %15 = call ptr @memset(ptr %14, i32 255, i32 12)
  %16 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %desc.i.i, align 4
  %event_id.i.i = getelementptr inbounds %struct.anon.95, ptr %desc.i.i, i32 0, i32 1
  %17 = ptrtoint ptr %event_id.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %12, ptr %event_id.i.i, align 4
  %its.i.i = getelementptr inbounds %struct.its_device, ptr %13, i32 0, i32 1
  %18 = ptrtoint ptr %its.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %its.i.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %19, ptr noundef nonnull @its_build_discard_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  %20 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %21 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %10, align 4
  %arrayidx.i = getelementptr ptr, ptr %20, i32 %22
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %arrayidx.i, align 4
  %24 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %25 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %arrayidx5.i = getelementptr ptr, ptr %24, i32 %25
  %26 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx5.i, align 4
  %tobool6.not.i = icmp eq ptr %27, null
  br i1 %tobool6.not.i, label %if.end2.i.if.end9.i_crit_edge, label %if.then7.i

if.end2.i.if.end9.i_crit_edge:                    ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9.i

if.then7.i:                                       ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %10, align 4
  store i32 %29, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then7.i, %if.end2.i.if.end9.i_crit_edge
  %30 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %10, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.end9.i, %if.end.i.if.end6_crit_edge, %if.end2.if.end6_crit_edge
  %31 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 2), align 4
  %32 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %arrayidx7 = getelementptr ptr, ptr %31, i32 %32
  %33 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %vpe, ptr %arrayidx7, align 4
  %34 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %35 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %3, align 4
  %36 = load i32, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %add = add i32 %36, 1
  %37 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %nr_ites = getelementptr inbounds %struct.its_device, ptr %37, i32 0, i32 4
  %38 = ptrtoint ptr %nr_ites to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %nr_ites, align 4
  %rem = urem i32 %add, %39
  store i32 %rem, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 3), align 4
  %col_idx = getelementptr inbounds %struct.its_vpe, ptr %vpe, i32 0, i32 9
  %40 = ptrtoint ptr %col_idx to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %col_idx, align 4
  %col_map = getelementptr inbounds %struct.its_device, ptr %37, i32 0, i32 2, i32 1
  %42 = ptrtoint ptr %col_map to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %col_map, align 4
  %44 = load i32, ptr %3, align 4
  %arrayidx10 = getelementptr i16, ptr %43, i32 %44
  %45 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store2_noabort(i32 %45)
  store i16 %41, ptr %arrayidx10, align 2
  %46 = load ptr, ptr getelementptr inbounds (%struct.anon.108, ptr @vpe_proxy, i32 0, i32 1), align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %vpe, i32 0, i32 4
  %47 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %vpe_db_lpi, align 4
  %49 = load i32, ptr %3, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i) #15
  %50 = getelementptr inbounds i8, ptr %desc.i, i32 12
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_storeN_noabort(i32 %51, i32 8)
  store i64 -1, ptr %50, align 4
  %52 = ptrtoint ptr %desc.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %46, ptr %desc.i, align 4
  %phys_id.i = getelementptr inbounds %struct.anon.93, ptr %desc.i, i32 0, i32 1
  %53 = ptrtoint ptr %phys_id.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %48, ptr %phys_id.i, align 4
  %event_id.i = getelementptr inbounds %struct.anon.93, ptr %desc.i, i32 0, i32 2
  %54 = ptrtoint ptr %event_id.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %49, ptr %event_id.i, align 4
  %its.i = getelementptr inbounds %struct.its_device, ptr %46, i32 0, i32 1
  %55 = ptrtoint ptr %its.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %its.i, align 4
  call fastcc void @its_send_single_command(ptr noundef %56, ptr noundef nonnull @its_build_mapti_cmd, ptr noundef nonnull %desc.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i) #15
  br label %return

return:                                           ; preds = %if.end6, %if.end.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_vmovp_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %col = getelementptr inbounds %struct.anon.101, ptr %desc, i32 0, i32 1
  %0 = ptrtoint ptr %col to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %col, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %1, align 8
  %vlpi_redist_offset = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 22
  %4 = ptrtoint ptr %vlpi_redist_offset to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vlpi_redist_offset, align 8
  %conv = sext i32 %5 to i64
  %add = add i64 %3, %conv
  %6 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %7, -256
  %or.i.i = or i64 %and4.i.i, 34
  store i64 %or.i.i, ptr %cmd, align 8
  %seq_num = getelementptr inbounds %struct.anon.101, ptr %desc, i32 0, i32 2
  %8 = ptrtoint ptr %seq_num to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %seq_num, align 4
  %conv.i = zext i16 %9 to i64
  %and4.i.i17 = and i64 %or.i.i, -281470681743582
  %shl6.i.i = shl nuw nsw i64 %conv.i, 32
  %or.i.i18 = or i64 %shl6.i.i, %and4.i.i17
  store i64 %or.i.i18, ptr %cmd, align 8
  %its_list = getelementptr inbounds %struct.anon.101, ptr %desc, i32 0, i32 3
  %10 = ptrtoint ptr %its_list to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %its_list, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i19 = zext i16 %11 to i64
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i20 = and i64 %13, -65536
  %or.i.i21 = or i64 %and4.i.i20, %conv.i19
  store i64 %or.i.i21, ptr %arrayidx.i, align 8
  %14 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %vpe_id, align 2
  %conv.i23 = zext i16 %17 to i64
  %and4.i.i24 = and i64 %or.i.i21, -281470681743361
  %shl6.i.i25 = shl nuw nsw i64 %conv.i23, 32
  %or.i.i26 = or i64 %shl6.i.i25, %and4.i.i24
  store i64 %or.i.i26, ptr %arrayidx.i, align 8
  %arrayidx.i27 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %18 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i27, align 8
  %and4.i.i28 = and i64 %19, -4503599627304961
  %and7.i.i = and i64 %add, 4503599627304960
  %or.i.i29 = or i64 %and4.i.i28, %and7.i.i
  store i64 %or.i.i29, ptr %arrayidx.i27, align 8
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %20 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %typer, align 8
  %and = and i64 %21, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %or.i.i31 = or i64 %or.i.i29, -9223372036854775808
  %22 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %or.i.i31, ptr %arrayidx.i27, align 8
  %23 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %desc, align 4
  %vpe_db_lpi = getelementptr inbounds %struct.its_vpe, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %vpe_db_lpi to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %vpe_db_lpi, align 4
  %arrayidx.i32 = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %conv.i33 = zext i32 %26 to i64
  %27 = ptrtoint ptr %arrayidx.i32 to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %arrayidx.i32, align 8
  %and4.i.i34 = and i64 %28, -4294967296
  %or.i.i35 = or i64 %and4.i.i34, %conv.i33
  store i64 %or.i.i35, ptr %arrayidx.i32, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %29 = tail call i64 @llvm.bswap.i64(i64 %or.i.i18) #15
  %30 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %cmd, align 8
  %31 = tail call i64 @llvm.bswap.i64(i64 %or.i.i26) #15
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %arrayidx.i, align 8
  %33 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %arrayidx.i27, align 8
  %35 = tail call i64 @llvm.bswap.i64(i64 %34) #15
  %36 = ptrtoint ptr %arrayidx.i27 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %arrayidx.i27, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %37 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %arrayidx6.i, align 8
  %39 = tail call i64 @llvm.bswap.i64(i64 %38) #15
  %40 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %39, ptr %arrayidx6.i, align 8
  %41 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %43 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %42, i32 0, i32 9
  %45 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %col_idx.i, align 4
  %conv.i36 = zext i16 %46 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %44, i32 %conv.i36
  %47 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %48, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.valid_vpe.exit_crit_edge, label %land.rhs.i.i

if.end.valid_vpe.exit_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %if.end
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %if.end.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %if.end.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %42
  ret ptr %.vpe.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @its_wait_vpt_parse_complete() unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @gic_rdists, align 4
  %has_vpend_valid_dirty = getelementptr inbounds %struct.rdists, ptr %0, i32 0, i32 10
  %1 = ptrtoint ptr %has_vpend_valid_dirty to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %has_vpend_valid_dirty, align 1, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %3 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx, align 4
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %0, align 8
  %11 = ptrtoint ptr %10 to i32
  %add = add i32 %8, %11
  %12 = inttoptr i32 %add to ptr
  %rd_base = getelementptr inbounds %struct.anon, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %rd_base to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rd_base, align 4
  %call2 = tail call i64 @ktime_get() #15
  %add.i = add i64 %call2, 500000
  %add.ptr4 = getelementptr i8, ptr %14, i32 131192
  %add.ptr.i = getelementptr i8, ptr %14, i32 131196
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr4) #15, !srcloc !361
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %17 = and i32 %16, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool6.not86 = icmp eq i32 %17, 0
  br i1 %tobool6.not86, label %if.end.cleanup_crit_edge, label %if.end.land.lhs.true_crit_edge

if.end.land.lhs.true_crit_edge:                   ; preds = %if.end
  br label %land.lhs.true

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.lhs.true:                                    ; preds = %cond.false.land.lhs.true_crit_edge, %if.end.land.lhs.true_crit_edge
  %call10 = tail call i64 @ktime_get() #15
  call void @__sanitizer_cov_trace_cmp8(i64 %call10, i64 %add.i)
  %cmp3.i = icmp sgt i64 %call10, %add.i
  br i1 %cmp3.i, label %for.end, label %cond.false

cond.false:                                       ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %18 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %18(i32 noundef 214748) #15
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr4) #15, !srcloc !361
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %21 = and i32 %20, 16
  %tobool6.not = icmp eq i32 %21, 0
  br i1 %tobool6.not, label %cond.false.cleanup_crit_edge, label %cond.false.land.lhs.true_crit_edge

cond.false.land.lhs.true_crit_edge:               ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true

cond.false.cleanup_crit_edge:                     ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

for.end:                                          ; preds = %land.lhs.true
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr4) #15, !srcloc !361
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %24 = and i32 %23, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %phi.cmp = icmp eq i32 %24, 0
  br i1 %phi.cmp, label %for.end.cleanup_crit_edge, label %land.rhs

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

land.rhs:                                         ; preds = %for.end
  %.b79 = load i1, ptr @its_wait_vpt_parse_complete.__already_done, align 1
  br i1 %.b79, label %land.rhs.cleanup_crit_edge, label %if.then35, !prof !364

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then35:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @its_wait_vpt_parse_complete.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 3822, i32 noundef 9, ptr noundef null) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %land.rhs.cleanup_crit_edge, %for.end.cleanup_crit_edge, %cond.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_4_1_mask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %parent_data = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 6
  %0 = ptrtoint ptr %parent_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent_data, align 4
  tail call fastcc void @lpi_write_config(ptr noundef %1, i8 noundef zeroext 1, i8 noundef zeroext 0)
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %2 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip_data.i.i, align 4
  %4 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %5 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %6 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %7, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %8 = load ptr, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit.i

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit.i

find_4_1_its.exit.i:                              ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %8, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  %tobool.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i, label %find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge, label %if.then.i

find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge: ; preds = %find_4_1_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_4_1_send_inv.exit

if.then.i:                                        ; preds = %find_4_1_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %9 = getelementptr inbounds i8, ptr %desc.i.i, i32 4
  %10 = call ptr @memset(ptr %9, i32 255, i32 16)
  %11 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %3, ptr %desc.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef nonnull %retval.0.i.i, ptr noundef nonnull @its_build_invdb_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  br label %its_vpe_4_1_send_inv.exit

its_vpe_4_1_send_inv.exit:                        ; preds = %if.then.i, %find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_vpe_4_1_unmask_irq(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %desc.i.i = alloca %struct.its_cmd_desc, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %parent_data = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 6
  %0 = ptrtoint ptr %parent_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent_data, align 4
  tail call fastcc void @lpi_write_config(ptr noundef %1, i8 noundef zeroext 0, i8 noundef zeroext 1)
  %chip_data.i.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %2 = ptrtoint ptr %chip_data.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip_data.i.i, align 4
  %4 = load ptr, ptr @find_4_1_its.its, align 4
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %entry.for.cond.i.i_crit_edge, label %entry.if.end8.i.i_crit_edge

entry.if.end8.i.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8.i.i

entry.for.cond.i.i_crit_edge:                     ; preds = %entry
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i.for.cond.i.i_crit_edge, %entry.for.cond.i.i_crit_edge
  %.pn.in.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.cond.i.i_crit_edge ], [ @its_nodes, %entry.for.cond.i.i_crit_edge ]
  %5 = ptrtoint ptr %.pn.in.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i.i = load ptr, ptr %.pn.in.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, @its_nodes
  br i1 %cmp.not.i.i, label %for.end.i.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %typer.i.i = getelementptr i8, ptr %.pn.i.i, i32 240
  %6 = ptrtoint ptr %typer.i.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %typer.i.i, align 8
  %and.i.i = and i64 %7, 1099511627776
  %tobool2.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool2.not.i.i, label %for.body.i.i.for.cond.i.i_crit_edge, label %return.loopexit.i.i

for.body.i.i.for.cond.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i.i

for.end.i.i:                                      ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store ptr null, ptr @find_4_1_its.its, align 4
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.end.i.i, %entry.if.end8.i.i_crit_edge
  %8 = load ptr, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit.i

return.loopexit.i.i:                              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %storemerge.le11.i.i = getelementptr i8, ptr %.pn.i.i, i32 -136
  store ptr %storemerge.le11.i.i, ptr @find_4_1_its.its, align 4
  br label %find_4_1_its.exit.i

find_4_1_its.exit.i:                              ; preds = %return.loopexit.i.i, %if.end8.i.i
  %retval.0.i.i = phi ptr [ %8, %if.end8.i.i ], [ %storemerge.le11.i.i, %return.loopexit.i.i ]
  %tobool.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i, label %find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge, label %if.then.i

find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge: ; preds = %find_4_1_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_4_1_send_inv.exit

if.then.i:                                        ; preds = %find_4_1_its.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %desc.i.i) #15
  %9 = getelementptr inbounds i8, ptr %desc.i.i, i32 4
  %10 = call ptr @memset(ptr %9, i32 255, i32 16)
  %11 = ptrtoint ptr %desc.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %3, ptr %desc.i.i, align 4
  call fastcc void @its_send_single_vcommand(ptr noundef nonnull %retval.0.i.i, ptr noundef nonnull @its_build_invdb_cmd, ptr noundef nonnull %desc.i.i) #15
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %desc.i.i) #15
  br label %its_vpe_4_1_send_inv.exit

its_vpe_4_1_send_inv.exit:                        ; preds = %if.then.i, %find_4_1_its.exit.i.its_vpe_4_1_send_inv.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_vpe_4_1_set_vcpu_affinity(ptr nocapture noundef readonly %d, ptr nocapture noundef readonly %vcpu_info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %2 = ptrtoint ptr %vcpu_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %vcpu_info, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.154)
  switch i32 %3, label %entry.cleanup_crit_edge [
    i32 4, label %sw.bb
    i32 5, label %sw.bb1
    i32 6, label %sw.bb2
    i32 7, label %sw.bb3
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %5 = load ptr, ptr @gic_rdists, align 4
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 8
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %14, %8
  %15 = inttoptr i32 %add.i to ptr
  %rd_base.i = getelementptr inbounds %struct.anon, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %rd_base.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rd_base.i, align 4
  %18 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %18, align 4, !range !365
  %g1en.i = getelementptr inbounds %struct.anon.106, ptr %18, i32 0, i32 1
  %21 = ptrtoint ptr %g1en.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %g1en.i, align 1, !range !365
  %vpe_id.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 10
  %23 = ptrtoint ptr %vpe_id.i to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %vpe_id.i, align 2
  %add.ptr.i.i = getelementptr i8, ptr %17, i32 131196
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #15, !srcloc !361
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %26)
  %tobool.not.i.i = icmp sgt i32 %26, -1
  br i1 %tobool.not.i.i, label %sw.bb.its_vpe_4_1_schedule.exit_crit_edge, label %if.then.i.i

sw.bb.its_vpe_4_1_schedule.exit_crit_edge:        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_4_1_schedule.exit

if.then.i.i:                                      ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  %and3.i.i = and i32 %26, 2147483647
  %27 = tail call i32 @llvm.bswap.i32(i32 %and3.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %27) #15, !srcloc !362
  br label %its_vpe_4_1_schedule.exit

its_vpe_4_1_schedule.exit:                        ; preds = %if.then.i.i, %sw.bb.its_vpe_4_1_schedule.exit_crit_edge
  %add.ptr28.i = getelementptr i8, ptr %17, i32 131192
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i = icmp eq i8 %20, 0
  %or2.i = select i1 %tobool.not.i, i32 128, i32 136
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool3.not.i = icmp eq i8 %22, 0
  %cond4.i = select i1 %tobool3.not.i, i32 0, i32 4
  %or5.i = or i32 %cond4.i, %or2.i
  %conv.i.i.i = zext i16 %24 to i32
  %28 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr28.i, i32 %28) #15, !srcloc !362
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %or5.i) #15, !srcloc !362
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  %29 = load ptr, ptr @gic_rdists, align 4
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 8
  %32 = ptrtoint ptr %31 to i32
  %33 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i.i9 = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i9 to ptr
  %cpu.i10 = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 3
  %35 = ptrtoint ptr %cpu.i10 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cpu.i10, align 4
  %arrayidx.i11 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx.i11 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx.i11, align 4
  %add.i12 = add i32 %38, %32
  %39 = inttoptr i32 %add.i12 to ptr
  %rd_base.i13 = getelementptr inbounds %struct.anon, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %rd_base.i13 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rd_base.i13, align 4
  %add.ptr.i = getelementptr i8, ptr %41, i32 131072
  %42 = getelementptr inbounds %struct.its_cmd_info, ptr %vcpu_info, i32 0, i32 1
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %42, align 4, !range !365
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool.not.i14 = icmp eq i8 %44, 0
  br i1 %tobool.not.i14, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #17
  %vpe_lock.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 8
  %call4.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %vpe_lock.i) #15
  %call7.i = tail call fastcc i64 @its_clear_vpend_valid(ptr noundef %add.ptr.i, i64 noundef 2305843009213693952, i64 noundef 4611686018427387904) #15
  %pending_last.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 11
  %and.i = lshr i64 %call7.i, 61
  %45 = trunc i64 %and.i to i8
  %46 = and i8 %45, 1
  %47 = ptrtoint ptr %pending_last.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %46, ptr %pending_last.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i, i32 noundef %call4.i) #15
  br label %cleanup

if.else.i:                                        ; preds = %sw.bb1
  call void @__sanitizer_cov_trace_pc() #17
  %call19.i = tail call fastcc i64 @its_clear_vpend_valid(ptr noundef %add.ptr.i, i64 noundef 0, i64 noundef 2305843009213693952) #15
  %pending_last20.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 11
  %48 = ptrtoint ptr %pending_last20.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 1, ptr %pending_last20.i, align 4
  br label %cleanup

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_wait_vpt_parse_complete()
  br label %cleanup

sw.bb3:                                           ; preds = %entry
  %vpe_lock.i.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 8
  %call.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %vpe_lock.i.i) #15
  %col_idx.i.i = getelementptr inbounds %struct.its_vpe, ptr %1, i32 0, i32 9
  %49 = ptrtoint ptr %col_idx.i.i to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %col_idx.i.i, align 4
  %conv1.i.i = zext i16 %50 to i32
  %51 = load ptr, ptr @gic_rdists, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 8
  %54 = ptrtoint ptr %53 to i32
  %arrayidx.i15 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %conv1.i.i
  %55 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %arrayidx.i15, align 4
  %add.i16 = add i32 %56, %54
  %57 = inttoptr i32 %add.i16 to ptr
  tail call void @_raw_spin_lock(ptr noundef %57) #15
  %58 = load ptr, ptr @gic_rdists, align 4
  %59 = ptrtoint ptr %58 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %58, align 8
  %61 = ptrtoint ptr %60 to i32
  %62 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx.i15, align 4
  %add31.i = add i32 %63, %61
  %64 = inttoptr i32 %add31.i to ptr
  %rd_base.i17 = getelementptr inbounds %struct.anon, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %rd_base.i17 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %rd_base.i17, align 4
  %add.ptr.i18 = getelementptr i8, ptr %66, i32 176
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i18, i32 0) #15, !srcloc !362
  %add.ptr.i.i19 = getelementptr i8, ptr %66, i32 192
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i19) #15, !srcloc !361
  %68 = and i32 %67, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.not5.i.i = icmp eq i32 %68, 0
  br i1 %tobool.not5.i.i, label %sw.bb3.its_vpe_4_1_invall.exit_crit_edge, label %sw.bb3.do.end.i.i_crit_edge

sw.bb3.do.end.i.i_crit_edge:                      ; preds = %sw.bb3
  br label %do.end.i.i

sw.bb3.its_vpe_4_1_invall.exit_crit_edge:         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_4_1_invall.exit

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %sw.bb3.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !386
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !387
  %69 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i19) #15, !srcloc !361
  %70 = and i32 %69, 16777216
  %tobool.not.i.i20 = icmp eq i32 %70, 0
  br i1 %tobool.not.i.i20, label %do.end.i.i.its_vpe_4_1_invall.exit_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i.i

do.end.i.i.its_vpe_4_1_invall.exit_crit_edge:     ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %its_vpe_4_1_invall.exit

its_vpe_4_1_invall.exit:                          ; preds = %do.end.i.i.its_vpe_4_1_invall.exit_crit_edge, %sw.bb3.its_vpe_4_1_invall.exit_crit_edge
  %71 = load ptr, ptr @gic_rdists, align 4
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %71, align 8
  %74 = ptrtoint ptr %73 to i32
  %75 = ptrtoint ptr %arrayidx.i15 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx.i15, align 4
  %add43.i = add i32 %76, %74
  %77 = inttoptr i32 %add43.i to ptr
  tail call void @_raw_spin_unlock(ptr noundef %77) #15
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %vpe_lock.i.i, i32 noundef %call.i.i) #15
  br label %cleanup

cleanup:                                          ; preds = %its_vpe_4_1_invall.exit, %sw.bb2, %if.else.i, %if.then.i, %its_vpe_4_1_schedule.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %its_vpe_4_1_invall.exit ], [ 0, %sw.bb2 ], [ 0, %its_vpe_4_1_schedule.exit ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.then.i ], [ 0, %if.else.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @its_build_invdb_cmd(ptr nocapture noundef readonly %its, ptr nocapture noundef %cmd, ptr nocapture noundef readonly %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %typer = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 12
  %0 = ptrtoint ptr %typer to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %typer, align 8
  %and = and i64 %1, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %do.end, label %if.end25, !prof !369

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 944, i32 noundef 9, ptr noundef null) #15
  br label %return

if.end25:                                         ; preds = %entry
  %2 = ptrtoint ptr %cmd to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %cmd, align 8
  %and4.i.i = and i64 %3, -256
  %or.i.i = or i64 %and4.i.i, 46
  store i64 %or.i.i, ptr %cmd, align 8
  %4 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %desc, align 4
  %vpe_id = getelementptr inbounds %struct.its_vpe, ptr %5, i32 0, i32 10
  %6 = ptrtoint ptr %vpe_id to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %vpe_id, align 2
  %arrayidx.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 1
  %conv.i = zext i16 %7 to i64
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %arrayidx.i, align 8
  %and4.i.i32 = and i64 %9, -281470681743361
  %shl6.i.i = shl nuw nsw i64 %conv.i, 32
  %or.i.i33 = or i64 %and4.i.i32, %shl6.i.i
  %10 = tail call i64 @llvm.bswap.i64(i64 %or.i.i) #15
  %11 = ptrtoint ptr %cmd to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %cmd, align 8
  %12 = tail call i64 @llvm.bswap.i64(i64 %or.i.i33) #15
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %arrayidx.i, align 8
  %arrayidx4.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 2
  %14 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %arrayidx4.i, align 8
  %16 = tail call i64 @llvm.bswap.i64(i64 %15) #15
  %17 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %arrayidx4.i, align 8
  %arrayidx6.i = getelementptr [4 x i64], ptr %cmd, i32 0, i32 3
  %18 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx6.i, align 8
  %20 = tail call i64 @llvm.bswap.i64(i64 %19) #15
  %21 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %arrayidx6.i, align 8
  %22 = ptrtoint ptr %desc to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %desc, align 4
  %collections.i = getelementptr inbounds %struct.its_node, ptr %its, i32 0, i32 9
  %24 = ptrtoint ptr %collections.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %collections.i, align 8
  %col_idx.i = getelementptr inbounds %struct.its_vpe, ptr %23, i32 0, i32 9
  %26 = ptrtoint ptr %col_idx.i to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %col_idx.i, align 4
  %conv.i34 = zext i16 %27 to i32
  %add.ptr.i = getelementptr %struct.its_collection, ptr %25, i32 %conv.i34
  %28 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %add.ptr.i, align 8
  %and.i.i = and i64 %29, 65535
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end25.valid_vpe.exit_crit_edge, label %land.rhs.i.i

if.end25.valid_vpe.exit_crit_edge:                ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

land.rhs.i.i:                                     ; preds = %if.end25
  %.b42.i.i = load i1, ptr @valid_col.__already_done, align 1
  br i1 %.b42.i.i, label %land.rhs.i.i.valid_vpe.exit_crit_edge, label %if.then.i.i, !prof !364

land.rhs.i.i.valid_vpe.exit_crit_edge:            ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %valid_vpe.exit

if.then.i.i:                                      ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @valid_col.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 302, i32 noundef 9, ptr noundef null) #15
  br label %valid_vpe.exit

valid_vpe.exit:                                   ; preds = %if.then.i.i, %land.rhs.i.i.valid_vpe.exit_crit_edge, %if.end25.valid_vpe.exit_crit_edge
  %col..i.i = phi ptr [ %add.ptr.i, %if.end25.valid_vpe.exit_crit_edge ], [ null, %if.then.i.i ], [ null, %land.rhs.i.i.valid_vpe.exit_crit_edge ]
  %tobool.not.i = icmp eq ptr %col..i.i, null
  %.vpe.i = select i1 %tobool.not.i, ptr null, ptr %23
  br label %return

return:                                           ; preds = %valid_vpe.exit, %do.end
  %retval.0 = phi ptr [ null, %do.end ], [ %.vpe.i, %valid_vpe.exit ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ida_alloc_range(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @ida_free(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @its_save_disable() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @its_lock) #15
  %.pn71 = load ptr, ptr @its_nodes, align 4
  %cmp.not72 = icmp eq ptr %.pn71, @its_nodes
  br i1 %cmp.not72, label %entry.cleanup40_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup40_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup40

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn73 = phi ptr [ %.pn, %cleanup.for.body_crit_edge ], [ %.pn71, %entry.for.body_crit_edge ]
  %base2 = getelementptr i8, ptr %.pn73, i32 8
  %0 = ptrtoint ptr %base2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base2, align 8
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  %ctlr_save = getelementptr i8, ptr %.pn73, i32 256
  %4 = ptrtoint ptr %ctlr_save to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %ctlr_save, align 8
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #15
  %7 = and i32 %6, -2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %7)
  %8 = icmp eq i32 %7, -2147483648
  br i1 %8, label %for.body.cleanup_crit_edge, label %if.end.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i:                                         ; preds = %for.body
  %and3.i = and i32 %6, -4
  %9 = tail call i32 @llvm.bswap.i32(i32 %and3.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1, i32 %9) #15, !srcloc !362
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %.mask30.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask30.i)
  %tobool10.not31.i = icmp eq i32 %.mask30.i, 0
  br i1 %tobool10.not31.i, label %if.end.i.if.end12.i_crit_edge, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end.i.if.end12.i_crit_edge:                    ; preds = %if.end.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %if.end.i.if.end12.i_crit_edge
  %count.032.i = phi i32 [ %dec.i, %do.end.i.if.end12.i_crit_edge ], [ 1000000, %if.end.i.if.end12.i_crit_edge ]
  %dec.i = add nsw i32 %count.032.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool13.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool13.not.i, label %err16, label %do.end.i

do.end.i:                                         ; preds = %if.end12.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !382
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !383
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %11 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %11(i32 noundef 214748) #15
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %.mask.i = and i32 %12, 128
  %tobool10.not.i = icmp eq i32 %.mask.i, 0
  br i1 %tobool10.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end.i.cleanup_crit_edge

do.end.i.cleanup_crit_edge:                       ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12.i

cleanup:                                          ; preds = %do.end.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %add.ptr10 = getelementptr i8, ptr %1, i32 128
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr10) #15, !srcloc !361
  %add.ptr.i = getelementptr i8, ptr %1, i32 132
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #15, !srcloc !361
  %15 = zext i32 %14 to i64
  %16 = zext i32 %13 to i64
  %17 = shl nuw i64 %16, 32
  %18 = or i64 %17, %15
  %19 = tail call i64 @llvm.bswap.i64(i64 %18) #15
  %cbaser_save = getelementptr i8, ptr %.pn73, i32 248
  %20 = ptrtoint ptr %cbaser_save to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %19, ptr %cbaser_save, align 8
  %21 = ptrtoint ptr %.pn73 to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn = load ptr, ptr %.pn73, align 4
  %cmp.not = icmp eq ptr %.pn, @its_nodes
  br i1 %cmp.not, label %cleanup.cleanup40_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

cleanup.cleanup40_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup40

err16:                                            ; preds = %if.end12.i
  %ctlr_save.le = getelementptr i8, ptr %.pn73, i32 256
  %phys_base = getelementptr i8, ptr %.pn73, i32 16
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.142, ptr noundef %phys_base, i32 noundef -16) #18
  %22 = ptrtoint ptr %ctlr_save.le to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ctlr_save.le, align 8
  %24 = tail call i32 @llvm.bswap.i32(i32 %23)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1, i32 %24) #15, !srcloc !362
  %.pn59.in74 = getelementptr inbounds %struct.list_head, ptr %.pn73, i32 0, i32 1
  %25 = ptrtoint ptr %.pn59.in74 to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn5975 = load ptr, ptr %.pn59.in74, align 4
  %cmp25.not76 = icmp eq ptr %.pn5975, @its_nodes
  br i1 %cmp25.not76, label %err16.cleanup40_crit_edge, label %err16.for.body27_crit_edge

err16.for.body27_crit_edge:                       ; preds = %err16
  br label %for.body27

err16.cleanup40_crit_edge:                        ; preds = %err16
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup40

for.body27:                                       ; preds = %for.body27.for.body27_crit_edge, %err16.for.body27_crit_edge
  %.pn5977 = phi ptr [ %.pn59, %for.body27.for.body27_crit_edge ], [ %.pn5975, %err16.for.body27_crit_edge ]
  %base29 = getelementptr i8, ptr %.pn5977, i32 8
  %26 = ptrtoint ptr %base29 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %base29, align 8
  %ctlr_save30 = getelementptr i8, ptr %.pn5977, i32 256
  %28 = ptrtoint ptr %ctlr_save30 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ctlr_save30, align 8
  %30 = tail call i32 @llvm.bswap.i32(i32 %29)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %27, i32 %30) #15, !srcloc !362
  %.pn59.in = getelementptr inbounds %struct.list_head, ptr %.pn5977, i32 0, i32 1
  %31 = ptrtoint ptr %.pn59.in to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn59 = load ptr, ptr %.pn59.in, align 4
  %cmp25.not = icmp eq ptr %.pn59, @its_nodes
  br i1 %cmp25.not, label %for.body27.cleanup40_crit_edge, label %for.body27.for.body27_crit_edge

for.body27.for.body27_crit_edge:                  ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body27

for.body27.cleanup40_crit_edge:                   ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup40

cleanup40:                                        ; preds = %for.body27.cleanup40_crit_edge, %err16.cleanup40_crit_edge, %cleanup.cleanup40_crit_edge, %entry.cleanup40_crit_edge
  %err.168 = phi i32 [ -16, %err16.cleanup40_crit_edge ], [ 0, %entry.cleanup40_crit_edge ], [ -16, %for.body27.cleanup40_crit_edge ], [ 0, %cleanup.cleanup40_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef nonnull @its_lock) #15
  ret i32 %err.168
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @its_restore_enable() #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @its_lock) #15
  %.pn93 = load ptr, ptr @its_nodes, align 4
  %cmp.not95 = icmp eq ptr %.pn93, @its_nodes
  br i1 %cmp.not95, label %entry.for.end64_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end64_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end64

for.body:                                         ; preds = %cleanup55.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn96 = phi ptr [ %.pn, %cleanup55.for.body_crit_edge ], [ %.pn93, %entry.for.body_crit_edge ]
  %its.097 = getelementptr i8, ptr %.pn96, i32 -136
  %base2 = getelementptr i8, ptr %.pn96, i32 8
  %0 = ptrtoint ptr %base2 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %base2, align 8
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %3 = and i32 %2, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %do.end, !prof !364

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.3, i32 noundef 4814, i32 noundef 9, ptr noundef null) #15
  br label %if.end

if.end:                                           ; preds = %do.end, %for.body.if.end_crit_edge
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #15
  %6 = and i32 %5, -2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %6)
  %7 = icmp eq i32 %6, -2147483648
  br i1 %7, label %if.end.if.end34_crit_edge, label %if.end.i

if.end.if.end34_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.end.i:                                         ; preds = %if.end
  %and3.i = and i32 %5, -4
  %8 = tail call i32 @llvm.bswap.i32(i32 %and3.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1, i32 %8) #15, !srcloc !362
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %.mask30.i = and i32 %9, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask30.i)
  %tobool10.not31.i = icmp eq i32 %.mask30.i, 0
  br i1 %tobool10.not31.i, label %if.end.i.if.end12.i_crit_edge, label %if.end.i.if.end34_crit_edge

if.end.i.if.end34_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

if.end.i.if.end12.i_crit_edge:                    ; preds = %if.end.i
  br label %if.end12.i

if.end12.i:                                       ; preds = %do.end.i.if.end12.i_crit_edge, %if.end.i.if.end12.i_crit_edge
  %count.032.i = phi i32 [ %dec.i, %do.end.i.if.end12.i_crit_edge ], [ 1000000, %if.end.i.if.end12.i_crit_edge ]
  %dec.i = add nsw i32 %count.032.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i)
  %tobool13.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool13.not.i, label %do.end31, label %do.end.i

do.end.i:                                         ; preds = %if.end12.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !382
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #15, !srcloc !383
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %10 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %10(i32 noundef 214748) #15
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %1) #15, !srcloc !361
  %.mask.i = and i32 %11, 128
  %tobool10.not.i = icmp eq i32 %.mask.i, 0
  br i1 %tobool10.not.i, label %do.end.i.if.end12.i_crit_edge, label %do.end.i.if.end34_crit_edge

do.end.i.if.end34_crit_edge:                      ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end34

do.end.i.if.end12.i_crit_edge:                    ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end12.i

do.end31:                                         ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #17
  %phys_base = getelementptr i8, ptr %.pn96, i32 16
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144, ptr noundef %phys_base, i32 noundef -16) #18
  br label %cleanup55

if.end34:                                         ; preds = %do.end.i.if.end34_crit_edge, %if.end.i.if.end34_crit_edge, %if.end.if.end34_crit_edge
  %cbaser_save = getelementptr i8, ptr %.pn96, i32 248
  %12 = ptrtoint ptr %cbaser_save to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %cbaser_save, align 8
  %add.ptr35 = getelementptr i8, ptr %1, i32 128
  %conv.i = trunc i64 %13 to i32
  %14 = tail call i32 @llvm.bswap.i32(i32 %conv.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr35, i32 %14) #15, !srcloc !362
  %shr.i = lshr i64 %13, 32
  %conv1.i = trunc i64 %shr.i to i32
  %15 = tail call i32 @llvm.bswap.i32(i32 %conv1.i) #15
  %add.ptr.i = getelementptr i8, ptr %1, i32 132
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %15) #15, !srcloc !362
  %cmd_base = getelementptr i8, ptr %.pn96, i32 20
  %16 = ptrtoint ptr %cmd_base to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cmd_base, align 4
  %cmd_write = getelementptr i8, ptr %.pn96, i32 24
  %18 = ptrtoint ptr %cmd_write to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %cmd_write, align 8
  %add.ptr36 = getelementptr i8, ptr %1, i32 136
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr36, i32 0) #15, !srcloc !362
  %add.ptr.i87 = getelementptr i8, ptr %1, i32 140
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i87, i32 0) #15, !srcloc !362
  %tables = getelementptr i8, ptr %.pn96, i32 32
  br label %for.body39

for.body39:                                       ; preds = %cleanup.for.body39_crit_edge, %if.end34
  %i.092 = phi i32 [ 0, %if.end34 ], [ %inc, %cleanup.for.body39_crit_edge ]
  %arrayidx = getelementptr [8 x %struct.its_baser], ptr %tables, i32 0, i32 %i.092
  %val = getelementptr inbounds %struct.its_baser, ptr %arrayidx, i32 0, i32 1
  %19 = ptrtoint ptr %val to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %val, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %20)
  %tobool41.not = icmp sgt i64 %20, -1
  br i1 %tobool41.not, label %for.body39.cleanup_crit_edge, label %if.end43

for.body39.cleanup_crit_edge:                     ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end43:                                         ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #17
  %arrayidx.idx = mul i32 %i.092, 24
  %sub.ptr.div.i = sdiv exact i32 %arrayidx.idx, 24
  %21 = ptrtoint ptr %base2 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %base2, align 8
  %add.ptr.i88 = getelementptr i8, ptr %22, i32 256
  %shl.i = shl nsw i32 %sub.ptr.div.i, 3
  %add.ptr1.i = getelementptr i8, ptr %add.ptr.i88, i32 %shl.i
  %conv.i.i = trunc i64 %20 to i32
  %23 = tail call i32 @llvm.bswap.i32(i32 %conv.i.i) #15
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr1.i, i32 %23) #15, !srcloc !362
  %shr.i.i = lshr i64 %20, 32
  %conv1.i.i = trunc i64 %shr.i.i to i32
  %24 = tail call i32 @llvm.bswap.i32(i32 %conv1.i.i) #15
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr1.i, i32 4
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %24) #15, !srcloc !362
  %25 = ptrtoint ptr %base2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %base2, align 8
  %add.ptr.i7.i = getelementptr i8, ptr %26, i32 256
  %add.ptr1.i.i = getelementptr i8, ptr %add.ptr.i7.i, i32 %shl.i
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr1.i.i) #15, !srcloc !361
  %add.ptr.i.i.i = getelementptr i8, ptr %add.ptr1.i.i, i32 4
  %28 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #15, !srcloc !361
  %29 = zext i32 %28 to i64
  %30 = zext i32 %27 to i64
  %31 = shl nuw i64 %30, 32
  %32 = or i64 %31, %29
  %33 = tail call i64 @llvm.bswap.i64(i64 %32) #15
  %34 = ptrtoint ptr %val to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %val, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %for.body39.cleanup_crit_edge
  %inc = add nuw nsw i32 %i.092, 1
  %exitcond.not = icmp eq i32 %inc, 8
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body39_crit_edge

cleanup.for.body39_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body39

for.end:                                          ; preds = %cleanup
  %ctlr_save = getelementptr i8, ptr %.pn96, i32 256
  %35 = ptrtoint ptr %ctlr_save to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %ctlr_save, align 8
  %37 = tail call i32 @llvm.bswap.i32(i32 %36)
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %1, i32 %37) #15, !srcloc !362
  %collections = getelementptr i8, ptr %.pn96, i32 224
  %38 = ptrtoint ptr %collections to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %collections, align 8
  %40 = tail call i32 @llvm.read_register.i32(metadata !351) #15
  %and.i = and i32 %40, -16384
  %41 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %cpu, align 4
  %col_id = getelementptr %struct.its_collection, ptr %39, i32 %43, i32 1
  %44 = ptrtoint ptr %col_id to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %col_id, align 8
  %add.ptr48 = getelementptr i8, ptr %1, i32 8
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr48) #15, !srcloc !361
  %add.ptr.i89 = getelementptr i8, ptr %1, i32 12
  %47 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i89) #15, !srcloc !361
  %48 = and i32 %46, 255
  %49 = zext i16 %45 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %49)
  %cmp51 = icmp ugt i32 %48, %49
  br i1 %cmp51, label %if.then53, label %for.end.cleanup55_crit_edge

for.end.cleanup55_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup55

if.then53:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @its_cpu_init_collection(ptr noundef %its.097)
  br label %cleanup55

cleanup55:                                        ; preds = %if.then53, %for.end.cleanup55_crit_edge, %do.end31
  %50 = ptrtoint ptr %.pn96 to i32
  call void @__asan_load4_noabort(i32 %50)
  %.pn = load ptr, ptr %.pn96, align 4
  %cmp.not = icmp eq ptr %.pn, @its_nodes
  br i1 %cmp.not, label %cleanup55.for.end64_crit_edge, label %cleanup55.for.body_crit_edge

cleanup55.for.body_crit_edge:                     ; preds = %cleanup55
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

cleanup55.for.end64_crit_edge:                    ; preds = %cleanup55
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end64

for.end64:                                        ; preds = %cleanup55.for.end64_crit_edge, %entry.for.end64_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef nonnull @its_lock) #15
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #6

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #6

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 181)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 181)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { cold mustprogress nofree norecurse nosync nounwind null_pointer_is_valid optsize readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #7 = { nounwind readonly }
attributes #8 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #14 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { cold nounwind }
attributes #19 = { cold }
attributes #20 = { nounwind allocsize(0) }
attributes #21 = { nounwind readonly willreturn }
attributes #22 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !7, !8, !10, !11, !12, !14, !15, !17, !19, !21, !23, !24, !25, !26, !28, !29, !30, !32, !33, !34, !36, !37, !38, !40, !41, !42, !43, !44, !46, !47, !48, !50, !51, !52, !53, !54, !56, !57, !58, !59, !61, !63, !64, !65, !66, !67, !68, !70, !71, !72, !74, !75, !77, !79, !80, !82, !83, !85, !86, !87, !88, !89, !91, !92, !93, !94, !95, !97, !98, !99, !100, !101, !103, !104, !106, !108, !109, !110, !111, !113, !114, !115, !117, !119, !120, !121, !122, !124, !125, !126, !128, !129, !130, !132, !133, !134, !135, !137, !138, !140, !141, !143, !144, !145, !147, !148, !149, !151, !152, !153, !155, !156, !157, !159, !160, !161, !163, !164, !165, !166, !168, !169, !170, !172, !174, !176, !177, !178, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !198, !199, !200, !202, !203, !204, !206, !207, !208, !209, !210, !212, !214, !215, !216, !218, !220, !222, !224, !225, !226, !227, !229, !231, !232, !233, !235, !236, !238, !239, !240, !242, !244, !246, !247, !249, !250, !251, !253, !254, !256, !258, !259, !261, !262, !263, !265, !266, !267, !268, !270, !271, !272, !274, !275, !276, !277, !279, !280, !281, !283, !284, !285, !286, !288, !289, !291, !293, !295, !297, !299, !300, !301, !302, !303, !305, !306, !307, !308, !310, !311, !312, !314, !315, !317, !318, !319, !321, !323, !325, !327, !329, !331, !333, !335, !336, !338, !339, !341, !343, !344, !345, !346, !348, !349, !350}
!llvm.named.register.sp = !{!351}
!llvm.module.flags = !{!352, !353, !354, !355, !356, !357, !358, !359}
!llvm.ident = !{!360}

!0 = distinct !{null, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5525, i32 7}
!2 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5555, i32 3}
!4 = !{ptr @.str.2, !3, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @.str.3, !3, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @its_init._entry, !3, !"_entry", i1 false, i1 false}
!7 = !{ptr @its_init._entry_ptr, !3, !"_entry_ptr", i1 false, i1 false}
!8 = !{ptr @.str.5, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5583, i32 4}
!10 = !{ptr @its_init._entry.4, !9, !"_entry", i1 false, i1 false}
!11 = !{ptr @its_init._entry_ptr.6, !9, !"_entry_ptr", i1 false, i1 false}
!12 = !{ptr @__pcpu_unique_cpu_lpi_count, !13, !"__pcpu_unique_cpu_lpi_count", i1 false, i1 false}
!13 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 185, i32 8}
!14 = !{ptr @cpu_lpi_count, !13, !"cpu_lpi_count", i1 false, i1 false}
!15 = !{ptr @gic_rdists, !16, !"gic_rdists", i1 false, i1 false}
!16 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 189, i32 23}
!17 = !{ptr @its_parent, !18, !"its_parent", i1 false, i1 false}
!18 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 190, i32 27}
!19 = !{ptr @its_nodes, !20, !"its_nodes", i1 false, i1 false}
!20 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 187, i32 8}
!21 = !{ptr @.str.7, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5146, i32 3}
!23 = !{ptr @.str.8, !22, !"<string literal>", i1 false, i1 false}
!24 = !{ptr @redist_disable_lpis._entry, !22, !"_entry", i1 false, i1 false}
!25 = !{ptr @redist_disable_lpis._entry_ptr, !22, !"_entry_ptr", i1 false, i1 false}
!26 = !{ptr @.str.10, !27, !"<string literal>", i1 false, i1 false}
!27 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5168, i32 2}
!28 = !{ptr @redist_disable_lpis._entry.9, !27, !"_entry", i1 false, i1 false}
!29 = !{ptr @redist_disable_lpis._entry_ptr.11, !27, !"_entry_ptr", i1 false, i1 false}
!30 = !{ptr @.str.13, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5186, i32 4}
!32 = !{ptr @redist_disable_lpis._entry.12, !31, !"_entry", i1 false, i1 false}
!33 = !{ptr @redist_disable_lpis._entry_ptr.14, !31, !"_entry_ptr", i1 false, i1 false}
!34 = !{ptr @.str.16, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5200, i32 3}
!36 = !{ptr @redist_disable_lpis._entry.15, !35, !"_entry", i1 false, i1 false}
!37 = !{ptr @redist_disable_lpis._entry_ptr.17, !35, !"_entry_ptr", i1 false, i1 false}
!38 = distinct !{null, !39, !"__already_done", i1 false, i1 false}
!39 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3099, i32 3}
!40 = !{ptr @.str.18, !39, !"<string literal>", i1 false, i1 false}
!41 = !{ptr @.str.19, !39, !"<string literal>", i1 false, i1 false}
!42 = !{ptr @its_cpu_init_lpis._entry, !39, !"_entry", i1 false, i1 false}
!43 = !{ptr @its_cpu_init_lpis._entry_ptr, !39, !"_entry_ptr", i1 false, i1 false}
!44 = !{ptr @.str.20, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3138, i32 3}
!46 = !{ptr @.str.21, !45, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @its_cpu_init_lpis.__UNIQUE_ID_ddebug412, !45, !"__UNIQUE_ID_ddebug412", i1 false, i1 false}
!48 = !{ptr @.str.23, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3164, i32 2}
!50 = !{ptr @its_cpu_init_lpis._entry.22, !49, !"_entry", i1 false, i1 false}
!51 = !{ptr @its_cpu_init_lpis._entry_ptr.24, !49, !"_entry_ptr", i1 false, i1 false}
!52 = !{ptr @.str.25, !49, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @.str.26, !49, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @.str.27, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2215, i32 2}
!56 = !{ptr @.str.28, !55, !"<string literal>", i1 false, i1 false}
!57 = !{ptr @gic_check_reserved_range._entry, !55, !"_entry", i1 false, i1 false}
!58 = !{ptr @gic_check_reserved_range._entry_ptr, !55, !"_entry_ptr", i1 false, i1 false}
!59 = !{ptr @lpi_id_bits, !60, !"lpi_id_bits", i1 false, i1 false}
!60 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 53, i32 12}
!61 = !{ptr @.str.29, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3037, i32 3}
!63 = !{ptr @its_clear_vpend_valid._rs, !62, !"_rs", i1 false, i1 false}
!64 = !{ptr @__func__.its_clear_vpend_valid, !62, !"<string literal>", i1 false, i1 false}
!65 = !{ptr @.str.30, !62, !"<string literal>", i1 false, i1 false}
!66 = !{ptr @its_clear_vpend_valid._entry, !62, !"_entry", i1 false, i1 false}
!67 = !{ptr @its_clear_vpend_valid._entry_ptr, !62, !"_entry_ptr", i1 false, i1 false}
!68 = !{ptr @.str.31, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2896, i32 2}
!70 = !{ptr @.str.32, !69, !"<string literal>", i1 false, i1 false}
!71 = !{ptr @allocate_vpe_l1_table.__UNIQUE_ID_ddebug405, !69, !"__UNIQUE_ID_ddebug405", i1 false, i1 false}
!72 = !{ptr @.str.33, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2916, i32 2}
!74 = !{ptr @allocate_vpe_l1_table.__UNIQUE_ID_ddebug411, !73, !"__UNIQUE_ID_ddebug411", i1 false, i1 false}
!75 = distinct !{null, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!77 = distinct !{null, !78, !"__already_done", i1 false, i1 false}
!78 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!79 = !{ptr @.str.35, !78, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @.str.36, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 188, i32 8}
!82 = !{ptr @its_lock, !81, !"its_lock", i1 false, i1 false}
!83 = !{ptr @its_send_single_command._rs, !84, !"_rs", i1 false, i1 false}
!84 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1141, i32 8}
!85 = !{ptr @__func__.its_send_single_command, !84, !"<string literal>", i1 false, i1 false}
!86 = !{ptr @.str.37, !84, !"<string literal>", i1 false, i1 false}
!87 = !{ptr @its_send_single_command._entry, !84, !"_entry", i1 false, i1 false}
!88 = !{ptr @its_send_single_command._entry_ptr, !84, !"_entry_ptr", i1 false, i1 false}
!89 = !{ptr @its_allocate_entry._rs, !90, !"_rs", i1 false, i1 false}
!90 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1004, i32 4}
!91 = !{ptr @__func__.its_allocate_entry, !90, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @.str.38, !90, !"<string literal>", i1 false, i1 false}
!93 = !{ptr @its_allocate_entry._entry, !90, !"_entry", i1 false, i1 false}
!94 = !{ptr @its_allocate_entry._entry_ptr, !90, !"_entry_ptr", i1 false, i1 false}
!95 = !{ptr @its_wait_for_range_completion._rs, !96, !"_rs", i1 false, i1 false}
!96 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1080, i32 4}
!97 = !{ptr @__func__.its_wait_for_range_completion, !96, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @.str.39, !96, !"<string literal>", i1 false, i1 false}
!99 = !{ptr @its_wait_for_range_completion._entry, !96, !"_entry", i1 false, i1 false}
!100 = !{ptr @its_wait_for_range_completion._entry_ptr, !96, !"_entry_ptr", i1 false, i1 false}
!101 = distinct !{null, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5229, i32 8}
!103 = distinct !{null, !102, !"rdist_memreserve_cpuhp_cleanup_work", i1 false, i1 false}
!104 = !{ptr @.str.41, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5307, i32 34}
!106 = !{ptr @.str.42, !107, !"<string literal>", i1 false, i1 false}
!107 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5321, i32 4}
!108 = !{ptr @.str.43, !107, !"<string literal>", i1 false, i1 false}
!109 = !{ptr @its_of_probe._entry, !107, !"_entry", i1 false, i1 false}
!110 = !{ptr @its_of_probe._entry_ptr, !107, !"_entry_ptr", i1 false, i1 false}
!111 = !{ptr @.str.45, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5327, i32 4}
!113 = !{ptr @its_of_probe._entry.44, !112, !"_entry", i1 false, i1 false}
!114 = !{ptr @its_of_probe._entry_ptr.46, !112, !"_entry_ptr", i1 false, i1 false}
!115 = !{ptr @its_device_id, !116, !"its_device_id", i1 false, i1 false}
!116 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5286, i32 34}
!117 = !{ptr @.str.47, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4866, i32 3}
!119 = !{ptr @.str.48, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @its_map_one._entry, !118, !"_entry", i1 false, i1 false}
!121 = !{ptr @its_map_one._entry_ptr, !118, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @.str.50, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4873, i32 3}
!124 = !{ptr @its_map_one._entry.49, !123, !"_entry", i1 false, i1 false}
!125 = !{ptr @its_map_one._entry_ptr.51, !123, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @.str.53, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4880, i32 3}
!128 = !{ptr @its_map_one._entry.52, !127, !"_entry", i1 false, i1 false}
!129 = !{ptr @its_map_one._entry_ptr.54, !127, !"_entry_ptr", i1 false, i1 false}
!130 = !{ptr @.str.55, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5007, i32 2}
!132 = !{ptr @.str.56, !131, !"<string literal>", i1 false, i1 false}
!133 = !{ptr @its_probe_one._entry, !131, !"_entry", i1 false, i1 false}
!134 = !{ptr @its_probe_one._entry_ptr, !131, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @its_probe_one.__key, !136, !"__key", i1 false, i1 false}
!136 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5015, i32 2}
!137 = !{ptr @.str.57, !136, !"<string literal>", i1 false, i1 false}
!138 = !{ptr @its_probe_one.__key.58, !139, !"__key", i1 false, i1 false}
!139 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5016, i32 2}
!140 = !{ptr @.str.59, !139, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @.str.61, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5031, i32 4}
!143 = !{ptr @its_probe_one._entry.60, !142, !"_entry", i1 false, i1 false}
!144 = !{ptr @its_probe_one._entry_ptr.62, !142, !"_entry_ptr", i1 false, i1 false}
!145 = !{ptr @.str.64, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5034, i32 4}
!147 = !{ptr @its_probe_one._entry.63, !146, !"_entry", i1 false, i1 false}
!148 = !{ptr @its_probe_one._entry_ptr.65, !146, !"_entry_ptr", i1 false, i1 false}
!149 = !{ptr @.str.67, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5048, i32 4}
!151 = !{ptr @its_probe_one._entry.66, !150, !"_entry", i1 false, i1 false}
!152 = !{ptr @its_probe_one._entry_ptr.68, !150, !"_entry_ptr", i1 false, i1 false}
!153 = !{ptr @.str.70, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5098, i32 3}
!155 = !{ptr @its_probe_one._entry.69, !154, !"_entry", i1 false, i1 false}
!156 = !{ptr @its_probe_one._entry_ptr.71, !154, !"_entry_ptr", i1 false, i1 false}
!157 = !{ptr @.str.73, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 5130, i32 2}
!159 = !{ptr @its_probe_one._entry.72, !158, !"_entry", i1 false, i1 false}
!160 = !{ptr @its_probe_one._entry_ptr.74, !158, !"_entry_ptr", i1 false, i1 false}
!161 = !{ptr @.str.75, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4969, i32 3}
!163 = !{ptr @.str.76, !162, !"<string literal>", i1 false, i1 false}
!164 = !{ptr @its_compute_its_list_map._entry, !162, !"_entry", i1 false, i1 false}
!165 = !{ptr @its_compute_its_list_map._entry_ptr, !162, !"_entry_ptr", i1 false, i1 false}
!166 = !{ptr @.str.78, !167, !"<string literal>", i1 false, i1 false}
!167 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4985, i32 3}
!168 = !{ptr @its_compute_its_list_map._entry.77, !167, !"_entry", i1 false, i1 false}
!169 = !{ptr @its_compute_its_list_map._entry_ptr.79, !167, !"_entry_ptr", i1 false, i1 false}
!170 = !{ptr @its_list_map, !171, !"its_list_map", i1 false, i1 false}
!171 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 192, i32 22}
!172 = !{ptr @its_quirks, !173, !"its_quirks", i1 false, i1 false}
!173 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4701, i32 31}
!174 = !{ptr @.str.80, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2444, i32 3}
!176 = !{ptr @.str.81, !175, !"<string literal>", i1 false, i1 false}
!177 = !{ptr @its_parse_indirect_baser._entry, !175, !"_entry", i1 false, i1 false}
!178 = !{ptr @its_parse_indirect_baser._entry_ptr, !175, !"_entry_ptr", i1 false, i1 false}
!179 = !{ptr @.str.82, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2267, i32 29}
!181 = !{ptr @.str.83, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2268, i32 28}
!183 = !{ptr @.str.84, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2269, i32 32}
!185 = !{ptr @.str.85, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2270, i32 33}
!187 = !{ptr @.str.86, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2271, i32 33}
!189 = !{ptr @.str.87, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2272, i32 33}
!191 = !{ptr @.str.88, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2273, i32 33}
!193 = !{ptr @its_base_type_string, !194, !"its_base_type_string", i1 false, i1 false}
!194 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2266, i32 20}
!195 = !{ptr @.str.89, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2306, i32 3}
!197 = !{ptr @.str.90, !196, !"<string literal>", i1 false, i1 false}
!198 = !{ptr @its_setup_baser._entry, !196, !"_entry", i1 false, i1 false}
!199 = !{ptr @its_setup_baser._entry_ptr, !196, !"_entry_ptr", i1 false, i1 false}
!200 = !{ptr @.str.92, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2377, i32 3}
!202 = !{ptr @its_setup_baser._entry.91, !201, !"_entry", i1 false, i1 false}
!203 = !{ptr @its_setup_baser._entry_ptr.93, !201, !"_entry_ptr", i1 false, i1 false}
!204 = !{ptr @.str.95, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2389, i32 2}
!206 = !{ptr @its_setup_baser._entry.94, !205, !"_entry", i1 false, i1 false}
!207 = !{ptr @its_setup_baser._entry_ptr.96, !205, !"_entry_ptr", i1 false, i1 false}
!208 = !{ptr @.str.97, !205, !"<string literal>", i1 false, i1 false}
!209 = !{ptr @.str.98, !205, !"<string literal>", i1 false, i1 false}
!210 = !{ptr @its_domain_ops, !211, !"its_domain_ops", i1 false, i1 false}
!211 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3646, i32 36}
!212 = !{ptr @.str.99, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3565, i32 3}
!214 = !{ptr @.str.100, !213, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @its_irq_domain_alloc.__UNIQUE_ID_ddebug429, !213, !"__UNIQUE_ID_ddebug429", i1 false, i1 false}
!216 = !{ptr @.str.101, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1980, i32 12}
!218 = !{ptr @its_irq_chip, !219, !"its_irq_chip", i1 false, i1 false}
!219 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1979, i32 24}
!220 = distinct !{null, !221, !"__already_done", i1 false, i1 false}
!221 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 245, i32 6}
!222 = !{ptr @its_send_single_vcommand._rs, !223, !"_rs", i1 false, i1 false}
!223 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1154, i32 8}
!224 = !{ptr @__func__.its_send_single_vcommand, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @its_send_single_vcommand._entry, !223, !"_entry", i1 false, i1 false}
!226 = !{ptr @its_send_single_vcommand._entry_ptr, !223, !"_entry_ptr", i1 false, i1 false}
!227 = distinct !{null, !228, !"__already_done", i1 false, i1 false}
!228 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 302, i32 6}
!229 = !{ptr @.str.102, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 1639, i32 2}
!231 = !{ptr @.str.103, !230, !"<string literal>", i1 false, i1 false}
!232 = !{ptr @its_select_cpu.__UNIQUE_ID_ddebug248, !230, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!233 = !{ptr @.str.104, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 194, i32 8}
!235 = !{ptr @vmovp_lock, !234, !"vmovp_lock", i1 false, i1 false}
!236 = !{ptr @.str.105, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2009, i32 8}
!238 = !{ptr @.str.106, !237, !"<string literal>", i1 false, i1 false}
!239 = !{ptr @lpi_range_lock, !237, !"lpi_range_lock", i1 false, i1 false}
!240 = !{ptr @lpi_range_list, !241, !"lpi_range_list", i1 false, i1 false}
!241 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2010, i32 8}
!242 = !{ptr @its_msi_domain_ops, !243, !"its_msi_domain_ops", i1 false, i1 false}
!243 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3508, i32 30}
!244 = distinct !{null, !245, !"__already_done", i1 false, i1 false}
!245 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3474, i32 3}
!246 = !{ptr @.str.107, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @.str.108, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3488, i32 3}
!249 = !{ptr @.str.109, !248, !"<string literal>", i1 false, i1 false}
!250 = !{ptr @its_msi_prepare.__UNIQUE_ID_ddebug427, !248, !"__UNIQUE_ID_ddebug427", i1 false, i1 false}
!251 = !{ptr @.str.110, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3501, i32 2}
!253 = !{ptr @its_msi_prepare.__UNIQUE_ID_ddebug428, !252, !"__UNIQUE_ID_ddebug428", i1 false, i1 false}
!254 = !{ptr @vpe_proxy, !255, !"vpe_proxy", i1 false, i1 false}
!255 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 178, i32 3}
!256 = !{ptr @its_create_device.__key, !257, !"__key", i1 false, i1 false}
!257 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3407, i32 2}
!258 = !{ptr @.str.111, !257, !"<string literal>", i1 false, i1 false}
!259 = !{ptr @.str.112, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2056, i32 2}
!261 = !{ptr @.str.113, !260, !"<string literal>", i1 false, i1 false}
!262 = !{ptr @alloc_lpi_range.__UNIQUE_ID_ddebug249, !260, !"__UNIQUE_ID_ddebug249", i1 false, i1 false}
!263 = !{ptr @.str.114, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2987, i32 3}
!265 = !{ptr @.str.115, !264, !"<string literal>", i1 false, i1 false}
!266 = !{ptr @allocate_lpi_tables._entry, !264, !"_entry", i1 false, i1 false}
!267 = !{ptr @allocate_lpi_tables._entry_ptr, !264, !"_entry_ptr", i1 false, i1 false}
!268 = !{ptr @.str.117, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3004, i32 4}
!270 = !{ptr @allocate_lpi_tables._entry.116, !269, !"_entry", i1 false, i1 false}
!271 = !{ptr @allocate_lpi_tables._entry_ptr.118, !269, !"_entry_ptr", i1 false, i1 false}
!272 = !{ptr @.str.119, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2250, i32 4}
!274 = !{ptr @.str.120, !273, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @its_setup_lpi_prop_table._entry, !273, !"_entry", i1 false, i1 false}
!276 = !{ptr @its_setup_lpi_prop_table._entry_ptr, !273, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @.str.122, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2260, i32 2}
!279 = !{ptr @its_setup_lpi_prop_table._entry.121, !278, !"_entry", i1 false, i1 false}
!280 = !{ptr @its_setup_lpi_prop_table._entry_ptr.123, !278, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.124, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2115, i32 3}
!283 = !{ptr @.str.125, !282, !"<string literal>", i1 false, i1 false}
!284 = !{ptr @its_lpi_init._entry, !282, !"_entry", i1 false, i1 false}
!285 = !{ptr @its_lpi_init._entry_ptr, !282, !"_entry_ptr", i1 false, i1 false}
!286 = !{ptr @.str.126, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 2124, i32 2}
!288 = !{ptr @its_lpi_init.__UNIQUE_ID_ddebug250, !287, !"__UNIQUE_ID_ddebug250", i1 false, i1 false}
!289 = !{ptr @its_sgi_domain_ops, !290, !"its_sgi_domain_ops", i1 false, i1 false}
!290 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4372, i32 36}
!291 = !{ptr @.str.127, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4305, i32 12}
!293 = !{ptr @its_sgi_irq_chip, !294, !"its_sgi_irq_chip", i1 false, i1 false}
!294 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4304, i32 24}
!295 = !{ptr @find_4_1_its.its, !296, !"its", i1 false, i1 false}
!296 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4012, i32 26}
!297 = !{ptr @its_sgi_get_irqchip_state._rs, !298, !"_rs", i1 false, i1 false}
!298 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4268, i32 4}
!299 = !{ptr @__func__.its_sgi_get_irqchip_state, !298, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.128, !298, !"<string literal>", i1 false, i1 false}
!301 = !{ptr @its_sgi_get_irqchip_state._entry, !298, !"_entry", i1 false, i1 false}
!302 = !{ptr @its_sgi_get_irqchip_state._entry_ptr, !298, !"_entry_ptr", i1 false, i1 false}
!303 = !{ptr @.str.129, !304, !"<string literal>", i1 false, i1 false}
!304 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4923, i32 3}
!305 = !{ptr @.str.130, !304, !"<string literal>", i1 false, i1 false}
!306 = !{ptr @its_init_vpe_domain._entry, !304, !"_entry", i1 false, i1 false}
!307 = !{ptr @its_init_vpe_domain._entry_ptr, !304, !"_entry_ptr", i1 false, i1 false}
!308 = !{ptr @.str.132, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4941, i32 3}
!310 = !{ptr @its_init_vpe_domain._entry.131, !309, !"_entry", i1 false, i1 false}
!311 = !{ptr @its_init_vpe_domain._entry_ptr.133, !309, !"_entry_ptr", i1 false, i1 false}
!312 = !{ptr @its_init_vpe_domain.__key, !313, !"__key", i1 false, i1 false}
!313 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4947, i32 2}
!314 = !{ptr @.str.134, !313, !"<string literal>", i1 false, i1 false}
!315 = !{ptr @.str.136, !316, !"<string literal>", i1 false, i1 false}
!316 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4949, i32 2}
!317 = !{ptr @its_init_vpe_domain._entry.135, !316, !"_entry", i1 false, i1 false}
!318 = !{ptr @its_init_vpe_domain._entry_ptr.137, !316, !"_entry_ptr", i1 false, i1 false}
!319 = !{ptr @its_vpe_domain_ops, !320, !"its_vpe_domain_ops", i1 false, i1 false}
!320 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4576, i32 36}
!321 = !{ptr @.str.138, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4000, i32 12}
!323 = !{ptr @its_vpe_irq_chip, !324, !"its_vpe_irq_chip", i1 false, i1 false}
!324 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3999, i32 24}
!325 = !{ptr @vmovp_seq_num, !326, !"vmovp_seq_num", i1 false, i1 false}
!326 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 193, i32 12}
!327 = distinct !{null, !328, !"__already_done", i1 false, i1 false}
!328 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 3819, i32 2}
!329 = !{ptr @.str.139, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4155, i32 12}
!331 = !{ptr @its_vpe_4_1_irq_chip, !332, !"its_vpe_4_1_irq_chip", i1 false, i1 false}
!332 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4154, i32 24}
!333 = !{ptr @its_vpe_init.__key, !334, !"__key", i1 false, i1 false}
!334 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4412, i32 2}
!335 = !{ptr @.str.140, !334, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @.str.141, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 196, i32 8}
!338 = !{ptr @its_vpeid_ida, !337, !"its_vpeid_ida", i1 false, i1 false}
!339 = !{ptr @its_syscore_ops, !340, !"its_syscore_ops", i1 false, i1 false}
!340 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4854, i32 27}
!341 = !{ptr @.str.142, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4771, i32 4}
!343 = !{ptr @.str.143, !342, !"<string literal>", i1 false, i1 false}
!344 = !{ptr @its_save_disable._entry, !342, !"_entry", i1 false, i1 false}
!345 = !{ptr @its_save_disable._entry_ptr, !342, !"_entry_ptr", i1 false, i1 false}
!346 = !{ptr @.str.144, !347, !"<string literal>", i1 false, i1 false}
!347 = !{!"../drivers/irqchip/irq-gic-v3-its.c", i32 4817, i32 4}
!348 = !{ptr @.str.145, !347, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @its_restore_enable._entry, !347, !"_entry", i1 false, i1 false}
!350 = !{ptr @its_restore_enable._entry_ptr, !347, !"_entry_ptr", i1 false, i1 false}
!351 = !{!"sp"}
!352 = !{i32 1, !"wchar_size", i32 2}
!353 = !{i32 1, !"min_enum_size", i32 4}
!354 = !{i32 8, !"branch-target-enforcement", i32 0}
!355 = !{i32 8, !"sign-return-address", i32 0}
!356 = !{i32 8, !"sign-return-address-all", i32 0}
!357 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!358 = !{i32 7, !"uwtable", i32 1}
!359 = !{i32 7, !"frame-pointer", i32 2}
!360 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!361 = !{i64 7124339}
!362 = !{i64 7123921}
!363 = !{i64 2157597873}
!364 = !{!"branch_weights", i32 2000, i32 1}
!365 = !{i8 0, i8 2}
!366 = !{i64 2149086652, i64 2149086657, i64 2149086670, i64 2149086714, i64 2149086748, i64 2149086769}
!367 = !{i64 2156875829}
!368 = !{i32 0, i32 33}
!369 = !{!"branch_weights", i32 1, i32 2000}
!370 = !{i64 2157523924, i64 2157524422, i64 2157523961, i64 2157524017, i64 2157524051, i64 2157524075, i64 2157524116, i64 2157524137, i64 2157524165, i64 2157524199}
!371 = !{!"auto-init"}
!372 = !{i64 2156854116}
!373 = !{i64 2156853958}
!374 = !{i64 2155441207}
!375 = !{i64 2155440241}
!376 = !{i64 2155440083}
!377 = !{i64 2155444500}
!378 = !{i64 2155444342}
!379 = !{i32 8, i32 33}
!380 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!381 = !{i64 2151434089, i64 2151434573, i64 2151434126, i64 2151434182, i64 2151434216, i64 2151434240, i64 2151434281, i64 2151434302, i64 2151434330, i64 2151434364}
!382 = !{i64 2157220785}
!383 = !{i64 2157220627}
!384 = !{i64 2148442360, i64 2148442386, i64 2148442415, i64 2148442449, i64 2148442480, i64 2148442503}
!385 = !{i64 2148444825, i64 2148444851, i64 2148444880, i64 2148444914, i64 2148444945, i64 2148444968}
!386 = !{i64 2155460518}
!387 = !{i64 2155460360}
!388 = !{i64 2155459921}
!389 = !{i64 2148530824}
!390 = !{i64 2148445545, i64 2148445577, i64 2148445606, i64 2148445640, i64 2148445671, i64 2148445694}
!391 = !{i64 2148531053}
!392 = !{i64 2148529303}
!393 = !{i64 2148443890, i64 2148443922, i64 2148443951, i64 2148443985, i64 2148444016, i64 2148444039}
!394 = !{i64 2148529531}
!395 = !{!"branch_weights", i32 -102759400, i32 4193255}
!396 = !{i64 2156891893}
!397 = !{i64 2157203556}
!398 = !{i64 2157203398}
!399 = !{i64 2157210196, i64 2157210694, i64 2157210233, i64 2157210289, i64 2157210323, i64 2157210347, i64 2157210388, i64 2157210409, i64 2157210437, i64 2157210471}
!400 = !{i32 15, i32 33}
!401 = !{i64 2156528563}
!402 = !{i64 2157208476, i64 2157208974, i64 2157208513, i64 2157208569, i64 2157208603, i64 2157208627, i64 2157208668, i64 2157208689, i64 2157208717, i64 2157208751}
