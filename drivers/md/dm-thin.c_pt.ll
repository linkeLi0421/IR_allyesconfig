; ModuleID = '/llk/IR_all_yes/drivers/md/dm-thin.c_pt.bc'
source_filename = "../drivers/md/dm-thin.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.dm_kcopyd_throttle = type { i32, i32, i32, i32, i32 }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.74 }
%union.anon.74 = type { ptr }
%struct.target_type = type { i64, ptr, ptr, [3 x i32], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.list_head = type { ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.dm_thin_pool_table = type { %struct.mutex, %struct.list_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.dm_arg = type { i32, i32, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.bio_list = type { ptr, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dm_target = type { ptr, ptr, i64, i64, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i8 }
%struct.thin_c = type { %struct.list_head, ptr, ptr, i64, i64, ptr, ptr, ptr, i8, %struct.spinlock, %struct.list_head, %struct.bio_list, %struct.bio_list, %struct.rb_root, %struct.refcount_struct, %struct.completion }
%struct.rb_root = type { ptr }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.pool = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, i64, i32, i32, %struct.pool_features, i8, ptr, ptr, %struct.work_struct, ptr, %struct.throttle, %struct.delayed_work, %struct.delayed_work, i32, i32, %struct.spinlock, %struct.bio_list, %struct.bio_list, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mempool_s, %struct.bio }
%struct.pool_features = type { i32, i8 }
%struct.throttle = type { %struct.rw_semaphore, i32, i8 }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.bio = type { ptr, ptr, i32, i16, i16, i16, i8, %struct.atomic_t, %struct.bvec_iter, i32, ptr, ptr, ptr, %struct.bio_issue, i64, ptr, %union.anon.40, i16, i16, %struct.atomic_t, ptr, ptr, [0 x %struct.bio_vec] }
%struct.bvec_iter = type <{ i64, i32, i32, i32 }>
%struct.bio_issue = type { i64 }
%union.anon.40 = type { ptr }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.dm_thin_lookup_result = type { i64, i8 }
%struct.dm_cell_key = type { i32, i64, i64, i64 }
%struct.dm_thin_endio_hook = type { ptr, ptr, ptr, ptr, %struct.rb_node, ptr }
%struct.dm_thin_new_mapping = type { %struct.list_head, i8, %struct.atomic_t, i8, ptr, i64, i64, i64, ptr, ptr, ptr }
%struct.noflush_work = type { %struct.pool_work, ptr }
%struct.pool_work = type { %struct.work_struct, %struct.completion }
%struct.queue_limits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.dm_arg_set = type { i32, ptr }
%struct.pool_c = type { ptr, ptr, ptr, ptr, i64, %struct.pool_features, %struct.pool_features }
%struct.request_queue = type { ptr, ptr, %struct.percpu_ref, ptr, ptr, ptr, ptr, i32, ptr, i32, ptr, i32, %struct.atomic_t, i32, %struct.spinlock, ptr, %struct.kobject, ptr, %struct.blk_integrity, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, %struct.timer_list, %struct.work_struct, %struct.atomic_t, ptr, %struct.list_head, [1 x i32], ptr, %struct.list_head, %struct.queue_limits, i32, i32, ptr, ptr, i32, i32, i32, %struct.mutex, ptr, ptr, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, ptr, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, i32, ptr, %struct.list_head, %struct.bio_set, ptr, ptr, ptr, i8, [5 x i64], ptr, [0 x %struct.srcu_struct] }
%struct.percpu_ref = type { i32, ptr }
%struct.blk_integrity = type { ptr, i8, i8, i8, i8 }
%struct.callback_head = type { ptr, ptr }
%struct.srcu_struct = type { [3 x %struct.srcu_node], [3 x ptr], %struct.mutex, %struct.spinlock, %struct.mutex, i32, i32, i32, i32, i32, ptr, i32, %struct.mutex, %struct.completion, %struct.atomic_t, %struct.delayed_work, %struct.lockdep_map }
%struct.srcu_node = type { %struct.spinlock, [4 x i32], [4 x i32], i32, ptr, i32, i32 }
%struct.blk_plug = type { ptr, ptr, i16, i16, i8, i8, i8, %struct.list_head }
%struct.dm_bio_prison_cell = type { %struct.list_head, %struct.rb_node, %struct.dm_cell_key, ptr, %struct.bio_list }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.remap_info = type { ptr, %struct.bio_list, %struct.bio_list }
%struct.discard_op = type { ptr, %struct.blk_plug, ptr, ptr }
%struct.dm_io_region = type { ptr, i64, i64 }

@__param_str_snapshot_copy_throttle = internal constant [36 x i8] c"dm_thin_pool.snapshot_copy_throttle\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@dm_kcopyd_throttle = internal global { %struct.dm_kcopyd_throttle, [44 x i8] } { %struct.dm_kcopyd_throttle { i32 100, i32 0, i32 0, i32 0, i32 0 }, [44 x i8] zeroinitializer }, align 32
@__param_snapshot_copy_throttle = internal constant %struct.kernel_param { ptr @__param_str_snapshot_copy_throttle, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @dm_kcopyd_throttle } }, section "__param", align 4
@__UNIQUE_ID_snapshot_copy_throttletype283 = internal constant [50 x i8] c"dm_thin_pool.parmtype=snapshot_copy_throttle:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_snapshot_copy_throttle284 = internal constant [90 x i8] c"dm_thin_pool.parm=snapshot_copy_throttle:A percentage of time allocated for copy on write\00", section ".modinfo", align 1
@__initcall__kmod_dm_thin_pool__296_4533_dm_thin_init6 = internal global ptr @dm_thin_init, section ".initcall6.init", align 4
@__exitcall_dm_thin_exit = internal global ptr @dm_thin_exit, section ".exitcall.exit", align 4
@__param_str_no_space_timeout = internal constant [30 x i8] c"dm_thin_pool.no_space_timeout\00", align 1
@no_space_timeout_secs = internal global { i32, [28 x i8] } { i32 60, [28 x i8] zeroinitializer }, align 32
@__param_no_space_timeout = internal constant %struct.kernel_param { ptr @__param_str_no_space_timeout, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.74 { ptr @no_space_timeout_secs } }, section "__param", align 4
@__UNIQUE_ID_no_space_timeouttype297 = internal constant [44 x i8] c"dm_thin_pool.parmtype=no_space_timeout:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_no_space_timeout298 = internal constant [81 x i8] c"dm_thin_pool.parm=no_space_timeout:Out of data space queue IO timeout in seconds\00", section ".modinfo", align 1
@__UNIQUE_ID_description299 = internal constant [64 x i8] c"dm_thin_pool.description=device-mapper thin provisioning target\00", section ".modinfo", align 1
@__UNIQUE_ID_author300 = internal constant [55 x i8] c"dm_thin_pool.author=Joe Thornber <dm-devel@redhat.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_file301 = internal constant [42 x i8] c"dm_thin_pool.file=drivers/md/dm-thin-pool\00", section ".modinfo", align 1
@__UNIQUE_ID_license302 = internal constant [25 x i8] c"dm_thin_pool.license=GPL\00", section ".modinfo", align 1
@.str = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"dm_thin_new_mapping\00", [44 x i8] zeroinitializer }, align 32
@_new_mapping_cache = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@thin_target = internal global { %struct.target_type, [40 x i8] } { %struct.target_type { i64 0, ptr @.str.2, ptr null, [3 x i32] [i32 1, i32 22, i32 0], ptr @thin_ctr, ptr @thin_dtr, ptr @thin_map, ptr null, ptr null, ptr @thin_endio, ptr null, ptr @thin_presuspend, ptr null, ptr @thin_postsuspend, ptr @thin_preresume, ptr null, ptr @thin_status, ptr null, ptr null, ptr null, ptr null, ptr @thin_iterate_devices, ptr @thin_io_hints, ptr null, ptr null, %struct.list_head zeroinitializer }, [40 x i8] zeroinitializer }, align 32
@pool_target = internal global { %struct.target_type, [40 x i8] } { %struct.target_type { i64 7, ptr @.str.35, ptr null, [3 x i32] [i32 1, i32 22, i32 0], ptr @pool_ctr, ptr @pool_dtr, ptr @pool_map, ptr null, ptr null, ptr null, ptr null, ptr @pool_presuspend, ptr @pool_presuspend_undo, ptr @pool_postsuspend, ptr @pool_preresume, ptr @pool_resume, ptr @pool_status, ptr @pool_message, ptr null, ptr null, ptr null, ptr @pool_iterate_devices, ptr @pool_io_hints, ptr null, ptr null, %struct.list_head zeroinitializer }, [40 x i8] zeroinitializer }, align 32
@pool_table_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@dm_thin_pool_table = internal global { %struct.dm_thin_pool_table, [60 x i8] } zeroinitializer, align 32
@.str.1 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"&dm_thin_pool_table.mutex\00", [38 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"thin\00", [27 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Invalid argument count\00", [41 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"Out of memory\00", [18 x i8] zeroinitializer }, align 32
@thin_ctr.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.5 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&tc->lock\00", [22 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Error setting origin device\00", [36 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Error opening origin device\00", [36 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Error opening pool device\00", [38 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"Invalid device id\00", [46 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Couldn't get pool mapped device\00", [32 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Couldn't find pool object\00", [38 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Couldn't open thin device, Pool is in fail mode\00", [48 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Couldn't open thin internal device\00", [61 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Unable to activate thin device while pool is suspended\00", [41 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@read_dev_id._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str.17, i32 3680, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\014device-mapper: thin: Message received with invalid device id: %s\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"read_dev_id\00", [20 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"drivers/md/dm-thin.c\00", [43 x i8] zeroinitializer }, align 32
@read_dev_id._entry_ptr = internal global ptr @read_dev_id._entry, section ".printk_index", align 4
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.18 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@__pool_destroy._entry = internal constant %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.17, i32 2905, ptr null, ptr null }, align 1
@.str.19 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014device-mapper: thin: %s: dm_pool_metadata_close() failed.\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"__pool_destroy\00", [17 x i8] zeroinitializer }, align 32
@__pool_destroy._entry_ptr = internal global ptr @__pool_destroy._entry, section ".printk_index", align 4
@pool_work_wait.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.21 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"(work_completion)(&pw->worker)\00", [33 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"Fail\00", [27 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"-\00", [30 x i8] zeroinitializer }, align 32
@thin_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str.17, i32 4405, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\013device-mapper: thin: dm_thin_get_mapped_count returned %d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"thin_status\00", [20 x i8] zeroinitializer }, align 32
@thin_status._entry_ptr = internal global ptr @thin_status._entry, section ".printk_index", align 4
@thin_status._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.25, ptr @.str.17, i32 4411, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013device-mapper: thin: dm_thin_get_highest_mapped_block returned %d\0A\00", [59 x i8] zeroinitializer }, align 32
@thin_status._entry_ptr.28 = internal global ptr @thin_status._entry.26, section ".printk_index", align 4
@.str.29 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%llu \00", [26 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%llu\00", [27 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"%s %lu\00", [25 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%u:%u\00", [26 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c" %s\00", [28 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Error\00", [26 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"thin-pool\00", [22 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Error setting metadata or data device\00", [58 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Error opening metadata block device\00", [60 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Error getting data device\00", [38 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Invalid block size\00", [45 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"Invalid low water mark\00", [41 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Discard support cannot be disabled once enabled\00", [48 x i8] zeroinitializer }, align 32
@parse_pool_features._args = internal constant { [1 x %struct.dm_arg], [20 x i8] } { [1 x %struct.dm_arg] [%struct.dm_arg { i32 0, i32 4, ptr @.str.42 }], [20 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"Invalid number of pool feature arguments\00", [55 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"skip_block_zeroing\00", [45 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"ignore_discard\00", [17 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"no_discard_passdown\00", [44 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"read_only\00", [22 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"error_if_no_space\00", [46 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Unrecognised pool feature requested\00", [60 x i8] zeroinitializer }, align 32
@warn_if_metadata_device_too_big._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.49, ptr @.str.50, ptr @.str.17, i32 3225, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [101 x i8], [59 x i8] } { [101 x i8] c"\014device-mapper: thin: Metadata device %s is larger than %u sectors: excess space will not be used.\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"warn_if_metadata_device_too_big\00", [32 x i8] zeroinitializer }, align 32
@warn_if_metadata_device_too_big._entry_ptr = internal global ptr @warn_if_metadata_device_too_big._entry, section ".printk_index", align 4
@.str.51 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"metadata device already in use by a pool\00", [55 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"data device already in use by a pool\00", [59 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"different pool cannot replace a pool\00", [59 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Error creating metadata object\00", [33 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Error allocating memory for pool\00", [63 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Error creating pool's bio prison\00", [63 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Error creating pool's kcopyd client\00", [60 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"dm-thin\00", [24 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Error creating pool's workqueue\00", [32 x i8] zeroinitializer }, align 32
@pool_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.60 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"(work_completion)(&pool->worker)\00", [63 x i8] zeroinitializer }, align 32
@pool_create.__key.61 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.62 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"(work_completion)(&(&pool->waker)->work)\00", [55 x i8] zeroinitializer }, align 32
@pool_create.__key.63 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.64 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&(&pool->waker)->timer\00", [41 x i8] zeroinitializer }, align 32
@pool_create.__key.65 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.66 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"(work_completion)(&(&pool->no_space_timeout)->work)\00", [44 x i8] zeroinitializer }, align 32
@pool_create.__key.67 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.68 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"&(&pool->no_space_timeout)->timer\00", [62 x i8] zeroinitializer }, align 32
@pool_create.__key.69 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.70 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&pool->lock\00", [20 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Error creating pool's shared read deferred set\00", [49 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Error creating pool's all io deferred set\00", [54 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Error creating pool's mapping mempool\00", [58 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Error allocating cell sort array\00", [63 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@pool_create._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.75, ptr @.str.17, i32 3056, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"pool_create\00", [20 x i8] zeroinitializer }, align 32
@pool_create._entry_ptr = internal global ptr @pool_create._entry, section ".printk_index", align 4
@throttle_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.76 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&t->lock\00", [23 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.77 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.79 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"dm_pool_commit_metadata\00", [40 x i8] zeroinitializer }, align 32
@metadata_operation_failed._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@__func__.metadata_operation_failed = private unnamed_addr constant [26 x i8] c"metadata_operation_failed\00", align 1
@metadata_operation_failed._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @__func__.metadata_operation_failed, ptr @.str.17, i32 2644, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\013device-mapper: thin: %s: metadata operation '%s' failed: error = %d\0A\00", [57 x i8] zeroinitializer }, align 32
@metadata_operation_failed._entry_ptr = internal global ptr @metadata_operation_failed._entry, section ".printk_index", align 4
@abort_transaction._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.abort_transaction = private unnamed_addr constant [18 x i8] c"abort_transaction\00", align 1
@abort_transaction._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @__func__.abort_transaction, ptr @.str.17, i32 2629, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013device-mapper: thin: %s: aborting current metadata transaction\0A\00", [62 x i8] zeroinitializer }, align 32
@abort_transaction._entry_ptr = internal global ptr @abort_transaction._entry, section ".printk_index", align 4
@abort_transaction._entry.84 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.85, ptr @__func__.abort_transaction, ptr @.str.17, i32 2631, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013device-mapper: thin: %s: failed to abort metadata transaction\0A\00", [63 x i8] zeroinitializer }, align 32
@abort_transaction._entry_ptr.86 = internal global ptr @abort_transaction._entry.84, section ".printk_index", align 4
@abort_transaction._entry.87 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @__func__.abort_transaction, ptr @.str.17, i32 2636, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013device-mapper: thin: %s: failed to set 'needs_check' flag in metadata\0A\00", [55 x i8] zeroinitializer }, align 32
@abort_transaction._entry_ptr.89 = internal global ptr @abort_transaction._entry.87, section ".printk_index", align 4
@set_pool_mode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.91, ptr @.str.17, i32 2540, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"\013device-mapper: thin: %s: unable to switch pool to write mode until repaired.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"set_pool_mode\00", [18 x i8] zeroinitializer }, align 32
@set_pool_mode._entry_ptr = internal global ptr @set_pool_mode._entry, section ".printk_index", align 4
@error_retry_list_with_code.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.92 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@__process_bio_read_only._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, align 4
@__func__.__process_bio_read_only = private unnamed_addr constant [24 x i8] c"__process_bio_read_only\00", align 1
@__process_bio_read_only._entry = internal constant %struct.pi_entry { ptr @.str.93, ptr @__func__.__process_bio_read_only, ptr @.str.17, i32 2054, ptr null, ptr null }, align 1
@.str.93 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013device-mapper: thin: %s: dm_thin_find_block() failed: error = %d\0A\00", [60 x i8] zeroinitializer }, align 32
@__process_bio_read_only._entry_ptr = internal global ptr @__process_bio_read_only._entry, section ".printk_index", align 4
@should_error_unserviceable_bio._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.should_error_unserviceable_bio = private unnamed_addr constant [31 x i8] c"should_error_unserviceable_bio\00", align 1
@should_error_unserviceable_bio._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @__func__.should_error_unserviceable_bio, ptr @.str.17, i32 1606, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013device-mapper: thin: bio unserviceable, yet pool is in PM_WRITE mode\0A\00", [56 x i8] zeroinitializer }, align 32
@should_error_unserviceable_bio._entry_ptr = internal global ptr @should_error_unserviceable_bio._entry, section ".printk_index", align 4
@should_error_unserviceable_bio._rs.95 = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@should_error_unserviceable_bio._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @__func__.should_error_unserviceable_bio, ptr @.str.17, i32 1618, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\013device-mapper: thin: bio unserviceable, yet pool has an unknown mode\0A\00", [56 x i8] zeroinitializer }, align 32
@should_error_unserviceable_bio._entry_ptr.98 = internal global ptr @should_error_unserviceable_bio._entry.96, section ".printk_index", align 4
@.str.99 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"dm_thin_insert_block\00", [43 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"dm_thin_remove_range\00", [43 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"dm_pool_inc_data_range\00", [41 x i8] zeroinitializer }, align 32
@process_prepared_discard_passdown_pt1._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.103, ptr @.str.17, i32 1185, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [102 x i8], [58 x i8] } { [102 x i8] c"\014device-mapper: thin: %s: unable to allocate top level discard bio for passdown. Skipping passdown.\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"process_prepared_discard_passdown_pt1\00", [58 x i8] zeroinitializer }, align 32
@process_prepared_discard_passdown_pt1._entry_ptr = internal global ptr @process_prepared_discard_passdown_pt1._entry, section ".printk_index", align 4
@fs_bio_set = external dso_local global %struct.bio_set, align 4
@.str.104 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"dm_pool_dec_data_range\00", [41 x i8] zeroinitializer }, align 32
@process_cell._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.process_cell = private unnamed_addr constant [13 x i8] c"process_cell\00", align 1
@process_cell._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @__func__.process_cell, ptr @.str.17, i32 1986, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@process_cell._entry_ptr = internal global ptr @process_cell._entry, section ".printk_index", align 4
@break_sharing._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.break_sharing = private unnamed_addr constant [14 x i8] c"break_sharing\00", align 1
@break_sharing._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @__func__.break_sharing, ptr @.str.17, i32 1808, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013device-mapper: thin: %s: alloc_data_block() failed: error = %d\0A\00", [62 x i8] zeroinitializer }, align 32
@break_sharing._entry_ptr = internal global ptr @break_sharing._entry, section ".printk_index", align 4
@.str.106 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"dm_pool_get_free_block_count\00", [35 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"dm_pool_alloc_data_block\00", [39 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"dm_pool_get_free_metadata_block_count\00", [58 x i8] zeroinitializer }, align 32
@check_low_water_mark._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.110, ptr @.str.17, i32 1514, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\014device-mapper: thin: %s: reached low water mark for data device: sending event.\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"check_low_water_mark\00", [43 x i8] zeroinitializer }, align 32
@check_low_water_mark._entry_ptr = internal global ptr @check_low_water_mark._entry, section ".printk_index", align 4
@provision_block._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.81, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@__func__.provision_block = private unnamed_addr constant [16 x i8] c"provision_block\00", align 1
@provision_block._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @__func__.provision_block, ptr @.str.17, i32 1932, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@provision_block._entry_ptr = internal global ptr @provision_block._entry, section ".printk_index", align 4
@.str.111 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"write\00", [26 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"out-of-data-space\00", [46 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"read-only\00", [22 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"fail\00", [27 x i8] zeroinitializer }, align 32
@__const.notify_of_pool_mode_change.descs = private unnamed_addr constant [5 x ptr] [ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.113, ptr @.str.114], align 4
@.str.115 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" (queue IO)\00", [20 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" (error IO)\00", [20 x i8] zeroinitializer }, align 32
@notify_of_pool_mode_change._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.117, ptr @.str.118, ptr @.str.17, i32 318, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"\016device-mapper: thin: %s: switching pool to %s%s mode\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"notify_of_pool_mode_change\00", [37 x i8] zeroinitializer }, align 32
@notify_of_pool_mode_change._entry_ptr = internal global ptr @notify_of_pool_mode_change._entry, section ".printk_index", align 4
@.str.119 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.120 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Could not get free metadata blocks\00", [61 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"No free metadata blocks\00", [40 x i8] zeroinitializer }, align 32
@check_for_metadata_space._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.122, ptr @.str.123, ptr @.str.17, i32 1465, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\013device-mapper: thin: %s\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"check_for_metadata_space\00", [39 x i8] zeroinitializer }, align 32
@check_for_metadata_space._entry_ptr = internal global ptr @check_for_metadata_space._entry, section ".printk_index", align 4
@requeue_bios.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@metadata_low_callback._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.124, ptr @.str.125, ptr @.str.17, i32 3185, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"\014device-mapper: thin: %s: reached low water mark for metadata device: sending event.\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"metadata_low_callback\00", [42 x i8] zeroinitializer }, align 32
@metadata_low_callback._entry_ptr = internal global ptr @metadata_low_callback._entry, section ".printk_index", align 4
@maybe_resize_data_dev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.126, ptr @.str.127, ptr @.str.17, i32 3460, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013device-mapper: thin: %s: failed to retrieve data device size\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"maybe_resize_data_dev\00", [42 x i8] zeroinitializer }, align 32
@maybe_resize_data_dev._entry_ptr = internal global ptr @maybe_resize_data_dev._entry, section ".printk_index", align 4
@maybe_resize_data_dev._entry.128 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.127, ptr @.str.17, i32 3467, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013device-mapper: thin: %s: pool target (%llu blocks) too small: expected %llu\0A\00", [49 x i8] zeroinitializer }, align 32
@maybe_resize_data_dev._entry_ptr.130 = internal global ptr @maybe_resize_data_dev._entry.128, section ".printk_index", align 4
@maybe_resize_data_dev._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.127, ptr @.str.17, i32 3473, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\013device-mapper: thin: %s: unable to grow the data device until repaired.\0A\00", [53 x i8] zeroinitializer }, align 32
@maybe_resize_data_dev._entry_ptr.133 = internal global ptr @maybe_resize_data_dev._entry.131, section ".printk_index", align 4
@maybe_resize_data_dev._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.127, ptr @.str.17, i32 3480, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"\016device-mapper: thin: %s: growing the data device from %llu to %llu blocks\0A\00", [51 x i8] zeroinitializer }, align 32
@maybe_resize_data_dev._entry_ptr.136 = internal global ptr @maybe_resize_data_dev._entry.134, section ".printk_index", align 4
@.str.137 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"dm_pool_resize_data_dev\00", [40 x i8] zeroinitializer }, align 32
@maybe_resize_metadata_dev._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.138, ptr @.str.139, ptr @.str.17, i32 3507, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"\013device-mapper: thin: %s: failed to retrieve metadata device size\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"maybe_resize_metadata_dev\00", [38 x i8] zeroinitializer }, align 32
@maybe_resize_metadata_dev._entry_ptr = internal global ptr @maybe_resize_metadata_dev._entry, section ".printk_index", align 4
@maybe_resize_metadata_dev._entry.140 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.141, ptr @.str.139, ptr @.str.17, i32 3514, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [83 x i8], [45 x i8] } { [83 x i8] c"\013device-mapper: thin: %s: metadata device (%llu blocks) too small: expected %llu\0A\00", [45 x i8] zeroinitializer }, align 32
@maybe_resize_metadata_dev._entry_ptr.142 = internal global ptr @maybe_resize_metadata_dev._entry.140, section ".printk_index", align 4
@maybe_resize_metadata_dev._entry.143 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.144, ptr @.str.139, ptr @.str.17, i32 3520, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"\013device-mapper: thin: %s: unable to grow the metadata device until repaired.\0A\00", [49 x i8] zeroinitializer }, align 32
@maybe_resize_metadata_dev._entry_ptr.145 = internal global ptr @maybe_resize_metadata_dev._entry.143, section ".printk_index", align 4
@maybe_resize_metadata_dev._entry.146 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.147, ptr @.str.139, ptr @.str.17, i32 3527, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"\016device-mapper: thin: %s: growing the metadata device from %llu to %llu blocks\0A\00", [47 x i8] zeroinitializer }, align 32
@maybe_resize_metadata_dev._entry_ptr.148 = internal global ptr @maybe_resize_metadata_dev._entry.146, section ".printk_index", align 4
@.str.149 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"dm_pool_resize_metadata_dev\00", [36 x i8] zeroinitializer }, align 32
@pool_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.150, ptr @.str.151, ptr @.str.17, i32 3927, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\013device-mapper: thin: %s: dm_pool_get_metadata_transaction_id returned %d\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"pool_status\00", [20 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr = internal global ptr @pool_status._entry, section ".printk_index", align 4
@pool_status._entry.152 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.151, ptr @.str.17, i32 3934, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\013device-mapper: thin: %s: dm_pool_get_free_metadata_block_count returned %d\0A\00", [50 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr.154 = internal global ptr @pool_status._entry.152, section ".printk_index", align 4
@pool_status._entry.155 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.156, ptr @.str.151, ptr @.str.17, i32 3941, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [70 x i8], [58 x i8] } { [70 x i8] c"\013device-mapper: thin: %s: dm_pool_get_metadata_dev_size returned %d\0A\00", [58 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr.157 = internal global ptr @pool_status._entry.155, section ".printk_index", align 4
@pool_status._entry.158 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.159, ptr @.str.151, ptr @.str.17, i32 3948, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\013device-mapper: thin: %s: dm_pool_get_free_block_count returned %d\0A\00", [59 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr.160 = internal global ptr @pool_status._entry.158, section ".printk_index", align 4
@pool_status._entry.161 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.162, ptr @.str.151, ptr @.str.17, i32 3955, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013device-mapper: thin: %s: dm_pool_get_data_dev_size returned %d\0A\00", [62 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr.163 = internal global ptr @pool_status._entry.161, section ".printk_index", align 4
@pool_status._entry.164 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.165, ptr @.str.151, ptr @.str.17, i32 3962, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\013device-mapper: thin: %s: dm_pool_get_metadata_snap returned %d\0A\00", [62 x i8] zeroinitializer }, align 32
@pool_status._entry_ptr.166 = internal global ptr @pool_status._entry.164, section ".printk_index", align 4
@.str.167 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%llu %llu/%llu %llu/%llu \00", [38 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"- \00", [29 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"out_of_data_space \00", [45 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ro \00", [28 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"rw \00", [28 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ignore_discard \00", [16 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"discard_passdown \00", [46 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"no_discard_passdown \00", [43 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"error_if_no_space \00", [45 x i8] zeroinitializer }, align 32
@.str.176 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"queue_if_no_space \00", [45 x i8] zeroinitializer }, align 32
@.str.177 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"needs_check \00", [19 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s %s %lu %llu \00", [16 x i8] zeroinitializer }, align 32
@.str.179 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%u \00", [28 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"skip_block_zeroing \00", [44 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"read_only \00", [21 x i8] zeroinitializer }, align 32
@pool_message._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.183, ptr @.str.17, i32 3835, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [93 x i8], [35 x i8] } { [93 x i8] c"\013device-mapper: thin: %s: unable to service pool target messages in READ_ONLY or FAIL mode\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"pool_message\00", [19 x i8] zeroinitializer }, align 32
@pool_message._entry_ptr = internal global ptr @pool_message._entry, section ".printk_index", align 4
@.str.184 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"create_thin\00", [20 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"create_snap\00", [20 x i8] zeroinitializer }, align 32
@.str.186 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"delete\00", [25 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"set_transaction_id\00", [45 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"reserve_metadata_snap\00", [42 x i8] zeroinitializer }, align 32
@.str.189 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"release_metadata_snap\00", [42 x i8] zeroinitializer }, align 32
@pool_message._entry.190 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.191, ptr @.str.183, ptr @.str.17, i32 3858, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.191 = internal constant { [75 x i8], [53 x i8] } { [75 x i8] c"\014device-mapper: thin: Unrecognised thin pool target message received: %s\0A\00", [53 x i8] zeroinitializer }, align 32
@pool_message._entry_ptr.192 = internal global ptr @pool_message._entry.190, section ".printk_index", align 4
@process_create_thin_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.193, ptr @.str.194, ptr @.str.17, i32 3701, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"\014device-mapper: thin: Creation of new thinly-provisioned device with id %s failed.\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.194 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"process_create_thin_mesg\00", [39 x i8] zeroinitializer }, align 32
@process_create_thin_mesg._entry_ptr = internal global ptr @process_create_thin_mesg._entry, section ".printk_index", align 4
@check_arg_count._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.196, ptr @.str.17, i32 3666, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"\014device-mapper: thin: Message received with %u arguments instead of %u.\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.196 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"check_arg_count\00", [16 x i8] zeroinitializer }, align 32
@check_arg_count._entry_ptr = internal global ptr @check_arg_count._entry, section ".printk_index", align 4
@process_create_snap_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.198, ptr @.str.17, i32 3729, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014device-mapper: thin: Creation of new snapshot %s of device %s failed.\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"process_create_snap_mesg\00", [39 x i8] zeroinitializer }, align 32
@process_create_snap_mesg._entry_ptr = internal global ptr @process_create_snap_mesg._entry, section ".printk_index", align 4
@process_delete_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.199, ptr @.str.200, ptr @.str.17, i32 3751, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.199 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"\014device-mapper: thin: Deletion of thin device %s failed.\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"process_delete_mesg\00", [44 x i8] zeroinitializer }, align 32
@process_delete_mesg._entry_ptr = internal global ptr @process_delete_mesg._entry, section ".printk_index", align 4
@process_set_transaction_id_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.201, ptr @.str.202, ptr @.str.17, i32 3766, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.201 = internal constant { [72 x i8], [56 x i8] } { [72 x i8] c"\014device-mapper: thin: set_transaction_id message: Unrecognised id %s.\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.202 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"process_set_transaction_id_mesg\00", [32 x i8] zeroinitializer }, align 32
@process_set_transaction_id_mesg._entry_ptr = internal global ptr @process_set_transaction_id_mesg._entry, section ".printk_index", align 4
@process_set_transaction_id_mesg._entry.203 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.202, ptr @.str.17, i32 3771, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"\014device-mapper: thin: set_transaction_id message: Unrecognised new id %s.\0A\00", [52 x i8] zeroinitializer }, align 32
@process_set_transaction_id_mesg._entry_ptr.205 = internal global ptr @process_set_transaction_id_mesg._entry.203, section ".printk_index", align 4
@process_set_transaction_id_mesg._entry.206 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.207, ptr @.str.202, ptr @.str.17, i32 3778, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"\014device-mapper: thin: Failed to change transaction id from %s to %s.\0A\00", [57 x i8] zeroinitializer }, align 32
@process_set_transaction_id_mesg._entry_ptr.208 = internal global ptr @process_set_transaction_id_mesg._entry.206, section ".printk_index", align 4
@process_reserve_metadata_snap_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.209, ptr @.str.210, ptr @.str.17, i32 3797, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.209 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\014device-mapper: thin: reserve_metadata_snap message failed.\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"process_reserve_metadata_snap_mesg\00", [61 x i8] zeroinitializer }, align 32
@process_reserve_metadata_snap_mesg._entry_ptr = internal global ptr @process_reserve_metadata_snap_mesg._entry, section ".printk_index", align 4
@process_release_metadata_snap_mesg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.211, ptr @.str.212, ptr @.str.17, i32 3812, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.211 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\014device-mapper: thin: release_metadata_snap message failed.\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.212 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"process_release_metadata_snap_mesg\00", [61 x i8] zeroinitializer }, align 32
@process_release_metadata_snap_mesg._entry_ptr = internal global ptr @process_release_metadata_snap_mesg._entry, section ".printk_index", align 4
@.str.213 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"discard unsupported\00", [44 x i8] zeroinitializer }, align 32
@.str.214 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"max discard sectors smaller than a block\00", [55 x i8] zeroinitializer }, align 32
@disable_passdown_if_not_supported._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.215, ptr @.str.216, ptr @.str.17, i32 2849, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.215 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\014device-mapper: thin: Data device (%s) %s: Disabling discard passdown.\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"disable_passdown_if_not_supported\00", [62 x i8] zeroinitializer }, align 32
@disable_passdown_if_not_supported._entry_ptr = internal global ptr @disable_passdown_if_not_supported._entry, section ".printk_index", align 4
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967235, i64 4294967285]
@__sancov_gen_cov_switch_values.217 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.218 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.219 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.220 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967235]
@__sancov_gen_cov_switch_values.221 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.222 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.223 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967235]
@__sancov_gen_cov_switch_values.224 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.225 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967268]
@__sancov_gen_cov_switch_values.226 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@___asan_gen_.227 = private unnamed_addr constant [19 x i8] c"dm_kcopyd_throttle\00", align 1
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 37, i32 1 }
@___asan_gen_.230 = private unnamed_addr constant [22 x i8] c"no_space_timeout_secs\00", align 1
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 35, i32 17 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4501, i32 23 }
@___asan_gen_.236 = private unnamed_addr constant [19 x i8] c"_new_mapping_cache\00", align 1
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2922, i32 27 }
@___asan_gen_.239 = private unnamed_addr constant [12 x i8] c"thin_target\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4477, i32 27 }
@___asan_gen_.242 = private unnamed_addr constant [12 x i8] c"pool_target\00", align 1
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4094, i32 27 }
@___asan_gen_.248 = private unnamed_addr constant [19 x i8] c"dm_thin_pool_table\00", align 1
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 526, i32 3 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 530, i32 2 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4478, i32 10 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4174, i32 15 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4181, i32 15 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4186, i32 2 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4194, i32 16 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4201, i32 16 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4209, i32 15 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4215, i32 15 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4222, i32 15 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4229, i32 15 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4236, i32 15 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4243, i32 15 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4267, i32 15 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3680, i32 3 }
@___asan_gen_.312 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.312, i32 87, i32 2 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2905, i32 3 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2465, i32 2 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4394, i32 3 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4399, i32 3 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4405, i32 5 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4411, i32 5 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4415, i32 4 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4417, i32 5 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4424, i32 4 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4428, i32 5 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4440, i32 2 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4095, i32 10 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3306, i32 15 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3324, i32 15 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3331, i32 15 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3339, i32 15 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3345, i32 15 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3370, i32 15 }
@___asan_gen_.386 = private unnamed_addr constant [6 x i8] c"_args\00", align 1
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3137, i32 29 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3138, i32 10 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3155, i32 29 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3158, i32 34 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3161, i32 34 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3164, i32 34 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3167, i32 34 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3171, i32 16 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3224, i32 3 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3085, i32 13 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3089, i32 13 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3098, i32 14 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2938, i32 12 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2944, i32 12 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2959, i32 12 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2967, i32 12 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2976, i32 13 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2978, i32 12 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2984, i32 2 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2985, i32 2 }
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2986, i32 2 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2987, i32 2 }
@___asan_gen_.484 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3001, i32 12 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3008, i32 12 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3017, i32 12 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3026, i32 12 }
@___asan_gen_.499 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3056, i32 3 }
@___asan_gen_.500 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 153, i32 2 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.513, i32 695, i32 2 }
@___asan_gen_.513 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.513, i32 723, i32 2 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1501, i32 35 }
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2643, i32 2 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2629, i32 2 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2631, i32 3 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2636, i32 3 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2539, i32 3 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 660, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2053, i32 3 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1606, i32 3 }
@___asan_gen_.583 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1618, i32 3 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1012, i32 35 }
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1162, i32 35 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1175, i32 35 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1184, i32 3 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1217, i32 35 }
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1985, i32 3 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1807, i32 3 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1533, i32 35 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1565, i32 36 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1571, i32 35 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1513, i32 3 }
@___asan_gen_.638 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1931, i32 3 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 299, i32 3 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 300, i32 3 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 301, i32 3 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 303, i32 3 }
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 310, i32 17 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 312, i32 17 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 316, i32 2 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1460, i32 17 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1462, i32 17 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 1465, i32 3 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3184, i32 2 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3459, i32 3 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3465, i32 3 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3472, i32 4 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3478, i32 4 }
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3483, i32 36 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3506, i32 3 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3512, i32 3 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3519, i32 4 }
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3525, i32 3 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3534, i32 36 }
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3926, i32 4 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3933, i32 4 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3940, i32 4 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3947, i32 4 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3954, i32 4 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3961, i32 4 }
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3966, i32 3 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3976, i32 4 }
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3980, i32 4 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3982, i32 4 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3984, i32 4 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3987, i32 4 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3989, i32 4 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3991, i32 4 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3994, i32 4 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3996, i32 4 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3999, i32 4 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 4008, i32 3 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3872, i32 2 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3875, i32 3 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3884, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3834, i32 3 }
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3839, i32 27 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3842, i32 32 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3845, i32 32 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3848, i32 32 }
@___asan_gen_.865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3851, i32 32 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3854, i32 32 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3858, i32 3 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3700, i32 3 }
@___asan_gen_.892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3665, i32 3 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3728, i32 3 }
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3751, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3766, i32 3 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3771, i32 3 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3777, i32 3 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3797, i32 3 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 3812, i32 3 }
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2843, i32 12 }
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2846, i32 12 }
@___asan_gen_.956 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.962 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.963 = private constant [24 x i8] c"../drivers/md/dm-thin.c\00", align 1
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.963, i32 2849, i32 3 }
@llvm.compiler.used = appending global [308 x ptr] [ptr @__UNIQUE_ID_author300, ptr @__UNIQUE_ID_description299, ptr @__UNIQUE_ID_file301, ptr @__UNIQUE_ID_license302, ptr @__UNIQUE_ID_no_space_timeout298, ptr @__UNIQUE_ID_no_space_timeouttype297, ptr @__UNIQUE_ID_snapshot_copy_throttle284, ptr @__UNIQUE_ID_snapshot_copy_throttletype283, ptr @__exitcall_dm_thin_exit, ptr @__initcall__kmod_dm_thin_pool__296_4533_dm_thin_init6, ptr @__param_no_space_timeout, ptr @__param_snapshot_copy_throttle, ptr @__pool_destroy._entry, ptr @__pool_destroy._entry_ptr, ptr @__process_bio_read_only._entry, ptr @__process_bio_read_only._entry_ptr, ptr @abort_transaction._entry, ptr @abort_transaction._entry.84, ptr @abort_transaction._entry.87, ptr @abort_transaction._entry_ptr, ptr @abort_transaction._entry_ptr.86, ptr @abort_transaction._entry_ptr.89, ptr @break_sharing._entry, ptr @break_sharing._entry_ptr, ptr @check_arg_count._entry, ptr @check_arg_count._entry_ptr, ptr @check_for_metadata_space._entry, ptr @check_for_metadata_space._entry_ptr, ptr @check_low_water_mark._entry, ptr @check_low_water_mark._entry_ptr, ptr @disable_passdown_if_not_supported._entry, ptr @disable_passdown_if_not_supported._entry_ptr, ptr @maybe_resize_data_dev._entry, ptr @maybe_resize_data_dev._entry.128, ptr @maybe_resize_data_dev._entry.131, ptr @maybe_resize_data_dev._entry.134, ptr @maybe_resize_data_dev._entry_ptr, ptr @maybe_resize_data_dev._entry_ptr.130, ptr @maybe_resize_data_dev._entry_ptr.133, ptr @maybe_resize_data_dev._entry_ptr.136, ptr @maybe_resize_metadata_dev._entry, ptr @maybe_resize_metadata_dev._entry.140, ptr @maybe_resize_metadata_dev._entry.143, ptr @maybe_resize_metadata_dev._entry.146, ptr @maybe_resize_metadata_dev._entry_ptr, ptr @maybe_resize_metadata_dev._entry_ptr.142, ptr @maybe_resize_metadata_dev._entry_ptr.145, ptr @maybe_resize_metadata_dev._entry_ptr.148, ptr @metadata_low_callback._entry, ptr @metadata_low_callback._entry_ptr, ptr @metadata_operation_failed._entry, ptr @metadata_operation_failed._entry_ptr, ptr @notify_of_pool_mode_change._entry, ptr @notify_of_pool_mode_change._entry_ptr, ptr @pool_create._entry, ptr @pool_create._entry_ptr, ptr @pool_message._entry, ptr @pool_message._entry.190, ptr @pool_message._entry_ptr, ptr @pool_message._entry_ptr.192, ptr @pool_status._entry, ptr @pool_status._entry.152, ptr @pool_status._entry.155, ptr @pool_status._entry.158, ptr @pool_status._entry.161, ptr @pool_status._entry.164, ptr @pool_status._entry_ptr, ptr @pool_status._entry_ptr.154, ptr @pool_status._entry_ptr.157, ptr @pool_status._entry_ptr.160, ptr @pool_status._entry_ptr.163, ptr @pool_status._entry_ptr.166, ptr @process_cell._entry, ptr @process_cell._entry_ptr, ptr @process_create_snap_mesg._entry, ptr @process_create_snap_mesg._entry_ptr, ptr @process_create_thin_mesg._entry, ptr @process_create_thin_mesg._entry_ptr, ptr @process_delete_mesg._entry, ptr @process_delete_mesg._entry_ptr, ptr @process_prepared_discard_passdown_pt1._entry, ptr @process_prepared_discard_passdown_pt1._entry_ptr, ptr @process_release_metadata_snap_mesg._entry, ptr @process_release_metadata_snap_mesg._entry_ptr, ptr @process_reserve_metadata_snap_mesg._entry, ptr @process_reserve_metadata_snap_mesg._entry_ptr, ptr @process_set_transaction_id_mesg._entry, ptr @process_set_transaction_id_mesg._entry.203, ptr @process_set_transaction_id_mesg._entry.206, ptr @process_set_transaction_id_mesg._entry_ptr, ptr @process_set_transaction_id_mesg._entry_ptr.205, ptr @process_set_transaction_id_mesg._entry_ptr.208, ptr @provision_block._entry, ptr @provision_block._entry_ptr, ptr @read_dev_id._entry, ptr @read_dev_id._entry_ptr, ptr @set_pool_mode._entry, ptr @set_pool_mode._entry_ptr, ptr @should_error_unserviceable_bio._entry, ptr @should_error_unserviceable_bio._entry.96, ptr @should_error_unserviceable_bio._entry_ptr, ptr @should_error_unserviceable_bio._entry_ptr.98, ptr @thin_status._entry, ptr @thin_status._entry.26, ptr @thin_status._entry_ptr, ptr @thin_status._entry_ptr.28, ptr @warn_if_metadata_device_too_big._entry, ptr @warn_if_metadata_device_too_big._entry_ptr, ptr @dm_kcopyd_throttle, ptr @no_space_timeout_secs, ptr @.str, ptr @_new_mapping_cache, ptr @thin_target, ptr @pool_target, ptr @pool_table_init.__key, ptr @dm_thin_pool_table, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @thin_ctr.__key, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @init_completion.__key, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @pool_work_wait.__key, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.27, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @parse_pool_features._args, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @pool_create.__key, ptr @.str.60, ptr @pool_create.__key.61, ptr @.str.62, ptr @pool_create.__key.63, ptr @.str.64, ptr @pool_create.__key.65, ptr @.str.66, ptr @pool_create.__key.67, ptr @.str.68, ptr @pool_create.__key.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @throttle_init.__key, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @metadata_operation_failed._rs, ptr @.str.81, ptr @.str.82, ptr @abort_transaction._rs, ptr @.str.83, ptr @.str.85, ptr @.str.88, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @should_error_unserviceable_bio._rs, ptr @.str.94, ptr @should_error_unserviceable_bio._rs.95, ptr @.str.97, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @process_cell._rs, ptr @break_sharing._rs, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @provision_block._rs, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.129, ptr @.str.132, ptr @.str.135, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.141, ptr @.str.144, ptr @.str.147, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.153, ptr @.str.156, ptr @.str.159, ptr @.str.162, ptr @.str.165, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175, ptr @.str.176, ptr @.str.177, ptr @.str.178, ptr @.str.179, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.184, ptr @.str.185, ptr @.str.186, ptr @.str.187, ptr @.str.188, ptr @.str.189, ptr @.str.191, ptr @.str.193, ptr @.str.194, ptr @.str.195, ptr @.str.196, ptr @.str.197, ptr @.str.198, ptr @.str.199, ptr @.str.200, ptr @.str.201, ptr @.str.202, ptr @.str.204, ptr @.str.207, ptr @.str.209, ptr @.str.210, ptr @.str.211, ptr @.str.212, ptr @.str.213, ptr @.str.214, ptr @.str.215, ptr @.str.216], section "llvm.metadata"
@0 = internal global [246 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dm_kcopyd_throttle to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @no_space_timeout_secs to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.230 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_new_mapping_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.236 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @thin_target to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_target to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_table_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dm_thin_pool_table to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.248 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @thin_ctr.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @read_dev_id._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_work_wait.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @thin_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @thin_status._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @parse_pool_features._args to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @warn_if_metadata_device_too_big._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key.61 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key.63 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key.65 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key.67 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create.__key.69 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_create._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @throttle_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @metadata_operation_failed._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @metadata_operation_failed._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @abort_transaction._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @abort_transaction._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @abort_transaction._entry.84 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @abort_transaction._entry.87 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pool_mode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @should_error_unserviceable_bio._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @should_error_unserviceable_bio._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @should_error_unserviceable_bio._rs.95 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @should_error_unserviceable_bio._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_prepared_discard_passdown_pt1._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 102, i32 160, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_cell._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_cell._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @break_sharing._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @break_sharing._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_low_water_mark._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @provision_block._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.638 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @provision_block._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @notify_of_pool_mode_change._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_for_metadata_space._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @metadata_low_callback._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_data_dev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_data_dev._entry.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_data_dev._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_data_dev._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_metadata_dev._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_metadata_dev._entry.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 83, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_metadata_dev._entry.143 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @maybe_resize_metadata_dev._entry.146 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry.152 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry.155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 70, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry.158 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry.161 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_status._entry.164 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.176 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.177 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.179 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_message._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 93, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.184 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.186 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.189 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pool_message._entry.190 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.191 to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_create_thin_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.194 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @check_arg_count._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.196 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_create_snap_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_delete_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.199 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_set_transaction_id_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.201 to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_set_transaction_id_mesg._entry.203 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_set_transaction_id_mesg._entry.206 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_reserve_metadata_snap_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.209 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @process_release_metadata_snap_mesg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.211 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.212 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.214 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @disable_passdown_if_not_supported._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.956 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.215 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.962 to i32), i32 ptrtoint (ptr @___asan_gen_.963 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @dm_thin_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @__mutex_init(ptr noundef nonnull @dm_thin_pool_table, ptr noundef nonnull @.str.1, ptr noundef nonnull @pool_table_init.__key) #15
  store volatile ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), align 4
  store ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1, i32 1), align 4
  %call = tail call ptr @kmem_cache_create(ptr noundef nonnull @.str, i32 noundef 64, i32 noundef 8, i32 noundef 0, ptr noundef null) #15
  store ptr %call, ptr @_new_mapping_cache, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @dm_register_target(ptr noundef nonnull @thin_target) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.bad_new_mapping_cache_crit_edge

if.end.bad_new_mapping_cache_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %bad_new_mapping_cache

if.end4:                                          ; preds = %if.end
  %call5 = tail call i32 @dm_register_target(ptr noundef nonnull @pool_target) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end4.cleanup_crit_edge, label %bad_thin_target

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

bad_thin_target:                                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dm_unregister_target(ptr noundef nonnull @thin_target) #15
  br label %bad_new_mapping_cache

bad_new_mapping_cache:                            ; preds = %bad_thin_target, %if.end.bad_new_mapping_cache_crit_edge
  %r.0 = phi i32 [ %call1, %if.end.bad_new_mapping_cache_crit_edge ], [ %call5, %bad_thin_target ]
  %0 = load ptr, ptr @_new_mapping_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %0) #15
  br label %cleanup

cleanup:                                          ; preds = %bad_new_mapping_cache, %if.end4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %r.0, %bad_new_mapping_cache ], [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @dm_thin_exit() #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @dm_unregister_target(ptr noundef nonnull @thin_target) #15
  tail call void @dm_unregister_target(ptr noundef nonnull @pool_target) #15
  %0 = load ptr, ptr @_new_mapping_cache, align 4
  tail call void @kmem_cache_destroy(ptr noundef %0) #15
  tail call void @mutex_destroy(ptr noundef nonnull @dm_thin_pool_table) #15
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_cache_create(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_register_target(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_unregister_target(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_destroy(ptr noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @thin_ctr(ptr noundef %ti, i32 noundef %argc, ptr nocapture noundef readonly %argv) #1 align 64 {
entry:
  %pool_dev = alloca ptr, align 4
  %origin_dev = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pool_dev) #15
  %0 = ptrtoint ptr %pool_dev to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %pool_dev, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %origin_dev) #15
  %1 = ptrtoint ptr %origin_dev to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %origin_dev, align 4, !annotation !495
  tail call void @mutex_lock_nested(ptr noundef nonnull @dm_thin_pool_table, i32 noundef 0) #15
  %2 = and i32 %argc, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %switch = icmp eq i32 %2, 2
  br i1 %switch, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %error = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %3 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @.str.3, ptr %error, align 8
  br label %out_unlock

if.end:                                           ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 184) #18
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %5 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call7.i.i, ptr %private, align 4
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %error3 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %6 = ptrtoint ptr %error3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @.str.4, ptr %error3, align 8
  br label %out_unlock

if.end4:                                          ; preds = %if.end
  %7 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ti, align 8
  %call5 = tail call ptr @dm_table_get_md(ptr noundef %8) #15
  %thin_md = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 7
  %9 = ptrtoint ptr %thin_md to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call5, ptr %thin_md, align 8
  %lock = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 9
  tail call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.5, ptr noundef nonnull @thin_ctr.__key, i16 noundef signext 3) #15
  %deferred_cells = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 10
  %10 = ptrtoint ptr %deferred_cells to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %deferred_cells, ptr %deferred_cells, align 4
  %prev.i = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 10, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %deferred_cells, ptr %prev.i, align 8
  %deferred_bio_list = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 11
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %argc)
  %cmp7 = icmp eq i32 %argc, 3
  %12 = call ptr @memset(ptr %deferred_bio_list, i32 0, i32 20)
  br i1 %cmp7, label %if.then8, label %if.end4.if.end22_crit_edge

if.end4.if.end22_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end22

if.then8:                                         ; preds = %if.end4
  %13 = ptrtoint ptr %argv to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argv, align 4
  %arrayidx9 = getelementptr ptr, ptr %argv, i32 2
  %15 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx9, align 4
  %call10 = tail call i32 @strcmp(ptr noundef %14, ptr noundef %16) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  %error13 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %17 = ptrtoint ptr %error13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @.str.6, ptr %error13, align 8
  br label %bad_origin_dev

if.end14:                                         ; preds = %if.then8
  %call16 = call i32 @dm_get_device(ptr noundef %ti, ptr noundef %16, i32 noundef 1, ptr noundef nonnull %origin_dev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %error19 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %18 = ptrtoint ptr %error19 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @.str.7, ptr %error19, align 8
  br label %bad_origin_dev

if.end20:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %19 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %origin_dev, align 4
  %origin_dev21 = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 2
  %21 = ptrtoint ptr %origin_dev21 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %origin_dev21, align 4
  br label %if.end22

if.end22:                                         ; preds = %if.end20, %if.end4.if.end22_crit_edge
  %22 = ptrtoint ptr %argv to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argv, align 4
  %24 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ti, align 8
  %call25 = call i32 @dm_table_get_mode(ptr noundef %25) #15
  %call26 = call i32 @dm_get_device(ptr noundef %ti, ptr noundef %23, i32 noundef %call25, ptr noundef nonnull %pool_dev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end30, label %if.then28

if.then28:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  %error29 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %26 = ptrtoint ptr %error29 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @.str.8, ptr %error29, align 8
  br label %bad_pool_dev

if.end30:                                         ; preds = %if.end22
  %27 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pool_dev, align 4
  %pool_dev31 = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %pool_dev31 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %28, ptr %pool_dev31, align 8
  %arrayidx32 = getelementptr ptr, ptr %argv, i32 1
  %30 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx32, align 4
  %dev_id = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 4
  %call.i = call i32 @kstrtoull(ptr noundef %31, i32 noundef 10, ptr noundef %dev_id) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end30.if.then35_crit_edge

if.end30.if.then35_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then35

land.lhs.true.i:                                  ; preds = %if.end30
  %32 = ptrtoint ptr %dev_id to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %dev_id, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %33)
  %cmp.i = icmp ult i64 %33, 16777216
  br i1 %cmp.i, label %if.end37, label %land.lhs.true.i.if.then35_crit_edge

land.lhs.true.i.if.then35_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then35

if.then35:                                        ; preds = %land.lhs.true.i.if.then35_crit_edge, %if.end30.if.then35_crit_edge
  %error36 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %34 = ptrtoint ptr %error36 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @.str.9, ptr %error36, align 8
  br label %bad_common

if.end37:                                         ; preds = %land.lhs.true.i
  %35 = ptrtoint ptr %pool_dev31 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pool_dev31, align 8
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %36, align 4
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %38, i32 0, i32 5
  %39 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %bd_dev, align 4
  %call39 = call ptr @dm_get_md(i32 noundef %40) #15
  %tobool40.not = icmp eq ptr %call39, null
  br i1 %tobool40.not, label %if.then41, label %if.end43

if.then41:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  %error42 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %41 = ptrtoint ptr %error42 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @.str.10, ptr %error42, align 8
  br label %bad_common

if.end43:                                         ; preds = %if.end37
  %call.i175 = call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i175, label %if.end43.for.cond.i_crit_edge, label %do.body3.i, !prof !496

if.end43.for.cond.i_crit_edge:                    ; preds = %if.end43
  br label %for.cond.i

do.body3.i:                                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 555, 0\0A.popsection", ""() #15, !srcloc !497
  unreachable

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end43.for.cond.i_crit_edge
  %tmp.0.in.i = phi ptr [ %tmp.0.i, %for.body.i.for.cond.i_crit_edge ], [ getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), %if.end43.for.cond.i_crit_edge ]
  %42 = ptrtoint ptr %tmp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %tmp.0.i = load ptr, ptr %tmp.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %tmp.0.i, getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1)
  br i1 %cmp.not.i, label %__pool_table_lookup.exit.thread, label %for.body.i

__pool_table_lookup.exit.thread:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool181 = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 5
  %43 = ptrtoint ptr %pool181 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr null, ptr %pool181, align 8
  br label %if.then47

for.body.i:                                       ; preds = %for.cond.i
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 2
  %44 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pool_md.i, align 4
  %cmp12.i = icmp eq ptr %45, %call39
  br i1 %cmp12.i, label %__pool_table_lookup.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i

__pool_table_lookup.exit:                         ; preds = %for.body.i
  %pool = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 5
  %46 = ptrtoint ptr %pool to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %tmp.0.i, ptr %pool, align 8
  %tobool46.not = icmp eq ptr %tmp.0.i, null
  br i1 %tobool46.not, label %__pool_table_lookup.exit.if.then47_crit_edge, label %if.end49

__pool_table_lookup.exit.if.then47_crit_edge:     ; preds = %__pool_table_lookup.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then47

if.then47:                                        ; preds = %__pool_table_lookup.exit.if.then47_crit_edge, %__pool_table_lookup.exit.thread
  %error48 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %47 = ptrtoint ptr %error48 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @.str.11, ptr %error48, align 8
  br label %bad_pool_lookup

if.end49:                                         ; preds = %__pool_table_lookup.exit
  %call.i176 = call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i176, label %__pool_inc.exit, label %do.body3.i177, !prof !496

do.body3.i177:                                    ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3063, 0\0A.popsection", ""() #15, !srcloc !498
  unreachable

__pool_inc.exit:                                  ; preds = %if.end49
  %ref_count.i = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 19
  %48 = ptrtoint ptr %ref_count.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %ref_count.i, align 8
  %inc.i = add i32 %49, 1
  store i32 %inc.i, ptr %ref_count.i, align 8
  %50 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pool, align 8
  %pf.i = getelementptr inbounds %struct.pool, ptr %51, i32 0, i32 9
  %52 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %53)
  %cmp53 = icmp eq i32 %53, 4
  br i1 %cmp53, label %if.then54, label %if.end56

if.then54:                                        ; preds = %__pool_inc.exit
  call void @__sanitizer_cov_trace_pc() #17
  %error55 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %54 = ptrtoint ptr %error55 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr @.str.12, ptr %error55, align 8
  br label %bad_pool

if.end56:                                         ; preds = %__pool_inc.exit
  %pmd = getelementptr inbounds %struct.pool, ptr %51, i32 0, i32 5
  %55 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pmd, align 8
  %57 = ptrtoint ptr %dev_id to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %dev_id, align 8
  %td = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 6
  %call59 = call i32 @dm_pool_open_thin_device(ptr noundef %56, i64 noundef %58, ptr noundef %td) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %if.end63, label %if.then61

if.then61:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #17
  %error62 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %59 = ptrtoint ptr %error62 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @.str.13, ptr %error62, align 8
  br label %bad_pool

if.end63:                                         ; preds = %if.end56
  %60 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %pool, align 8
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %61, i32 0, i32 7
  %62 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %sectors_per_block, align 8
  %conv = zext i32 %63 to i64
  %call65 = call i32 @dm_set_target_max_io_len(ptr noundef %ti, i64 noundef %conv) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.end68, label %if.end63.bad_crit_edge

if.end63.bad_crit_edge:                           ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #17
  br label %bad

if.end68:                                         ; preds = %if.end63
  %num_flush_bios = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 5
  %64 = ptrtoint ptr %num_flush_bios to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 1, ptr %num_flush_bios, align 4
  %flush_supported = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 13
  %65 = ptrtoint ptr %flush_supported to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load = load i8, ptr %flush_supported, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %flush_supported, align 4
  %per_io_data_size = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 10
  %66 = ptrtoint ptr %per_io_data_size to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 32, ptr %per_io_data_size, align 8
  %67 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pool, align 8
  %discard_enabled = getelementptr inbounds %struct.pool, ptr %68, i32 0, i32 9, i32 1
  %69 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %69)
  %bf.load70 = load i8, ptr %discard_enabled, align 4
  %70 = and i8 %bf.load70, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %70)
  %bf.cast.not = icmp eq i8 %70, 0
  br i1 %bf.cast.not, label %if.end68.if.end76_crit_edge, label %if.then72

if.end68.if.end76_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end76

if.then72:                                        ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #17
  %bf.set75 = or i8 %bf.load, -64
  %71 = ptrtoint ptr %flush_supported to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %bf.set75, ptr %flush_supported, align 4
  %num_discard_bios = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 6
  %72 = ptrtoint ptr %num_discard_bios to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 1, ptr %num_discard_bios, align 8
  br label %if.end76

if.end76:                                         ; preds = %if.then72, %if.end68.if.end76_crit_edge
  call void @mutex_unlock(ptr noundef nonnull @dm_thin_pool_table) #15
  %73 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pool, align 8
  %lock78 = getelementptr inbounds %struct.pool, ptr %74, i32 0, i32 20
  call void @_raw_spin_lock_irq(ptr noundef %lock78) #15
  %75 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %pool, align 8
  %suspended = getelementptr inbounds %struct.pool, ptr %76, i32 0, i32 10
  %77 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %77)
  %bf.load80 = load i8, ptr %suspended, align 8
  %78 = and i8 %bf.load80, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %78)
  %bf.cast83.not = icmp eq i8 %78, 0
  br i1 %bf.cast83.not, label %if.end88, label %if.then84

if.then84:                                        ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #17
  %lock86 = getelementptr inbounds %struct.pool, ptr %76, i32 0, i32 20
  call void @_raw_spin_unlock_irq(ptr noundef %lock86) #15
  call void @mutex_lock_nested(ptr noundef nonnull @dm_thin_pool_table, i32 noundef 0) #15
  %error87 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %79 = ptrtoint ptr %error87 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr @.str.14, ptr %error87, align 8
  br label %bad

if.end88:                                         ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #17
  %refcount = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 14
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #15
  %80 = ptrtoint ptr %refcount to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile i32 1, ptr %refcount, align 8
  %can_destroy = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 15
  %81 = ptrtoint ptr %can_destroy to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 0, ptr %can_destroy, align 4
  %wait.i = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 15, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i, ptr noundef nonnull @.str.18, ptr noundef nonnull @init_completion.__key) #15
  %82 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pool, align 8
  %active_thins = getelementptr inbounds %struct.pool, ptr %83, i32 0, i32 26
  call fastcc void @list_add_tail_rcu(ptr noundef nonnull %call7.i.i, ptr noundef %active_thins)
  %84 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %pool, align 8
  %lock91 = getelementptr inbounds %struct.pool, ptr %85, i32 0, i32 20
  call void @_raw_spin_unlock_irq(ptr noundef %lock91) #15
  call void @synchronize_rcu() #15
  call void @dm_put(ptr noundef nonnull %call39) #15
  br label %cleanup

bad:                                              ; preds = %if.then84, %if.end63.bad_crit_edge
  %r.0 = phi i32 [ %call65, %if.end63.bad_crit_edge ], [ -22, %if.then84 ]
  %86 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %td, align 4
  %call93 = call i32 @dm_pool_close_thin_device(ptr noundef %87) #15
  br label %bad_pool

bad_pool:                                         ; preds = %bad, %if.then61, %if.then54
  %r.1 = phi i32 [ -22, %if.then54 ], [ %call59, %if.then61 ], [ %r.0, %bad ]
  %88 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %pool, align 8
  call fastcc void @__pool_dec(ptr noundef %89)
  br label %bad_pool_lookup

bad_pool_lookup:                                  ; preds = %bad_pool, %if.then47
  %r.2 = phi i32 [ %r.1, %bad_pool ], [ -22, %if.then47 ]
  call void @dm_put(ptr noundef nonnull %call39) #15
  br label %bad_common

bad_common:                                       ; preds = %bad_pool_lookup, %if.then41, %if.then35
  %r.3 = phi i32 [ -22, %if.then35 ], [ %r.2, %bad_pool_lookup ], [ -22, %if.then41 ]
  %90 = ptrtoint ptr %pool_dev31 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %pool_dev31, align 8
  call void @dm_put_device(ptr noundef %ti, ptr noundef %91) #15
  br label %bad_pool_dev

bad_pool_dev:                                     ; preds = %bad_common, %if.then28
  %r.4 = phi i32 [ %call26, %if.then28 ], [ %r.3, %bad_common ]
  %origin_dev96 = getelementptr inbounds %struct.thin_c, ptr %call7.i.i, i32 0, i32 2
  %92 = ptrtoint ptr %origin_dev96 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %origin_dev96, align 4
  %tobool97.not = icmp eq ptr %93, null
  br i1 %tobool97.not, label %bad_pool_dev.bad_origin_dev_crit_edge, label %if.then98

bad_pool_dev.bad_origin_dev_crit_edge:            ; preds = %bad_pool_dev
  call void @__sanitizer_cov_trace_pc() #17
  br label %bad_origin_dev

if.then98:                                        ; preds = %bad_pool_dev
  call void @__sanitizer_cov_trace_pc() #17
  call void @dm_put_device(ptr noundef %ti, ptr noundef nonnull %93) #15
  br label %bad_origin_dev

bad_origin_dev:                                   ; preds = %if.then98, %bad_pool_dev.bad_origin_dev_crit_edge, %if.then18, %if.then12
  %r.5 = phi i32 [ %call16, %if.then18 ], [ %r.4, %if.then98 ], [ %r.4, %bad_pool_dev.bad_origin_dev_crit_edge ], [ -22, %if.then12 ]
  call void @kfree(ptr noundef nonnull %call7.i.i) #15
  br label %out_unlock

out_unlock:                                       ; preds = %bad_origin_dev, %if.then2, %if.then
  %r.6 = phi i32 [ -22, %if.then ], [ %r.5, %bad_origin_dev ], [ -12, %if.then2 ]
  call void @mutex_unlock(ptr noundef nonnull @dm_thin_pool_table) #15
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %if.end88
  %retval.0 = phi i32 [ %r.6, %out_unlock ], [ 0, %if.end88 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %origin_dev) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pool_dev) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @thin_dtr(ptr noundef %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 8
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %1) #15
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_rcu.exit_crit_edge

entry.list_del_rcu.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %entry.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %11 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pool, align 8
  %lock2 = getelementptr inbounds %struct.pool, ptr %12, i32 0, i32 20
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock2) #15
  tail call void @synchronize_rcu() #15
  %refcount.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 14
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !499
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #15
  %13 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #15, !srcloc !500
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.thin_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !496

if.end5.i.i.i.i.thin_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef 3) #15
  br label %thin_put.exit

if.then.i:                                        ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !501
  %can_destroy.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 15
  tail call void @complete(ptr noundef %can_destroy.i) #15
  br label %thin_put.exit

thin_put.exit:                                    ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.thin_put.exit_crit_edge
  %can_destroy = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 15
  tail call void @wait_for_completion(ptr noundef %can_destroy) #15
  tail call void @mutex_lock_nested(ptr noundef nonnull @dm_thin_pool_table, i32 noundef 0) #15
  %14 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pool, align 8
  tail call fastcc void @__pool_dec(ptr noundef %15)
  %td = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %td, align 4
  %call = tail call i32 @dm_pool_close_thin_device(ptr noundef %17) #15
  %pool_dev = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 1
  %18 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pool_dev, align 8
  tail call void @dm_put_device(ptr noundef %ti, ptr noundef %19) #15
  %origin_dev = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 2
  %20 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %origin_dev, align 4
  %tobool.not = icmp eq ptr %21, null
  br i1 %tobool.not, label %thin_put.exit.if.end_crit_edge, label %if.then

thin_put.exit.if.end_crit_edge:                   ; preds = %thin_put.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %thin_put.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @dm_put_device(ptr noundef %ti, ptr noundef nonnull %21) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %thin_put.exit.if.end_crit_edge
  tail call void @kfree(ptr noundef %1) #15
  tail call void @mutex_unlock(ptr noundef nonnull @dm_thin_pool_table) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @thin_map(ptr nocapture noundef readonly %ti, ptr noundef %bio) #1 align 64 {
entry:
  %result.i = alloca %struct.dm_thin_lookup_result, align 8
  %virt_cell.i = alloca ptr, align 4
  %data_cell.i = alloca ptr, align 4
  %key.i = alloca %struct.dm_cell_key, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_iter = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %0 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %bi_iter, align 8
  %begin = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 2
  %2 = ptrtoint ptr %begin to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %begin, align 8
  %sub = sub i64 %1, %3
  store i64 %sub, ptr %bi_iter, align 8
  %private.i = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %4 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private.i, align 4
  %pool1.i.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pool1.i.i, align 8
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp.i.i.i = icmp sgt i32 %9, -1
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %9 to i64
  %shr.i.i = lshr i64 %sub, %sh_prom.i.i
  br label %get_bio_block.exit.i

if.else.i.i:                                      ; preds = %entry
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 7
  %10 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sectors_per_block.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %sub)
  %cmp170.i.i = icmp ult i64 %sub, 4294967296
  br i1 %cmp170.i.i, label %if.then174.i.i, label %if.else180.i.i, !prof !496

if.then174.i.i:                                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv175.i.i = trunc i64 %sub to i32
  %div178.i.i = udiv i32 %conv175.i.i, %11
  %conv179.i.i = zext i32 %div178.i.i to i64
  br label %get_bio_block.exit.i

if.else180.i.i:                                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %12 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %11, i64 %sub) #20, !srcloc !502
  %asmresult1.i.i.i = extractvalue { i64, i64 } %12, 1
  br label %get_bio_block.exit.i

get_bio_block.exit.i:                             ; preds = %if.else180.i.i, %if.then174.i.i, %if.then.i.i
  %block_nr.0.i.i = phi i64 [ %shr.i.i, %if.then.i.i ], [ %conv179.i.i, %if.then174.i.i ], [ %asmresult1.i.i.i, %if.else180.i.i ]
  %td1.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 6
  %13 = ptrtoint ptr %td1.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %td1.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %result.i) #15
  %15 = call ptr @memset(ptr %result.i, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %virt_cell.i) #15
  %16 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 -1 to ptr), ptr %virt_cell.i, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_cell.i) #15
  %17 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 -1 to ptr), ptr %data_cell.i, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %key.i) #15
  %18 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 -1, ptr %key.i, align 8
  %call.i.i = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %19 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %5, ptr %call.i.i, align 4
  %shared_read_entry.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i.i, i32 0, i32 1
  %20 = ptrtoint ptr %shared_read_entry.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %shared_read_entry.i.i, align 4
  %all_io_entry.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i.i, i32 0, i32 2
  %21 = ptrtoint ptr %all_io_entry.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %all_io_entry.i.i, align 4
  %overwrite_mapping.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i.i, i32 0, i32 3
  %22 = ptrtoint ptr %overwrite_mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %overwrite_mapping.i.i, align 4
  %cell.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i.i, i32 0, i32 5
  %23 = ptrtoint ptr %cell.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %cell.i.i, align 4
  %requeue_mode.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 8
  %24 = ptrtoint ptr %requeue_mode.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i = load i8, ptr %requeue_mode.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %bf.cast.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %bf.cast.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %get_bio_block.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %25 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 11, ptr %bi_status.i, align 2
  tail call void @bio_endio(ptr noundef %bio) #15
  br label %thin_bio_map.exit

if.end.i:                                         ; preds = %get_bio_block.exit.i
  %26 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pool1.i.i, align 8
  %pf.i.i = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 9
  %28 = ptrtoint ptr %pf.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pf.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %29)
  %cmp.i = icmp eq i32 %29, 4
  br i1 %cmp.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %30 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %30)
  store i8 10, ptr %bi_status.i.i, align 2
  tail call void @bio_endio(ptr noundef %bio) #15
  br label %thin_bio_map.exit

if.end4.i:                                        ; preds = %if.end.i
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %31 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %bi_opf.i, align 8
  %33 = and i32 %32, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.i.i = icmp ne i32 %33, 0
  %and.i = and i32 %32, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i)
  %cmp7.i = icmp eq i32 %and.i, 3
  %or.cond.i = or i1 %tobool.i.i, %cmp7.i
  br i1 %or.cond.i, label %if.then8.i, label %if.end9.i

if.then8.i:                                       ; preds = %if.end4.i
  %throttle.i.i = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 15
  tail call void @down_read(ptr noundef %throttle.i.i) #15
  %34 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pool1.i.i, align 8
  %lock.i.i.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock.i.i.i) #15
  %36 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr null, ptr %bio, align 8
  %tail.i.i.i.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 11, i32 1
  %37 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %tail.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %38, null
  br i1 %tobool.not.i.i.i.i, label %if.else.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #17
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %bio, ptr %38, align 8
  br label %thin_defer_bio_with_throttle.exit.i

if.else.i.i.i.i:                                  ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #17
  %deferred_bio_list.i.i.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 11
  %40 = ptrtoint ptr %deferred_bio_list.i.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %bio, ptr %deferred_bio_list.i.i.i, align 4
  br label %thin_defer_bio_with_throttle.exit.i

thin_defer_bio_with_throttle.exit.i:              ; preds = %if.else.i.i.i.i, %if.then.i.i.i.i
  %41 = ptrtoint ptr %tail.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %bio, ptr %tail.i.i.i.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i.i) #15
  %wq.i.i.i.i = getelementptr inbounds %struct.pool, ptr %35, i32 0, i32 14
  %42 = ptrtoint ptr %wq.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %wq.i.i.i.i, align 8
  %worker.i.i.i.i = getelementptr inbounds %struct.pool, ptr %35, i32 0, i32 13
  %call.i.i.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %43, ptr noundef %worker.i.i.i.i) #15
  tail call void @up_read(ptr noundef %throttle.i.i) #15
  br label %thin_bio_map.exit

if.end9.i:                                        ; preds = %if.end4.i
  %44 = ptrtoint ptr %td1.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %td1.i, align 4
  %add.i71.i = add i64 %block_nr.0.i.i, 1
  %46 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 1, ptr %key.i, align 8
  %call.i.i.i = tail call i64 @dm_thin_dev_id(ptr noundef %45) #15
  %dev.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 1
  %47 = ptrtoint ptr %dev.i.i.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %call.i.i.i, ptr %dev.i.i.i, align 8
  %block_begin.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 2
  %48 = ptrtoint ptr %block_begin.i.i.i to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %block_nr.0.i.i, ptr %block_begin.i.i.i, align 8
  %block_end.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 3
  %49 = ptrtoint ptr %block_end.i.i.i to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 %add.i71.i, ptr %block_end.i.i.i, align 8
  %50 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pool1.i.i, align 8
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %51, i32 0, i32 11
  %52 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prison.i.i, align 4
  %call.i72.i = tail call ptr @dm_bio_prison_alloc_cell(ptr noundef %53, i32 noundef 3072) #15
  %54 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %prison.i.i, align 4
  %call2.i.i = call i32 @dm_bio_detain(ptr noundef %55, ptr noundef nonnull %key.i, ptr noundef %bio, ptr noundef %call.i72.i, ptr noundef nonnull %virt_cell.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i73.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i73.i, label %if.end14.i, label %bio_detain.exit.i

bio_detain.exit.i:                                ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  %56 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %prison.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %57, ptr noundef %call.i72.i) #15
  br label %thin_bio_map.exit

if.end14.i:                                       ; preds = %if.end9.i
  %call15.i = call i32 @dm_thin_find_block(ptr noundef %14, i64 noundef %block_nr.0.i.i, i32 noundef 0, ptr noundef nonnull %result.i) #15
  %58 = zext i32 %call15.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call15.i, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 -61, label %if.end14.i.sw.bb32.i_crit_edge
    i32 -11, label %if.end14.i.sw.bb32.i_crit_edge63
  ]

if.end14.i.sw.bb32.i_crit_edge63:                 ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb32.i

if.end14.i.sw.bb32.i_crit_edge:                   ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb32.i

sw.bb.i:                                          ; preds = %if.end14.i
  %shared.i = getelementptr inbounds %struct.dm_thin_lookup_result, ptr %result.i, i32 0, i32 1
  %59 = ptrtoint ptr %shared.i to i32
  call void @__asan_load1_noabort(i32 %59)
  %bf.load16.i = load i8, ptr %shared.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load16.i)
  %bf.cast18.not.i = icmp sgt i8 %bf.load16.i, -1
  br i1 %bf.cast18.not.i, label %if.end22.i, label %if.then21.i, !prof !496

if.then21.i:                                      ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %virt_cell.i, align 4
  call fastcc void @thin_defer_cell(ptr noundef %5, ptr noundef %61) #15
  br label %thin_bio_map.exit

if.end22.i:                                       ; preds = %sw.bb.i
  %62 = ptrtoint ptr %td1.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %td1.i, align 4
  %64 = ptrtoint ptr %result.i to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %result.i, align 8
  %add.i75.i = add i64 %65, 1
  %66 = ptrtoint ptr %key.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 0, ptr %key.i, align 8
  %call.i.i76.i = call i64 @dm_thin_dev_id(ptr noundef %63) #15
  %67 = ptrtoint ptr %dev.i.i.i to i32
  call void @__asan_store8_noabort(i32 %67)
  store i64 %call.i.i76.i, ptr %dev.i.i.i, align 8
  %68 = ptrtoint ptr %block_begin.i.i.i to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %65, ptr %block_begin.i.i.i, align 8
  %69 = ptrtoint ptr %block_end.i.i.i to i32
  call void @__asan_store8_noabort(i32 %69)
  store i64 %add.i75.i, ptr %block_end.i.i.i, align 8
  %70 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %pool1.i.i, align 8
  %prison.i = getelementptr inbounds %struct.pool, ptr %71, i32 0, i32 11
  %72 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %prison.i, align 4
  %call.i59 = call ptr @dm_bio_prison_alloc_cell(ptr noundef %73, i32 noundef 3072) #15
  %74 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %prison.i, align 4
  %call2.i = call i32 @dm_bio_detain(ptr noundef %75, ptr noundef nonnull %key.i, ptr noundef %bio, ptr noundef %call.i59, ptr noundef nonnull %data_cell.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i60 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i60, label %if.end29.i, label %if.then28.i

if.then28.i:                                      ; preds = %if.end22.i
  %76 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %prison.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %77, ptr noundef %call.i59) #15
  %78 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %virt_cell.i, align 4
  %80 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pool1.i.i, align 8
  %lock.i48 = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 9
  %call3.i49 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i48) #15
  %deferred_bio_list.i50 = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 11
  %prison.i.i51 = getelementptr inbounds %struct.pool, ptr %81, i32 0, i32 11
  %82 = ptrtoint ptr %prison.i.i51 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %prison.i.i51, align 4
  call void @dm_cell_release_no_holder(ptr noundef %83, ptr noundef %79, ptr noundef %deferred_bio_list.i50) #15
  %84 = ptrtoint ptr %prison.i.i51 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %prison.i.i51, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %85, ptr noundef %79) #15
  %86 = ptrtoint ptr %deferred_bio_list.i50 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %deferred_bio_list.i50, align 4
  %cmp.i.not.i52 = icmp eq ptr %87, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i48, i32 noundef %call3.i49) #15
  br i1 %cmp.i.not.i52, label %if.then28.i.thin_bio_map.exit_crit_edge, label %if.then.i56

if.then28.i.thin_bio_map.exit_crit_edge:          ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_bio_map.exit

if.then.i56:                                      ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i53 = getelementptr inbounds %struct.pool, ptr %81, i32 0, i32 14
  %88 = ptrtoint ptr %wq.i.i53 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %wq.i.i53, align 8
  %worker.i.i54 = getelementptr inbounds %struct.pool, ptr %81, i32 0, i32 13
  %call.i.i.i55 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %89, ptr noundef %worker.i.i54) #15
  br label %thin_bio_map.exit

if.end29.i:                                       ; preds = %if.end22.i
  %90 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %bi_opf.i, align 8
  %and.i44 = and i32 %91, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i44)
  %cmp.i45 = icmp eq i32 %and.i44, 3
  br i1 %cmp.i45, label %if.end29.i.inc_all_io_entry.exit_crit_edge, label %if.end.i46

if.end29.i.inc_all_io_entry.exit_crit_edge:       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i46:                                       ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #17
  %92 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %pool1.i.i, align 8
  %call.i = call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %93, i32 0, i32 28
  %94 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = call ptr @dm_deferred_entry_inc(ptr noundef %95) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %96 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i46, %if.end29.i.inc_all_io_entry.exit_crit_edge
  %97 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %data_cell.i, align 4
  %99 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %pool1.i.i, align 8
  %lock.i32 = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 9
  %call3.i33 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i32) #15
  %deferred_bio_list.i34 = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 11
  %prison.i.i35 = getelementptr inbounds %struct.pool, ptr %100, i32 0, i32 11
  %101 = ptrtoint ptr %prison.i.i35 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %prison.i.i35, align 4
  call void @dm_cell_release_no_holder(ptr noundef %102, ptr noundef %98, ptr noundef %deferred_bio_list.i34) #15
  %103 = ptrtoint ptr %prison.i.i35 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %prison.i.i35, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %104, ptr noundef %98) #15
  %105 = ptrtoint ptr %deferred_bio_list.i34 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %deferred_bio_list.i34, align 4
  %cmp.i.not.i36 = icmp eq ptr %106, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i32, i32 noundef %call3.i33) #15
  br i1 %cmp.i.not.i36, label %inc_all_io_entry.exit.cell_defer_no_holder.exit42_crit_edge, label %if.then.i40

inc_all_io_entry.exit.cell_defer_no_holder.exit42_crit_edge: ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit42

if.then.i40:                                      ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i37 = getelementptr inbounds %struct.pool, ptr %100, i32 0, i32 14
  %107 = ptrtoint ptr %wq.i.i37 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %wq.i.i37, align 8
  %worker.i.i38 = getelementptr inbounds %struct.pool, ptr %100, i32 0, i32 13
  %call.i.i.i39 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %108, ptr noundef %worker.i.i38) #15
  br label %cell_defer_no_holder.exit42

cell_defer_no_holder.exit42:                      ; preds = %if.then.i40, %inc_all_io_entry.exit.cell_defer_no_holder.exit42_crit_edge
  %109 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %virt_cell.i, align 4
  %111 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %pool1.i.i, align 8
  %call3.i21 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i32) #15
  %prison.i.i23 = getelementptr inbounds %struct.pool, ptr %112, i32 0, i32 11
  %113 = ptrtoint ptr %prison.i.i23 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %prison.i.i23, align 4
  call void @dm_cell_release_no_holder(ptr noundef %114, ptr noundef %110, ptr noundef %deferred_bio_list.i34) #15
  %115 = ptrtoint ptr %prison.i.i23 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %prison.i.i23, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %116, ptr noundef %110) #15
  %117 = ptrtoint ptr %deferred_bio_list.i34 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %deferred_bio_list.i34, align 4
  %cmp.i.not.i24 = icmp eq ptr %118, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i32, i32 noundef %call3.i21) #15
  br i1 %cmp.i.not.i24, label %cell_defer_no_holder.exit42.cell_defer_no_holder.exit30_crit_edge, label %if.then.i28

cell_defer_no_holder.exit42.cell_defer_no_holder.exit30_crit_edge: ; preds = %cell_defer_no_holder.exit42
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit30

if.then.i28:                                      ; preds = %cell_defer_no_holder.exit42
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i25 = getelementptr inbounds %struct.pool, ptr %112, i32 0, i32 14
  %119 = ptrtoint ptr %wq.i.i25 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %wq.i.i25, align 8
  %worker.i.i26 = getelementptr inbounds %struct.pool, ptr %112, i32 0, i32 13
  %call.i.i.i27 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %120, ptr noundef %worker.i.i26) #15
  br label %cell_defer_no_holder.exit30

cell_defer_no_holder.exit30:                      ; preds = %if.then.i28, %cell_defer_no_holder.exit42.cell_defer_no_holder.exit30_crit_edge
  %121 = ptrtoint ptr %result.i to i32
  call void @__asan_load8_noabort(i32 %121)
  %122 = load i64, ptr %result.i, align 8
  %123 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %pool1.i.i, align 8
  %125 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %125)
  %126 = load i64, ptr %bi_iter, align 8
  %pool_dev.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 1
  %127 = ptrtoint ptr %pool_dev.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %pool_dev.i, align 8
  %129 = ptrtoint ptr %128 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %128, align 4
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %131 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %bi_flags.i.i.i, align 4
  %conv1.i.i.i = and i16 %132, -2049
  store i16 %conv1.i.i.i, ptr %bi_flags.i.i.i, align 4
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %133 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %bi_bdev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %134, %130
  br i1 %cmp.not.i.i, label %cell_defer_no_holder.exit30.bio_set_dev.exit.i_crit_edge, label %if.then.i.i11

cell_defer_no_holder.exit30.bio_set_dev.exit.i_crit_edge: ; preds = %cell_defer_no_holder.exit30
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i

if.then.i.i11:                                    ; preds = %cell_defer_no_holder.exit30
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i = and i16 %132, -2177
  %135 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_store2_noabort(i32 %135)
  store i16 %conv1.i8.i.i, ptr %bi_flags.i.i.i, align 4
  br label %bio_set_dev.exit.i

bio_set_dev.exit.i:                               ; preds = %if.then.i.i11, %cell_defer_no_holder.exit30.bio_set_dev.exit.i_crit_edge
  %136 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store ptr %130, ptr %bi_bdev.i.i, align 4
  call void @bio_associate_blkg(ptr noundef %bio) #15
  %sectors_per_block_shift.i.i = getelementptr inbounds %struct.pool, ptr %124, i32 0, i32 8
  %137 = ptrtoint ptr %sectors_per_block_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %sectors_per_block_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %138)
  %cmp.i.i12 = icmp sgt i32 %138, -1
  br i1 %cmp.i.i12, label %if.then.i14, label %if.else.i

if.then.i14:                                      ; preds = %bio_set_dev.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i = zext i32 %138 to i64
  %shl.i = shl i64 %122, %sh_prom.i
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %124, i32 0, i32 7
  %139 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %sectors_per_block.i, align 8
  %sub.i = add i32 %140, -1
  %conv.i = zext i32 %sub.i to i64
  %and.i13 = and i64 %126, %conv.i
  %or.i = or i64 %and.i13, %shl.i
  br label %remap.exit

if.else.i:                                        ; preds = %bio_set_dev.exit.i
  %sectors_per_block5.i = getelementptr inbounds %struct.pool, ptr %124, i32 0, i32 7
  %141 = ptrtoint ptr %sectors_per_block5.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %sectors_per_block5.i, align 8
  %conv6.i = zext i32 %142 to i64
  %mul.i = mul i64 %122, %conv6.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %126)
  %cmp182.i = icmp ult i64 %126, 4294967296
  br i1 %cmp182.i, label %if.then186.i, label %if.else192.i, !prof !496

if.then186.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i = trunc i64 %126 to i32
  %rem188.i = urem i32 %conv187.i, %142
  br label %if.end196.i

if.else192.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %143 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %142, i64 %126) #20, !srcloc !502
  %asmresult.i296.i = extractvalue { i64, i64 } %143, 0
  %shr.i.i18 = lshr i64 %asmresult.i296.i, 32
  %conv.i.i = trunc i64 %shr.i.i18 to i32
  br label %if.end196.i

if.end196.i:                                      ; preds = %if.else192.i, %if.then186.i
  %__rem.0.i = phi i32 [ %rem188.i, %if.then186.i ], [ %conv.i.i, %if.else192.i ]
  %conv198.i = zext i32 %__rem.0.i to i64
  %add199.i = add i64 %mul.i, %conv198.i
  br label %remap.exit

remap.exit:                                       ; preds = %if.end196.i, %if.then.i14
  %storemerge.i = phi i64 [ %add199.i, %if.end196.i ], [ %or.i, %if.then.i14 ]
  %144 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %144)
  store i64 %storemerge.i, ptr %bi_iter, align 8
  br label %thin_bio_map.exit

sw.bb32.i:                                        ; preds = %if.end14.i.sw.bb32.i_crit_edge, %if.end14.i.sw.bb32.i_crit_edge63
  %145 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %virt_cell.i, align 4
  call fastcc void @thin_defer_cell(ptr noundef %5, ptr noundef %146) #15
  br label %thin_bio_map.exit

sw.default.i:                                     ; preds = %if.end14.i
  %bi_status.i80.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %147 = ptrtoint ptr %bi_status.i80.i to i32
  call void @__asan_store1_noabort(i32 %147)
  store i8 10, ptr %bi_status.i80.i, align 2
  call void @bio_endio(ptr noundef %bio) #15
  %148 = ptrtoint ptr %virt_cell.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %virt_cell.i, align 4
  %150 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %pool1.i.i, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 9
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 11
  %prison.i.i6 = getelementptr inbounds %struct.pool, ptr %151, i32 0, i32 11
  %152 = ptrtoint ptr %prison.i.i6 to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %prison.i.i6, align 4
  call void @dm_cell_release_no_holder(ptr noundef %153, ptr noundef %149, ptr noundef %deferred_bio_list.i) #15
  %154 = ptrtoint ptr %prison.i.i6 to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %prison.i.i6, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %155, ptr noundef %149) #15
  %156 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %157, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %sw.default.i.thin_bio_map.exit_crit_edge, label %if.then.i8

sw.default.i.thin_bio_map.exit_crit_edge:         ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_bio_map.exit

if.then.i8:                                       ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %151, i32 0, i32 14
  %158 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %151, i32 0, i32 13
  %call.i.i.i7 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %159, ptr noundef %worker.i.i) #15
  br label %thin_bio_map.exit

thin_bio_map.exit:                                ; preds = %if.then.i8, %sw.default.i.thin_bio_map.exit_crit_edge, %sw.bb32.i, %remap.exit, %if.then.i56, %if.then28.i.thin_bio_map.exit_crit_edge, %if.then21.i, %bio_detain.exit.i, %thin_defer_bio_with_throttle.exit.i, %if.then3.i, %if.then.i
  %retval.0.i = phi i32 [ 0, %if.then.i ], [ 0, %if.then3.i ], [ 0, %thin_defer_bio_with_throttle.exit.i ], [ 0, %sw.bb32.i ], [ 0, %if.then21.i ], [ 1, %remap.exit ], [ 0, %bio_detain.exit.i ], [ 0, %if.then28.i.thin_bio_map.exit_crit_edge ], [ 0, %if.then.i56 ], [ 0, %sw.default.i.thin_bio_map.exit_crit_edge ], [ 0, %if.then.i8 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %key.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_cell.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %virt_cell.i) #15
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %result.i) #15
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @thin_endio(ptr nocapture noundef readnone %ti, ptr noundef %bio, ptr nocapture noundef readnone %err) #1 align 64 {
entry:
  %work = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %work) #15
  %0 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %work, align 4, !annotation !495
  %1 = getelementptr inbounds %struct.list_head, ptr %work, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !495
  %3 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %call, align 4
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pool1, align 8
  %shared_read_entry = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 1
  %7 = ptrtoint ptr %shared_read_entry to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %shared_read_entry, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %9 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %work, ptr %work, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %work, ptr %1, align 4
  %11 = ptrtoint ptr %shared_read_entry to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %shared_read_entry, align 4
  call void @dm_deferred_entry_dec(ptr noundef %12, ptr noundef nonnull %work) #15
  %lock = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 20
  %call6 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #15
  %13 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %work, align 4
  %cmp15.not109 = icmp eq ptr %14, %work
  br i1 %cmp15.not109, label %if.then.for.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %__complete_mapping_preparation.exit.for.body_crit_edge, %if.then.for.body_crit_edge
  %m.0110 = phi ptr [ %tmp.0, %__complete_mapping_preparation.exit.for.body_crit_edge ], [ %14, %if.then.for.body_crit_edge ]
  %15 = ptrtoint ptr %m.0110 to i32
  call void @__asan_load4_noabort(i32 %15)
  %tmp.0 = load ptr, ptr %m.0110, align 8
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %m.0110) #15
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %m.0110, i32 0, i32 1
  %16 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prev.i.i, align 4
  %18 = ptrtoint ptr %m.0110 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %m.0110, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev1.i.i.i, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %19, ptr %17, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %22 = ptrtoint ptr %m.0110 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr inttoptr (i32 256 to ptr), ptr %m.0110, align 4
  %prev.i97 = getelementptr inbounds %struct.list_head, ptr %m.0110, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i97 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i97, align 4
  %tc.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m.0110, i32 0, i32 4
  %24 = ptrtoint ptr %tc.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %tc.i, align 4
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %25, i32 0, i32 5
  %26 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pool1.i, align 8
  %prepare_actions.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m.0110, i32 0, i32 2
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %prepare_actions.i, i32 noundef 4) #15
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !503
  call void @llvm.prefetch.p0(ptr %prepare_actions.i, i32 1, i32 3, i32 1) #15
  %28 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %prepare_actions.i, ptr %prepare_actions.i, i32 1, ptr elementtype(i32) %prepare_actions.i) #15, !srcloc !504
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %28, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !505
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %list_del.exit.__complete_mapping_preparation.exit_crit_edge

list_del.exit.__complete_mapping_preparation.exit_crit_edge: ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %__complete_mapping_preparation.exit

if.then.i:                                        ; preds = %list_del.exit
  %prepared_mappings.i = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 23
  %prev.i.i98 = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 23, i32 1
  %29 = ptrtoint ptr %prev.i.i98 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i98, align 4
  %call.i.i5.i = call zeroext i1 @__list_add_valid(ptr noundef %m.0110, ptr noundef %30, ptr noundef %prepared_mappings.i) #15
  br i1 %call.i.i5.i, label %if.end.i.i.i, label %if.then.i.list_add_tail.exit.i_crit_edge

if.then.i.list_add_tail.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %31 = ptrtoint ptr %prev.i.i98 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %m.0110, ptr %prev.i.i98, align 4
  %32 = ptrtoint ptr %m.0110 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %prepared_mappings.i, ptr %m.0110, align 4
  %33 = ptrtoint ptr %prev.i97 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev.i97, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %m.0110, ptr %30, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.then.i.list_add_tail.exit.i_crit_edge
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 14
  %35 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %27, i32 0, i32 13
  %call.i.i6.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %36, ptr noundef %worker.i.i) #15
  br label %__complete_mapping_preparation.exit

__complete_mapping_preparation.exit:              ; preds = %list_add_tail.exit.i, %list_del.exit.__complete_mapping_preparation.exit_crit_edge
  %cmp15.not = icmp eq ptr %tmp.0, %work
  br i1 %cmp15.not, label %__complete_mapping_preparation.exit.for.end_crit_edge, label %__complete_mapping_preparation.exit.for.body_crit_edge

__complete_mapping_preparation.exit.for.body_crit_edge: ; preds = %__complete_mapping_preparation.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

__complete_mapping_preparation.exit.for.end_crit_edge: ; preds = %__complete_mapping_preparation.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %__complete_mapping_preparation.exit.for.end_crit_edge, %if.then.for.end_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call6) #15
  br label %if.end

if.end:                                           ; preds = %for.end, %entry.if.end_crit_edge
  %all_io_entry = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 2
  %37 = ptrtoint ptr %all_io_entry to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %all_io_entry, align 4
  %tobool24.not = icmp eq ptr %38, null
  br i1 %tobool24.not, label %if.end.if.end69_crit_edge, label %if.then25

if.end.if.end69_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

if.then25:                                        ; preds = %if.end
  %39 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %work, ptr %work, align 4
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %work, ptr %1, align 4
  call void @dm_deferred_entry_dec(ptr noundef nonnull %38, ptr noundef nonnull %work) #15
  %41 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile ptr, ptr %work, align 4
  %cmp.i.not = icmp eq ptr %42, %work
  br i1 %cmp.i.not, label %if.then25.if.end69_crit_edge, label %do.body31

if.then25.if.end69_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end69

do.body31:                                        ; preds = %if.then25
  %lock37 = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 20
  %call39 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock37) #15
  %43 = ptrtoint ptr %work to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %work, align 4
  %cmp55.not111 = icmp eq ptr %44, %work
  br i1 %cmp55.not111, label %do.body31.for.end66_crit_edge, label %for.body58.lr.ph

do.body31.for.end66_crit_edge:                    ; preds = %do.body31
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end66

for.body58.lr.ph:                                 ; preds = %do.body31
  %prepared_discards = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 24
  %prev.i100 = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 24, i32 1
  br label %for.body58

for.body58:                                       ; preds = %list_add_tail.exit.for.body58_crit_edge, %for.body58.lr.ph
  %m.1112 = phi ptr [ %44, %for.body58.lr.ph ], [ %tmp.1, %list_add_tail.exit.for.body58_crit_edge ]
  %45 = ptrtoint ptr %m.1112 to i32
  call void @__asan_load4_noabort(i32 %45)
  %tmp.1 = load ptr, ptr %m.1112, align 8
  %46 = ptrtoint ptr %prev.i100 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i100, align 4
  %call.i.i101 = call zeroext i1 @__list_add_valid(ptr noundef %m.1112, ptr noundef %47, ptr noundef %prepared_discards) #15
  br i1 %call.i.i101, label %if.end.i.i102, label %for.body58.list_add_tail.exit_crit_edge

for.body58.list_add_tail.exit_crit_edge:          ; preds = %for.body58
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit

if.end.i.i102:                                    ; preds = %for.body58
  call void @__sanitizer_cov_trace_pc() #17
  %48 = ptrtoint ptr %prev.i100 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %m.1112, ptr %prev.i100, align 4
  %49 = ptrtoint ptr %m.1112 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %prepared_discards, ptr %m.1112, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %m.1112, i32 0, i32 1
  %50 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev3.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %m.1112, ptr %47, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i102, %for.body58.list_add_tail.exit_crit_edge
  %cmp55.not = icmp eq ptr %tmp.1, %work
  br i1 %cmp55.not, label %list_add_tail.exit.for.end66_crit_edge, label %list_add_tail.exit.for.body58_crit_edge

list_add_tail.exit.for.body58_crit_edge:          ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body58

list_add_tail.exit.for.end66_crit_edge:           ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end66

for.end66:                                        ; preds = %list_add_tail.exit.for.end66_crit_edge, %do.body31.for.end66_crit_edge
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock37, i32 noundef %call39) #15
  %wq.i = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 14
  %52 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %wq.i, align 8
  %worker.i = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 13
  %call.i.i103 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %53, ptr noundef %worker.i) #15
  br label %if.end69

if.end69:                                         ; preds = %for.end66, %if.then25.if.end69_crit_edge, %if.end.if.end69_crit_edge
  %cell = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 5
  %54 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %cell, align 4
  %tobool70.not = icmp eq ptr %55, null
  br i1 %tobool70.not, label %if.end69.if.end74_crit_edge, label %if.then71

if.end69.if.end74_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end74

if.then71:                                        ; preds = %if.end69
  %56 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %call, align 4
  %pool1.i104 = getelementptr inbounds %struct.thin_c, ptr %57, i32 0, i32 5
  %58 = ptrtoint ptr %pool1.i104 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pool1.i104, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %57, i32 0, i32 9
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %57, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %59, i32 0, i32 11
  %60 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %prison.i.i, align 4
  call void @dm_cell_release_no_holder(ptr noundef %61, ptr noundef nonnull %55, ptr noundef %deferred_bio_list.i) #15
  %62 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %prison.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %63, ptr noundef nonnull %55) #15
  %64 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %65, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.then71.if.end74_crit_edge, label %if.then.i108

if.then71.if.end74_crit_edge:                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end74

if.then.i108:                                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i105 = getelementptr inbounds %struct.pool, ptr %59, i32 0, i32 14
  %66 = ptrtoint ptr %wq.i.i105 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %wq.i.i105, align 8
  %worker.i.i106 = getelementptr inbounds %struct.pool, ptr %59, i32 0, i32 13
  %call.i.i.i107 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %67, ptr noundef %worker.i.i106) #15
  br label %if.end74

if.end74:                                         ; preds = %if.then.i108, %if.then71.if.end74_crit_edge, %if.end69.if.end74_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %work) #15
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @thin_presuspend(ptr noundef %ti) #1 align 64 {
entry:
  %w.i = alloca %struct.noflush_work, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %call = tail call i32 @dm_noflush_suspending(ptr noundef %ti) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %w.i) #15
  %2 = call ptr @memset(ptr %w.i, i32 255, i32 100)
  %tc1.i = getelementptr inbounds %struct.noflush_work, ptr %w.i, i32 0, i32 1
  %3 = ptrtoint ptr %tc1.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %tc1.i, align 4
  %pool.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %pool.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pool.i, align 8
  call void @__init_work(ptr noundef nonnull %w.i, i32 noundef 1) #15
  %6 = ptrtoint ptr %w.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -64, ptr %w.i, align 4
  %lockdep_map.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.21, ptr noundef nonnull @pool_work_wait.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry4.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 1
  %7 = ptrtoint ptr %entry4.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %entry4.i.i, ptr %entry4.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %entry4.i.i, ptr %prev.i.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 2
  %9 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @do_noflush_start, ptr %func.i.i, align 4
  %complete.i.i = getelementptr inbounds %struct.pool_work, ptr %w.i, i32 0, i32 1
  %10 = ptrtoint ptr %complete.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %complete.i.i, align 4
  %wait.i.i.i = getelementptr inbounds %struct.pool_work, ptr %w.i, i32 0, i32 1, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i.i.i, ptr noundef nonnull @.str.18, ptr noundef nonnull @init_completion.__key) #15
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 14
  %11 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wq.i.i, align 8
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %12, ptr noundef nonnull %w.i) #15
  call void @wait_for_completion(ptr noundef %complete.i.i) #15
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %w.i) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @thin_postsuspend(ptr nocapture noundef readonly %ti) #1 align 64 {
entry:
  %w.i = alloca %struct.noflush_work, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %w.i) #15
  %2 = call ptr @memset(ptr %w.i, i32 255, i32 100)
  %tc1.i = getelementptr inbounds %struct.noflush_work, ptr %w.i, i32 0, i32 1
  %3 = ptrtoint ptr %tc1.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %tc1.i, align 4
  %pool.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %pool.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pool.i, align 8
  call void @__init_work(ptr noundef nonnull %w.i, i32 noundef 1) #15
  %6 = ptrtoint ptr %w.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -64, ptr %w.i, align 4
  %lockdep_map.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 3
  call void @lockdep_init_map_type(ptr noundef %lockdep_map.i.i, ptr noundef nonnull @.str.21, ptr noundef nonnull @pool_work_wait.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry4.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 1
  %7 = ptrtoint ptr %entry4.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %entry4.i.i, ptr %entry4.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %entry4.i.i, ptr %prev.i.i.i, align 4
  %func.i.i = getelementptr inbounds %struct.work_struct, ptr %w.i, i32 0, i32 2
  %9 = ptrtoint ptr %func.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @do_noflush_stop, ptr %func.i.i, align 4
  %complete.i.i = getelementptr inbounds %struct.pool_work, ptr %w.i, i32 0, i32 1
  %10 = ptrtoint ptr %complete.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %complete.i.i, align 4
  %wait.i.i.i = getelementptr inbounds %struct.pool_work, ptr %w.i, i32 0, i32 1, i32 1
  call void @__init_swait_queue_head(ptr noundef %wait.i.i.i, ptr noundef nonnull @.str.18, ptr noundef nonnull @init_completion.__key) #15
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 14
  %11 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %wq.i.i, align 8
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %12, ptr noundef nonnull %w.i) #15
  call void @wait_for_completion(ptr noundef %complete.i.i) #15
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %w.i) #15
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @thin_preresume(ptr nocapture noundef readonly %ti) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %origin_dev = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %origin_dev, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %bd_nr_sectors.i.i = getelementptr inbounds %struct.block_device, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %bd_nr_sectors.i.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %bd_nr_sectors.i.i, align 8
  %origin_size = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %origin_size to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %7, ptr %origin_size, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @thin_status(ptr nocapture noundef readonly %ti, i32 noundef %type, i32 noundef %status_flags, ptr noundef %result, i32 noundef %maxlen) #1 align 64 {
entry:
  %mapped = alloca i64, align 8
  %highest = alloca i64, align 8
  %buf = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mapped) #15
  %0 = ptrtoint ptr %mapped to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %mapped, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %highest) #15
  %1 = ptrtoint ptr %highest to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %highest, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buf) #15
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %2 = call ptr @memset(ptr %buf, i32 255, i32 32)
  %3 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 5
  %5 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pool, align 8
  %pf.i = getelementptr inbounds %struct.pool, ptr %6, i32 0, i32 9
  %7 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %8)
  %cmp = icmp eq i32 %8, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp1 = icmp eq i32 %maxlen, 0
  br i1 %cmp1, label %if.then.cleanup_crit_edge, label %cond.false

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %call2 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.22) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %td = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 6
  %9 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %td, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp4 = icmp eq i32 %maxlen, 0
  br i1 %cmp4, label %if.then3.cleanup_crit_edge, label %cond.false6

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false6:                                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #17
  %call9 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.23) #15
  br label %cleanup

if.else:                                          ; preds = %if.end
  %11 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.217)
  switch i32 %type, label %if.else.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb69
    i32 2, label %sw.bb112
  ]

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %if.else
  %call14 = call i32 @dm_thin_get_mapped_count(ptr noundef nonnull %10, ptr noundef nonnull %mapped) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end18, label %do.end

do.end:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  %call17 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24, i32 noundef %call14) #21
  br label %err

if.end18:                                         ; preds = %sw.bb
  %12 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %td, align 4
  %call20 = call i32 @dm_thin_get_highest_mapped_block(ptr noundef %13, ptr noundef nonnull %highest) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %cmp21 = icmp slt i32 %call20, 0
  br i1 %cmp21, label %do.end25, label %if.end28

do.end25:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #17
  %call27 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.27, i32 noundef %call20) #21
  br label %err

if.end28:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp29 = icmp eq i32 %maxlen, 0
  br i1 %cmp29, label %cond.end36.thread, label %cond.end36

cond.end36:                                       ; preds = %if.end28
  %14 = ptrtoint ptr %mapped to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %mapped, align 8
  %16 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pool, align 8
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sectors_per_block, align 8
  %conv = zext i32 %19 to i64
  %mul = mul i64 %15, %conv
  %call35 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.29, i64 noundef %mul) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool39.not = icmp eq i32 %call20, 0
  br i1 %tobool39.not, label %cond.end36.if.else57_crit_edge, label %if.then40

cond.end36.if.else57_crit_edge:                   ; preds = %cond.end36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else57

cond.end36.thread:                                ; preds = %if.end28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool39.not200 = icmp eq i32 %call20, 0
  br i1 %tobool39.not200, label %cond.end36.thread.if.else57_crit_edge, label %cond.end36.thread.cleanup_crit_edge

cond.end36.thread.cleanup_crit_edge:              ; preds = %cond.end36.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.end36.thread.if.else57_crit_edge:            ; preds = %cond.end36.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else57

if.then40:                                        ; preds = %cond.end36
  call void @__sanitizer_cov_trace_cmp4(i32 %call35, i32 %maxlen)
  %cmp41.not = icmp ult i32 %call35, %maxlen
  br i1 %cmp41.not, label %cond.false44, label %if.then40.cleanup_crit_edge

if.then40.cleanup_crit_edge:                      ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false44:                                     ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr45 = getelementptr i8, ptr %result, i32 %call35
  %sub46 = sub i32 %maxlen, %call35
  %20 = ptrtoint ptr %highest to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %highest, align 8
  %add47 = add i64 %21, 1
  %22 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool, align 8
  %sectors_per_block49 = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %sectors_per_block49 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sectors_per_block49, align 8
  %conv50 = zext i32 %25 to i64
  %mul51 = mul i64 %add47, %conv50
  %sub52 = add i64 %mul51, -1
  %call53 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr45, i32 noundef %sub46, ptr noundef nonnull @.str.30, i64 noundef %sub52) #15
  br label %cleanup

if.else57:                                        ; preds = %cond.end36.thread.if.else57_crit_edge, %cond.end36.if.else57_crit_edge
  %cond37201 = phi i32 [ 0, %cond.end36.thread.if.else57_crit_edge ], [ %call35, %cond.end36.if.else57_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond37201, i32 %maxlen)
  %cmp58.not = icmp ult i32 %cond37201, %maxlen
  br i1 %cmp58.not, label %cond.false61, label %if.else57.cleanup_crit_edge

if.else57.cleanup_crit_edge:                      ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false61:                                     ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr62 = getelementptr i8, ptr %result, i32 %cond37201
  %sub63 = sub i32 %maxlen, %cond37201
  %call64 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr62, i32 noundef %sub63, ptr noundef nonnull @.str.23) #15
  br label %cleanup

sw.bb69:                                          ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp70 = icmp eq i32 %maxlen, 0
  br i1 %cmp70, label %sw.bb69.cond.end84_crit_edge, label %cond.false73

sw.bb69.cond.end84_crit_edge:                     ; preds = %sw.bb69
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end84

cond.false73:                                     ; preds = %sw.bb69
  call void @__sanitizer_cov_trace_pc() #17
  %pool_dev = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 1
  %26 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pool_dev, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %29, i32 0, i32 5
  %30 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %bd_dev, align 4
  %shr = lshr i32 %31, 20
  %and = and i32 %31, 1048575
  %call79 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.32, i32 noundef %shr, i32 noundef %and)
  %dev_id = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 4
  %32 = ptrtoint ptr %dev_id to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %dev_id, align 8
  %conv82 = trunc i64 %33 to i32
  %call83 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.31, ptr noundef nonnull %buf, i32 noundef %conv82) #15
  br label %cond.end84

cond.end84:                                       ; preds = %cond.false73, %sw.bb69.cond.end84_crit_edge
  %cond85 = phi i32 [ %call83, %cond.false73 ], [ 0, %sw.bb69.cond.end84_crit_edge ]
  %origin_dev = getelementptr inbounds %struct.thin_c, ptr %4, i32 0, i32 2
  %34 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %origin_dev, align 4
  %tobool87.not = icmp ne ptr %35, null
  call void @__sanitizer_cov_trace_cmp4(i32 %cond85, i32 %maxlen)
  %cmp89.not = icmp ult i32 %cond85, %maxlen
  %or.cond = select i1 %tobool87.not, i1 %cmp89.not, i1 false
  br i1 %or.cond, label %cond.false92, label %cond.end84.cleanup_crit_edge

cond.end84.cleanup_crit_edge:                     ; preds = %cond.end84
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false92:                                     ; preds = %cond.end84
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr93 = getelementptr i8, ptr %result, i32 %cond85
  %sub94 = sub i32 %maxlen, %cond85
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %bd_dev98 = getelementptr inbounds %struct.block_device, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %bd_dev98 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %bd_dev98, align 4
  %shr99 = lshr i32 %39, 20
  %and103 = and i32 %39, 1048575
  %call104 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.32, i32 noundef %shr99, i32 noundef %and103)
  %call107 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr93, i32 noundef %sub94, ptr noundef nonnull @.str.33, ptr noundef nonnull %buf) #15
  br label %cleanup

sw.bb112:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %40 = ptrtoint ptr %result to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 0, ptr %result, align 1
  br label %cleanup

err:                                              ; preds = %do.end25, %do.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp114 = icmp eq i32 %maxlen, 0
  br i1 %cmp114, label %err.cleanup_crit_edge, label %cond.false117

err.cleanup_crit_edge:                            ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false117:                                    ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  %call120 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.34) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false117, %err.cleanup_crit_edge, %sw.bb112, %cond.false92, %cond.end84.cleanup_crit_edge, %cond.false61, %if.else57.cleanup_crit_edge, %cond.false44, %if.then40.cleanup_crit_edge, %cond.end36.thread.cleanup_crit_edge, %if.else.cleanup_crit_edge, %cond.false6, %if.then3.cleanup_crit_edge, %cond.false, %if.then.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buf) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %highest) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mapped) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @thin_iterate_devices(ptr noundef %ti, ptr nocapture noundef readonly %fn, ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 8
  %ti2 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ti2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ti2, align 8
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %len = getelementptr inbounds %struct.dm_target, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %len, align 8
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %7)
  %cmp170 = icmp ult i64 %7, 4294967296
  br i1 %cmp170, label %if.then174, label %if.else180, !prof !496

if.then174:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %conv175 = trunc i64 %7 to i32
  %div178 = udiv i32 %conv175, %9
  %conv179 = zext i32 %div178 to i64
  br label %if.end184

if.else180:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %10 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %9, i64 %7) #20, !srcloc !502
  %asmresult1.i = extractvalue { i64, i64 } %10, 1
  br label %if.end184

if.end184:                                        ; preds = %if.else180, %if.then174
  %blocks.0 = phi i64 [ %conv179, %if.then174 ], [ %asmresult1.i, %if.else180 ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %blocks.0)
  %tobool186.not = icmp eq i64 %blocks.0, 0
  br i1 %tobool186.not, label %if.end184.cleanup_crit_edge, label %if.then187

if.end184.cleanup_crit_edge:                      ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then187:                                       ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #17
  %pool_dev = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 1
  %11 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pool_dev, align 8
  %conv189 = zext i32 %9 to i64
  %mul190 = mul i64 %blocks.0, %conv189
  %call191 = tail call i32 %fn(ptr noundef %ti, ptr noundef %12, i64 noundef 0, i64 noundef %mul190, ptr noundef %data) #15
  br label %cleanup

cleanup:                                          ; preds = %if.then187, %if.end184.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call191, %if.then187 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end184.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @thin_io_hints(ptr nocapture noundef readonly %ti, ptr nocapture noundef writeonly %limits) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 8
  %discard_enabled = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %discard_enabled, align 4
  %5 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %bf.cast.not = icmp eq i8 %5, 0
  br i1 %bf.cast.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 7
  %6 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectors_per_block, align 8
  %shl = shl i32 %7, 9
  %discard_granularity = getelementptr inbounds %struct.queue_limits, ptr %limits, i32 0, i32 18
  %8 = ptrtoint ptr %discard_granularity to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %shl, ptr %discard_granularity, align 4
  %max_discard_sectors = getelementptr inbounds %struct.queue_limits, ptr %limits, i32 0, i32 13
  %9 = ptrtoint ptr %max_discard_sectors to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 33554432, ptr %max_discard_sectors, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_table_get_md(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_get_device(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_table_get_mode(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_get_md(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_open_thin_device(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_set_target_max_io_len(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_tail_rcu(ptr noundef %new, ptr noundef %head) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  %prev = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev, align 4
  %call.i = tail call zeroext i1 @__list_add_valid(ptr noundef %new, ptr noundef %1, ptr noundef %head) #15
  br i1 %call.i, label %if.end.i, label %entry.__list_add_rcu.exit_crit_edge

entry.__list_add_rcu.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__list_add_rcu.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %2 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %head, ptr %new, align 4
  %prev2.i = getelementptr inbounds %struct.list_head, ptr %new, i32 0, i32 1
  %3 = ptrtoint ptr %prev2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %prev2.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !506
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new, ptr %1, align 4
  %5 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %new, ptr %prev, align 4
  br label %__list_add_rcu.exit

__list_add_rcu.exit:                              ; preds = %if.end.i, %entry.__list_add_rcu.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_close_thin_device(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__pool_dec(ptr noundef %pool) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call, label %do.body7, label %do.body3, !prof !496

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3069, 0\0A.popsection", ""() #15, !srcloc !507
  unreachable

do.body7:                                         ; preds = %entry
  %ref_count = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 19
  %0 = ptrtoint ptr %ref_count to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ref_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool8.not = icmp eq i32 %1, 0
  br i1 %tobool8.not, label %do.body18, label %do.end23, !prof !508

do.body18:                                        ; preds = %do.body7
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3070, 0\0A.popsection", ""() #15, !srcloc !509
  unreachable

do.end23:                                         ; preds = %do.body7
  %dec = add i32 %1, -1
  %2 = ptrtoint ptr %ref_count to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %dec, ptr %ref_count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool25.not = icmp eq i32 %dec, 0
  br i1 %tobool25.not, label %if.then26, label %do.end23.if.end27_crit_edge

do.end23.if.end27_crit_edge:                      ; preds = %do.end23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end27

if.then26:                                        ; preds = %do.end23
  %call.i.i = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i.i, label %do.end6.i.i, label %do.body3.i.i, !prof !496

do.body3.i.i:                                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 547, 0\0A.popsection", ""() #15, !srcloc !510
  unreachable

do.end6.i.i:                                      ; preds = %if.then26
  %call.i.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %pool) #15
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %do.end6.i.i.__pool_table_remove.exit.i_crit_edge

do.end6.i.i.__pool_table_remove.exit.i_crit_edge: ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__pool_table_remove.exit.i

if.end.i.i.i.i:                                   ; preds = %do.end6.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %pool, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i.i.i, align 4
  %5 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pool, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %__pool_table_remove.exit.i

__pool_table_remove.exit.i:                       ; preds = %if.end.i.i.i.i, %do.end6.i.i.__pool_table_remove.exit.i_crit_edge
  %9 = ptrtoint ptr %pool to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %pool, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %pool, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %cell_sort_array.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 37
  %11 = ptrtoint ptr %cell_sort_array.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cell_sort_array.i, align 8
  tail call void @vfree(ptr noundef %12) #15
  %pmd.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 5
  %13 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pmd.i, align 8
  %call.i = tail call i32 @dm_pool_metadata_close(ptr noundef %14) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %do.end.i, label %__pool_table_remove.exit.i.if.end.i_crit_edge

__pool_table_remove.exit.i.if.end.i_crit_edge:    ; preds = %__pool_table_remove.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

do.end.i:                                         ; preds = %__pool_table_remove.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.20) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %__pool_table_remove.exit.i.if.end.i_crit_edge
  %prison.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 11
  %15 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prison.i, align 4
  tail call void @dm_bio_prison_destroy(ptr noundef %16) #15
  %copier.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 12
  %17 = ptrtoint ptr %copier.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %copier.i, align 8
  tail call void @dm_kcopyd_client_destroy(ptr noundef %18) #15
  %wq.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 14
  %19 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %wq.i, align 8
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %if.end.i.if.end4.i_crit_edge, label %if.then2.i

if.end.i.if.end4.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end4.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @destroy_workqueue(ptr noundef nonnull %20) #15
  br label %if.end4.i

if.end4.i:                                        ; preds = %if.then2.i, %if.end.i.if.end4.i_crit_edge
  %next_mapping.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 29
  %21 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %next_mapping.i, align 8
  %tobool5.not.i = icmp eq ptr %22, null
  br i1 %tobool5.not.i, label %if.end4.i.__pool_destroy.exit_crit_edge, label %if.then6.i

if.end4.i.__pool_destroy.exit_crit_edge:          ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__pool_destroy.exit

if.then6.i:                                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  %mapping_pool.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 38
  tail call void @mempool_free(ptr noundef nonnull %22, ptr noundef %mapping_pool.i) #15
  br label %__pool_destroy.exit

__pool_destroy.exit:                              ; preds = %if.then6.i, %if.end4.i.__pool_destroy.exit_crit_edge
  %mapping_pool9.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 38
  tail call void @mempool_exit(ptr noundef %mapping_pool9.i) #15
  %flush_bio.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 39
  tail call void @bio_uninit(ptr noundef %flush_bio.i) #15
  %shared_read_ds.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 27
  %23 = ptrtoint ptr %shared_read_ds.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %shared_read_ds.i, align 8
  tail call void @dm_deferred_set_destroy(ptr noundef %24) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 28
  %25 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %all_io_ds.i, align 4
  tail call void @dm_deferred_set_destroy(ptr noundef %26) #15
  tail call void @kfree(ptr noundef %pool) #15
  br label %if.end27

if.end27:                                         ; preds = %__pool_destroy.exit, %do.end23.if.end27_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_put_device(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoull(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_metadata_close(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_bio_prison_destroy(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_kcopyd_client_destroy(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_exit(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_uninit(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_deferred_set_destroy(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @complete(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_endio(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_find_block(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @thin_defer_cell(ptr noundef %tc, ptr noundef %cell) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %throttle = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 15
  tail call void @down_read(ptr noundef %throttle) #15
  %lock = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %deferred_cells = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 10
  %prev.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 10, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %cell, ptr noundef %3, ptr noundef %deferred_cells) #15
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %cell, ptr %prev.i, align 4
  %5 = ptrtoint ptr %cell to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %deferred_cells, ptr %cell, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %cell, i32 0, i32 1
  %6 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev3.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %cell, ptr %3, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  tail call void @up_read(ptr noundef %throttle) #15
  %wq.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 14
  %8 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %wq.i, align 8
  %worker.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 13
  %call.i.i9 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %9, ptr noundef %worker.i) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_per_bio_data(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @dm_thin_dev_id(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_bio_prison_alloc_cell(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_bio_detain(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_bio_prison_free_cell(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_cell_release_no_holder(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_deferred_entry_inc(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_associate_blkg(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_deferred_entry_dec(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_noflush_suspending(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_noflush_start(ptr noundef %ws) #1 align 64 {
entry:
  %cells.i.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc = getelementptr inbounds %struct.noflush_work, ptr %ws, i32 0, i32 1
  %0 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc, align 4
  %requeue_mode = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %requeue_mode to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %requeue_mode, align 4
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %requeue_mode, align 4
  %3 = load ptr, ptr %tc, align 4
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %deferred_bio_list.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %5, null
  %tail.i2.i23.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 11, i32 1
  br i1 %tobool.not.i.i.i, label %__merge_bio_list.exit.thread.i, label %__merge_bio_list.exit.i

__merge_bio_list.exit.i:                          ; preds = %entry
  %6 = ptrtoint ptr %tail.i2.i23.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tail.i2.i23.i, align 4
  store ptr null, ptr %tail.i2.i23.i, align 4
  %8 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %deferred_bio_list.i, align 4
  %retry_on_resume_list.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 12
  %9 = ptrtoint ptr %retry_on_resume_list.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %retry_on_resume_list.i, align 4
  %tobool.not.i.i6.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i6.i, label %__merge_bio_list.exit.i.__merge_bio_list.exit15.i_crit_edge, label %if.end.i.i9.i

__merge_bio_list.exit.i.__merge_bio_list.exit15.i_crit_edge: ; preds = %__merge_bio_list.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__merge_bio_list.exit15.i

__merge_bio_list.exit.thread.i:                   ; preds = %entry
  %11 = ptrtoint ptr %tail.i2.i23.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %tail.i2.i23.i, align 4
  %12 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %deferred_bio_list.i, align 4
  %retry_on_resume_list24.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 12
  %13 = ptrtoint ptr %retry_on_resume_list24.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %retry_on_resume_list24.i, align 4
  %tobool.not.i.i625.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i625.i, label %__merge_bio_list.exit.thread.i.__merge_bio_list.exit15.i_crit_edge, label %__merge_bio_list.exit.thread.i.if.end7.i.i13.i_crit_edge

__merge_bio_list.exit.thread.i.if.end7.i.i13.i_crit_edge: ; preds = %__merge_bio_list.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7.i.i13.i

__merge_bio_list.exit.thread.i.__merge_bio_list.exit15.i_crit_edge: ; preds = %__merge_bio_list.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__merge_bio_list.exit15.i

if.end.i.i9.i:                                    ; preds = %__merge_bio_list.exit.i
  %tobool1.not.i.i8.i = icmp eq ptr %7, null
  br i1 %tobool1.not.i.i8.i, label %if.end.i.i9.i.if.end7.i.i13.i_crit_edge, label %if.then2.i.i10.i

if.end.i.i9.i.if.end7.i.i13.i_crit_edge:          ; preds = %if.end.i.i9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end7.i.i13.i

if.then2.i.i10.i:                                 ; preds = %if.end.i.i9.i
  call void @__sanitizer_cov_trace_pc() #17
  %15 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %10, ptr %7, align 8
  br label %if.end7.i.i13.i

if.end7.i.i13.i:                                  ; preds = %if.then2.i.i10.i, %if.end.i.i9.i.if.end7.i.i13.i_crit_edge, %__merge_bio_list.exit.thread.i.if.end7.i.i13.i_crit_edge
  %retry_on_resume_list2834.i = phi ptr [ %retry_on_resume_list.i, %if.then2.i.i10.i ], [ %retry_on_resume_list.i, %if.end.i.i9.i.if.end7.i.i13.i_crit_edge ], [ %retry_on_resume_list24.i, %__merge_bio_list.exit.thread.i.if.end7.i.i13.i_crit_edge ]
  %bios.sroa.0.2.i = phi ptr [ %5, %if.then2.i.i10.i ], [ %10, %if.end.i.i9.i.if.end7.i.i13.i_crit_edge ], [ %14, %__merge_bio_list.exit.thread.i.if.end7.i.i13.i_crit_edge ]
  br label %__merge_bio_list.exit15.i

__merge_bio_list.exit15.i:                        ; preds = %if.end7.i.i13.i, %__merge_bio_list.exit.thread.i.__merge_bio_list.exit15.i_crit_edge, %__merge_bio_list.exit.i.__merge_bio_list.exit15.i_crit_edge
  %retry_on_resume_list29.i = phi ptr [ %retry_on_resume_list.i, %__merge_bio_list.exit.i.__merge_bio_list.exit15.i_crit_edge ], [ %retry_on_resume_list2834.i, %if.end7.i.i13.i ], [ %retry_on_resume_list24.i, %__merge_bio_list.exit.thread.i.__merge_bio_list.exit15.i_crit_edge ]
  %bios.sroa.0.3.i = phi ptr [ %5, %__merge_bio_list.exit.i.__merge_bio_list.exit15.i_crit_edge ], [ %bios.sroa.0.2.i, %if.end7.i.i13.i ], [ null, %__merge_bio_list.exit.thread.i.__merge_bio_list.exit15.i_crit_edge ]
  %tail.i2.i14.i = getelementptr inbounds %struct.bio_list, ptr %retry_on_resume_list29.i, i32 0, i32 1
  %16 = ptrtoint ptr %tail.i2.i14.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %tail.i2.i14.i, align 4
  %17 = ptrtoint ptr %retry_on_resume_list29.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %retry_on_resume_list29.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %tobool.not.i2.i.i = icmp eq ptr %bios.sroa.0.3.i, null
  br i1 %tobool.not.i2.i.i, label %__merge_bio_list.exit15.i.error_bio_list.exit.i_crit_edge, label %__merge_bio_list.exit15.i.if.then.i.i.i_crit_edge

__merge_bio_list.exit15.i.if.then.i.i.i_crit_edge: ; preds = %__merge_bio_list.exit15.i
  br label %if.then.i.i.i

__merge_bio_list.exit15.i.error_bio_list.exit.i_crit_edge: ; preds = %__merge_bio_list.exit15.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %error_bio_list.exit.i

if.then.i.i.i:                                    ; preds = %if.then.i.i.i.if.then.i.i.i_crit_edge, %__merge_bio_list.exit15.i.if.then.i.i.i_crit_edge
  %18 = phi ptr [ %20, %if.then.i.i.i.if.then.i.i.i_crit_edge ], [ %bios.sroa.0.3.i, %__merge_bio_list.exit15.i.if.then.i.i.i_crit_edge ]
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 8
  %tobool4.not.i.i.i = icmp eq ptr %20, null
  store ptr null, ptr %18, align 8
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %18, i32 0, i32 6
  %21 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 11, ptr %bi_status.i.i, align 2
  tail call void @bio_endio(ptr noundef nonnull %18) #15
  br i1 %tobool4.not.i.i.i, label %if.then.i.i.i.error_bio_list.exit.i_crit_edge, label %if.then.i.i.i.if.then.i.i.i_crit_edge

if.then.i.i.i.if.then.i.i.i_crit_edge:            ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i

if.then.i.i.i.error_bio_list.exit.i_crit_edge:    ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %error_bio_list.exit.i

error_bio_list.exit.i:                            ; preds = %if.then.i.i.i.error_bio_list.exit.i_crit_edge, %__merge_bio_list.exit15.i.error_bio_list.exit.i_crit_edge
  %pool1.i.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 5
  %22 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool1.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cells.i.i) #15
  %24 = getelementptr inbounds %struct.list_head, ptr %cells.i.i, i32 0, i32 1
  %25 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %cells.i.i, ptr %cells.i.i, align 4
  %26 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %cells.i.i, ptr %24, align 4
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %deferred_cells.i.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 10
  %27 = ptrtoint ptr %deferred_cells.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %deferred_cells.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %28, %deferred_cells.i.i
  br i1 %cmp.i.not.i.i.i, label %error_bio_list.exit.i.list_splice_init.exit.i.i_crit_edge, label %if.then.i.i18.i

error_bio_list.exit.i.list_splice_init.exit.i.i_crit_edge: ; preds = %error_bio_list.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice_init.exit.i.i

if.then.i.i18.i:                                  ; preds = %error_bio_list.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %cells.i.i, align 4
  %prev2.i.i.i.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 10, i32 1
  %31 = ptrtoint ptr %prev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prev2.i.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %28, i32 0, i32 1
  %33 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %cells.i.i, ptr %prev3.i.i.i.i, align 4
  store ptr %28, ptr %cells.i.i, align 4
  %34 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %30, ptr %32, align 4
  %prev6.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %30, i32 0, i32 1
  %35 = ptrtoint ptr %prev6.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %32, ptr %prev6.i.i.i.i, align 4
  %36 = ptrtoint ptr %deferred_cells.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %deferred_cells.i.i, ptr %deferred_cells.i.i, align 4
  store ptr %deferred_cells.i.i, ptr %prev2.i.i.i.i, align 4
  br label %list_splice_init.exit.i.i

list_splice_init.exit.i.i:                        ; preds = %if.then.i.i18.i, %error_bio_list.exit.i.list_splice_init.exit.i.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %37 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %cells.i.i, align 4
  %cmp.not20.i.i = icmp eq ptr %38, %cells.i.i
  br i1 %cmp.not20.i.i, label %list_splice_init.exit.i.i.requeue_io.exit_crit_edge, label %for.body.lr.ph.i.i

list_splice_init.exit.i.i.requeue_io.exit_crit_edge: ; preds = %list_splice_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %requeue_io.exit

for.body.lr.ph.i.i:                               ; preds = %list_splice_init.exit.i.i
  %prison.i.i.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 11
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %cell.021.i.i = phi ptr [ %38, %for.body.lr.ph.i.i ], [ %tmp.0.i.i, %for.body.i.i.for.body.i.i_crit_edge ]
  %39 = ptrtoint ptr %cell.021.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %tmp.0.i.i = load ptr, ptr %cell.021.i.i, align 8
  %40 = ptrtoint ptr %prison.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prison.i.i.i.i, align 4
  call void @dm_cell_error(ptr noundef %41, ptr noundef %cell.021.i.i, i8 noundef zeroext 11) #15
  %42 = ptrtoint ptr %prison.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prison.i.i.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %43, ptr noundef %cell.021.i.i) #15
  %cmp.not.i.i = icmp eq ptr %tmp.0.i.i, %cells.i.i
  br i1 %cmp.not.i.i, label %for.body.i.i.requeue_io.exit_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

for.body.i.i.requeue_io.exit_crit_edge:           ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %requeue_io.exit

requeue_io.exit:                                  ; preds = %for.body.i.i.requeue_io.exit_crit_edge, %list_splice_init.exit.i.i.requeue_io.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cells.i.i) #15
  %complete.i = getelementptr inbounds %struct.pool_work, ptr %ws, i32 0, i32 1
  call void @complete(ptr noundef %complete.i) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_cell_error(ptr noundef, ptr noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_noflush_stop(ptr noundef %ws) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc = getelementptr inbounds %struct.noflush_work, ptr %ws, i32 0, i32 1
  %0 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc, align 4
  %requeue_mode = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %requeue_mode to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %requeue_mode, align 4
  %bf.clear = and i8 %bf.load, 127
  store i8 %bf.clear, ptr %requeue_mode, align 4
  %complete.i = getelementptr inbounds %struct.pool_work, ptr %ws, i32 0, i32 1
  tail call void @complete(ptr noundef %complete.i) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @scnprintf(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_get_mapped_count(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_get_highest_mapped_block(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pool_ctr(ptr noundef %ti, i32 noundef %argc, ptr noundef %argv) #1 align 64 {
entry:
  %buffer.i = alloca [32 x i8], align 1
  %argc.i = alloca i32, align 4
  %pool_created = alloca i32, align 4
  %as = alloca %struct.dm_arg_set, align 4
  %data_dev = alloca ptr, align 4
  %block_size = alloca i32, align 4
  %low_water_blocks = alloca i64, align 8
  %metadata_dev = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pool_created) #15
  %0 = ptrtoint ptr %pool_created to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %pool_created, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %as) #15
  %1 = ptrtoint ptr %as to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %as, align 4, !annotation !495
  %2 = getelementptr inbounds %struct.dm_arg_set, ptr %as, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_dev) #15
  %4 = ptrtoint ptr %data_dev to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %data_dev, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %block_size) #15
  %5 = ptrtoint ptr %block_size to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -1, ptr %block_size, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %low_water_blocks) #15
  %6 = ptrtoint ptr %low_water_blocks to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %low_water_blocks, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %metadata_dev) #15
  %7 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr inttoptr (i32 -1 to ptr), ptr %metadata_dev, align 4, !annotation !495
  tail call void @mutex_lock_nested(ptr noundef nonnull @dm_thin_pool_table, i32 noundef 0) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %argc)
  %cmp = icmp ult i32 %argc, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %error = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %8 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @.str.3, ptr %error, align 8
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = ptrtoint ptr %as to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %argc, ptr %as, align 4
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %argv, ptr %2, align 4
  %11 = ptrtoint ptr %argv to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argv, align 4
  %arrayidx3 = getelementptr ptr, ptr %argv, i32 1
  %13 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx3, align 4
  %call = tail call i32 @strcmp(ptr noundef %12, ptr noundef %14) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %error5 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %15 = ptrtoint ptr %error5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @.str.36, ptr %error5, align 8
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @dm_consume_args(ptr noundef nonnull %as, i32 noundef 4) #15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %argc.i) #15
  %16 = ptrtoint ptr %argc.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 -1, ptr %argc.i, align 4, !annotation !495
  %17 = ptrtoint ptr %as to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %as, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i, label %if.end6.if.end10_crit_edge, label %if.end.i

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

if.end.i:                                         ; preds = %if.end6
  %error.i = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %call.i = call i32 @dm_read_arg_group(ptr noundef nonnull @parse_pool_features._args, ptr noundef nonnull %as, ptr noundef nonnull %argc.i, ptr noundef %error.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool2.not.i, label %while.cond.preheader.i, label %if.end.i.parse_pool_features.exit_crit_edge

if.end.i.parse_pool_features.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %parse_pool_features.exit

while.cond.preheader.i:                           ; preds = %if.end.i
  %19 = ptrtoint ptr %argc.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %argc.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool5.not57.i = icmp eq i32 %20, 0
  br i1 %tobool5.not57.i, label %while.cond.preheader.i.if.end10_crit_edge, label %while.cond.preheader.i.while.body.i_crit_edge

while.cond.preheader.i.while.body.i_crit_edge:    ; preds = %while.cond.preheader.i
  br label %while.body.i

while.cond.preheader.i.if.end10_crit_edge:        ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

while.body.i:                                     ; preds = %if.end41.i.while.body.i_crit_edge, %while.cond.preheader.i.while.body.i_crit_edge
  %pf.sroa.8.0 = phi i8 [ %pf.sroa.8.1, %if.end41.i.while.body.i_crit_edge ], [ -17, %while.cond.preheader.i.while.body.i_crit_edge ]
  %pf.sroa.0.0 = phi i32 [ %pf.sroa.0.1, %if.end41.i.while.body.i_crit_edge ], [ 0, %while.cond.preheader.i.while.body.i_crit_edge ]
  %call7.i = call ptr @dm_shift_arg(ptr noundef nonnull %as) #15
  %21 = ptrtoint ptr %argc.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %argc.i, align 4
  %dec.i = add i32 %22, -1
  store i32 %dec.i, ptr %argc.i, align 4
  %call8.i = call i32 @strcasecmp(ptr noundef %call7.i, ptr noundef nonnull @.str.43) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.then10.i, label %if.else.i

if.then10.i:                                      ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %bf.clear.i = and i8 %pf.sroa.8.0, 127
  br label %if.end41.i

if.else.i:                                        ; preds = %while.body.i
  %call11.i = call i32 @strcasecmp(ptr noundef %call7.i, ptr noundef nonnull @.str.44) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool12.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool12.not.i, label %if.then13.i, label %if.else17.i

if.then13.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %bf.clear15.i = and i8 %pf.sroa.8.0, -65
  br label %if.end41.i

if.else17.i:                                      ; preds = %if.else.i
  %call18.i = call i32 @strcasecmp(ptr noundef %call7.i, ptr noundef nonnull @.str.45) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.then20.i, label %if.else24.i

if.then20.i:                                      ; preds = %if.else17.i
  call void @__sanitizer_cov_trace_pc() #17
  %bf.clear22.i = and i8 %pf.sroa.8.0, -33
  br label %if.end41.i

if.else24.i:                                      ; preds = %if.else17.i
  %call25.i = call i32 @strcasecmp(ptr noundef %call7.i, ptr noundef nonnull @.str.46) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool26.not.i = icmp eq i32 %call25.i, 0
  br i1 %tobool26.not.i, label %if.else24.i.if.end41.i_crit_edge, label %if.else28.i

if.else24.i.if.end41.i_crit_edge:                 ; preds = %if.else24.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end41.i

if.else28.i:                                      ; preds = %if.else24.i
  %call29.i = call i32 @strcasecmp(ptr noundef %call7.i, ptr noundef nonnull @.str.47) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29.i)
  %tobool30.not.i = icmp eq i32 %call29.i, 0
  br i1 %tobool30.not.i, label %if.then31.i, label %if.else35.i

if.then31.i:                                      ; preds = %if.else28.i
  call void @__sanitizer_cov_trace_pc() #17
  %bf.set34.i = or i8 %pf.sroa.8.0, 16
  br label %if.end41.i

if.else35.i:                                      ; preds = %if.else28.i
  call void @__sanitizer_cov_trace_pc() #17
  %23 = ptrtoint ptr %error.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @.str.48, ptr %error.i, align 8
  br label %parse_pool_features.exit

if.end41.i:                                       ; preds = %if.then31.i, %if.else24.i.if.end41.i_crit_edge, %if.then20.i, %if.then13.i, %if.then10.i
  %pf.sroa.8.1 = phi i8 [ %bf.clear.i, %if.then10.i ], [ %bf.clear15.i, %if.then13.i ], [ %bf.clear22.i, %if.then20.i ], [ %bf.set34.i, %if.then31.i ], [ %pf.sroa.8.0, %if.else24.i.if.end41.i_crit_edge ]
  %pf.sroa.0.1 = phi i32 [ %pf.sroa.0.0, %if.then10.i ], [ %pf.sroa.0.0, %if.then13.i ], [ %pf.sroa.0.0, %if.then20.i ], [ %pf.sroa.0.0, %if.then31.i ], [ 3, %if.else24.i.if.end41.i_crit_edge ]
  %tobool5.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool5.not.i, label %if.end41.i.if.end10_crit_edge, label %if.end41.i.while.body.i_crit_edge

if.end41.i.while.body.i_crit_edge:                ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

if.end41.i.if.end10_crit_edge:                    ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

parse_pool_features.exit:                         ; preds = %if.else35.i, %if.end.i.parse_pool_features.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %argc.i) #15
  br label %cleanup

if.end10:                                         ; preds = %if.end41.i.if.end10_crit_edge, %while.cond.preheader.i.if.end10_crit_edge, %if.end6.if.end10_crit_edge
  %pf.sroa.8.2.ph = phi i8 [ -17, %while.cond.preheader.i.if.end10_crit_edge ], [ -17, %if.end6.if.end10_crit_edge ], [ %pf.sroa.8.1, %if.end41.i.if.end10_crit_edge ]
  %pf.sroa.0.2.ph = phi i32 [ 0, %while.cond.preheader.i.if.end10_crit_edge ], [ 0, %if.end6.if.end10_crit_edge ], [ %pf.sroa.0.1, %if.end41.i.if.end10_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %argc.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %pf.sroa.0.2.ph)
  %cmp11 = icmp eq i32 %pf.sroa.0.2.ph, 3
  %or = select i1 %cmp11, i32 1, i32 3
  %24 = ptrtoint ptr %argv to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %argv, align 4
  %call13 = call i32 @dm_get_device(ptr noundef %ti, ptr noundef %25, i32 noundef %or, ptr noundef nonnull %metadata_dev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  %error16 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %26 = ptrtoint ptr %error16 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @.str.37, ptr %error16, align 8
  br label %cleanup

if.end17:                                         ; preds = %if.end10
  %27 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %metadata_dev, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 4
  %bd_nr_sectors.i.i.i = getelementptr inbounds %struct.block_device, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %bd_nr_sectors.i.i.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %bd_nr_sectors.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buffer.i) #15
  call void @__sanitizer_cov_trace_const_cmp8(i64 33554432, i64 %32)
  %cmp.i = icmp ugt i64 %32, 33554432
  %33 = call ptr @memset(ptr %buffer.i, i32 255, i32 32)
  br i1 %cmp.i, label %do.end.i, label %if.end17.warn_if_metadata_device_too_big.exit_crit_edge

if.end17.warn_if_metadata_device_too_big.exit_crit_edge: ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  br label %warn_if_metadata_device_too_big.exit

do.end.i:                                         ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i = call ptr @bdevname(ptr noundef %30, ptr noundef nonnull %buffer.i) #15
  %call2.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, ptr noundef %call1.i, i32 noundef 33292800) #21
  br label %warn_if_metadata_device_too_big.exit

warn_if_metadata_device_too_big.exit:             ; preds = %do.end.i, %if.end17.warn_if_metadata_device_too_big.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buffer.i) #15
  %34 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx3, align 4
  %call19 = call i32 @dm_get_device(ptr noundef %ti, ptr noundef %35, i32 noundef 3, ptr noundef nonnull %data_dev) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end23, label %if.then21

if.then21:                                        ; preds = %warn_if_metadata_device_too_big.exit
  call void @__sanitizer_cov_trace_pc() #17
  %error22 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %36 = ptrtoint ptr %error22 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.38, ptr %error22, align 8
  br label %out_metadata

if.end23:                                         ; preds = %warn_if_metadata_device_too_big.exit
  %arrayidx24 = getelementptr ptr, ptr %argv, i32 2
  %37 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx24, align 4
  %call.i163 = call i32 @_kstrtoul(ptr noundef %38, i32 noundef 10, ptr noundef nonnull %block_size) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i163)
  %tobool26.not = icmp eq i32 %call.i163, 0
  br i1 %tobool26.not, label %lor.lhs.false, label %if.end23.if.then34_crit_edge

if.end23.if.then34_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then34

lor.lhs.false:                                    ; preds = %if.end23
  %39 = ptrtoint ptr %block_size to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %block_size, align 4
  %41 = add i32 %40, -128
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097025, i32 %41)
  %42 = icmp ult i32 %41, 2097025
  %and = and i32 %40, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool33.not = icmp eq i32 %and, 0
  %or.cond159 = and i1 %42, %tobool33.not
  br i1 %or.cond159, label %if.end36, label %lor.lhs.false.if.then34_crit_edge

lor.lhs.false.if.then34_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then34

if.then34:                                        ; preds = %lor.lhs.false.if.then34_crit_edge, %if.end23.if.then34_crit_edge
  %error35 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %43 = ptrtoint ptr %error35 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @.str.39, ptr %error35, align 8
  br label %out

if.end36:                                         ; preds = %lor.lhs.false
  %arrayidx37 = getelementptr ptr, ptr %argv, i32 3
  %44 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx37, align 4
  %call38 = call i32 @kstrtoull(ptr noundef %45, i32 noundef 10, ptr noundef nonnull %low_water_blocks) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.end42, label %if.then40

if.then40:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #17
  %error41 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %46 = ptrtoint ptr %error41 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr @.str.40, ptr %error41, align 8
  br label %out

if.end42:                                         ; preds = %if.end36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %47 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %47, i32 noundef 3520, i32 noundef 40) #18
  %tobool44.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool44.not, label %if.end42.out_crit_edge, label %if.end46

if.end42.out_crit_edge:                           ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #17
  br label %out

if.end46:                                         ; preds = %if.end42
  %48 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %ti, align 8
  %call47 = call ptr @dm_table_get_md(ptr noundef %49) #15
  %50 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %metadata_dev, align 4
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %51, align 4
  %54 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %data_dev, align 4
  %56 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %55, align 4
  %58 = ptrtoint ptr %block_size to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %block_size, align 4
  %conv = zext i1 %cmp11 to i32
  %error52 = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 12
  %call53 = call fastcc ptr @__pool_find(ptr noundef %call47, ptr noundef %53, ptr noundef %57, i32 noundef %59, i32 noundef %conv, ptr noundef %error52, ptr noundef nonnull %pool_created)
  %cmp.i164 = icmp ugt ptr %call53, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i164, label %if.then55, label %if.end57

if.then55:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %call53 to i32
  br label %out_free_pt

if.end57:                                         ; preds = %if.end46
  %61 = ptrtoint ptr %pool_created to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %pool_created, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool58.not = icmp eq i32 %62, 0
  br i1 %tobool58.not, label %land.lhs.true, label %if.end57.if.end71_crit_edge

if.end57.if.end71_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end71

land.lhs.true:                                    ; preds = %if.end57
  %discard_enabled61 = getelementptr inbounds %struct.pool, ptr %call53, i32 0, i32 9, i32 1
  %63 = ptrtoint ptr %discard_enabled61 to i32
  call void @__asan_load1_noabort(i32 %63)
  %bf.load62 = load i8, ptr %discard_enabled61, align 4
  %64 = xor i8 %bf.load62, %pf.sroa.8.2.ph
  %65 = and i8 %64, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %65)
  %cmp67.not = icmp eq i8 %65, 0
  br i1 %cmp67.not, label %land.lhs.true.if.end71_crit_edge, label %if.then69

land.lhs.true.if.end71_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end71

if.then69:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %66 = ptrtoint ptr %error52 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @.str.41, ptr %error52, align 8
  br label %out_flags_changed

if.end71:                                         ; preds = %land.lhs.true.if.end71_crit_edge, %if.end57.if.end71_crit_edge
  %pool72 = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 1
  %67 = ptrtoint ptr %pool72 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %call53, ptr %pool72, align 4
  %68 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %ti, ptr %call7.i.i, align 8
  %69 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %metadata_dev, align 4
  %metadata_dev74 = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 3
  %71 = ptrtoint ptr %metadata_dev74 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %70, ptr %metadata_dev74, align 4
  %72 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %data_dev, align 4
  %data_dev75 = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 2
  %74 = ptrtoint ptr %data_dev75 to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %73, ptr %data_dev75, align 8
  %75 = ptrtoint ptr %low_water_blocks to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %low_water_blocks, align 8
  %low_water_blocks76 = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 4
  %77 = ptrtoint ptr %low_water_blocks76 to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %76, ptr %low_water_blocks76, align 8
  %adjusted_pf = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 6
  %requested_pf = getelementptr inbounds %struct.pool_c, ptr %call7.i.i, i32 0, i32 5
  %pf.sroa.8.0.insert.ext = zext i8 %pf.sroa.8.2.ph to i64
  %pf.sroa.8.0.insert.shift = shl nuw nsw i64 %pf.sroa.8.0.insert.ext, 24
  %pf.sroa.0.0.insert.ext = zext i32 %pf.sroa.0.2.ph to i64
  %pf.sroa.0.0.insert.shift = shl nuw i64 %pf.sroa.0.0.insert.ext, 32
  %pf.sroa.8.0.insert.insert = or i64 %pf.sroa.0.0.insert.shift, %pf.sroa.8.0.insert.shift
  %pf.sroa.0.0.insert.insert = or i64 %pf.sroa.8.0.insert.insert, 16777215
  %78 = ptrtoint ptr %requested_pf to i32
  call void @__asan_store8_noabort(i32 %78)
  store i64 %pf.sroa.0.0.insert.insert, ptr %requested_pf, align 8
  %79 = ptrtoint ptr %adjusted_pf to i32
  call void @__asan_store8_noabort(i32 %79)
  store i64 %pf.sroa.0.0.insert.insert, ptr %adjusted_pf, align 8
  %num_flush_bios = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 5
  %80 = ptrtoint ptr %num_flush_bios to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 1, ptr %num_flush_bios, align 4
  %81 = and i8 %pf.sroa.8.2.ph, 96
  call void @__sanitizer_cov_trace_const_cmp1(i8 96, i8 %81)
  %.not = icmp eq i8 %81, 96
  br i1 %.not, label %if.then89, label %if.end71.if.end92_crit_edge

if.end71.if.end92_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end92

if.then89:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #17
  %num_discard_bios = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 6
  %82 = ptrtoint ptr %num_discard_bios to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 1, ptr %num_discard_bios, align 8
  %discards_supported = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 13
  %83 = ptrtoint ptr %discards_supported to i32
  call void @__asan_load1_noabort(i32 %83)
  %bf.load90 = load i8, ptr %discards_supported, align 4
  %bf.set = or i8 %bf.load90, 64
  store i8 %bf.set, ptr %discards_supported, align 4
  br label %if.end92

if.end92:                                         ; preds = %if.then89, %if.end71.if.end92_crit_edge
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %84 = ptrtoint ptr %private to i32
  call void @__asan_store4_noabort(i32 %84)
  store ptr %call7.i.i, ptr %private, align 4
  %85 = ptrtoint ptr %pool72 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %pool72, align 4
  %pmd = getelementptr inbounds %struct.pool, ptr %86, i32 0, i32 5
  %87 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %pmd, align 8
  %89 = ptrtoint ptr %metadata_dev74 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %metadata_dev74, align 4
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %90, align 4
  %bd_nr_sectors.i.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %92, i32 0, i32 1
  %93 = ptrtoint ptr %bd_nr_sectors.i.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %93)
  %94 = load i64, ptr %bd_nr_sectors.i.i.i.i.i, align 8
  %95 = call i64 @llvm.umin.i64(i64 %94, i64 33292800) #15
  %shr.i.i = lshr i64 %95, 5
  call void @__sanitizer_cov_trace_const_cmp8(i64 32799, i64 %95)
  %cmp.i165 = icmp ugt i64 %95, 32799
  %cond.i = select i1 %cmp.i165, i64 1024, i64 %shr.i.i
  %call95 = call i32 @dm_pool_register_metadata_threshold(ptr noundef %88, i64 noundef %cond.i, ptr noundef nonnull @metadata_low_callback, ptr noundef %call53) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call95)
  %tobool96.not = icmp eq i32 %call95, 0
  br i1 %tobool96.not, label %if.end98, label %if.end92.out_flags_changed_crit_edge

if.end92.out_flags_changed_crit_edge:             ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #17
  br label %out_flags_changed

if.end98:                                         ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #17
  %pmd99 = getelementptr inbounds %struct.pool, ptr %call53, i32 0, i32 5
  %96 = ptrtoint ptr %pmd99 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pmd99, align 8
  call void @dm_pool_register_pre_commit_callback(ptr noundef %97, ptr noundef nonnull @metadata_pre_commit_callback, ptr noundef %call53) #15
  br label %cleanup

out_flags_changed:                                ; preds = %if.end92.out_flags_changed_crit_edge, %if.then69
  %r.0 = phi i32 [ %call95, %if.end92.out_flags_changed_crit_edge ], [ -22, %if.then69 ]
  call fastcc void @__pool_dec(ptr noundef %call53)
  br label %out_free_pt

out_free_pt:                                      ; preds = %out_flags_changed, %if.then55
  %r.1 = phi i32 [ %60, %if.then55 ], [ %r.0, %out_flags_changed ]
  call void @kfree(ptr noundef nonnull %call7.i.i) #15
  br label %out

out:                                              ; preds = %out_free_pt, %if.end42.out_crit_edge, %if.then40, %if.then34
  %r.2 = phi i32 [ -22, %if.then34 ], [ -22, %if.then40 ], [ %r.1, %out_free_pt ], [ -12, %if.end42.out_crit_edge ]
  %98 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %data_dev, align 4
  call void @dm_put_device(ptr noundef %ti, ptr noundef %99) #15
  br label %out_metadata

out_metadata:                                     ; preds = %out, %if.then21
  %r.3 = phi i32 [ %call19, %if.then21 ], [ %r.2, %out ]
  %100 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %metadata_dev, align 4
  call void @dm_put_device(ptr noundef %ti, ptr noundef %101) #15
  br label %cleanup

cleanup:                                          ; preds = %out_metadata, %if.end98, %if.then15, %parse_pool_features.exit, %if.then4, %if.then
  %retval.0 = phi i32 [ 0, %if.end98 ], [ -22, %if.then ], [ -22, %parse_pool_features.exit ], [ %call13, %if.then15 ], [ %r.3, %out_metadata ], [ -22, %if.then4 ]
  call void @mutex_unlock(ptr noundef nonnull @dm_thin_pool_table) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %metadata_dev) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %low_water_blocks) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %block_size) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_dev) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %as) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pool_created) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_dtr(ptr noundef %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @dm_thin_pool_table, i32 noundef 0) #15
  %pool = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 4
  %ti1.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ti1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ti1.i, align 8
  %cmp.i = icmp eq ptr %5, %ti
  br i1 %cmp.i, label %if.then.i, label %entry.unbind_control_target.exit_crit_edge

entry.unbind_control_target.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %unbind_control_target.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %ti1.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %ti1.i, align 8
  br label %unbind_control_target.exit

unbind_control_target.exit:                       ; preds = %if.then.i, %entry.unbind_control_target.exit_crit_edge
  %7 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pool, align 4
  tail call fastcc void @__pool_dec(ptr noundef %8)
  %metadata_dev = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 3
  %9 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %metadata_dev, align 4
  tail call void @dm_put_device(ptr noundef %ti, ptr noundef %10) #15
  %data_dev = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 2
  %11 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %data_dev, align 8
  tail call void @dm_put_device(ptr noundef %ti, ptr noundef %12) #15
  tail call void @kfree(ptr noundef %1) #15
  tail call void @mutex_unlock(ptr noundef nonnull @dm_thin_pool_table) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pool_map(ptr nocapture noundef readonly %ti, ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %data_dev = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data_dev, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  %bi_flags.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %8 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %bi_flags.i.i, align 4
  %conv1.i.i = and i16 %9, -2049
  store i16 %conv1.i.i, ptr %bi_flags.i.i, align 4
  %bi_bdev.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %10 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bi_bdev.i, align 4
  %cmp.not.i = icmp eq ptr %11, %7
  br i1 %cmp.not.i, label %entry.bio_set_dev.exit_crit_edge, label %if.then.i

entry.bio_set_dev.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i = and i16 %9, -2177
  %12 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv1.i8.i, ptr %bi_flags.i.i, align 4
  br label %bio_set_dev.exit

bio_set_dev.exit:                                 ; preds = %if.then.i, %entry.bio_set_dev.exit_crit_edge
  %13 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %7, ptr %bi_bdev.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %bio) #15
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_presuspend(ptr nocapture noundef readonly %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %suspended = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %4 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %suspended, align 8
  %bf.set = or i8 %bf.load, 64
  store i8 %bf.set, ptr %suspended, align 8
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  %call.i = tail call fastcc ptr @get_first_thin(ptr noundef %3) #15
  %tobool.not5.i = icmp eq ptr %call.i, null
  br i1 %tobool.not5.i, label %entry.pool_suspend_active_thins.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.pool_suspend_active_thins.exit_crit_edge:   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_suspend_active_thins.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %tc.06.i = phi ptr [ %call1.i, %while.body.i.while.body.i_crit_edge ], [ %call.i, %entry.while.body.i_crit_edge ]
  %thin_md.i = getelementptr inbounds %struct.thin_c, ptr %tc.06.i, i32 0, i32 7
  %5 = ptrtoint ptr %thin_md.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %thin_md.i, align 8
  tail call void @dm_internal_suspend_noflush(ptr noundef %6) #15
  %call1.i = tail call fastcc ptr @get_next_thin(ptr noundef %3, ptr noundef nonnull %tc.06.i) #15
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %while.body.i.pool_suspend_active_thins.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

while.body.i.pool_suspend_active_thins.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_suspend_active_thins.exit

pool_suspend_active_thins.exit:                   ; preds = %while.body.i.pool_suspend_active_thins.exit_crit_edge, %entry.pool_suspend_active_thins.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_presuspend_undo(ptr nocapture noundef readonly %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %call.i = tail call fastcc ptr @get_first_thin(ptr noundef %3) #15
  %tobool.not5.i = icmp eq ptr %call.i, null
  br i1 %tobool.not5.i, label %entry.pool_resume_active_thins.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.pool_resume_active_thins.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_resume_active_thins.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %tc.06.i = phi ptr [ %call1.i, %while.body.i.while.body.i_crit_edge ], [ %call.i, %entry.while.body.i_crit_edge ]
  %thin_md.i = getelementptr inbounds %struct.thin_c, ptr %tc.06.i, i32 0, i32 7
  %4 = ptrtoint ptr %thin_md.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %thin_md.i, align 8
  tail call void @dm_internal_resume(ptr noundef %5) #15
  %call1.i = tail call fastcc ptr @get_next_thin(ptr noundef %3, ptr noundef nonnull %tc.06.i) #15
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %while.body.i.pool_resume_active_thins.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

while.body.i.pool_resume_active_thins.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_resume_active_thins.exit

pool_resume_active_thins.exit:                    ; preds = %while.body.i.pool_resume_active_thins.exit_crit_edge, %entry.pool_resume_active_thins.exit_crit_edge
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %suspended = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %6 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %suspended, align 8
  %bf.clear = and i8 %bf.load, -65
  store i8 %bf.clear, ptr %suspended, align 8
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_postsuspend(ptr nocapture noundef readonly %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %waker = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 16
  %call = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %waker) #15
  %no_space_timeout = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 17
  %call2 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %no_space_timeout) #15
  %wq = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %wq, align 8
  tail call void @flush_workqueue(ptr noundef %5) #15
  %call3 = tail call fastcc i32 @commit(ptr noundef %3)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pool_preresume(ptr noundef %ti) #1 align 64 {
entry:
  %buffer.i.i = alloca [32 x i8], align 1
  %sb_metadata_dev_size.i = alloca i64, align 8
  %sb_data_size.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %pf.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %pf.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf.i.i, align 8
  %adjusted_pf.i = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %adjusted_pf.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %adjusted_pf.i, align 8
  store i32 %5, ptr %adjusted_pf.i, align 8
  %ti3.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 1
  %8 = ptrtoint ptr %ti3.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %ti, ptr %ti3.i, align 8
  %9 = load i64, ptr %adjusted_pf.i, align 8
  store i64 %9, ptr %pf.i.i, align 8
  %low_water_blocks.i = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %low_water_blocks.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %low_water_blocks.i, align 8
  %low_water_blocks5.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 6
  %12 = ptrtoint ptr %low_water_blocks5.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %low_water_blocks5.i, align 8
  tail call fastcc void @set_pool_mode(ptr noundef %3, i32 noundef %7) #15
  %13 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %private, align 4
  %pool1.i = getelementptr inbounds %struct.pool_c, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pool1.i, align 4
  %len.i = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 3
  %17 = ptrtoint ptr %len.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %len.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sb_data_size.i) #15
  %19 = ptrtoint ptr %sb_data_size.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 -1, ptr %sb_data_size.i, align 8, !annotation !495
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 7
  %20 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sectors_per_block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %18)
  %cmp165.i = icmp ult i64 %18, 4294967296
  br i1 %cmp165.i, label %if.then169.i, label %if.else175.i, !prof !496

if.then169.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv170.i = trunc i64 %18 to i32
  %div173.i = udiv i32 %conv170.i, %21
  %conv174.i = zext i32 %div173.i to i64
  br label %if.end179.i

if.else175.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %22 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %21, i64 %18) #20, !srcloc !502
  %asmresult1.i.i = extractvalue { i64, i64 } %22, 1
  br label %if.end179.i

if.end179.i:                                      ; preds = %if.else175.i, %if.then169.i
  %data_size.0.i = phi i64 [ %conv174.i, %if.then169.i ], [ %asmresult1.i.i, %if.else175.i ]
  %pmd.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 5
  %23 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pmd.i, align 8
  %call181.i = call i32 @dm_pool_get_data_dev_size(ptr noundef %24, ptr noundef nonnull %sb_data_size.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call181.i)
  %tobool182.not.i = icmp eq i32 %call181.i, 0
  br i1 %tobool182.not.i, label %if.end187.i, label %do.end.i

do.end.i:                                         ; preds = %if.end179.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 2
  %25 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pool_md.i, align 4
  %call185.i = call ptr @dm_device_name(ptr noundef %26) #15
  %call186.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.126, ptr noundef %call185.i) #21
  br label %maybe_resize_data_dev.exit

if.end187.i:                                      ; preds = %if.end179.i
  %27 = ptrtoint ptr %sb_data_size.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %sb_data_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %data_size.0.i, i64 %28)
  %cmp188.i = icmp ult i64 %data_size.0.i, %28
  br i1 %cmp188.i, label %do.end193.i, label %if.else198.i

do.end193.i:                                      ; preds = %if.end187.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md195.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 2
  %29 = ptrtoint ptr %pool_md195.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pool_md195.i, align 4
  %call196.i = call ptr @dm_device_name(ptr noundef %30) #15
  %31 = ptrtoint ptr %sb_data_size.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %sb_data_size.i, align 8
  %call197.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.129, ptr noundef %call196.i, i64 noundef %data_size.0.i, i64 noundef %32) #21
  br label %maybe_resize_data_dev.exit

if.else198.i:                                     ; preds = %if.end187.i
  call void @__sanitizer_cov_trace_cmp8(i64 %data_size.0.i, i64 %28)
  %cmp199.i = icmp ugt i64 %data_size.0.i, %28
  br i1 %cmp199.i, label %if.then201.i, label %if.else198.i.if.end5_crit_edge

if.else198.i.if.end5_crit_edge:                   ; preds = %if.else198.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5

if.then201.i:                                     ; preds = %if.else198.i
  %33 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pmd.i, align 8
  %call203.i = call zeroext i1 @dm_pool_metadata_needs_check(ptr noundef %34) #15
  br i1 %call203.i, label %do.end207.i, label %if.end212.i

do.end207.i:                                      ; preds = %if.then201.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md209.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 2
  %35 = ptrtoint ptr %pool_md209.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pool_md209.i, align 4
  %call210.i = call ptr @dm_device_name(ptr noundef %36) #15
  %call211.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef %call210.i) #21
  br label %if.end5

if.end212.i:                                      ; preds = %if.then201.i
  %37 = ptrtoint ptr %sb_data_size.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %sb_data_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %38)
  %tobool213.not.i = icmp eq i64 %38, 0
  br i1 %tobool213.not.i, label %if.end212.i.if.end222.i_crit_edge, label %do.end217.i

if.end212.i.if.end222.i_crit_edge:                ; preds = %if.end212.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end222.i

do.end217.i:                                      ; preds = %if.end212.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md219.i = getelementptr inbounds %struct.pool, ptr %16, i32 0, i32 2
  %39 = ptrtoint ptr %pool_md219.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pool_md219.i, align 4
  %call220.i = call ptr @dm_device_name(ptr noundef %40) #15
  %41 = ptrtoint ptr %sb_data_size.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %sb_data_size.i, align 8
  %call221.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef %call220.i, i64 noundef %42, i64 noundef %data_size.0.i) #21
  br label %if.end222.i

if.end222.i:                                      ; preds = %do.end217.i, %if.end212.i.if.end222.i_crit_edge
  %43 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pmd.i, align 8
  %call224.i = call i32 @dm_pool_resize_data_dev(ptr noundef %44, i64 noundef %data_size.0.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call224.i)
  %tobool225.not.i = icmp eq i32 %call224.i, 0
  br i1 %tobool225.not.i, label %if.end222.i.if.end5_crit_edge, label %if.then226.i

if.end222.i.if.end5_crit_edge:                    ; preds = %if.end222.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end5

if.then226.i:                                     ; preds = %if.end222.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %16, ptr noundef nonnull @.str.137, i32 noundef %call224.i) #15
  br label %maybe_resize_data_dev.exit

maybe_resize_data_dev.exit:                       ; preds = %if.then226.i, %do.end193.i, %do.end.i
  %retval.0.i = phi i32 [ %call181.i, %do.end.i ], [ -22, %do.end193.i ], [ %call224.i, %if.then226.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sb_data_size.i) #15
  br label %cleanup

if.end5:                                          ; preds = %if.end222.i.if.end5_crit_edge, %do.end207.i, %if.else198.i.if.end5_crit_edge
  %tobool10.not = phi i1 [ true, %do.end207.i ], [ true, %if.else198.i.if.end5_crit_edge ], [ false, %if.end222.i.if.end5_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sb_data_size.i) #15
  %45 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %private, align 4
  %pool1.i30 = getelementptr inbounds %struct.pool_c, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %pool1.i30 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pool1.i30, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %sb_metadata_dev_size.i) #15
  %49 = ptrtoint ptr %sb_metadata_dev_size.i to i32
  call void @__asan_store8_noabort(i32 %49)
  store i64 -1, ptr %sb_metadata_dev_size.i, align 8, !annotation !495
  %md_dev.i = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 4
  %50 = ptrtoint ptr %md_dev.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %md_dev.i, align 4
  %bd_nr_sectors.i.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %bd_nr_sectors.i.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %bd_nr_sectors.i.i.i.i.i, align 8
  %54 = call i64 @llvm.umin.i64(i64 %53, i64 33292800) #15
  %shr.i.i = lshr i64 %54, 3
  %pmd.i31 = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 5
  %55 = ptrtoint ptr %pmd.i31 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pmd.i31, align 8
  %call2.i = call i32 @dm_pool_get_metadata_dev_size(ptr noundef %56, ptr noundef nonnull %sb_metadata_dev_size.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i32 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i32, label %if.end.i, label %do.end.i34

do.end.i34:                                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md.i33 = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 2
  %57 = ptrtoint ptr %pool_md.i33 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %pool_md.i33, align 4
  %call3.i = call ptr @dm_device_name(ptr noundef %58) #15
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.138, ptr noundef %call3.i) #21
  br label %maybe_resize_metadata_dev.exit

if.end.i:                                         ; preds = %if.end5
  %59 = ptrtoint ptr %sb_metadata_dev_size.i to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %sb_metadata_dev_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %shr.i.i, i64 %60)
  %cmp.i35 = icmp ult i64 %shr.i.i, %60
  br i1 %cmp.i35, label %do.end8.i, label %if.else.i

do.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md10.i = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 2
  %61 = ptrtoint ptr %pool_md10.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %pool_md10.i, align 4
  %call11.i = call ptr @dm_device_name(ptr noundef %62) #15
  %63 = ptrtoint ptr %sb_metadata_dev_size.i to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %sb_metadata_dev_size.i, align 8
  %call12.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.141, ptr noundef %call11.i, i64 noundef %shr.i.i, i64 noundef %64) #21
  br label %maybe_resize_metadata_dev.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp8(i64 %shr.i.i, i64 %60)
  %cmp13.i = icmp ugt i64 %shr.i.i, %60
  br i1 %cmp13.i, label %if.then14.i36, label %if.else.i.if.end9_crit_edge

if.else.i.if.end9_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end9

if.then14.i36:                                    ; preds = %if.else.i
  %65 = ptrtoint ptr %pmd.i31 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %pmd.i31, align 8
  %call16.i = call zeroext i1 @dm_pool_metadata_needs_check(ptr noundef %66) #15
  br i1 %call16.i, label %do.end20.i, label %if.end25.i

do.end20.i:                                       ; preds = %if.then14.i36
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md22.i = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 2
  %67 = ptrtoint ptr %pool_md22.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pool_md22.i, align 4
  %call23.i = call ptr @dm_device_name(ptr noundef %68) #15
  %call24.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.144, ptr noundef %call23.i) #21
  br label %if.end9

if.end25.i:                                       ; preds = %if.then14.i36
  %69 = ptrtoint ptr %md_dev.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %md_dev.i, align 4
  %bd_nr_sectors.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %70, i32 0, i32 1
  %71 = ptrtoint ptr %bd_nr_sectors.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %bd_nr_sectors.i.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buffer.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp8(i64 33554432, i64 %72)
  %cmp.i.i = icmp ugt i64 %72, 33554432
  %73 = call ptr @memset(ptr %buffer.i.i, i32 255, i32 32)
  br i1 %cmp.i.i, label %do.end.i.i, label %if.end25.i.warn_if_metadata_device_too_big.exit.i_crit_edge

if.end25.i.warn_if_metadata_device_too_big.exit.i_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %warn_if_metadata_device_too_big.exit.i

do.end.i.i:                                       ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #17
  %call1.i.i = call ptr @bdevname(ptr noundef %70, ptr noundef nonnull %buffer.i.i) #15
  %call2.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.49, ptr noundef %call1.i.i, i32 noundef 33292800) #21
  br label %warn_if_metadata_device_too_big.exit.i

warn_if_metadata_device_too_big.exit.i:           ; preds = %do.end.i.i, %if.end25.i.warn_if_metadata_device_too_big.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buffer.i.i) #15
  %pool_md31.i = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 2
  %74 = ptrtoint ptr %pool_md31.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pool_md31.i, align 4
  %call32.i = call ptr @dm_device_name(ptr noundef %75) #15
  %76 = ptrtoint ptr %sb_metadata_dev_size.i to i32
  call void @__asan_load8_noabort(i32 %76)
  %77 = load i64, ptr %sb_metadata_dev_size.i, align 8
  %call33.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.147, ptr noundef %call32.i, i64 noundef %77, i64 noundef %shr.i.i) #21
  %pf.i.i37 = getelementptr inbounds %struct.pool, ptr %48, i32 0, i32 9
  %78 = ptrtoint ptr %pf.i.i37 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %pf.i.i37, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %79)
  %cmp35.i = icmp eq i32 %79, 2
  br i1 %cmp35.i, label %if.then36.i, label %warn_if_metadata_device_too_big.exit.i.if.end37.i_crit_edge

warn_if_metadata_device_too_big.exit.i.if.end37.i_crit_edge: ; preds = %warn_if_metadata_device_too_big.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end37.i

if.then36.i:                                      ; preds = %warn_if_metadata_device_too_big.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @set_pool_mode(ptr noundef %48, i32 noundef 0) #15
  br label %if.end37.i

if.end37.i:                                       ; preds = %if.then36.i, %warn_if_metadata_device_too_big.exit.i.if.end37.i_crit_edge
  %80 = ptrtoint ptr %pmd.i31 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pmd.i31, align 8
  %call39.i = call i32 @dm_pool_resize_metadata_dev(ptr noundef %81, i64 noundef %shr.i.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39.i)
  %tobool40.not.i = icmp eq i32 %call39.i, 0
  br i1 %tobool40.not.i, label %if.end9.thread, label %if.then41.i

if.then41.i:                                      ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %48, ptr noundef nonnull @.str.149, i32 noundef %call39.i) #15
  br label %maybe_resize_metadata_dev.exit

maybe_resize_metadata_dev.exit:                   ; preds = %if.then41.i, %do.end8.i, %do.end.i34
  %retval.0.i38 = phi i32 [ %call2.i, %do.end.i34 ], [ -22, %do.end8.i ], [ %call39.i, %if.then41.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sb_metadata_dev_size.i) #15
  br label %cleanup

if.end9:                                          ; preds = %do.end20.i, %if.else.i.if.end9_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sb_metadata_dev_size.i) #15
  br i1 %tobool10.not, label %if.end9.cleanup_crit_edge, label %if.end9.if.then12_crit_edge

if.end9.if.then12_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then12

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end9.thread:                                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %sb_metadata_dev_size.i) #15
  br label %if.then12

if.then12:                                        ; preds = %if.end9.thread, %if.end9.if.then12_crit_edge
  %call13 = call fastcc i32 @commit(ptr noundef %3)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end9.cleanup_crit_edge, %maybe_resize_metadata_dev.exit, %maybe_resize_data_dev.exit
  %retval.0 = phi i32 [ %retval.0.i, %maybe_resize_data_dev.exit ], [ %retval.0.i38, %maybe_resize_metadata_dev.exit ], [ 0, %if.then12 ], [ 0, %if.end9.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_resume(ptr nocapture noundef readonly %ti) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  tail call fastcc void @requeue_bios(ptr noundef %3)
  %call.i = tail call fastcc ptr @get_first_thin(ptr noundef %3) #15
  %tobool.not5.i = icmp eq ptr %call.i, null
  br i1 %tobool.not5.i, label %entry.pool_resume_active_thins.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.pool_resume_active_thins.exit_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_resume_active_thins.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %tc.06.i = phi ptr [ %call1.i, %while.body.i.while.body.i_crit_edge ], [ %call.i, %entry.while.body.i_crit_edge ]
  %thin_md.i = getelementptr inbounds %struct.thin_c, ptr %tc.06.i, i32 0, i32 7
  %4 = ptrtoint ptr %thin_md.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %thin_md.i, align 8
  tail call void @dm_internal_resume(ptr noundef %5) #15
  %call1.i = tail call fastcc ptr @get_next_thin(ptr noundef %3, ptr noundef nonnull %tc.06.i) #15
  %tobool.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i, label %while.body.i.pool_resume_active_thins.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

while.body.i.pool_resume_active_thins.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_resume_active_thins.exit

pool_resume_active_thins.exit:                    ; preds = %while.body.i.pool_resume_active_thins.exit_crit_edge, %entry.pool_resume_active_thins.exit_crit_edge
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %low_water_triggered = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %6 = ptrtoint ptr %low_water_triggered to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load = load i8, ptr %low_water_triggered, align 8
  %bf.clear3 = and i8 %bf.load, 63
  store i8 %bf.clear3, ptr %low_water_triggered, align 8
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  %waker = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 16
  %wq.i.i = getelementptr %struct.pool, ptr %3, i32 0, i32 14
  %7 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr %struct.pool, ptr %3, i32 0, i32 13
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %8, ptr noundef %worker.i.i) #15
  %9 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %wq.i.i, align 8
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %10, ptr noundef %waker, i32 noundef 100) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_status(ptr noundef %ti, i32 noundef %type, i32 noundef %status_flags, ptr noundef %result, i32 noundef %maxlen) #1 align 64 {
entry:
  %transaction_id = alloca i64, align 8
  %nr_free_blocks_data = alloca i64, align 8
  %nr_free_blocks_metadata = alloca i64, align 8
  %nr_blocks_data = alloca i64, align 8
  %nr_blocks_metadata = alloca i64, align 8
  %held_root = alloca i64, align 8
  %buf = alloca [32 x i8], align 1
  %buf2 = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %transaction_id) #15
  %0 = ptrtoint ptr %transaction_id to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %transaction_id, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_free_blocks_data) #15
  %1 = ptrtoint ptr %nr_free_blocks_data to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %nr_free_blocks_data, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_free_blocks_metadata) #15
  %2 = ptrtoint ptr %nr_free_blocks_metadata to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %nr_free_blocks_metadata, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_blocks_data) #15
  %3 = ptrtoint ptr %nr_blocks_data to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 -1, ptr %nr_blocks_data, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_blocks_metadata) #15
  %4 = ptrtoint ptr %nr_blocks_metadata to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 -1, ptr %nr_blocks_metadata, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %held_root) #15
  %5 = ptrtoint ptr %held_root to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 -1, ptr %held_root, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buf) #15
  %6 = call ptr @memset(ptr %buf, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buf2) #15
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %7 = call ptr @memset(ptr %buf2, i32 255, i32 32)
  %8 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pool1, align 4
  %12 = zext i32 %type to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.218)
  switch i32 %type, label %entry.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb240
    i32 2, label %sw.bb268
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %pf.i = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 9
  %13 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %14)
  %cmp = icmp eq i32 %14, 4
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp2 = icmp eq i32 %maxlen, 0
  br i1 %cmp2, label %if.then.cleanup_crit_edge, label %cond.false

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %call3 = tail call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.22) #15
  br label %cleanup

if.end:                                           ; preds = %sw.bb
  %and = and i32 %status_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end.if.end8_crit_edge

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call i32 @dm_suspended(ptr noundef %ti) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then6, label %land.lhs.true.if.end8_crit_edge

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end8

if.then6:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %call7 = tail call fastcc i32 @commit(ptr noundef %11)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %pmd = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 5
  %15 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pmd, align 8
  %call9 = call i32 @dm_pool_get_metadata_transaction_id(ptr noundef %16, ptr noundef nonnull %transaction_id) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end14, label %do.end

do.end:                                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %17 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pool_md, align 4
  %call12 = call ptr @dm_device_name(ptr noundef %18) #15
  %call13 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.150, ptr noundef %call12, i32 noundef %call9) #21
  br label %err

if.end14:                                         ; preds = %if.end8
  %19 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pmd, align 8
  %call16 = call i32 @dm_pool_get_free_metadata_block_count(ptr noundef %20, ptr noundef nonnull %nr_free_blocks_metadata) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end26, label %do.end21

do.end21:                                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md23 = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %21 = ptrtoint ptr %pool_md23 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pool_md23, align 4
  %call24 = call ptr @dm_device_name(ptr noundef %22) #15
  %call25 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef %call24, i32 noundef %call16) #21
  br label %err

if.end26:                                         ; preds = %if.end14
  %23 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pmd, align 8
  %call28 = call i32 @dm_pool_get_metadata_dev_size(ptr noundef %24, ptr noundef nonnull %nr_blocks_metadata) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end38, label %do.end33

do.end33:                                         ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md35 = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %25 = ptrtoint ptr %pool_md35 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pool_md35, align 4
  %call36 = call ptr @dm_device_name(ptr noundef %26) #15
  %call37 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.156, ptr noundef %call36, i32 noundef %call28) #21
  br label %err

if.end38:                                         ; preds = %if.end26
  %27 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pmd, align 8
  %call40 = call i32 @dm_pool_get_free_block_count(ptr noundef %28, ptr noundef nonnull %nr_free_blocks_data) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end50, label %do.end45

do.end45:                                         ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md47 = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %29 = ptrtoint ptr %pool_md47 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pool_md47, align 4
  %call48 = call ptr @dm_device_name(ptr noundef %30) #15
  %call49 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.159, ptr noundef %call48, i32 noundef %call40) #21
  br label %err

if.end50:                                         ; preds = %if.end38
  %31 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %pmd, align 8
  %call52 = call i32 @dm_pool_get_data_dev_size(ptr noundef %32, ptr noundef nonnull %nr_blocks_data) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.end62, label %do.end57

do.end57:                                         ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md59 = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %33 = ptrtoint ptr %pool_md59 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pool_md59, align 4
  %call60 = call ptr @dm_device_name(ptr noundef %34) #15
  %call61 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.162, ptr noundef %call60, i32 noundef %call52) #21
  br label %err

if.end62:                                         ; preds = %if.end50
  %35 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pmd, align 8
  %call64 = call i32 @dm_pool_get_metadata_snap(ptr noundef %36, ptr noundef nonnull %held_root) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.end74, label %do.end69

do.end69:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md71 = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 2
  %37 = ptrtoint ptr %pool_md71 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pool_md71, align 4
  %call72 = call ptr @dm_device_name(ptr noundef %38) #15
  %call73 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.165, ptr noundef %call72, i32 noundef %call64) #21
  br label %err

if.end74:                                         ; preds = %if.end62
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp75 = icmp eq i32 %maxlen, 0
  br i1 %cmp75, label %cond.end83.thread, label %cond.end83

cond.end83:                                       ; preds = %if.end74
  %39 = ptrtoint ptr %transaction_id to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %transaction_id, align 8
  %41 = ptrtoint ptr %nr_blocks_metadata to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %nr_blocks_metadata, align 8
  %43 = ptrtoint ptr %nr_free_blocks_metadata to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %nr_free_blocks_metadata, align 8
  %sub80 = sub i64 %42, %44
  %45 = ptrtoint ptr %nr_blocks_data to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %nr_blocks_data, align 8
  %47 = ptrtoint ptr %nr_free_blocks_data to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %nr_free_blocks_data, align 8
  %sub81 = sub i64 %46, %48
  %call82 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.167, i64 noundef %40, i64 noundef %sub80, i64 noundef %42, i64 noundef %sub81, i64 noundef %46) #15
  %49 = ptrtoint ptr %held_root to i32
  call void @__asan_load8_noabort(i32 %49)
  %50 = load i64, ptr %held_root, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %50)
  %tobool86.not = icmp eq i64 %50, 0
  br i1 %tobool86.not, label %cond.end83.if.else_crit_edge, label %if.then87

cond.end83.if.else_crit_edge:                     ; preds = %cond.end83
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

cond.end83.thread:                                ; preds = %if.end74
  %51 = ptrtoint ptr %held_root to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %held_root, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %52)
  %tobool86.not453 = icmp eq i64 %52, 0
  br i1 %tobool86.not453, label %cond.end83.thread.if.else_crit_edge, label %cond.end83.thread.if.end106_crit_edge

cond.end83.thread.if.end106_crit_edge:            ; preds = %cond.end83.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end106

cond.end83.thread.if.else_crit_edge:              ; preds = %cond.end83.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then87:                                        ; preds = %cond.end83
  call void @__sanitizer_cov_trace_cmp4(i32 %call82, i32 %maxlen)
  %cmp88.not = icmp ult i32 %call82, %maxlen
  br i1 %cmp88.not, label %cond.false90, label %if.then87.if.end106_crit_edge

if.then87.if.end106_crit_edge:                    ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end106

cond.false90:                                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr91 = getelementptr i8, ptr %result, i32 %call82
  %sub92 = sub i32 %maxlen, %call82
  %call93 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr91, i32 noundef %sub92, ptr noundef nonnull @.str.29, i64 noundef %50) #15
  br label %if.end106

if.else:                                          ; preds = %cond.end83.thread.if.else_crit_edge, %cond.end83.if.else_crit_edge
  %cond84454 = phi i32 [ 0, %cond.end83.thread.if.else_crit_edge ], [ %call82, %cond.end83.if.else_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cond84454, i32 %maxlen)
  %cmp97.not = icmp ult i32 %cond84454, %maxlen
  br i1 %cmp97.not, label %cond.false99, label %if.else.if.end106_crit_edge

if.else.if.end106_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end106

cond.false99:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr100 = getelementptr i8, ptr %result, i32 %cond84454
  %sub101 = sub i32 %maxlen, %cond84454
  %call102 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr100, i32 noundef %sub101, ptr noundef nonnull @.str.168) #15
  br label %if.end106

if.end106:                                        ; preds = %cond.false99, %if.else.if.end106_crit_edge, %cond.false90, %if.then87.if.end106_crit_edge, %cond.end83.thread.if.end106_crit_edge
  %cond84456 = phi i32 [ %call82, %cond.false90 ], [ %call82, %if.then87.if.end106_crit_edge ], [ %cond84454, %cond.false99 ], [ %cond84454, %if.else.if.end106_crit_edge ], [ 0, %cond.end83.thread.if.end106_crit_edge ]
  %cond95.pn = phi i32 [ %call93, %cond.false90 ], [ 0, %if.then87.if.end106_crit_edge ], [ %call102, %cond.false99 ], [ 0, %if.else.if.end106_crit_edge ], [ 0, %cond.end83.thread.if.end106_crit_edge ]
  %sz.0 = add i32 %cond95.pn, %cond84456
  %53 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %54)
  %cmp108 = icmp eq i32 %54, 1
  br i1 %cmp108, label %if.then109, label %if.else119

if.then109:                                       ; preds = %if.end106
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.0, i32 %maxlen)
  %cmp110.not = icmp ult i32 %sz.0, %maxlen
  br i1 %cmp110.not, label %if.then109.if.end142.sink.split_crit_edge, label %if.then109.if.end142_crit_edge

if.then109.if.end142_crit_edge:                   ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end142

if.then109.if.end142.sink.split_crit_edge:        ; preds = %if.then109
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end142.sink.split

if.else119:                                       ; preds = %if.end106
  %55 = and i32 %54, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %55)
  %56 = icmp eq i32 %55, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.0, i32 %maxlen)
  %cmp122.not = icmp ult i32 %sz.0, %maxlen
  %.str.170..str.171 = select i1 %56, ptr @.str.170, ptr @.str.171
  br i1 %cmp122.not, label %if.else119.if.end142.sink.split_crit_edge, label %if.else119.if.end142_crit_edge

if.else119.if.end142_crit_edge:                   ; preds = %if.else119
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end142

if.else119.if.end142.sink.split_crit_edge:        ; preds = %if.else119
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end142.sink.split

if.end142.sink.split:                             ; preds = %if.else119.if.end142.sink.split_crit_edge, %if.then109.if.end142.sink.split_crit_edge
  %.str.171.sink = phi ptr [ @.str.169, %if.then109.if.end142.sink.split_crit_edge ], [ %.str.170..str.171, %if.else119.if.end142.sink.split_crit_edge ]
  %add.ptr135 = getelementptr i8, ptr %result, i32 %sz.0
  %sub136 = sub i32 %maxlen, %sz.0
  %call137 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr135, i32 noundef %sub136, ptr noundef nonnull %.str.171.sink) #15
  br label %if.end142

if.end142:                                        ; preds = %if.end142.sink.split, %if.else119.if.end142_crit_edge, %if.then109.if.end142_crit_edge
  %cond117.pn = phi i32 [ 0, %if.then109.if.end142_crit_edge ], [ %call137, %if.end142.sink.split ], [ 0, %if.else119.if.end142_crit_edge ]
  %sz.1 = add i32 %cond117.pn, %sz.0
  %discard_enabled = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 9, i32 1
  %57 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %57)
  %bf.load = load i8, ptr %discard_enabled, align 4
  %58 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %bf.cast.not = icmp eq i8 %58, 0
  br i1 %bf.cast.not, label %if.then143, label %if.else153

if.then143:                                       ; preds = %if.end142
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.1, i32 %maxlen)
  %cmp144.not = icmp ult i32 %sz.1, %maxlen
  br i1 %cmp144.not, label %if.then143.if.end180.sink.split_crit_edge, label %if.then143.if.end180_crit_edge

if.then143.if.end180_crit_edge:                   ; preds = %if.then143
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end180

if.then143.if.end180.sink.split_crit_edge:        ; preds = %if.then143
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end180.sink.split

if.else153:                                       ; preds = %if.end142
  %59 = and i8 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %bf.cast158.not = icmp eq i8 %59, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.1, i32 %maxlen)
  %cmp170.not = icmp ult i32 %sz.1, %maxlen
  %.str.174..str.173 = select i1 %bf.cast158.not, ptr @.str.174, ptr @.str.173
  br i1 %cmp170.not, label %if.else153.if.end180.sink.split_crit_edge, label %if.else153.if.end180_crit_edge

if.else153.if.end180_crit_edge:                   ; preds = %if.else153
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end180

if.else153.if.end180.sink.split_crit_edge:        ; preds = %if.else153
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end180.sink.split

if.end180.sink.split:                             ; preds = %if.else153.if.end180.sink.split_crit_edge, %if.then143.if.end180.sink.split_crit_edge
  %.str.174.sink = phi ptr [ @.str.172, %if.then143.if.end180.sink.split_crit_edge ], [ %.str.174..str.173, %if.else153.if.end180.sink.split_crit_edge ]
  %add.ptr173 = getelementptr i8, ptr %result, i32 %sz.1
  %sub174 = sub i32 %maxlen, %sz.1
  %call175 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr173, i32 noundef %sub174, ptr noundef nonnull %.str.174.sink) #15
  br label %if.end180

if.end180:                                        ; preds = %if.end180.sink.split, %if.else153.if.end180_crit_edge, %if.then143.if.end180_crit_edge
  %cond167.pn = phi i32 [ 0, %if.then143.if.end180_crit_edge ], [ %call175, %if.end180.sink.split ], [ 0, %if.else153.if.end180_crit_edge ]
  %sz.2 = add i32 %cond167.pn, %sz.1
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.2, i32 %maxlen)
  %cmp197.not = icmp ult i32 %sz.2, %maxlen
  br i1 %cmp197.not, label %if.end206.sink.split, label %if.end180.if.end206_crit_edge

if.end180.if.end206_crit_edge:                    ; preds = %if.end180
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end206

if.end206.sink.split:                             ; preds = %if.end180
  call void @__sanitizer_cov_trace_pc() #17
  %60 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load182 = load i8, ptr %discard_enabled, align 4
  %61 = and i8 %bf.load182, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %bf.cast185.not = icmp eq i8 %61, 0
  %.str.176..str.175 = select i1 %bf.cast185.not, ptr @.str.176, ptr @.str.175
  %add.ptr200 = getelementptr i8, ptr %result, i32 %sz.2
  %sub201 = sub i32 %maxlen, %sz.2
  %call202 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr200, i32 noundef %sub201, ptr noundef nonnull %.str.176..str.175) #15
  br label %if.end206

if.end206:                                        ; preds = %if.end206.sink.split, %if.end180.if.end206_crit_edge
  %cond194.pn = phi i32 [ %call202, %if.end206.sink.split ], [ 0, %if.end180.if.end206_crit_edge ]
  %sz.3 = add i32 %cond194.pn, %sz.2
  %62 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %pmd, align 8
  %call208 = call zeroext i1 @dm_pool_metadata_needs_check(ptr noundef %63) #15
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.3, i32 %maxlen)
  %cmp210.not = icmp ult i32 %sz.3, %maxlen
  br i1 %cmp210.not, label %if.end229.sink.split, label %if.end206.if.end229_crit_edge

if.end206.if.end229_crit_edge:                    ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end229

if.end229.sink.split:                             ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #17
  %.str.177..str.168 = select i1 %call208, ptr @.str.177, ptr @.str.168
  %add.ptr223 = getelementptr i8, ptr %result, i32 %sz.3
  %sub224 = sub i32 %maxlen, %sz.3
  %call225 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr223, i32 noundef %sub224, ptr noundef nonnull %.str.177..str.168) #15
  br label %if.end229

if.end229:                                        ; preds = %if.end229.sink.split, %if.end206.if.end229_crit_edge
  %cond217.pn = phi i32 [ %call225, %if.end229.sink.split ], [ 0, %if.end206.if.end229_crit_edge ]
  %sz.4 = add i32 %cond217.pn, %sz.3
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.4, i32 %maxlen)
  %cmp230.not = icmp ult i32 %sz.4, %maxlen
  br i1 %cmp230.not, label %cond.false232, label %if.end229.cleanup_crit_edge

if.end229.cleanup_crit_edge:                      ; preds = %if.end229
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false232:                                    ; preds = %if.end229
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr233 = getelementptr i8, ptr %result, i32 %sz.4
  %sub234 = sub i32 %maxlen, %sz.4
  %metadata_dev.i = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 3
  %64 = ptrtoint ptr %metadata_dev.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %metadata_dev.i, align 4
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %65, align 4
  %bd_nr_sectors.i.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %bd_nr_sectors.i.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %bd_nr_sectors.i.i.i.i.i, align 8
  %70 = call i64 @llvm.umin.i64(i64 %69, i64 33292800) #15
  %shr.i.i = lshr i64 %70, 5
  call void @__sanitizer_cov_trace_const_cmp8(i64 32799, i64 %70)
  %cmp.i = icmp ugt i64 %70, 32799
  %cond.i = select i1 %cmp.i, i64 1024, i64 %shr.i.i
  %call236 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr233, i32 noundef %sub234, ptr noundef nonnull @.str.29, i64 noundef %cond.i) #15
  br label %cleanup

sw.bb240:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp241 = icmp eq i32 %maxlen, 0
  br i1 %cmp241, label %cond.end265.thread, label %cond.end265

cond.end265.thread:                               ; preds = %sw.bb240
  call void @__sanitizer_cov_trace_pc() #17
  %requested_pf460 = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 5
  %zero_new_blocks.i461 = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 5, i32 1
  br label %cond.end.i

cond.end265:                                      ; preds = %sw.bb240
  %metadata_dev = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 3
  %71 = ptrtoint ptr %metadata_dev to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %metadata_dev, align 4
  %73 = ptrtoint ptr %72 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %72, align 4
  %bd_dev = getelementptr inbounds %struct.block_device, ptr %74, i32 0, i32 5
  %75 = ptrtoint ptr %bd_dev to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bd_dev, align 4
  %shr = lshr i32 %76, 20
  %and249 = and i32 %76, 1048575
  %call250 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf, ptr noundef nonnull @.str.32, i32 noundef %shr, i32 noundef %and249)
  %data_dev = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 2
  %77 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %data_dev, align 8
  %79 = ptrtoint ptr %78 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %78, align 4
  %bd_dev255 = getelementptr inbounds %struct.block_device, ptr %80, i32 0, i32 5
  %81 = ptrtoint ptr %bd_dev255 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %bd_dev255, align 4
  %shr256 = lshr i32 %82, 20
  %and260 = and i32 %82, 1048575
  %call261 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull %buf2, ptr noundef nonnull @.str.32, i32 noundef %shr256, i32 noundef %and260)
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %11, i32 0, i32 7
  %83 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %sectors_per_block, align 8
  %low_water_blocks = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 4
  %85 = ptrtoint ptr %low_water_blocks to i32
  call void @__asan_load8_noabort(i32 %85)
  %86 = load i64, ptr %low_water_blocks, align 8
  %call264 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.178, ptr noundef nonnull %buf, ptr noundef nonnull %buf2, i32 noundef %84, i64 noundef %86) #15
  %requested_pf = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 5
  %zero_new_blocks.i = getelementptr inbounds %struct.pool_c, ptr %9, i32 0, i32 5, i32 1
  call void @__sanitizer_cov_trace_cmp4(i32 %call264, i32 %maxlen)
  %cmp20.not.i = icmp ult i32 %call264, %maxlen
  br i1 %cmp20.not.i, label %cond.false.i, label %cond.end265.cond.end.i_crit_edge

cond.end265.cond.end.i_crit_edge:                 ; preds = %cond.end265
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end.i

cond.false.i:                                     ; preds = %cond.end265
  call void @__sanitizer_cov_trace_pc() #17
  %87 = ptrtoint ptr %zero_new_blocks.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %bf.load.i = load i8, ptr %zero_new_blocks.i, align 4
  %88 = xor i8 %bf.load.i, -1
  %89 = lshr i8 %88, 7
  %90 = lshr i8 %bf.load.i, 6
  %.lobit.i = and i8 %90, 1
  %91 = xor i8 %.lobit.i, 1
  %narrow.i = add nuw nsw i8 %91, %89
  %92 = lshr i8 %bf.load.i, 5
  %.lobit151.i = and i8 %92, 1
  %93 = xor i8 %.lobit151.i, 1
  %narrow152.i = add nuw nsw i8 %narrow.i, %93
  %add12.i = zext i8 %narrow152.i to i32
  %94 = ptrtoint ptr %requested_pf to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %requested_pf, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %95)
  %cmp.i450 = icmp eq i32 %95, 3
  %conv.i = zext i1 %cmp.i450 to i32
  %96 = lshr i8 %bf.load.i, 4
  %.lobit153.i = and i8 %96, 1
  %97 = zext i8 %.lobit153.i to i32
  %add13.i = add nuw nsw i32 %97, %conv.i
  %add19.i = add nuw nsw i32 %add13.i, %add12.i
  %add.ptr.i = getelementptr i8, ptr %result, i32 %call264
  %sub.i = sub i32 %maxlen, %call264
  %call.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr.i, i32 noundef %sub.i, ptr noundef nonnull @.str.179, i32 noundef %add19.i) #15
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.end265.cond.end.i_crit_edge, %cond.end265.thread
  %zero_new_blocks.i465 = phi ptr [ %zero_new_blocks.i, %cond.false.i ], [ %zero_new_blocks.i, %cond.end265.cond.end.i_crit_edge ], [ %zero_new_blocks.i461, %cond.end265.thread ]
  %requested_pf464 = phi ptr [ %requested_pf, %cond.false.i ], [ %requested_pf, %cond.end265.cond.end.i_crit_edge ], [ %requested_pf460, %cond.end265.thread ]
  %cond266463 = phi i32 [ %call264, %cond.false.i ], [ %call264, %cond.end265.cond.end.i_crit_edge ], [ 0, %cond.end265.thread ]
  %cond.i451 = phi i32 [ %call.i, %cond.false.i ], [ 0, %cond.end265.cond.end.i_crit_edge ], [ 0, %cond.end265.thread ]
  %add22.i = add i32 %cond.i451, %cond266463
  %98 = ptrtoint ptr %zero_new_blocks.i465 to i32
  call void @__asan_load1_noabort(i32 %98)
  %bf.load24.i = load i8, ptr %zero_new_blocks.i465, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load24.i)
  %bf.cast26.not.i = icmp sgt i8 %bf.load24.i, -1
  br i1 %bf.cast26.not.i, label %if.then.i, label %cond.end.i.if.end.i_crit_edge

cond.end.i.if.end.i_crit_edge:                    ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.then.i:                                        ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add22.i, i32 %maxlen)
  %cmp27.not.i = icmp ult i32 %add22.i, %maxlen
  br i1 %cmp27.not.i, label %cond.false30.i, label %if.then.i.cond.end34.i_crit_edge

if.then.i.cond.end34.i_crit_edge:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end34.i

cond.false30.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr31.i = getelementptr i8, ptr %result, i32 %add22.i
  %sub32.i = sub i32 %maxlen, %add22.i
  %call33.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr31.i, i32 noundef %sub32.i, ptr noundef nonnull @.str.180) #15
  br label %cond.end34.i

cond.end34.i:                                     ; preds = %cond.false30.i, %if.then.i.cond.end34.i_crit_edge
  %cond35.i = phi i32 [ %call33.i, %cond.false30.i ], [ 0, %if.then.i.cond.end34.i_crit_edge ]
  %add36.i = add i32 %cond35.i, %add22.i
  br label %if.end.i

if.end.i:                                         ; preds = %cond.end34.i, %cond.end.i.if.end.i_crit_edge
  %sz.addr.0.i = phi i32 [ %add22.i, %cond.end.i.if.end.i_crit_edge ], [ %add36.i, %cond.end34.i ]
  %99 = ptrtoint ptr %zero_new_blocks.i465 to i32
  call void @__asan_load1_noabort(i32 %99)
  %bf.load38.i = load i8, ptr %zero_new_blocks.i465, align 4
  %100 = and i8 %bf.load38.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %100)
  %bf.cast41.not.i = icmp eq i8 %100, 0
  br i1 %bf.cast41.not.i, label %if.then42.i, label %if.end.i.if.end53.i_crit_edge

if.end.i.if.end53.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end53.i

if.then42.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.addr.0.i, i32 %maxlen)
  %cmp43.not.i = icmp ult i32 %sz.addr.0.i, %maxlen
  br i1 %cmp43.not.i, label %cond.false46.i, label %if.then42.i.cond.end50.i_crit_edge

if.then42.i.cond.end50.i_crit_edge:               ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end50.i

cond.false46.i:                                   ; preds = %if.then42.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr47.i = getelementptr i8, ptr %result, i32 %sz.addr.0.i
  %sub48.i = sub i32 %maxlen, %sz.addr.0.i
  %call49.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr47.i, i32 noundef %sub48.i, ptr noundef nonnull @.str.172) #15
  br label %cond.end50.i

cond.end50.i:                                     ; preds = %cond.false46.i, %if.then42.i.cond.end50.i_crit_edge
  %cond51.i = phi i32 [ %call49.i, %cond.false46.i ], [ 0, %if.then42.i.cond.end50.i_crit_edge ]
  %add52.i = add i32 %cond51.i, %sz.addr.0.i
  br label %if.end53.i

if.end53.i:                                       ; preds = %cond.end50.i, %if.end.i.if.end53.i_crit_edge
  %sz.addr.1.i = phi i32 [ %sz.addr.0.i, %if.end.i.if.end53.i_crit_edge ], [ %add52.i, %cond.end50.i ]
  %101 = ptrtoint ptr %zero_new_blocks.i465 to i32
  call void @__asan_load1_noabort(i32 %101)
  %bf.load55.i = load i8, ptr %zero_new_blocks.i465, align 4
  %102 = and i8 %bf.load55.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %102)
  %bf.cast58.not.i = icmp eq i8 %102, 0
  br i1 %bf.cast58.not.i, label %if.then59.i, label %if.end53.i.if.end70.i_crit_edge

if.end53.i.if.end70.i_crit_edge:                  ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end70.i

if.then59.i:                                      ; preds = %if.end53.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.addr.1.i, i32 %maxlen)
  %cmp60.not.i = icmp ult i32 %sz.addr.1.i, %maxlen
  br i1 %cmp60.not.i, label %cond.false63.i, label %if.then59.i.cond.end67.i_crit_edge

if.then59.i.cond.end67.i_crit_edge:               ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end67.i

cond.false63.i:                                   ; preds = %if.then59.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr64.i = getelementptr i8, ptr %result, i32 %sz.addr.1.i
  %sub65.i = sub i32 %maxlen, %sz.addr.1.i
  %call66.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr64.i, i32 noundef %sub65.i, ptr noundef nonnull @.str.174) #15
  br label %cond.end67.i

cond.end67.i:                                     ; preds = %cond.false63.i, %if.then59.i.cond.end67.i_crit_edge
  %cond68.i = phi i32 [ %call66.i, %cond.false63.i ], [ 0, %if.then59.i.cond.end67.i_crit_edge ]
  %add69.i = add i32 %cond68.i, %sz.addr.1.i
  br label %if.end70.i

if.end70.i:                                       ; preds = %cond.end67.i, %if.end53.i.if.end70.i_crit_edge
  %sz.addr.2.i = phi i32 [ %sz.addr.1.i, %if.end53.i.if.end70.i_crit_edge ], [ %add69.i, %cond.end67.i ]
  %103 = ptrtoint ptr %requested_pf464 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %requested_pf464, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %104)
  %cmp72.i = icmp eq i32 %104, 3
  br i1 %cmp72.i, label %if.then74.i, label %if.end70.i.if.end85.i_crit_edge

if.end70.i.if.end85.i_crit_edge:                  ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end85.i

if.then74.i:                                      ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.addr.2.i, i32 %maxlen)
  %cmp75.not.i = icmp ult i32 %sz.addr.2.i, %maxlen
  br i1 %cmp75.not.i, label %cond.false78.i, label %if.then74.i.cond.end82.i_crit_edge

if.then74.i.cond.end82.i_crit_edge:               ; preds = %if.then74.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end82.i

cond.false78.i:                                   ; preds = %if.then74.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr79.i = getelementptr i8, ptr %result, i32 %sz.addr.2.i
  %sub80.i = sub i32 %maxlen, %sz.addr.2.i
  %call81.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr79.i, i32 noundef %sub80.i, ptr noundef nonnull @.str.181) #15
  br label %cond.end82.i

cond.end82.i:                                     ; preds = %cond.false78.i, %if.then74.i.cond.end82.i_crit_edge
  %cond83.i = phi i32 [ %call81.i, %cond.false78.i ], [ 0, %if.then74.i.cond.end82.i_crit_edge ]
  %add84.i = add i32 %cond83.i, %sz.addr.2.i
  br label %if.end85.i

if.end85.i:                                       ; preds = %cond.end82.i, %if.end70.i.if.end85.i_crit_edge
  %sz.addr.3.i = phi i32 [ %add84.i, %cond.end82.i ], [ %sz.addr.2.i, %if.end70.i.if.end85.i_crit_edge ]
  %105 = ptrtoint ptr %zero_new_blocks.i465 to i32
  call void @__asan_load1_noabort(i32 %105)
  %bf.load87.i = load i8, ptr %zero_new_blocks.i465, align 4
  %106 = and i8 %bf.load87.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %106)
  %bf.cast90.not.i = icmp ne i8 %106, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %sz.addr.3.i, i32 %maxlen)
  %cmp92.not.i = icmp ult i32 %sz.addr.3.i, %maxlen
  %or.cond.i = select i1 %bf.cast90.not.i, i1 %cmp92.not.i, i1 false
  br i1 %or.cond.i, label %cond.false95.i, label %if.end85.i.cleanup_crit_edge

if.end85.i.cleanup_crit_edge:                     ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false95.i:                                   ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #17
  %add.ptr96.i = getelementptr i8, ptr %result, i32 %sz.addr.3.i
  %sub97.i = sub i32 %maxlen, %sz.addr.3.i
  %call98.i = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %add.ptr96.i, i32 noundef %sub97.i, ptr noundef nonnull @.str.175) #15
  br label %cleanup

sw.bb268:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %107 = ptrtoint ptr %result to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 0, ptr %result, align 1
  br label %cleanup

err:                                              ; preds = %do.end69, %do.end57, %do.end45, %do.end33, %do.end21, %do.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxlen)
  %cmp269 = icmp eq i32 %maxlen, 0
  br i1 %cmp269, label %err.cleanup_crit_edge, label %cond.false271

err.cleanup_crit_edge:                            ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cond.false271:                                    ; preds = %err
  call void @__sanitizer_cov_trace_pc() #17
  %call274 = call i32 (ptr, i32, ptr, ...) @scnprintf(ptr noundef %result, i32 noundef %maxlen, ptr noundef nonnull @.str.34) #15
  br label %cleanup

cleanup:                                          ; preds = %cond.false271, %err.cleanup_crit_edge, %sw.bb268, %cond.false95.i, %if.end85.i.cleanup_crit_edge, %cond.false232, %if.end229.cleanup_crit_edge, %cond.false, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buf2) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buf) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %held_root) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_blocks_metadata) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_blocks_data) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_free_blocks_metadata) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_free_blocks_data) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %transaction_id) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pool_message(ptr nocapture noundef readonly %ti, i32 noundef %argc, ptr nocapture noundef readonly %argv, ptr nocapture noundef readnone %result, i32 noundef %maxlen) #1 align 64 {
entry:
  %old_id.i = alloca i64, align 8
  %new_id.i = alloca i64, align 8
  %dev_id.i96 = alloca i64, align 8
  %dev_id.i81 = alloca i64, align 8
  %origin_dev_id.i = alloca i64, align 8
  %dev_id.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %pf.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp = icmp ugt i32 %5, 1
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pool_md, align 4
  %call2 = tail call ptr @dm_device_name(ptr noundef %7) #15
  %call3 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.182, ptr noundef %call2) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %argv to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argv, align 4
  %call4 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.184)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dev_id.i) #15
  %10 = ptrtoint ptr %dev_id.i to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 -1, ptr %dev_id.i, align 8, !annotation !495
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %argc)
  %cmp.not.i.i = icmp eq i32 %argc, 2
  br i1 %cmp.not.i.i, label %if.end.i, label %check_arg_count.exit.i

check_arg_count.exit.i:                           ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 2) #21
  br label %process_create_thin_mesg.exit

if.end.i:                                         ; preds = %if.then5
  %arrayidx.i = getelementptr ptr, ptr %argv, i32 1
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx.i, align 4
  %call.i18.i = call i32 @kstrtoull(ptr noundef %12, i32 noundef 10, ptr noundef nonnull %dev_id.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool.not.i.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end.i.read_dev_id.exit.i_crit_edge

if.end.i.read_dev_id.exit.i_crit_edge:            ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %13 = ptrtoint ptr %dev_id.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %dev_id.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %14)
  %cmp.i.i = icmp ult i64 %14, 16777216
  br i1 %cmp.i.i, label %if.end4.i, label %land.lhs.true.i.i.read_dev_id.exit.i_crit_edge

land.lhs.true.i.i.read_dev_id.exit.i_crit_edge:   ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i

read_dev_id.exit.i:                               ; preds = %land.lhs.true.i.i.read_dev_id.exit.i_crit_edge, %if.end.i.read_dev_id.exit.i_crit_edge
  %call3.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %12) #21
  br label %process_create_thin_mesg.exit

if.end4.i:                                        ; preds = %land.lhs.true.i.i
  %pmd.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %15 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pmd.i, align 8
  %call5.i = call i32 @dm_pool_create_thin(ptr noundef %16, i64 noundef %14) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end4.i.process_create_thin_mesg.exit_crit_edge, label %do.end.i

if.end4.i.process_create_thin_mesg.exit_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_create_thin_mesg.exit

do.end.i:                                         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i, align 4
  %call9.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.193, ptr noundef %18) #21
  br label %process_create_thin_mesg.exit

process_create_thin_mesg.exit:                    ; preds = %do.end.i, %if.end4.i.process_create_thin_mesg.exit_crit_edge, %read_dev_id.exit.i, %check_arg_count.exit.i
  %retval.0.i = phi i32 [ %call5.i, %do.end.i ], [ -22, %check_arg_count.exit.i ], [ -22, %read_dev_id.exit.i ], [ 0, %if.end4.i.process_create_thin_mesg.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dev_id.i) #15
  br label %if.end48

if.else:                                          ; preds = %if.end
  %call8 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.185)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dev_id.i81) #15
  %19 = ptrtoint ptr %dev_id.i81 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 -1, ptr %dev_id.i81, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %origin_dev_id.i) #15
  %20 = ptrtoint ptr %origin_dev_id.i to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 -1, ptr %origin_dev_id.i, align 8, !annotation !495
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %argc)
  %cmp.not.i.i82 = icmp eq i32 %argc, 3
  br i1 %cmp.not.i.i82, label %if.end.i87, label %check_arg_count.exit.i84

check_arg_count.exit.i84:                         ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i83 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 3) #21
  br label %process_create_snap_mesg.exit

if.end.i87:                                       ; preds = %if.then10
  %arrayidx.i85 = getelementptr ptr, ptr %argv, i32 1
  %21 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i85, align 4
  %call.i29.i = call i32 @kstrtoull(ptr noundef %22, i32 noundef 10, ptr noundef nonnull %dev_id.i81) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29.i)
  %tobool.not.i.i86 = icmp eq i32 %call.i29.i, 0
  br i1 %tobool.not.i.i86, label %land.lhs.true.i.i89, label %if.end.i87.read_dev_id.exit.i91_crit_edge

if.end.i87.read_dev_id.exit.i91_crit_edge:        ; preds = %if.end.i87
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i91

land.lhs.true.i.i89:                              ; preds = %if.end.i87
  %23 = ptrtoint ptr %dev_id.i81 to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %dev_id.i81, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %24)
  %cmp.i.i88 = icmp ult i64 %24, 16777216
  br i1 %cmp.i.i88, label %if.end4.i92, label %land.lhs.true.i.i89.read_dev_id.exit.i91_crit_edge

land.lhs.true.i.i89.read_dev_id.exit.i91_crit_edge: ; preds = %land.lhs.true.i.i89
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i91

read_dev_id.exit.i91:                             ; preds = %land.lhs.true.i.i89.read_dev_id.exit.i91_crit_edge, %if.end.i87.read_dev_id.exit.i91_crit_edge
  %call3.i.i90 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %22) #21
  br label %process_create_snap_mesg.exit

if.end4.i92:                                      ; preds = %land.lhs.true.i.i89
  %arrayidx5.i = getelementptr ptr, ptr %argv, i32 2
  %25 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx5.i, align 4
  %call.i32.i = call i32 @kstrtoull(ptr noundef %26, i32 noundef 10, ptr noundef nonnull %origin_dev_id.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i32.i)
  %tobool.not.i33.i = icmp eq i32 %call.i32.i, 0
  br i1 %tobool.not.i33.i, label %land.lhs.true.i35.i, label %if.end4.i92.read_dev_id.exit40.i_crit_edge

if.end4.i92.read_dev_id.exit40.i_crit_edge:       ; preds = %if.end4.i92
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit40.i

land.lhs.true.i35.i:                              ; preds = %if.end4.i92
  %27 = ptrtoint ptr %origin_dev_id.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %origin_dev_id.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %28)
  %cmp.i34.i = icmp ult i64 %28, 16777216
  br i1 %cmp.i34.i, label %if.end9.i, label %land.lhs.true.i35.i.read_dev_id.exit40.i_crit_edge

land.lhs.true.i35.i.read_dev_id.exit40.i_crit_edge: ; preds = %land.lhs.true.i35.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit40.i

read_dev_id.exit40.i:                             ; preds = %land.lhs.true.i35.i.read_dev_id.exit40.i_crit_edge, %if.end4.i92.read_dev_id.exit40.i_crit_edge
  %call3.i37.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %26) #21
  br label %process_create_snap_mesg.exit

if.end9.i:                                        ; preds = %land.lhs.true.i35.i
  %pmd.i93 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %29 = ptrtoint ptr %pmd.i93 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pmd.i93, align 8
  %31 = ptrtoint ptr %dev_id.i81 to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %dev_id.i81, align 8
  %call10.i = call i32 @dm_pool_create_snap(ptr noundef %30, i64 noundef %32, i64 noundef %28) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end9.i.process_create_snap_mesg.exit_crit_edge, label %do.end.i94

if.end9.i.process_create_snap_mesg.exit_crit_edge: ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_create_snap_mesg.exit

do.end.i94:                                       ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #17
  %33 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.i85, align 4
  %35 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx5.i, align 4
  %call15.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.197, ptr noundef %34, ptr noundef %36) #21
  br label %process_create_snap_mesg.exit

process_create_snap_mesg.exit:                    ; preds = %do.end.i94, %if.end9.i.process_create_snap_mesg.exit_crit_edge, %read_dev_id.exit40.i, %read_dev_id.exit.i91, %check_arg_count.exit.i84
  %retval.0.i95 = phi i32 [ %call10.i, %do.end.i94 ], [ -22, %check_arg_count.exit.i84 ], [ -22, %read_dev_id.exit.i91 ], [ -22, %read_dev_id.exit40.i ], [ 0, %if.end9.i.process_create_snap_mesg.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %origin_dev_id.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dev_id.i81) #15
  br label %if.end48

if.else12:                                        ; preds = %if.else
  %call14 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.186)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else12
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dev_id.i96) #15
  %37 = ptrtoint ptr %dev_id.i96 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 -1, ptr %dev_id.i96, align 8, !annotation !495
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %argc)
  %cmp.not.i.i97 = icmp eq i32 %argc, 2
  br i1 %cmp.not.i.i97, label %if.end.i103, label %check_arg_count.exit.i99

check_arg_count.exit.i99:                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i98 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 2) #21
  br label %process_delete_mesg.exit

if.end.i103:                                      ; preds = %if.then16
  %arrayidx.i100 = getelementptr ptr, ptr %argv, i32 1
  %38 = ptrtoint ptr %arrayidx.i100 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %arrayidx.i100, align 4
  %call.i18.i101 = call i32 @kstrtoull(ptr noundef %39, i32 noundef 10, ptr noundef nonnull %dev_id.i96) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i101)
  %tobool.not.i.i102 = icmp eq i32 %call.i18.i101, 0
  br i1 %tobool.not.i.i102, label %land.lhs.true.i.i105, label %if.end.i103.read_dev_id.exit.i107_crit_edge

if.end.i103.read_dev_id.exit.i107_crit_edge:      ; preds = %if.end.i103
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i107

land.lhs.true.i.i105:                             ; preds = %if.end.i103
  %40 = ptrtoint ptr %dev_id.i96 to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %dev_id.i96, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 16777216, i64 %41)
  %cmp.i.i104 = icmp ult i64 %41, 16777216
  br i1 %cmp.i.i104, label %if.end4.i111, label %land.lhs.true.i.i105.read_dev_id.exit.i107_crit_edge

land.lhs.true.i.i105.read_dev_id.exit.i107_crit_edge: ; preds = %land.lhs.true.i.i105
  call void @__sanitizer_cov_trace_pc() #17
  br label %read_dev_id.exit.i107

read_dev_id.exit.i107:                            ; preds = %land.lhs.true.i.i105.read_dev_id.exit.i107_crit_edge, %if.end.i103.read_dev_id.exit.i107_crit_edge
  %call3.i.i106 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %39) #21
  br label %process_delete_mesg.exit

if.end4.i111:                                     ; preds = %land.lhs.true.i.i105
  %pmd.i108 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %42 = ptrtoint ptr %pmd.i108 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pmd.i108, align 8
  %call5.i109 = call i32 @dm_pool_delete_thin_device(ptr noundef %43, i64 noundef %41) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i109)
  %tobool6.not.i110 = icmp eq i32 %call5.i109, 0
  br i1 %tobool6.not.i110, label %if.end4.i111.process_delete_mesg.exit_crit_edge, label %do.end.i113

if.end4.i111.process_delete_mesg.exit_crit_edge:  ; preds = %if.end4.i111
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_delete_mesg.exit

do.end.i113:                                      ; preds = %if.end4.i111
  call void @__sanitizer_cov_trace_pc() #17
  %44 = ptrtoint ptr %arrayidx.i100 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %arrayidx.i100, align 4
  %call9.i112 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.199, ptr noundef %45) #21
  br label %process_delete_mesg.exit

process_delete_mesg.exit:                         ; preds = %do.end.i113, %if.end4.i111.process_delete_mesg.exit_crit_edge, %read_dev_id.exit.i107, %check_arg_count.exit.i99
  %retval.0.i114 = phi i32 [ -22, %check_arg_count.exit.i99 ], [ -22, %read_dev_id.exit.i107 ], [ %call5.i109, %do.end.i113 ], [ 0, %if.end4.i111.process_delete_mesg.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dev_id.i96) #15
  br label %if.end48

if.else18:                                        ; preds = %if.else12
  %call20 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.187)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.then22, label %if.else24

if.then22:                                        ; preds = %if.else18
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %old_id.i) #15
  %46 = ptrtoint ptr %old_id.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 -1, ptr %old_id.i, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %new_id.i) #15
  %47 = ptrtoint ptr %new_id.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 -1, ptr %new_id.i, align 8, !annotation !495
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %argc)
  %cmp.not.i.i115 = icmp eq i32 %argc, 3
  br i1 %cmp.not.i.i115, label %if.end.i119, label %check_arg_count.exit.i117

check_arg_count.exit.i117:                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i116 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 3) #21
  br label %process_set_transaction_id_mesg.exit

if.end.i119:                                      ; preds = %if.then22
  %arrayidx.i118 = getelementptr ptr, ptr %argv, i32 1
  %48 = ptrtoint ptr %arrayidx.i118 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx.i118, align 4
  %call1.i = call i32 @kstrtoull(ptr noundef %49, i32 noundef 10, ptr noundef nonnull %old_id.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end6.i, label %do.end.i121

do.end.i121:                                      ; preds = %if.end.i119
  call void @__sanitizer_cov_trace_pc() #17
  %50 = ptrtoint ptr %arrayidx.i118 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %arrayidx.i118, align 4
  %call5.i120 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.201, ptr noundef %51) #21
  br label %process_set_transaction_id_mesg.exit

if.end6.i:                                        ; preds = %if.end.i119
  %arrayidx7.i = getelementptr ptr, ptr %argv, i32 2
  %52 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %arrayidx7.i, align 4
  %call8.i = call i32 @kstrtoull(ptr noundef %53, i32 noundef 10, ptr noundef nonnull %new_id.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end17.i, label %do.end13.i

do.end13.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #17
  %54 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx7.i, align 4
  %call16.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.204, ptr noundef %55) #21
  br label %process_set_transaction_id_mesg.exit

if.end17.i:                                       ; preds = %if.end6.i
  %pmd.i122 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %56 = ptrtoint ptr %pmd.i122 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %pmd.i122, align 8
  %58 = ptrtoint ptr %old_id.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %old_id.i, align 8
  %60 = ptrtoint ptr %new_id.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %new_id.i, align 8
  %call18.i = call i32 @dm_pool_set_metadata_transaction_id(ptr noundef %57, i64 noundef %59, i64 noundef %61) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i)
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %if.end17.i.process_set_transaction_id_mesg.exit_crit_edge, label %do.end23.i

if.end17.i.process_set_transaction_id_mesg.exit_crit_edge: ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_set_transaction_id_mesg.exit

do.end23.i:                                       ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #17
  %62 = ptrtoint ptr %arrayidx.i118 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %arrayidx.i118, align 4
  %64 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %arrayidx7.i, align 4
  %call27.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.207, ptr noundef %63, ptr noundef %65) #21
  br label %process_set_transaction_id_mesg.exit

process_set_transaction_id_mesg.exit:             ; preds = %do.end23.i, %if.end17.i.process_set_transaction_id_mesg.exit_crit_edge, %do.end13.i, %do.end.i121, %check_arg_count.exit.i117
  %retval.0.i123 = phi i32 [ -22, %do.end.i121 ], [ -22, %do.end13.i ], [ %call18.i, %do.end23.i ], [ -22, %check_arg_count.exit.i117 ], [ 0, %if.end17.i.process_set_transaction_id_mesg.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %new_id.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %old_id.i) #15
  br label %if.end48

if.else24:                                        ; preds = %if.else18
  %call26 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.188)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.then28, label %if.else30

if.then28:                                        ; preds = %if.else24
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %argc)
  %cmp.not.i.i124 = icmp eq i32 %argc, 1
  br i1 %cmp.not.i.i124, label %if.end.i129, label %check_arg_count.exit.i126

check_arg_count.exit.i126:                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i125 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 1) #21
  br label %cleanup

if.end.i129:                                      ; preds = %if.then28
  %call1.i127 = tail call fastcc i32 @commit(ptr noundef %3) #15
  %pmd.i128 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %66 = ptrtoint ptr %pmd.i128 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pmd.i128, align 8
  %call2.i = tail call i32 @dm_pool_reserve_metadata_snap(ptr noundef %67) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end.i129.if.then50_crit_edge, label %do.end.i131

if.end.i129.if.then50_crit_edge:                  ; preds = %if.end.i129
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then50

do.end.i131:                                      ; preds = %if.end.i129
  call void @__sanitizer_cov_trace_pc() #17
  %call5.i130 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.209) #21
  br label %cleanup

if.else30:                                        ; preds = %if.else24
  %call32 = tail call i32 @strcasecmp(ptr noundef %9, ptr noundef nonnull @.str.189)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %tobool33.not = icmp eq i32 %call32, 0
  br i1 %tobool33.not, label %if.then34, label %do.end39

if.then34:                                        ; preds = %if.else30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %argc)
  %cmp.not.i.i133 = icmp eq i32 %argc, 1
  br i1 %cmp.not.i.i133, label %if.end.i139, label %check_arg_count.exit.i135

check_arg_count.exit.i135:                        ; preds = %if.then34
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i134 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.195, i32 noundef %argc, i32 noundef 1) #21
  br label %cleanup

if.end.i139:                                      ; preds = %if.then34
  %pmd.i136 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %68 = ptrtoint ptr %pmd.i136 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %pmd.i136, align 8
  %call1.i137 = tail call i32 @dm_pool_release_metadata_snap(ptr noundef %69) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i137)
  %tobool2.not.i138 = icmp eq i32 %call1.i137, 0
  br i1 %tobool2.not.i138, label %if.end.i139.if.then50_crit_edge, label %do.end.i140

if.end.i139.if.then50_crit_edge:                  ; preds = %if.end.i139
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then50

do.end.i140:                                      ; preds = %if.end.i139
  call void @__sanitizer_cov_trace_pc() #17
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.211) #21
  br label %cleanup

do.end39:                                         ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #17
  %call42 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.191, ptr noundef %9) #21
  br label %cleanup

if.end48:                                         ; preds = %process_set_transaction_id_mesg.exit, %process_delete_mesg.exit, %process_create_snap_mesg.exit, %process_create_thin_mesg.exit
  %r.0 = phi i32 [ %retval.0.i123, %process_set_transaction_id_mesg.exit ], [ %retval.0.i114, %process_delete_mesg.exit ], [ %retval.0.i95, %process_create_snap_mesg.exit ], [ %retval.0.i, %process_create_thin_mesg.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.0)
  %tobool49.not = icmp eq i32 %r.0, 0
  br i1 %tobool49.not, label %if.end48.if.then50_crit_edge, label %if.end48.cleanup_crit_edge

if.end48.cleanup_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end48.if.then50_crit_edge:                     ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then50

if.then50:                                        ; preds = %if.end48.if.then50_crit_edge, %if.end.i139.if.then50_crit_edge, %if.end.i129.if.then50_crit_edge
  %call51 = call fastcc i32 @commit(ptr noundef %3)
  br label %cleanup

cleanup:                                          ; preds = %if.then50, %if.end48.cleanup_crit_edge, %do.end39, %do.end.i140, %check_arg_count.exit.i135, %do.end.i131, %check_arg_count.exit.i126, %do.end
  %retval.0 = phi i32 [ -95, %do.end ], [ 0, %if.then50 ], [ %r.0, %if.end48.cleanup_crit_edge ], [ %call1.i137, %do.end.i140 ], [ -22, %check_arg_count.exit.i135 ], [ %call2.i, %do.end.i131 ], [ -22, %check_arg_count.exit.i126 ], [ -22, %do.end39 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pool_iterate_devices(ptr noundef %ti, ptr nocapture noundef readonly %fn, ptr noundef %data) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %data_dev = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %data_dev, align 8
  %len = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 3
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %len, align 8
  %call = tail call i32 %fn(ptr noundef %ti, ptr noundef %3, i64 noundef 0, i64 noundef %5, ptr noundef %data) #15
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pool_io_hints(ptr nocapture noundef readonly %ti, ptr noundef %limits) #1 align 64 {
entry:
  %buf.i = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.dm_target, ptr %ti, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 4
  %pool1 = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 4
  %io_opt = getelementptr inbounds %struct.queue_limits, ptr %limits, i32 0, i32 12
  %4 = ptrtoint ptr %io_opt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %io_opt, align 4
  %shr = lshr i32 %5, 9
  %max_sectors = getelementptr inbounds %struct.queue_limits, ptr %limits, i32 0, i32 6
  %6 = ptrtoint ptr %max_sectors to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %max_sectors, align 4
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp = icmp ult i32 %7, %9
  br i1 %cmp, label %entry.while.cond_crit_edge, label %entry.if.end33_crit_edge

entry.if.end33_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

entry.while.cond_crit_edge:                       ; preds = %entry
  br label %while.cond

while.cond:                                       ; preds = %cond.end30, %entry.while.cond_crit_edge
  %10 = ptrtoint ptr %max_sectors to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_sectors, align 4
  %12 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %sectors_per_block, align 8
  %rem170.i = urem i32 %13, %11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem170.i)
  %tobool180.not.i = icmp eq i32 %rem170.i, 0
  br i1 %tobool180.not.i, label %while.cond.if.end33_crit_edge, label %while.body

while.cond.if.end33_crit_edge:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end33

while.body:                                       ; preds = %while.cond
  %14 = tail call i32 @llvm.ctpop.i32(i32 %11), !range !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %cmp8 = icmp ult i32 %14, 2
  br i1 %cmp8, label %if.then10, label %while.body.cond.end30_crit_edge

while.body.cond.end30_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %cond.end30

if.then10:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %dec = add i32 %11, -1
  %15 = ptrtoint ptr %max_sectors to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %dec, ptr %max_sectors, align 4
  br label %cond.end30

cond.end30:                                       ; preds = %if.then10, %while.body.cond.end30_crit_edge
  %16 = ptrtoint ptr %max_sectors to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %max_sectors, align 4
  %18 = tail call i32 @llvm.ctlz.i32(i32 %17, i1 true) #15, !range !511
  %sub.i.i.op.i = xor i32 %18, 31
  %cond31 = shl nuw i32 1, %sub.i.i.op.i
  %19 = ptrtoint ptr %max_sectors to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %cond31, ptr %max_sectors, align 4
  br label %while.cond

if.end33:                                         ; preds = %while.cond.if.end33_crit_edge, %entry.if.end33_crit_edge
  %20 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %sectors_per_block, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %21)
  %cmp36 = icmp ult i32 %shr, %21
  br i1 %cmp36, label %if.end33.if.then40_crit_edge, label %is_factor.exit196

if.end33.if.then40_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then40

is_factor.exit196:                                ; preds = %if.end33
  %rem170.i193 = urem i32 %shr, %21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem170.i193)
  %tobool180.not.i195 = icmp eq i32 %rem170.i193, 0
  br i1 %tobool180.not.i195, label %is_factor.exit196.if.end53_crit_edge, label %is_factor.exit196.if.then40_crit_edge

is_factor.exit196.if.then40_crit_edge:            ; preds = %is_factor.exit196
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then40

is_factor.exit196.if.end53_crit_edge:             ; preds = %is_factor.exit196
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end53

if.then40:                                        ; preds = %is_factor.exit196.if.then40_crit_edge, %if.end33.if.then40_crit_edge
  %22 = ptrtoint ptr %max_sectors to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %max_sectors, align 4
  %rem170.i305 = urem i32 %21, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem170.i305)
  %tobool180.not.i307 = icmp eq i32 %rem170.i305, 0
  %. = select i1 %tobool180.not.i307, i32 %23, i32 %21
  %shl49 = shl i32 %., 9
  tail call void @blk_limits_io_min(ptr noundef %limits, i32 noundef %shl49) #15
  %24 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %sectors_per_block, align 8
  %shl52 = shl i32 %25, 9
  tail call void @blk_limits_io_opt(ptr noundef %limits, i32 noundef %shl52) #15
  br label %if.end53

if.end53:                                         ; preds = %if.then40, %is_factor.exit196.if.end53_crit_edge
  %discard_enabled = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 6, i32 1
  %26 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load = load i8, ptr %discard_enabled, align 4
  %27 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %27)
  %bf.cast.not = icmp eq i8 %27, 0
  br i1 %bf.cast.not, label %if.then54, label %if.end55

if.then54:                                        ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #17
  %discard_granularity = getelementptr inbounds %struct.queue_limits, ptr %limits, i32 0, i32 18
  %28 = ptrtoint ptr %discard_granularity to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %discard_granularity, align 4
  br label %cleanup

if.end55:                                         ; preds = %if.end53
  %29 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pool1, align 4
  %data_dev.i = getelementptr inbounds %struct.pool_c, ptr %1, i32 0, i32 2
  %31 = ptrtoint ptr %data_dev.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %data_dev.i, align 8
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %32, align 4
  %bd_queue.i.i = getelementptr inbounds %struct.block_device, ptr %34, i32 0, i32 18
  %35 = ptrtoint ptr %bd_queue.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %bd_queue.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %buf.i) #15
  %37 = call ptr @memset(ptr %buf.i, i32 255, i32 32)
  %38 = and i8 %bf.load, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %38)
  %bf.cast.not.i = icmp eq i8 %38, 0
  br i1 %bf.cast.not.i, label %if.end55.disable_passdown_if_not_supported.exit_crit_edge, label %if.end.i

if.end55.disable_passdown_if_not_supported.exit_crit_edge: ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #17
  br label %disable_passdown_if_not_supported.exit

if.end.i:                                         ; preds = %if.end55
  %39 = ptrtoint ptr %32 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %32, align 4
  %bd_queue.i.i.i = getelementptr inbounds %struct.block_device, ptr %40, i32 0, i32 18
  %41 = ptrtoint ptr %bd_queue.i.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %bd_queue.i.i.i, align 4
  %queue_flags.i.i = getelementptr inbounds %struct.request_queue, ptr %42, i32 0, i32 11
  %43 = ptrtoint ptr %queue_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %queue_flags.i.i, align 4
  %45 = and i32 %44, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool.i.not.i = icmp eq i32 %45, 0
  br i1 %tobool.i.not.i, label %if.end.i.do.end.i_crit_edge, label %if.end6.i

if.end.i.do.end.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i

if.end6.i:                                        ; preds = %if.end.i
  %max_discard_sectors.i = getelementptr inbounds %struct.request_queue, ptr %36, i32 0, i32 37, i32 13
  %46 = ptrtoint ptr %max_discard_sectors.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %max_discard_sectors.i, align 4
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %30, i32 0, i32 7
  %48 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %sectors_per_block.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %47, i32 %49)
  %cmp.i = icmp ult i32 %47, %49
  br i1 %cmp.i, label %if.end6.i.do.end.i_crit_edge, label %if.end6.i.disable_passdown_if_not_supported.exit_crit_edge

if.end6.i.disable_passdown_if_not_supported.exit_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %disable_passdown_if_not_supported.exit

if.end6.i.do.end.i_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end.i

do.end.i:                                         ; preds = %if.end6.i.do.end.i_crit_edge, %if.end.i.do.end.i_crit_edge
  %reason.028.i = phi ptr [ @.str.214, %if.end6.i.do.end.i_crit_edge ], [ @.str.213, %if.end.i.do.end.i_crit_edge ]
  %call8.i = call ptr @bdevname(ptr noundef %34, ptr noundef nonnull %buf.i) #15
  %call9.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.215, ptr noundef %call8.i, ptr noundef nonnull %reason.028.i) #21
  %50 = ptrtoint ptr %discard_enabled to i32
  call void @__asan_load1_noabort(i32 %50)
  %bf.load12.i = load i8, ptr %discard_enabled, align 4
  %bf.clear13.i = and i8 %bf.load12.i, -33
  store i8 %bf.clear13.i, ptr %discard_enabled, align 4
  br label %disable_passdown_if_not_supported.exit

disable_passdown_if_not_supported.exit:           ; preds = %do.end.i, %if.end6.i.disable_passdown_if_not_supported.exit_crit_edge, %if.end55.disable_passdown_if_not_supported.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %buf.i) #15
  br label %cleanup

cleanup:                                          ; preds = %disable_passdown_if_not_supported.exit, %if.then54
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_consume_args(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__pool_find(ptr noundef %pool_md, ptr noundef %metadata_dev, ptr noundef %data_dev, i32 noundef %block_size, i32 noundef %read_only, ptr nocapture noundef writeonly %error, ptr nocapture noundef writeonly %created) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i, label %entry.for.cond.i_crit_edge, label %do.body3.i, !prof !496

entry.for.cond.i_crit_edge:                       ; preds = %entry
  br label %for.cond.i

do.body3.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 571, 0\0A.popsection", ""() #15, !srcloc !512
  unreachable

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry.for.cond.i_crit_edge
  %tmp.0.in.i = phi ptr [ %tmp.0.i, %for.body.i.for.cond.i_crit_edge ], [ getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), %entry.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %tmp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %tmp.0.i = load ptr, ptr %tmp.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %tmp.0.i, getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1)
  br i1 %cmp.not.i, label %for.cond.i.if.else_crit_edge, label %for.body.i

for.cond.i.if.else_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

for.body.i:                                       ; preds = %for.cond.i
  %md_dev12.i = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 4
  %1 = ptrtoint ptr %md_dev12.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %md_dev12.i, align 4
  %cmp13.i = icmp eq ptr %2, %metadata_dev
  br i1 %cmp13.i, label %__pool_table_lookup_metadata_dev.exit, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i

__pool_table_lookup_metadata_dev.exit:            ; preds = %for.body.i
  %tobool.not = icmp eq ptr %tmp.0.i, null
  br i1 %tobool.not, label %__pool_table_lookup_metadata_dev.exit.if.else_crit_edge, label %if.then

__pool_table_lookup_metadata_dev.exit.if.else_crit_edge: ; preds = %__pool_table_lookup_metadata_dev.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %__pool_table_lookup_metadata_dev.exit
  %pool_md1 = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 2
  %3 = ptrtoint ptr %pool_md1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pool_md1, align 4
  %cmp.not = icmp eq ptr %4, %pool_md
  br i1 %cmp.not, label %if.end, label %if.then2

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %5 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr @.str.51, ptr %error, align 4
  br label %cleanup

if.end:                                           ; preds = %if.then
  %data_dev4 = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 3
  %6 = ptrtoint ptr %data_dev4 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %data_dev4, align 8
  %cmp5.not = icmp eq ptr %7, %data_dev
  br i1 %cmp5.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @.str.52, ptr %error, align 4
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %call.i39 = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i39, label %__pool_inc.exit, label %do.body3.i40, !prof !496

do.body3.i40:                                     ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3063, 0\0A.popsection", ""() #15, !srcloc !498
  unreachable

__pool_inc.exit:                                  ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #17
  %ref_count.i = getelementptr inbounds %struct.pool, ptr %tmp.0.i, i32 0, i32 19
  %9 = ptrtoint ptr %ref_count.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ref_count.i, align 8
  %inc.i = add i32 %10, 1
  store i32 %inc.i, ptr %ref_count.i, align 8
  br label %cleanup

if.else:                                          ; preds = %__pool_table_lookup_metadata_dev.exit.if.else_crit_edge, %for.cond.i.if.else_crit_edge
  %call.i41 = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i41, label %if.else.for.cond.i46_crit_edge, label %do.body3.i42, !prof !496

if.else.for.cond.i46_crit_edge:                   ; preds = %if.else
  br label %for.cond.i46

do.body3.i42:                                     ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 555, 0\0A.popsection", ""() #15, !srcloc !497
  unreachable

for.cond.i46:                                     ; preds = %for.body.i47.for.cond.i46_crit_edge, %if.else.for.cond.i46_crit_edge
  %tmp.0.in.i43 = phi ptr [ %tmp.0.i44, %for.body.i47.for.cond.i46_crit_edge ], [ getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), %if.else.for.cond.i46_crit_edge ]
  %11 = ptrtoint ptr %tmp.0.in.i43 to i32
  call void @__asan_load4_noabort(i32 %11)
  %tmp.0.i44 = load ptr, ptr %tmp.0.in.i43, align 4
  %cmp.not.i45 = icmp eq ptr %tmp.0.i44, getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1)
  br i1 %cmp.not.i45, label %for.cond.i46.if.else18_crit_edge, label %for.body.i47

for.cond.i46.if.else18_crit_edge:                 ; preds = %for.cond.i46
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else18

for.body.i47:                                     ; preds = %for.cond.i46
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %tmp.0.i44, i32 0, i32 2
  %12 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pool_md.i, align 4
  %cmp12.i = icmp eq ptr %13, %pool_md
  br i1 %cmp12.i, label %__pool_table_lookup.exit, label %for.body.i47.for.cond.i46_crit_edge

for.body.i47.for.cond.i46_crit_edge:              ; preds = %for.body.i47
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond.i46

__pool_table_lookup.exit:                         ; preds = %for.body.i47
  %tobool10.not = icmp eq ptr %tmp.0.i44, null
  br i1 %tobool10.not, label %__pool_table_lookup.exit.if.else18_crit_edge, label %if.then11

__pool_table_lookup.exit.if.else18_crit_edge:     ; preds = %__pool_table_lookup.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else18

if.then11:                                        ; preds = %__pool_table_lookup.exit
  %md_dev = getelementptr inbounds %struct.pool, ptr %tmp.0.i44, i32 0, i32 4
  %14 = ptrtoint ptr %md_dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %md_dev, align 4
  %cmp12.not = icmp eq ptr %15, %metadata_dev
  br i1 %cmp12.not, label %lor.lhs.false, label %if.then11.if.then15_crit_edge

if.then11.if.then15_crit_edge:                    ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then15

lor.lhs.false:                                    ; preds = %if.then11
  %data_dev13 = getelementptr inbounds %struct.pool, ptr %tmp.0.i44, i32 0, i32 3
  %16 = ptrtoint ptr %data_dev13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data_dev13, align 8
  %cmp14.not = icmp eq ptr %17, %data_dev
  br i1 %cmp14.not, label %if.end17, label %lor.lhs.false.if.then15_crit_edge

lor.lhs.false.if.then15_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then15

if.then15:                                        ; preds = %lor.lhs.false.if.then15_crit_edge, %if.then11.if.then15_crit_edge
  %18 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @.str.53, ptr %error, align 4
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  %call.i49 = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call.i49, label %__pool_inc.exit53, label %do.body3.i50, !prof !496

do.body3.i50:                                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3063, 0\0A.popsection", ""() #15, !srcloc !498
  unreachable

__pool_inc.exit53:                                ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #17
  %ref_count.i51 = getelementptr inbounds %struct.pool, ptr %tmp.0.i44, i32 0, i32 19
  %19 = ptrtoint ptr %ref_count.i51 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ref_count.i51, align 8
  %inc.i52 = add i32 %20, 1
  store i32 %inc.i52, ptr %ref_count.i51, align 8
  br label %cleanup

if.else18:                                        ; preds = %__pool_table_lookup.exit.if.else18_crit_edge, %for.cond.i46.if.else18_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %read_only)
  %tobool.not.i = icmp eq i32 %read_only, 0
  %conv.i = zext i32 %block_size to i64
  %call.i54 = tail call ptr @dm_pool_metadata_open(ptr noundef %metadata_dev, i64 noundef %conv.i, i1 noundef zeroext %tobool.not.i) #15
  %cmp.i.i = icmp ugt ptr %call.i54, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.else18
  call void @__sanitizer_cov_trace_pc() #17
  %21 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr @.str.54, ptr %error, align 4
  br label %pool_create.exit

if.end.i:                                         ; preds = %if.else18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10) to i32))
  %22 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 10), align 4
  %call7.i.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %22, i32 noundef 3520, i32 noundef 792) #18
  %tobool5.not.i = icmp eq ptr %call7.i.i.i, null
  br i1 %tobool5.not.i, label %if.then6.i, label %if.end8.i

if.then6.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %23 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @.str.55, ptr %error, align 4
  br label %bad_pool.i

if.end8.i:                                        ; preds = %if.end.i
  %pmd9.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 5
  %24 = ptrtoint ptr %pmd9.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call.i54, ptr %pmd9.i, align 8
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 7
  %25 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %block_size, ptr %sectors_per_block.i, align 8
  %26 = tail call i32 @llvm.ctpop.i32(i32 %block_size) #15, !range !511
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %26)
  %tobool10.not.i = icmp ult i32 %26, 2
  %27 = tail call i32 @llvm.cttz.i32(i32 %block_size, i1 false) #15, !range !511
  %spec.select.i = select i1 %tobool10.not.i, i32 %27, i32 -1
  %28 = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 8
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %spec.select.i, ptr %28, align 4
  %low_water_blocks.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 6
  %30 = ptrtoint ptr %low_water_blocks.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 0, ptr %low_water_blocks.i, align 8
  %pf.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 9
  %31 = ptrtoint ptr %pf.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %pf.i, align 8
  %zero_new_blocks.i.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 9, i32 1
  %32 = ptrtoint ptr %zero_new_blocks.i.i to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load.i.i = load i8, ptr %zero_new_blocks.i.i, align 4
  %bf.set6.i.i = and i8 %bf.load.i.i, 15
  %bf.clear8.i.i = or i8 %bf.set6.i.i, -32
  store i8 %bf.clear8.i.i, ptr %zero_new_blocks.i.i, align 4
  %call15.i = tail call ptr @dm_bio_prison_create() #15
  %prison.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 11
  %33 = ptrtoint ptr %prison.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %call15.i, ptr %prison.i, align 4
  %tobool17.not.i = icmp eq ptr %call15.i, null
  br i1 %tobool17.not.i, label %if.then18.i, label %if.end20.i

if.then18.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #17
  %34 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @.str.56, ptr %error, align 4
  br label %bad_prison.i

if.end20.i:                                       ; preds = %if.end8.i
  %call21.i = tail call ptr @dm_kcopyd_client_create(ptr noundef nonnull @dm_kcopyd_throttle) #15
  %copier.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 12
  %35 = ptrtoint ptr %copier.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call21.i, ptr %copier.i, align 8
  %cmp.i226.i = icmp ugt ptr %call21.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i226.i, label %if.then24.i, label %if.end28.i

if.then24.i:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #17
  %36 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @.str.57, ptr %error, align 4
  br label %bad_kcopyd_client.i

if.end28.i:                                       ; preds = %if.end20.i
  %call29.i = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.58, i32 noundef 655370, i32 noundef 1) #15
  %wq.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 14
  %37 = ptrtoint ptr %wq.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %call29.i, ptr %wq.i, align 8
  %tobool31.not.i = icmp eq ptr %call29.i, null
  br i1 %tobool31.not.i, label %if.then32.i, label %if.end34.i

if.then32.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @.str.59, ptr %error, align 4
  br label %bad_wq.i

if.end34.i:                                       ; preds = %if.end28.i
  %throttle.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 15
  tail call void @__init_rwsem(ptr noundef %throttle.i, ptr noundef nonnull @.str.76, ptr noundef nonnull @throttle_init.__key) #15
  %throttle_applied.i.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 15, i32 2
  %39 = ptrtoint ptr %throttle_applied.i.i to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 0, ptr %throttle_applied.i.i, align 8
  %worker.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 13
  tail call void @__init_work(ptr noundef %worker.i, i32 noundef 0) #15
  %40 = ptrtoint ptr %worker.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -64, ptr %worker.i, align 4
  %lockdep_map.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 13, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.60, ptr noundef nonnull @pool_create.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry38.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 13, i32 1
  %41 = ptrtoint ptr %entry38.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %entry38.i, ptr %entry38.i, align 8
  %prev.i.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 13, i32 1, i32 1
  %42 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %entry38.i, ptr %prev.i.i, align 4
  %func.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 13, i32 2
  %43 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @do_worker, ptr %func.i, align 8
  %waker.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16
  tail call void @__init_work(ptr noundef %waker.i, i32 noundef 0) #15
  %44 = ptrtoint ptr %waker.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 -64, ptr %waker.i, align 4
  %lockdep_map49.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map49.i, ptr noundef nonnull @.str.62, ptr noundef nonnull @pool_create.__key.61, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry52.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16, i32 0, i32 1
  %45 = ptrtoint ptr %entry52.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %entry52.i, ptr %entry52.i, align 8
  %prev.i227.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16, i32 0, i32 1, i32 1
  %46 = ptrtoint ptr %prev.i227.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %entry52.i, ptr %prev.i227.i, align 4
  %func55.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16, i32 0, i32 2
  %47 = ptrtoint ptr %func55.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @do_waker, ptr %func55.i, align 8
  %timer.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 16, i32 1
  tail call void @init_timer_key(ptr noundef %timer.i, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.64, ptr noundef nonnull @pool_create.__key.63) #15
  %no_space_timeout.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17
  tail call void @__init_work(ptr noundef %no_space_timeout.i, i32 noundef 0) #15
  %48 = ptrtoint ptr %no_space_timeout.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 -64, ptr %no_space_timeout.i, align 8
  %lockdep_map74.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map74.i, ptr noundef nonnull @.str.66, ptr noundef nonnull @pool_create.__key.65, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #15
  %entry77.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17, i32 0, i32 1
  %49 = ptrtoint ptr %entry77.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %entry77.i, ptr %entry77.i, align 4
  %prev.i228.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17, i32 0, i32 1, i32 1
  %50 = ptrtoint ptr %prev.i228.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %entry77.i, ptr %prev.i228.i, align 8
  %func80.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17, i32 0, i32 2
  %51 = ptrtoint ptr %func80.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr @do_no_space_timeout, ptr %func80.i, align 4
  %timer85.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 17, i32 1
  tail call void @init_timer_key(ptr noundef %timer85.i, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.68, ptr noundef nonnull @pool_create.__key.67) #15
  %lock.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 20
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i, ptr noundef nonnull @.str.70, ptr noundef nonnull @pool_create.__key.69, i16 noundef signext 3) #15
  %deferred_flush_bios.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 21
  %prepared_mappings.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 23
  %52 = call ptr @memset(ptr %deferred_flush_bios.i, i32 0, i32 16)
  %53 = ptrtoint ptr %prepared_mappings.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %prepared_mappings.i, ptr %prepared_mappings.i, align 8
  %prev.i230.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 23, i32 1
  %54 = ptrtoint ptr %prev.i230.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %prepared_mappings.i, ptr %prev.i230.i, align 4
  %prepared_discards.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 24
  %55 = ptrtoint ptr %prepared_discards.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store volatile ptr %prepared_discards.i, ptr %prepared_discards.i, align 8
  %prev.i231.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 24, i32 1
  %56 = ptrtoint ptr %prev.i231.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %prepared_discards.i, ptr %prev.i231.i, align 4
  %prepared_discards_pt2.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 25
  %57 = ptrtoint ptr %prepared_discards_pt2.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %prepared_discards_pt2.i, ptr %prepared_discards_pt2.i, align 8
  %prev.i232.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 25, i32 1
  %58 = ptrtoint ptr %prev.i232.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %prepared_discards_pt2.i, ptr %prev.i232.i, align 4
  %active_thins.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 26
  %59 = ptrtoint ptr %active_thins.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %active_thins.i, ptr %active_thins.i, align 8
  %prev.i233.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 26, i32 1
  %60 = ptrtoint ptr %prev.i233.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %active_thins.i, ptr %prev.i233.i, align 4
  %low_water_triggered.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 10
  %61 = ptrtoint ptr %low_water_triggered.i to i32
  call void @__asan_load1_noabort(i32 %61)
  %bf.load.i = load i8, ptr %low_water_triggered.i, align 8
  %bf.clear95.i = and i8 %bf.load.i, 31
  %bf.set96.i = or i8 %bf.clear95.i, 64
  store i8 %bf.set96.i, ptr %low_water_triggered.i, align 8
  %flush_bio.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 39
  tail call void @bio_init(ptr noundef %flush_bio.i, ptr noundef null, i16 noundef zeroext 0) #15
  %call100.i = tail call ptr @dm_deferred_set_create() #15
  %shared_read_ds.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 27
  %62 = ptrtoint ptr %shared_read_ds.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call100.i, ptr %shared_read_ds.i, align 8
  %tobool102.not.i = icmp eq ptr %call100.i, null
  br i1 %tobool102.not.i, label %if.then103.i, label %if.end105.i

if.then103.i:                                     ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #17
  %63 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr @.str.71, ptr %error, align 4
  br label %bad_shared_read_ds.i

if.end105.i:                                      ; preds = %if.end34.i
  %call106.i = tail call ptr @dm_deferred_set_create() #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 28
  %64 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %call106.i, ptr %all_io_ds.i, align 4
  %tobool108.not.i = icmp eq ptr %call106.i, null
  br i1 %tobool108.not.i, label %if.then109.i, label %if.end111.i

if.then109.i:                                     ; preds = %if.end105.i
  call void @__sanitizer_cov_trace_pc() #17
  %65 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr @.str.72, ptr %error, align 4
  br label %bad_all_io_ds.i

if.end111.i:                                      ; preds = %if.end105.i
  %next_mapping.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 29
  %66 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %next_mapping.i, align 8
  %mapping_pool.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 38
  %67 = load ptr, ptr @_new_mapping_cache, align 4
  %call.i.i = tail call i32 @mempool_init(ptr noundef %mapping_pool.i, i32 noundef 1024, ptr noundef nonnull @mempool_alloc_slab, ptr noundef nonnull @mempool_free_slab, ptr noundef %67) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool113.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool113.not.i, label %if.end116.i, label %if.then114.i

if.then114.i:                                     ; preds = %if.end111.i
  call void @__sanitizer_cov_trace_pc() #17
  %68 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr @.str.73, ptr %error, align 4
  %69 = inttoptr i32 %call.i.i to ptr
  br label %bad_mapping_pool.i

if.end116.i:                                      ; preds = %if.end111.i
  %call118.i = tail call noalias ptr @vmalloc(i32 noundef 32768) #22
  %cell_sort_array.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 37
  %70 = ptrtoint ptr %cell_sort_array.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %call118.i, ptr %cell_sort_array.i, align 8
  %tobool120.not.i = icmp eq ptr %call118.i, null
  br i1 %tobool120.not.i, label %if.then121.i, label %if.end123.i

if.then121.i:                                     ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_pc() #17
  %71 = ptrtoint ptr %error to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr @.str.74, ptr %error, align 4
  tail call void @mempool_exit(ptr noundef %mapping_pool.i) #15
  br label %bad_mapping_pool.i

if.end123.i:                                      ; preds = %if.end116.i
  call void @__sanitizer_cov_trace_pc() #17
  %ref_count.i55 = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 19
  %72 = ptrtoint ptr %ref_count.i55 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 1, ptr %ref_count.i55, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %73 = load volatile i32, ptr @jiffies, align 128
  %last_commit_jiffies.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 18
  %74 = ptrtoint ptr %last_commit_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %last_commit_jiffies.i, align 4
  %pool_md124.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 2
  %75 = ptrtoint ptr %pool_md124.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr %pool_md, ptr %pool_md124.i, align 4
  %md_dev.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 4
  %76 = ptrtoint ptr %md_dev.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %metadata_dev, ptr %md_dev.i, align 4
  %data_dev125.i = getelementptr inbounds %struct.pool, ptr %call7.i.i.i, i32 0, i32 3
  %77 = ptrtoint ptr %data_dev125.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %data_dev, ptr %data_dev125.i, align 8
  tail call fastcc void @__pool_table_insert(ptr noundef nonnull %call7.i.i.i) #15
  br label %pool_create.exit

bad_mapping_pool.i:                               ; preds = %if.then121.i, %if.then114.i
  %err_p.0.i = phi ptr [ %69, %if.then114.i ], [ inttoptr (i32 -12 to ptr), %if.then121.i ]
  %78 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %all_io_ds.i, align 4
  tail call void @dm_deferred_set_destroy(ptr noundef %79) #15
  br label %bad_all_io_ds.i

bad_all_io_ds.i:                                  ; preds = %bad_mapping_pool.i, %if.then109.i
  %err_p.1.i = phi ptr [ %err_p.0.i, %bad_mapping_pool.i ], [ inttoptr (i32 -12 to ptr), %if.then109.i ]
  %80 = ptrtoint ptr %shared_read_ds.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %shared_read_ds.i, align 8
  tail call void @dm_deferred_set_destroy(ptr noundef %81) #15
  br label %bad_shared_read_ds.i

bad_shared_read_ds.i:                             ; preds = %bad_all_io_ds.i, %if.then103.i
  %err_p.2.i = phi ptr [ %err_p.1.i, %bad_all_io_ds.i ], [ inttoptr (i32 -12 to ptr), %if.then103.i ]
  %82 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %wq.i, align 8
  tail call void @destroy_workqueue(ptr noundef %83) #15
  br label %bad_wq.i

bad_wq.i:                                         ; preds = %bad_shared_read_ds.i, %if.then32.i
  %err_p.3.i = phi ptr [ %err_p.2.i, %bad_shared_read_ds.i ], [ inttoptr (i32 -12 to ptr), %if.then32.i ]
  %84 = ptrtoint ptr %copier.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %copier.i, align 8
  tail call void @dm_kcopyd_client_destroy(ptr noundef %85) #15
  br label %bad_kcopyd_client.i

bad_kcopyd_client.i:                              ; preds = %bad_wq.i, %if.then24.i
  %err_p.4.i = phi ptr [ %call21.i, %if.then24.i ], [ %err_p.3.i, %bad_wq.i ]
  %86 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %prison.i, align 4
  tail call void @dm_bio_prison_destroy(ptr noundef %87) #15
  br label %bad_prison.i

bad_prison.i:                                     ; preds = %bad_kcopyd_client.i, %if.then18.i
  %err_p.5.i = phi ptr [ %err_p.4.i, %bad_kcopyd_client.i ], [ inttoptr (i32 -12 to ptr), %if.then18.i ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i.i) #15
  br label %bad_pool.i

bad_pool.i:                                       ; preds = %bad_prison.i, %if.then6.i
  %err_p.6.i = phi ptr [ %err_p.5.i, %bad_prison.i ], [ inttoptr (i32 -12 to ptr), %if.then6.i ]
  %call132.i = tail call i32 @dm_pool_metadata_close(ptr noundef %call.i54) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call132.i)
  %tobool133.not.i = icmp eq i32 %call132.i, 0
  br i1 %tobool133.not.i, label %bad_pool.i.pool_create.exit_crit_edge, label %do.end137.i

bad_pool.i.pool_create.exit_crit_edge:            ; preds = %bad_pool.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %pool_create.exit

do.end137.i:                                      ; preds = %bad_pool.i
  call void @__sanitizer_cov_trace_pc() #17
  %call138.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.75) #21
  br label %pool_create.exit

pool_create.exit:                                 ; preds = %do.end137.i, %bad_pool.i.pool_create.exit_crit_edge, %if.end123.i, %if.then.i
  %retval.0.i = phi ptr [ %call.i54, %if.then.i ], [ %call7.i.i.i, %if.end123.i ], [ %err_p.6.i, %do.end137.i ], [ %err_p.6.i, %bad_pool.i.pool_create.exit_crit_edge ]
  %88 = ptrtoint ptr %created to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 1, ptr %created, align 4
  br label %cleanup

cleanup:                                          ; preds = %pool_create.exit, %__pool_inc.exit53, %if.then15, %__pool_inc.exit, %if.then6, %if.then2
  %retval.0 = phi ptr [ inttoptr (i32 -16 to ptr), %if.then2 ], [ inttoptr (i32 -16 to ptr), %if.then6 ], [ inttoptr (i32 -22 to ptr), %if.then15 ], [ %tmp.0.i, %__pool_inc.exit ], [ %tmp.0.i44, %__pool_inc.exit53 ], [ %retval.0.i, %pool_create.exit ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_register_metadata_threshold(ptr noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @metadata_low_callback(ptr nocapture noundef readonly %context) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool_md = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 2
  %0 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool_md, align 4
  %call = tail call ptr @dm_device_name(ptr noundef %1) #15
  %call1 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.124, ptr noundef %call) #21
  %ti = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 1
  %2 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ti, align 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  tail call void @dm_table_event(ptr noundef %5) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_pool_register_pre_commit_callback(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @metadata_pre_commit_callback(ptr noundef %context) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %flush_bio1 = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 39
  tail call void @bio_reset(ptr noundef %flush_bio1) #15
  %data_dev = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 3
  %0 = ptrtoint ptr %data_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %data_dev, align 8
  %bi_flags.i.i = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 39, i32 3
  %2 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %bi_flags.i.i, align 4
  %conv1.i.i = and i16 %3, -2049
  store i16 %conv1.i.i, ptr %bi_flags.i.i, align 4
  %bi_bdev.i = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 39, i32 1
  %4 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bi_bdev.i, align 4
  %cmp.not.i = icmp eq ptr %5, %1
  br i1 %cmp.not.i, label %entry.bio_set_dev.exit_crit_edge, label %if.then.i

entry.bio_set_dev.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i = and i16 %3, -2177
  %6 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv1.i8.i, ptr %bi_flags.i.i, align 4
  br label %bio_set_dev.exit

bio_set_dev.exit:                                 ; preds = %if.then.i, %entry.bio_set_dev.exit_crit_edge
  %7 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %1, ptr %bi_bdev.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %flush_bio1) #15
  %bi_opf = getelementptr inbounds %struct.pool, ptr %context, i32 0, i32 39, i32 2
  %8 = ptrtoint ptr %bi_opf to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 262145, ptr %bi_opf, align 8
  %call = tail call i32 @submit_bio_wait(ptr noundef %flush_bio1) #15
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_read_arg_group(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_shift_arg(ptr noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcasecmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bdevname(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_kstrtoul(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_pool_metadata_open(ptr noundef, i64 noundef, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_bio_prison_create() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_kcopyd_client_create(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_worker(ptr noundef %ws) #1 align 64 {
entry:
  %plug.i.i = alloca %struct.blk_plug, align 4
  %cells.i.i = alloca %struct.list_head, align 4
  %maps.i51 = alloca %struct.list_head, align 4
  %maps.i30 = alloca %struct.list_head, align 4
  %maps.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %ws, i32 -68
  %throttle = getelementptr i8, ptr %ws, i32 48
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %add.i = add i32 %0, 100
  %threshold.i = getelementptr i8, ptr %ws, i32 144
  %1 = ptrtoint ptr %threshold.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %add.i, ptr %threshold.i, align 4
  %pmd = getelementptr i8, ptr %ws, i32 -44
  %2 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pmd, align 8
  tail call void @dm_pool_issue_prefetches(ptr noundef %3) #15
  %throttle_applied.i = getelementptr i8, ptr %ws, i32 148
  %4 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %throttle_applied.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.not.i = icmp eq i8 %5, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.throttle_work_update.exit_crit_edge

entry.throttle_work_update.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit

land.lhs.true.i:                                  ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %7 = ptrtoint ptr %threshold.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp.i = icmp ugt i32 %6, %8
  br i1 %cmp.i, label %if.then.i, label %land.lhs.true.i.throttle_work_update.exit_crit_edge

land.lhs.true.i.throttle_work_update.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @down_write(ptr noundef %throttle) #15
  %9 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 1, ptr %throttle_applied.i, align 4
  br label %throttle_work_update.exit

throttle_work_update.exit:                        ; preds = %if.then.i, %land.lhs.true.i.throttle_work_update.exit_crit_edge, %entry.throttle_work_update.exit_crit_edge
  %prepared_mappings = getelementptr i8, ptr %ws, i32 420
  %process_prepared_mapping = getelementptr i8, ptr %ws, i32 480
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %maps.i) #15
  %10 = getelementptr inbounds %struct.list_head, ptr %maps.i, i32 0, i32 1
  %11 = ptrtoint ptr %maps.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %maps.i, ptr %maps.i, align 4
  %12 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %maps.i, ptr %10, align 4
  %lock.i = getelementptr i8, ptr %ws, i32 360
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %13 = ptrtoint ptr %prepared_mappings to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %prepared_mappings, align 4
  %cmp.i.not.i.i = icmp eq ptr %14, %prepared_mappings
  br i1 %cmp.i.not.i.i, label %throttle_work_update.exit.list_splice_init.exit.i_crit_edge, label %if.then.i.i

throttle_work_update.exit.list_splice_init.exit.i_crit_edge: ; preds = %throttle_work_update.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice_init.exit.i

if.then.i.i:                                      ; preds = %throttle_work_update.exit
  call void @__sanitizer_cov_trace_pc() #17
  %15 = ptrtoint ptr %maps.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %maps.i, align 4
  %prev2.i.i.i = getelementptr i8, ptr %ws, i32 424
  %17 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %14, i32 0, i32 1
  %19 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %maps.i, ptr %prev3.i.i.i, align 4
  store ptr %14, ptr %maps.i, align 4
  %20 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %16, ptr %18, align 4
  %prev6.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %21 = ptrtoint ptr %prev6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %18, ptr %prev6.i.i.i, align 4
  %22 = ptrtoint ptr %prepared_mappings to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %prepared_mappings, ptr %prepared_mappings, align 4
  store ptr %prepared_mappings, ptr %prev2.i.i.i, align 4
  br label %list_splice_init.exit.i

list_splice_init.exit.i:                          ; preds = %if.then.i.i, %throttle_work_update.exit.list_splice_init.exit.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %23 = ptrtoint ptr %maps.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %maps.i, align 4
  %cmp.not17.i = icmp eq ptr %24, %maps.i
  br i1 %cmp.not17.i, label %list_splice_init.exit.i.process_prepared.exit_crit_edge, label %list_splice_init.exit.i.for.body.i_crit_edge

list_splice_init.exit.i.for.body.i_crit_edge:     ; preds = %list_splice_init.exit.i
  br label %for.body.i

list_splice_init.exit.i.process_prepared.exit_crit_edge: ; preds = %list_splice_init.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %list_splice_init.exit.i.for.body.i_crit_edge
  %m.018.i = phi ptr [ %tmp.0.i, %for.body.i.for.body.i_crit_edge ], [ %24, %list_splice_init.exit.i.for.body.i_crit_edge ]
  %25 = ptrtoint ptr %m.018.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %tmp.0.i = load ptr, ptr %m.018.i, align 8
  %26 = ptrtoint ptr %process_prepared_mapping to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %process_prepared_mapping, align 4
  call void %27(ptr noundef %m.018.i) #15
  %cmp.not.i = icmp eq ptr %tmp.0.i, %maps.i
  br i1 %cmp.not.i, label %for.body.i.process_prepared.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.body.i.process_prepared.exit_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit

process_prepared.exit:                            ; preds = %for.body.i.process_prepared.exit_crit_edge, %list_splice_init.exit.i.process_prepared.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %maps.i) #15
  %28 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %throttle_applied.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool.not.i24 = icmp eq i8 %29, 0
  br i1 %tobool.not.i24, label %land.lhs.true.i27, label %process_prepared.exit.throttle_work_update.exit29_crit_edge

process_prepared.exit.throttle_work_update.exit29_crit_edge: ; preds = %process_prepared.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit29

land.lhs.true.i27:                                ; preds = %process_prepared.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %30 = load volatile i32, ptr @jiffies, align 128
  %31 = ptrtoint ptr %threshold.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %32)
  %cmp.i26 = icmp ugt i32 %30, %32
  br i1 %cmp.i26, label %if.then.i28, label %land.lhs.true.i27.throttle_work_update.exit29_crit_edge

land.lhs.true.i27.throttle_work_update.exit29_crit_edge: ; preds = %land.lhs.true.i27
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit29

if.then.i28:                                      ; preds = %land.lhs.true.i27
  call void @__sanitizer_cov_trace_pc() #17
  call void @down_write(ptr noundef %throttle) #15
  %33 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 1, ptr %throttle_applied.i, align 4
  br label %throttle_work_update.exit29

throttle_work_update.exit29:                      ; preds = %if.then.i28, %land.lhs.true.i27.throttle_work_update.exit29_crit_edge, %process_prepared.exit.throttle_work_update.exit29_crit_edge
  %prepared_discards = getelementptr i8, ptr %ws, i32 428
  %process_prepared_discard = getelementptr i8, ptr %ws, i32 484
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %maps.i30) #15
  %34 = getelementptr inbounds %struct.list_head, ptr %maps.i30, i32 0, i32 1
  %35 = ptrtoint ptr %maps.i30 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %maps.i30, ptr %maps.i30, align 4
  %36 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %maps.i30, ptr %34, align 4
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %37 = ptrtoint ptr %prepared_discards to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %prepared_discards, align 4
  %cmp.i.not.i.i32 = icmp eq ptr %38, %prepared_discards
  br i1 %cmp.i.not.i.i32, label %throttle_work_update.exit29.list_splice_init.exit.i38_crit_edge, label %if.then.i.i36

throttle_work_update.exit29.list_splice_init.exit.i38_crit_edge: ; preds = %throttle_work_update.exit29
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice_init.exit.i38

if.then.i.i36:                                    ; preds = %throttle_work_update.exit29
  call void @__sanitizer_cov_trace_pc() #17
  %39 = ptrtoint ptr %maps.i30 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %maps.i30, align 4
  %prev2.i.i.i33 = getelementptr i8, ptr %ws, i32 432
  %41 = ptrtoint ptr %prev2.i.i.i33 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %prev2.i.i.i33, align 4
  %prev3.i.i.i34 = getelementptr inbounds %struct.list_head, ptr %38, i32 0, i32 1
  %43 = ptrtoint ptr %prev3.i.i.i34 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %maps.i30, ptr %prev3.i.i.i34, align 4
  store ptr %38, ptr %maps.i30, align 4
  %44 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %40, ptr %42, align 4
  %prev6.i.i.i35 = getelementptr inbounds %struct.list_head, ptr %40, i32 0, i32 1
  %45 = ptrtoint ptr %prev6.i.i.i35 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %42, ptr %prev6.i.i.i35, align 4
  %46 = ptrtoint ptr %prepared_discards to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %prepared_discards, ptr %prepared_discards, align 4
  store ptr %prepared_discards, ptr %prev2.i.i.i33, align 4
  br label %list_splice_init.exit.i38

list_splice_init.exit.i38:                        ; preds = %if.then.i.i36, %throttle_work_update.exit29.list_splice_init.exit.i38_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %47 = ptrtoint ptr %maps.i30 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %maps.i30, align 4
  %cmp.not17.i37 = icmp eq ptr %48, %maps.i30
  br i1 %cmp.not17.i37, label %list_splice_init.exit.i38.process_prepared.exit43_crit_edge, label %list_splice_init.exit.i38.for.body.i42_crit_edge

list_splice_init.exit.i38.for.body.i42_crit_edge: ; preds = %list_splice_init.exit.i38
  br label %for.body.i42

list_splice_init.exit.i38.process_prepared.exit43_crit_edge: ; preds = %list_splice_init.exit.i38
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit43

for.body.i42:                                     ; preds = %for.body.i42.for.body.i42_crit_edge, %list_splice_init.exit.i38.for.body.i42_crit_edge
  %m.018.i39 = phi ptr [ %tmp.0.i40, %for.body.i42.for.body.i42_crit_edge ], [ %48, %list_splice_init.exit.i38.for.body.i42_crit_edge ]
  %49 = ptrtoint ptr %m.018.i39 to i32
  call void @__asan_load4_noabort(i32 %49)
  %tmp.0.i40 = load ptr, ptr %m.018.i39, align 8
  %50 = ptrtoint ptr %process_prepared_discard to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %process_prepared_discard, align 4
  call void %51(ptr noundef %m.018.i39) #15
  %cmp.not.i41 = icmp eq ptr %tmp.0.i40, %maps.i30
  br i1 %cmp.not.i41, label %for.body.i42.process_prepared.exit43_crit_edge, label %for.body.i42.for.body.i42_crit_edge

for.body.i42.for.body.i42_crit_edge:              ; preds = %for.body.i42
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i42

for.body.i42.process_prepared.exit43_crit_edge:   ; preds = %for.body.i42
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit43

process_prepared.exit43:                          ; preds = %for.body.i42.process_prepared.exit43_crit_edge, %list_splice_init.exit.i38.process_prepared.exit43_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %maps.i30) #15
  %52 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %throttle_applied.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %tobool.not.i45 = icmp eq i8 %53, 0
  br i1 %tobool.not.i45, label %land.lhs.true.i48, label %process_prepared.exit43.throttle_work_update.exit50_crit_edge

process_prepared.exit43.throttle_work_update.exit50_crit_edge: ; preds = %process_prepared.exit43
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit50

land.lhs.true.i48:                                ; preds = %process_prepared.exit43
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %54 = load volatile i32, ptr @jiffies, align 128
  %55 = ptrtoint ptr %threshold.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %56)
  %cmp.i47 = icmp ugt i32 %54, %56
  br i1 %cmp.i47, label %if.then.i49, label %land.lhs.true.i48.throttle_work_update.exit50_crit_edge

land.lhs.true.i48.throttle_work_update.exit50_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit50

if.then.i49:                                      ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #17
  call void @down_write(ptr noundef %throttle) #15
  %57 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 1, ptr %throttle_applied.i, align 4
  br label %throttle_work_update.exit50

throttle_work_update.exit50:                      ; preds = %if.then.i49, %land.lhs.true.i48.throttle_work_update.exit50_crit_edge, %process_prepared.exit43.throttle_work_update.exit50_crit_edge
  %prepared_discards_pt2 = getelementptr i8, ptr %ws, i32 436
  %process_prepared_discard_pt2 = getelementptr i8, ptr %ws, i32 488
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %maps.i51) #15
  %58 = getelementptr inbounds %struct.list_head, ptr %maps.i51, i32 0, i32 1
  %59 = ptrtoint ptr %maps.i51 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %maps.i51, ptr %maps.i51, align 4
  %60 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %maps.i51, ptr %58, align 4
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %61 = ptrtoint ptr %prepared_discards_pt2 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile ptr, ptr %prepared_discards_pt2, align 4
  %cmp.i.not.i.i53 = icmp eq ptr %62, %prepared_discards_pt2
  br i1 %cmp.i.not.i.i53, label %throttle_work_update.exit50.list_splice_init.exit.i59_crit_edge, label %if.then.i.i57

throttle_work_update.exit50.list_splice_init.exit.i59_crit_edge: ; preds = %throttle_work_update.exit50
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice_init.exit.i59

if.then.i.i57:                                    ; preds = %throttle_work_update.exit50
  call void @__sanitizer_cov_trace_pc() #17
  %63 = ptrtoint ptr %maps.i51 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %maps.i51, align 4
  %prev2.i.i.i54 = getelementptr i8, ptr %ws, i32 440
  %65 = ptrtoint ptr %prev2.i.i.i54 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %prev2.i.i.i54, align 4
  %prev3.i.i.i55 = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %67 = ptrtoint ptr %prev3.i.i.i55 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %maps.i51, ptr %prev3.i.i.i55, align 4
  store ptr %62, ptr %maps.i51, align 4
  %68 = ptrtoint ptr %66 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %64, ptr %66, align 4
  %prev6.i.i.i56 = getelementptr inbounds %struct.list_head, ptr %64, i32 0, i32 1
  %69 = ptrtoint ptr %prev6.i.i.i56 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %66, ptr %prev6.i.i.i56, align 4
  %70 = ptrtoint ptr %prepared_discards_pt2 to i32
  call void @__asan_store4_noabort(i32 %70)
  store volatile ptr %prepared_discards_pt2, ptr %prepared_discards_pt2, align 4
  store ptr %prepared_discards_pt2, ptr %prev2.i.i.i54, align 4
  br label %list_splice_init.exit.i59

list_splice_init.exit.i59:                        ; preds = %if.then.i.i57, %throttle_work_update.exit50.list_splice_init.exit.i59_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %71 = ptrtoint ptr %maps.i51 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %maps.i51, align 4
  %cmp.not17.i58 = icmp eq ptr %72, %maps.i51
  br i1 %cmp.not17.i58, label %list_splice_init.exit.i59.process_prepared.exit64_crit_edge, label %list_splice_init.exit.i59.for.body.i63_crit_edge

list_splice_init.exit.i59.for.body.i63_crit_edge: ; preds = %list_splice_init.exit.i59
  br label %for.body.i63

list_splice_init.exit.i59.process_prepared.exit64_crit_edge: ; preds = %list_splice_init.exit.i59
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit64

for.body.i63:                                     ; preds = %for.body.i63.for.body.i63_crit_edge, %list_splice_init.exit.i59.for.body.i63_crit_edge
  %m.018.i60 = phi ptr [ %tmp.0.i61, %for.body.i63.for.body.i63_crit_edge ], [ %72, %list_splice_init.exit.i59.for.body.i63_crit_edge ]
  %73 = ptrtoint ptr %m.018.i60 to i32
  call void @__asan_load4_noabort(i32 %73)
  %tmp.0.i61 = load ptr, ptr %m.018.i60, align 8
  %74 = ptrtoint ptr %process_prepared_discard_pt2 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %process_prepared_discard_pt2, align 4
  call void %75(ptr noundef %m.018.i60) #15
  %cmp.not.i62 = icmp eq ptr %tmp.0.i61, %maps.i51
  br i1 %cmp.not.i62, label %for.body.i63.process_prepared.exit64_crit_edge, label %for.body.i63.for.body.i63_crit_edge

for.body.i63.for.body.i63_crit_edge:              ; preds = %for.body.i63
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i63

for.body.i63.process_prepared.exit64_crit_edge:   ; preds = %for.body.i63
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_prepared.exit64

process_prepared.exit64:                          ; preds = %for.body.i63.process_prepared.exit64_crit_edge, %list_splice_init.exit.i59.process_prepared.exit64_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %maps.i51) #15
  %76 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %throttle_applied.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %tobool.not.i66 = icmp eq i8 %77, 0
  br i1 %tobool.not.i66, label %land.lhs.true.i69, label %process_prepared.exit64.throttle_work_update.exit71_crit_edge

process_prepared.exit64.throttle_work_update.exit71_crit_edge: ; preds = %process_prepared.exit64
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit71

land.lhs.true.i69:                                ; preds = %process_prepared.exit64
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %78 = load volatile i32, ptr @jiffies, align 128
  %79 = ptrtoint ptr %threshold.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %threshold.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %78, i32 %80)
  %cmp.i68 = icmp ugt i32 %78, %80
  br i1 %cmp.i68, label %if.then.i70, label %land.lhs.true.i69.throttle_work_update.exit71_crit_edge

land.lhs.true.i69.throttle_work_update.exit71_crit_edge: ; preds = %land.lhs.true.i69
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit71

if.then.i70:                                      ; preds = %land.lhs.true.i69
  call void @__sanitizer_cov_trace_pc() #17
  call void @down_write(ptr noundef %throttle) #15
  %81 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 1, ptr %throttle_applied.i, align 4
  br label %throttle_work_update.exit71

throttle_work_update.exit71:                      ; preds = %if.then.i70, %land.lhs.true.i69.throttle_work_update.exit71_crit_edge, %process_prepared.exit64.throttle_work_update.exit71_crit_edge
  %call.i = call fastcc ptr @get_first_thin(ptr noundef %add.ptr) #15
  %tobool.not142.i = icmp eq ptr %call.i, null
  br i1 %tobool.not142.i, label %throttle_work_update.exit71.while.end.i_crit_edge, label %while.body.lr.ph.i

throttle_work_update.exit71.while.end.i_crit_edge: ; preds = %throttle_work_update.exit71
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.body.lr.ph.i:                               ; preds = %throttle_work_update.exit71
  %82 = getelementptr inbounds %struct.list_head, ptr %cells.i.i, i32 0, i32 1
  br label %while.body.i

while.body.i:                                     ; preds = %process_thin_deferred_bios.exit.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %tc.0143.i = phi ptr [ %call.i, %while.body.lr.ph.i ], [ %call1.i, %process_thin_deferred_bios.exit.i.while.body.i_crit_edge ]
  %pool1.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 5
  %83 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %pool1.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cells.i.i) #15
  %85 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store volatile ptr %cells.i.i, ptr %cells.i.i, align 4
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %cells.i.i, ptr %82, align 4
  %lock.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 9
  call void @_raw_spin_lock_irq(ptr noundef %lock.i.i) #15
  %deferred_cells.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 10
  %87 = ptrtoint ptr %deferred_cells.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile ptr, ptr %deferred_cells.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %88, %deferred_cells.i.i
  br i1 %cmp.i.not.i.i.i, label %while.body.i.list_splice_init.exit.i.i_crit_edge, label %if.then.i.i.i

while.body.i.list_splice_init.exit.i.i_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice_init.exit.i.i

if.then.i.i.i:                                    ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  %89 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %cells.i.i, align 4
  %prev2.i.i.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 10, i32 1
  %91 = ptrtoint ptr %prev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %prev2.i.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %88, i32 0, i32 1
  %93 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %cells.i.i, ptr %prev3.i.i.i.i, align 4
  store ptr %88, ptr %cells.i.i, align 4
  %94 = ptrtoint ptr %92 to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %90, ptr %92, align 4
  %prev6.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %90, i32 0, i32 1
  %95 = ptrtoint ptr %prev6.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %92, ptr %prev6.i.i.i.i, align 4
  %96 = ptrtoint ptr %deferred_cells.i.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile ptr %deferred_cells.i.i, ptr %deferred_cells.i.i, align 4
  store ptr %deferred_cells.i.i, ptr %prev2.i.i.i.i, align 4
  br label %list_splice_init.exit.i.i

list_splice_init.exit.i.i:                        ; preds = %if.then.i.i.i, %while.body.i.list_splice_init.exit.i.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  %97 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load volatile ptr, ptr %cells.i.i, align 4
  %cmp.i.not.i.i72 = icmp eq ptr %98, %cells.i.i
  br i1 %cmp.i.not.i.i72, label %list_splice_init.exit.i.i.process_thin_deferred_cells.exit.i_crit_edge, label %do.body.preheader.i.i

list_splice_init.exit.i.i.process_thin_deferred_cells.exit.i_crit_edge: ; preds = %list_splice_init.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_thin_deferred_cells.exit.i

do.body.preheader.i.i:                            ; preds = %list_splice_init.exit.i.i
  %cell_sort_array.i.i = getelementptr inbounds %struct.pool, ptr %84, i32 0, i32 37
  %next_mapping.i.i.i = getelementptr inbounds %struct.pool, ptr %84, i32 0, i32 29
  %mapping_pool.i.i.i = getelementptr inbounds %struct.pool, ptr %84, i32 0, i32 38
  %process_cell.i.i = getelementptr inbounds %struct.pool, ptr %84, i32 0, i32 32
  %process_discard_cell.i.i = getelementptr inbounds %struct.pool, ptr %84, i32 0, i32 33
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond37.i.i.do.body.i.i_crit_edge, %do.body.preheader.i.i
  %99 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %pool1.i.i, align 8
  %101 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %cells.i.i, align 4
  %cmp.not25.i.i.i = icmp eq ptr %102, %cells.i.i
  %cell_sort_array14.i98.i.i = getelementptr inbounds %struct.pool, ptr %100, i32 0, i32 37
  br i1 %cmp.not25.i.i.i, label %sort_cells.exit.thread.i.i, label %do.body.i.i.if.end.i.i.i_crit_edge

do.body.i.i.if.end.i.i.i_crit_edge:               ; preds = %do.body.i.i
  br label %if.end.i.i.i

sort_cells.exit.thread.i.i:                       ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %103 = ptrtoint ptr %cell_sort_array14.i98.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %cell_sort_array14.i98.i.i, align 8
  call void @sort(ptr noundef %104, i32 noundef 0, i32 noundef 4, ptr noundef nonnull @cmp_cells, ptr noundef null) #15
  br label %do.cond37.i.i

if.end.i.i.i:                                     ; preds = %list_del.exit.i.i.i.if.end.i.i.i_crit_edge, %do.body.i.i.if.end.i.i.i_crit_edge
  %count.028.i.i.i = phi i32 [ %inc.i.i.i, %list_del.exit.i.i.i.if.end.i.i.i_crit_edge ], [ 0, %do.body.i.i.if.end.i.i.i_crit_edge ]
  %cell.026.i.i.i = phi ptr [ %tmp.029.i.i.i, %list_del.exit.i.i.i.if.end.i.i.i_crit_edge ], [ %102, %do.body.i.i.if.end.i.i.i_crit_edge ]
  %105 = ptrtoint ptr %cell.026.i.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %tmp.029.i.i.i = load ptr, ptr %cell.026.i.i.i, align 8
  %106 = ptrtoint ptr %cell_sort_array14.i98.i.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %cell_sort_array14.i98.i.i, align 8
  %inc.i.i.i = add nuw nsw i32 %count.028.i.i.i, 1
  %arrayidx.i.i.i = getelementptr ptr, ptr %107, i32 %count.028.i.i.i
  %108 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store ptr %cell.026.i.i.i, ptr %arrayidx.i.i.i, align 4
  %call.i.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %cell.026.i.i.i) #15
  br i1 %call.i.i.i.i.i, label %if.end.i.i.i.i.i, label %if.end.i.i.i.list_del.exit.i.i.i_crit_edge

if.end.i.i.i.list_del.exit.i.i.i_crit_edge:       ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit.i.i.i

if.end.i.i.i.i.i:                                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %cell.026.i.i.i, i32 0, i32 1
  %109 = ptrtoint ptr %prev.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %prev.i.i.i.i.i, align 4
  %111 = ptrtoint ptr %cell.026.i.i.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %cell.026.i.i.i, align 4
  %prev1.i.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %112, i32 0, i32 1
  %113 = ptrtoint ptr %prev1.i.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %110, ptr %prev1.i.i.i.i.i.i, align 4
  %114 = ptrtoint ptr %110 to i32
  call void @__asan_store4_noabort(i32 %114)
  store volatile ptr %112, ptr %110, align 4
  br label %list_del.exit.i.i.i

list_del.exit.i.i.i:                              ; preds = %if.end.i.i.i.i.i, %if.end.i.i.i.list_del.exit.i.i.i_crit_edge
  %115 = ptrtoint ptr %cell.026.i.i.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store ptr inttoptr (i32 256 to ptr), ptr %cell.026.i.i.i, align 4
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %cell.026.i.i.i, i32 0, i32 1
  %116 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %tmp.029.i.i.i, %cells.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8190, i32 %count.028.i.i.i)
  %cmp7.i.i.i = icmp ugt i32 %count.028.i.i.i, 8190
  %or.cond.i.i.i = select i1 %cmp.not.i.i.i, i1 true, i1 %cmp7.i.i.i
  br i1 %or.cond.i.i.i, label %for.body.preheader.i.i, label %list_del.exit.i.i.i.if.end.i.i.i_crit_edge

list_del.exit.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %list_del.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i.i

for.body.preheader.i.i:                           ; preds = %list_del.exit.i.i.i
  %117 = ptrtoint ptr %cell_sort_array14.i98.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %cell_sort_array14.i98.i.i, align 8
  call void @sort(ptr noundef %118, i32 noundef %inc.i.i.i, i32 noundef 4, ptr noundef nonnull @cmp_cells, ptr noundef null) #15
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end29.i.i.for.body.i.i_crit_edge, %for.body.preheader.i.i
  %i.088.i.i = phi i32 [ %inc35.i.i, %if.end29.i.i.for.body.i.i_crit_edge ], [ 0, %for.body.preheader.i.i ]
  %119 = ptrtoint ptr %cell_sort_array.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %cell_sort_array.i.i, align 8
  %arrayidx.i.i = getelementptr ptr, ptr %120, i32 %i.088.i.i
  %121 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %arrayidx.i.i, align 4
  %holder.i.i = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %122, i32 0, i32 3
  %123 = ptrtoint ptr %holder.i.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %holder.i.i, align 8
  %tobool6.not.i.i = icmp eq ptr %124, null
  br i1 %tobool6.not.i.i, label %do.body11.i.i, label %do.end17.i.i, !prof !508

do.body11.i.i:                                    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2280, 0\0A.popsection", ""() #15, !srcloc !514
  unreachable

do.end17.i.i:                                     ; preds = %for.body.i.i
  %125 = ptrtoint ptr %next_mapping.i.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %next_mapping.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %126, null
  br i1 %tobool.not.i.i.i, label %if.end.i70.i.i, label %do.end17.i.i.if.end29.i.i_crit_edge

do.end17.i.i.if.end29.i.i_crit_edge:              ; preds = %do.end17.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29.i.i

if.end.i70.i.i:                                   ; preds = %do.end17.i.i
  %call.i.i.i = call noalias ptr @mempool_alloc(ptr noundef %mapping_pool.i.i.i, i32 noundef 2592) #15
  %127 = ptrtoint ptr %next_mapping.i.i.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store ptr %call.i.i.i, ptr %next_mapping.i.i.i, align 8
  %tobool3.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool3.not.i.i.i, label %for.cond21.preheader.i.i, label %if.end.i70.i.i.if.end29.i.i_crit_edge

if.end.i70.i.i.if.end29.i.i_crit_edge:            ; preds = %if.end.i70.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29.i.i

for.cond21.preheader.i.i:                         ; preds = %if.end.i70.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.088.i.i, i32 %count.028.i.i.i)
  %cmp2290.not.i.i = icmp ugt i32 %i.088.i.i, %count.028.i.i.i
  br i1 %cmp2290.not.i.i, label %for.cond21.preheader.i.i.for.end.i.i_crit_edge, label %for.cond21.preheader.i.i.for.body23.i.i_crit_edge

for.cond21.preheader.i.i.for.body23.i.i_crit_edge: ; preds = %for.cond21.preheader.i.i
  br label %for.body23.i.i

for.cond21.preheader.i.i.for.end.i.i_crit_edge:   ; preds = %for.cond21.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.body23.i.i:                                   ; preds = %list_add.exit.i.i.for.body23.i.i_crit_edge, %for.cond21.preheader.i.i.for.body23.i.i_crit_edge
  %j.091.i.i = phi i32 [ %inc.i.i, %list_add.exit.i.i.for.body23.i.i_crit_edge ], [ %i.088.i.i, %for.cond21.preheader.i.i.for.body23.i.i_crit_edge ]
  %128 = ptrtoint ptr %cell_sort_array.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %cell_sort_array.i.i, align 8
  %arrayidx25.i.i = getelementptr ptr, ptr %129, i32 %j.091.i.i
  %130 = ptrtoint ptr %arrayidx25.i.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %arrayidx25.i.i, align 4
  %132 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %cells.i.i, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %131, ptr noundef nonnull %cells.i.i, ptr noundef %133) #15
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.body23.i.i.list_add.exit.i.i_crit_edge

for.body23.i.i.list_add.exit.i.i_crit_edge:       ; preds = %for.body23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store ptr %131, ptr %prev1.i.i.i.i, align 4
  %135 = ptrtoint ptr %131 to i32
  call void @__asan_store4_noabort(i32 %135)
  store ptr %133, ptr %131, align 4
  %prev3.i.i71.i.i = getelementptr inbounds %struct.list_head, ptr %131, i32 0, i32 1
  %136 = ptrtoint ptr %prev3.i.i71.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store ptr %cells.i.i, ptr %prev3.i.i71.i.i, align 4
  %137 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_store4_noabort(i32 %137)
  store volatile ptr %131, ptr %cells.i.i, align 4
  br label %list_add.exit.i.i

list_add.exit.i.i:                                ; preds = %if.end.i.i.i.i, %for.body23.i.i.list_add.exit.i.i_crit_edge
  %inc.i.i = add nuw nsw i32 %j.091.i.i, 1
  %exitcond96.not.i.i = icmp eq i32 %j.091.i.i, %count.028.i.i.i
  br i1 %exitcond96.not.i.i, label %list_add.exit.i.i.for.end.i.i_crit_edge, label %list_add.exit.i.i.for.body23.i.i_crit_edge

list_add.exit.i.i.for.body23.i.i_crit_edge:       ; preds = %list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body23.i.i

list_add.exit.i.i.for.end.i.i_crit_edge:          ; preds = %list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %list_add.exit.i.i.for.end.i.i_crit_edge, %for.cond21.preheader.i.i.for.end.i.i_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef %lock.i.i) #15
  %138 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load volatile ptr, ptr %cells.i.i, align 4
  %cmp.i.not.i72.i.i = icmp eq ptr %139, %cells.i.i
  br i1 %cmp.i.not.i72.i.i, label %for.end.i.i.list_splice.exit.i.i_crit_edge, label %if.then.i76.i.i

for.end.i.i.list_splice.exit.i.i_crit_edge:       ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_splice.exit.i.i

if.then.i76.i.i:                                  ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %140 = ptrtoint ptr %deferred_cells.i.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %deferred_cells.i.i, align 4
  %142 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %82, align 4
  %prev3.i.i74.i.i = getelementptr inbounds %struct.list_head, ptr %139, i32 0, i32 1
  %144 = ptrtoint ptr %prev3.i.i74.i.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store ptr %deferred_cells.i.i, ptr %prev3.i.i74.i.i, align 4
  store ptr %139, ptr %deferred_cells.i.i, align 4
  %145 = ptrtoint ptr %143 to i32
  call void @__asan_store4_noabort(i32 %145)
  store ptr %141, ptr %143, align 4
  %prev6.i.i75.i.i = getelementptr inbounds %struct.list_head, ptr %141, i32 0, i32 1
  %146 = ptrtoint ptr %prev6.i.i75.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store ptr %143, ptr %prev6.i.i75.i.i, align 4
  br label %list_splice.exit.i.i

list_splice.exit.i.i:                             ; preds = %if.then.i76.i.i, %for.end.i.i.list_splice.exit.i.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  br label %process_thin_deferred_cells.exit.i

if.end29.i.i:                                     ; preds = %if.end.i70.i.i.if.end29.i.i_crit_edge, %do.end17.i.i.if.end29.i.i_crit_edge
  %147 = ptrtoint ptr %holder.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %holder.i.i, align 8
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %148, i32 0, i32 2
  %149 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %bi_opf.i.i, align 8
  %and.i.i = and i32 %150, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i.i)
  %cmp31.i.i = icmp eq i32 %and.i.i, 3
  %spec.select.i = select i1 %cmp31.i.i, ptr %process_discard_cell.i.i, ptr %process_cell.i.i
  %151 = ptrtoint ptr %spec.select.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %.sink.i.i = load ptr, ptr %spec.select.i, align 4
  call void %.sink.i.i(ptr noundef nonnull %tc.0143.i, ptr noundef %122) #15
  %inc35.i.i = add nuw nsw i32 %i.088.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %i.088.i.i, %count.028.i.i.i
  br i1 %exitcond.not.i.i, label %if.end29.i.i.do.cond37.i.i_crit_edge, label %if.end29.i.i.for.body.i.i_crit_edge

if.end29.i.i.for.body.i.i_crit_edge:              ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i

if.end29.i.i.do.cond37.i.i_crit_edge:             ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.cond37.i.i

do.cond37.i.i:                                    ; preds = %if.end29.i.i.do.cond37.i.i_crit_edge, %sort_cells.exit.thread.i.i
  %152 = ptrtoint ptr %cells.i.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load volatile ptr, ptr %cells.i.i, align 4
  %cmp.i78.not.i.i = icmp eq ptr %153, %cells.i.i
  br i1 %cmp.i78.not.i.i, label %do.cond37.i.i.process_thin_deferred_cells.exit.i_crit_edge, label %do.cond37.i.i.do.body.i.i_crit_edge

do.cond37.i.i.do.body.i.i_crit_edge:              ; preds = %do.cond37.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.body.i.i

do.cond37.i.i.process_thin_deferred_cells.exit.i_crit_edge: ; preds = %do.cond37.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_thin_deferred_cells.exit.i

process_thin_deferred_cells.exit.i:               ; preds = %do.cond37.i.i.process_thin_deferred_cells.exit.i_crit_edge, %list_splice.exit.i.i, %list_splice_init.exit.i.i.process_thin_deferred_cells.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cells.i.i) #15
  %154 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load ptr, ptr %pool1.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %plug.i.i) #15
  %156 = call ptr @memset(ptr %plug.i.i, i32 255, i32 24)
  %requeue_mode.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 8
  %157 = ptrtoint ptr %requeue_mode.i.i to i32
  call void @__asan_load1_noabort(i32 %157)
  %bf.load.i.i = load i8, ptr %requeue_mode.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %bf.cast.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %bf.cast.not.i.i, label %if.end.i.i, label %if.then.i.i73

if.then.i.i73:                                    ; preds = %process_thin_deferred_cells.exit.i
  %deferred_bio_list.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 11
  call void @_raw_spin_lock_irq(ptr noundef %lock.i.i) #15
  %158 = ptrtoint ptr %deferred_bio_list.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %deferred_bio_list.i.i, align 4
  %tail.i2.i.i.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 11, i32 1
  %160 = ptrtoint ptr %tail.i2.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store ptr null, ptr %tail.i2.i.i.i.i, align 4
  store ptr null, ptr %deferred_bio_list.i.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  %tobool.not.i2.i.i.i.i = icmp eq ptr %159, null
  br i1 %tobool.not.i2.i.i.i.i, label %if.then.i.i73.process_thin_deferred_bios.exit.i_crit_edge, label %if.then.i.i73.if.then.i.i.i.i.i_crit_edge

if.then.i.i73.if.then.i.i.i.i.i_crit_edge:        ; preds = %if.then.i.i73
  br label %if.then.i.i.i.i.i

if.then.i.i73.process_thin_deferred_bios.exit.i_crit_edge: ; preds = %if.then.i.i73
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_thin_deferred_bios.exit.i

if.then.i.i.i.i.i:                                ; preds = %if.then.i.i.i.i.i.if.then.i.i.i.i.i_crit_edge, %if.then.i.i73.if.then.i.i.i.i.i_crit_edge
  %161 = phi ptr [ %163, %if.then.i.i.i.i.i.if.then.i.i.i.i.i_crit_edge ], [ %159, %if.then.i.i73.if.then.i.i.i.i.i_crit_edge ]
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %161, align 8
  %tobool4.not.i.i.i.i.i = icmp eq ptr %163, null
  store ptr null, ptr %161, align 8
  %bi_status.i.i.i.i = getelementptr inbounds %struct.bio, ptr %161, i32 0, i32 6
  %164 = ptrtoint ptr %bi_status.i.i.i.i to i32
  call void @__asan_store1_noabort(i32 %164)
  store i8 11, ptr %bi_status.i.i.i.i, align 2
  call void @bio_endio(ptr noundef nonnull %161) #15
  br i1 %tobool4.not.i.i.i.i.i, label %if.then.i.i.i.i.i.process_thin_deferred_bios.exit.i_crit_edge, label %if.then.i.i.i.i.i.if.then.i.i.i.i.i_crit_edge

if.then.i.i.i.i.i.if.then.i.i.i.i.i_crit_edge:    ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i.i.i

if.then.i.i.i.i.i.process_thin_deferred_bios.exit.i_crit_edge: ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_thin_deferred_bios.exit.i

if.end.i.i:                                       ; preds = %process_thin_deferred_cells.exit.i
  call void @_raw_spin_lock_irq(ptr noundef %lock.i.i) #15
  %deferred_bio_list2.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 11
  %165 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load ptr, ptr %deferred_bio_list2.i.i, align 4
  %cmp.i.i.i = icmp eq ptr %166, null
  br i1 %cmp.i.i.i, label %if.then3.i.i, label %if.end5.i.i

if.then3.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  br label %process_thin_deferred_bios.exit.i

if.end5.i.i:                                      ; preds = %if.end.i.i
  %tail.i6.i.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 11, i32 1
  %167 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr null, ptr %tail.i6.i.i.i, align 4
  %168 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_store4_noabort(i32 %168)
  store ptr null, ptr %deferred_bio_list2.i.i, align 4
  %sort_bio_list.i.i.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.0143.i, i32 0, i32 13
  br label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %__thin_bio_rb_add.exit.i.i.i.if.then.i.i.i.i_crit_edge, %if.end5.i.i
  %bios.sroa.0.219.i.i.i = phi ptr [ %166, %if.end5.i.i ], [ %170, %__thin_bio_rb_add.exit.i.i.i.if.then.i.i.i.i_crit_edge ]
  %169 = ptrtoint ptr %bios.sroa.0.219.i.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %bios.sroa.0.219.i.i.i, align 8
  store ptr null, ptr %bios.sroa.0.219.i.i.i, align 8
  %bi_iter.i.i.i.i = getelementptr inbounds %struct.bio, ptr %bios.sroa.0.219.i.i.i, i32 0, i32 8
  %171 = ptrtoint ptr %bi_iter.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %171)
  %172 = load i64, ptr %bi_iter.i.i.i.i, align 8
  %173 = ptrtoint ptr %sort_bio_list.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %sort_bio_list.i.i.i.i, align 4
  %tobool.not17.i.i.i.i = icmp eq ptr %174, null
  br i1 %tobool.not17.i.i.i.i, label %if.then.i.i.i.i.__thin_bio_rb_add.exit.i.i.i_crit_edge, label %if.then.i.i.i.i.while.body.i.i.i.i_crit_edge

if.then.i.i.i.i.while.body.i.i.i.i_crit_edge:     ; preds = %if.then.i.i.i.i
  br label %while.body.i.i.i.i

if.then.i.i.i.i.__thin_bio_rb_add.exit.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__thin_bio_rb_add.exit.i.i.i

while.body.i.i.i.i:                               ; preds = %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge, %if.then.i.i.i.i.while.body.i.i.i.i_crit_edge
  %175 = phi ptr [ %181, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %174, %if.then.i.i.i.i.while.body.i.i.i.i_crit_edge ]
  %rbp.018.i.i.i.i = phi ptr [ %rbp.1.i.i.i.i, %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge ], [ %sort_bio_list.i.i.i.i, %if.then.i.i.i.i.while.body.i.i.i.i_crit_edge ]
  %add.ptr.i.i.i.i = getelementptr i8, ptr %175, i32 -16
  %call.i.i.i59.i = call ptr @dm_bio_from_per_bio_data(ptr noundef %add.ptr.i.i.i.i, i32 noundef 32) #15
  %bi_iter2.i.i.i.i = getelementptr inbounds %struct.bio, ptr %call.i.i.i59.i, i32 0, i32 8
  %176 = ptrtoint ptr %bi_iter2.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %176)
  %177 = load i64, ptr %bi_iter2.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %172, i64 %177)
  %cmp.i.i.i.i = icmp ult i64 %172, %177
  %178 = ptrtoint ptr %rbp.018.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %rbp.018.i.i.i.i, align 4
  %rb_left.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %179, i32 0, i32 2
  %rb_right.i.i.i.i = getelementptr inbounds %struct.rb_node, ptr %179, i32 0, i32 1
  %rbp.1.i.i.i.i = select i1 %cmp.i.i.i.i, ptr %rb_left.i.i.i.i, ptr %rb_right.i.i.i.i
  %180 = ptrtoint ptr %rbp.1.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %rbp.1.i.i.i.i, align 4
  %tobool.not.i11.i.i.i = icmp eq ptr %181, null
  br i1 %tobool.not.i11.i.i.i, label %while.cond.while.end_crit_edge.i.i.i.i, label %while.body.i.i.i.i.while.body.i.i.i.i_crit_edge

while.body.i.i.i.i.while.body.i.i.i.i_crit_edge:  ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i.i.i.i

while.cond.while.end_crit_edge.i.i.i.i:           ; preds = %while.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %phi.cast.le.i.i.i.i = ptrtoint ptr %175 to i32
  br label %__thin_bio_rb_add.exit.i.i.i

__thin_bio_rb_add.exit.i.i.i:                     ; preds = %while.cond.while.end_crit_edge.i.i.i.i, %if.then.i.i.i.i.__thin_bio_rb_add.exit.i.i.i_crit_edge
  %parent.0.lcssa.i.i.i.i = phi i32 [ %phi.cast.le.i.i.i.i, %while.cond.while.end_crit_edge.i.i.i.i ], [ 0, %if.then.i.i.i.i.__thin_bio_rb_add.exit.i.i.i_crit_edge ]
  %rbp.0.lcssa.i.i.i.i = phi ptr [ %rbp.1.i.i.i.i, %while.cond.while.end_crit_edge.i.i.i.i ], [ %sort_bio_list.i.i.i.i, %if.then.i.i.i.i.__thin_bio_rb_add.exit.i.i.i_crit_edge ]
  %call4.i.i.i.i = call ptr @dm_per_bio_data(ptr noundef nonnull %bios.sroa.0.219.i.i.i, i32 noundef 32) #15
  %rb_node5.i.i.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call4.i.i.i.i, i32 0, i32 4
  %182 = ptrtoint ptr %rb_node5.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %182)
  store i32 %parent.0.lcssa.i.i.i.i, ptr %rb_node5.i.i.i.i, align 4
  %rb_right.i.i.i.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call4.i.i.i.i, i32 0, i32 4, i32 1
  %183 = ptrtoint ptr %rb_right.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr null, ptr %rb_right.i.i.i.i.i, align 4
  %rb_left.i.i.i.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call4.i.i.i.i, i32 0, i32 4, i32 2
  %184 = ptrtoint ptr %rb_left.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %184)
  store ptr null, ptr %rb_left.i.i.i.i.i, align 4
  %185 = ptrtoint ptr %rbp.0.lcssa.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %185)
  store ptr %rb_node5.i.i.i.i, ptr %rbp.0.lcssa.i.i.i.i, align 4
  call void @rb_insert_color(ptr noundef %rb_node5.i.i.i.i, ptr noundef %sort_bio_list.i.i.i.i) #15
  %tobool.not.i7.i.i.i = icmp eq ptr %170, null
  br i1 %tobool.not.i7.i.i.i, label %while.end.i.i.i, label %__thin_bio_rb_add.exit.i.i.i.if.then.i.i.i.i_crit_edge

__thin_bio_rb_add.exit.i.i.i.if.then.i.i.i.i_crit_edge: ; preds = %__thin_bio_rb_add.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i.i

while.end.i.i.i:                                  ; preds = %__thin_bio_rb_add.exit.i.i.i
  %call.i13.i.i.i = call ptr @rb_first(ptr noundef %sort_bio_list.i.i.i.i) #15
  %tobool.not38.i.i.i.i = icmp eq ptr %call.i13.i.i.i, null
  br i1 %tobool.not38.i.i.i.i, label %while.end.i.i.i.for.end.i.i.i.i_crit_edge, label %while.end.i.i.i.for.body.i.i.i.i_crit_edge

while.end.i.i.i.for.body.i.i.i.i_crit_edge:       ; preds = %while.end.i.i.i
  br label %for.body.i.i.i.i

while.end.i.i.i.for.end.i.i.i.i_crit_edge:        ; preds = %while.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %bio_list_add.exit.i.i.i.i.for.body.i.i.i.i_crit_edge, %while.end.i.i.i.for.body.i.i.i.i_crit_edge
  %node.039.i.i.i.i = phi ptr [ %call3.i.i.i.i, %bio_list_add.exit.i.i.i.i.for.body.i.i.i.i_crit_edge ], [ %call.i13.i.i.i, %while.end.i.i.i.for.body.i.i.i.i_crit_edge ]
  %add.ptr.i14.i.i.i = getelementptr i8, ptr %node.039.i.i.i.i, i32 -16
  %call1.i.i.i.i = call ptr @dm_bio_from_per_bio_data(ptr noundef %add.ptr.i14.i.i.i, i32 noundef 32) #15
  %186 = ptrtoint ptr %call1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %186)
  store ptr null, ptr %call1.i.i.i.i, align 8
  %187 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %tail.i6.i.i.i, align 4
  %tobool.not.i.i.i.i.i = icmp eq ptr %188, null
  br i1 %tobool.not.i.i.i.i.i, label %if.else.i.i.i.i.i, label %if.then.i.i.i52.i.i

if.then.i.i.i52.i.i:                              ; preds = %for.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %189 = ptrtoint ptr %188 to i32
  call void @__asan_store4_noabort(i32 %189)
  store ptr %call1.i.i.i.i, ptr %188, align 8
  br label %bio_list_add.exit.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %for.body.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %190 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store ptr %call1.i.i.i.i, ptr %deferred_bio_list2.i.i, align 4
  br label %bio_list_add.exit.i.i.i.i

bio_list_add.exit.i.i.i.i:                        ; preds = %if.else.i.i.i.i.i, %if.then.i.i.i52.i.i
  %191 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %191)
  store ptr %call1.i.i.i.i, ptr %tail.i6.i.i.i, align 4
  call void @rb_erase(ptr noundef nonnull %node.039.i.i.i.i, ptr noundef %sort_bio_list.i.i.i.i) #15
  %call3.i.i.i.i = call ptr @rb_next(ptr noundef nonnull %node.039.i.i.i.i) #15
  %tobool.not.i15.i.i.i = icmp eq ptr %call3.i.i.i.i, null
  br i1 %tobool.not.i15.i.i.i, label %bio_list_add.exit.i.i.i.i.for.end.i.i.i.i_crit_edge, label %bio_list_add.exit.i.i.i.i.for.body.i.i.i.i_crit_edge

bio_list_add.exit.i.i.i.i.for.body.i.i.i.i_crit_edge: ; preds = %bio_list_add.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i.i.i.i

bio_list_add.exit.i.i.i.i.for.end.i.i.i.i_crit_edge: ; preds = %bio_list_add.exit.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i.i.i.i

for.end.i.i.i.i:                                  ; preds = %bio_list_add.exit.i.i.i.i.for.end.i.i.i.i_crit_edge, %while.end.i.i.i.for.end.i.i.i.i_crit_edge
  %192 = ptrtoint ptr %sort_bio_list.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load volatile ptr, ptr %sort_bio_list.i.i.i.i, align 4
  %cmp.not.i.i.i.i = icmp eq ptr %193, null
  br i1 %cmp.not.i.i.i.i, label %for.end.i.i.i.i.__sort_thin_deferred_bios.exit.i.i_crit_edge, label %do.end18.i.i.i.i, !prof !496

for.end.i.i.i.i.__sort_thin_deferred_bios.exit.i.i_crit_edge: ; preds = %for.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %__sort_thin_deferred_bios.exit.i.i

do.end18.i.i.i.i:                                 ; preds = %for.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 2142, i32 noundef 9, ptr noundef null) #15
  br label %__sort_thin_deferred_bios.exit.i.i

__sort_thin_deferred_bios.exit.i.i:               ; preds = %do.end18.i.i.i.i, %for.end.i.i.i.i.__sort_thin_deferred_bios.exit.i.i_crit_edge
  %194 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %deferred_bio_list2.i.i, align 4
  %tobool.not.i.i60.i = icmp eq ptr %195, null
  br i1 %tobool.not.i.i60.i, label %__sort_thin_deferred_bios.exit.i.i.bio_list_merge.exit.i.i_crit_edge, label %if.end7.i.i.i

__sort_thin_deferred_bios.exit.i.i.bio_list_merge.exit.i.i_crit_edge: ; preds = %__sort_thin_deferred_bios.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_list_merge.exit.i.i

if.end7.i.i.i:                                    ; preds = %__sort_thin_deferred_bios.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %196 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %tail.i6.i.i.i, align 4
  br label %bio_list_merge.exit.i.i

bio_list_merge.exit.i.i:                          ; preds = %if.end7.i.i.i, %__sort_thin_deferred_bios.exit.i.i.bio_list_merge.exit.i.i_crit_edge
  %bios.sroa.8.0.i.i = phi ptr [ null, %__sort_thin_deferred_bios.exit.i.i.bio_list_merge.exit.i.i_crit_edge ], [ %197, %if.end7.i.i.i ]
  %198 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr null, ptr %tail.i6.i.i.i, align 4
  %199 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr null, ptr %deferred_bio_list2.i.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  call void @blk_start_plug(ptr noundef nonnull %plug.i.i) #15
  br i1 %tobool.not.i.i60.i, label %bio_list_merge.exit.i.i.while.end.i.i_crit_edge, label %if.then.i.lr.ph.i.i

bio_list_merge.exit.i.i.while.end.i.i_crit_edge:  ; preds = %bio_list_merge.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i.i

if.then.i.lr.ph.i.i:                              ; preds = %bio_list_merge.exit.i.i
  %next_mapping.i.i61.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 29
  %mapping_pool.i.i62.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 38
  %process_bio.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 30
  %process_discard.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 31
  %throttle.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 15
  %throttle_applied.i.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 15, i32 2
  %threshold.i.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 15, i32 1
  %pmd.i.i = getelementptr inbounds %struct.pool, ptr %155, i32 0, i32 5
  br label %if.then.i.i63.i

if.then.i.i63.i:                                  ; preds = %if.end24.i.i.if.then.i.i63.i_crit_edge, %if.then.i.lr.ph.i.i
  %count.091.i.i = phi i32 [ 0, %if.then.i.lr.ph.i.i ], [ %inc.i71.i, %if.end24.i.i.if.then.i.i63.i_crit_edge ]
  %bios.sroa.0.289.i.i = phi ptr [ %195, %if.then.i.lr.ph.i.i ], [ %201, %if.end24.i.i.if.then.i.i63.i_crit_edge ]
  %200 = ptrtoint ptr %bios.sroa.0.289.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %bios.sroa.0.289.i.i, align 8
  %tobool4.not.i.i.i = icmp eq ptr %201, null
  store ptr null, ptr %bios.sroa.0.289.i.i, align 8
  %202 = ptrtoint ptr %next_mapping.i.i61.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %next_mapping.i.i61.i, align 8
  %tobool.not.i59.i.i = icmp eq ptr %203, null
  br i1 %tobool.not.i59.i.i, label %if.end.i60.i.i, label %if.then.i.i63.i.if.end18.i.i_crit_edge

if.then.i.i63.i.if.end18.i.i_crit_edge:           ; preds = %if.then.i.i63.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i.i

if.end.i60.i.i:                                   ; preds = %if.then.i.i63.i
  %call.i.i64.i = call noalias ptr @mempool_alloc(ptr noundef %mapping_pool.i.i62.i, i32 noundef 2592) #15
  %204 = ptrtoint ptr %next_mapping.i.i61.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store ptr %call.i.i64.i, ptr %next_mapping.i.i61.i, align 8
  %tobool3.not.i.i65.i = icmp eq ptr %call.i.i64.i, null
  br i1 %tobool3.not.i.i65.i, label %if.then13.i.i, label %if.end.i60.i.i.if.end18.i.i_crit_edge

if.end.i60.i.i.if.end18.i.i_crit_edge:            ; preds = %if.end.i60.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end18.i.i

if.then13.i.i:                                    ; preds = %if.end.i60.i.i
  %spec.select.le.i.i = select i1 %tobool4.not.i.i.i, ptr null, ptr %bios.sroa.8.0.i.i
  call void @_raw_spin_lock_irq(ptr noundef %lock.i.i) #15
  %205 = ptrtoint ptr %bios.sroa.0.289.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store ptr null, ptr %bios.sroa.0.289.i.i, align 8
  %206 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %tail.i6.i.i.i, align 4
  %tobool.not.i62.i.i = icmp eq ptr %207, null
  br i1 %tobool.not.i62.i.i, label %if.else.i64.i.i, label %if.then.i63.i.i

if.then.i63.i.i:                                  ; preds = %if.then13.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %208 = ptrtoint ptr %207 to i32
  call void @__asan_store4_noabort(i32 %208)
  store ptr %bios.sroa.0.289.i.i, ptr %207, align 8
  br label %bio_list_add.exit.i.i

if.else.i64.i.i:                                  ; preds = %if.then13.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %209 = ptrtoint ptr %deferred_bio_list2.i.i to i32
  call void @__asan_store4_noabort(i32 %209)
  store ptr %bios.sroa.0.289.i.i, ptr %deferred_bio_list2.i.i, align 4
  br label %bio_list_add.exit.i.i

bio_list_add.exit.i.i:                            ; preds = %if.else.i64.i.i, %if.then.i63.i.i
  %210 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %210)
  store ptr %bios.sroa.0.289.i.i, ptr %tail.i6.i.i.i, align 4
  br i1 %tobool4.not.i.i.i, label %bio_list_add.exit.i.i.bio_list_merge.exit74.i.i_crit_edge, label %if.end7.i73.i.i

bio_list_add.exit.i.i.bio_list_merge.exit74.i.i_crit_edge: ; preds = %bio_list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_list_merge.exit74.i.i

if.end7.i73.i.i:                                  ; preds = %bio_list_add.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %211 = ptrtoint ptr %bios.sroa.0.289.i.i to i32
  call void @__asan_store4_noabort(i32 %211)
  store ptr %201, ptr %bios.sroa.0.289.i.i, align 8
  %212 = ptrtoint ptr %tail.i6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %212)
  store ptr %spec.select.le.i.i, ptr %tail.i6.i.i.i, align 4
  br label %bio_list_merge.exit74.i.i

bio_list_merge.exit74.i.i:                        ; preds = %if.end7.i73.i.i, %bio_list_add.exit.i.i.bio_list_merge.exit74.i.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i.i) #15
  br label %while.end.i.i

if.end18.i.i:                                     ; preds = %if.end.i60.i.i.if.end18.i.i_crit_edge, %if.then.i.i63.i.if.end18.i.i_crit_edge
  %bi_opf.i66.i = getelementptr inbounds %struct.bio, ptr %bios.sroa.0.289.i.i, i32 0, i32 2
  %213 = ptrtoint ptr %bi_opf.i66.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %bi_opf.i66.i, align 8
  %and.i67.i = and i32 %214, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i67.i)
  %cmp.i.i = icmp eq i32 %and.i67.i, 3
  %spec.select132.i = select i1 %cmp.i.i, ptr %process_discard.i.i, ptr %process_bio.i.i
  %215 = ptrtoint ptr %spec.select132.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %.sink.i70.i = load ptr, ptr %spec.select132.i, align 4
  call void %.sink.i70.i(ptr noundef nonnull %tc.0143.i, ptr noundef nonnull %bios.sroa.0.289.i.i) #15
  %inc.i71.i = add i32 %count.091.i.i, 1
  %and21.i.i = and i32 %count.091.i.i, 127
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21.i.i)
  %cmp22.i.i = icmp eq i32 %and21.i.i, 0
  br i1 %cmp22.i.i, label %if.then23.i.i, label %if.end18.i.i.if.end24.i.i_crit_edge

if.end18.i.i.if.end24.i.i_crit_edge:              ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end24.i.i

if.then23.i.i:                                    ; preds = %if.end18.i.i
  %216 = ptrtoint ptr %throttle_applied.i.i.i to i32
  call void @__asan_load1_noabort(i32 %216)
  %217 = load i8, ptr %throttle_applied.i.i.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %217)
  %tobool.not.i75.i.i = icmp eq i8 %217, 0
  br i1 %tobool.not.i75.i.i, label %land.lhs.true.i.i.i, label %if.then23.i.i.throttle_work_update.exit.i.i_crit_edge

if.then23.i.i.throttle_work_update.exit.i.i_crit_edge: ; preds = %if.then23.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.then23.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %218 = load volatile i32, ptr @jiffies, align 128
  %219 = ptrtoint ptr %threshold.i.i.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load i32, ptr %threshold.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %218, i32 %220)
  %cmp.i76.i.i = icmp ugt i32 %218, %220
  br i1 %cmp.i76.i.i, label %if.then.i77.i.i, label %land.lhs.true.i.i.i.throttle_work_update.exit.i.i_crit_edge

land.lhs.true.i.i.i.throttle_work_update.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_update.exit.i.i

if.then.i77.i.i:                                  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @down_write(ptr noundef %throttle.i.i) #15
  %221 = ptrtoint ptr %throttle_applied.i.i.i to i32
  call void @__asan_store1_noabort(i32 %221)
  store i8 1, ptr %throttle_applied.i.i.i, align 4
  br label %throttle_work_update.exit.i.i

throttle_work_update.exit.i.i:                    ; preds = %if.then.i77.i.i, %land.lhs.true.i.i.i.throttle_work_update.exit.i.i_crit_edge, %if.then23.i.i.throttle_work_update.exit.i.i_crit_edge
  %222 = ptrtoint ptr %pmd.i.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %pmd.i.i, align 8
  call void @dm_pool_issue_prefetches(ptr noundef %223) #15
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %throttle_work_update.exit.i.i, %if.end18.i.i.if.end24.i.i_crit_edge
  br i1 %tobool4.not.i.i.i, label %if.end24.i.i.while.end.i.i_crit_edge, label %if.end24.i.i.if.then.i.i63.i_crit_edge

if.end24.i.i.if.then.i.i63.i_crit_edge:           ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i63.i

if.end24.i.i.while.end.i.i_crit_edge:             ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i.i

while.end.i.i:                                    ; preds = %if.end24.i.i.while.end.i.i_crit_edge, %bio_list_merge.exit74.i.i, %bio_list_merge.exit.i.i.while.end.i.i_crit_edge
  call void @blk_finish_plug(ptr noundef nonnull %plug.i.i) #15
  br label %process_thin_deferred_bios.exit.i

process_thin_deferred_bios.exit.i:                ; preds = %while.end.i.i, %if.then3.i.i, %if.then.i.i.i.i.i.process_thin_deferred_bios.exit.i_crit_edge, %if.then.i.i73.process_thin_deferred_bios.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %plug.i.i) #15
  %call1.i = call fastcc ptr @get_next_thin(ptr noundef %add.ptr, ptr noundef nonnull %tc.0143.i) #15
  %tobool.not.i74 = icmp eq ptr %call1.i, null
  br i1 %tobool.not.i74, label %process_thin_deferred_bios.exit.i.while.end.i_crit_edge, label %process_thin_deferred_bios.exit.i.while.body.i_crit_edge

process_thin_deferred_bios.exit.i.while.body.i_crit_edge: ; preds = %process_thin_deferred_bios.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

process_thin_deferred_bios.exit.i.while.end.i_crit_edge: ; preds = %process_thin_deferred_bios.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end.i

while.end.i:                                      ; preds = %process_thin_deferred_bios.exit.i.while.end.i_crit_edge, %throttle_work_update.exit71.while.end.i_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %deferred_flush_bios.i = getelementptr i8, ptr %ws, i32 404
  %224 = ptrtoint ptr %deferred_flush_bios.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load ptr, ptr %deferred_flush_bios.i, align 4
  %tobool.not.i.i = icmp eq ptr %225, null
  br i1 %tobool.not.i.i, label %while.end.i.bio_list_merge.exit.i_crit_edge, label %if.end7.i.i

while.end.i.bio_list_merge.exit.i_crit_edge:      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_list_merge.exit.i

if.end7.i.i:                                      ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %tail8.i.i = getelementptr i8, ptr %ws, i32 408
  %226 = ptrtoint ptr %tail8.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %tail8.i.i, align 4
  br label %bio_list_merge.exit.i

bio_list_merge.exit.i:                            ; preds = %if.end7.i.i, %while.end.i.bio_list_merge.exit.i_crit_edge
  %bios.sroa.11.0.i = phi ptr [ null, %while.end.i.bio_list_merge.exit.i_crit_edge ], [ %227, %if.end7.i.i ]
  %tail.i76.i = getelementptr i8, ptr %ws, i32 408
  %228 = ptrtoint ptr %tail.i76.i to i32
  call void @__asan_store4_noabort(i32 %228)
  store ptr null, ptr %tail.i76.i, align 4
  %229 = ptrtoint ptr %deferred_flush_bios.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store ptr null, ptr %deferred_flush_bios.i, align 4
  %deferred_flush_completions.i = getelementptr i8, ptr %ws, i32 412
  %230 = ptrtoint ptr %deferred_flush_completions.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load ptr, ptr %deferred_flush_completions.i, align 4
  %tail.i86.i = getelementptr i8, ptr %ws, i32 416
  %232 = ptrtoint ptr %tail.i86.i to i32
  call void @__asan_store4_noabort(i32 %232)
  store ptr null, ptr %tail.i86.i, align 4
  store ptr null, ptr %deferred_flush_completions.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %cmp.i88.not.i = icmp eq ptr %231, null
  %or.cond.i = select i1 %tobool.not.i.i, i1 %cmp.i88.not.i, i1 false
  br i1 %or.cond.i, label %land.lhs.true9.i, label %bio_list_merge.exit.i.if.end.i_crit_edge

bio_list_merge.exit.i.if.end.i_crit_edge:         ; preds = %bio_list_merge.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

land.lhs.true9.i:                                 ; preds = %bio_list_merge.exit.i
  %233 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %pmd, align 8
  %call10.i = call zeroext i1 @dm_pool_changed_this_transaction(ptr noundef %234) #15
  br i1 %call10.i, label %land.lhs.true11.i, label %land.lhs.true9.i.process_deferred_bios.exit_crit_edge

land.lhs.true9.i.process_deferred_bios.exit_crit_edge: ; preds = %land.lhs.true9.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true9.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %235 = load volatile i32, ptr @jiffies, align 128
  %last_commit_jiffies.i.i = getelementptr i8, ptr %ws, i32 352
  %236 = ptrtoint ptr %last_commit_jiffies.i.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %last_commit_jiffies.i.i, align 4
  %sub.i.i = sub i32 %235, %237
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i.i)
  %cmp.i90.i = icmp sgt i32 %sub.i.i, -1
  br i1 %cmp.i90.i, label %need_commit_due_to_time.exit.i, label %land.lhs.true11.i.if.end.i_crit_edge

land.lhs.true11.i.if.end.i_crit_edge:             ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

need_commit_due_to_time.exit.i:                   ; preds = %land.lhs.true11.i
  %add.i.i = add i32 %237, 100
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %238 = load volatile i32, ptr @jiffies, align 128
  %sub2.i.i = sub i32 %add.i.i, %238
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub2.i.i)
  %tobool13.not.i = icmp sgt i32 %sub2.i.i, -1
  br i1 %tobool13.not.i, label %need_commit_due_to_time.exit.i.process_deferred_bios.exit_crit_edge, label %need_commit_due_to_time.exit.i.if.end.i_crit_edge

need_commit_due_to_time.exit.i.if.end.i_crit_edge: ; preds = %need_commit_due_to_time.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

need_commit_due_to_time.exit.i.process_deferred_bios.exit_crit_edge: ; preds = %need_commit_due_to_time.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

if.end.i:                                         ; preds = %need_commit_due_to_time.exit.i.if.end.i_crit_edge, %land.lhs.true11.i.if.end.i_crit_edge, %bio_list_merge.exit.i.if.end.i_crit_edge
  %call14.i = call fastcc i32 @commit(ptr noundef %add.ptr) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i)
  %tobool15.not.i = icmp eq i32 %call14.i, 0
  br i1 %tobool15.not.i, label %if.end22.i, label %if.then16.i

if.then16.i:                                      ; preds = %if.end.i
  br i1 %cmp.i88.not.i, label %if.then16.i.bio_list_merge.exit99.i_crit_edge, label %if.end.i94.i

if.then16.i.bio_list_merge.exit99.i_crit_edge:    ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_list_merge.exit99.i

if.end.i94.i:                                     ; preds = %if.then16.i
  %tobool1.not.i93.i = icmp eq ptr %bios.sroa.11.0.i, null
  br i1 %tobool1.not.i93.i, label %if.end.i94.i.if.then.i101.i.preheader_crit_edge, label %if.then2.i95.i

if.end.i94.i.if.then.i101.i.preheader_crit_edge:  ; preds = %if.end.i94.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i101.i.preheader

if.then2.i95.i:                                   ; preds = %if.end.i94.i
  call void @__sanitizer_cov_trace_pc() #17
  %239 = ptrtoint ptr %bios.sroa.11.0.i to i32
  call void @__asan_store4_noabort(i32 %239)
  store ptr %231, ptr %bios.sroa.11.0.i, align 8
  br label %bio_list_merge.exit99.i

bio_list_merge.exit99.i:                          ; preds = %if.then2.i95.i, %if.then16.i.bio_list_merge.exit99.i_crit_edge
  br i1 %tobool.not.i.i, label %bio_list_merge.exit99.i.process_deferred_bios.exit_crit_edge, label %bio_list_merge.exit99.i.if.then.i101.i.preheader_crit_edge

bio_list_merge.exit99.i.if.then.i101.i.preheader_crit_edge: ; preds = %bio_list_merge.exit99.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i101.i.preheader

bio_list_merge.exit99.i.process_deferred_bios.exit_crit_edge: ; preds = %bio_list_merge.exit99.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

if.then.i101.i.preheader:                         ; preds = %bio_list_merge.exit99.i.if.then.i101.i.preheader_crit_edge, %if.end.i94.i.if.then.i101.i.preheader_crit_edge
  %bios.sroa.0.4147.i.ph = phi ptr [ %231, %if.end.i94.i.if.then.i101.i.preheader_crit_edge ], [ %225, %bio_list_merge.exit99.i.if.then.i101.i.preheader_crit_edge ]
  br label %if.then.i101.i

if.then.i101.i:                                   ; preds = %if.then.i101.i.if.then.i101.i_crit_edge, %if.then.i101.i.preheader
  %bios.sroa.0.4147.i = phi ptr [ %241, %if.then.i101.i.if.then.i101.i_crit_edge ], [ %bios.sroa.0.4147.i.ph, %if.then.i101.i.preheader ]
  %240 = ptrtoint ptr %bios.sroa.0.4147.i to i32
  call void @__asan_load4_noabort(i32 %240)
  %241 = load ptr, ptr %bios.sroa.0.4147.i, align 8
  store ptr null, ptr %bios.sroa.0.4147.i, align 8
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %bios.sroa.0.4147.i, i32 0, i32 6
  %242 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %242)
  store i8 10, ptr %bi_status.i.i, align 2
  call void @bio_endio(ptr noundef nonnull %bios.sroa.0.4147.i) #15
  %tobool.not.i100.i = icmp eq ptr %241, null
  br i1 %tobool.not.i100.i, label %if.then.i101.i.process_deferred_bios.exit_crit_edge, label %if.then.i101.i.if.then.i101.i_crit_edge

if.then.i101.i.if.then.i101.i_crit_edge:          ; preds = %if.then.i101.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i101.i

if.then.i101.i.process_deferred_bios.exit_crit_edge: ; preds = %if.then.i101.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

if.end22.i:                                       ; preds = %if.end.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %243 = load volatile i32, ptr @jiffies, align 128
  %last_commit_jiffies.i = getelementptr i8, ptr %ws, i32 352
  %244 = ptrtoint ptr %last_commit_jiffies.i to i32
  call void @__asan_store4_noabort(i32 %244)
  store i32 %243, ptr %last_commit_jiffies.i, align 4
  br i1 %cmp.i88.not.i, label %if.end22.i.while.cond28.preheader.i_crit_edge, label %if.end22.i.if.then.i107.i_crit_edge

if.end22.i.if.then.i107.i_crit_edge:              ; preds = %if.end22.i
  br label %if.then.i107.i

if.end22.i.while.cond28.preheader.i_crit_edge:    ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond28.preheader.i

while.cond28.preheader.i:                         ; preds = %if.then.i107.i.while.cond28.preheader.i_crit_edge, %if.end22.i.while.cond28.preheader.i_crit_edge
  br i1 %tobool.not.i.i, label %while.cond28.preheader.i.process_deferred_bios.exit_crit_edge, label %while.cond28.preheader.i.if.then.i115.i_crit_edge

while.cond28.preheader.i.if.then.i115.i_crit_edge: ; preds = %while.cond28.preheader.i
  br label %if.then.i115.i

while.cond28.preheader.i.process_deferred_bios.exit_crit_edge: ; preds = %while.cond28.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

if.then.i107.i:                                   ; preds = %if.then.i107.i.if.then.i107.i_crit_edge, %if.end22.i.if.then.i107.i_crit_edge
  %bio_completions.sroa.0.2149.i = phi ptr [ %246, %if.then.i107.i.if.then.i107.i_crit_edge ], [ %231, %if.end22.i.if.then.i107.i_crit_edge ]
  %245 = ptrtoint ptr %bio_completions.sroa.0.2149.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %bio_completions.sroa.0.2149.i, align 8
  store ptr null, ptr %bio_completions.sroa.0.2149.i, align 8
  call void @bio_endio(ptr noundef nonnull %bio_completions.sroa.0.2149.i) #15
  %tobool.not.i105.i = icmp eq ptr %246, null
  br i1 %tobool.not.i105.i, label %if.then.i107.i.while.cond28.preheader.i_crit_edge, label %if.then.i107.i.if.then.i107.i_crit_edge

if.then.i107.i.if.then.i107.i_crit_edge:          ; preds = %if.then.i107.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i107.i

if.then.i107.i.while.cond28.preheader.i_crit_edge: ; preds = %if.then.i107.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond28.preheader.i

if.then.i115.i:                                   ; preds = %if.end34.i.if.then.i115.i_crit_edge, %while.cond28.preheader.i.if.then.i115.i_crit_edge
  %bios.sroa.0.6151.i = phi ptr [ %248, %if.end34.i.if.then.i115.i_crit_edge ], [ %225, %while.cond28.preheader.i.if.then.i115.i_crit_edge ]
  %247 = ptrtoint ptr %bios.sroa.0.6151.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %bios.sroa.0.6151.i, align 8
  store ptr null, ptr %bios.sroa.0.6151.i, align 8
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bios.sroa.0.6151.i, i32 0, i32 2
  %249 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load i32, ptr %bi_opf.i, align 8
  %251 = and i32 %250, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %251)
  %tobool32.not.i = icmp eq i32 %251, 0
  br i1 %tobool32.not.i, label %if.else.i, label %if.then33.i

if.then33.i:                                      ; preds = %if.then.i115.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @bio_endio(ptr noundef nonnull %bios.sroa.0.6151.i) #15
  br label %if.end34.i

if.else.i:                                        ; preds = %if.then.i115.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @submit_bio_noacct(ptr noundef nonnull %bios.sroa.0.6151.i) #15
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.else.i, %if.then33.i
  %tobool.not.i113.i = icmp eq ptr %248, null
  br i1 %tobool.not.i113.i, label %if.end34.i.process_deferred_bios.exit_crit_edge, label %if.end34.i.if.then.i115.i_crit_edge

if.end34.i.if.then.i115.i_crit_edge:              ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i115.i

if.end34.i.process_deferred_bios.exit_crit_edge:  ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_deferred_bios.exit

process_deferred_bios.exit:                       ; preds = %if.end34.i.process_deferred_bios.exit_crit_edge, %while.cond28.preheader.i.process_deferred_bios.exit_crit_edge, %if.then.i101.i.process_deferred_bios.exit_crit_edge, %bio_list_merge.exit99.i.process_deferred_bios.exit_crit_edge, %need_commit_due_to_time.exit.i.process_deferred_bios.exit_crit_edge, %land.lhs.true9.i.process_deferred_bios.exit_crit_edge
  %252 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_load1_noabort(i32 %252)
  %253 = load i8, ptr %throttle_applied.i, align 4, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %253)
  %tobool.not.i77 = icmp eq i8 %253, 0
  br i1 %tobool.not.i77, label %process_deferred_bios.exit.throttle_work_complete.exit_crit_edge, label %if.then.i78

process_deferred_bios.exit.throttle_work_complete.exit_crit_edge: ; preds = %process_deferred_bios.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %throttle_work_complete.exit

if.then.i78:                                      ; preds = %process_deferred_bios.exit
  call void @__sanitizer_cov_trace_pc() #17
  %254 = ptrtoint ptr %throttle_applied.i to i32
  call void @__asan_store1_noabort(i32 %254)
  store i8 0, ptr %throttle_applied.i, align 4
  call void @up_write(ptr noundef %throttle) #15
  br label %throttle_work_complete.exit

throttle_work_complete.exit:                      ; preds = %if.then.i78, %process_deferred_bios.exit.throttle_work_complete.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_waker(ptr noundef %ws) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %wq.i = getelementptr i8, ptr %ws, i32 -108
  %0 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %wq.i, align 8
  %worker.i = getelementptr i8, ptr %ws, i32 -152
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %1, ptr noundef %worker.i) #15
  %2 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %wq.i, align 8
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %3, ptr noundef %ws, i32 noundef 100) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @do_no_space_timeout(ptr noundef %ws) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %ws, i32 -320
  %pf.i = getelementptr i8, ptr %ws, i32 -272
  %0 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp eq i32 %1, 1
  br i1 %cmp, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %error_if_no_space = getelementptr i8, ptr %ws, i32 -268
  %2 = ptrtoint ptr %error_if_no_space to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %error_if_no_space, align 4
  %3 = and i8 %bf.load, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %bf.cast.not = icmp eq i8 %3, 0
  br i1 %bf.cast.not, label %notify_of_pool_mode_change.exit, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

notify_of_pool_mode_change.exit:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %bf.set = or i8 %bf.load, 16
  %4 = ptrtoint ptr %error_if_no_space to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %bf.set, ptr %error_if_no_space, align 4
  %ti.i = getelementptr i8, ptr %ws, i32 -312
  %5 = ptrtoint ptr %ti.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ti.i, align 8
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  tail call void @dm_table_event(ptr noundef %8) #15
  %pool_md.i = getelementptr i8, ptr %ws, i32 -308
  %9 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pool_md.i, align 4
  %call3.i = tail call ptr @dm_device_name(ptr noundef %10) #15
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117, ptr noundef %call3.i, ptr noundef nonnull @.str.112, ptr noundef nonnull @.str.116) #21
  tail call fastcc void @error_retry_list_with_code(ptr noundef %add.ptr, i8 noundef zeroext 3)
  br label %if.end

if.end:                                           ; preds = %notify_of_pool_mode_change.exit, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_init(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_deferred_set_create() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vmalloc(i32 noundef) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__pool_table_insert(ptr noundef %pool) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @mutex_is_locked(ptr noundef nonnull @dm_thin_pool_table) #15
  br i1 %call, label %do.end6, label %do.body3, !prof !496

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 541, 0\0A.popsection", ""() #15, !srcloc !515
  unreachable

do.end6:                                          ; preds = %entry
  %0 = load ptr, ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %pool, ptr noundef getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), ptr noundef %0) #15
  br i1 %call.i.i, label %if.end.i.i, label %do.end6.list_add.exit_crit_edge

do.end6.list_add.exit_crit_edge:                  ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add.exit

if.end.i.i:                                       ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #17
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %0, i32 0, i32 1
  %1 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %pool, ptr %prev1.i.i, align 4
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %0, ptr %pool, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %pool, i32 0, i32 1
  %3 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), ptr %prev3.i.i, align 4
  store volatile ptr %pool, ptr getelementptr inbounds (%struct.dm_thin_pool_table, ptr @dm_thin_pool_table, i32 0, i32 1), align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %do.end6.list_add.exit_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_pool_issue_prefetches(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_write(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_first_thin(ptr noundef %pool) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !516
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 696, ptr noundef nonnull @.str.78) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %active_thins = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 26
  %4 = ptrtoint ptr %active_thins to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %active_thins, align 4
  %cmp.i.not = icmp eq ptr %5, %active_thins
  br i1 %cmp.i.not, label %rcu_read_lock.exit.if.end_crit_edge, label %if.then

rcu_read_lock.exit.if.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %rcu_read_lock.exit
  %6 = ptrtoint ptr %active_thins to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %active_thins, align 8
  %refcount.i = getelementptr inbounds %struct.thin_c, ptr %7, i32 0, i32 14
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #15
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #15, !srcloc !517
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !508

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %9 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %.not.i.i.i.i = icmp sgt i32 %9, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.if.end_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !496

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.if.end_crit_edge:                 ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #15
  br label %if.end

if.end:                                           ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.if.end_crit_edge, %rcu_read_lock.exit.if.end_crit_edge
  %tc.0 = phi ptr [ null, %rcu_read_lock.exit.if.end_crit_edge ], [ %7, %if.else.i.i.i.i.if.end_crit_edge ], [ %7, %if.end15.sink.split.i.i.i.i ]
  %call.i5 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i5, label %if.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i8

if.end.rcu_read_unlock.exit_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i8:                                 ; preds = %if.end
  %call1.i6 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i6)
  %tobool.not.i7 = icmp eq i32 %call1.i6, 0
  br i1 %tobool.not.i7, label %land.lhs.true.i8.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i10

land.lhs.true.i8.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i8
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i10:                               ; preds = %land.lhs.true.i8
  %.b4.i9 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i9, label %land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge, label %if.then.i11

land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i10
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i11:                                      ; preds = %land.lhs.true2.i10
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 724, ptr noundef nonnull @.str.79) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i11, %land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i8.rcu_read_unlock.exit_crit_edge, %if.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !518
  %10 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i12 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i12 to ptr
  %preempt_count.i.i.i.i13 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i13, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i13, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret ptr %tc.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_next_thin(ptr noundef readnone %pool, ptr noundef %tc) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !516
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 696, ptr noundef nonnull @.str.78) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %tc, align 8
  %active_thins = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 26
  %cmp.not = icmp eq ptr %5, %active_thins
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %rcu_read_lock.exit
  %refcount.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 14
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #15
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #15
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #15, !srcloc !517
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %for.body.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !508

for.body.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %for.body
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %7 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %.not.i.i.i.i = icmp sgt i32 %7, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.thin_get.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !496

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.thin_get.exit_crit_edge:          ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_get.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %for.body.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %for.body.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #15
  br label %thin_get.exit

thin_get.exit:                                    ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.thin_get.exit_crit_edge
  %refcount.i17 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 14
  %call.i.i.i.i.i.i18 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i17, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !499
  tail call void @llvm.prefetch.p0(ptr %refcount.i17, i32 1, i32 3, i32 1) #15
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i17, ptr %refcount.i17, i32 1, ptr elementtype(i32) %refcount.i17) #15, !srcloc !500
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i20, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %thin_get.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i19 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i19, label %if.end5.i.i.i.i.thin_put.exit_crit_edge, label %if.then10.i.i.i.i, !prof !496

if.end5.i.i.i.i.thin_put.exit_crit_edge:          ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_put.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i17, i32 noundef 3) #15
  br label %thin_put.exit

if.then.i20:                                      ; preds = %thin_get.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !501
  %can_destroy.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 15
  tail call void @complete(ptr noundef %can_destroy.i) #15
  br label %thin_put.exit

thin_put.exit:                                    ; preds = %if.then.i20, %if.then10.i.i.i.i, %if.end5.i.i.i.i.thin_put.exit_crit_edge
  %call.i21 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i21, label %thin_put.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i24

thin_put.exit.rcu_read_unlock.exit_crit_edge:     ; preds = %thin_put.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i24:                                ; preds = %thin_put.exit
  %call1.i22 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i22)
  %tobool.not.i23 = icmp eq i32 %call1.i22, 0
  br i1 %tobool.not.i23, label %land.lhs.true.i24.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i26

land.lhs.true.i24.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i24
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i26:                               ; preds = %land.lhs.true.i24
  %.b4.i25 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i25, label %land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge, label %if.then.i27

land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i26
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i27:                                      ; preds = %land.lhs.true2.i26
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 724, ptr noundef nonnull @.str.79) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i27, %land.lhs.true2.i26.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i24.rcu_read_unlock.exit_crit_edge, %thin_put.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !518
  br label %cleanup

for.end:                                          ; preds = %rcu_read_lock.exit
  %refcount.i30 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 14
  %call.i.i.i.i.i.i31 = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i30, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !499
  tail call void @llvm.prefetch.p0(ptr %refcount.i30, i32 1, i32 3, i32 1) #15
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i30, ptr %refcount.i30, i32 1, ptr elementtype(i32) %refcount.i30) #15, !srcloc !500
  %asmresult.i.i.i.i.i.i.i32 = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i32)
  %cmp.i.i.i.i33 = icmp eq i32 %asmresult.i.i.i.i.i.i.i32, 1
  br i1 %cmp.i.i.i.i33, label %if.then.i38, label %if.end5.i.i.i.i35

if.end5.i.i.i.i35:                                ; preds = %for.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i32)
  %.not.i.i.i.i34 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i32, 0
  br i1 %.not.i.i.i.i34, label %if.end5.i.i.i.i35.thin_put.exit39_crit_edge, label %if.then10.i.i.i.i36, !prof !496

if.end5.i.i.i.i35.thin_put.exit39_crit_edge:      ; preds = %if.end5.i.i.i.i35
  call void @__sanitizer_cov_trace_pc() #17
  br label %thin_put.exit39

if.then10.i.i.i.i36:                              ; preds = %if.end5.i.i.i.i35
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i30, i32 noundef 3) #15
  br label %thin_put.exit39

if.then.i38:                                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !501
  %can_destroy.i37 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 15
  tail call void @complete(ptr noundef %can_destroy.i37) #15
  br label %thin_put.exit39

thin_put.exit39:                                  ; preds = %if.then.i38, %if.then10.i.i.i.i36, %if.end5.i.i.i.i35.thin_put.exit39_crit_edge
  %call.i40 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i40, label %thin_put.exit39.rcu_read_unlock.exit50_crit_edge, label %land.lhs.true.i43

thin_put.exit39.rcu_read_unlock.exit50_crit_edge: ; preds = %thin_put.exit39
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit50

land.lhs.true.i43:                                ; preds = %thin_put.exit39
  %call1.i41 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i41)
  %tobool.not.i42 = icmp eq i32 %call1.i41, 0
  br i1 %tobool.not.i42, label %land.lhs.true.i43.rcu_read_unlock.exit50_crit_edge, label %land.lhs.true2.i45

land.lhs.true.i43.rcu_read_unlock.exit50_crit_edge: ; preds = %land.lhs.true.i43
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit50

land.lhs.true2.i45:                               ; preds = %land.lhs.true.i43
  %.b4.i44 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i44, label %land.lhs.true2.i45.rcu_read_unlock.exit50_crit_edge, label %if.then.i46

land.lhs.true2.i45.rcu_read_unlock.exit50_crit_edge: ; preds = %land.lhs.true2.i45
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit50

if.then.i46:                                      ; preds = %land.lhs.true2.i45
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 724, ptr noundef nonnull @.str.79) #15
  br label %rcu_read_unlock.exit50

rcu_read_unlock.exit50:                           ; preds = %if.then.i46, %land.lhs.true2.i45.rcu_read_unlock.exit50_crit_edge, %land.lhs.true.i43.rcu_read_unlock.exit50_crit_edge, %thin_put.exit39.rcu_read_unlock.exit50_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !518
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit50, %rcu_read_unlock.exit
  %retval.0 = phi ptr [ %5, %rcu_read_unlock.exit ], [ null, %rcu_read_unlock.exit50 ]
  %10 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i47 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i47 to ptr
  %preempt_count.i.i.i.i48 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i48 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i48, align 4
  %sub.i.i.i49 = add i32 %13, -1
  store volatile i32 %sub.i.i.i49, ptr %preempt_count.i.i.i.i48, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @dm_pool_changed_this_transaction(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @commit(ptr noundef %pool) unnamed_addr #1 align 64 {
entry:
  %nr_free.i10 = alloca i64, align 8
  %nr_free.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pf.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9
  %0 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %pmd = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 5
  %2 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pmd, align 8
  %call1 = tail call i32 @dm_pool_commit_metadata(ptr noundef %3) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @metadata_operation_failed(ptr noundef %pool, ptr noundef nonnull @.str.80, i32 noundef %call1)
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_free.i) #15
  %4 = ptrtoint ptr %nr_free.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 -1, ptr %nr_free.i, align 8, !annotation !495
  %5 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pmd, align 8
  %call.i = call i32 @dm_pool_get_free_metadata_block_count(ptr noundef %6, ptr noundef nonnull %nr_free.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end3.i, label %if.else.land.lhs.true.i_crit_edge

if.else.land.lhs.true.i_crit_edge:                ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true.i

if.end3.i:                                        ; preds = %if.else
  %7 = ptrtoint ptr %nr_free.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %nr_free.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %8)
  %tobool1.not.i = icmp eq i64 %8, 0
  br i1 %tobool1.not.i, label %if.end3.i.land.lhs.true.i_crit_edge, label %if.end3.i.check_for_metadata_space.exit_crit_edge

if.end3.i.check_for_metadata_space.exit_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_for_metadata_space.exit

if.end3.i.land.lhs.true.i_crit_edge:              ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.end3.i.land.lhs.true.i_crit_edge, %if.else.land.lhs.true.i_crit_edge
  %ooms_reason.015.i = phi ptr [ @.str.121, %if.end3.i.land.lhs.true.i_crit_edge ], [ @.str.120, %if.else.land.lhs.true.i_crit_edge ]
  %9 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pf.i, align 8
  %11 = and i32 %10, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %check_for_metadata_space.exit.thread, label %do.end.i

check_for_metadata_space.exit.thread:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_free.i) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_free.i10) #15
  br label %check_for_data_space.exit

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call7.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.122, ptr noundef nonnull %ooms_reason.015.i) #21
  call fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef 2) #15
  br label %check_for_metadata_space.exit

check_for_metadata_space.exit:                    ; preds = %do.end.i, %if.end3.i.check_for_metadata_space.exit_crit_edge
  %13 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr = load i32, ptr %pf.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_free.i) #15
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %nr_free.i10) #15
  %14 = ptrtoint ptr %nr_free.i10 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 -1, ptr %nr_free.i10, align 8, !annotation !495
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %.pr)
  %cmp.not.i = icmp eq i32 %.pr, 1
  br i1 %cmp.not.i, label %if.end.i, label %check_for_metadata_space.exit.check_for_data_space.exit_crit_edge

check_for_metadata_space.exit.check_for_data_space.exit_crit_edge: ; preds = %check_for_metadata_space.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_for_data_space.exit

if.end.i:                                         ; preds = %check_for_metadata_space.exit
  %15 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pmd, align 8
  %call1.i = call i32 @dm_pool_get_free_block_count(ptr noundef %16, ptr noundef nonnull %nr_free.i10) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i12 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i12, label %if.end3.i13, label %if.end.i.check_for_data_space.exit_crit_edge

if.end.i.check_for_data_space.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_for_data_space.exit

if.end3.i13:                                      ; preds = %if.end.i
  %17 = ptrtoint ptr %nr_free.i10 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %nr_free.i10, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %tobool4.not.i = icmp eq i64 %18, 0
  br i1 %tobool4.not.i, label %if.end3.i13.check_for_data_space.exit_crit_edge, label %if.then5.i

if.end3.i13.check_for_data_space.exit_crit_edge:  ; preds = %if.end3.i13
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_for_data_space.exit

if.then5.i:                                       ; preds = %if.end3.i13
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef 0) #15
  call fastcc void @requeue_bios(ptr noundef %pool) #15
  br label %check_for_data_space.exit

check_for_data_space.exit:                        ; preds = %if.then5.i, %if.end3.i13.check_for_data_space.exit_crit_edge, %if.end.i.check_for_data_space.exit_crit_edge, %check_for_metadata_space.exit.check_for_data_space.exit_crit_edge, %check_for_metadata_space.exit.thread
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %nr_free.i10) #15
  br label %cleanup

cleanup:                                          ; preds = %check_for_data_space.exit, %if.then2, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %check_for_data_space.exit ], [ %call1, %if.then2 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @submit_bio_noacct(ptr noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sort(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cmp_cells(ptr nocapture noundef readonly %lhs, ptr nocapture noundef readonly %rhs) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %lhs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lhs, align 4
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %holder, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %do.body4, label %do.body10, !prof !508

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2229, 0\0A.popsection", ""() #15, !srcloc !519
  unreachable

do.body10:                                        ; preds = %entry
  %4 = ptrtoint ptr %rhs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rhs, align 4
  %holder11 = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %holder11 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %holder11, align 8
  %tobool12.not = icmp eq ptr %7, null
  br i1 %tobool12.not, label %do.body22, label %do.end30, !prof !508

do.body22:                                        ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2230, 0\0A.popsection", ""() #15, !srcloc !520
  unreachable

do.end30:                                         ; preds = %do.body10
  call void @__sanitizer_cov_trace_pc() #17
  %bi_iter = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8
  %8 = ptrtoint ptr %bi_iter to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %bi_iter, align 8
  %bi_iter33 = getelementptr inbounds %struct.bio, ptr %7, i32 0, i32 8
  %10 = ptrtoint ptr %bi_iter33 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %bi_iter33, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %9, i64 %11)
  %cmp = icmp ult i64 %9, %11
  call void @__sanitizer_cov_trace_cmp8(i64 %9, i64 %11)
  %cmp43 = icmp ugt i64 %9, %11
  %. = zext i1 %cmp43 to i32
  %retval.0 = select i1 %cmp, i32 -1, i32 %.
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @mempool_alloc(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_start_plug(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_finish_plug(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_bio_from_per_bio_data(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_insert_color(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_first(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @rb_erase(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rb_next(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_commit_metadata(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @metadata_operation_failed(ptr noundef %pool, ptr noundef %op, i32 noundef %r) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @___ratelimit(ptr noundef nonnull @metadata_operation_failed._rs, ptr noundef nonnull @__func__.metadata_operation_failed) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 2
  %0 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool_md, align 4
  %call1 = tail call ptr @dm_device_name(ptr noundef %1) #15
  %call2 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.82, ptr noundef %call1, ptr noundef %op, i32 noundef %r) #21
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 2
  %2 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool_md.i, align 4
  %call.i = tail call ptr @dm_device_name(ptr noundef %3) #15
  %call1.i = tail call i32 @___ratelimit(ptr noundef nonnull @abort_transaction._rs, ptr noundef nonnull @__func__.abort_transaction) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %do.end.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.83, ptr noundef %call.i) #21
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %if.end.if.end.i_crit_edge
  %pmd.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 5
  %4 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pmd.i, align 8
  %call3.i = tail call i32 @dm_pool_abort_metadata(ptr noundef %5) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end.i.if.end11.i_crit_edge, label %do.end8.i

if.end.i.if.end11.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end11.i

do.end8.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %call10.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.85, ptr noundef %call.i) #21
  tail call fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef 4) #15
  br label %if.end11.i

if.end11.i:                                       ; preds = %do.end8.i, %if.end.i.if.end11.i_crit_edge
  %6 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pmd.i, align 8
  %call13.i = tail call i32 @dm_pool_metadata_set_needs_check(ptr noundef %7) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end11.i.abort_transaction.exit_crit_edge, label %do.end18.i

if.end11.i.abort_transaction.exit_crit_edge:      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %abort_transaction.exit

do.end18.i:                                       ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  %call20.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.88, ptr noundef %call.i) #21
  tail call fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef 4) #15
  br label %abort_transaction.exit

abort_transaction.exit:                           ; preds = %do.end18.i, %if.end11.i.abort_transaction.exit_crit_edge
  tail call fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef 3)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dm_device_name(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @set_pool_mode(ptr noundef %pool, i32 noundef %new_mode) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %ti = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 1
  %0 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ti, align 8
  %private = getelementptr inbounds %struct.dm_target, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private, align 4
  %pmd = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 5
  %4 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pmd, align 8
  %call = tail call zeroext i1 @dm_pool_metadata_needs_check(ptr noundef %5) #15
  %pf.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9
  %6 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pf.i, align 8
  %8 = load volatile i32, ptr @no_space_timeout_secs, align 4
  %mul = mul i32 %8, 100
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %new_mode)
  %cmp = icmp ne i32 %new_mode, 0
  %call.not = xor i1 %call, true
  %brmerge = select i1 %cmp, i1 true, i1 %call.not
  br i1 %brmerge, label %entry.if.end10_crit_edge, label %do.end4

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end10

do.end4:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 2
  %9 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pool_md, align 4
  %call6 = tail call ptr @dm_device_name(ptr noundef %10) #15
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, ptr noundef %call6) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp8.not = icmp eq i32 %7, 0
  %.call1 = select i1 %cmp8.not, i32 3, i32 %7
  br label %if.end10

if.end10:                                         ; preds = %do.end4, %entry.if.end10_crit_edge
  %new_mode.addr.0 = phi i32 [ %new_mode, %entry.if.end10_crit_edge ], [ %.call1, %do.end4 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %7)
  %cmp11 = icmp eq i32 %7, 4
  %spec.select = select i1 %cmp11, i32 4, i32 %new_mode.addr.0
  %11 = zext i32 %spec.select to i64
  call void @__sanitizer_cov_trace_switch(i64 %11, ptr @__sancov_gen_cov_switch_values.219)
  switch i32 %spec.select, label %if.end10.sw.epilog_crit_edge [
    i32 4, label %sw.bb
    i32 2, label %if.end10.sw.bb15_crit_edge
    i32 3, label %if.end10.sw.bb15_crit_edge135
    i32 1, label %sw.bb23
    i32 0, label %sw.bb36
  ]

if.end10.sw.bb15_crit_edge135:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb15

if.end10.sw.bb15_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.bb15

if.end10.sw.epilog_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #17
  %12 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pmd, align 8
  tail call void @dm_pool_metadata_read_only(ptr noundef %13) #15
  %process_bio = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 30
  %14 = ptrtoint ptr %process_bio to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr @process_bio_fail, ptr %process_bio, align 4
  %process_discard = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 31
  %15 = ptrtoint ptr %process_discard to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @process_bio_fail, ptr %process_discard, align 8
  %process_cell = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 32
  %16 = ptrtoint ptr %process_cell to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr @process_cell_fail, ptr %process_cell, align 4
  %process_discard_cell = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 33
  %17 = ptrtoint ptr %process_discard_cell to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr @process_cell_fail, ptr %process_discard_cell, align 8
  %process_prepared_mapping = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 34
  %18 = ptrtoint ptr %process_prepared_mapping to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @process_prepared_mapping_fail, ptr %process_prepared_mapping, align 4
  %process_prepared_discard = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 35
  %19 = ptrtoint ptr %process_prepared_discard to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr @process_prepared_discard_fail, ptr %process_prepared_discard, align 8
  %out_of_data_space.i.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 10
  %20 = ptrtoint ptr %out_of_data_space.i.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load.i.i = load i8, ptr %out_of_data_space.i.i, align 8
  %21 = and i8 %bf.load.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %bf.cast.not.i.i = icmp eq i8 %21, 0
  %conv.i.i = select i1 %bf.cast.not.i.i, i8 10, i8 3
  tail call fastcc void @error_retry_list_with_code(ptr noundef %pool, i8 noundef zeroext %conv.i.i) #15
  br label %sw.epilog

sw.bb15:                                          ; preds = %if.end10.sw.bb15_crit_edge, %if.end10.sw.bb15_crit_edge135
  %22 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pmd, align 8
  tail call void @dm_pool_metadata_read_only(ptr noundef %23) #15
  %process_bio17 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 30
  %24 = ptrtoint ptr %process_bio17 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr @process_bio_read_only, ptr %process_bio17, align 4
  %process_discard18 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 31
  %25 = ptrtoint ptr %process_discard18 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @process_bio_success, ptr %process_discard18, align 8
  %process_cell19 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 32
  %26 = ptrtoint ptr %process_cell19 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @process_cell_read_only, ptr %process_cell19, align 4
  %process_discard_cell20 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 33
  %27 = ptrtoint ptr %process_discard_cell20 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @process_cell_success, ptr %process_discard_cell20, align 8
  %process_prepared_mapping21 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 34
  %28 = ptrtoint ptr %process_prepared_mapping21 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr @process_prepared_mapping_fail, ptr %process_prepared_mapping21, align 4
  %process_prepared_discard22 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 35
  %29 = ptrtoint ptr %process_prepared_discard22 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr @process_prepared_discard_success, ptr %process_prepared_discard22, align 8
  %out_of_data_space.i.i118 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 10
  %30 = ptrtoint ptr %out_of_data_space.i.i118 to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load.i.i119 = load i8, ptr %out_of_data_space.i.i118, align 8
  %31 = and i8 %bf.load.i.i119, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %bf.cast.not.i.i120 = icmp eq i8 %31, 0
  %conv.i.i121 = select i1 %bf.cast.not.i.i120, i8 10, i8 3
  tail call fastcc void @error_retry_list_with_code(ptr noundef %pool, i8 noundef zeroext %conv.i.i121) #15
  br label %sw.epilog

sw.bb23:                                          ; preds = %if.end10
  %out_of_data_space = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 10
  %32 = ptrtoint ptr %out_of_data_space to i32
  call void @__asan_load1_noabort(i32 %32)
  %bf.load = load i8, ptr %out_of_data_space, align 8
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %out_of_data_space, align 8
  %process_bio24 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 30
  %33 = ptrtoint ptr %process_bio24 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr @process_bio_read_only, ptr %process_bio24, align 4
  %process_discard25 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 31
  %34 = ptrtoint ptr %process_discard25 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr @process_discard_bio, ptr %process_discard25, align 8
  %process_cell26 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 32
  %35 = ptrtoint ptr %process_cell26 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr @process_cell_read_only, ptr %process_cell26, align 4
  %process_prepared_mapping27 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 34
  %36 = ptrtoint ptr %process_prepared_mapping27 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr @process_prepared_mapping, ptr %process_prepared_mapping27, align 4
  %37 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ti, align 8
  %private.i = getelementptr inbounds %struct.dm_target, ptr %38, i32 0, i32 11
  %39 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %private.i, align 4
  %discard_passdown.i.i = getelementptr inbounds %struct.pool_c, ptr %40, i32 0, i32 6, i32 1
  %41 = ptrtoint ptr %discard_passdown.i.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %bf.load.i.i122 = load i8, ptr %discard_passdown.i.i, align 4
  %42 = and i8 %bf.load.i.i122, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %42)
  %bf.cast.i.not.i = icmp eq i8 %42, 0
  br i1 %bf.cast.i.not.i, label %sw.bb23.set_discard_callbacks.exit_crit_edge, label %if.then.i

sw.bb23.set_discard_callbacks.exit_crit_edge:     ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #17
  br label %set_discard_callbacks.exit

if.then.i:                                        ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #17
  %process_prepared_discard_pt2.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 36
  %43 = ptrtoint ptr %process_prepared_discard_pt2.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr @process_prepared_discard_passdown_pt2, ptr %process_prepared_discard_pt2.i, align 4
  br label %set_discard_callbacks.exit

set_discard_callbacks.exit:                       ; preds = %if.then.i, %sw.bb23.set_discard_callbacks.exit_crit_edge
  %process_discard_cell_passdown.sink.i = phi ptr [ @process_discard_cell_passdown, %if.then.i ], [ @process_discard_cell_no_passdown, %sw.bb23.set_discard_callbacks.exit_crit_edge ]
  %process_prepared_discard_passdown_pt1.sink.i = phi ptr [ @process_prepared_discard_passdown_pt1, %if.then.i ], [ @process_prepared_discard_no_passdown, %sw.bb23.set_discard_callbacks.exit_crit_edge ]
  %44 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 33
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %process_discard_cell_passdown.sink.i, ptr %44, align 8
  %46 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 35
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %process_prepared_discard_passdown_pt1.sink.i, ptr %46, align 8
  %error_if_no_space = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9, i32 1
  %48 = ptrtoint ptr %error_if_no_space to i32
  call void @__asan_load1_noabort(i32 %48)
  %bf.load28 = load i8, ptr %error_if_no_space, align 4
  %49 = and i8 %bf.load28, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %bf.cast.not = icmp ne i8 %49, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul)
  %tobool31.not = icmp eq i32 %mul, 0
  %or.cond = select i1 %bf.cast.not, i1 true, i1 %tobool31.not
  br i1 %or.cond, label %set_discard_callbacks.exit.sw.epilog_crit_edge, label %if.then32

set_discard_callbacks.exit.sw.epilog_crit_edge:   ; preds = %set_discard_callbacks.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

if.then32:                                        ; preds = %set_discard_callbacks.exit
  call void @__sanitizer_cov_trace_pc() #17
  %wq = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 14
  %50 = ptrtoint ptr %wq to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %wq, align 8
  %no_space_timeout33 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 17
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %51, ptr noundef %no_space_timeout33, i32 noundef %mul) #15
  br label %sw.epilog

sw.bb36:                                          ; preds = %if.end10
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp37 = icmp eq i32 %7, 1
  br i1 %cmp37, label %if.then38, label %sw.bb36.if.end41_crit_edge

sw.bb36.if.end41_crit_edge:                       ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end41

if.then38:                                        ; preds = %sw.bb36
  call void @__sanitizer_cov_trace_pc() #17
  %no_space_timeout39 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 17
  %call40 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %no_space_timeout39) #15
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %sw.bb36.if.end41_crit_edge
  %out_of_data_space42 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 10
  %52 = ptrtoint ptr %out_of_data_space42 to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load43 = load i8, ptr %out_of_data_space42, align 8
  %bf.clear44 = and i8 %bf.load43, -33
  store i8 %bf.clear44, ptr %out_of_data_space42, align 8
  %error_if_no_space46 = getelementptr inbounds %struct.pool_c, ptr %3, i32 0, i32 5, i32 1
  %53 = ptrtoint ptr %error_if_no_space46 to i32
  call void @__asan_load1_noabort(i32 %53)
  %bf.load47 = load i8, ptr %error_if_no_space46, align 4
  %error_if_no_space52 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9, i32 1
  %.lobit = and i8 %bf.load47, 16
  %54 = ptrtoint ptr %error_if_no_space52 to i32
  call void @__asan_load1_noabort(i32 %54)
  %bf.load53 = load i8, ptr %error_if_no_space52, align 4
  %bf.clear54 = and i8 %bf.load53, -17
  %bf.set55 = or i8 %bf.clear54, %.lobit
  store i8 %bf.set55, ptr %error_if_no_space52, align 4
  %55 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pmd, align 8
  tail call void @dm_pool_metadata_read_write(ptr noundef %56) #15
  %process_bio58 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 30
  %57 = ptrtoint ptr %process_bio58 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr @process_bio, ptr %process_bio58, align 4
  %process_discard59 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 31
  %58 = ptrtoint ptr %process_discard59 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr @process_discard_bio, ptr %process_discard59, align 8
  %process_cell60 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 32
  %59 = ptrtoint ptr %process_cell60 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr @process_cell, ptr %process_cell60, align 4
  %process_prepared_mapping61 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 34
  %60 = ptrtoint ptr %process_prepared_mapping61 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr @process_prepared_mapping, ptr %process_prepared_mapping61, align 4
  %61 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ti, align 8
  %private.i124 = getelementptr inbounds %struct.dm_target, ptr %62, i32 0, i32 11
  %63 = ptrtoint ptr %private.i124 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %private.i124, align 4
  %discard_passdown.i.i125 = getelementptr inbounds %struct.pool_c, ptr %64, i32 0, i32 6, i32 1
  %65 = ptrtoint ptr %discard_passdown.i.i125 to i32
  call void @__asan_load1_noabort(i32 %65)
  %bf.load.i.i126 = load i8, ptr %discard_passdown.i.i125, align 4
  %66 = and i8 %bf.load.i.i126, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %66)
  %bf.cast.i.not.i127 = icmp eq i8 %66, 0
  br i1 %bf.cast.i.not.i127, label %if.end41.set_discard_callbacks.exit132_crit_edge, label %if.then.i129

if.end41.set_discard_callbacks.exit132_crit_edge: ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  br label %set_discard_callbacks.exit132

if.then.i129:                                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  %process_prepared_discard_pt2.i128 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 36
  %67 = ptrtoint ptr %process_prepared_discard_pt2.i128 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr @process_prepared_discard_passdown_pt2, ptr %process_prepared_discard_pt2.i128, align 4
  br label %set_discard_callbacks.exit132

set_discard_callbacks.exit132:                    ; preds = %if.then.i129, %if.end41.set_discard_callbacks.exit132_crit_edge
  %process_discard_cell_passdown.sink.i130 = phi ptr [ @process_discard_cell_passdown, %if.then.i129 ], [ @process_discard_cell_no_passdown, %if.end41.set_discard_callbacks.exit132_crit_edge ]
  %process_prepared_discard_passdown_pt1.sink.i131 = phi ptr [ @process_prepared_discard_passdown_pt1, %if.then.i129 ], [ @process_prepared_discard_no_passdown, %if.end41.set_discard_callbacks.exit132_crit_edge ]
  %68 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 33
  %69 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %process_discard_cell_passdown.sink.i130, ptr %68, align 8
  %70 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 35
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %process_prepared_discard_passdown_pt1.sink.i131, ptr %70, align 8
  br label %sw.epilog

sw.epilog:                                        ; preds = %set_discard_callbacks.exit132, %if.then32, %set_discard_callbacks.exit.sw.epilog_crit_edge, %sw.bb15, %sw.bb, %if.end10.sw.epilog_crit_edge
  %72 = ptrtoint ptr %pf.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %spec.select, ptr %pf.i, align 8
  %adjusted_pf = getelementptr inbounds %struct.pool_c, ptr %3, i32 0, i32 6
  %73 = ptrtoint ptr %adjusted_pf to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %spec.select, ptr %adjusted_pf, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %spec.select)
  %cmp64.not = icmp eq i32 %7, %spec.select
  br i1 %cmp64.not, label %sw.epilog.if.end66_crit_edge, label %if.then65

sw.epilog.if.end66_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end66

if.then65:                                        ; preds = %sw.epilog
  %74 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %75)
  %cmp.i = icmp eq i32 %75, 1
  br i1 %cmp.i, label %if.then.i133, label %if.then65.notify_of_pool_mode_change.exit_crit_edge

if.then65.notify_of_pool_mode_change.exit_crit_edge: ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #17
  br label %notify_of_pool_mode_change.exit

if.then.i133:                                     ; preds = %if.then65
  call void @__sanitizer_cov_trace_pc() #17
  %error_if_no_space.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9, i32 1
  %76 = ptrtoint ptr %error_if_no_space.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %bf.load.i = load i8, ptr %error_if_no_space.i, align 4
  %77 = and i8 %bf.load.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %77)
  %bf.cast.not.i = icmp eq i8 %77, 0
  %.str.115..str.116.i = select i1 %bf.cast.not.i, ptr @.str.115, ptr @.str.116
  br label %notify_of_pool_mode_change.exit

notify_of_pool_mode_change.exit:                  ; preds = %if.then.i133, %if.then65.notify_of_pool_mode_change.exit_crit_edge
  %cond.i = phi ptr [ @.str.119, %if.then65.notify_of_pool_mode_change.exit_crit_edge ], [ %.str.115..str.116.i, %if.then.i133 ]
  %78 = ptrtoint ptr %ti to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ti, align 8
  %80 = ptrtoint ptr %79 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %79, align 8
  tail call void @dm_table_event(ptr noundef %81) #15
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 2
  %82 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %pool_md.i, align 4
  %call3.i = tail call ptr @dm_device_name(ptr noundef %83) #15
  %arrayidx.i = getelementptr [5 x ptr], ptr @__const.notify_of_pool_mode_change.descs, i32 0, i32 %75
  %84 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %arrayidx.i, align 4
  %call4.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.117, ptr noundef %call3.i, ptr noundef %85, ptr noundef nonnull %cond.i) #21
  br label %if.end66

if.end66:                                         ; preds = %notify_of_pool_mode_change.exit, %sw.epilog.if.end66_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_abort_metadata(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_metadata_set_needs_check(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @dm_pool_metadata_needs_check(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_pool_metadata_read_only(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_bio_fail(ptr nocapture noundef readnone %tc, ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %0 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 10, ptr %bi_status.i, align 2
  tail call void @bio_endio(ptr noundef %bio) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_cell_fail(ptr nocapture noundef readonly %tc, ptr noundef %cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool, align 8
  %out_of_data_space.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %out_of_data_space.i.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i.i = load i8, ptr %out_of_data_space.i.i, align 8
  %3 = and i8 %bf.load.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %bf.cast.not.i.i = icmp eq i8 %3, 0
  %conv.i.i = select i1 %bf.cast.not.i.i, i8 10, i8 3
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 11
  %4 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_error(ptr noundef %5, ptr noundef %cell, i8 noundef zeroext %conv.i.i) #15
  %6 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %7, ptr noundef %cell) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_mapping_fail(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool, align 8
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %4 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cell, align 8
  %out_of_data_space.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %6 = ptrtoint ptr %out_of_data_space.i.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load.i.i = load i8, ptr %out_of_data_space.i.i, align 8
  %7 = and i8 %bf.load.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %bf.cast.not.i.i = icmp eq i8 %7, 0
  %conv.i.i = select i1 %bf.cast.not.i.i, i8 10, i8 3
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 11
  %8 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_error(ptr noundef %9, ptr noundef %5, i8 noundef zeroext %conv.i.i) #15
  %10 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %11, ptr noundef %5) #15
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %m) #15
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del.exit_crit_edge

entry.list_del.exit_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i, align 4
  %14 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %m, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %entry.list_del.exit_crit_edge
  %18 = ptrtoint ptr %m to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 256 to ptr), ptr %m, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %20 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tc, align 4
  %pool2 = getelementptr inbounds %struct.thin_c, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool2, align 8
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_discard_fail(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bio = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %0 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio, align 4
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 10, ptr %bi_status.i, align 2
  tail call void @bio_endio(ptr noundef %1) #15
  tail call fastcc void @free_discard_mapping(ptr noundef %m)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_bio_read_only(ptr noundef %tc, ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @__process_bio_read_only(ptr noundef %tc, ptr noundef %bio, ptr noundef null)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_bio_success(ptr nocapture noundef readnone %tc, ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @bio_endio(ptr noundef %bio) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_cell_read_only(ptr noundef %tc, ptr noundef %cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 3
  %0 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %holder, align 8
  tail call fastcc void @__process_bio_read_only(ptr noundef %tc, ptr noundef %1, ptr noundef %cell)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_cell_success(ptr nocapture noundef readonly %tc, ptr noundef %cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool, align 8
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_error(ptr noundef %3, ptr noundef %cell, i8 noundef zeroext 0) #15
  %4 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %5, ptr noundef %cell) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_discard_success(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bio = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %0 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bio, align 4
  tail call void @bio_endio(ptr noundef %1) #15
  tail call fastcc void @free_discard_mapping(ptr noundef %m)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_discard_bio(ptr noundef %tc, ptr noundef %bio) #1 align 64 {
entry:
  %virt_key = alloca %struct.dm_cell_key, align 8
  %virt_cell = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %virt_key) #15
  %0 = ptrtoint ptr %virt_key to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %virt_key, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %virt_cell) #15
  %1 = ptrtoint ptr %virt_cell to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %virt_cell, align 4, !annotation !495
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %2 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1.i, align 8
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %4 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bi_iter.i, align 8
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %6 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bi_size.i, align 8
  %shr.i = lshr i32 %7, 9
  %conv.i = zext i32 %shr.i to i64
  %add.i = add i64 %5, %conv.i
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block.i, align 8
  %conv3.i = zext i32 %9 to i64
  %sub.i = add nsw i64 %conv3.i, -1
  %add4.i = add i64 %sub.i, %5
  %sectors_per_block_shift.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 8
  %10 = ptrtoint ptr %sectors_per_block_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sectors_per_block_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp.i.i = icmp sgt i32 %11, -1
  br i1 %cmp.i.i, label %if.then.i, label %if.else180.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i = zext i32 %11 to i64
  %shr5.i = lshr i64 %add4.i, %sh_prom.i
  %shr8.i = lshr i64 %add.i, %sh_prom.i
  br label %get_bio_block_range.exit

if.else180.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add4.i)
  %cmp182.i = icmp ult i64 %add4.i, 4294967296
  br i1 %cmp182.i, label %if.then186.i, label %if.else192.i, !prof !496

if.then186.i:                                     ; preds = %if.else180.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i = trunc i64 %add4.i to i32
  %div190.i = udiv i32 %conv187.i, %9
  %conv191.i = zext i32 %div190.i to i64
  br label %if.else398.i

if.else192.i:                                     ; preds = %if.else180.i
  call void @__sanitizer_cov_trace_pc() #17
  %12 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %9, i64 %add4.i) #20, !srcloc !502
  %asmresult1.i.i = extractvalue { i64, i64 } %12, 1
  br label %if.else398.i

if.else398.i:                                     ; preds = %if.else192.i, %if.then186.i
  %b.0.i = phi i64 [ %conv191.i, %if.then186.i ], [ %asmresult1.i.i, %if.else192.i ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add.i)
  %cmp400.i = icmp ult i64 %add.i, 4294967296
  br i1 %cmp400.i, label %if.then408.i, label %if.else414.i, !prof !496

if.then408.i:                                     ; preds = %if.else398.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv409.i = trunc i64 %add.i to i32
  %div412.i = udiv i32 %conv409.i, %9
  %conv413.i = zext i32 %div412.i to i64
  br label %get_bio_block_range.exit

if.else414.i:                                     ; preds = %if.else398.i
  call void @__sanitizer_cov_trace_pc() #17
  %13 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %9, i64 %add.i) #20, !srcloc !502
  %asmresult1.i627.i = extractvalue { i64, i64 } %13, 1
  br label %get_bio_block_range.exit

get_bio_block_range.exit:                         ; preds = %if.else414.i, %if.then408.i, %if.then.i
  %b.1.i = phi i64 [ %shr5.i, %if.then.i ], [ %b.0.i, %if.then408.i ], [ %b.0.i, %if.else414.i ]
  %e.0.i = phi i64 [ %shr8.i, %if.then.i ], [ %conv413.i, %if.then408.i ], [ %asmresult1.i627.i, %if.else414.i ]
  call void @__sanitizer_cov_trace_cmp8(i64 %b.1.i, i64 %e.0.i)
  %cmp.not = icmp ult i64 %b.1.i, %e.0.i
  br i1 %cmp.not, label %if.end, label %if.then

if.then:                                          ; preds = %get_bio_block_range.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @bio_endio(ptr noundef %bio) #15
  br label %cleanup

if.end:                                           ; preds = %get_bio_block_range.exit
  %td = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %14 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %td, align 4
  %16 = ptrtoint ptr %virt_key to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %virt_key, align 8
  %call.i = tail call i64 @dm_thin_dev_id(ptr noundef %15) #15
  %dev.i = getelementptr inbounds %struct.dm_cell_key, ptr %virt_key, i32 0, i32 1
  %17 = ptrtoint ptr %dev.i to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %call.i, ptr %dev.i, align 8
  %block_begin.i = getelementptr inbounds %struct.dm_cell_key, ptr %virt_key, i32 0, i32 2
  %18 = ptrtoint ptr %block_begin.i to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %b.1.i, ptr %block_begin.i, align 8
  %block_end.i = getelementptr inbounds %struct.dm_cell_key, ptr %virt_key, i32 0, i32 3
  %19 = ptrtoint ptr %block_end.i to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %e.0.i, ptr %block_end.i, align 8
  %20 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pool1.i, align 8
  %prison.i = getelementptr inbounds %struct.pool, ptr %21, i32 0, i32 11
  %22 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prison.i, align 4
  %call.i14 = tail call ptr @dm_bio_prison_alloc_cell(ptr noundef %23, i32 noundef 3072) #15
  %24 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prison.i, align 4
  %call2.i = call i32 @dm_bio_detain(ptr noundef %25, ptr noundef nonnull %virt_key, ptr noundef %bio, ptr noundef %call.i14, ptr noundef nonnull %virt_cell) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i15 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i15, label %if.end2, label %bio_detain.exit

bio_detain.exit:                                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %26 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prison.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %27, ptr noundef %call.i14) #15
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %pool1.i, align 8
  %process_discard_cell = getelementptr inbounds %struct.pool, ptr %29, i32 0, i32 33
  %30 = ptrtoint ptr %process_discard_cell to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %process_discard_cell, align 8
  %32 = ptrtoint ptr %virt_cell to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %virt_cell, align 4
  call void %31(ptr noundef %tc, ptr noundef %33) #15
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %bio_detain.exit, %if.then
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %virt_cell) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %virt_key) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_mapping(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc1 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc1, align 4
  %pool2 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool2, align 8
  %bio3 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %4 = ptrtoint ptr %bio3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bio3, align 4
  %status = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %8 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cell, align 8
  %out_of_data_space.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %10 = ptrtoint ptr %out_of_data_space.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i.i = load i8, ptr %out_of_data_space.i.i, align 8
  %11 = and i8 %bf.load.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %bf.cast.not.i.i = icmp eq i8 %11, 0
  %conv.i.i = select i1 %bf.cast.not.i.i, i8 10, i8 3
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 11
  %12 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_error(ptr noundef %13, ptr noundef %9, i8 noundef zeroext %conv.i.i) #15
  %14 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %15, ptr noundef %9) #15
  br label %out

if.end:                                           ; preds = %entry
  %td = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 6
  %16 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %td, align 4
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 5
  %18 = ptrtoint ptr %virt_begin to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %virt_begin, align 8
  %data_block = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 7
  %20 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %data_block, align 8
  %call = tail call i32 @dm_thin_insert_block(ptr noundef %17, i64 noundef %19, i64 noundef %21) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end7, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @metadata_operation_failed(ptr noundef %3, ptr noundef nonnull @.str.99, i32 noundef %call)
  %cell6 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %22 = ptrtoint ptr %cell6 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cell6, align 8
  %out_of_data_space.i.i46 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 10
  %24 = ptrtoint ptr %out_of_data_space.i.i46 to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i.i47 = load i8, ptr %out_of_data_space.i.i46, align 8
  %25 = and i8 %bf.load.i.i47, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %25)
  %bf.cast.not.i.i48 = icmp eq i8 %25, 0
  %conv.i.i49 = select i1 %bf.cast.not.i.i48, i8 10, i8 3
  %prison.i.i50 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 11
  %26 = ptrtoint ptr %prison.i.i50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %prison.i.i50, align 4
  tail call void @dm_cell_error(ptr noundef %27, ptr noundef %23, i8 noundef zeroext %conv.i.i49) #15
  %28 = ptrtoint ptr %prison.i.i50 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prison.i.i50, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %29, ptr noundef %23) #15
  br label %out

if.end7:                                          ; preds = %if.end
  %tobool8.not = icmp eq ptr %5, null
  %cell13 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %30 = ptrtoint ptr %cell13 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cell13, align 8
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %if.end7
  %32 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %data_block, align 8
  tail call fastcc void @inc_remap_and_issue_cell(ptr noundef %1, ptr noundef %31, i64 noundef %33)
  %34 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pool2, align 8
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %5, i32 0, i32 2
  %36 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bi_opf.i.i, align 8
  %38 = and i32 %37, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.i.not.i.i = icmp eq i32 %38, 0
  br i1 %tobool.i.not.i.i, label %if.then9.if.then.i_crit_edge, label %bio_triggers_commit.exit.i

if.then9.if.then.i_crit_edge:                     ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

bio_triggers_commit.exit.i:                       ; preds = %if.then9
  %39 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %td, align 4
  %call1.i.i = tail call zeroext i1 @dm_thin_changed_this_transaction(ptr noundef %40) #15
  br i1 %call1.i.i, label %if.end.i, label %bio_triggers_commit.exit.i.if.then.i_crit_edge

bio_triggers_commit.exit.i.if.then.i_crit_edge:   ; preds = %bio_triggers_commit.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

if.then.i:                                        ; preds = %bio_triggers_commit.exit.i.if.then.i_crit_edge, %if.then9.if.then.i_crit_edge
  tail call void @bio_endio(ptr noundef nonnull %5) #15
  br label %out

if.end.i:                                         ; preds = %bio_triggers_commit.exit.i
  %41 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %td, align 4
  %call2.i = tail call zeroext i1 @dm_thin_aborted_changes(ptr noundef %42) #15
  br i1 %call2.i, label %if.then3.i, label %if.end4.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %5, i32 0, i32 6
  %43 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 10, ptr %bi_status.i.i, align 2
  tail call void @bio_endio(ptr noundef nonnull %5) #15
  br label %out

if.end4.i:                                        ; preds = %if.end.i
  %lock.i = getelementptr inbounds %struct.pool, ptr %35, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %44 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %5, align 8
  %tail.i.i = getelementptr inbounds %struct.pool, ptr %35, i32 0, i32 22, i32 1
  %45 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %46, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  %47 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %5, ptr %46, align 8
  br label %bio_list_add.exit.i

if.else.i.i:                                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #17
  %deferred_flush_completions.i = getelementptr inbounds %struct.pool, ptr %35, i32 0, i32 22
  %48 = ptrtoint ptr %deferred_flush_completions.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %5, ptr %deferred_flush_completions.i, align 4
  br label %bio_list_add.exit.i

bio_list_add.exit.i:                              ; preds = %if.else.i.i, %if.then.i.i
  %49 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %5, ptr %tail.i.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  br label %out

if.else:                                          ; preds = %if.end7
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %31, i32 0, i32 3
  %50 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %holder, align 8
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %bi_opf.i, align 8
  %and.i = and i32 %53, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 3
  br i1 %cmp.i, label %if.else.inc_all_io_entry.exit_crit_edge, label %if.end.i51

if.else.inc_all_io_entry.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i51:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %54 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pool2, align 8
  %call.i = tail call ptr @dm_per_bio_data(ptr noundef %51, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %55, i32 0, i32 28
  %56 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = tail call ptr @dm_deferred_entry_inc(ptr noundef %57) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %58 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i51, %if.else.inc_all_io_entry.exit_crit_edge
  %59 = ptrtoint ptr %cell13 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %cell13, align 8
  %holder15 = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %holder15 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %holder15, align 8
  %63 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %data_block, align 8
  %65 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %pool2, align 8
  %bi_iter.i.i = getelementptr inbounds %struct.bio, ptr %62, i32 0, i32 8
  %67 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %bi_iter.i.i, align 8
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 1
  %69 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %pool_dev.i.i, align 8
  %71 = ptrtoint ptr %70 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %70, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %62, i32 0, i32 3
  %73 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %74, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %62, i32 0, i32 1
  %75 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %76, %72
  br i1 %cmp.not.i.i.i, label %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i

inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge: ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i:                                    ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %74, -2177
  %77 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %77)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i, %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge
  %78 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %72, ptr %bi_bdev.i.i.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %62) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %66, i32 0, i32 8
  %79 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %80)
  %cmp.i.i.i = icmp sgt i32 %80, -1
  br i1 %cmp.i.i.i, label %if.then.i.i53, label %if.else.i.i54

if.then.i.i53:                                    ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %80 to i64
  %shl.i.i = shl i64 %64, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %66, i32 0, i32 7
  %81 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %82, -1
  %conv.i.i52 = zext i32 %sub.i.i to i64
  %and.i.i = and i64 %68, %conv.i.i52
  %or.i.i = or i64 %and.i.i, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i54:                                    ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %66, i32 0, i32 7
  %83 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %84 to i64
  %mul.i.i = mul i64 %64, %conv6.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %68)
  %cmp182.i.i = icmp ult i64 %68, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i54
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %68 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %84
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i54
  call void @__sanitizer_cov_trace_pc() #17
  %85 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %84, i64 %68) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %85, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i53
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i53 ]
  %86 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_store8_noabort(i32 %86)
  store i64 %storemerge.i.i, ptr %bi_iter.i.i, align 8
  tail call fastcc void @issue(ptr noundef %1, ptr noundef %62) #15
  %87 = ptrtoint ptr %cell13 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %cell13, align 8
  %89 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %89)
  %90 = load i64, ptr %data_block, align 8
  tail call fastcc void @inc_remap_and_issue_cell(ptr noundef %1, ptr noundef %88, i64 noundef %90)
  br label %out

out:                                              ; preds = %remap_and_issue.exit, %bio_list_add.exit.i, %if.then3.i, %if.then.i, %if.then5, %if.then
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %m) #15
  br i1 %call.i.i, label %if.end.i.i, label %out.list_del.exit_crit_edge

out.list_del.exit_crit_edge:                      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_del.exit

if.end.i.i:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #17
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %91 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %prev.i.i, align 4
  %93 = ptrtoint ptr %m to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %m, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %94, i32 0, i32 1
  %95 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store ptr %92, ptr %prev1.i.i.i, align 4
  %96 = ptrtoint ptr %92 to i32
  call void @__asan_store4_noabort(i32 %96)
  store volatile ptr %94, ptr %92, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %out.list_del.exit_crit_edge
  %97 = ptrtoint ptr %m to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr inttoptr (i32 256 to ptr), ptr %m, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %98 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_pool_metadata_read_write(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_bio(ptr noundef %tc, ptr noundef %bio) #1 align 64 {
entry:
  %cell = alloca ptr, align 4
  %key = alloca %struct.dm_cell_key, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %2 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %bi_iter.i, align 8
  %sectors_per_block_shift.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 8
  %4 = ptrtoint ptr %sectors_per_block_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sectors_per_block_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp.i.i = icmp sgt i32 %5, -1
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i = zext i32 %5 to i64
  %shr.i = lshr i64 %3, %sh_prom.i
  br label %get_bio_block.exit

if.else.i:                                        ; preds = %entry
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %6 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectors_per_block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %3)
  %cmp170.i = icmp ult i64 %3, 4294967296
  br i1 %cmp170.i, label %if.then174.i, label %if.else180.i, !prof !496

if.then174.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv175.i = trunc i64 %3 to i32
  %div178.i = udiv i32 %conv175.i, %7
  %conv179.i = zext i32 %div178.i to i64
  br label %get_bio_block.exit

if.else180.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %8 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %7, i64 %3) #20, !srcloc !502
  %asmresult1.i.i = extractvalue { i64, i64 } %8, 1
  br label %get_bio_block.exit

get_bio_block.exit:                               ; preds = %if.else180.i, %if.then174.i, %if.then.i
  %block_nr.0.i = phi i64 [ %shr.i, %if.then.i ], [ %conv179.i, %if.then174.i ], [ %asmresult1.i.i, %if.else180.i ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cell) #15
  %9 = ptrtoint ptr %cell to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 -1 to ptr), ptr %cell, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %key) #15
  %10 = ptrtoint ptr %key to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 -1, ptr %key, align 8
  %td = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %11 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %td, align 4
  %add.i10 = add i64 %block_nr.0.i, 1
  store i32 1, ptr %key, align 8
  %call.i.i = tail call i64 @dm_thin_dev_id(ptr noundef %12) #15
  %dev.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key, i32 0, i32 1
  %13 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %call.i.i, ptr %dev.i.i, align 8
  %block_begin.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key, i32 0, i32 2
  %14 = ptrtoint ptr %block_begin.i.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %block_nr.0.i, ptr %block_begin.i.i, align 8
  %block_end.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key, i32 0, i32 3
  %15 = ptrtoint ptr %block_end.i.i to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %add.i10, ptr %block_end.i.i, align 8
  %prison.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 11
  %16 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %prison.i, align 4
  %call.i = tail call ptr @dm_bio_prison_alloc_cell(ptr noundef %17, i32 noundef 3072) #15
  %18 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prison.i, align 4
  %call2.i = call i32 @dm_bio_detain(ptr noundef %19, ptr noundef nonnull %key, ptr noundef %bio, ptr noundef %call.i, ptr noundef nonnull %cell) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i11 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i11, label %if.end, label %bio_detain.exit

bio_detain.exit:                                  ; preds = %get_bio_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prison.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %21, ptr noundef %call.i) #15
  br label %cleanup

if.end:                                           ; preds = %get_bio_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  %22 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cell, align 4
  call void @process_cell(ptr noundef %tc, ptr noundef %23)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %bio_detain.exit
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %key) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cell) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_cell(ptr noundef %tc, ptr noundef %cell) #1 align 64 {
entry:
  %data_block.i = alloca i64, align 8
  %data_block.i.i = alloca i64, align 8
  %data_cell.i = alloca ptr, align 4
  %key.i = alloca %struct.dm_cell_key, align 8
  %lookup_result = alloca %struct.dm_thin_lookup_result, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 3
  %2 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %holder, align 8
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bi_iter.i, align 8
  %sectors_per_block_shift.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %sectors_per_block_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectors_per_block_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.i.i = icmp sgt i32 %7, -1
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i = zext i32 %7 to i64
  %shr.i = lshr i64 %5, %sh_prom.i
  br label %get_bio_block.exit

if.else.i:                                        ; preds = %entry
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %5)
  %cmp170.i = icmp ult i64 %5, 4294967296
  br i1 %cmp170.i, label %if.then174.i, label %if.else180.i, !prof !496

if.then174.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv175.i = trunc i64 %5 to i32
  %div178.i = udiv i32 %conv175.i, %9
  %conv179.i = zext i32 %div178.i to i64
  br label %get_bio_block.exit

if.else180.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %10 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %9, i64 %5) #20, !srcloc !502
  %asmresult1.i.i = extractvalue { i64, i64 } %10, 1
  br label %get_bio_block.exit

get_bio_block.exit:                               ; preds = %if.else180.i, %if.then174.i, %if.then.i
  %block_nr.0.i = phi i64 [ %shr.i, %if.then.i ], [ %conv179.i, %if.then174.i ], [ %asmresult1.i.i, %if.else180.i ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %lookup_result) #15
  %11 = call ptr @memset(ptr %lookup_result, i32 255, i32 16)
  %requeue_mode = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 8
  %12 = ptrtoint ptr %requeue_mode to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %requeue_mode, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %if.end, label %if.then

if.then:                                          ; preds = %get_bio_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 11
  %13 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_error(ptr noundef %14, ptr noundef %cell, i8 noundef zeroext 11) #15
  %15 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %16, ptr noundef %cell) #15
  br label %cleanup

if.end:                                           ; preds = %get_bio_block.exit
  %td = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %17 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %td, align 4
  %call2 = call i32 @dm_thin_find_block(ptr noundef %18, i64 noundef %block_nr.0.i, i32 noundef 1, ptr noundef nonnull %lookup_result) #15
  %19 = zext i32 %call2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.220)
  switch i32 %call2, label %sw.default [
    i32 0, label %sw.bb
    i32 -61, label %sw.bb10
  ]

sw.bb:                                            ; preds = %if.end
  %shared = getelementptr inbounds %struct.dm_thin_lookup_result, ptr %lookup_result, i32 0, i32 1
  %20 = ptrtoint ptr %shared to i32
  call void @__asan_load1_noabort(i32 %20)
  %bf.load3 = load i8, ptr %shared, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load3)
  %bf.cast5.not = icmp sgt i8 %bf.load3, -1
  br i1 %bf.cast5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %sw.bb
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_cell.i) #15
  %21 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 -1 to ptr), ptr %data_cell.i, align 4, !annotation !495
  %22 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool1, align 8
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %key.i) #15
  %24 = ptrtoint ptr %key.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 4294967295, ptr %key.i, align 8
  %25 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %td, align 4
  %27 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %lookup_result, align 8
  %add.i.i = add i64 %28, 1
  %call.i.i.i = call i64 @dm_thin_dev_id(ptr noundef %26) #15
  %dev.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 1
  %29 = ptrtoint ptr %dev.i.i.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %call.i.i.i, ptr %dev.i.i.i, align 8
  %block_begin.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 2
  %30 = ptrtoint ptr %block_begin.i.i.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %28, ptr %block_begin.i.i.i, align 8
  %block_end.i.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %key.i, i32 0, i32 3
  %31 = ptrtoint ptr %block_end.i.i.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %add.i.i, ptr %block_end.i.i.i, align 8
  %prison.i.i88 = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 11
  %32 = ptrtoint ptr %prison.i.i88 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %prison.i.i88, align 4
  %call.i.i = call ptr @dm_bio_prison_alloc_cell(ptr noundef %33, i32 noundef 3072) #15
  %34 = ptrtoint ptr %prison.i.i88 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prison.i.i88, align 4
  %call2.i.i = call i32 @dm_bio_detain(ptr noundef %35, ptr noundef nonnull %key.i, ptr noundef %3, ptr noundef %call.i.i, ptr noundef nonnull %data_cell.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i, label %if.then.i89

if.then.i89:                                      ; preds = %if.then6
  %36 = ptrtoint ptr %prison.i.i88 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prison.i.i88, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %37, ptr noundef %call.i.i) #15
  %38 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pool1, align 8
  %lock.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i.i) #15
  %deferred_bio_list.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i.i = getelementptr inbounds %struct.pool, ptr %39, i32 0, i32 11
  %40 = ptrtoint ptr %prison.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prison.i.i.i, align 4
  call void @dm_cell_release_no_holder(ptr noundef %41, ptr noundef %cell, ptr noundef %deferred_bio_list.i.i) #15
  %42 = ptrtoint ptr %prison.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prison.i.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %43, ptr noundef %cell) #15
  %44 = ptrtoint ptr %deferred_bio_list.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %deferred_bio_list.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %45, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i.i, i32 noundef %call3.i.i) #15
  br i1 %cmp.i.not.i.i, label %if.then.i89.process_shared_bio.exit_crit_edge, label %if.then.i35.i

if.then.i89.process_shared_bio.exit_crit_edge:    ; preds = %if.then.i89
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_shared_bio.exit

if.then.i35.i:                                    ; preds = %if.then.i89
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i.i = getelementptr inbounds %struct.pool, ptr %39, i32 0, i32 14
  %46 = ptrtoint ptr %wq.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %wq.i.i.i, align 8
  %worker.i.i.i = getelementptr inbounds %struct.pool, ptr %39, i32 0, i32 13
  %call.i.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %47, ptr noundef %worker.i.i.i) #15
  br label %process_shared_bio.exit

if.end.i:                                         ; preds = %if.then6
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 2
  %48 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %bi_opf.i, align 8
  %and.i.i90 = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i90)
  %tobool.i.not.i = icmp eq i32 %and.i.i90, 0
  br i1 %tobool.i.not.i, label %if.end.i.if.else.i92_crit_edge, label %land.lhs.true.i

if.end.i.if.else.i92_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i92

land.lhs.true.i:                                  ; preds = %if.end.i
  %bi_size.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8, i32 1
  %50 = ptrtoint ptr %bi_size.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %bi_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool4.not.i = icmp eq i32 %51, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i.if.else.i92_crit_edge, label %if.then5.i

land.lhs.true.i.if.else.i92_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else.i92

if.then5.i:                                       ; preds = %land.lhs.true.i
  %52 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %data_cell.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data_block.i.i) #15
  %54 = ptrtoint ptr %data_block.i.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 -1, ptr %data_block.i.i, align 8, !annotation !495
  %55 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pool1, align 8
  %call.i37.i = call fastcc i32 @alloc_data_block(ptr noundef %tc, ptr noundef nonnull %data_block.i.i) #15
  %57 = zext i32 %call.i37.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.221)
  switch i32 %call.i37.i, label %sw.default.i.i [
    i32 0, label %sw.bb.i.i
    i32 -28, label %sw.bb3.i.i
  ]

sw.bb.i.i:                                        ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #17
  %58 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %lookup_result, align 8
  %60 = ptrtoint ptr %data_block.i.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %data_block.i.i, align 8
  %pool_dev.i.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %62 = ptrtoint ptr %pool_dev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %pool_dev.i.i.i, align 8
  %64 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %pool1, align 8
  %sectors_per_block.i.i.i = getelementptr inbounds %struct.pool, ptr %65, i32 0, i32 7
  %66 = ptrtoint ptr %sectors_per_block.i.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %sectors_per_block.i.i.i, align 8
  %conv.i.i.i = zext i32 %67 to i64
  call fastcc void @schedule_copy(ptr noundef %tc, i64 noundef %block_nr.0.i, ptr noundef %63, i64 noundef %59, i64 noundef %61, ptr noundef %53, ptr noundef %3, i64 noundef %conv.i.i.i) #15
  br label %break_sharing.exit.i

sw.bb3.i.i:                                       ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @retry_bios_on_resume(ptr noundef %56, ptr noundef %53) #15
  br label %break_sharing.exit.i

sw.default.i.i:                                   ; preds = %if.then5.i
  %call4.i.i = call i32 @___ratelimit(ptr noundef nonnull @break_sharing._rs, ptr noundef nonnull @__func__.break_sharing) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool.not.i38.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool.not.i38.i, label %sw.default.i.i.if.end.i.i_crit_edge, label %do.end.i.i

sw.default.i.i.if.end.i.i_crit_edge:              ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %sw.default.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call5.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.105, ptr noundef nonnull @__func__.break_sharing, i32 noundef %call.i37.i) #21
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %sw.default.i.i.if.end.i.i_crit_edge
  %out_of_data_space.i.i.i.i = getelementptr inbounds %struct.pool, ptr %56, i32 0, i32 10
  %68 = ptrtoint ptr %out_of_data_space.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %bf.load.i.i.i.i = load i8, ptr %out_of_data_space.i.i.i.i, align 8
  %69 = and i8 %bf.load.i.i.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %bf.cast.not.i.i.i.i = icmp eq i8 %69, 0
  %conv.i.i.i.i = select i1 %bf.cast.not.i.i.i.i, i8 10, i8 3
  %prison.i.i.i.i = getelementptr inbounds %struct.pool, ptr %56, i32 0, i32 11
  %70 = ptrtoint ptr %prison.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %prison.i.i.i.i, align 4
  call void @dm_cell_error(ptr noundef %71, ptr noundef %53, i8 noundef zeroext %conv.i.i.i.i) #15
  %72 = ptrtoint ptr %prison.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %prison.i.i.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %73, ptr noundef %53) #15
  br label %break_sharing.exit.i

break_sharing.exit.i:                             ; preds = %if.end.i.i, %sw.bb3.i.i, %sw.bb.i.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data_block.i.i) #15
  %74 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pool1, align 8
  %lock.i40.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i41.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i40.i) #15
  %deferred_bio_list.i42.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i43.i = getelementptr inbounds %struct.pool, ptr %75, i32 0, i32 11
  %76 = ptrtoint ptr %prison.i.i43.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %prison.i.i43.i, align 4
  call void @dm_cell_release_no_holder(ptr noundef %77, ptr noundef %cell, ptr noundef %deferred_bio_list.i42.i) #15
  %78 = ptrtoint ptr %prison.i.i43.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %prison.i.i43.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %79, ptr noundef %cell) #15
  %80 = ptrtoint ptr %deferred_bio_list.i42.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %deferred_bio_list.i42.i, align 4
  %cmp.i.not.i44.i = icmp eq ptr %81, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i40.i, i32 noundef %call3.i41.i) #15
  br i1 %cmp.i.not.i44.i, label %break_sharing.exit.i.process_shared_bio.exit_crit_edge, label %if.then.i48.i

break_sharing.exit.i.process_shared_bio.exit_crit_edge: ; preds = %break_sharing.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %process_shared_bio.exit

if.then.i48.i:                                    ; preds = %break_sharing.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i45.i = getelementptr inbounds %struct.pool, ptr %75, i32 0, i32 14
  %82 = ptrtoint ptr %wq.i.i45.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %wq.i.i45.i, align 8
  %worker.i.i46.i = getelementptr inbounds %struct.pool, ptr %75, i32 0, i32 13
  %call.i.i.i47.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %83, ptr noundef %worker.i.i46.i) #15
  br label %process_shared_bio.exit

if.else.i92:                                      ; preds = %land.lhs.true.i.if.else.i92_crit_edge, %if.end.i.if.else.i92_crit_edge
  %call6.i = call ptr @dm_per_bio_data(ptr noundef %3, i32 noundef 32) #15
  %shared_read_ds.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 27
  %84 = ptrtoint ptr %shared_read_ds.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %shared_read_ds.i, align 8
  %call7.i = call ptr @dm_deferred_entry_inc(ptr noundef %85) #15
  %shared_read_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call6.i, i32 0, i32 1
  %86 = ptrtoint ptr %shared_read_entry.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %call7.i, ptr %shared_read_entry.i, align 4
  %87 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %bi_opf.i, align 8
  %and.i51.i = and i32 %88, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i51.i)
  %cmp.i.i91 = icmp eq i32 %and.i51.i, 3
  br i1 %cmp.i.i91, label %if.else.i92.inc_all_io_entry.exit.i_crit_edge, label %if.end.i53.i

if.else.i92.inc_all_io_entry.exit.i_crit_edge:    ; preds = %if.else.i92
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit.i

if.end.i53.i:                                     ; preds = %if.else.i92
  call void @__sanitizer_cov_trace_pc() #17
  %call.i52.i = call ptr @dm_per_bio_data(ptr noundef %3, i32 noundef 32) #15
  %all_io_ds.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 28
  %89 = ptrtoint ptr %all_io_ds.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %all_io_ds.i.i, align 4
  %call1.i.i = call ptr @dm_deferred_entry_inc(ptr noundef %90) #15
  %all_io_entry.i.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i52.i, i32 0, i32 2
  %91 = ptrtoint ptr %all_io_entry.i.i to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call1.i.i, ptr %all_io_entry.i.i, align 4
  br label %inc_all_io_entry.exit.i

inc_all_io_entry.exit.i:                          ; preds = %if.end.i53.i, %if.else.i92.inc_all_io_entry.exit.i_crit_edge
  %92 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %lookup_result, align 8
  %94 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %pool1, align 8
  %96 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %96)
  %97 = load i64, ptr %bi_iter.i, align 8
  %pool_dev.i.i54.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %98 = ptrtoint ptr %pool_dev.i.i54.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %pool_dev.i.i54.i, align 8
  %100 = ptrtoint ptr %99 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %99, align 4
  %bi_flags.i.i.i.i.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 3
  %102 = ptrtoint ptr %bi_flags.i.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %bi_flags.i.i.i.i.i, align 4
  %conv1.i.i.i.i.i = and i16 %103, -2049
  store i16 %conv1.i.i.i.i.i, ptr %bi_flags.i.i.i.i.i, align 4
  %bi_bdev.i.i.i.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 1
  %104 = ptrtoint ptr %bi_bdev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %bi_bdev.i.i.i.i, align 4
  %cmp.not.i.i.i.i = icmp eq ptr %105, %101
  br i1 %cmp.not.i.i.i.i, label %inc_all_io_entry.exit.i.bio_set_dev.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

inc_all_io_entry.exit.i.bio_set_dev.exit.i.i.i_crit_edge: ; preds = %inc_all_io_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %inc_all_io_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i.i = and i16 %103, -2177
  %106 = ptrtoint ptr %bi_flags.i.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %106)
  store i16 %conv1.i8.i.i.i.i, ptr %bi_flags.i.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i.i

bio_set_dev.exit.i.i.i:                           ; preds = %if.then.i.i.i.i, %inc_all_io_entry.exit.i.bio_set_dev.exit.i.i.i_crit_edge
  %107 = ptrtoint ptr %bi_bdev.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store ptr %101, ptr %bi_bdev.i.i.i.i, align 4
  call void @bio_associate_blkg(ptr noundef %3) #15
  %sectors_per_block_shift.i.i.i.i = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 8
  %108 = ptrtoint ptr %sectors_per_block_shift.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %sectors_per_block_shift.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %109)
  %cmp.i.i.i.i = icmp sgt i32 %109, -1
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i, label %if.else.i.i.i

if.then.i.i.i:                                    ; preds = %bio_set_dev.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i.i = zext i32 %109 to i64
  %shl.i.i.i = shl i64 %93, %sh_prom.i.i.i
  %sectors_per_block.i.i55.i = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 7
  %110 = ptrtoint ptr %sectors_per_block.i.i55.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %sectors_per_block.i.i55.i, align 8
  %sub.i.i.i = add i32 %111, -1
  %conv.i.i56.i = zext i32 %sub.i.i.i to i64
  %and.i.i.i = and i64 %97, %conv.i.i56.i
  %or.i.i.i = or i64 %and.i.i.i, %shl.i.i.i
  br label %remap_and_issue.exit.i

if.else.i.i.i:                                    ; preds = %bio_set_dev.exit.i.i.i
  %sectors_per_block5.i.i.i = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 7
  %112 = ptrtoint ptr %sectors_per_block5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %sectors_per_block5.i.i.i, align 8
  %conv6.i.i.i = zext i32 %113 to i64
  %mul.i.i.i = mul i64 %93, %conv6.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %97)
  %cmp182.i.i.i = icmp ult i64 %97, 4294967296
  br i1 %cmp182.i.i.i, label %if.then186.i.i.i, label %if.else192.i.i.i, !prof !496

if.then186.i.i.i:                                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i.i = trunc i64 %97 to i32
  %rem188.i.i.i = urem i32 %conv187.i.i.i, %113
  br label %if.end196.i.i.i

if.else192.i.i.i:                                 ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %114 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %113, i64 %97) #20, !srcloc !502
  %asmresult.i296.i.i.i = extractvalue { i64, i64 } %114, 0
  %shr.i.i.i.i = lshr i64 %asmresult.i296.i.i.i, 32
  %conv.i.i.i57.i = trunc i64 %shr.i.i.i.i to i32
  br label %if.end196.i.i.i

if.end196.i.i.i:                                  ; preds = %if.else192.i.i.i, %if.then186.i.i.i
  %__rem.0.i.i.i = phi i32 [ %rem188.i.i.i, %if.then186.i.i.i ], [ %conv.i.i.i57.i, %if.else192.i.i.i ]
  %conv198.i.i.i = zext i32 %__rem.0.i.i.i to i64
  %add199.i.i.i = add i64 %mul.i.i.i, %conv198.i.i.i
  br label %remap_and_issue.exit.i

remap_and_issue.exit.i:                           ; preds = %if.end196.i.i.i, %if.then.i.i.i
  %storemerge.i.i.i = phi i64 [ %add199.i.i.i, %if.end196.i.i.i ], [ %or.i.i.i, %if.then.i.i.i ]
  %115 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %115)
  store i64 %storemerge.i.i.i, ptr %bi_iter.i, align 8
  call fastcc void @issue(ptr noundef %tc, ptr noundef %3) #15
  %116 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %data_cell.i, align 4
  %118 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %118)
  %119 = load i64, ptr %lookup_result, align 8
  call fastcc void @remap_and_issue_shared_cell(ptr noundef %tc, ptr noundef %117, i64 noundef %119) #15
  %120 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %120)
  %121 = load i64, ptr %lookup_result, align 8
  call fastcc void @remap_and_issue_shared_cell(ptr noundef %tc, ptr noundef %cell, i64 noundef %121) #15
  br label %process_shared_bio.exit

process_shared_bio.exit:                          ; preds = %remap_and_issue.exit.i, %if.then.i48.i, %break_sharing.exit.i.process_shared_bio.exit_crit_edge, %if.then.i35.i, %if.then.i89.process_shared_bio.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %key.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_cell.i) #15
  br label %cleanup

if.else:                                          ; preds = %sw.bb
  %bi_opf.i93 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 2
  %122 = ptrtoint ptr %bi_opf.i93 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %bi_opf.i93, align 8
  %and.i = and i32 %123, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i)
  %cmp.i94 = icmp eq i32 %and.i, 3
  br i1 %cmp.i94, label %if.else.inc_all_io_entry.exit_crit_edge, label %if.end.i95

if.else.inc_all_io_entry.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i95:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %call.i = call ptr @dm_per_bio_data(ptr noundef %3, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 28
  %124 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = call ptr @dm_deferred_entry_inc(ptr noundef %125) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %126 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i95, %if.else.inc_all_io_entry.exit_crit_edge
  %127 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %lookup_result, align 8
  %129 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %pool1, align 8
  %131 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %131)
  %132 = load i64, ptr %bi_iter.i, align 8
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %133 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %pool_dev.i.i, align 8
  %135 = ptrtoint ptr %134 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %134, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 3
  %137 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %138, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 1
  %139 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %140, %136
  br i1 %cmp.not.i.i.i, label %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i96

inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge: ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i96:                                  ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %138, -2177
  %141 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %141)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i96, %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge
  %142 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr %136, ptr %bi_bdev.i.i.i, align 4
  call void @bio_associate_blkg(ptr noundef %3) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %130, i32 0, i32 8
  %143 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %144)
  %cmp.i.i.i = icmp sgt i32 %144, -1
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i98

if.then.i.i:                                      ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %144 to i64
  %shl.i.i = shl i64 %128, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %130, i32 0, i32 7
  %145 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %146, -1
  %conv.i.i = zext i32 %sub.i.i to i64
  %and.i.i97 = and i64 %132, %conv.i.i
  %or.i.i = or i64 %and.i.i97, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i98:                                    ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %130, i32 0, i32 7
  %147 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %148 to i64
  %mul.i.i = mul i64 %128, %conv6.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %132)
  %cmp182.i.i = icmp ult i64 %132, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i98
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %132 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %148
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i98
  call void @__sanitizer_cov_trace_pc() #17
  %149 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %148, i64 %132) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %149, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i103 = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i103, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i ]
  %150 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %150)
  store i64 %storemerge.i.i, ptr %bi_iter.i, align 8
  call fastcc void @issue(ptr noundef %tc, ptr noundef %3) #15
  %151 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %151)
  %152 = load i64, ptr %lookup_result, align 8
  call fastcc void @inc_remap_and_issue_cell(ptr noundef %tc, ptr noundef %cell, i64 noundef %152)
  br label %cleanup

sw.bb10:                                          ; preds = %if.end
  %bi_opf = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 2
  %153 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %bi_opf, align 8
  %and = and i32 %154, 255
  %and.i104 = and i32 %154, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i104)
  %tobool.i.not = icmp eq i32 %and.i104, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %if.else33.thread

land.lhs.true:                                    ; preds = %sw.bb10
  %origin_dev = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 2
  %155 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %origin_dev, align 4
  %tobool.not = icmp eq ptr %156, null
  br i1 %tobool.not, label %if.else33, label %if.then12

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %cmp.i107 = icmp eq i32 %and, 3
  br i1 %cmp.i107, label %if.then12.inc_all_io_entry.exit113_crit_edge, label %if.end.i112

if.then12.inc_all_io_entry.exit113_crit_edge:     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit113

if.end.i112:                                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #17
  %call.i108 = call ptr @dm_per_bio_data(ptr noundef %3, i32 noundef 32) #15
  %all_io_ds.i109 = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 28
  %157 = ptrtoint ptr %all_io_ds.i109 to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load ptr, ptr %all_io_ds.i109, align 4
  %call1.i110 = call ptr @dm_deferred_entry_inc(ptr noundef %158) #15
  %all_io_entry.i111 = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i108, i32 0, i32 2
  %159 = ptrtoint ptr %all_io_entry.i111 to i32
  call void @__asan_store4_noabort(i32 %159)
  store ptr %call1.i110, ptr %all_io_entry.i111, align 4
  br label %inc_all_io_entry.exit113

inc_all_io_entry.exit113:                         ; preds = %if.end.i112, %if.then12.inc_all_io_entry.exit113_crit_edge
  %160 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %pool1, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i115 = getelementptr inbounds %struct.pool, ptr %161, i32 0, i32 11
  %162 = ptrtoint ptr %prison.i.i115 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %prison.i.i115, align 4
  call void @dm_cell_release_no_holder(ptr noundef %163, ptr noundef %cell, ptr noundef %deferred_bio_list.i) #15
  %164 = ptrtoint ptr %prison.i.i115 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %prison.i.i115, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %165, ptr noundef %cell) #15
  %166 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %167, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %inc_all_io_entry.exit113.cell_defer_no_holder.exit_crit_edge, label %if.then.i117

inc_all_io_entry.exit113.cell_defer_no_holder.exit_crit_edge: ; preds = %inc_all_io_entry.exit113
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit

if.then.i117:                                     ; preds = %inc_all_io_entry.exit113
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %161, i32 0, i32 14
  %168 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %161, i32 0, i32 13
  %call.i.i.i116 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %169, ptr noundef %worker.i.i) #15
  br label %cell_defer_no_holder.exit

cell_defer_no_holder.exit:                        ; preds = %if.then.i117, %inc_all_io_entry.exit113.cell_defer_no_holder.exit_crit_edge
  %170 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %170)
  %171 = load i64, ptr %bi_iter.i, align 8
  %bi_size = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8, i32 1
  %172 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %bi_size, align 8
  %shr = lshr i32 %173, 9
  %conv = zext i32 %shr to i64
  %add = add i64 %171, %conv
  %origin_size = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 3
  %174 = ptrtoint ptr %origin_size to i32
  call void @__asan_load8_noabort(i32 %174)
  %175 = load i64, ptr %origin_size, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add, i64 %175)
  %cmp14.not = icmp ugt i64 %add, %175
  br i1 %cmp14.not, label %if.else17, label %if.then16

if.then16:                                        ; preds = %cell_defer_no_holder.exit
  %176 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %origin_dev, align 4
  %178 = ptrtoint ptr %177 to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %177, align 4
  %bi_flags.i.i.i.i119 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 3
  %180 = ptrtoint ptr %bi_flags.i.i.i.i119 to i32
  call void @__asan_load2_noabort(i32 %180)
  %181 = load i16, ptr %bi_flags.i.i.i.i119, align 4
  %conv1.i.i.i.i120 = and i16 %181, -2049
  store i16 %conv1.i.i.i.i120, ptr %bi_flags.i.i.i.i119, align 4
  %bi_bdev.i.i.i121 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 1
  %182 = ptrtoint ptr %bi_bdev.i.i.i121 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %bi_bdev.i.i.i121, align 4
  %cmp.not.i.i.i122 = icmp eq ptr %183, %179
  br i1 %cmp.not.i.i.i122, label %if.then16.remap_to_origin_and_issue.exit_crit_edge, label %if.then.i.i.i124

if.then16.remap_to_origin_and_issue.exit_crit_edge: ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  br label %remap_to_origin_and_issue.exit

if.then.i.i.i124:                                 ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i123 = and i16 %181, -2177
  %184 = ptrtoint ptr %bi_flags.i.i.i.i119 to i32
  call void @__asan_store2_noabort(i32 %184)
  store i16 %conv1.i8.i.i.i123, ptr %bi_flags.i.i.i.i119, align 4
  br label %remap_to_origin_and_issue.exit

remap_to_origin_and_issue.exit:                   ; preds = %if.then.i.i.i124, %if.then16.remap_to_origin_and_issue.exit_crit_edge
  %185 = ptrtoint ptr %bi_bdev.i.i.i121 to i32
  call void @__asan_store4_noabort(i32 %185)
  store ptr %179, ptr %bi_bdev.i.i.i121, align 4
  call void @bio_associate_blkg(ptr noundef %3) #15
  call fastcc void @issue(ptr noundef %tc, ptr noundef %3) #15
  br label %cleanup

if.else17:                                        ; preds = %cell_defer_no_holder.exit
  call void @__sanitizer_cov_trace_cmp8(i64 %171, i64 %175)
  %cmp21 = icmp ult i64 %171, %175
  call void @zero_fill_bio(ptr noundef %3) #15
  br i1 %cmp21, label %if.then23, label %if.else30

if.then23:                                        ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #17
  %186 = ptrtoint ptr %origin_size to i32
  call void @__asan_load8_noabort(i32 %186)
  %187 = load i64, ptr %origin_size, align 8
  %188 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %188)
  %189 = load i64, ptr %bi_iter.i, align 8
  %sub = sub i64 %187, %189
  %sub.tr = trunc i64 %sub to i32
  %conv27 = shl i32 %sub.tr, 9
  %190 = ptrtoint ptr %bi_size to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %conv27, ptr %bi_size, align 8
  call fastcc void @remap_to_origin_and_issue(ptr noundef %tc, ptr noundef %3)
  br label %cleanup

if.else30:                                        ; preds = %if.else17
  call void @__sanitizer_cov_trace_pc() #17
  call void @bio_endio(ptr noundef %3) #15
  br label %cleanup

if.else33:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data_block.i) #15
  %191 = ptrtoint ptr %data_block.i to i32
  call void @__asan_store8_noabort(i32 %191)
  store i64 -1, ptr %data_block.i, align 8, !annotation !495
  %192 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %pool1, align 8
  %bi_size.i126 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8, i32 1
  %194 = ptrtoint ptr %bi_size.i126 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %bi_size.i126, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %195)
  %tobool.not.i127 = icmp eq i32 %195, 0
  br i1 %tobool.not.i127, label %if.else33.if.then.i130_crit_edge, label %if.then2.i

if.else33.if.then.i130_crit_edge:                 ; preds = %if.else33
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i130

if.else33.thread:                                 ; preds = %sw.bb10
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data_block.i) #15
  %196 = ptrtoint ptr %data_block.i to i32
  call void @__asan_store8_noabort(i32 %196)
  store i64 -1, ptr %data_block.i, align 8, !annotation !495
  %197 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %pool1, align 8
  %bi_size.i126309 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 8, i32 1
  %199 = ptrtoint ptr %bi_size.i126309 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %bi_size.i126309, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %200)
  %tobool.not.i127310 = icmp eq i32 %200, 0
  br i1 %tobool.not.i127310, label %if.else33.thread.if.then.i130_crit_edge, label %if.end3.i

if.else33.thread.if.then.i130_crit_edge:          ; preds = %if.else33.thread
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i130

if.then.i130:                                     ; preds = %if.else33.thread.if.then.i130_crit_edge, %if.else33.if.then.i130_crit_edge
  %201 = phi ptr [ %198, %if.else33.thread.if.then.i130_crit_edge ], [ %193, %if.else33.if.then.i130_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %cmp.i.i129 = icmp eq i32 %and, 3
  br i1 %cmp.i.i129, label %if.then.i130.inc_all_io_entry.exit.i141_crit_edge, label %if.end.i.i135

if.then.i130.inc_all_io_entry.exit.i141_crit_edge: ; preds = %if.then.i130
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit.i141

if.end.i.i135:                                    ; preds = %if.then.i130
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i131 = call ptr @dm_per_bio_data(ptr noundef %3, i32 noundef 32) #15
  %all_io_ds.i.i132 = getelementptr inbounds %struct.pool, ptr %201, i32 0, i32 28
  %202 = ptrtoint ptr %all_io_ds.i.i132 to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %all_io_ds.i.i132, align 4
  %call1.i.i133 = call ptr @dm_deferred_entry_inc(ptr noundef %203) #15
  %all_io_entry.i.i134 = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i.i131, i32 0, i32 2
  %204 = ptrtoint ptr %all_io_entry.i.i134 to i32
  call void @__asan_store4_noabort(i32 %204)
  store ptr %call1.i.i133, ptr %all_io_entry.i.i134, align 4
  br label %inc_all_io_entry.exit.i141

inc_all_io_entry.exit.i141:                       ; preds = %if.end.i.i135, %if.then.i130.inc_all_io_entry.exit.i141_crit_edge
  %205 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %pool1, align 8
  %lock.i.i136 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i.i137 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i.i136) #15
  %deferred_bio_list.i.i138 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i.i139 = getelementptr inbounds %struct.pool, ptr %206, i32 0, i32 11
  %207 = ptrtoint ptr %prison.i.i.i139 to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load ptr, ptr %prison.i.i.i139, align 4
  call void @dm_cell_release_no_holder(ptr noundef %208, ptr noundef %cell, ptr noundef %deferred_bio_list.i.i138) #15
  %209 = ptrtoint ptr %prison.i.i.i139 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load ptr, ptr %prison.i.i.i139, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %210, ptr noundef %cell) #15
  %211 = ptrtoint ptr %deferred_bio_list.i.i138 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %deferred_bio_list.i.i138, align 4
  %cmp.i.not.i.i140 = icmp eq ptr %212, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i.i136, i32 noundef %call3.i.i137) #15
  br i1 %cmp.i.not.i.i140, label %inc_all_io_entry.exit.i141.cell_defer_no_holder.exit.i_crit_edge, label %if.then.i.i145

inc_all_io_entry.exit.i141.cell_defer_no_holder.exit.i_crit_edge: ; preds = %inc_all_io_entry.exit.i141
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit.i

if.then.i.i145:                                   ; preds = %inc_all_io_entry.exit.i141
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i.i142 = getelementptr inbounds %struct.pool, ptr %206, i32 0, i32 14
  %213 = ptrtoint ptr %wq.i.i.i142 to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %wq.i.i.i142, align 8
  %worker.i.i.i143 = getelementptr inbounds %struct.pool, ptr %206, i32 0, i32 13
  %call.i.i.i.i144 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %214, ptr noundef %worker.i.i.i143) #15
  br label %cell_defer_no_holder.exit.i

cell_defer_no_holder.exit.i:                      ; preds = %if.then.i.i145, %inc_all_io_entry.exit.i141.cell_defer_no_holder.exit.i_crit_edge
  %215 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %pool1, align 8
  %217 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %bi_iter.i, align 8
  %pool_dev.i.i.i147 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %219 = ptrtoint ptr %pool_dev.i.i.i147 to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %pool_dev.i.i.i147, align 8
  %221 = ptrtoint ptr %220 to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %220, align 4
  %bi_flags.i.i.i.i.i148 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 3
  %223 = ptrtoint ptr %bi_flags.i.i.i.i.i148 to i32
  call void @__asan_load2_noabort(i32 %223)
  %224 = load i16, ptr %bi_flags.i.i.i.i.i148, align 4
  %conv1.i.i.i.i.i149 = and i16 %224, -2049
  store i16 %conv1.i.i.i.i.i149, ptr %bi_flags.i.i.i.i.i148, align 4
  %bi_bdev.i.i.i.i150 = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 1
  %225 = ptrtoint ptr %bi_bdev.i.i.i.i150 to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load ptr, ptr %bi_bdev.i.i.i.i150, align 4
  %cmp.not.i.i.i.i151 = icmp eq ptr %226, %222
  br i1 %cmp.not.i.i.i.i151, label %cell_defer_no_holder.exit.i.bio_set_dev.exit.i.i.i157_crit_edge, label %if.then.i.i.i.i153

cell_defer_no_holder.exit.i.bio_set_dev.exit.i.i.i157_crit_edge: ; preds = %cell_defer_no_holder.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i.i157

if.then.i.i.i.i153:                               ; preds = %cell_defer_no_holder.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i.i152 = and i16 %224, -2177
  %227 = ptrtoint ptr %bi_flags.i.i.i.i.i148 to i32
  call void @__asan_store2_noabort(i32 %227)
  store i16 %conv1.i8.i.i.i.i152, ptr %bi_flags.i.i.i.i.i148, align 4
  br label %bio_set_dev.exit.i.i.i157

bio_set_dev.exit.i.i.i157:                        ; preds = %if.then.i.i.i.i153, %cell_defer_no_holder.exit.i.bio_set_dev.exit.i.i.i157_crit_edge
  %228 = ptrtoint ptr %bi_bdev.i.i.i.i150 to i32
  call void @__asan_store4_noabort(i32 %228)
  store ptr %222, ptr %bi_bdev.i.i.i.i150, align 4
  call void @bio_associate_blkg(ptr noundef %3) #15
  %sectors_per_block_shift.i.i.i.i154 = getelementptr inbounds %struct.pool, ptr %216, i32 0, i32 8
  %229 = ptrtoint ptr %sectors_per_block_shift.i.i.i.i154 to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %sectors_per_block_shift.i.i.i.i154, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %230)
  %cmp.i.i.i.i155 = icmp sgt i32 %230, -1
  %sectors_per_block.i.i.i156 = getelementptr inbounds %struct.pool, ptr %216, i32 0, i32 7
  %231 = ptrtoint ptr %sectors_per_block.i.i.i156 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %sectors_per_block.i.i.i156, align 8
  br i1 %cmp.i.i.i.i155, label %if.then.i.i.i161, label %if.else180.i.i.i274

if.then.i.i.i161:                                 ; preds = %bio_set_dev.exit.i.i.i157
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i.i158 = add i32 %232, -1
  %conv.i.i.i159 = zext i32 %sub.i.i.i158 to i64
  %and.i.i.i160 = and i64 %218, %conv.i.i.i159
  br label %remap_and_issue.exit.i286

if.else180.i.i.i274:                              ; preds = %bio_set_dev.exit.i.i.i157
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %218)
  %cmp182.i.i.i273 = icmp ult i64 %218, 4294967296
  br i1 %cmp182.i.i.i273, label %if.then186.i.i.i277, label %if.else192.i.i.i281, !prof !496

if.then186.i.i.i277:                              ; preds = %if.else180.i.i.i274
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i.i275 = trunc i64 %218 to i32
  %rem188.i.i.i276 = urem i32 %conv187.i.i.i275, %232
  br label %if.end196.i.i.i284

if.else192.i.i.i281:                              ; preds = %if.else180.i.i.i274
  call void @__sanitizer_cov_trace_pc() #17
  %233 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %232, i64 %218) #20, !srcloc !502
  %asmresult.i296.i.i.i278 = extractvalue { i64, i64 } %233, 0
  %shr.i.i.i.i279 = lshr i64 %asmresult.i296.i.i.i278, 32
  %conv.i.i.i.i280 = trunc i64 %shr.i.i.i.i279 to i32
  br label %if.end196.i.i.i284

if.end196.i.i.i284:                               ; preds = %if.else192.i.i.i281, %if.then186.i.i.i277
  %__rem.0.i.i.i282 = phi i32 [ %rem188.i.i.i276, %if.then186.i.i.i277 ], [ %conv.i.i.i.i280, %if.else192.i.i.i281 ]
  %conv198.i.i.i283 = zext i32 %__rem.0.i.i.i282 to i64
  br label %remap_and_issue.exit.i286

remap_and_issue.exit.i286:                        ; preds = %if.end196.i.i.i284, %if.then.i.i.i161
  %storemerge.i.i.i285 = phi i64 [ %conv198.i.i.i283, %if.end196.i.i.i284 ], [ %and.i.i.i160, %if.then.i.i.i161 ]
  %234 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %234)
  store i64 %storemerge.i.i.i285, ptr %bi_iter.i, align 8
  call fastcc void @issue(ptr noundef %tc, ptr noundef %3) #15
  br label %provision_block.exit

if.then2.i:                                       ; preds = %if.else33
  call void @zero_fill_bio(ptr noundef %3) #15
  %235 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load ptr, ptr %pool1, align 8
  %lock.i42.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i43.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i42.i) #15
  %deferred_bio_list.i44.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i45.i = getelementptr inbounds %struct.pool, ptr %236, i32 0, i32 11
  %237 = ptrtoint ptr %prison.i.i45.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %prison.i.i45.i, align 4
  call void @dm_cell_release_no_holder(ptr noundef %238, ptr noundef %cell, ptr noundef %deferred_bio_list.i44.i) #15
  %239 = ptrtoint ptr %prison.i.i45.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load ptr, ptr %prison.i.i45.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %240, ptr noundef %cell) #15
  %241 = ptrtoint ptr %deferred_bio_list.i44.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %deferred_bio_list.i44.i, align 4
  %cmp.i.not.i46.i = icmp eq ptr %242, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i42.i, i32 noundef %call3.i43.i) #15
  br i1 %cmp.i.not.i46.i, label %if.then2.i.cell_defer_no_holder.exit52.i_crit_edge, label %if.then.i50.i

if.then2.i.cell_defer_no_holder.exit52.i_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit52.i

if.then.i50.i:                                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i47.i = getelementptr inbounds %struct.pool, ptr %236, i32 0, i32 14
  %243 = ptrtoint ptr %wq.i.i47.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %wq.i.i47.i, align 8
  %worker.i.i48.i = getelementptr inbounds %struct.pool, ptr %236, i32 0, i32 13
  %call.i.i.i49.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %244, ptr noundef %worker.i.i48.i) #15
  br label %cell_defer_no_holder.exit52.i

cell_defer_no_holder.exit52.i:                    ; preds = %if.then.i50.i, %if.then2.i.cell_defer_no_holder.exit52.i_crit_edge
  call void @bio_endio(ptr noundef %3) #15
  br label %provision_block.exit

if.end3.i:                                        ; preds = %if.else33.thread
  %call4.i = call fastcc i32 @alloc_data_block(ptr noundef %tc, ptr noundef nonnull %data_block.i) #15
  %245 = zext i32 %call4.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %245, ptr @__sancov_gen_cov_switch_values.222)
  switch i32 %call4.i, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 -28, label %sw.bb8.i
  ]

sw.bb.i:                                          ; preds = %if.end3.i
  %origin_dev.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 2
  %246 = ptrtoint ptr %origin_dev.i to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %origin_dev.i, align 4
  %tobool5.not.i = icmp eq ptr %247, null
  %248 = ptrtoint ptr %data_block.i to i32
  call void @__asan_load8_noabort(i32 %248)
  %249 = load i64, ptr %data_block.i, align 8
  br i1 %tobool5.not.i, label %if.else.i296, label %if.then6.i

if.then6.i:                                       ; preds = %sw.bb.i
  %250 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %pool1, align 8
  %sectors_per_block.i.i289 = getelementptr inbounds %struct.pool, ptr %251, i32 0, i32 7
  %252 = ptrtoint ptr %sectors_per_block.i.i289 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %sectors_per_block.i.i289, align 8
  %conv.i.i290 = zext i32 %253 to i64
  %mul.i.i291 = mul i64 %block_nr.0.i, %conv.i.i290
  %add.i.i292 = add i64 %block_nr.0.i, 1
  %mul4.i.i = mul i64 %add.i.i292, %conv.i.i290
  %origin_size.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 3
  %254 = ptrtoint ptr %origin_size.i.i to i32
  call void @__asan_load8_noabort(i32 %254)
  %255 = load i64, ptr %origin_size.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %mul4.i.i, i64 %255)
  %cmp.not.i.i293 = icmp ugt i64 %mul4.i.i, %255
  br i1 %cmp.not.i.i293, label %if.else.i.i294, label %if.then.i54.i

if.then.i54.i:                                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @schedule_copy(ptr noundef %tc, i64 noundef %block_nr.0.i, ptr noundef nonnull %247, i64 noundef %block_nr.0.i, i64 noundef %249, ptr noundef %cell, ptr noundef %3, i64 noundef %conv.i.i290) #15
  br label %provision_block.exit

if.else.i.i294:                                   ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_cmp8(i64 %255, i64 %mul.i.i291)
  %cmp9.i.i = icmp ugt i64 %255, %mul.i.i291
  br i1 %cmp9.i.i, label %if.then11.i.i, label %if.else14.i.i

if.then11.i.i:                                    ; preds = %if.else.i.i294
  call void @__sanitizer_cov_trace_pc() #17
  %sub.i.i295 = sub i64 %255, %mul.i.i291
  call fastcc void @schedule_copy(ptr noundef %tc, i64 noundef %block_nr.0.i, ptr noundef nonnull %247, i64 noundef %block_nr.0.i, i64 noundef %249, ptr noundef %cell, ptr noundef %3, i64 noundef %sub.i.i295) #15
  br label %provision_block.exit

if.else14.i.i:                                    ; preds = %if.else.i.i294
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @schedule_zero(ptr noundef %tc, i64 noundef %block_nr.0.i, i64 noundef %249, ptr noundef %cell, ptr noundef %3) #15
  br label %provision_block.exit

if.else.i296:                                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @schedule_zero(ptr noundef %tc, i64 noundef %block_nr.0.i, i64 noundef %249, ptr noundef %cell, ptr noundef %3) #15
  br label %provision_block.exit

sw.bb8.i:                                         ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @retry_bios_on_resume(ptr noundef %198, ptr noundef %cell) #15
  br label %provision_block.exit

sw.default.i:                                     ; preds = %if.end3.i
  %call9.i = call i32 @___ratelimit(ptr noundef nonnull @provision_block._rs, ptr noundef nonnull @__func__.provision_block) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %sw.default.i.if.end13.i_crit_edge, label %do.end.i

sw.default.i.if.end13.i_crit_edge:                ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end13.i

do.end.i:                                         ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  %call12.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.105, ptr noundef nonnull @__func__.provision_block, i32 noundef %call4.i) #21
  br label %if.end13.i

if.end13.i:                                       ; preds = %do.end.i, %sw.default.i.if.end13.i_crit_edge
  %out_of_data_space.i.i.i = getelementptr inbounds %struct.pool, ptr %198, i32 0, i32 10
  %256 = ptrtoint ptr %out_of_data_space.i.i.i to i32
  call void @__asan_load1_noabort(i32 %256)
  %bf.load.i.i.i = load i8, ptr %out_of_data_space.i.i.i, align 8
  %257 = and i8 %bf.load.i.i.i, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %257)
  %bf.cast.not.i.i.i = icmp eq i8 %257, 0
  %conv.i.i55.i = select i1 %bf.cast.not.i.i.i, i8 10, i8 3
  %prison.i.i56.i = getelementptr inbounds %struct.pool, ptr %198, i32 0, i32 11
  %258 = ptrtoint ptr %prison.i.i56.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %prison.i.i56.i, align 4
  call void @dm_cell_error(ptr noundef %259, ptr noundef %cell, i8 noundef zeroext %conv.i.i55.i) #15
  %260 = ptrtoint ptr %prison.i.i56.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load ptr, ptr %prison.i.i56.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %261, ptr noundef %cell) #15
  br label %provision_block.exit

provision_block.exit:                             ; preds = %if.end13.i, %sw.bb8.i, %if.else.i296, %if.else14.i.i, %if.then11.i.i, %if.then.i54.i, %cell_defer_no_holder.exit52.i, %remap_and_issue.exit.i286
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data_block.i) #15
  br label %cleanup

sw.default:                                       ; preds = %if.end
  %call35 = call i32 @___ratelimit(ptr noundef nonnull @process_cell._rs, ptr noundef nonnull @__func__.process_cell) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %sw.default.if.end39_crit_edge, label %do.end

sw.default.if.end39_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end39

do.end:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #17
  %call38 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.93, ptr noundef nonnull @__func__.process_cell, i32 noundef %call2) #21
  br label %if.end39

if.end39:                                         ; preds = %do.end, %sw.default.if.end39_crit_edge
  %262 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %pool1, align 8
  %lock.i298 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i299 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i298) #15
  %deferred_bio_list.i300 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i301 = getelementptr inbounds %struct.pool, ptr %263, i32 0, i32 11
  %264 = ptrtoint ptr %prison.i.i301 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %prison.i.i301, align 4
  call void @dm_cell_release_no_holder(ptr noundef %265, ptr noundef %cell, ptr noundef %deferred_bio_list.i300) #15
  %266 = ptrtoint ptr %prison.i.i301 to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %prison.i.i301, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %267, ptr noundef %cell) #15
  %268 = ptrtoint ptr %deferred_bio_list.i300 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load ptr, ptr %deferred_bio_list.i300, align 4
  %cmp.i.not.i302 = icmp eq ptr %269, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i298, i32 noundef %call3.i299) #15
  br i1 %cmp.i.not.i302, label %if.end39.cell_defer_no_holder.exit308_crit_edge, label %if.then.i306

if.end39.cell_defer_no_holder.exit308_crit_edge:  ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit308

if.then.i306:                                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i303 = getelementptr inbounds %struct.pool, ptr %263, i32 0, i32 14
  %270 = ptrtoint ptr %wq.i.i303 to i32
  call void @__asan_load4_noabort(i32 %270)
  %271 = load ptr, ptr %wq.i.i303, align 8
  %worker.i.i304 = getelementptr inbounds %struct.pool, ptr %263, i32 0, i32 13
  %call.i.i.i305 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %271, ptr noundef %worker.i.i304) #15
  br label %cell_defer_no_holder.exit308

cell_defer_no_holder.exit308:                     ; preds = %if.then.i306, %if.end39.cell_defer_no_holder.exit308_crit_edge
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %3, i32 0, i32 6
  %272 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %272)
  store i8 10, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef %3) #15
  br label %cleanup

cleanup:                                          ; preds = %cell_defer_no_holder.exit308, %provision_block.exit, %if.else30, %if.then23, %remap_to_origin_and_issue.exit, %remap_and_issue.exit, %process_shared_bio.exit, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %lookup_result) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @free_discard_mapping(ptr noundef %m) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc1 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc1, align 4
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %2 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cell, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %entry
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pool1.i, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 9
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 11
  %6 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_release_no_holder(ptr noundef %7, ptr noundef nonnull %3, ptr noundef %deferred_bio_list.i) #15
  %8 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %9, ptr noundef nonnull %3) #15
  %10 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %11, null
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.then.if.end_crit_edge, label %if.then.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 14
  %12 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 13
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %13, ptr noundef %worker.i.i) #15
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %pool = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %14 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pool, align 8
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %15, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @error_retry_list_with_code(ptr noundef %pool, i8 noundef zeroext %error) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !516
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 696, ptr noundef nonnull @.str.78) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b23 = load i1, ptr @error_retry_list_with_code.__warned, align 1
  br i1 %.b23, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @error_retry_list_with_code.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.17, i32 noundef 660, ptr noundef nonnull @.str.92) #15
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %active_thins = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 26
  %4 = ptrtoint ptr %active_thins to i32
  call void @__asan_load4_noabort(i32 %4)
  %tc.033 = load volatile ptr, ptr %active_thins, align 8
  %cmp.not34 = icmp eq ptr %tc.033, %active_thins
  br i1 %cmp.not34, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %error_thin_bio_list.exit.for.body_crit_edge, %do.end.for.body_crit_edge
  %tc.035 = phi ptr [ %tc.0, %error_thin_bio_list.exit.for.body_crit_edge ], [ %tc.033, %do.end.for.body_crit_edge ]
  %retry_on_resume_list = getelementptr inbounds %struct.thin_c, ptr %tc.035, i32 0, i32 12
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %tc.035, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %5 = ptrtoint ptr %retry_on_resume_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %retry_on_resume_list, align 4
  %tail.i2.i.i = getelementptr inbounds %struct.thin_c, ptr %tc.035, i32 0, i32 12, i32 1
  %7 = ptrtoint ptr %tail.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %tail.i2.i.i, align 4
  store ptr null, ptr %retry_on_resume_list, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %tobool.not.i2.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i2.i.i, label %for.body.error_thin_bio_list.exit_crit_edge, label %for.body.if.then.i.i.i_crit_edge

for.body.if.then.i.i.i_crit_edge:                 ; preds = %for.body
  br label %if.then.i.i.i

for.body.error_thin_bio_list.exit_crit_edge:      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %error_thin_bio_list.exit

if.then.i.i.i:                                    ; preds = %if.then.i.i.i.if.then.i.i.i_crit_edge, %for.body.if.then.i.i.i_crit_edge
  %8 = phi ptr [ %10, %if.then.i.i.i.if.then.i.i.i_crit_edge ], [ %6, %for.body.if.then.i.i.i_crit_edge ]
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %8, align 8
  %tobool4.not.i.i.i = icmp eq ptr %10, null
  store ptr null, ptr %8, align 8
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %8, i32 0, i32 6
  %11 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %error, ptr %bi_status.i.i, align 2
  tail call void @bio_endio(ptr noundef nonnull %8) #15
  br i1 %tobool4.not.i.i.i, label %if.then.i.i.i.error_thin_bio_list.exit_crit_edge, label %if.then.i.i.i.if.then.i.i.i_crit_edge

if.then.i.i.i.if.then.i.i.i_crit_edge:            ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i.i.i

if.then.i.i.i.error_thin_bio_list.exit_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %error_thin_bio_list.exit

error_thin_bio_list.exit:                         ; preds = %if.then.i.i.i.error_thin_bio_list.exit_crit_edge, %for.body.error_thin_bio_list.exit_crit_edge
  %12 = ptrtoint ptr %tc.035 to i32
  call void @__asan_load4_noabort(i32 %12)
  %tc.0 = load volatile ptr, ptr %tc.035, align 8
  %cmp.not = icmp eq ptr %tc.0, %active_thins
  br i1 %cmp.not, label %error_thin_bio_list.exit.for.end_crit_edge, label %error_thin_bio_list.exit.for.body_crit_edge

error_thin_bio_list.exit.for.body_crit_edge:      ; preds = %error_thin_bio_list.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

error_thin_bio_list.exit.for.end_crit_edge:       ; preds = %error_thin_bio_list.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %error_thin_bio_list.exit.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i24 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i24, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i27

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i27:                                ; preds = %for.end
  %call1.i25 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i25)
  %tobool.not.i26 = icmp eq i32 %call1.i25, 0
  br i1 %tobool.not.i26, label %land.lhs.true.i27.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i29

land.lhs.true.i27.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i27
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i29:                               ; preds = %land.lhs.true.i27
  %.b4.i28 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i28, label %land.lhs.true2.i29.rcu_read_unlock.exit_crit_edge, label %if.then.i30

land.lhs.true2.i29.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i29
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i30:                                      ; preds = %land.lhs.true2.i29
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 724, ptr noundef nonnull @.str.79) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i30, %land.lhs.true2.i29.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i27.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !518
  %13 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i31 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i.i.i31 to ptr
  %preempt_count.i.i.i.i32 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i.i.i32 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i.i.i32, align 4
  %sub.i.i.i = add i32 %16, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i32, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__process_bio_read_only(ptr noundef %tc, ptr noundef %bio, ptr noundef %cell) unnamed_addr #1 align 64 {
entry:
  %lookup_result = alloca %struct.dm_thin_lookup_result, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_opf = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %0 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bi_opf, align 8
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %2 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1.i, align 8
  %bi_iter.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %4 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %bi_iter.i, align 8
  %sectors_per_block_shift.i.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 8
  %6 = ptrtoint ptr %sectors_per_block_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sectors_per_block_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.i.i = icmp sgt i32 %7, -1
  br i1 %cmp.i.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i = zext i32 %7 to i64
  %shr.i = lshr i64 %5, %sh_prom.i
  br label %get_bio_block.exit

if.else.i:                                        ; preds = %entry
  %sectors_per_block.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 7
  %8 = ptrtoint ptr %sectors_per_block.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %sectors_per_block.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %5)
  %cmp170.i = icmp ult i64 %5, 4294967296
  br i1 %cmp170.i, label %if.then174.i, label %if.else180.i, !prof !496

if.then174.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv175.i = trunc i64 %5 to i32
  %div178.i = udiv i32 %conv175.i, %9
  %conv179.i = zext i32 %div178.i to i64
  br label %get_bio_block.exit

if.else180.i:                                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #17
  %10 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %9, i64 %5) #20, !srcloc !502
  %asmresult1.i.i = extractvalue { i64, i64 } %10, 1
  br label %get_bio_block.exit

get_bio_block.exit:                               ; preds = %if.else180.i, %if.then174.i, %if.then.i
  %block_nr.0.i = phi i64 [ %shr.i, %if.then.i ], [ %conv179.i, %if.then174.i ], [ %asmresult1.i.i, %if.else180.i ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %lookup_result) #15
  %11 = call ptr @memset(ptr %lookup_result, i32 255, i32 16)
  %td = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %12 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %td, align 4
  %call2 = call i32 @dm_thin_find_block(ptr noundef %13, i64 noundef %block_nr.0.i, i32 noundef 1, ptr noundef nonnull %lookup_result) #15
  %14 = zext i32 %call2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.223)
  switch i32 %call2, label %sw.default [
    i32 0, label %sw.bb
    i32 -61, label %sw.bb13
  ]

sw.bb:                                            ; preds = %get_bio_block.exit
  %shared = getelementptr inbounds %struct.dm_thin_lookup_result, ptr %lookup_result, i32 0, i32 1
  %15 = ptrtoint ptr %shared to i32
  call void @__asan_load1_noabort(i32 %15)
  %bf.load = load i8, ptr %shared, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  %brmerge = select i1 %bf.cast.not, i1 true, i1 %tobool.i.not
  br i1 %brmerge, label %sw.bb.if.else_crit_edge, label %land.lhs.true3

sw.bb.if.else_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

land.lhs.true3:                                   ; preds = %sw.bb
  %bi_size = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %16 = ptrtoint ptr %bi_size to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %bi_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp eq i32 %17, 0
  br i1 %tobool.not, label %land.lhs.true3.if.else_crit_edge, label %if.then

land.lhs.true3.if.else_crit_edge:                 ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then:                                          ; preds = %land.lhs.true3
  %18 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pool1.i, align 8
  call fastcc void @handle_unserviceable_bio(ptr noundef %19, ptr noundef %bio)
  %tobool4.not = icmp eq ptr %cell, null
  br i1 %tobool4.not, label %if.then.sw.epilog_crit_edge, label %if.then5

if.then.sw.epilog_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

if.then5:                                         ; preds = %if.then
  %20 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pool1.i, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %21, i32 0, i32 11
  %22 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %prison.i.i, align 4
  call void @dm_cell_release_no_holder(ptr noundef %23, ptr noundef nonnull %cell, ptr noundef %deferred_bio_list.i) #15
  %24 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prison.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %25, ptr noundef nonnull %cell) #15
  %26 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %27, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.then5.sw.epilog_crit_edge, label %if.then.i66

if.then5.sw.epilog_crit_edge:                     ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

if.then.i66:                                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %21, i32 0, i32 14
  %28 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %21, i32 0, i32 13
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %29, ptr noundef %worker.i.i) #15
  br label %sw.epilog

if.else:                                          ; preds = %land.lhs.true3.if.else_crit_edge, %sw.bb.if.else_crit_edge
  %30 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %bi_opf, align 8
  %and.i67 = and i32 %31, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i67)
  %cmp.i68 = icmp eq i32 %and.i67, 3
  br i1 %cmp.i68, label %if.else.inc_all_io_entry.exit_crit_edge, label %if.end.i

if.else.inc_all_io_entry.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %32 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pool1.i, align 8
  %call.i = call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %33, i32 0, i32 28
  %34 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = call ptr @dm_deferred_entry_inc(ptr noundef %35) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %36 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i, %if.else.inc_all_io_entry.exit_crit_edge
  %37 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %lookup_result, align 8
  %39 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pool1.i, align 8
  %41 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %bi_iter.i, align 8
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %43 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %pool_dev.i.i, align 8
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %44, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %47 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %47)
  %48 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %48, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %49 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %50, %46
  br i1 %cmp.not.i.i.i, label %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i

inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge: ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i:                                    ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %48, -2177
  %51 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i, %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge
  %52 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %46, ptr %bi_bdev.i.i.i, align 4
  call void @bio_associate_blkg(ptr noundef %bio) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %40, i32 0, i32 8
  %53 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %54)
  %cmp.i.i.i = icmp sgt i32 %54, -1
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i70

if.then.i.i:                                      ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %54 to i64
  %shl.i.i = shl i64 %38, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %40, i32 0, i32 7
  %55 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %56, -1
  %conv.i.i = zext i32 %sub.i.i to i64
  %and.i.i69 = and i64 %42, %conv.i.i
  %or.i.i = or i64 %and.i.i69, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i70:                                    ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %40, i32 0, i32 7
  %57 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %58 to i64
  %mul.i.i = mul i64 %38, %conv6.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %42)
  %cmp182.i.i = icmp ult i64 %42, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i70
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %42 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %58
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i70
  call void @__sanitizer_cov_trace_pc() #17
  %59 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %58, i64 %42) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %59, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i ]
  %60 = ptrtoint ptr %bi_iter.i to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %storemerge.i.i, ptr %bi_iter.i, align 8
  call fastcc void @issue(ptr noundef %tc, ptr noundef %bio) #15
  %tobool8.not = icmp eq ptr %cell, null
  br i1 %tobool8.not, label %remap_and_issue.exit.sw.epilog_crit_edge, label %if.then9

remap_and_issue.exit.sw.epilog_crit_edge:         ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %sw.epilog

if.then9:                                         ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  %61 = ptrtoint ptr %lookup_result to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %lookup_result, align 8
  call fastcc void @inc_remap_and_issue_cell(ptr noundef %tc, ptr noundef nonnull %cell, i64 noundef %62)
  br label %sw.epilog

sw.bb13:                                          ; preds = %get_bio_block.exit
  %tobool14.not = icmp eq ptr %cell, null
  br i1 %tobool14.not, label %sw.bb13.if.end16_crit_edge, label %if.then15

sw.bb13.if.end16_crit_edge:                       ; preds = %sw.bb13
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

if.then15:                                        ; preds = %sw.bb13
  %63 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %pool1.i, align 8
  %lock.i72 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i73 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i72) #15
  %deferred_bio_list.i74 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i75 = getelementptr inbounds %struct.pool, ptr %64, i32 0, i32 11
  %65 = ptrtoint ptr %prison.i.i75 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %prison.i.i75, align 4
  call void @dm_cell_release_no_holder(ptr noundef %66, ptr noundef nonnull %cell, ptr noundef %deferred_bio_list.i74) #15
  %67 = ptrtoint ptr %prison.i.i75 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %prison.i.i75, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %68, ptr noundef nonnull %cell) #15
  %69 = ptrtoint ptr %deferred_bio_list.i74 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %deferred_bio_list.i74, align 4
  %cmp.i.not.i76 = icmp eq ptr %70, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i72, i32 noundef %call3.i73) #15
  br i1 %cmp.i.not.i76, label %if.then15.if.end16_crit_edge, label %if.then.i80

if.then15.if.end16_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end16

if.then.i80:                                      ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i77 = getelementptr inbounds %struct.pool, ptr %64, i32 0, i32 14
  %71 = ptrtoint ptr %wq.i.i77 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %wq.i.i77, align 8
  %worker.i.i78 = getelementptr inbounds %struct.pool, ptr %64, i32 0, i32 13
  %call.i.i.i79 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %72, ptr noundef %worker.i.i78) #15
  br label %if.end16

if.end16:                                         ; preds = %if.then.i80, %if.then15.if.end16_crit_edge, %sw.bb13.if.end16_crit_edge
  br i1 %tobool.i.not, label %if.end20, label %if.then18

if.then18:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #17
  %73 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pool1.i, align 8
  call fastcc void @handle_unserviceable_bio(ptr noundef %74, ptr noundef %bio)
  br label %sw.epilog

if.end20:                                         ; preds = %if.end16
  %origin_dev = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 2
  %75 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %origin_dev, align 4
  %tobool21.not = icmp eq ptr %76, null
  br i1 %tobool21.not, label %if.end24, label %if.then22

if.then22:                                        ; preds = %if.end20
  %77 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %bi_opf, align 8
  %and.i84 = and i32 %78, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i84)
  %cmp.i85 = icmp eq i32 %and.i84, 3
  br i1 %cmp.i85, label %if.then22.inc_all_io_entry.exit91_crit_edge, label %if.end.i90

if.then22.inc_all_io_entry.exit91_crit_edge:      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit91

if.end.i90:                                       ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #17
  %79 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %pool1.i, align 8
  %call.i86 = call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %all_io_ds.i87 = getelementptr inbounds %struct.pool, ptr %80, i32 0, i32 28
  %81 = ptrtoint ptr %all_io_ds.i87 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %all_io_ds.i87, align 4
  %call1.i88 = call ptr @dm_deferred_entry_inc(ptr noundef %82) #15
  %all_io_entry.i89 = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i86, i32 0, i32 2
  %83 = ptrtoint ptr %all_io_entry.i89 to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %call1.i88, ptr %all_io_entry.i89, align 4
  br label %inc_all_io_entry.exit91

inc_all_io_entry.exit91:                          ; preds = %if.end.i90, %if.then22.inc_all_io_entry.exit91_crit_edge
  %84 = ptrtoint ptr %origin_dev to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %origin_dev, align 4
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %85, align 4
  %bi_flags.i.i.i.i92 = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %88 = ptrtoint ptr %bi_flags.i.i.i.i92 to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %bi_flags.i.i.i.i92, align 4
  %conv1.i.i.i.i93 = and i16 %89, -2049
  store i16 %conv1.i.i.i.i93, ptr %bi_flags.i.i.i.i92, align 4
  %bi_bdev.i.i.i94 = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %90 = ptrtoint ptr %bi_bdev.i.i.i94 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %bi_bdev.i.i.i94, align 4
  %cmp.not.i.i.i95 = icmp eq ptr %91, %87
  br i1 %cmp.not.i.i.i95, label %inc_all_io_entry.exit91.remap_to_origin_and_issue.exit_crit_edge, label %if.then.i.i.i97

inc_all_io_entry.exit91.remap_to_origin_and_issue.exit_crit_edge: ; preds = %inc_all_io_entry.exit91
  call void @__sanitizer_cov_trace_pc() #17
  br label %remap_to_origin_and_issue.exit

if.then.i.i.i97:                                  ; preds = %inc_all_io_entry.exit91
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i96 = and i16 %89, -2177
  %92 = ptrtoint ptr %bi_flags.i.i.i.i92 to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 %conv1.i8.i.i.i96, ptr %bi_flags.i.i.i.i92, align 4
  br label %remap_to_origin_and_issue.exit

remap_to_origin_and_issue.exit:                   ; preds = %if.then.i.i.i97, %inc_all_io_entry.exit91.remap_to_origin_and_issue.exit_crit_edge
  %93 = ptrtoint ptr %bi_bdev.i.i.i94 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %87, ptr %bi_bdev.i.i.i94, align 4
  call void @bio_associate_blkg(ptr noundef %bio) #15
  call fastcc void @issue(ptr noundef %tc, ptr noundef %bio) #15
  br label %sw.epilog

if.end24:                                         ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #17
  call void @zero_fill_bio(ptr noundef %bio) #15
  call void @bio_endio(ptr noundef %bio) #15
  br label %sw.epilog

sw.default:                                       ; preds = %get_bio_block.exit
  %call25 = call i32 @___ratelimit(ptr noundef nonnull @__process_bio_read_only._rs, ptr noundef nonnull @__func__.__process_bio_read_only) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %sw.default.if.end29_crit_edge, label %do.end

sw.default.if.end29_crit_edge:                    ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end29

do.end:                                           ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #17
  %call28 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.93, ptr noundef nonnull @__func__.__process_bio_read_only, i32 noundef %call2) #21
  br label %if.end29

if.end29:                                         ; preds = %do.end, %sw.default.if.end29_crit_edge
  %tobool30.not = icmp eq ptr %cell, null
  br i1 %tobool30.not, label %if.end29.if.end32_crit_edge, label %if.then31

if.end29.if.end32_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end32

if.then31:                                        ; preds = %if.end29
  %94 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %pool1.i, align 8
  %lock.i99 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %call3.i100 = call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i99) #15
  %deferred_bio_list.i101 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  %prison.i.i102 = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 11
  %96 = ptrtoint ptr %prison.i.i102 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %prison.i.i102, align 4
  call void @dm_cell_release_no_holder(ptr noundef %97, ptr noundef nonnull %cell, ptr noundef %deferred_bio_list.i101) #15
  %98 = ptrtoint ptr %prison.i.i102 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %prison.i.i102, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %99, ptr noundef nonnull %cell) #15
  %100 = ptrtoint ptr %deferred_bio_list.i101 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %deferred_bio_list.i101, align 4
  %cmp.i.not.i103 = icmp eq ptr %101, null
  call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i99, i32 noundef %call3.i100) #15
  br i1 %cmp.i.not.i103, label %if.then31.if.end32_crit_edge, label %if.then.i107

if.then31.if.end32_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end32

if.then.i107:                                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i104 = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 14
  %102 = ptrtoint ptr %wq.i.i104 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %wq.i.i104, align 8
  %worker.i.i105 = getelementptr inbounds %struct.pool, ptr %95, i32 0, i32 13
  %call.i.i.i106 = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %103, ptr noundef %worker.i.i105) #15
  br label %if.end32

if.end32:                                         ; preds = %if.then.i107, %if.then31.if.end32_crit_edge, %if.end29.if.end32_crit_edge
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %104 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %104)
  store i8 10, ptr %bi_status.i, align 2
  call void @bio_endio(ptr noundef %bio) #15
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end32, %if.end24, %remap_to_origin_and_issue.exit, %if.then18, %if.then9, %remap_and_issue.exit.sw.epilog_crit_edge, %if.then.i66, %if.then5.sw.epilog_crit_edge, %if.then.sw.epilog_crit_edge
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %lookup_result) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @handle_unserviceable_bio(ptr nocapture noundef readonly %pool, ptr noundef %bio) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pf.i.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9
  %0 = ptrtoint ptr %pf.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pf.i.i, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.224)
  switch i32 %1, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb3.i
    i32 2, label %entry.if.then_crit_edge
    i32 3, label %entry.if.then_crit_edge7
    i32 4, label %entry.if.then_crit_edge8
  ]

entry.if.then_crit_edge8:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

entry.if.then_crit_edge7:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.bb.i:                                          ; preds = %entry
  %call1.i = tail call i32 @___ratelimit(ptr noundef nonnull @should_error_unserviceable_bio._rs, ptr noundef nonnull @__func__.should_error_unserviceable_bio) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.if.then_crit_edge, label %sw.bb.i.if.then.sink.split_crit_edge

sw.bb.i.if.then.sink.split_crit_edge:             ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.sink.split

sw.bb.i.if.then_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.bb3.i:                                         ; preds = %entry
  %error_if_no_space.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9, i32 1
  %3 = ptrtoint ptr %error_if_no_space.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load.i = load i8, ptr %error_if_no_space.i, align 4
  %4 = and i8 %bf.load.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %bf.cast.not.i = icmp eq i8 %4, 0
  br i1 %bf.cast.not.i, label %if.else, label %sw.bb3.i.if.then_crit_edge

sw.bb3.i.if.then_crit_edge:                       ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.default.i:                                     ; preds = %entry
  %call5.i = tail call i32 @___ratelimit(ptr noundef nonnull @should_error_unserviceable_bio._rs.95, ptr noundef nonnull @__func__.should_error_unserviceable_bio) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %sw.default.i.if.then_crit_edge, label %sw.default.i.if.then.sink.split_crit_edge

sw.default.i.if.then.sink.split_crit_edge:        ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.sink.split

sw.default.i.if.then_crit_edge:                   ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then.sink.split:                               ; preds = %sw.default.i.if.then.sink.split_crit_edge, %sw.bb.i.if.then.sink.split_crit_edge
  %.str.94.sink = phi ptr [ @.str.94, %sw.bb.i.if.then.sink.split_crit_edge ], [ @.str.97, %sw.default.i.if.then.sink.split_crit_edge ]
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.94.sink) #21
  br label %if.then

if.then:                                          ; preds = %if.then.sink.split, %sw.default.i.if.then_crit_edge, %sw.bb3.i.if.then_crit_edge, %sw.bb.i.if.then_crit_edge, %entry.if.then_crit_edge, %entry.if.then_crit_edge7, %entry.if.then_crit_edge8
  %retval.0.i.ph = phi i8 [ 10, %sw.default.i.if.then_crit_edge ], [ 10, %entry.if.then_crit_edge ], [ 10, %entry.if.then_crit_edge7 ], [ 10, %entry.if.then_crit_edge8 ], [ 10, %sw.bb.i.if.then_crit_edge ], [ 3, %sw.bb3.i.if.then_crit_edge ], [ 10, %if.then.sink.split ]
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %5 = ptrtoint ptr %bi_status to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %retval.0.i.ph, ptr %bi_status, align 2
  tail call void @bio_endio(ptr noundef %bio) #15
  br label %if.end

if.else:                                          ; preds = %sw.bb3.i
  %call.i = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %call.i, align 4
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %7, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %8 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %bio, align 8
  %tail.i.i = getelementptr inbounds %struct.thin_c, ptr %7, i32 0, i32 12, i32 1
  %9 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %bio, ptr %10, align 8
  br label %retry_on_resume.exit

if.else.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %retry_on_resume_list.i = getelementptr inbounds %struct.thin_c, ptr %7, i32 0, i32 12
  %12 = ptrtoint ptr %retry_on_resume_list.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %bio, ptr %retry_on_resume_list.i, align 4
  br label %retry_on_resume.exit

retry_on_resume.exit:                             ; preds = %if.else.i.i, %if.then.i.i
  %13 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %bio, ptr %tail.i.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  br label %if.end

if.end:                                           ; preds = %retry_on_resume.exit, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @inc_remap_and_issue_cell(ptr noundef %tc, ptr noundef %cell, i64 noundef %block) unnamed_addr #1 align 64 {
entry:
  %info = alloca %struct.remap_info, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 1, i32 1
  %2 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 2
  %3 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 2, i32 1
  %4 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %tc, ptr %info, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %5 = call ptr @memset(ptr %0, i32 0, i32 16)
  %6 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pool, align 8
  %prison.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prison.i, align 4
  call void @dm_cell_visit_release(ptr noundef %9, ptr noundef nonnull @__inc_remap_and_issue_cell, ptr noundef nonnull %info, ptr noundef %cell) #15
  %10 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prison.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %11, ptr noundef %cell) #15
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %0, align 4
  %tobool.not.i25 = icmp eq ptr %13, null
  br i1 %tobool.not.i25, label %entry.while.cond3.preheader_crit_edge, label %if.then.i.lr.ph

entry.while.cond3.preheader_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond3.preheader

if.then.i.lr.ph:                                  ; preds = %entry
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %tail.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11, i32 1
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  br label %if.then.i

while.cond3.preheader:                            ; preds = %thin_defer_bio.exit.while.cond3.preheader_crit_edge, %entry.while.cond3.preheader_crit_edge
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %2, align 4
  %tobool.not.i1526 = icmp eq ptr %15, null
  br i1 %tobool.not.i1526, label %while.cond3.preheader.while.end9_crit_edge, label %while.cond3.preheader.if.then.i17_crit_edge

while.cond3.preheader.if.then.i17_crit_edge:      ; preds = %while.cond3.preheader
  br label %if.then.i17

while.cond3.preheader.while.end9_crit_edge:       ; preds = %while.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end9

if.then.i:                                        ; preds = %thin_defer_bio.exit.if.then.i_crit_edge, %if.then.i.lr.ph
  %16 = phi ptr [ %13, %if.then.i.lr.ph ], [ %33, %thin_defer_bio.exit.if.then.i_crit_edge ]
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 8
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %0, align 4
  %tobool4.not.i = icmp eq ptr %18, null
  br i1 %tobool4.not.i, label %if.then5.i, label %if.then.i.while.body_crit_edge

if.then.i.while.body_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %1, align 4
  br label %while.body

while.body:                                       ; preds = %if.then5.i, %if.then.i.while.body_crit_edge
  %21 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %16, align 8
  %22 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool, align 8
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %24 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %16, align 8
  %25 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %16, ptr %26, align 8
  br label %thin_defer_bio.exit

if.else.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %16, ptr %deferred_bio_list.i, align 4
  br label %thin_defer_bio.exit

thin_defer_bio.exit:                              ; preds = %if.else.i.i, %if.then.i.i
  %29 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %16, ptr %tail.i.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 14
  %30 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 13
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %31, ptr noundef %worker.i.i) #15
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %0, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %thin_defer_bio.exit.while.cond3.preheader_crit_edge, label %thin_defer_bio.exit.if.then.i_crit_edge

thin_defer_bio.exit.if.then.i_crit_edge:          ; preds = %thin_defer_bio.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

thin_defer_bio.exit.while.cond3.preheader_crit_edge: ; preds = %thin_defer_bio.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond3.preheader

if.then.i17:                                      ; preds = %remap_and_issue.exit.if.then.i17_crit_edge, %while.cond3.preheader.if.then.i17_crit_edge
  %34 = phi ptr [ %65, %remap_and_issue.exit.if.then.i17_crit_edge ], [ %15, %while.cond3.preheader.if.then.i17_crit_edge ]
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 8
  %37 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %2, align 4
  %tobool4.not.i16 = icmp eq ptr %36, null
  br i1 %tobool4.not.i16, label %if.then5.i19, label %if.then.i17.while.body7_crit_edge

if.then.i17.while.body7_crit_edge:                ; preds = %if.then.i17
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body7

if.then5.i19:                                     ; preds = %if.then.i17
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %3, align 4
  br label %while.body7

while.body7:                                      ; preds = %if.then5.i19, %if.then.i17.while.body7_crit_edge
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %34, align 8
  %40 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %info, align 4
  %pool1.i.i = getelementptr inbounds %struct.thin_c, ptr %41, i32 0, i32 5
  %42 = ptrtoint ptr %pool1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pool1.i.i, align 8
  %bi_iter.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 8
  %44 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %bi_iter.i.i, align 8
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %41, i32 0, i32 1
  %46 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pool_dev.i.i, align 8
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %47, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 3
  %50 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %50)
  %51 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %51, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 1
  %52 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %53, %49
  br i1 %cmp.not.i.i.i, label %while.body7.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i

while.body7.bio_set_dev.exit.i.i_crit_edge:       ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i:                                    ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %51, -2177
  %54 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %54)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i, %while.body7.bio_set_dev.exit.i.i_crit_edge
  %55 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %49, ptr %bi_bdev.i.i.i, align 4
  call void @bio_associate_blkg(ptr noundef nonnull %34) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %43, i32 0, i32 8
  %56 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %57)
  %cmp.i.i.i = icmp sgt i32 %57, -1
  br i1 %cmp.i.i.i, label %if.then.i.i22, label %if.else.i.i23

if.then.i.i22:                                    ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %57 to i64
  %shl.i.i = shl i64 %block, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %43, i32 0, i32 7
  %58 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %59, -1
  %conv.i.i = zext i32 %sub.i.i to i64
  %and.i.i = and i64 %45, %conv.i.i
  %or.i.i = or i64 %and.i.i, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i23:                                    ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %43, i32 0, i32 7
  %60 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %61 to i64
  %mul.i.i = mul i64 %conv6.i.i, %block
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %45)
  %cmp182.i.i = icmp ult i64 %45, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i23
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %45 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %61
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i23
  call void @__sanitizer_cov_trace_pc() #17
  %62 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %61, i64 %45) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %62, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i22
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i22 ]
  %63 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_store8_noabort(i32 %63)
  store i64 %storemerge.i.i, ptr %bi_iter.i.i, align 8
  call fastcc void @issue(ptr noundef %41, ptr noundef nonnull %34) #15
  %64 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %2, align 4
  %tobool.not.i15 = icmp eq ptr %65, null
  br i1 %tobool.not.i15, label %remap_and_issue.exit.while.end9_crit_edge, label %remap_and_issue.exit.if.then.i17_crit_edge

remap_and_issue.exit.if.then.i17_crit_edge:       ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i17

remap_and_issue.exit.while.end9_crit_edge:        ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end9

while.end9:                                       ; preds = %remap_and_issue.exit.while.end9_crit_edge, %while.cond3.preheader.while.end9_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %info) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @remap_to_origin_and_issue(ptr nocapture noundef readonly %tc, ptr noundef %bio) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %origin_dev.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 2
  %0 = ptrtoint ptr %origin_dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %origin_dev.i, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %4 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %bi_flags.i.i.i, align 4
  %conv1.i.i.i = and i16 %5, -2049
  store i16 %conv1.i.i.i, ptr %bi_flags.i.i.i, align 4
  %bi_bdev.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %6 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bi_bdev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %7, %3
  br i1 %cmp.not.i.i, label %entry.remap_to_origin.exit_crit_edge, label %if.then.i.i

entry.remap_to_origin.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %remap_to_origin.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i = and i16 %5, -2177
  %8 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv1.i8.i.i, ptr %bi_flags.i.i.i, align 4
  br label %remap_to_origin.exit

remap_to_origin.exit:                             ; preds = %if.then.i.i, %entry.remap_to_origin.exit_crit_edge
  %9 = ptrtoint ptr %bi_bdev.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %3, ptr %bi_bdev.i.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %bio) #15
  tail call fastcc void @issue(ptr noundef %tc, ptr noundef %bio)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @zero_fill_bio(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @issue(ptr nocapture noundef readonly %tc, ptr noundef %bio) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %2 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bi_opf.i, align 8
  %4 = and i32 %3, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not.i = icmp eq i32 %4, 0
  br i1 %tobool.i.not.i, label %entry.if.then_crit_edge, label %bio_triggers_commit.exit

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

bio_triggers_commit.exit:                         ; preds = %entry
  %td.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %5 = ptrtoint ptr %td.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %td.i, align 4
  %call1.i = tail call zeroext i1 @dm_thin_changed_this_transaction(ptr noundef %6) #15
  br i1 %call1.i, label %if.end, label %bio_triggers_commit.exit.if.then_crit_edge

bio_triggers_commit.exit.if.then_crit_edge:       ; preds = %bio_triggers_commit.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then:                                          ; preds = %bio_triggers_commit.exit.if.then_crit_edge, %entry.if.then_crit_edge
  tail call void @submit_bio_noacct(ptr noundef %bio) #15
  br label %cleanup

if.end:                                           ; preds = %bio_triggers_commit.exit
  %7 = ptrtoint ptr %td.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %td.i, align 4
  %call2 = tail call zeroext i1 @dm_thin_aborted_changes(ptr noundef %8) #15
  br i1 %call2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %9 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 10, ptr %bi_status.i, align 2
  tail call void @bio_endio(ptr noundef %bio) #15
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %lock = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 20
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %10 = ptrtoint ptr %bio to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %bio, align 8
  %tail.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 21, i32 1
  %11 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %bio, ptr %12, align 8
  br label %bio_list_add.exit

if.else.i:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #17
  %deferred_flush_bios = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 21
  %14 = ptrtoint ptr %deferred_flush_bios to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %bio, ptr %deferred_flush_bios, align 4
  br label %bio_list_add.exit

bio_list_add.exit:                                ; preds = %if.else.i, %if.then.i
  %15 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %bio, ptr %tail.i, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  br label %cleanup

cleanup:                                          ; preds = %bio_list_add.exit, %if.then3, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @dm_thin_aborted_changes(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @dm_thin_changed_this_transaction(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__inc_remap_and_issue_cell(ptr nocapture noundef %context, ptr nocapture noundef %cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bios = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 4
  %0 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bios, align 4
  %tobool.not.i20 = icmp eq ptr %1, null
  br i1 %tobool.not.i20, label %entry.while.end_crit_edge, label %if.then.i.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

if.then.i.lr.ph:                                  ; preds = %entry
  %tail.i = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 4, i32 1
  %tail.i14 = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 2, i32 1
  %issue_bios = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 2
  %tail.i9 = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 1, i32 1
  %defer_bios = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 1
  br label %if.then.i

if.then.i:                                        ; preds = %if.end.if.then.i_crit_edge, %if.then.i.lr.ph
  %2 = phi ptr [ %1, %if.then.i.lr.ph ], [ %29, %if.end.if.then.i_crit_edge ]
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %5 = ptrtoint ptr %bios to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %bios, align 4
  %tobool4.not.i = icmp eq ptr %4, null
  br i1 %tobool4.not.i, label %if.then5.i, label %if.then.i.while.body_crit_edge

if.then.i.while.body_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %tail.i, align 4
  br label %while.body

while.body:                                       ; preds = %if.then5.i, %if.then.i.while.body_crit_edge
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %2, align 8
  %bi_opf = getelementptr inbounds %struct.bio, ptr %2, i32 0, i32 2
  %8 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bi_opf, align 8
  %10 = and i32 %9, 393216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.i = icmp ne i32 %10, 0
  %and = and i32 %9, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %cmp = icmp eq i32 %and, 3
  %or.cond = or i1 %tobool.i, %cmp
  br i1 %or.cond, label %if.then, label %inc_all_io_entry.exit

if.then:                                          ; preds = %while.body
  %11 = ptrtoint ptr %tail.i9 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail.i9, align 4
  %tobool.not.i10 = icmp eq ptr %12, null
  br i1 %tobool.not.i10, label %if.else.i, label %if.then.i11

if.then.i11:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %2, ptr %12, align 8
  br label %if.end

if.else.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %defer_bios to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %2, ptr %defer_bios, align 4
  br label %if.end

inc_all_io_entry.exit:                            ; preds = %while.body
  %15 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %context, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pool, align 8
  %call.i = tail call ptr @dm_per_bio_data(ptr noundef nonnull %2, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %18, i32 0, i32 28
  %19 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = tail call ptr @dm_deferred_entry_inc(ptr noundef %20) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %21 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  %22 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %2, align 8
  %23 = ptrtoint ptr %tail.i14 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tail.i14, align 4
  %tobool.not.i15 = icmp eq ptr %24, null
  br i1 %tobool.not.i15, label %if.else.i17, label %if.then.i16

if.then.i16:                                      ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %2, ptr %24, align 8
  br label %if.end

if.else.i17:                                      ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %26 = ptrtoint ptr %issue_bios to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %2, ptr %issue_bios, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.i17, %if.then.i16, %if.else.i, %if.then.i11
  %tail.i14.sink = phi ptr [ %tail.i9, %if.then.i11 ], [ %tail.i9, %if.else.i ], [ %tail.i14, %if.then.i16 ], [ %tail.i14, %if.else.i17 ]
  %27 = ptrtoint ptr %tail.i14.sink to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %2, ptr %tail.i14.sink, align 4
  %28 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %bios, align 4
  %tobool.not.i = icmp eq ptr %29, null
  br i1 %tobool.not.i, label %if.end.while.end_crit_edge, label %if.end.if.then.i_crit_edge

if.end.if.then.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_cell_visit_release(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_insert_block(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_discard_cell_passdown(ptr noundef %tc, ptr noundef %virt_cell) #1 align 64 {
entry:
  %maybe_shared.i = alloca i8, align 1
  %data_key.i = alloca %struct.dm_cell_key, align 8
  %data_cell.i = alloca ptr, align 4
  %virt_begin.i = alloca i64, align 8
  %virt_end.i = alloca i64, align 8
  %data_begin.i = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 3
  %0 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %holder, align 8
  %call = tail call ptr @dm_per_bio_data(ptr noundef %1, i32 noundef 32) #15
  %cell = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 5
  %2 = ptrtoint ptr %cell to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %virt_cell, ptr %cell, align 4
  %block_begin = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 2, i32 2
  %3 = ptrtoint ptr %block_begin to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %block_begin, align 8
  %block_end = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 2, i32 3
  %5 = ptrtoint ptr %block_end to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %block_end, align 8
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %7 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pool1.i, align 8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %maybe_shared.i) #15
  %9 = ptrtoint ptr %maybe_shared.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 -1, ptr %maybe_shared.i, align 1, !annotation !495
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %data_key.i) #15
  %10 = call ptr @memset(ptr %data_key.i, i32 255, i32 32)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %data_cell.i) #15
  %11 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 -1 to ptr), ptr %data_cell.i, align 4, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %virt_begin.i) #15
  %12 = ptrtoint ptr %virt_begin.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 -1, ptr %virt_begin.i, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %virt_end.i) #15
  %13 = ptrtoint ptr %virt_end.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 -1, ptr %virt_end.i, align 8, !annotation !495
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %data_begin.i) #15
  %14 = ptrtoint ptr %data_begin.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 -1, ptr %data_begin.i, align 8, !annotation !495
  call void @__sanitizer_cov_trace_cmp8(i64 %4, i64 %6)
  %cmp.not59.i = icmp eq i64 %4, %6
  br i1 %cmp.not59.i, label %entry.break_up_discard_bio.exit_crit_edge, label %while.body.lr.ph.i

entry.break_up_discard_bio.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %break_up_discard_bio.exit

while.body.lr.ph.i:                               ; preds = %entry
  %next_mapping.i.i = getelementptr inbounds %struct.pool, ptr %8, i32 0, i32 29
  %mapping_pool.i.i = getelementptr inbounds %struct.pool, ptr %8, i32 0, i32 38
  %td.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 6
  %dev.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %data_key.i, i32 0, i32 1
  %block_begin.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %data_key.i, i32 0, i32 2
  %block_end.i.i = getelementptr inbounds %struct.dm_cell_key, ptr %data_key.i, i32 0, i32 3
  %bi_flags.i.i.i = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 3
  %__bi_remaining.i.i = getelementptr inbounds %struct.bio, ptr %1, i32 0, i32 7
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %8, i32 0, i32 28
  %process_prepared_discard.i = getelementptr inbounds %struct.pool, ptr %8, i32 0, i32 35
  br label %while.body.i

while.body.i:                                     ; preds = %while.cond.backedge.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %begin.addr.060.i = phi i64 [ %4, %while.body.lr.ph.i ], [ %begin.addr.0.be.i, %while.cond.backedge.i.while.body.i_crit_edge ]
  %15 = ptrtoint ptr %next_mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %next_mapping.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %16, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %while.body.i.if.end.i_crit_edge

while.body.i.if.end.i_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.i.i:                                       ; preds = %while.body.i
  %call.i.i = call noalias ptr @mempool_alloc(ptr noundef %mapping_pool.i.i, i32 noundef 2592) #15
  %17 = ptrtoint ptr %next_mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call.i.i, ptr %next_mapping.i.i, align 8
  %tobool3.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool3.not.i.i, label %if.end.i.i.break_up_discard_bio.exit_crit_edge, label %if.end.i.i.if.end.i_crit_edge

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i

if.end.i.i.break_up_discard_bio.exit_crit_edge:   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %break_up_discard_bio.exit

if.end.i:                                         ; preds = %if.end.i.i.if.end.i_crit_edge, %while.body.i.if.end.i_crit_edge
  %18 = ptrtoint ptr %td.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %td.i, align 4
  %call2.i = call i32 @dm_thin_find_mapped_range(ptr noundef %19, i64 noundef %begin.addr.060.i, i64 noundef %6, ptr noundef nonnull %virt_begin.i, ptr noundef nonnull %virt_end.i, ptr noundef nonnull %data_begin.i, ptr noundef nonnull %maybe_shared.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool3.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool3.not.i, label %if.end5.i, label %if.end.i.break_up_discard_bio.exit_crit_edge

if.end.i.break_up_discard_bio.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %break_up_discard_bio.exit

if.end5.i:                                        ; preds = %if.end.i
  %20 = ptrtoint ptr %td.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %td.i, align 4
  %22 = ptrtoint ptr %data_begin.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %data_begin.i, align 8
  %24 = ptrtoint ptr %virt_end.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %virt_end.i, align 8
  %26 = ptrtoint ptr %virt_begin.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %virt_begin.i, align 8
  %sub.i = add i64 %25, %23
  %add.i = sub i64 %sub.i, %27
  %28 = ptrtoint ptr %data_key.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %data_key.i, align 8
  %call.i51.i = call i64 @dm_thin_dev_id(ptr noundef %21) #15
  %29 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %call.i51.i, ptr %dev.i.i, align 8
  %30 = ptrtoint ptr %block_begin.i.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %23, ptr %block_begin.i.i, align 8
  %31 = ptrtoint ptr %block_end.i.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %add.i, ptr %block_end.i.i, align 8
  %32 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pool1.i, align 8
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %33, i32 0, i32 11
  %34 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prison.i.i, align 4
  %call.i52.i = call ptr @dm_bio_prison_alloc_cell(ptr noundef %35, i32 noundef 3072) #15
  %36 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prison.i.i, align 4
  %call2.i.i = call i32 @dm_bio_detain(ptr noundef %37, ptr noundef nonnull %data_key.i, ptr noundef null, ptr noundef %call.i52.i, ptr noundef nonnull %data_cell.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i53.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i53.i, label %if.end11.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %prison.i.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %39, ptr noundef %call.i52.i) #15
  br label %while.cond.backedge.i

while.cond.backedge.i:                            ; preds = %if.then22.i, %get_next_mapping.exit.i.while.cond.backedge.i_crit_edge, %if.then10.i
  %40 = ptrtoint ptr %virt_end.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %begin.addr.0.be.i = load i64, ptr %virt_end.i, align 8
  %cmp.not.i = icmp eq i64 %begin.addr.0.be.i, %6
  br i1 %cmp.not.i, label %while.cond.backedge.i.break_up_discard_bio.exit_crit_edge, label %while.cond.backedge.i.while.body.i_crit_edge

while.cond.backedge.i.while.body.i_crit_edge:     ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body.i

while.cond.backedge.i.break_up_discard_bio.exit_crit_edge: ; preds = %while.cond.backedge.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %break_up_discard_bio.exit

if.end11.i:                                       ; preds = %if.end5.i
  %41 = ptrtoint ptr %next_mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %next_mapping.i.i, align 8
  %tobool.not.i56.i = icmp eq ptr %42, null
  br i1 %tobool.not.i56.i, label %do.body5.i.i, label %get_next_mapping.exit.i, !prof !508

do.body5.i.i:                                     ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #17
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1277, 0\0A.popsection", ""() #15, !srcloc !521
  unreachable

get_next_mapping.exit.i:                          ; preds = %if.end11.i
  %43 = getelementptr inbounds i8, ptr %42, i32 8
  %44 = call ptr @memset(ptr %43, i32 0, i32 56)
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %42, ptr %42, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %42, ptr %prev.i.i.i, align 4
  %bio.i.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 9
  %47 = ptrtoint ptr %next_mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr null, ptr %next_mapping.i.i, align 8
  %tc13.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 4
  %48 = ptrtoint ptr %tc13.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %tc, ptr %tc13.i, align 4
  %49 = ptrtoint ptr %maybe_shared.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %maybe_shared.i, align 1, !range !513
  %51 = ptrtoint ptr %43 to i32
  call void @__asan_load1_noabort(i32 %51)
  %bf.load.i = load i8, ptr %43, align 8
  %bf.shl.i = shl nuw nsw i8 %50, 6
  %bf.clear.i = and i8 %bf.load.i, -65
  %bf.set.i = or i8 %bf.clear.i, %bf.shl.i
  store i8 %bf.set.i, ptr %43, align 8
  %52 = ptrtoint ptr %virt_begin.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %virt_begin.i, align 8
  %virt_begin17.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 5
  %54 = ptrtoint ptr %virt_begin17.i to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %virt_begin17.i, align 8
  %55 = ptrtoint ptr %virt_end.i to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %virt_end.i, align 8
  %virt_end18.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 6
  %57 = ptrtoint ptr %virt_end18.i to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %56, ptr %virt_end18.i, align 8
  %58 = ptrtoint ptr %data_begin.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %data_begin.i, align 8
  %data_block.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 7
  %60 = ptrtoint ptr %data_block.i to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %data_block.i, align 8
  %61 = ptrtoint ptr %data_cell.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data_cell.i, align 4
  %cell.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %42, i32 0, i32 8
  %63 = ptrtoint ptr %cell.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %62, ptr %cell.i, align 8
  %64 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %1, ptr %bio.i.i, align 4
  %65 = ptrtoint ptr %bi_flags.i.i.i to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %bi_flags.i.i.i, align 4
  %67 = or i16 %66, 32
  store i16 %67, ptr %bi_flags.i.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !522
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %__bi_remaining.i.i, i32 noundef 4) #15
  call void @llvm.prefetch.p0(ptr %__bi_remaining.i.i, i32 1, i32 3, i32 1) #15
  %68 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %__bi_remaining.i.i, ptr %__bi_remaining.i.i, i32 1, ptr elementtype(i32) %__bi_remaining.i.i) #15, !srcloc !523
  %69 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %all_io_ds.i, align 4
  %call20.i = call i32 @dm_deferred_set_add_work(ptr noundef %70, ptr noundef nonnull %42) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %tobool21.not.i = icmp eq i32 %call20.i, 0
  br i1 %tobool21.not.i, label %if.then22.i, label %get_next_mapping.exit.i.while.cond.backedge.i_crit_edge

get_next_mapping.exit.i.while.cond.backedge.i_crit_edge: ; preds = %get_next_mapping.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.backedge.i

if.then22.i:                                      ; preds = %get_next_mapping.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  %71 = ptrtoint ptr %process_prepared_discard.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %process_prepared_discard.i, align 8
  call void %72(ptr noundef nonnull %42) #15
  br label %while.cond.backedge.i

break_up_discard_bio.exit:                        ; preds = %while.cond.backedge.i.break_up_discard_bio.exit_crit_edge, %if.end.i.break_up_discard_bio.exit_crit_edge, %if.end.i.i.break_up_discard_bio.exit_crit_edge, %entry.break_up_discard_bio.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %data_begin.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %virt_end.i) #15
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %virt_begin.i) #15
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %data_cell.i) #15
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %data_key.i) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %maybe_shared.i) #15
  call void @bio_endio(ptr noundef %1) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_discard_passdown_pt1(ptr noundef %m) #1 align 64 {
entry:
  %shared.i = alloca i8, align 1
  %op.i = alloca %struct.discard_op, align 4
  %op = alloca %struct.discard_op, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc1 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc1, align 4
  %pool2 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool2, align 8
  %data_block = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 7
  %4 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %data_block, align 8
  %virt_end = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 6
  %6 = ptrtoint ptr %virt_end to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %virt_end, align 8
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 5
  %8 = ptrtoint ptr %virt_begin to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %virt_begin, align 8
  %sub = sub i64 %7, %9
  %add = add i64 %sub, %5
  %td = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 6
  %10 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %td, align 4
  %call = tail call i32 @dm_thin_remove_range(ptr noundef %11, i64 noundef %9, i64 noundef %7) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call fastcc void @metadata_operation_failed(ptr noundef %3, ptr noundef nonnull @.str.100, i32 noundef %call)
  %bio = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %12 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bio, align 4
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 10, ptr %bi_status.i, align 2
  tail call void @bio_endio(ptr noundef %13) #15
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %15 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cell, align 8
  %17 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pool2, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 9
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %18, i32 0, i32 11
  %19 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_release_no_holder(ptr noundef %20, ptr noundef %16, ptr noundef %deferred_bio_list.i) #15
  %21 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %22, ptr noundef %16) #15
  %23 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %24, null
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.then.cell_defer_no_holder.exit_crit_edge, label %if.then.i

if.then.cell_defer_no_holder.exit_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %18, i32 0, i32 14
  %25 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %18, i32 0, i32 13
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %26, ptr noundef %worker.i.i) #15
  br label %cell_defer_no_holder.exit

cell_defer_no_holder.exit:                        ; preds = %if.then.i, %if.then.cell_defer_no_holder.exit_crit_edge
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  br label %cleanup

if.end:                                           ; preds = %entry
  %pmd = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %27 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pmd, align 8
  %29 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %data_block, align 8
  %call6 = tail call i32 @dm_pool_inc_data_range(ptr noundef %28, i64 noundef %30, i64 noundef %add) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end12, label %if.then8

if.then8:                                         ; preds = %if.end
  tail call fastcc void @metadata_operation_failed(ptr noundef %3, ptr noundef nonnull @.str.101, i32 noundef %call6)
  %bio9 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %31 = ptrtoint ptr %bio9 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bio9, align 4
  %bi_status.i64 = getelementptr inbounds %struct.bio, ptr %32, i32 0, i32 6
  %33 = ptrtoint ptr %bi_status.i64 to i32
  call void @__asan_store1_noabort(i32 %33)
  store i8 10, ptr %bi_status.i64, align 2
  tail call void @bio_endio(ptr noundef %32) #15
  %cell10 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %34 = ptrtoint ptr %cell10 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %cell10, align 8
  %36 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pool2, align 8
  %lock.i66 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 9
  %call3.i67 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i66) #15
  %deferred_bio_list.i68 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 11
  %prison.i.i69 = getelementptr inbounds %struct.pool, ptr %37, i32 0, i32 11
  %38 = ptrtoint ptr %prison.i.i69 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %prison.i.i69, align 4
  tail call void @dm_cell_release_no_holder(ptr noundef %39, ptr noundef %35, ptr noundef %deferred_bio_list.i68) #15
  %40 = ptrtoint ptr %prison.i.i69 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prison.i.i69, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %41, ptr noundef %35) #15
  %42 = ptrtoint ptr %deferred_bio_list.i68 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %deferred_bio_list.i68, align 4
  %cmp.i.not.i70 = icmp eq ptr %43, null
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i66, i32 noundef %call3.i67) #15
  br i1 %cmp.i.not.i70, label %if.then8.cell_defer_no_holder.exit75_crit_edge, label %if.then.i74

if.then8.cell_defer_no_holder.exit75_crit_edge:   ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit75

if.then.i74:                                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i71 = getelementptr inbounds %struct.pool, ptr %37, i32 0, i32 14
  %44 = ptrtoint ptr %wq.i.i71 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %wq.i.i71, align 8
  %worker.i.i72 = getelementptr inbounds %struct.pool, ptr %37, i32 0, i32 13
  %call.i.i.i73 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %45, ptr noundef %worker.i.i72) #15
  br label %cell_defer_no_holder.exit75

cell_defer_no_holder.exit75:                      ; preds = %if.then.i74, %if.then8.cell_defer_no_holder.exit75_crit_edge
  %mapping_pool11 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool11) #15
  br label %cleanup

if.end12:                                         ; preds = %if.end
  %call.i = tail call ptr @bio_alloc_bioset(i32 noundef 3072, i16 noundef zeroext 1, ptr noundef nonnull @fs_bio_set) #15
  %tobool14.not = icmp eq ptr %call.i, null
  br i1 %tobool14.not, label %do.end, label %if.else

do.end:                                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #17
  %46 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pool2, align 8
  %pool_md = getelementptr inbounds %struct.pool, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %pool_md to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pool_md, align 4
  %call17 = tail call ptr @dm_device_name(ptr noundef %49) #15
  %call18 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.102, ptr noundef %call17) #21
  tail call fastcc void @queue_passdown_pt2(ptr noundef %m)
  br label %cleanup

if.else:                                          ; preds = %if.end12
  %bi_end_io = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 10
  %50 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr @passdown_endio, ptr %bi_end_io, align 8
  %bi_private = getelementptr inbounds %struct.bio, ptr %call.i, i32 0, i32 11
  %51 = ptrtoint ptr %bi_private to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %m, ptr %bi_private, align 4
  %maybe_shared = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 1
  %52 = ptrtoint ptr %maybe_shared to i32
  call void @__asan_load1_noabort(i32 %52)
  %bf.load = load i8, ptr %maybe_shared, align 8
  %53 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %53)
  %bf.cast.not = icmp eq i8 %53, 0
  br i1 %bf.cast.not, label %begin_discard.exit, label %begin_discard.exit.i

begin_discard.exit.i:                             ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %shared.i) #15
  %54 = ptrtoint ptr %shared.i to i32
  call void @__asan_store1_noabort(i32 %54)
  store i8 1, ptr %shared.i, align 1
  %55 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %tc1, align 4
  %pool2.i = getelementptr inbounds %struct.thin_c, ptr %56, i32 0, i32 5
  %57 = ptrtoint ptr %pool2.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %pool2.i, align 8
  %59 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %data_block, align 8
  %61 = ptrtoint ptr %virt_end to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %virt_end, align 8
  %add.i = add i64 %62, %60
  %63 = ptrtoint ptr %virt_begin to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %virt_begin, align 8
  %sub.i = sub i64 %add.i, %64
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %op.i) #15
  %65 = getelementptr inbounds i8, ptr %op.i, i32 4
  %66 = call ptr @memset(ptr %65, i32 255, i32 32)
  %67 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %56, ptr %op.i, align 4
  call void @blk_start_plug(ptr noundef %65) #15
  %parent_bio.i.i = getelementptr inbounds %struct.discard_op, ptr %op.i, i32 0, i32 2
  %68 = ptrtoint ptr %parent_bio.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call.i, ptr %parent_bio.i.i, align 4
  %bio.i.i = getelementptr inbounds %struct.discard_op, ptr %op.i, i32 0, i32 3
  %69 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr null, ptr %bio.i.i, align 4
  %pmd.i = getelementptr inbounds %struct.pool, ptr %58, i32 0, i32 5
  br label %while.cond.i

while.cond.i:                                     ; preds = %issue_discard.exit.i.while.cond.i_crit_edge, %begin_discard.exit.i
  %b.0.i = phi i64 [ %60, %begin_discard.exit.i ], [ %e.0.lcssa.i, %issue_discard.exit.i.while.cond.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %b.0.i, i64 %sub.i)
  %cmp.not.i = icmp eq i64 %b.0.i, %sub.i
  br i1 %cmp.not.i, label %while.cond.i.out.i_crit_edge, label %for.cond.preheader.i

while.cond.i.out.i_crit_edge:                     ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

for.cond.preheader.i:                             ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_cmp8(i64 %b.0.i, i64 %sub.i)
  %cmp462.i = icmp ult i64 %b.0.i, %sub.i
  br i1 %cmp462.i, label %for.cond.preheader.i.for.body.i_crit_edge, label %for.cond.preheader.i.for.end.i_crit_edge

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %b.163.i = phi i64 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ %b.0.i, %for.cond.preheader.i.for.body.i_crit_edge ]
  %70 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %pmd.i, align 8
  %call.i76 = call i32 @dm_pool_block_is_shared(ptr noundef %71, i64 noundef %b.163.i, ptr noundef nonnull %shared.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i76)
  %tobool.not.i = icmp eq i32 %call.i76, 0
  br i1 %tobool.not.i, label %if.end.i, label %for.body.i.out.i_crit_edge

for.body.i.out.i_crit_edge:                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.end.i:                                         ; preds = %for.body.i
  %72 = ptrtoint ptr %shared.i to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %shared.i, align 1, !range !513
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %73)
  %tobool5.not.i = icmp eq i8 %73, 0
  br i1 %tobool5.not.i, label %if.end.i.for.end.i_crit_edge, label %for.inc.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.inc.i:                                        ; preds = %if.end.i
  %inc.i = add nuw i64 %b.163.i, 1
  %cmp4.i = icmp ult i64 %inc.i, %sub.i
  br i1 %cmp4.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %b.1.lcssa.i = phi i64 [ %b.0.i, %for.cond.preheader.i.for.end.i_crit_edge ], [ %inc.i, %for.inc.i.for.end.i_crit_edge ], [ %b.163.i, %if.end.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp8(i64 %b.1.lcssa.i, i64 %sub.i)
  %cmp8.i = icmp eq i64 %b.1.lcssa.i, %sub.i
  br i1 %cmp8.i, label %for.end.i.out.i_crit_edge, label %for.end.i.for.cond12.i_crit_edge

for.end.i.for.cond12.i_crit_edge:                 ; preds = %for.end.i
  br label %for.cond12.i

for.end.i.out.i_crit_edge:                        ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

for.cond12.i:                                     ; preds = %if.end19.i.for.cond12.i_crit_edge, %for.end.i.for.cond12.i_crit_edge
  %e.0.in.i = phi i64 [ %e.0.i, %if.end19.i.for.cond12.i_crit_edge ], [ %b.1.lcssa.i, %for.end.i.for.cond12.i_crit_edge ]
  %e.0.i = add i64 %e.0.in.i, 1
  call void @__sanitizer_cov_trace_cmp8(i64 %e.0.i, i64 %sub.i)
  %cmp13.not.i = icmp eq i64 %e.0.i, %sub.i
  br i1 %cmp13.not.i, label %for.cond12.i.for.end25.i_crit_edge, label %for.body14.i

for.cond12.i.for.end25.i_crit_edge:               ; preds = %for.cond12.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end25.i

for.body14.i:                                     ; preds = %for.cond12.i
  %74 = ptrtoint ptr %pmd.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pmd.i, align 8
  %call16.i = call i32 @dm_pool_block_is_shared(ptr noundef %75, i64 noundef %e.0.i, ptr noundef nonnull %shared.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.i)
  %tobool17.not.i = icmp eq i32 %call16.i, 0
  br i1 %tobool17.not.i, label %if.end19.i, label %for.body14.i.out.i_crit_edge

for.body14.i.out.i_crit_edge:                     ; preds = %for.body14.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

if.end19.i:                                       ; preds = %for.body14.i
  %76 = ptrtoint ptr %shared.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %shared.i, align 1, !range !513
  %tobool20.not.i = icmp eq i8 %77, 0
  br i1 %tobool20.not.i, label %if.end19.i.for.cond12.i_crit_edge, label %if.end19.i.for.end25.i_crit_edge

if.end19.i.for.end25.i_crit_edge:                 ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end25.i

if.end19.i.for.cond12.i_crit_edge:                ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.cond12.i

for.end25.i:                                      ; preds = %if.end19.i.for.end25.i_crit_edge, %for.cond12.i.for.end25.i_crit_edge
  %e.0.lcssa.i = phi i64 [ %e.0.i, %if.end19.i.for.end25.i_crit_edge ], [ %sub.i, %for.cond12.i.for.end25.i_crit_edge ]
  %78 = ptrtoint ptr %op.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %op.i, align 4
  %pool.i.i = getelementptr inbounds %struct.thin_c, ptr %79, i32 0, i32 5
  %80 = ptrtoint ptr %pool.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %pool.i.i, align 8
  %sectors_per_block_shift.i.i.i.i = getelementptr inbounds %struct.pool, ptr %81, i32 0, i32 8
  %82 = ptrtoint ptr %sectors_per_block_shift.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %sectors_per_block_shift.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %83)
  %cmp.i.i.i.i = icmp sgt i32 %83, -1
  br i1 %cmp.i.i.i.i, label %cond.true.i13.i.i, label %cond.false.i17.i.i

cond.true.i13.i.i:                                ; preds = %for.end25.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i.i = zext i32 %83 to i64
  %shl.i.i.i = shl i64 %b.1.lcssa.i, %sh_prom.i.i.i
  %sub21.i.i = sub i64 %e.0.lcssa.i, %b.1.lcssa.i
  %shl.i12.i.i = shl i64 %sub21.i.i, %sh_prom.i.i.i
  br label %issue_discard.exit.i

cond.false.i17.i.i:                               ; preds = %for.end25.i
  call void @__sanitizer_cov_trace_pc() #17
  %sectors_per_block.i.i.i = getelementptr inbounds %struct.pool, ptr %81, i32 0, i32 7
  %84 = ptrtoint ptr %sectors_per_block.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %sectors_per_block.i.i.i, align 8
  %conv.i.i.i = zext i32 %85 to i64
  %mul.i.i.i = mul i64 %b.1.lcssa.i, %conv.i.i.i
  %sub.i.i = sub i64 %e.0.lcssa.i, %b.1.lcssa.i
  %mul.i16.i.i = mul i64 %sub.i.i, %conv.i.i.i
  br label %issue_discard.exit.i

issue_discard.exit.i:                             ; preds = %cond.false.i17.i.i, %cond.true.i13.i.i
  %cond.i22.i.i = phi i64 [ %shl.i.i.i, %cond.true.i13.i.i ], [ %mul.i.i.i, %cond.false.i17.i.i ]
  %cond.i18.i.i = phi i64 [ %shl.i12.i.i, %cond.true.i13.i.i ], [ %mul.i16.i.i, %cond.false.i17.i.i ]
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %79, i32 0, i32 1
  %86 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %pool_dev.i.i, align 8
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %87, align 4
  %call4.i.i = call i32 @__blkdev_issue_discard(ptr noundef %89, i64 noundef %cond.i22.i.i, i64 noundef %cond.i18.i.i, i32 noundef 2048, i32 noundef 0, ptr noundef %bio.i.i) #15
  %tobool27.not.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool27.not.i, label %issue_discard.exit.i.while.cond.i_crit_edge, label %issue_discard.exit.i.out.i_crit_edge

issue_discard.exit.i.out.i_crit_edge:             ; preds = %issue_discard.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %out.i

issue_discard.exit.i.while.cond.i_crit_edge:      ; preds = %issue_discard.exit.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond.i

out.i:                                            ; preds = %issue_discard.exit.i.out.i_crit_edge, %for.body14.i.out.i_crit_edge, %for.end.i.out.i_crit_edge, %for.body.i.out.i_crit_edge, %while.cond.i.out.i_crit_edge
  %r.3.i = phi i32 [ %call16.i, %for.body14.i.out.i_crit_edge ], [ %call.i76, %for.body.i.out.i_crit_edge ], [ 0, %for.end.i.out.i_crit_edge ], [ %call4.i.i, %issue_discard.exit.i.out.i_crit_edge ], [ 0, %while.cond.i.out.i_crit_edge ]
  %90 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %bio.i.i, align 4
  %tobool.not.i54.i = icmp eq ptr %91, null
  br i1 %tobool.not.i54.i, label %out.i.if.end.i.i_crit_edge, label %if.then.i.i

out.i.if.end.i.i_crit_edge:                       ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i.i

if.then.i.i:                                      ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #17
  %92 = ptrtoint ptr %parent_bio.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %parent_bio.i.i, align 4
  call void @bio_chain(ptr noundef nonnull %91, ptr noundef %93) #15
  %94 = ptrtoint ptr %bio.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %bio.i.i, align 4
  %bi_opf.i.i.i = getelementptr inbounds %struct.bio, ptr %95, i32 0, i32 2
  %96 = ptrtoint ptr %bi_opf.i.i.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 3, ptr %bi_opf.i.i.i, align 8
  %97 = load ptr, ptr %bio.i.i, align 4
  call void @submit_bio(ptr noundef %97) #15
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %out.i.if.end.i.i_crit_edge
  call void @blk_finish_plug(ptr noundef %65) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %r.3.i)
  %tobool4.not.i.i = icmp eq i32 %r.3.i, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.passdown_double_checking_shared_status.exit_crit_edge, label %land.lhs.true.i.i

if.end.i.i.passdown_double_checking_shared_status.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %passdown_double_checking_shared_status.exit

land.lhs.true.i.i:                                ; preds = %if.end.i.i
  %98 = ptrtoint ptr %parent_bio.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %parent_bio.i.i, align 4
  %bi_status.i.i = getelementptr inbounds %struct.bio, ptr %99, i32 0, i32 6
  %100 = ptrtoint ptr %bi_status.i.i to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %bi_status.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %101)
  %tobool6.not.i.i = icmp eq i8 %101, 0
  br i1 %tobool6.not.i.i, label %if.then7.i.i, label %land.lhs.true.i.i.passdown_double_checking_shared_status.exit_crit_edge

land.lhs.true.i.i.passdown_double_checking_shared_status.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %passdown_double_checking_shared_status.exit

if.then7.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i = call zeroext i8 @errno_to_blk_status(i32 noundef %r.3.i) #15
  %102 = ptrtoint ptr %parent_bio.i.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %parent_bio.i.i, align 4
  %bi_status9.i.i = getelementptr inbounds %struct.bio, ptr %103, i32 0, i32 6
  %104 = ptrtoint ptr %bi_status9.i.i to i32
  call void @__asan_store1_noabort(i32 %104)
  store i8 %call.i.i, ptr %bi_status9.i.i, align 2
  br label %passdown_double_checking_shared_status.exit

passdown_double_checking_shared_status.exit:      ; preds = %if.then7.i.i, %land.lhs.true.i.i.passdown_double_checking_shared_status.exit_crit_edge, %if.end.i.i.passdown_double_checking_shared_status.exit_crit_edge
  %105 = ptrtoint ptr %parent_bio.i.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %parent_bio.i.i, align 4
  call void @bio_endio(ptr noundef %106) #15
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %op.i) #15
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %shared.i) #15
  br label %cleanup

begin_discard.exit:                               ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %op) #15
  %107 = getelementptr inbounds i8, ptr %op, i32 4
  %108 = call ptr @memset(ptr %107, i32 255, i32 32)
  %109 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %1, ptr %op, align 4
  %plug.i = getelementptr inbounds %struct.discard_op, ptr %op, i32 0, i32 1
  call void @blk_start_plug(ptr noundef %plug.i) #15
  %parent_bio.i = getelementptr inbounds %struct.discard_op, ptr %op, i32 0, i32 2
  %110 = ptrtoint ptr %parent_bio.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store ptr %call.i, ptr %parent_bio.i, align 4
  %bio.i = getelementptr inbounds %struct.discard_op, ptr %op, i32 0, i32 3
  %111 = ptrtoint ptr %bio.i to i32
  call void @__asan_store4_noabort(i32 %111)
  store ptr null, ptr %bio.i, align 4
  %112 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %112)
  %113 = load i64, ptr %data_block, align 8
  %114 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %op, align 4
  %pool.i = getelementptr inbounds %struct.thin_c, ptr %115, i32 0, i32 5
  %116 = ptrtoint ptr %pool.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %pool.i, align 8
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %117, i32 0, i32 8
  %118 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %119)
  %cmp.i.i.i = icmp sgt i32 %119, -1
  br i1 %cmp.i.i.i, label %cond.true.i13.i, label %cond.false.i17.i

cond.true.i13.i:                                  ; preds = %begin_discard.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %119 to i64
  %shl.i.i = shl i64 %113, %sh_prom.i.i
  %sub21.i = sub i64 %add, %113
  %shl.i12.i = shl i64 %sub21.i, %sh_prom.i.i
  br label %issue_discard.exit

cond.false.i17.i:                                 ; preds = %begin_discard.exit
  call void @__sanitizer_cov_trace_pc() #17
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %117, i32 0, i32 7
  %120 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %sectors_per_block.i.i, align 8
  %conv.i.i = zext i32 %121 to i64
  %mul.i.i = mul i64 %113, %conv.i.i
  %sub.i78 = sub i64 %add, %113
  %mul.i16.i = mul i64 %sub.i78, %conv.i.i
  br label %issue_discard.exit

issue_discard.exit:                               ; preds = %cond.false.i17.i, %cond.true.i13.i
  %cond.i22.i = phi i64 [ %shl.i.i, %cond.true.i13.i ], [ %mul.i.i, %cond.false.i17.i ]
  %cond.i18.i = phi i64 [ %shl.i12.i, %cond.true.i13.i ], [ %mul.i16.i, %cond.false.i17.i ]
  %pool_dev.i = getelementptr inbounds %struct.thin_c, ptr %115, i32 0, i32 1
  %122 = ptrtoint ptr %pool_dev.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %pool_dev.i, align 8
  %124 = ptrtoint ptr %123 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %123, align 4
  %call4.i = call i32 @__blkdev_issue_discard(ptr noundef %125, i64 noundef %cond.i22.i, i64 noundef %cond.i18.i, i32 noundef 2048, i32 noundef 0, ptr noundef %bio.i) #15
  %126 = ptrtoint ptr %bio.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %bio.i, align 4
  %tobool.not.i81 = icmp eq ptr %127, null
  br i1 %tobool.not.i81, label %issue_discard.exit.if.end.i85_crit_edge, label %if.then.i83

issue_discard.exit.if.end.i85_crit_edge:          ; preds = %issue_discard.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end.i85

if.then.i83:                                      ; preds = %issue_discard.exit
  call void @__sanitizer_cov_trace_pc() #17
  %128 = ptrtoint ptr %parent_bio.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %parent_bio.i, align 4
  call void @bio_chain(ptr noundef nonnull %127, ptr noundef %129) #15
  %130 = ptrtoint ptr %bio.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %bio.i, align 4
  %bi_opf.i.i = getelementptr inbounds %struct.bio, ptr %131, i32 0, i32 2
  %132 = ptrtoint ptr %bi_opf.i.i to i32
  call void @__asan_store4_noabort(i32 %132)
  store i32 3, ptr %bi_opf.i.i, align 8
  %133 = load ptr, ptr %bio.i, align 4
  call void @submit_bio(ptr noundef %133) #15
  br label %if.end.i85

if.end.i85:                                       ; preds = %if.then.i83, %issue_discard.exit.if.end.i85_crit_edge
  call void @blk_finish_plug(ptr noundef %plug.i) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool4.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool4.not.i, label %if.end.i85.end_discard.exit_crit_edge, label %land.lhs.true.i

if.end.i85.end_discard.exit_crit_edge:            ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #17
  br label %end_discard.exit

land.lhs.true.i:                                  ; preds = %if.end.i85
  %134 = ptrtoint ptr %parent_bio.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %parent_bio.i, align 4
  %bi_status.i86 = getelementptr inbounds %struct.bio, ptr %135, i32 0, i32 6
  %136 = ptrtoint ptr %bi_status.i86 to i32
  call void @__asan_load1_noabort(i32 %136)
  %137 = load i8, ptr %bi_status.i86, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %137)
  %tobool6.not.i = icmp eq i8 %137, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %land.lhs.true.i.end_discard.exit_crit_edge

land.lhs.true.i.end_discard.exit_crit_edge:       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %end_discard.exit

if.then7.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %call.i87 = call zeroext i8 @errno_to_blk_status(i32 noundef %call4.i) #15
  %138 = ptrtoint ptr %parent_bio.i to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %parent_bio.i, align 4
  %bi_status9.i = getelementptr inbounds %struct.bio, ptr %139, i32 0, i32 6
  %140 = ptrtoint ptr %bi_status9.i to i32
  call void @__asan_store1_noabort(i32 %140)
  store i8 %call.i87, ptr %bi_status9.i, align 2
  br label %end_discard.exit

end_discard.exit:                                 ; preds = %if.then7.i, %land.lhs.true.i.end_discard.exit_crit_edge, %if.end.i85.end_discard.exit_crit_edge
  %141 = ptrtoint ptr %parent_bio.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %parent_bio.i, align 4
  call void @bio_endio(ptr noundef %142) #15
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %op) #15
  br label %cleanup

cleanup:                                          ; preds = %end_discard.exit, %passdown_double_checking_shared_status.exit, %do.end, %cell_defer_no_holder.exit75, %cell_defer_no_holder.exit
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_discard_passdown_pt2(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc1 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc1, align 4
  %pool2 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool2, align 8
  %pmd = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pmd, align 8
  %data_block = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 7
  %6 = ptrtoint ptr %data_block to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %data_block, align 8
  %virt_end = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 6
  %8 = ptrtoint ptr %virt_end to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %virt_end, align 8
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 5
  %10 = ptrtoint ptr %virt_begin to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %virt_begin, align 8
  %sub = add i64 %9, %7
  %add = sub i64 %sub, %11
  %call = tail call i32 @dm_pool_dec_data_range(ptr noundef %5, i64 noundef %7, i64 noundef %add) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @metadata_operation_failed(ptr noundef %3, ptr noundef nonnull @.str.104, i32 noundef %call)
  %bio = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %12 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bio, align 4
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 10, ptr %bi_status.i, align 2
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %bio4 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %15 = ptrtoint ptr %bio4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bio4, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink = phi ptr [ %16, %if.else ], [ %13, %if.then ]
  tail call void @bio_endio(ptr noundef %.sink) #15
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %17 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cell, align 8
  %19 = ptrtoint ptr %pool2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pool2, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 9
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 11
  %21 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_release_no_holder(ptr noundef %22, ptr noundef %18, ptr noundef %deferred_bio_list.i) #15
  %23 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %24, ptr noundef %18) #15
  %25 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %26, null
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.end.cell_defer_no_holder.exit_crit_edge, label %if.then.i

if.end.cell_defer_no_holder.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 14
  %27 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 13
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %worker.i.i) #15
  br label %cell_defer_no_holder.exit

cell_defer_no_holder.exit:                        ; preds = %if.then.i, %if.end.cell_defer_no_holder.exit_crit_edge
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_discard_cell_no_passdown(ptr noundef %tc, ptr noundef %virt_cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %next_mapping.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 29
  %2 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %next_mapping.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.body5.i, label %get_next_mapping.exit, !prof !508

do.body5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1277, 0\0A.popsection", ""() #15, !srcloc !521
  unreachable

get_next_mapping.exit:                            ; preds = %entry
  %4 = getelementptr inbounds i8, ptr %3, i32 8
  %5 = call ptr @memset(ptr %4, i32 0, i32 56)
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %3, ptr %3, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %prev.i.i, align 4
  %bio.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %bio.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %bio.i, align 4
  %9 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %next_mapping.i, align 8
  %tc2 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 4
  %10 = ptrtoint ptr %tc2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %tc, ptr %tc2, align 4
  %block_begin = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 2, i32 2
  %11 = ptrtoint ptr %block_begin to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %block_begin, align 8
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 5
  %13 = ptrtoint ptr %virt_begin to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %virt_begin, align 8
  %block_end = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 2, i32 3
  %14 = ptrtoint ptr %block_end to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %block_end, align 8
  %virt_end = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 6
  %16 = ptrtoint ptr %virt_end to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %virt_end, align 8
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 8
  %17 = ptrtoint ptr %cell to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %virt_cell, ptr %cell, align 8
  %holder = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %virt_cell, i32 0, i32 3
  %18 = ptrtoint ptr %holder to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %holder, align 8
  store ptr %19, ptr %bio.i, align 4
  %all_io_ds = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 28
  %20 = ptrtoint ptr %all_io_ds to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %all_io_ds, align 4
  %call4 = tail call i32 @dm_deferred_set_add_work(ptr noundef %21, ptr noundef nonnull %3) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then, label %get_next_mapping.exit.if.end_crit_edge

get_next_mapping.exit.if.end_crit_edge:           ; preds = %get_next_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %get_next_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  %process_prepared_discard = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 35
  %22 = ptrtoint ptr %process_prepared_discard to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %process_prepared_discard, align 8
  tail call void %23(ptr noundef nonnull %3) #15
  br label %if.end

if.end:                                           ; preds = %if.then, %get_next_mapping.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @process_prepared_discard_no_passdown(ptr noundef %m) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc1 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc1, align 4
  %td = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %td to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %td, align 4
  %cell = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 8
  %4 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cell, align 8
  %block_begin = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %5, i32 0, i32 2, i32 2
  %6 = ptrtoint ptr %block_begin to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %block_begin, align 8
  %block_end = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %5, i32 0, i32 2, i32 3
  %8 = ptrtoint ptr %block_end to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %block_end, align 8
  %call = tail call i32 @dm_thin_remove_range(ptr noundef %3, i64 noundef %7, i64 noundef %9) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %pool = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pool, align 8
  tail call fastcc void @metadata_operation_failed(ptr noundef %11, ptr noundef nonnull @.str.100, i32 noundef %call)
  %bio = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %12 = ptrtoint ptr %bio to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %bio, align 4
  %bi_status.i = getelementptr inbounds %struct.bio, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %bi_status.i to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 10, ptr %bi_status.i, align 2
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %bio4 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %15 = ptrtoint ptr %bio4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bio4, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink = phi ptr [ %16, %if.else ], [ %13, %if.then ]
  tail call void @bio_endio(ptr noundef %.sink) #15
  %17 = ptrtoint ptr %cell to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %cell, align 8
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %19 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pool1.i, align 8
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 9
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 11
  %prison.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 11
  %21 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_cell_release_no_holder(ptr noundef %22, ptr noundef %18, ptr noundef %deferred_bio_list.i) #15
  %23 = ptrtoint ptr %prison.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prison.i.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %24, ptr noundef %18) #15
  %25 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %deferred_bio_list.i, align 4
  %cmp.i.not.i = icmp eq ptr %26, null
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  br i1 %cmp.i.not.i, label %if.end.cell_defer_no_holder.exit_crit_edge, label %if.then.i

if.end.cell_defer_no_holder.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cell_defer_no_holder.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 14
  %27 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %20, i32 0, i32 13
  %call.i.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %28, ptr noundef %worker.i.i) #15
  br label %cell_defer_no_holder.exit

cell_defer_no_holder.exit:                        ; preds = %if.then.i, %if.end.cell_defer_no_holder.exit_crit_edge
  %29 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pool1.i, align 8
  %mapping_pool = getelementptr inbounds %struct.pool, ptr %30, i32 0, i32 38
  tail call void @mempool_free(ptr noundef %m, ptr noundef %mapping_pool) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_find_mapped_range(ptr noundef, i64 noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_deferred_set_add_work(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_thin_remove_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_inc_data_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @queue_passdown_pt2(ptr noundef %m) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc, align 4
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 8
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #15
  %prepared_discards_pt2 = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 25
  %prev.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 25, i32 1
  %4 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %m, ptr noundef %5, ptr noundef %prepared_discards_pt2) #15
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %m, ptr %prev.i, align 4
  %7 = ptrtoint ptr %m to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %prepared_discards_pt2, ptr %m, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %8 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev3.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %m, ptr %5, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call3) #15
  %wq.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 14
  %10 = ptrtoint ptr %wq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %wq.i, align 8
  %worker.i = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 13
  %call.i.i11 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %worker.i) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @passdown_endio(ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %0 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bi_private, align 4
  %tc.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %tc.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tc.i, align 4
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pool1.i, align 8
  %lock.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 20
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock.i) #15
  %prepared_discards_pt2.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 25
  %prev.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 25, i32 1
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %1, ptr noundef %7, ptr noundef %prepared_discards_pt2.i) #15
  br i1 %call.i.i.i, label %if.end.i.i.i, label %entry.queue_passdown_pt2.exit_crit_edge

entry.queue_passdown_pt2.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %queue_passdown_pt2.exit

if.end.i.i.i:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %8 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %1, ptr %prev.i.i, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %prepared_discards_pt2.i, ptr %1, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %1, ptr %7, align 4
  br label %queue_passdown_pt2.exit

queue_passdown_pt2.exit:                          ; preds = %if.end.i.i.i, %entry.queue_passdown_pt2.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock.i, i32 noundef %call3.i) #15
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 14
  %12 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %5, i32 0, i32 13
  %call.i.i11.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %13, ptr noundef %worker.i.i) #15
  tail call void @bio_put(ptr noundef %bio) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_alloc_bioset(i32 noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_put(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_block_is_shared(ptr noundef, i64 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__blkdev_issue_discard(ptr noundef, i64 noundef, i64 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_chain(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @submit_bio(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i8 @errno_to_blk_status(i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_dec_data_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @remap_and_issue_shared_cell(ptr noundef %tc, ptr noundef %cell, i64 noundef %block) unnamed_addr #1 align 64 {
entry:
  %info = alloca %struct.remap_info, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %info) #15
  %0 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 1
  %1 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 1, i32 1
  %2 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 2
  %3 = getelementptr inbounds %struct.remap_info, ptr %info, i32 0, i32 2, i32 1
  %4 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %tc, ptr %info, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %5 = call ptr @memset(ptr %0, i32 0, i32 16)
  %6 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pool, align 8
  %prison.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prison.i, align 4
  call void @dm_cell_visit_release(ptr noundef %9, ptr noundef nonnull @__remap_and_issue_shared_cell, ptr noundef nonnull %info, ptr noundef %cell) #15
  %10 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prison.i, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %11, ptr noundef %cell) #15
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %0, align 4
  %tobool.not.i25 = icmp eq ptr %13, null
  br i1 %tobool.not.i25, label %entry.while.cond3.preheader_crit_edge, label %if.then.i.lr.ph

entry.while.cond3.preheader_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond3.preheader

if.then.i.lr.ph:                                  ; preds = %entry
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 9
  %tail.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11, i32 1
  %deferred_bio_list.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 11
  br label %if.then.i

while.cond3.preheader:                            ; preds = %thin_defer_bio.exit.while.cond3.preheader_crit_edge, %entry.while.cond3.preheader_crit_edge
  %14 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %2, align 4
  %tobool.not.i1526 = icmp eq ptr %15, null
  br i1 %tobool.not.i1526, label %while.cond3.preheader.while.end8_crit_edge, label %if.then.i17.lr.ph

while.cond3.preheader.while.end8_crit_edge:       ; preds = %while.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end8

if.then.i17.lr.ph:                                ; preds = %while.cond3.preheader
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  br label %if.then.i17

if.then.i:                                        ; preds = %thin_defer_bio.exit.if.then.i_crit_edge, %if.then.i.lr.ph
  %16 = phi ptr [ %13, %if.then.i.lr.ph ], [ %33, %thin_defer_bio.exit.if.then.i_crit_edge ]
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 8
  %19 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %0, align 4
  %tobool4.not.i = icmp eq ptr %18, null
  br i1 %tobool4.not.i, label %if.then5.i, label %if.then.i.while.body_crit_edge

if.then.i.while.body_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %1, align 4
  br label %while.body

while.body:                                       ; preds = %if.then5.i, %if.then.i.while.body_crit_edge
  %21 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %16, align 8
  %22 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pool, align 8
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %24 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %16, align 8
  %25 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %16, ptr %26, align 8
  br label %thin_defer_bio.exit

if.else.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %28 = ptrtoint ptr %deferred_bio_list.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %16, ptr %deferred_bio_list.i, align 4
  br label %thin_defer_bio.exit

thin_defer_bio.exit:                              ; preds = %if.else.i.i, %if.then.i.i
  %29 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %16, ptr %tail.i.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 14
  %30 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %23, i32 0, i32 13
  %call.i.i.i = call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %31, ptr noundef %worker.i.i) #15
  %32 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %0, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %thin_defer_bio.exit.while.cond3.preheader_crit_edge, label %thin_defer_bio.exit.if.then.i_crit_edge

thin_defer_bio.exit.if.then.i_crit_edge:          ; preds = %thin_defer_bio.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

thin_defer_bio.exit.while.cond3.preheader_crit_edge: ; preds = %thin_defer_bio.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.cond3.preheader

if.then.i17:                                      ; preds = %remap_and_issue.exit.if.then.i17_crit_edge, %if.then.i17.lr.ph
  %34 = phi ptr [ %15, %if.then.i17.lr.ph ], [ %63, %remap_and_issue.exit.if.then.i17_crit_edge ]
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 8
  %37 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %36, ptr %2, align 4
  %tobool4.not.i16 = icmp eq ptr %36, null
  br i1 %tobool4.not.i16, label %if.then5.i19, label %if.then.i17.while.body7_crit_edge

if.then.i17.while.body7_crit_edge:                ; preds = %if.then.i17
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body7

if.then5.i19:                                     ; preds = %if.then.i17
  call void @__sanitizer_cov_trace_pc() #17
  %38 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %3, align 4
  br label %while.body7

while.body7:                                      ; preds = %if.then5.i19, %if.then.i17.while.body7_crit_edge
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %34, align 8
  %40 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pool, align 8
  %bi_iter.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 8
  %42 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %bi_iter.i.i, align 8
  %44 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %pool_dev.i.i, align 8
  %46 = ptrtoint ptr %45 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %45, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 3
  %48 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %49, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %34, i32 0, i32 1
  %50 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %51, %47
  br i1 %cmp.not.i.i.i, label %while.body7.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i

while.body7.bio_set_dev.exit.i.i_crit_edge:       ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i:                                    ; preds = %while.body7
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %49, -2177
  %52 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %52)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i, %while.body7.bio_set_dev.exit.i.i_crit_edge
  %53 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %47, ptr %bi_bdev.i.i.i, align 4
  call void @bio_associate_blkg(ptr noundef nonnull %34) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %41, i32 0, i32 8
  %54 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %55)
  %cmp.i.i.i = icmp sgt i32 %55, -1
  br i1 %cmp.i.i.i, label %if.then.i.i22, label %if.else.i.i23

if.then.i.i22:                                    ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %55 to i64
  %shl.i.i = shl i64 %block, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %41, i32 0, i32 7
  %56 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %57, -1
  %conv.i.i = zext i32 %sub.i.i to i64
  %and.i.i = and i64 %43, %conv.i.i
  %or.i.i = or i64 %and.i.i, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i23:                                    ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %41, i32 0, i32 7
  %58 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %59 to i64
  %mul.i.i = mul i64 %conv6.i.i, %block
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %43)
  %cmp182.i.i = icmp ult i64 %43, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i23
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %43 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %59
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i23
  call void @__sanitizer_cov_trace_pc() #17
  %60 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %59, i64 %43) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %60, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i22
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i22 ]
  %61 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_store8_noabort(i32 %61)
  store i64 %storemerge.i.i, ptr %bi_iter.i.i, align 8
  call fastcc void @issue(ptr noundef %tc, ptr noundef nonnull %34) #15
  %62 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %2, align 4
  %tobool.not.i15 = icmp eq ptr %63, null
  br i1 %tobool.not.i15, label %remap_and_issue.exit.while.end8_crit_edge, label %remap_and_issue.exit.if.then.i17_crit_edge

remap_and_issue.exit.if.then.i17_crit_edge:       ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i17

remap_and_issue.exit.while.end8_crit_edge:        ; preds = %remap_and_issue.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end8

while.end8:                                       ; preds = %remap_and_issue.exit.while.end8_crit_edge, %while.cond3.preheader.while.end8_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %info) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @alloc_data_block(ptr nocapture noundef readonly %tc, ptr noundef %result) unnamed_addr #1 align 64 {
entry:
  %free_blocks = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %free_blocks) #15
  %0 = ptrtoint ptr %free_blocks to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %free_blocks, align 8, !annotation !495
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %1 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pool1, align 8
  %pf.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 9
  %3 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %pf.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.not = icmp eq i32 %4, 0
  br i1 %cmp.not, label %if.end22, label %do.end, !prof !496

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 1528, i32 noundef 9, ptr noundef null) #15
  br label %cleanup

if.end22:                                         ; preds = %entry
  %pmd = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 5
  %5 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pmd, align 8
  %call23 = call i32 @dm_pool_get_free_block_count(ptr noundef %6, ptr noundef nonnull %free_blocks) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %if.then25

if.then25:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %2, ptr noundef nonnull @.str.106, i32 noundef %call23)
  br label %cleanup

if.end26:                                         ; preds = %if.end22
  %7 = ptrtoint ptr %free_blocks to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %free_blocks, align 8
  %low_water_blocks.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 6
  %9 = ptrtoint ptr %low_water_blocks.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %low_water_blocks.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %8)
  %cmp.not.i = icmp ult i64 %10, %8
  br i1 %cmp.not.i, label %if.end26.if.end41_crit_edge, label %land.lhs.true.i

if.end26.if.end41_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end41

land.lhs.true.i:                                  ; preds = %if.end26
  %low_water_triggered.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 10
  %11 = ptrtoint ptr %low_water_triggered.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load.i = load i8, ptr %low_water_triggered.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %bf.cast.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %bf.cast.not.i, label %do.end.i, label %land.lhs.true.i.check_low_water_mark.exit_crit_edge

land.lhs.true.i.check_low_water_mark.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %check_low_water_mark.exit

do.end.i:                                         ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  %pool_md.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 2
  %12 = ptrtoint ptr %pool_md.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pool_md.i, align 4
  %call.i = call ptr @dm_device_name(ptr noundef %13) #15
  %call1.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109, ptr noundef %call.i) #21
  %lock.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 20
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %14 = ptrtoint ptr %low_water_triggered.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %bf.load3.i = load i8, ptr %low_water_triggered.i, align 8
  %bf.set.i = or i8 %bf.load3.i, -128
  store i8 %bf.set.i, ptr %low_water_triggered.i, align 8
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %ti.i = getelementptr inbounds %struct.pool, ptr %2, i32 0, i32 1
  %15 = ptrtoint ptr %ti.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ti.i, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %16, align 8
  call void @dm_table_event(ptr noundef %18) #15
  br label %check_low_water_mark.exit

check_low_water_mark.exit:                        ; preds = %do.end.i, %land.lhs.true.i.check_low_water_mark.exit_crit_edge
  %19 = ptrtoint ptr %free_blocks to i32
  call void @__asan_load8_noabort(i32 %19)
  %.pr = load i64, ptr %free_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %.pr)
  %tobool27.not = icmp eq i64 %.pr, 0
  br i1 %tobool27.not, label %if.then28, label %check_low_water_mark.exit.if.end41_crit_edge

check_low_water_mark.exit.if.end41_crit_edge:     ; preds = %check_low_water_mark.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end41

if.then28:                                        ; preds = %check_low_water_mark.exit
  %call29 = call fastcc i32 @commit(ptr noundef %2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.then28.cleanup_crit_edge

if.then28.cleanup_crit_edge:                      ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.end32:                                         ; preds = %if.then28
  %20 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pmd, align 8
  %call34 = call i32 @dm_pool_get_free_block_count(ptr noundef %21, ptr noundef nonnull %free_blocks) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.end37, label %if.then36

if.then36:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %2, ptr noundef nonnull @.str.106, i32 noundef %call34)
  br label %cleanup

if.end37:                                         ; preds = %if.end32
  %22 = ptrtoint ptr %free_blocks to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %free_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %23)
  %tobool38.not = icmp eq i64 %23, 0
  br i1 %tobool38.not, label %if.then39, label %if.end37.if.end41_crit_edge

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end41

if.then39:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @set_pool_mode(ptr noundef %2, i32 noundef 1)
  br label %cleanup

if.end41:                                         ; preds = %if.end37.if.end41_crit_edge, %check_low_water_mark.exit.if.end41_crit_edge, %if.end26.if.end41_crit_edge
  %24 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pmd, align 8
  %call43 = call i32 @dm_pool_alloc_data_block(ptr noundef %25, ptr noundef %result) #15
  %26 = zext i32 %call43 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.225)
  switch i32 %call43, label %if.else [
    i32 0, label %if.end49
    i32 -28, label %if.then47
  ]

if.then47:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @set_pool_mode(ptr noundef %2, i32 noundef 1)
  br label %cleanup

if.else:                                          ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %2, ptr noundef nonnull @.str.107, i32 noundef %call43)
  br label %cleanup

if.end49:                                         ; preds = %if.end41
  %27 = ptrtoint ptr %pmd to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pmd, align 8
  %call51 = call i32 @dm_pool_get_free_metadata_block_count(ptr noundef %28, ptr noundef nonnull %free_blocks) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call51)
  %tobool52.not = icmp eq i32 %call51, 0
  br i1 %tobool52.not, label %if.end54, label %if.then53

if.then53:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #17
  call fastcc void @metadata_operation_failed(ptr noundef %2, ptr noundef nonnull @.str.108, i32 noundef %call51)
  br label %cleanup

if.end54:                                         ; preds = %if.end49
  %29 = ptrtoint ptr %free_blocks to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %free_blocks, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %30)
  %tobool55.not = icmp eq i64 %30, 0
  br i1 %tobool55.not, label %if.then56, label %if.end54.if.end61_crit_edge

if.end54.if.end61_crit_edge:                      ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.then56:                                        ; preds = %if.end54
  %call57 = call fastcc i32 @commit(ptr noundef %2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %tobool58.not = icmp eq i32 %call57, 0
  br i1 %tobool58.not, label %if.then56.if.end61_crit_edge, label %if.then56.cleanup_crit_edge

if.then56.cleanup_crit_edge:                      ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then56.if.end61_crit_edge:                     ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end61

if.end61:                                         ; preds = %if.then56.if.end61_crit_edge, %if.end54.if.end61_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end61, %if.then56.cleanup_crit_edge, %if.then53, %if.else, %if.then47, %if.then39, %if.then36, %if.then28.cleanup_crit_edge, %if.then25, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call23, %if.then25 ], [ %call51, %if.then53 ], [ 0, %if.end61 ], [ %call34, %if.then36 ], [ -28, %if.then39 ], [ %call29, %if.then28.cleanup_crit_edge ], [ %call43, %if.else ], [ -28, %if.then47 ], [ %call57, %if.then56.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %free_blocks) #15
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @retry_bios_on_resume(ptr nocapture noundef readonly %pool, ptr noundef %cell) unnamed_addr #1 align 64 {
entry:
  %bios = alloca %struct.bio_list, align 4
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %bios) #15
  %0 = getelementptr inbounds %struct.bio_list, ptr %bios, i32 0, i32 1
  %pf.i.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9
  %1 = ptrtoint ptr %pf.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pf.i.i, align 8
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.226)
  switch i32 %2, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %sw.bb3.i
    i32 2, label %entry.if.then_crit_edge
    i32 3, label %entry.if.then_crit_edge16
    i32 4, label %entry.if.then_crit_edge17
  ]

entry.if.then_crit_edge17:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

entry.if.then_crit_edge16:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.bb.i:                                          ; preds = %entry
  %call1.i = tail call i32 @___ratelimit(ptr noundef nonnull @should_error_unserviceable_bio._rs, ptr noundef nonnull @__func__.should_error_unserviceable_bio) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %sw.bb.i.if.then_crit_edge, label %sw.bb.i.if.then.sink.split_crit_edge

sw.bb.i.if.then.sink.split_crit_edge:             ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.sink.split

sw.bb.i.if.then_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.bb3.i:                                         ; preds = %entry
  %error_if_no_space.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 9, i32 1
  %4 = ptrtoint ptr %error_if_no_space.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i = load i8, ptr %error_if_no_space.i, align 4
  %5 = and i8 %bf.load.i, 16
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %bf.cast.not.i = icmp eq i8 %5, 0
  br i1 %bf.cast.not.i, label %if.end, label %sw.bb3.i.if.then_crit_edge

sw.bb3.i.if.then_crit_edge:                       ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

sw.default.i:                                     ; preds = %entry
  %call5.i = tail call i32 @___ratelimit(ptr noundef nonnull @should_error_unserviceable_bio._rs.95, ptr noundef nonnull @__func__.should_error_unserviceable_bio) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %sw.default.i.if.then_crit_edge, label %sw.default.i.if.then.sink.split_crit_edge

sw.default.i.if.then.sink.split_crit_edge:        ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.sink.split

sw.default.i.if.then_crit_edge:                   ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then

if.then.sink.split:                               ; preds = %sw.default.i.if.then.sink.split_crit_edge, %sw.bb.i.if.then.sink.split_crit_edge
  %.str.94.sink = phi ptr [ @.str.94, %sw.bb.i.if.then.sink.split_crit_edge ], [ @.str.97, %sw.default.i.if.then.sink.split_crit_edge ]
  %call2.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull %.str.94.sink) #21
  br label %if.then

if.then:                                          ; preds = %if.then.sink.split, %sw.default.i.if.then_crit_edge, %sw.bb3.i.if.then_crit_edge, %sw.bb.i.if.then_crit_edge, %entry.if.then_crit_edge, %entry.if.then_crit_edge16, %entry.if.then_crit_edge17
  %retval.0.i.ph = phi i8 [ 10, %sw.default.i.if.then_crit_edge ], [ 10, %entry.if.then_crit_edge ], [ 10, %entry.if.then_crit_edge16 ], [ 10, %entry.if.then_crit_edge17 ], [ 10, %sw.bb.i.if.then_crit_edge ], [ 3, %sw.bb3.i.if.then_crit_edge ], [ 10, %if.then.sink.split ]
  %prison.i = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 11
  %6 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prison.i, align 4
  tail call void @dm_cell_error(ptr noundef %7, ptr noundef %cell, i8 noundef zeroext %retval.0.i.ph) #15
  %8 = ptrtoint ptr %prison.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prison.i, align 4
  tail call void @dm_bio_prison_free_cell(ptr noundef %9, ptr noundef %cell) #15
  br label %cleanup

if.end:                                           ; preds = %sw.bb3.i
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %0, align 4
  %11 = ptrtoint ptr %bios to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %bios, align 4
  %prison.i9 = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 11
  %12 = ptrtoint ptr %prison.i9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prison.i9, align 4
  call void @dm_cell_release(ptr noundef %13, ptr noundef %cell, ptr noundef nonnull %bios) #15
  %14 = ptrtoint ptr %prison.i9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prison.i9, align 4
  call void @dm_bio_prison_free_cell(ptr noundef %15, ptr noundef %cell) #15
  %16 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %bios, align 4
  %tobool.not.i1015 = icmp eq ptr %17, null
  br i1 %tobool.not.i1015, label %if.end.cleanup_crit_edge, label %if.end.if.then.i_crit_edge

if.end.if.then.i_crit_edge:                       ; preds = %if.end
  br label %if.then.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

if.then.i:                                        ; preds = %retry_on_resume.exit.if.then.i_crit_edge, %if.end.if.then.i_crit_edge
  %18 = phi ptr [ %33, %retry_on_resume.exit.if.then.i_crit_edge ], [ %17, %if.end.if.then.i_crit_edge ]
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %18, align 8
  %21 = ptrtoint ptr %bios to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %bios, align 4
  %tobool4.not.i = icmp eq ptr %20, null
  br i1 %tobool4.not.i, label %if.then5.i, label %if.then.i.while.body_crit_edge

if.then.i.while.body_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %0, align 4
  br label %while.body

while.body:                                       ; preds = %if.then5.i, %if.then.i.while.body_crit_edge
  %23 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %18, align 8
  %call.i = call ptr @dm_per_bio_data(ptr noundef nonnull %18, i32 noundef 32) #15
  %24 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %call.i, align 4
  %lock.i = getelementptr inbounds %struct.thin_c, ptr %25, i32 0, i32 9
  call void @_raw_spin_lock_irq(ptr noundef %lock.i) #15
  %26 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %18, align 8
  %tail.i.i = getelementptr inbounds %struct.thin_c, ptr %25, i32 0, i32 12, i32 1
  %27 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tail.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %28, null
  br i1 %tobool.not.i.i, label %if.else.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %18, ptr %28, align 8
  br label %retry_on_resume.exit

if.else.i.i:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #17
  %retry_on_resume_list.i = getelementptr inbounds %struct.thin_c, ptr %25, i32 0, i32 12
  %30 = ptrtoint ptr %retry_on_resume_list.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %18, ptr %retry_on_resume_list.i, align 4
  br label %retry_on_resume.exit

retry_on_resume.exit:                             ; preds = %if.else.i.i, %if.then.i.i
  %31 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %18, ptr %tail.i.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef %lock.i) #15
  %32 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bios, align 4
  %tobool.not.i10 = icmp eq ptr %33, null
  br i1 %tobool.not.i10, label %retry_on_resume.exit.cleanup_crit_edge, label %retry_on_resume.exit.if.then.i_crit_edge

retry_on_resume.exit.if.then.i_crit_edge:         ; preds = %retry_on_resume.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

retry_on_resume.exit.cleanup_crit_edge:           ; preds = %retry_on_resume.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %cleanup

cleanup:                                          ; preds = %retry_on_resume.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %if.then
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %bios) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_free_block_count(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_alloc_data_block(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_free_metadata_block_count(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_table_event(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @schedule_copy(ptr noundef %tc, i64 noundef %virt_block, ptr nocapture noundef readonly %origin, i64 noundef %data_origin, i64 noundef %data_dest, ptr noundef %cell, ptr noundef %bio, i64 noundef %len) unnamed_addr #1 align 64 {
entry:
  %to.i = alloca %struct.dm_io_region, align 8
  %from = alloca %struct.dm_io_region, align 8
  %to = alloca %struct.dm_io_region, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %next_mapping.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 29
  %2 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %next_mapping.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.body5.i, label %get_next_mapping.exit, !prof !508

do.body5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1277, 0\0A.popsection", ""() #15, !srcloc !521
  unreachable

get_next_mapping.exit:                            ; preds = %entry
  %4 = getelementptr inbounds i8, ptr %3, i32 8
  %5 = call ptr @memset(ptr %4, i32 0, i32 56)
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %3, ptr %3, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %prev.i.i, align 4
  %bio.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %bio.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %bio.i, align 4
  %9 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %next_mapping.i, align 8
  %tc2 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 4
  %10 = ptrtoint ptr %tc2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %tc, ptr %tc2, align 4
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 5
  %11 = ptrtoint ptr %virt_begin to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %virt_block, ptr %virt_begin, align 8
  %add = add i64 %virt_block, 1
  %virt_end = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 6
  %12 = ptrtoint ptr %virt_end to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %add, ptr %virt_end, align 8
  %data_block = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 7
  %13 = ptrtoint ptr %data_block to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %data_dest, ptr %data_block, align 8
  %cell3 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 8
  %14 = ptrtoint ptr %cell3 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %cell, ptr %cell3, align 8
  %prepare_actions = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 2
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %prepare_actions, i32 noundef 4) #15
  %15 = ptrtoint ptr %prepare_actions to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 3, ptr %prepare_actions, align 4
  %shared_read_ds = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 27
  %16 = ptrtoint ptr %shared_read_ds to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %shared_read_ds, align 8
  %call4 = tail call i32 @dm_deferred_set_add_work(ptr noundef %17, ptr noundef nonnull %3) #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool.not = icmp eq i32 %call4, 0
  br i1 %tobool.not, label %if.then, label %get_next_mapping.exit.if.end_crit_edge

get_next_mapping.exit.if.end_crit_edge:           ; preds = %get_next_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end

if.then:                                          ; preds = %get_next_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @complete_mapping_preparation(ptr noundef nonnull %3)
  br label %if.end

if.end:                                           ; preds = %if.then, %get_next_mapping.exit.if.end_crit_edge
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %18 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bi_opf.i, align 8
  %and.i.i = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end.if.else_crit_edge, label %io_overwrites_block.exit

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

io_overwrites_block.exit:                         ; preds = %if.end
  %bi_size.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %20 = ptrtoint ptr %bi_size.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %bi_size.i.i, align 8
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %22 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sectors_per_block.i.i, align 8
  %shl.i.i = shl i32 %23, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %shl.i.i)
  %cmp.i.i.not = icmp eq i32 %21, %shl.i.i
  br i1 %cmp.i.i.not, label %if.then7, label %io_overwrites_block.exit.if.else_crit_edge

io_overwrites_block.exit.if.else_crit_edge:       ; preds = %io_overwrites_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then7:                                         ; preds = %io_overwrites_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @remap_and_issue_overwrite(ptr noundef %tc, ptr noundef %bio, i64 noundef %data_dest, ptr noundef nonnull %3)
  br label %if.end31

if.else:                                          ; preds = %io_overwrites_block.exit.if.else_crit_edge, %if.end.if.else_crit_edge
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %from) #15
  %24 = ptrtoint ptr %from to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 -1, ptr %from, align 8
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %to) #15
  %25 = ptrtoint ptr %to to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %to, align 8
  %26 = ptrtoint ptr %origin to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %origin, align 4
  %28 = ptrtoint ptr %from to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %27, ptr %from, align 8
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %29 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %sectors_per_block, align 8
  %conv = zext i32 %30 to i64
  %mul = mul i64 %conv, %data_origin
  %sector = getelementptr inbounds %struct.dm_io_region, ptr %from, i32 0, i32 1
  %31 = ptrtoint ptr %sector to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %mul, ptr %sector, align 8
  %count = getelementptr inbounds %struct.dm_io_region, ptr %from, i32 0, i32 2
  %32 = ptrtoint ptr %count to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %len, ptr %count, align 8
  %pool_dev = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %33 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pool_dev, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %34, align 4
  store ptr %36, ptr %to, align 8
  %mul13 = mul i64 %conv, %data_dest
  %sector14 = getelementptr inbounds %struct.dm_io_region, ptr %to, i32 0, i32 1
  %37 = ptrtoint ptr %sector14 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %mul13, ptr %sector14, align 8
  %count15 = getelementptr inbounds %struct.dm_io_region, ptr %to, i32 0, i32 2
  %38 = ptrtoint ptr %count15 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %len, ptr %count15, align 8
  %copier = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 12
  %39 = ptrtoint ptr %copier to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %copier, align 8
  call void @dm_kcopyd_copy(ptr noundef %40, ptr noundef nonnull %from, i32 noundef 1, ptr noundef nonnull %to, i32 noundef 0, ptr noundef nonnull @copy_complete, ptr noundef nonnull %3) #15
  %41 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sectors_per_block, align 8
  %conv17 = zext i32 %42 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %conv17, i64 %len)
  %cmp = icmp ugt i64 %conv17, %len
  br i1 %cmp, label %land.lhs.true, label %if.else.if.end30_crit_edge

if.else.if.end30_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30

land.lhs.true:                                    ; preds = %if.else
  %zero_new_blocks = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 9, i32 1
  %43 = ptrtoint ptr %zero_new_blocks to i32
  call void @__asan_load1_noabort(i32 %43)
  %bf.load = load i8, ptr %zero_new_blocks, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %land.lhs.true.if.end30_crit_edge, label %if.then20

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.end30

if.then20:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  %call.i.i66 = call zeroext i1 @__kasan_check_write(ptr noundef %prepare_actions, i32 noundef 4) #15
  call void @llvm.prefetch.p0(ptr %prepare_actions, i32 1, i32 3, i32 1) #15
  %44 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %prepare_actions, ptr %prepare_actions, i32 1, ptr elementtype(i32) %prepare_actions) #15, !srcloc !523
  %45 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %sectors_per_block, align 8
  %conv23 = zext i32 %46 to i64
  %mul24 = mul i64 %conv23, %data_dest
  %add25 = add i64 %mul24, %len
  %add26 = add i64 %data_dest, 1
  %mul29 = mul i64 %add26, %conv23
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %to.i) #15
  %47 = ptrtoint ptr %to.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 -1, ptr %to.i, align 8
  %48 = ptrtoint ptr %pool_dev to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pool_dev, align 8
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 4
  store ptr %51, ptr %to.i, align 8
  %sector.i = getelementptr inbounds %struct.dm_io_region, ptr %to.i, i32 0, i32 1
  %52 = ptrtoint ptr %sector.i to i32
  call void @__asan_store8_noabort(i32 %52)
  store i64 %add25, ptr %sector.i, align 8
  %sub.i = sub i64 %mul29, %add25
  %count.i = getelementptr inbounds %struct.dm_io_region, ptr %to.i, i32 0, i32 2
  %53 = ptrtoint ptr %count.i to i32
  call void @__asan_store8_noabort(i32 %53)
  store i64 %sub.i, ptr %count.i, align 8
  %54 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %pool1, align 8
  %copier.i = getelementptr inbounds %struct.pool, ptr %55, i32 0, i32 12
  %56 = ptrtoint ptr %copier.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %copier.i, align 8
  call void @dm_kcopyd_zero(ptr noundef %57, i32 noundef 1, ptr noundef nonnull %to.i, i32 noundef 0, ptr noundef nonnull @copy_complete, ptr noundef nonnull %3) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %to.i) #15
  br label %if.end30

if.end30:                                         ; preds = %if.then20, %land.lhs.true.if.end30_crit_edge, %if.else.if.end30_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %to) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %from) #15
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then7
  call fastcc void @complete_mapping_preparation(ptr noundef nonnull %3)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @complete_mapping_preparation(ptr noundef %m) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %tc = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 4
  %0 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %tc, align 4
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pool1, align 8
  %lock = getelementptr inbounds %struct.pool, ptr %3, i32 0, i32 20
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #15
  %4 = ptrtoint ptr %tc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tc, align 4
  %pool1.i = getelementptr inbounds %struct.thin_c, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %pool1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pool1.i, align 8
  %prepare_actions.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %prepare_actions.i, i32 noundef 4) #15
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !503
  tail call void @llvm.prefetch.p0(ptr %prepare_actions.i, i32 1, i32 3, i32 1) #15
  %8 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %prepare_actions.i, ptr %prepare_actions.i, i32 1, ptr elementtype(i32) %prepare_actions.i) #15, !srcloc !504
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %8, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #15, !srcloc !505
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.__complete_mapping_preparation.exit_crit_edge

entry.__complete_mapping_preparation.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %__complete_mapping_preparation.exit

if.then.i:                                        ; preds = %entry
  %prepared_mappings.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 23
  %prev.i.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 23, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %call.i.i5.i = tail call zeroext i1 @__list_add_valid(ptr noundef %m, ptr noundef %10, ptr noundef %prepared_mappings.i) #15
  br i1 %call.i.i5.i, label %if.end.i.i.i, label %if.then.i.list_add_tail.exit.i_crit_edge

if.then.i.list_add_tail.exit.i_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %list_add_tail.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %11 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %m, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %m to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %prepared_mappings.i, ptr %m, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %m, i32 0, i32 1
  %13 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev3.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %m, ptr %10, align 4
  br label %list_add_tail.exit.i

list_add_tail.exit.i:                             ; preds = %if.end.i.i.i, %if.then.i.list_add_tail.exit.i_crit_edge
  %wq.i.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 14
  %15 = ptrtoint ptr %wq.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %wq.i.i, align 8
  %worker.i.i = getelementptr inbounds %struct.pool, ptr %7, i32 0, i32 13
  %call.i.i6.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %16, ptr noundef %worker.i.i) #15
  br label %__complete_mapping_preparation.exit

__complete_mapping_preparation.exit:              ; preds = %list_add_tail.exit.i, %entry.__complete_mapping_preparation.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call3) #15
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @remap_and_issue_overwrite(ptr nocapture noundef readonly %tc, ptr noundef %bio, i64 noundef %data_begin, ptr noundef %m) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %call = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %overwrite_mapping = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 3
  %2 = ptrtoint ptr %overwrite_mapping to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %m, ptr %overwrite_mapping, align 4
  %bio2 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 9
  %3 = ptrtoint ptr %bio2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %bio, ptr %bio2, align 4
  %saved_bi_end_io = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %m, i32 0, i32 10
  %bi_end_io.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 10
  %4 = ptrtoint ptr %bi_end_io.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bi_end_io.i, align 8
  %6 = ptrtoint ptr %saved_bi_end_io to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %saved_bi_end_io, align 4
  store ptr @overwrite_endio, ptr %bi_end_io.i, align 8
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %7 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %bi_opf.i, align 8
  %and.i = and i32 %8, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i)
  %cmp.i = icmp eq i32 %and.i, 3
  br i1 %cmp.i, label %entry.inc_all_io_entry.exit_crit_edge, label %if.end.i

entry.inc_all_io_entry.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  %call.i = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 28
  %9 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = tail call ptr @dm_deferred_entry_inc(ptr noundef %10) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %11 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i, %entry.inc_all_io_entry.exit_crit_edge
  %12 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pool1, align 8
  %bi_iter.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8
  %14 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %bi_iter.i.i, align 8
  %pool_dev.i.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %16 = ptrtoint ptr %pool_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pool_dev.i.i, align 8
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %17, align 4
  %bi_flags.i.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 3
  %20 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %bi_flags.i.i.i.i, align 4
  %conv1.i.i.i.i = and i16 %21, -2049
  store i16 %conv1.i.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  %bi_bdev.i.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 1
  %22 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %bi_bdev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %23, %19
  br i1 %cmp.not.i.i.i, label %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge, label %if.then.i.i.i

inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge: ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_set_dev.exit.i.i

if.then.i.i.i:                                    ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %conv1.i8.i.i.i = and i16 %21, -2177
  %24 = ptrtoint ptr %bi_flags.i.i.i.i to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 %conv1.i8.i.i.i, ptr %bi_flags.i.i.i.i, align 4
  br label %bio_set_dev.exit.i.i

bio_set_dev.exit.i.i:                             ; preds = %if.then.i.i.i, %inc_all_io_entry.exit.bio_set_dev.exit.i.i_crit_edge
  %25 = ptrtoint ptr %bi_bdev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %19, ptr %bi_bdev.i.i.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %bio) #15
  %sectors_per_block_shift.i.i.i = getelementptr inbounds %struct.pool, ptr %13, i32 0, i32 8
  %26 = ptrtoint ptr %sectors_per_block_shift.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sectors_per_block_shift.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %cmp.i.i.i = icmp sgt i32 %27, -1
  br i1 %cmp.i.i.i, label %if.then.i.i, label %if.else.i.i

if.then.i.i:                                      ; preds = %bio_set_dev.exit.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %sh_prom.i.i = zext i32 %27 to i64
  %shl.i.i = shl i64 %data_begin, %sh_prom.i.i
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %13, i32 0, i32 7
  %28 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %sectors_per_block.i.i, align 8
  %sub.i.i = add i32 %29, -1
  %conv.i.i = zext i32 %sub.i.i to i64
  %and.i.i = and i64 %15, %conv.i.i
  %or.i.i = or i64 %and.i.i, %shl.i.i
  br label %remap_and_issue.exit

if.else.i.i:                                      ; preds = %bio_set_dev.exit.i.i
  %sectors_per_block5.i.i = getelementptr inbounds %struct.pool, ptr %13, i32 0, i32 7
  %30 = ptrtoint ptr %sectors_per_block5.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %sectors_per_block5.i.i, align 8
  %conv6.i.i = zext i32 %31 to i64
  %mul.i.i = mul i64 %conv6.i.i, %data_begin
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %15)
  %cmp182.i.i = icmp ult i64 %15, 4294967296
  br i1 %cmp182.i.i, label %if.then186.i.i, label %if.else192.i.i, !prof !496

if.then186.i.i:                                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %conv187.i.i = trunc i64 %15 to i32
  %rem188.i.i = urem i32 %conv187.i.i, %31
  br label %if.end196.i.i

if.else192.i.i:                                   ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #17
  %32 = tail call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %31, i64 %15) #20, !srcloc !502
  %asmresult.i296.i.i = extractvalue { i64, i64 } %32, 0
  %shr.i.i.i = lshr i64 %asmresult.i296.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %if.end196.i.i

if.end196.i.i:                                    ; preds = %if.else192.i.i, %if.then186.i.i
  %__rem.0.i.i = phi i32 [ %rem188.i.i, %if.then186.i.i ], [ %conv.i.i.i, %if.else192.i.i ]
  %conv198.i.i = zext i32 %__rem.0.i.i to i64
  %add199.i.i = add i64 %mul.i.i, %conv198.i.i
  br label %remap_and_issue.exit

remap_and_issue.exit:                             ; preds = %if.end196.i.i, %if.then.i.i
  %storemerge.i.i = phi i64 [ %add199.i.i, %if.end196.i.i ], [ %or.i.i, %if.then.i.i ]
  %33 = ptrtoint ptr %bi_iter.i.i to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %storemerge.i.i, ptr %bi_iter.i.i, align 8
  tail call fastcc void @issue(ptr noundef %tc, ptr noundef %bio) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_kcopyd_copy(ptr noundef, ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @copy_complete(i32 noundef %read_err, i32 noundef %write_err, ptr noundef %context) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = or i32 %write_err, %read_err
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %1 = icmp eq i32 %0, 0
  %2 = select i1 %1, i8 0, i8 10
  %status = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %context, i32 0, i32 3
  %3 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %3)
  store i8 %2, ptr %status, align 8
  tail call fastcc void @complete_mapping_preparation(ptr noundef %context)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @overwrite_endio(ptr noundef %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @dm_per_bio_data(ptr noundef %bio, i32 noundef 32) #15
  %overwrite_mapping = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call, i32 0, i32 3
  %0 = ptrtoint ptr %overwrite_mapping to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %overwrite_mapping, align 4
  %saved_bi_end_io = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %1, i32 0, i32 10
  %2 = ptrtoint ptr %saved_bi_end_io to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %saved_bi_end_io, align 8
  %bi_end_io = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 10
  %4 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %bi_end_io, align 8
  %bi_status = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 6
  %5 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %bi_status, align 2
  %status = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %6, ptr %status, align 8
  tail call fastcc void @complete_mapping_preparation(ptr noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_kcopyd_zero(ptr noundef, i32 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_cell_release(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__remap_and_issue_shared_cell(ptr nocapture noundef %context, ptr nocapture noundef %cell) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %bios = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 4
  %0 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bios, align 4
  %tobool.not.i35 = icmp eq ptr %1, null
  br i1 %tobool.not.i35, label %entry.while.end_crit_edge, label %if.then.i.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

if.then.i.lr.ph:                                  ; preds = %entry
  %tail.i = getelementptr inbounds %struct.dm_bio_prison_cell, ptr %cell, i32 0, i32 4, i32 1
  %tail.i28 = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 2, i32 1
  %issue_bios = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 2
  %tail.i22 = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 1, i32 1
  %defer_bios = getelementptr inbounds %struct.remap_info, ptr %context, i32 0, i32 1
  br label %if.then.i

if.then.i:                                        ; preds = %if.end.if.then.i_crit_edge, %if.then.i.lr.ph
  %2 = phi ptr [ %1, %if.then.i.lr.ph ], [ %39, %if.end.if.then.i_crit_edge ]
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 8
  %5 = ptrtoint ptr %bios to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %4, ptr %bios, align 4
  %tobool4.not.i = icmp eq ptr %4, null
  br i1 %tobool4.not.i, label %if.then5.i, label %if.then.i.while.body_crit_edge

if.then.i.while.body_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.body

if.then5.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #17
  %6 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %tail.i, align 4
  br label %while.body

while.body:                                       ; preds = %if.then5.i, %if.then.i.while.body_crit_edge
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr null, ptr %2, align 8
  %bi_opf = getelementptr inbounds %struct.bio, ptr %2, i32 0, i32 2
  %8 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bi_opf, align 8
  %and = and i32 %9, 255
  %10 = and i32 %9, 393217
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %11 = icmp ne i32 %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and)
  %cmp7 = icmp eq i32 %and, 3
  %or.cond34 = or i1 %11, %cmp7
  br i1 %or.cond34, label %if.then, label %if.else

if.then:                                          ; preds = %while.body
  %12 = ptrtoint ptr %tail.i22 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %tail.i22, align 4
  %tobool.not.i23 = icmp eq ptr %13, null
  br i1 %tobool.not.i23, label %if.else.i, label %if.then.i24

if.then.i24:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %2, ptr %13, align 8
  br label %if.end

if.else.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  %15 = ptrtoint ptr %defer_bios to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %2, ptr %defer_bios, align 4
  br label %if.end

if.else:                                          ; preds = %while.body
  %call8 = tail call ptr @dm_per_bio_data(ptr noundef nonnull %2, i32 noundef 32) #15
  %16 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %context, align 4
  %pool = getelementptr inbounds %struct.thin_c, ptr %17, i32 0, i32 5
  %18 = ptrtoint ptr %pool to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pool, align 8
  %shared_read_ds = getelementptr inbounds %struct.pool, ptr %19, i32 0, i32 27
  %20 = ptrtoint ptr %shared_read_ds to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %shared_read_ds, align 8
  %call9 = tail call ptr @dm_deferred_entry_inc(ptr noundef %21) #15
  %shared_read_entry = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call8, i32 0, i32 1
  %22 = ptrtoint ptr %shared_read_entry to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call9, ptr %shared_read_entry, align 4
  %23 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bi_opf, align 8
  %and.i26 = and i32 %24, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.i26)
  %cmp.i = icmp eq i32 %and.i26, 3
  br i1 %cmp.i, label %if.else.inc_all_io_entry.exit_crit_edge, label %if.end.i27

if.else.inc_all_io_entry.exit_crit_edge:          ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  br label %inc_all_io_entry.exit

if.end.i27:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #17
  %25 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %context, align 4
  %pool11 = getelementptr inbounds %struct.thin_c, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %pool11 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pool11, align 8
  %call.i = tail call ptr @dm_per_bio_data(ptr noundef nonnull %2, i32 noundef 32) #15
  %all_io_ds.i = getelementptr inbounds %struct.pool, ptr %28, i32 0, i32 28
  %29 = ptrtoint ptr %all_io_ds.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %all_io_ds.i, align 4
  %call1.i = tail call ptr @dm_deferred_entry_inc(ptr noundef %30) #15
  %all_io_entry.i = getelementptr inbounds %struct.dm_thin_endio_hook, ptr %call.i, i32 0, i32 2
  %31 = ptrtoint ptr %all_io_entry.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call1.i, ptr %all_io_entry.i, align 4
  br label %inc_all_io_entry.exit

inc_all_io_entry.exit:                            ; preds = %if.end.i27, %if.else.inc_all_io_entry.exit_crit_edge
  %32 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr null, ptr %2, align 8
  %33 = ptrtoint ptr %tail.i28 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tail.i28, align 4
  %tobool.not.i29 = icmp eq ptr %34, null
  br i1 %tobool.not.i29, label %if.else.i31, label %if.then.i30

if.then.i30:                                      ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %2, ptr %34, align 8
  br label %if.end

if.else.i31:                                      ; preds = %inc_all_io_entry.exit
  call void @__sanitizer_cov_trace_pc() #17
  %36 = ptrtoint ptr %issue_bios to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %2, ptr %issue_bios, align 4
  br label %if.end

if.end:                                           ; preds = %if.else.i31, %if.then.i30, %if.else.i, %if.then.i24
  %tail.i28.sink = phi ptr [ %tail.i22, %if.then.i24 ], [ %tail.i22, %if.else.i ], [ %tail.i28, %if.then.i30 ], [ %tail.i28, %if.else.i31 ]
  %37 = ptrtoint ptr %tail.i28.sink to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %2, ptr %tail.i28.sink, align 4
  %38 = ptrtoint ptr %bios to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %bios, align 4
  %tobool.not.i = icmp eq ptr %39, null
  br i1 %tobool.not.i, label %if.end.while.end_crit_edge, label %if.end.if.then.i_crit_edge

if.end.if.then.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.then.i

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %while.end

while.end:                                        ; preds = %if.end.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @schedule_zero(ptr noundef %tc, i64 noundef %virt_block, i64 noundef %data_block, ptr noundef %cell, ptr noundef %bio) unnamed_addr #1 align 64 {
entry:
  %to.i = alloca %struct.dm_io_region, align 8
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %pool1 = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 5
  %0 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pool1, align 8
  %next_mapping.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 29
  %2 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %next_mapping.i, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %do.body5.i, label %get_next_mapping.exit, !prof !508

do.body5.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/md/dm-thin.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1277, 0\0A.popsection", ""() #15, !srcloc !521
  unreachable

get_next_mapping.exit:                            ; preds = %entry
  %4 = getelementptr inbounds i8, ptr %3, i32 8
  %5 = call ptr @memset(ptr %4, i32 0, i32 56)
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %3, ptr %3, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %prev.i.i, align 4
  %bio.i = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %bio.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %bio.i, align 4
  %9 = ptrtoint ptr %next_mapping.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %next_mapping.i, align 8
  %prepare_actions = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 2
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %prepare_actions, i32 noundef 4) #15
  %10 = ptrtoint ptr %prepare_actions to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile i32 1, ptr %prepare_actions, align 4
  %tc2 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 4
  %11 = ptrtoint ptr %tc2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %tc, ptr %tc2, align 4
  %virt_begin = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 5
  %12 = ptrtoint ptr %virt_begin to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %virt_block, ptr %virt_begin, align 8
  %add = add i64 %virt_block, 1
  %virt_end = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 6
  %13 = ptrtoint ptr %virt_end to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %add, ptr %virt_end, align 8
  %data_block3 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 7
  %14 = ptrtoint ptr %data_block3 to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %data_block, ptr %data_block3, align 8
  %cell4 = getelementptr inbounds %struct.dm_thin_new_mapping, ptr %3, i32 0, i32 8
  %15 = ptrtoint ptr %cell4 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %cell, ptr %cell4, align 8
  %zero_new_blocks = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 9, i32 1
  %16 = ptrtoint ptr %zero_new_blocks to i32
  call void @__asan_load1_noabort(i32 %16)
  %bf.load = load i8, ptr %zero_new_blocks, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %if.else11, label %if.then

if.then:                                          ; preds = %get_next_mapping.exit
  %bi_opf.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 2
  %17 = ptrtoint ptr %bi_opf.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %bi_opf.i, align 8
  %and.i.i = and i32 %18, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.then.if.else_crit_edge, label %io_overwrites_block.exit

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

io_overwrites_block.exit:                         ; preds = %if.then
  %bi_size.i.i = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 8, i32 1
  %19 = ptrtoint ptr %bi_size.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %bi_size.i.i, align 8
  %sectors_per_block.i.i = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %21 = ptrtoint ptr %sectors_per_block.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %sectors_per_block.i.i, align 8
  %shl.i.i = shl i32 %22, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %shl.i.i)
  %cmp.i.i.not = icmp eq i32 %20, %shl.i.i
  br i1 %cmp.i.i.not, label %if.then6, label %io_overwrites_block.exit.if.else_crit_edge

io_overwrites_block.exit.if.else_crit_edge:       ; preds = %io_overwrites_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %if.else

if.then6:                                         ; preds = %io_overwrites_block.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call fastcc void @remap_and_issue_overwrite(ptr noundef %tc, ptr noundef %bio, i64 noundef %data_block, ptr noundef nonnull %3)
  br label %if.end12

if.else:                                          ; preds = %io_overwrites_block.exit.if.else_crit_edge, %if.then.if.else_crit_edge
  %sectors_per_block = getelementptr inbounds %struct.pool, ptr %1, i32 0, i32 7
  %23 = ptrtoint ptr %sectors_per_block to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %sectors_per_block, align 8
  %conv = zext i32 %24 to i64
  %mul = mul i64 %conv, %data_block
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %to.i) #15
  %25 = ptrtoint ptr %to.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %to.i, align 8
  %pool_dev.i = getelementptr inbounds %struct.thin_c, ptr %tc, i32 0, i32 1
  %26 = ptrtoint ptr %pool_dev.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pool_dev.i, align 8
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %27, align 4
  store ptr %29, ptr %to.i, align 8
  %sector.i = getelementptr inbounds %struct.dm_io_region, ptr %to.i, i32 0, i32 1
  %30 = ptrtoint ptr %sector.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %mul, ptr %sector.i, align 8
  %count.i = getelementptr inbounds %struct.dm_io_region, ptr %to.i, i32 0, i32 2
  %31 = ptrtoint ptr %count.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %conv, ptr %count.i, align 8
  %32 = ptrtoint ptr %pool1 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pool1, align 8
  %copier.i = getelementptr inbounds %struct.pool, ptr %33, i32 0, i32 12
  %34 = ptrtoint ptr %copier.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %copier.i, align 8
  call void @dm_kcopyd_zero(ptr noundef %35, i32 noundef 1, ptr noundef nonnull %to.i, i32 noundef 0, ptr noundef nonnull @copy_complete, ptr noundef nonnull %3) #15
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %to.i) #15
  br label %if.end12

if.else11:                                        ; preds = %get_next_mapping.exit
  call void @__sanitizer_cov_trace_pc() #17
  tail call void @process_prepared_mapping(ptr noundef nonnull %3)
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.else, %if.then6
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @requeue_bios(ptr noundef %pool) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #17
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !516
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #15
  %call.i = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 696, ptr noundef nonnull @.str.78) #15
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b28 = load i1, ptr @requeue_bios.__warned, align 1
  br i1 %.b28, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @requeue_bios.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.17, i32 noundef 2803, ptr noundef nonnull @.str.92) #15
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %active_thins = getelementptr inbounds %struct.pool, ptr %pool, i32 0, i32 26
  %4 = ptrtoint ptr %active_thins to i32
  call void @__asan_load4_noabort(i32 %4)
  %tc.040 = load volatile ptr, ptr %active_thins, align 8
  %cmp.not41 = icmp eq ptr %tc.040, %active_thins
  br i1 %cmp.not41, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.body:                                         ; preds = %bio_list_merge.exit.for.body_crit_edge, %do.end.for.body_crit_edge
  %tc.042 = phi ptr [ %tc.0, %bio_list_merge.exit.for.body_crit_edge ], [ %tc.040, %do.end.for.body_crit_edge ]
  %lock = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 9
  tail call void @_raw_spin_lock_irq(ptr noundef %lock) #15
  %deferred_bio_list = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 11
  %retry_on_resume_list = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 12
  %5 = ptrtoint ptr %retry_on_resume_list to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %retry_on_resume_list, align 4
  %tobool.not.i29 = icmp eq ptr %6, null
  br i1 %tobool.not.i29, label %for.body.bio_list_merge.exit_crit_edge, label %if.end.i

for.body.bio_list_merge.exit_crit_edge:           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #17
  br label %bio_list_merge.exit

if.end.i:                                         ; preds = %for.body
  %tail.i = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 11, i32 1
  %7 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tail.i, align 4
  %tobool1.not.i = icmp eq ptr %8, null
  br i1 %tobool1.not.i, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %6, ptr %8, align 8
  br label %if.end7.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #17
  %10 = ptrtoint ptr %deferred_bio_list to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %6, ptr %deferred_bio_list, align 4
  br label %if.end7.i

if.end7.i:                                        ; preds = %if.else.i, %if.then2.i
  %tail8.i = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 12, i32 1
  %11 = ptrtoint ptr %tail8.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tail8.i, align 4
  %13 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %tail.i, align 4
  br label %bio_list_merge.exit

bio_list_merge.exit:                              ; preds = %if.end7.i, %for.body.bio_list_merge.exit_crit_edge
  %tail.i30 = getelementptr inbounds %struct.thin_c, ptr %tc.042, i32 0, i32 12, i32 1
  %14 = ptrtoint ptr %tail.i30 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %tail.i30, align 4
  %15 = ptrtoint ptr %retry_on_resume_list to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %retry_on_resume_list, align 4
  tail call void @_raw_spin_unlock_irq(ptr noundef %lock) #15
  %16 = ptrtoint ptr %tc.042 to i32
  call void @__asan_load4_noabort(i32 %16)
  %tc.0 = load volatile ptr, ptr %tc.042, align 8
  %cmp.not = icmp eq ptr %tc.0, %active_thins
  br i1 %cmp.not, label %bio_list_merge.exit.for.end_crit_edge, label %bio_list_merge.exit.for.body_crit_edge

bio_list_merge.exit.for.body_crit_edge:           ; preds = %bio_list_merge.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.body

bio_list_merge.exit.for.end_crit_edge:            ; preds = %bio_list_merge.exit
  call void @__sanitizer_cov_trace_pc() #17
  br label %for.end

for.end:                                          ; preds = %bio_list_merge.exit.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i31 = tail call zeroext i1 @rcu_is_watching() #15
  br i1 %call.i31, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i34

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true.i34:                                ; preds = %for.end
  %call1.i32 = tail call i32 @debug_lockdep_rcu_enabled() #15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i32)
  %tobool.not.i33 = icmp eq i32 %call1.i32, 0
  br i1 %tobool.not.i33, label %land.lhs.true.i34.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i36

land.lhs.true.i34.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i34
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

land.lhs.true2.i36:                               ; preds = %land.lhs.true.i34
  %.b4.i35 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i35, label %land.lhs.true2.i36.rcu_read_unlock.exit_crit_edge, label %if.then.i37

land.lhs.true2.i36.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i36
  call void @__sanitizer_cov_trace_pc() #17
  br label %rcu_read_unlock.exit

if.then.i37:                                      ; preds = %land.lhs.true2.i36
  call void @__sanitizer_cov_trace_pc() #17
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.77, i32 noundef 724, ptr noundef nonnull @.str.79) #15
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i37, %land.lhs.true2.i36.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i34.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #15, !srcloc !518
  %17 = tail call i32 @llvm.read_register.i32(metadata !485) #15
  %and.i.i.i.i.i38 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i38 to ptr
  %preempt_count.i.i.i.i39 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i39 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i39, align 4
  %sub.i.i.i = add i32 %20, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i39, align 4
  tail call void @rcu_read_unlock_strict() #15
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #15
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_write(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mempool_init(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mempool_alloc_slab(i32 noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mempool_free_slab(ptr noundef, ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_reset(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @submit_bio_wait(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_internal_suspend_noflush(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @dm_internal_resume(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @flush_workqueue(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_data_dev_size(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_resize_data_dev(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_metadata_dev_size(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_resize_metadata_dev(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_suspended(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_metadata_transaction_id(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_get_metadata_snap(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_create_thin(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_create_snap(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_delete_thin_device(ptr noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_set_metadata_transaction_id(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_reserve_metadata_snap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dm_pool_release_metadata_snap(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_limits_io_min(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @blk_limits_io_opt(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_destroy(ptr noundef) local_unnamed_addr #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctpop.i32(i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #8

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #15

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #16 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 246)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #16 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 246)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #17 = { nomerge }
attributes #18 = { nounwind allocsize(2) }
attributes #19 = { nobuiltin }
attributes #20 = { nounwind readnone }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !8, !10, !11, !13, !15, !17, !19, !20, !21, !22, !24, !26, !27, !29, !31, !33, !35, !37, !39, !41, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !63, !64, !65, !66, !68, !69, !71, !72, !73, !74, !76, !77, !79, !81, !83, !84, !85, !86, !88, !89, !90, !92, !94, !96, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !136, !137, !138, !140, !142, !144, !146, !148, !150, !152, !154, !156, !158, !159, !161, !162, !163, !164, !166, !167, !168, !169, !171, !172, !174, !176, !178, !180, !182, !183, !184, !186, !187, !189, !190, !191, !193, !194, !196, !198, !199, !200, !201, !202, !203, !205, !206, !207, !208, !209, !211, !212, !213, !215, !216, !217, !219, !220, !221, !222, !224, !225, !227, !228, !229, !230, !231, !233, !234, !235, !236, !237, !239, !240, !241, !242, !244, !246, !248, !250, !251, !252, !253, !255, !257, !258, !259, !260, !262, !263, !264, !265, !266, !268, !270, !272, !274, !275, !276, !277, !279, !280, !281, !282, !284, !286, !288, !290, !292, !294, !296, !297, !298, !299, !300, !302, !304, !306, !307, !308, !309, !311, !313, !314, !315, !316, !318, !319, !320, !321, !323, !324, !325, !327, !328, !329, !331, !332, !333, !335, !337, !338, !339, !340, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !356, !357, !358, !359, !361, !362, !363, !365, !366, !367, !369, !370, !371, !373, !374, !375, !377, !378, !379, !381, !383, !385, !387, !389, !391, !393, !395, !397, !399, !401, !403, !405, !407, !409, !411, !412, !413, !414, !416, !418, !420, !422, !424, !426, !428, !429, !430, !432, !433, !434, !435, !437, !438, !439, !440, !442, !443, !444, !445, !447, !448, !449, !450, !452, !453, !454, !455, !457, !458, !459, !461, !462, !463, !465, !466, !467, !468, !470, !471, !472, !473, !475, !477, !479, !480, !481, !482, !483}
!llvm.named.register.sp = !{!485}
!llvm.module.flags = !{!486, !487, !488, !489, !490, !491, !492, !493}
!llvm.ident = !{!494}

!0 = !{ptr @__param_snapshot_copy_throttle, !1, !"__param_snapshot_copy_throttle", i1 false, i1 false}
!1 = !{!"../drivers/md/dm-thin.c", i32 37, i32 1}
!2 = !{ptr @__UNIQUE_ID_snapshot_copy_throttletype283, !1, !"__UNIQUE_ID_snapshot_copy_throttletype283", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_snapshot_copy_throttle284, !1, !"__UNIQUE_ID_snapshot_copy_throttle284", i1 false, i1 false}
!4 = !{ptr @__initcall__kmod_dm_thin_pool__296_4533_dm_thin_init6, !5, !"__initcall__kmod_dm_thin_pool__296_4533_dm_thin_init6", i1 false, i1 false}
!5 = !{!"../drivers/md/dm-thin.c", i32 4533, i32 1}
!6 = !{ptr @__exitcall_dm_thin_exit, !7, !"__exitcall_dm_thin_exit", i1 false, i1 false}
!7 = !{!"../drivers/md/dm-thin.c", i32 4534, i32 1}
!8 = !{ptr @__param_no_space_timeout, !9, !"__param_no_space_timeout", i1 false, i1 false}
!9 = !{!"../drivers/md/dm-thin.c", i32 4536, i32 1}
!10 = !{ptr @__UNIQUE_ID_no_space_timeouttype297, !9, !"__UNIQUE_ID_no_space_timeouttype297", i1 false, i1 false}
!11 = !{ptr @__UNIQUE_ID_no_space_timeout298, !12, !"__UNIQUE_ID_no_space_timeout298", i1 false, i1 false}
!12 = !{!"../drivers/md/dm-thin.c", i32 4537, i32 1}
!13 = !{ptr @__UNIQUE_ID_description299, !14, !"__UNIQUE_ID_description299", i1 false, i1 false}
!14 = !{!"../drivers/md/dm-thin.c", i32 4539, i32 1}
!15 = !{ptr @__UNIQUE_ID_author300, !16, !"__UNIQUE_ID_author300", i1 false, i1 false}
!16 = !{!"../drivers/md/dm-thin.c", i32 4540, i32 1}
!17 = !{ptr @__UNIQUE_ID_file301, !18, !"__UNIQUE_ID_file301", i1 false, i1 false}
!18 = !{!"../drivers/md/dm-thin.c", i32 4541, i32 1}
!19 = !{ptr @__UNIQUE_ID_license302, !18, !"__UNIQUE_ID_license302", i1 false, i1 false}
!20 = !{ptr @__param_str_snapshot_copy_throttle, !1, !"__param_str_snapshot_copy_throttle", i1 false, i1 false}
!21 = !{ptr @dm_kcopyd_throttle, !1, !"dm_kcopyd_throttle", i1 false, i1 false}
!22 = !{ptr @.str, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../drivers/md/dm-thin.c", i32 4501, i32 23}
!24 = !{ptr @pool_table_init.__key, !25, !"__key", i1 false, i1 false}
!25 = !{!"../drivers/md/dm-thin.c", i32 530, i32 2}
!26 = !{ptr @.str.1, !25, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @dm_thin_pool_table, !28, !"dm_thin_pool_table", i1 false, i1 false}
!28 = !{!"../drivers/md/dm-thin.c", i32 526, i32 3}
!29 = !{ptr @_new_mapping_cache, !30, !"_new_mapping_cache", i1 false, i1 false}
!30 = !{!"../drivers/md/dm-thin.c", i32 2922, i32 27}
!31 = !{ptr @.str.2, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/md/dm-thin.c", i32 4478, i32 10}
!33 = !{ptr @thin_target, !34, !"thin_target", i1 false, i1 false}
!34 = !{!"../drivers/md/dm-thin.c", i32 4477, i32 27}
!35 = !{ptr @.str.3, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../drivers/md/dm-thin.c", i32 4174, i32 15}
!37 = !{ptr @.str.4, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/md/dm-thin.c", i32 4181, i32 15}
!39 = !{ptr @thin_ctr.__key, !40, !"__key", i1 false, i1 false}
!40 = !{!"../drivers/md/dm-thin.c", i32 4186, i32 2}
!41 = !{ptr @.str.5, !40, !"<string literal>", i1 false, i1 false}
!42 = !{ptr @.str.6, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/md/dm-thin.c", i32 4194, i32 16}
!44 = !{ptr @.str.7, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/md/dm-thin.c", i32 4201, i32 16}
!46 = !{ptr @.str.8, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/md/dm-thin.c", i32 4209, i32 15}
!48 = !{ptr @.str.9, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/md/dm-thin.c", i32 4215, i32 15}
!50 = !{ptr @.str.10, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/md/dm-thin.c", i32 4222, i32 15}
!52 = !{ptr @.str.11, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/md/dm-thin.c", i32 4229, i32 15}
!54 = !{ptr @.str.12, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/md/dm-thin.c", i32 4236, i32 15}
!56 = !{ptr @.str.13, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/md/dm-thin.c", i32 4243, i32 15}
!58 = !{ptr @.str.14, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/md/dm-thin.c", i32 4267, i32 15}
!60 = !{ptr @.str.15, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/md/dm-thin.c", i32 3680, i32 3}
!62 = !{ptr @.str.16, !61, !"<string literal>", i1 false, i1 false}
!63 = !{ptr @.str.17, !61, !"<string literal>", i1 false, i1 false}
!64 = !{ptr @read_dev_id._entry, !61, !"_entry", i1 false, i1 false}
!65 = !{ptr @read_dev_id._entry_ptr, !61, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @init_completion.__key, !67, !"__key", i1 false, i1 false}
!67 = !{!"../include/linux/completion.h", i32 87, i32 2}
!68 = !{ptr @.str.18, !67, !"<string literal>", i1 false, i1 false}
!69 = !{ptr @.str.19, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../drivers/md/dm-thin.c", i32 2905, i32 3}
!71 = !{ptr @.str.20, !70, !"<string literal>", i1 false, i1 false}
!72 = !{ptr @__pool_destroy._entry, !70, !"_entry", i1 false, i1 false}
!73 = !{ptr @__pool_destroy._entry_ptr, !70, !"_entry_ptr", i1 false, i1 false}
!74 = !{ptr @pool_work_wait.__key, !75, !"__key", i1 false, i1 false}
!75 = !{!"../drivers/md/dm-thin.c", i32 2465, i32 2}
!76 = !{ptr @.str.21, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @.str.22, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../drivers/md/dm-thin.c", i32 4394, i32 3}
!79 = !{ptr @.str.23, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/md/dm-thin.c", i32 4399, i32 3}
!81 = !{ptr @.str.24, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../drivers/md/dm-thin.c", i32 4405, i32 5}
!83 = !{ptr @.str.25, !82, !"<string literal>", i1 false, i1 false}
!84 = !{ptr @thin_status._entry, !82, !"_entry", i1 false, i1 false}
!85 = !{ptr @thin_status._entry_ptr, !82, !"_entry_ptr", i1 false, i1 false}
!86 = !{ptr @.str.27, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/md/dm-thin.c", i32 4411, i32 5}
!88 = !{ptr @thin_status._entry.26, !87, !"_entry", i1 false, i1 false}
!89 = !{ptr @thin_status._entry_ptr.28, !87, !"_entry_ptr", i1 false, i1 false}
!90 = !{ptr @.str.29, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/md/dm-thin.c", i32 4415, i32 4}
!92 = !{ptr @.str.30, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/md/dm-thin.c", i32 4417, i32 5}
!94 = !{ptr @.str.31, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/md/dm-thin.c", i32 4424, i32 4}
!96 = !{ptr @.str.32, !95, !"<string literal>", i1 false, i1 false}
!97 = !{ptr @.str.33, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../drivers/md/dm-thin.c", i32 4428, i32 5}
!99 = !{ptr @.str.34, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/md/dm-thin.c", i32 4440, i32 2}
!101 = !{ptr @.str.35, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/md/dm-thin.c", i32 4095, i32 10}
!103 = !{ptr @pool_target, !104, !"pool_target", i1 false, i1 false}
!104 = !{!"../drivers/md/dm-thin.c", i32 4094, i32 27}
!105 = !{ptr @.str.36, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/md/dm-thin.c", i32 3306, i32 15}
!107 = !{ptr @.str.37, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../drivers/md/dm-thin.c", i32 3324, i32 15}
!109 = !{ptr @.str.38, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/md/dm-thin.c", i32 3331, i32 15}
!111 = !{ptr @.str.39, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/md/dm-thin.c", i32 3339, i32 15}
!113 = !{ptr @.str.40, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/md/dm-thin.c", i32 3345, i32 15}
!115 = !{ptr @.str.41, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/md/dm-thin.c", i32 3370, i32 15}
!117 = !{ptr @.str.42, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/md/dm-thin.c", i32 3138, i32 10}
!119 = !{ptr @parse_pool_features._args, !120, !"_args", i1 false, i1 false}
!120 = !{!"../drivers/md/dm-thin.c", i32 3137, i32 29}
!121 = !{ptr @.str.43, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../drivers/md/dm-thin.c", i32 3155, i32 29}
!123 = !{ptr @.str.44, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/md/dm-thin.c", i32 3158, i32 34}
!125 = !{ptr @.str.45, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../drivers/md/dm-thin.c", i32 3161, i32 34}
!127 = !{ptr @.str.46, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/md/dm-thin.c", i32 3164, i32 34}
!129 = !{ptr @.str.47, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/md/dm-thin.c", i32 3167, i32 34}
!131 = !{ptr @.str.48, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../drivers/md/dm-thin.c", i32 3171, i32 16}
!133 = !{ptr @.str.49, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../drivers/md/dm-thin.c", i32 3224, i32 3}
!135 = !{ptr @.str.50, !134, !"<string literal>", i1 false, i1 false}
!136 = !{ptr @warn_if_metadata_device_too_big._entry, !134, !"_entry", i1 false, i1 false}
!137 = !{ptr @warn_if_metadata_device_too_big._entry_ptr, !134, !"_entry_ptr", i1 false, i1 false}
!138 = !{ptr @.str.51, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/md/dm-thin.c", i32 3085, i32 13}
!140 = !{ptr @.str.52, !141, !"<string literal>", i1 false, i1 false}
!141 = !{!"../drivers/md/dm-thin.c", i32 3089, i32 13}
!142 = !{ptr @.str.53, !143, !"<string literal>", i1 false, i1 false}
!143 = !{!"../drivers/md/dm-thin.c", i32 3098, i32 14}
!144 = !{ptr @.str.54, !145, !"<string literal>", i1 false, i1 false}
!145 = !{!"../drivers/md/dm-thin.c", i32 2938, i32 12}
!146 = !{ptr @.str.55, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../drivers/md/dm-thin.c", i32 2944, i32 12}
!148 = !{ptr @.str.56, !149, !"<string literal>", i1 false, i1 false}
!149 = !{!"../drivers/md/dm-thin.c", i32 2959, i32 12}
!150 = !{ptr @.str.57, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/md/dm-thin.c", i32 2967, i32 12}
!152 = !{ptr @.str.58, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/md/dm-thin.c", i32 2976, i32 13}
!154 = !{ptr @.str.59, !155, !"<string literal>", i1 false, i1 false}
!155 = !{!"../drivers/md/dm-thin.c", i32 2978, i32 12}
!156 = !{ptr @pool_create.__key, !157, !"__key", i1 false, i1 false}
!157 = !{!"../drivers/md/dm-thin.c", i32 2984, i32 2}
!158 = !{ptr @.str.60, !157, !"<string literal>", i1 false, i1 false}
!159 = !{ptr @pool_create.__key.61, !160, !"__key", i1 false, i1 false}
!160 = !{!"../drivers/md/dm-thin.c", i32 2985, i32 2}
!161 = !{ptr @.str.62, !160, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @pool_create.__key.63, !160, !"__key", i1 false, i1 false}
!163 = !{ptr @.str.64, !160, !"<string literal>", i1 false, i1 false}
!164 = !{ptr @pool_create.__key.65, !165, !"__key", i1 false, i1 false}
!165 = !{!"../drivers/md/dm-thin.c", i32 2986, i32 2}
!166 = !{ptr @.str.66, !165, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @pool_create.__key.67, !165, !"__key", i1 false, i1 false}
!168 = !{ptr @.str.68, !165, !"<string literal>", i1 false, i1 false}
!169 = !{ptr @pool_create.__key.69, !170, !"__key", i1 false, i1 false}
!170 = !{!"../drivers/md/dm-thin.c", i32 2987, i32 2}
!171 = !{ptr @.str.70, !170, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @.str.71, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../drivers/md/dm-thin.c", i32 3001, i32 12}
!174 = !{ptr @.str.72, !175, !"<string literal>", i1 false, i1 false}
!175 = !{!"../drivers/md/dm-thin.c", i32 3008, i32 12}
!176 = !{ptr @.str.73, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/md/dm-thin.c", i32 3017, i32 12}
!178 = !{ptr @.str.74, !179, !"<string literal>", i1 false, i1 false}
!179 = !{!"../drivers/md/dm-thin.c", i32 3026, i32 12}
!180 = !{ptr @.str.75, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../drivers/md/dm-thin.c", i32 3056, i32 3}
!182 = !{ptr @pool_create._entry, !181, !"_entry", i1 false, i1 false}
!183 = !{ptr @pool_create._entry_ptr, !181, !"_entry_ptr", i1 false, i1 false}
!184 = !{ptr @throttle_init.__key, !185, !"__key", i1 false, i1 false}
!185 = !{!"../drivers/md/dm-thin.c", i32 153, i32 2}
!186 = !{ptr @.str.76, !185, !"<string literal>", i1 false, i1 false}
!187 = distinct !{null, !188, !"__warned", i1 false, i1 false}
!188 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!189 = !{ptr @.str.77, !188, !"<string literal>", i1 false, i1 false}
!190 = !{ptr @.str.78, !188, !"<string literal>", i1 false, i1 false}
!191 = distinct !{null, !192, !"__warned", i1 false, i1 false}
!192 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!193 = !{ptr @.str.79, !192, !"<string literal>", i1 false, i1 false}
!194 = !{ptr @.str.80, !195, !"<string literal>", i1 false, i1 false}
!195 = !{!"../drivers/md/dm-thin.c", i32 1501, i32 35}
!196 = !{ptr @.str.81, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../drivers/md/dm-thin.c", i32 2643, i32 2}
!198 = !{ptr @metadata_operation_failed._rs, !197, !"_rs", i1 false, i1 false}
!199 = !{ptr @__func__.metadata_operation_failed, !197, !"<string literal>", i1 false, i1 false}
!200 = !{ptr @.str.82, !197, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @metadata_operation_failed._entry, !197, !"_entry", i1 false, i1 false}
!202 = !{ptr @metadata_operation_failed._entry_ptr, !197, !"_entry_ptr", i1 false, i1 false}
!203 = !{ptr @abort_transaction._rs, !204, !"_rs", i1 false, i1 false}
!204 = !{!"../drivers/md/dm-thin.c", i32 2629, i32 2}
!205 = !{ptr @__func__.abort_transaction, !204, !"<string literal>", i1 false, i1 false}
!206 = !{ptr @.str.83, !204, !"<string literal>", i1 false, i1 false}
!207 = !{ptr @abort_transaction._entry, !204, !"_entry", i1 false, i1 false}
!208 = !{ptr @abort_transaction._entry_ptr, !204, !"_entry_ptr", i1 false, i1 false}
!209 = !{ptr @.str.85, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../drivers/md/dm-thin.c", i32 2631, i32 3}
!211 = !{ptr @abort_transaction._entry.84, !210, !"_entry", i1 false, i1 false}
!212 = !{ptr @abort_transaction._entry_ptr.86, !210, !"_entry_ptr", i1 false, i1 false}
!213 = !{ptr @.str.88, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../drivers/md/dm-thin.c", i32 2636, i32 3}
!215 = !{ptr @abort_transaction._entry.87, !214, !"_entry", i1 false, i1 false}
!216 = !{ptr @abort_transaction._entry_ptr.89, !214, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.90, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/md/dm-thin.c", i32 2539, i32 3}
!219 = !{ptr @.str.91, !218, !"<string literal>", i1 false, i1 false}
!220 = !{ptr @set_pool_mode._entry, !218, !"_entry", i1 false, i1 false}
!221 = !{ptr @set_pool_mode._entry_ptr, !218, !"_entry_ptr", i1 false, i1 false}
!222 = distinct !{null, !223, !"__warned", i1 false, i1 false}
!223 = !{!"../drivers/md/dm-thin.c", i32 660, i32 2}
!224 = !{ptr @.str.92, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @__process_bio_read_only._rs, !226, !"_rs", i1 false, i1 false}
!226 = !{!"../drivers/md/dm-thin.c", i32 2053, i32 3}
!227 = !{ptr @__func__.__process_bio_read_only, !226, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @.str.93, !226, !"<string literal>", i1 false, i1 false}
!229 = !{ptr @__process_bio_read_only._entry, !226, !"_entry", i1 false, i1 false}
!230 = !{ptr @__process_bio_read_only._entry_ptr, !226, !"_entry_ptr", i1 false, i1 false}
!231 = !{ptr @should_error_unserviceable_bio._rs, !232, !"_rs", i1 false, i1 false}
!232 = !{!"../drivers/md/dm-thin.c", i32 1606, i32 3}
!233 = !{ptr @__func__.should_error_unserviceable_bio, !232, !"<string literal>", i1 false, i1 false}
!234 = !{ptr @.str.94, !232, !"<string literal>", i1 false, i1 false}
!235 = !{ptr @should_error_unserviceable_bio._entry, !232, !"_entry", i1 false, i1 false}
!236 = !{ptr @should_error_unserviceable_bio._entry_ptr, !232, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @should_error_unserviceable_bio._rs.95, !238, !"_rs", i1 false, i1 false}
!238 = !{!"../drivers/md/dm-thin.c", i32 1618, i32 3}
!239 = !{ptr @.str.97, !238, !"<string literal>", i1 false, i1 false}
!240 = !{ptr @should_error_unserviceable_bio._entry.96, !238, !"_entry", i1 false, i1 false}
!241 = !{ptr @should_error_unserviceable_bio._entry_ptr.98, !238, !"_entry_ptr", i1 false, i1 false}
!242 = !{ptr @.str.99, !243, !"<string literal>", i1 false, i1 false}
!243 = !{!"../drivers/md/dm-thin.c", i32 1012, i32 35}
!244 = !{ptr @.str.100, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/md/dm-thin.c", i32 1162, i32 35}
!246 = !{ptr @.str.101, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../drivers/md/dm-thin.c", i32 1175, i32 35}
!248 = !{ptr @.str.102, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../drivers/md/dm-thin.c", i32 1184, i32 3}
!250 = !{ptr @.str.103, !249, !"<string literal>", i1 false, i1 false}
!251 = !{ptr @process_prepared_discard_passdown_pt1._entry, !249, !"_entry", i1 false, i1 false}
!252 = !{ptr @process_prepared_discard_passdown_pt1._entry_ptr, !249, !"_entry_ptr", i1 false, i1 false}
!253 = !{ptr @.str.104, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/md/dm-thin.c", i32 1217, i32 35}
!255 = !{ptr @process_cell._rs, !256, !"_rs", i1 false, i1 false}
!256 = !{!"../drivers/md/dm-thin.c", i32 1985, i32 3}
!257 = !{ptr @__func__.process_cell, !256, !"<string literal>", i1 false, i1 false}
!258 = !{ptr @process_cell._entry, !256, !"_entry", i1 false, i1 false}
!259 = !{ptr @process_cell._entry_ptr, !256, !"_entry_ptr", i1 false, i1 false}
!260 = !{ptr @break_sharing._rs, !261, !"_rs", i1 false, i1 false}
!261 = !{!"../drivers/md/dm-thin.c", i32 1807, i32 3}
!262 = !{ptr @__func__.break_sharing, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @.str.105, !261, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @break_sharing._entry, !261, !"_entry", i1 false, i1 false}
!265 = !{ptr @break_sharing._entry_ptr, !261, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @.str.106, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../drivers/md/dm-thin.c", i32 1533, i32 35}
!268 = !{ptr @.str.107, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../drivers/md/dm-thin.c", i32 1565, i32 36}
!270 = !{ptr @.str.108, !271, !"<string literal>", i1 false, i1 false}
!271 = !{!"../drivers/md/dm-thin.c", i32 1571, i32 35}
!272 = !{ptr @.str.109, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../drivers/md/dm-thin.c", i32 1513, i32 3}
!274 = !{ptr @.str.110, !273, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @check_low_water_mark._entry, !273, !"_entry", i1 false, i1 false}
!276 = !{ptr @check_low_water_mark._entry_ptr, !273, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @provision_block._rs, !278, !"_rs", i1 false, i1 false}
!278 = !{!"../drivers/md/dm-thin.c", i32 1931, i32 3}
!279 = !{ptr @__func__.provision_block, !278, !"<string literal>", i1 false, i1 false}
!280 = !{ptr @provision_block._entry, !278, !"_entry", i1 false, i1 false}
!281 = !{ptr @provision_block._entry_ptr, !278, !"_entry_ptr", i1 false, i1 false}
!282 = !{ptr @.str.111, !283, !"<string literal>", i1 false, i1 false}
!283 = !{!"../drivers/md/dm-thin.c", i32 299, i32 3}
!284 = !{ptr @.str.112, !285, !"<string literal>", i1 false, i1 false}
!285 = !{!"../drivers/md/dm-thin.c", i32 300, i32 3}
!286 = !{ptr @.str.113, !287, !"<string literal>", i1 false, i1 false}
!287 = !{!"../drivers/md/dm-thin.c", i32 301, i32 3}
!288 = !{ptr @.str.114, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/md/dm-thin.c", i32 303, i32 3}
!290 = !{ptr @.str.115, !291, !"<string literal>", i1 false, i1 false}
!291 = !{!"../drivers/md/dm-thin.c", i32 310, i32 17}
!292 = !{ptr @.str.116, !293, !"<string literal>", i1 false, i1 false}
!293 = !{!"../drivers/md/dm-thin.c", i32 312, i32 17}
!294 = !{ptr @.str.117, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../drivers/md/dm-thin.c", i32 316, i32 2}
!296 = !{ptr @.str.118, !295, !"<string literal>", i1 false, i1 false}
!297 = !{ptr @notify_of_pool_mode_change._entry, !295, !"_entry", i1 false, i1 false}
!298 = !{ptr @notify_of_pool_mode_change._entry_ptr, !295, !"_entry_ptr", i1 false, i1 false}
!299 = !{ptr @.str.119, !295, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @.str.120, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../drivers/md/dm-thin.c", i32 1460, i32 17}
!302 = !{ptr @.str.121, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/md/dm-thin.c", i32 1462, i32 17}
!304 = !{ptr @.str.122, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../drivers/md/dm-thin.c", i32 1465, i32 3}
!306 = !{ptr @.str.123, !305, !"<string literal>", i1 false, i1 false}
!307 = !{ptr @check_for_metadata_space._entry, !305, !"_entry", i1 false, i1 false}
!308 = !{ptr @check_for_metadata_space._entry_ptr, !305, !"_entry_ptr", i1 false, i1 false}
!309 = distinct !{null, !310, !"__warned", i1 false, i1 false}
!310 = !{!"../drivers/md/dm-thin.c", i32 2803, i32 2}
!311 = !{ptr @.str.124, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../drivers/md/dm-thin.c", i32 3184, i32 2}
!313 = !{ptr @.str.125, !312, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @metadata_low_callback._entry, !312, !"_entry", i1 false, i1 false}
!315 = !{ptr @metadata_low_callback._entry_ptr, !312, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @.str.126, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../drivers/md/dm-thin.c", i32 3459, i32 3}
!318 = !{ptr @.str.127, !317, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @maybe_resize_data_dev._entry, !317, !"_entry", i1 false, i1 false}
!320 = !{ptr @maybe_resize_data_dev._entry_ptr, !317, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.129, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../drivers/md/dm-thin.c", i32 3465, i32 3}
!323 = !{ptr @maybe_resize_data_dev._entry.128, !322, !"_entry", i1 false, i1 false}
!324 = !{ptr @maybe_resize_data_dev._entry_ptr.130, !322, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.132, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../drivers/md/dm-thin.c", i32 3472, i32 4}
!327 = !{ptr @maybe_resize_data_dev._entry.131, !326, !"_entry", i1 false, i1 false}
!328 = !{ptr @maybe_resize_data_dev._entry_ptr.133, !326, !"_entry_ptr", i1 false, i1 false}
!329 = !{ptr @.str.135, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/md/dm-thin.c", i32 3478, i32 4}
!331 = !{ptr @maybe_resize_data_dev._entry.134, !330, !"_entry", i1 false, i1 false}
!332 = !{ptr @maybe_resize_data_dev._entry_ptr.136, !330, !"_entry_ptr", i1 false, i1 false}
!333 = !{ptr @.str.137, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/md/dm-thin.c", i32 3483, i32 36}
!335 = !{ptr @.str.138, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../drivers/md/dm-thin.c", i32 3506, i32 3}
!337 = !{ptr @.str.139, !336, !"<string literal>", i1 false, i1 false}
!338 = !{ptr @maybe_resize_metadata_dev._entry, !336, !"_entry", i1 false, i1 false}
!339 = !{ptr @maybe_resize_metadata_dev._entry_ptr, !336, !"_entry_ptr", i1 false, i1 false}
!340 = !{ptr @.str.141, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../drivers/md/dm-thin.c", i32 3512, i32 3}
!342 = !{ptr @maybe_resize_metadata_dev._entry.140, !341, !"_entry", i1 false, i1 false}
!343 = !{ptr @maybe_resize_metadata_dev._entry_ptr.142, !341, !"_entry_ptr", i1 false, i1 false}
!344 = !{ptr @.str.144, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../drivers/md/dm-thin.c", i32 3519, i32 4}
!346 = !{ptr @maybe_resize_metadata_dev._entry.143, !345, !"_entry", i1 false, i1 false}
!347 = !{ptr @maybe_resize_metadata_dev._entry_ptr.145, !345, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.147, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/md/dm-thin.c", i32 3525, i32 3}
!350 = !{ptr @maybe_resize_metadata_dev._entry.146, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @maybe_resize_metadata_dev._entry_ptr.148, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.149, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/md/dm-thin.c", i32 3534, i32 36}
!354 = !{ptr @.str.150, !355, !"<string literal>", i1 false, i1 false}
!355 = !{!"../drivers/md/dm-thin.c", i32 3926, i32 4}
!356 = !{ptr @.str.151, !355, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @pool_status._entry, !355, !"_entry", i1 false, i1 false}
!358 = !{ptr @pool_status._entry_ptr, !355, !"_entry_ptr", i1 false, i1 false}
!359 = !{ptr @.str.153, !360, !"<string literal>", i1 false, i1 false}
!360 = !{!"../drivers/md/dm-thin.c", i32 3933, i32 4}
!361 = !{ptr @pool_status._entry.152, !360, !"_entry", i1 false, i1 false}
!362 = !{ptr @pool_status._entry_ptr.154, !360, !"_entry_ptr", i1 false, i1 false}
!363 = !{ptr @.str.156, !364, !"<string literal>", i1 false, i1 false}
!364 = !{!"../drivers/md/dm-thin.c", i32 3940, i32 4}
!365 = !{ptr @pool_status._entry.155, !364, !"_entry", i1 false, i1 false}
!366 = !{ptr @pool_status._entry_ptr.157, !364, !"_entry_ptr", i1 false, i1 false}
!367 = !{ptr @.str.159, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../drivers/md/dm-thin.c", i32 3947, i32 4}
!369 = !{ptr @pool_status._entry.158, !368, !"_entry", i1 false, i1 false}
!370 = !{ptr @pool_status._entry_ptr.160, !368, !"_entry_ptr", i1 false, i1 false}
!371 = !{ptr @.str.162, !372, !"<string literal>", i1 false, i1 false}
!372 = !{!"../drivers/md/dm-thin.c", i32 3954, i32 4}
!373 = !{ptr @pool_status._entry.161, !372, !"_entry", i1 false, i1 false}
!374 = !{ptr @pool_status._entry_ptr.163, !372, !"_entry_ptr", i1 false, i1 false}
!375 = !{ptr @.str.165, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/md/dm-thin.c", i32 3961, i32 4}
!377 = !{ptr @pool_status._entry.164, !376, !"_entry", i1 false, i1 false}
!378 = !{ptr @pool_status._entry_ptr.166, !376, !"_entry_ptr", i1 false, i1 false}
!379 = !{ptr @.str.167, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../drivers/md/dm-thin.c", i32 3966, i32 3}
!381 = !{ptr @.str.168, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../drivers/md/dm-thin.c", i32 3976, i32 4}
!383 = !{ptr @.str.169, !384, !"<string literal>", i1 false, i1 false}
!384 = !{!"../drivers/md/dm-thin.c", i32 3980, i32 4}
!385 = !{ptr @.str.170, !386, !"<string literal>", i1 false, i1 false}
!386 = !{!"../drivers/md/dm-thin.c", i32 3982, i32 4}
!387 = !{ptr @.str.171, !388, !"<string literal>", i1 false, i1 false}
!388 = !{!"../drivers/md/dm-thin.c", i32 3984, i32 4}
!389 = !{ptr @.str.172, !390, !"<string literal>", i1 false, i1 false}
!390 = !{!"../drivers/md/dm-thin.c", i32 3987, i32 4}
!391 = !{ptr @.str.173, !392, !"<string literal>", i1 false, i1 false}
!392 = !{!"../drivers/md/dm-thin.c", i32 3989, i32 4}
!393 = !{ptr @.str.174, !394, !"<string literal>", i1 false, i1 false}
!394 = !{!"../drivers/md/dm-thin.c", i32 3991, i32 4}
!395 = !{ptr @.str.175, !396, !"<string literal>", i1 false, i1 false}
!396 = !{!"../drivers/md/dm-thin.c", i32 3994, i32 4}
!397 = !{ptr @.str.176, !398, !"<string literal>", i1 false, i1 false}
!398 = !{!"../drivers/md/dm-thin.c", i32 3996, i32 4}
!399 = !{ptr @.str.177, !400, !"<string literal>", i1 false, i1 false}
!400 = !{!"../drivers/md/dm-thin.c", i32 3999, i32 4}
!401 = !{ptr @.str.178, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../drivers/md/dm-thin.c", i32 4008, i32 3}
!403 = !{ptr @.str.179, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../drivers/md/dm-thin.c", i32 3872, i32 2}
!405 = !{ptr @.str.180, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../drivers/md/dm-thin.c", i32 3875, i32 3}
!407 = !{ptr @.str.181, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../drivers/md/dm-thin.c", i32 3884, i32 3}
!409 = !{ptr @.str.182, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../drivers/md/dm-thin.c", i32 3834, i32 3}
!411 = !{ptr @.str.183, !410, !"<string literal>", i1 false, i1 false}
!412 = !{ptr @pool_message._entry, !410, !"_entry", i1 false, i1 false}
!413 = !{ptr @pool_message._entry_ptr, !410, !"_entry_ptr", i1 false, i1 false}
!414 = !{ptr @.str.184, !415, !"<string literal>", i1 false, i1 false}
!415 = !{!"../drivers/md/dm-thin.c", i32 3839, i32 27}
!416 = !{ptr @.str.185, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../drivers/md/dm-thin.c", i32 3842, i32 32}
!418 = !{ptr @.str.186, !419, !"<string literal>", i1 false, i1 false}
!419 = !{!"../drivers/md/dm-thin.c", i32 3845, i32 32}
!420 = !{ptr @.str.187, !421, !"<string literal>", i1 false, i1 false}
!421 = !{!"../drivers/md/dm-thin.c", i32 3848, i32 32}
!422 = !{ptr @.str.188, !423, !"<string literal>", i1 false, i1 false}
!423 = !{!"../drivers/md/dm-thin.c", i32 3851, i32 32}
!424 = !{ptr @.str.189, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../drivers/md/dm-thin.c", i32 3854, i32 32}
!426 = !{ptr @.str.191, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../drivers/md/dm-thin.c", i32 3858, i32 3}
!428 = !{ptr @pool_message._entry.190, !427, !"_entry", i1 false, i1 false}
!429 = !{ptr @pool_message._entry_ptr.192, !427, !"_entry_ptr", i1 false, i1 false}
!430 = !{ptr @.str.193, !431, !"<string literal>", i1 false, i1 false}
!431 = !{!"../drivers/md/dm-thin.c", i32 3700, i32 3}
!432 = !{ptr @.str.194, !431, !"<string literal>", i1 false, i1 false}
!433 = !{ptr @process_create_thin_mesg._entry, !431, !"_entry", i1 false, i1 false}
!434 = !{ptr @process_create_thin_mesg._entry_ptr, !431, !"_entry_ptr", i1 false, i1 false}
!435 = !{ptr @.str.195, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../drivers/md/dm-thin.c", i32 3665, i32 3}
!437 = !{ptr @.str.196, !436, !"<string literal>", i1 false, i1 false}
!438 = !{ptr @check_arg_count._entry, !436, !"_entry", i1 false, i1 false}
!439 = !{ptr @check_arg_count._entry_ptr, !436, !"_entry_ptr", i1 false, i1 false}
!440 = !{ptr @.str.197, !441, !"<string literal>", i1 false, i1 false}
!441 = !{!"../drivers/md/dm-thin.c", i32 3728, i32 3}
!442 = !{ptr @.str.198, !441, !"<string literal>", i1 false, i1 false}
!443 = !{ptr @process_create_snap_mesg._entry, !441, !"_entry", i1 false, i1 false}
!444 = !{ptr @process_create_snap_mesg._entry_ptr, !441, !"_entry_ptr", i1 false, i1 false}
!445 = !{ptr @.str.199, !446, !"<string literal>", i1 false, i1 false}
!446 = !{!"../drivers/md/dm-thin.c", i32 3751, i32 3}
!447 = !{ptr @.str.200, !446, !"<string literal>", i1 false, i1 false}
!448 = !{ptr @process_delete_mesg._entry, !446, !"_entry", i1 false, i1 false}
!449 = !{ptr @process_delete_mesg._entry_ptr, !446, !"_entry_ptr", i1 false, i1 false}
!450 = !{ptr @.str.201, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../drivers/md/dm-thin.c", i32 3766, i32 3}
!452 = !{ptr @.str.202, !451, !"<string literal>", i1 false, i1 false}
!453 = !{ptr @process_set_transaction_id_mesg._entry, !451, !"_entry", i1 false, i1 false}
!454 = !{ptr @process_set_transaction_id_mesg._entry_ptr, !451, !"_entry_ptr", i1 false, i1 false}
!455 = !{ptr @.str.204, !456, !"<string literal>", i1 false, i1 false}
!456 = !{!"../drivers/md/dm-thin.c", i32 3771, i32 3}
!457 = !{ptr @process_set_transaction_id_mesg._entry.203, !456, !"_entry", i1 false, i1 false}
!458 = !{ptr @process_set_transaction_id_mesg._entry_ptr.205, !456, !"_entry_ptr", i1 false, i1 false}
!459 = !{ptr @.str.207, !460, !"<string literal>", i1 false, i1 false}
!460 = !{!"../drivers/md/dm-thin.c", i32 3777, i32 3}
!461 = !{ptr @process_set_transaction_id_mesg._entry.206, !460, !"_entry", i1 false, i1 false}
!462 = !{ptr @process_set_transaction_id_mesg._entry_ptr.208, !460, !"_entry_ptr", i1 false, i1 false}
!463 = !{ptr @.str.209, !464, !"<string literal>", i1 false, i1 false}
!464 = !{!"../drivers/md/dm-thin.c", i32 3797, i32 3}
!465 = !{ptr @.str.210, !464, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @process_reserve_metadata_snap_mesg._entry, !464, !"_entry", i1 false, i1 false}
!467 = !{ptr @process_reserve_metadata_snap_mesg._entry_ptr, !464, !"_entry_ptr", i1 false, i1 false}
!468 = !{ptr @.str.211, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../drivers/md/dm-thin.c", i32 3812, i32 3}
!470 = !{ptr @.str.212, !469, !"<string literal>", i1 false, i1 false}
!471 = !{ptr @process_release_metadata_snap_mesg._entry, !469, !"_entry", i1 false, i1 false}
!472 = !{ptr @process_release_metadata_snap_mesg._entry_ptr, !469, !"_entry_ptr", i1 false, i1 false}
!473 = !{ptr @.str.213, !474, !"<string literal>", i1 false, i1 false}
!474 = !{!"../drivers/md/dm-thin.c", i32 2843, i32 12}
!475 = !{ptr @.str.214, !476, !"<string literal>", i1 false, i1 false}
!476 = !{!"../drivers/md/dm-thin.c", i32 2846, i32 12}
!477 = !{ptr @.str.215, !478, !"<string literal>", i1 false, i1 false}
!478 = !{!"../drivers/md/dm-thin.c", i32 2849, i32 3}
!479 = !{ptr @.str.216, !478, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @disable_passdown_if_not_supported._entry, !478, !"_entry", i1 false, i1 false}
!481 = !{ptr @disable_passdown_if_not_supported._entry_ptr, !478, !"_entry_ptr", i1 false, i1 false}
!482 = !{ptr @__param_str_no_space_timeout, !9, !"__param_str_no_space_timeout", i1 false, i1 false}
!483 = !{ptr @no_space_timeout_secs, !484, !"no_space_timeout_secs", i1 false, i1 false}
!484 = !{!"../drivers/md/dm-thin.c", i32 35, i32 17}
!485 = !{!"sp"}
!486 = !{i32 1, !"wchar_size", i32 2}
!487 = !{i32 1, !"min_enum_size", i32 4}
!488 = !{i32 8, !"branch-target-enforcement", i32 0}
!489 = !{i32 8, !"sign-return-address", i32 0}
!490 = !{i32 8, !"sign-return-address-all", i32 0}
!491 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!492 = !{i32 7, !"uwtable", i32 1}
!493 = !{i32 7, !"frame-pointer", i32 2}
!494 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!495 = !{!"auto-init"}
!496 = !{!"branch_weights", i32 2000, i32 1}
!497 = !{i64 2154891602, i64 2154892087, i64 2154891639, i64 2154891695, i64 2154891729, i64 2154891753, i64 2154891794, i64 2154891815, i64 2154891843, i64 2154891877}
!498 = !{i64 2155156501, i64 2155156987, i64 2155156538, i64 2155156594, i64 2155156628, i64 2155156652, i64 2155156693, i64 2155156714, i64 2155156742, i64 2155156776}
!499 = !{i64 2148672980}
!500 = !{i64 2148587444, i64 2148587476, i64 2148587505, i64 2148587539, i64 2148587570, i64 2148587593}
!501 = !{i64 2149718950}
!502 = !{i64 2148422029, i64 2148422309, i64 2148422643, i64 2148422977}
!503 = !{i64 2148671901}
!504 = !{i64 2148586634, i64 2148586666, i64 2148586695, i64 2148586729, i64 2148586760, i64 2148586783}
!505 = !{i64 2148672130}
!506 = !{i64 2149436355}
!507 = !{i64 2155158149, i64 2155158635, i64 2155158186, i64 2155158242, i64 2155158276, i64 2155158300, i64 2155158341, i64 2155158362, i64 2155158390, i64 2155158424}
!508 = !{!"branch_weights", i32 1, i32 2000}
!509 = !{i64 2155159743, i64 2155160229, i64 2155159780, i64 2155159836, i64 2155159870, i64 2155159894, i64 2155159935, i64 2155159956, i64 2155159984, i64 2155160018}
!510 = !{i64 2154889945, i64 2154890430, i64 2154889982, i64 2154890038, i64 2154890072, i64 2154890096, i64 2154890137, i64 2154890158, i64 2154890186, i64 2154890220}
!511 = !{i32 0, i32 33}
!512 = !{i64 2154896656, i64 2154897141, i64 2154896693, i64 2154896749, i64 2154896783, i64 2154896807, i64 2154896848, i64 2154896869, i64 2154896897, i64 2154896931}
!513 = !{i8 0, i8 2}
!514 = !{i64 2155020698, i64 2155021184, i64 2155020735, i64 2155020791, i64 2155020825, i64 2155020849, i64 2155020890, i64 2155020911, i64 2155020939, i64 2155020973}
!515 = !{i64 2154888300, i64 2154888785, i64 2154888337, i64 2154888393, i64 2154888427, i64 2154888451, i64 2154888492, i64 2154888513, i64 2154888541, i64 2154888575}
!516 = !{i64 2149410963}
!517 = !{i64 2148584979, i64 2148585011, i64 2148585040, i64 2148585074, i64 2148585105, i64 2148585128}
!518 = !{i64 2149411229}
!519 = !{i64 2155012545, i64 2155013031, i64 2155012582, i64 2155012638, i64 2155012672, i64 2155012696, i64 2155012737, i64 2155012758, i64 2155012786, i64 2155012820}
!520 = !{i64 2155014141, i64 2155014627, i64 2155014178, i64 2155014234, i64 2155014268, i64 2155014292, i64 2155014333, i64 2155014354, i64 2155014382, i64 2155014416}
!521 = !{i64 2154976457, i64 2154976943, i64 2154976494, i64 2154976550, i64 2154976584, i64 2154976608, i64 2154976649, i64 2154976670, i64 2154976698, i64 2154976732}
!522 = !{i64 2154297375}
!523 = !{i64 2148583449, i64 2148583475, i64 2148583504, i64 2148583538, i64 2148583569, i64 2148583592}
