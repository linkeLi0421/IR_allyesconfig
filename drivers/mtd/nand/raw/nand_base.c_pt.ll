; ModuleID = '/llk/IR_all_yes/drivers/mtd/nand/raw/nand_base.c_pt.bc'
source_filename = "../drivers/mtd/nand/raw/nand_base.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+nand_extract_bits\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_extract_bits\09\09\09\09"
module asm "\09.long\09__crc_nand_extract_bits\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_extract_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_extract_bits\22\09\09\09\09\09"
module asm "__kstrtabns_nand_extract_bits:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_select_target\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_select_target\09\09\09\09"
module asm "\09.long\09__crc_nand_select_target\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_select_target:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_select_target\22\09\09\09\09\09"
module asm "__kstrtabns_nand_select_target:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_deselect_target\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_deselect_target\09\09\09\09"
module asm "\09.long\09__crc_nand_deselect_target\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_deselect_target:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_deselect_target\22\09\09\09\09\09"
module asm "__kstrtabns_nand_deselect_target:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_soft_waitrdy\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_soft_waitrdy\09\09\09\09"
module asm "\09.long\09__crc_nand_soft_waitrdy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_soft_waitrdy:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_soft_waitrdy\22\09\09\09\09\09"
module asm "__kstrtabns_nand_soft_waitrdy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_gpio_waitrdy\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_gpio_waitrdy\09\09\09\09"
module asm "\09.long\09__crc_nand_gpio_waitrdy\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_gpio_waitrdy:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_gpio_waitrdy\22\09\09\09\09\09"
module asm "__kstrtabns_nand_gpio_waitrdy:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_read_page_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_page_op\09\09\09\09"
module asm "\09.long\09__crc_nand_read_page_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_page_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_page_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_page_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_change_read_column_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_change_read_column_op\09\09\09\09"
module asm "\09.long\09__crc_nand_change_read_column_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_change_read_column_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_change_read_column_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_change_read_column_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_read_oob_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_oob_op\09\09\09\09"
module asm "\09.long\09__crc_nand_read_oob_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_oob_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_oob_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_oob_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_prog_page_begin_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_prog_page_begin_op\09\09\09\09"
module asm "\09.long\09__crc_nand_prog_page_begin_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_prog_page_begin_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_prog_page_begin_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_prog_page_begin_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_prog_page_end_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_prog_page_end_op\09\09\09\09"
module asm "\09.long\09__crc_nand_prog_page_end_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_prog_page_end_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_prog_page_end_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_prog_page_end_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_prog_page_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_prog_page_op\09\09\09\09"
module asm "\09.long\09__crc_nand_prog_page_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_prog_page_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_prog_page_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_prog_page_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_change_write_column_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_change_write_column_op\09\09\09\09"
module asm "\09.long\09__crc_nand_change_write_column_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_change_write_column_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_change_write_column_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_change_write_column_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_readid_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_readid_op\09\09\09\09"
module asm "\09.long\09__crc_nand_readid_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_readid_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_readid_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_readid_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_status_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_status_op\09\09\09\09"
module asm "\09.long\09__crc_nand_status_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_status_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_status_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_status_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_erase_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_erase_op\09\09\09\09"
module asm "\09.long\09__crc_nand_erase_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_erase_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_erase_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_erase_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_reset_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_reset_op\09\09\09\09"
module asm "\09.long\09__crc_nand_reset_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_reset_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_reset_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_reset_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_read_data_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_data_op\09\09\09\09"
module asm "\09.long\09__crc_nand_read_data_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_data_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_data_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_data_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_write_data_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_write_data_op\09\09\09\09"
module asm "\09.long\09__crc_nand_write_data_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_write_data_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_write_data_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_write_data_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_op_parser_exec_op\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_op_parser_exec_op\09\09\09\09"
module asm "\09.long\09__crc_nand_op_parser_exec_op\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_op_parser_exec_op:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_op_parser_exec_op\22\09\09\09\09\09"
module asm "__kstrtabns_nand_op_parser_exec_op:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_subop_get_addr_start_off\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_subop_get_addr_start_off\09\09\09\09"
module asm "\09.long\09__crc_nand_subop_get_addr_start_off\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_subop_get_addr_start_off:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_subop_get_addr_start_off\22\09\09\09\09\09"
module asm "__kstrtabns_nand_subop_get_addr_start_off:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_subop_get_num_addr_cyc\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_subop_get_num_addr_cyc\09\09\09\09"
module asm "\09.long\09__crc_nand_subop_get_num_addr_cyc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_subop_get_num_addr_cyc:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_subop_get_num_addr_cyc\22\09\09\09\09\09"
module asm "__kstrtabns_nand_subop_get_num_addr_cyc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_subop_get_data_start_off\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_subop_get_data_start_off\09\09\09\09"
module asm "\09.long\09__crc_nand_subop_get_data_start_off\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_subop_get_data_start_off:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_subop_get_data_start_off\22\09\09\09\09\09"
module asm "__kstrtabns_nand_subop_get_data_start_off:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_subop_get_data_len\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_subop_get_data_len\09\09\09\09"
module asm "\09.long\09__crc_nand_subop_get_data_len\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_subop_get_data_len:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_subop_get_data_len\22\09\09\09\09\09"
module asm "__kstrtabns_nand_subop_get_data_len:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_reset\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_reset\09\09\09\09"
module asm "\09.long\09__crc_nand_reset\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_reset\22\09\09\09\09\09"
module asm "__kstrtabns_nand_reset:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_check_erased_ecc_chunk\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_check_erased_ecc_chunk\09\09\09\09"
module asm "\09.long\09__crc_nand_check_erased_ecc_chunk\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_check_erased_ecc_chunk:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_check_erased_ecc_chunk\22\09\09\09\09\09"
module asm "__kstrtabns_nand_check_erased_ecc_chunk:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_read_page_raw\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_page_raw\09\09\09\09"
module asm "\09.long\09__crc_nand_read_page_raw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_page_raw\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_monolithic_read_page_raw\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_monolithic_read_page_raw\09\09\09\09"
module asm "\09.long\09__crc_nand_monolithic_read_page_raw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_monolithic_read_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_monolithic_read_page_raw\22\09\09\09\09\09"
module asm "__kstrtabns_nand_monolithic_read_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_read_page_hwecc_oob_first\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_page_hwecc_oob_first\09\09\09\09"
module asm "\09.long\09__crc_nand_read_page_hwecc_oob_first\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_page_hwecc_oob_first:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_page_hwecc_oob_first\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_page_hwecc_oob_first:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_read_oob_std\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_read_oob_std\09\09\09\09"
module asm "\09.long\09__crc_nand_read_oob_std\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_read_oob_std:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_read_oob_std\22\09\09\09\09\09"
module asm "__kstrtabns_nand_read_oob_std:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_write_oob_std\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_write_oob_std\09\09\09\09"
module asm "\09.long\09__crc_nand_write_oob_std\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_write_oob_std:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_write_oob_std\22\09\09\09\09\09"
module asm "__kstrtabns_nand_write_oob_std:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_write_page_raw\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_write_page_raw\09\09\09\09"
module asm "\09.long\09__crc_nand_write_page_raw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_write_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_write_page_raw\22\09\09\09\09\09"
module asm "__kstrtabns_nand_write_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_monolithic_write_page_raw\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_monolithic_write_page_raw\09\09\09\09"
module asm "\09.long\09__crc_nand_monolithic_write_page_raw\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_monolithic_write_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_monolithic_write_page_raw\22\09\09\09\09\09"
module asm "__kstrtabns_nand_monolithic_write_page_raw:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_decode_ext_id\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_decode_ext_id\09\09\09\09"
module asm "\09.long\09__crc_nand_decode_ext_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_decode_ext_id:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_decode_ext_id\22\09\09\09\09\09"
module asm "__kstrtabns_nand_decode_ext_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_dt_parse_gpio_cs\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_dt_parse_gpio_cs\09\09\09\09"
module asm "\09.long\09__crc_rawnand_dt_parse_gpio_cs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_dt_parse_gpio_cs:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_dt_parse_gpio_cs\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_dt_parse_gpio_cs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_hamming_init\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_hamming_init\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_hamming_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_hamming_init:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_hamming_init\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_hamming_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_hamming_calculate\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_hamming_calculate\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_hamming_calculate\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_hamming_calculate:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_hamming_calculate\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_hamming_calculate:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_hamming_correct\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_hamming_correct\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_hamming_correct\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_hamming_correct:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_hamming_correct\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_hamming_correct:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_hamming_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_hamming_cleanup\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_hamming_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_hamming_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_hamming_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_hamming_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_bch_init\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_bch_init\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_bch_init\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_bch_init:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_bch_init\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_bch_init:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_bch_correct\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_bch_correct\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_bch_correct\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_bch_correct:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_bch_correct\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_bch_correct:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+rawnand_sw_bch_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_rawnand_sw_bch_cleanup\09\09\09\09"
module asm "\09.long\09__crc_rawnand_sw_bch_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rawnand_sw_bch_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22rawnand_sw_bch_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_rawnand_sw_bch_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_ecc_choose_conf\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_ecc_choose_conf\09\09\09\09"
module asm "\09.long\09__crc_nand_ecc_choose_conf\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_ecc_choose_conf:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_ecc_choose_conf\22\09\09\09\09\09"
module asm "__kstrtabns_nand_ecc_choose_conf:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab+nand_scan_with_ids\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_scan_with_ids\09\09\09\09"
module asm "\09.long\09__crc_nand_scan_with_ids\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_scan_with_ids:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_scan_with_ids\22\09\09\09\09\09"
module asm "__kstrtabns_nand_scan_with_ids:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+nand_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_nand_cleanup\09\09\09\09"
module asm "\09.long\09__crc_nand_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_nand_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22nand_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_nand_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.mtd_pairing_scheme = type { i32, ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.nand_op_cmd_instr = type { i8 }
%struct.atomic_t = type { i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.nand_flash_dev = type { ptr, %union.anon.83, i32, i32, i32, i32, i16, i16, %struct.anon.85 }
%union.anon.83 = type { [8 x i8] }
%struct.anon.85 = type { i16, i16 }
%struct.nand_ops = type { ptr, ptr, ptr }
%struct.mtd_info = type { i8, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, %struct.notifier_block, %struct.mtd_ecc_stats, i32, ptr, ptr, %struct.device, i32, %struct.mtd_debug_info, ptr, ptr, ptr, ptr, %struct.list_head, %union.anon.70 }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.mtd_ecc_stats = type { i32, i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.mtd_debug_info = type { ptr, ptr, ptr }
%struct.list_head = type { ptr, ptr }
%union.anon.70 = type { %struct.mtd_part, [160 x i8] }
%struct.mtd_part = type { %struct.list_head, i64, i64, i32 }
%struct.mtd_pairing_info = type { i32, i32 }
%struct.nand_device = type { %struct.mtd_info, %struct.nand_memory_organization, %struct.nand_ecc, %struct.nand_row_converter, %struct.nand_bbt, ptr }
%struct.nand_memory_organization = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nand_ecc = type { %struct.nand_ecc_props, %struct.nand_ecc_props, %struct.nand_ecc_props, %struct.nand_ecc_context, ptr, ptr }
%struct.nand_ecc_props = type { i32, i32, i32, i32, i32, i32 }
%struct.nand_ecc_context = type { %struct.nand_ecc_props, i32, i32, ptr }
%struct.nand_row_converter = type { i32, i32 }
%struct.nand_bbt = type { ptr }
%struct.nand_chip = type { %struct.nand_device, %struct.nand_id, %struct.nand_parameters, %struct.nand_manufacturer, %struct.nand_chip_ops, %struct.nand_legacy, i32, ptr, ptr, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, ptr, ptr, %struct.anon.80, i32, %struct.mutex, i8, i32, i32, ptr, i8, ptr, %struct.nand_ecc_ctrl, ptr }
%struct.nand_id = type { [8 x i8], i32 }
%struct.nand_parameters = type { ptr, i8, [8 x i32], [8 x i32], ptr }
%struct.nand_manufacturer = type { ptr, ptr }
%struct.nand_chip_ops = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nand_legacy = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.nand_controller }
%struct.nand_controller = type { %struct.mutex, ptr }
%struct.anon.80 = type { i32, i32 }
%struct.nand_ecc_ctrl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mtd_oob_ops = type { i32, i32, i32, i32, i32, i32, ptr, ptr }
%struct.nand_op_instr = type { i32, %union.anon.78, i32 }
%union.anon.78 = type { %struct.nand_op_data_instr }
%struct.nand_op_data_instr = type { i32, %union.anon.79, i8 }
%union.anon.79 = type { ptr }
%struct.nand_operation = type { i32, ptr, i32 }
%struct.nand_controller_ops = type { ptr, ptr, ptr, ptr }
%struct.nand_interface_config = type { i32, %struct.nand_timings }
%struct.nand_timings = type { i32, %union.anon.77 }
%union.anon.77 = type { %struct.nand_sdr_timings }
%struct.nand_sdr_timings = type { i64, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32 }
%struct.nand_nvddr_timings = type { i64, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.onfi_params = type { i32, i16, i16, i16, i16, i8, i16, i16, i16, [88 x i8] }
%struct.nand_op_parser_ctx = type { ptr, i32, %struct.nand_subop }
%struct.nand_subop = type { i32, ptr, i32, i32, i32 }
%struct.nand_op_parser = type { ptr, i32 }
%struct.nand_op_parser_pattern = type { ptr, i32, ptr }
%struct.nand_op_parser_pattern_elem = type { i32, i8, %union.anon.81 }
%union.anon.81 = type { %struct.nand_op_parser_addr_constraints }
%struct.nand_op_parser_addr_constraints = type { i32 }
%struct.erase_info = type { i64, i64, i64 }
%struct.nand_secure_region = type { i64, i64 }
%struct.nand_ecc_sw_hamming_conf = type { %struct.nand_ecc_req_tweak_ctx, i32, ptr, ptr, i32 }
%struct.nand_ecc_req_tweak_ctx = type { %struct.nand_page_io_req, ptr, i32, i32, ptr, ptr, i8, i8 }
%struct.nand_page_io_req = type { i32, %struct.nand_pos, i32, i32, %union.anon.75, i32, i32, %union.anon.76, i32 }
%struct.nand_pos = type { i32, i32, i32, i32, i32 }
%union.anon.75 = type { ptr }
%union.anon.76 = type { ptr }
%struct.nand_ecc_caps = type { ptr, i32, ptr }
%struct.nand_ecc_step_info = type { i32, ptr, i32 }
%struct.nand_manufacturer_desc = type { i32, ptr, ptr }
%struct.nand_manufacturer_ops = type { ptr, ptr, ptr, ptr }
%struct.mtd_oob_region = type { i32, i32 }

@dist3_pairing_scheme = dso_local constant { %struct.mtd_pairing_scheme, [20 x i8] } { %struct.mtd_pairing_scheme { i32 2, ptr @nand_pairing_dist3_get_info, ptr @nand_pairing_dist3_get_wunit }, [20 x i8] zeroinitializer }, align 32
@__kstrtab_nand_extract_bits = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_extract_bits = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_extract_bits = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_extract_bits to i32), ptr @__kstrtab_nand_extract_bits, ptr @__kstrtabns_nand_extract_bits }, section "___ksymtab_gpl+nand_extract_bits", align 4
@.str = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"drivers/mtd/nand/raw/nand_base.c\00", [63 x i8] zeroinitializer }, align 32
@__kstrtab_nand_select_target = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_select_target = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_select_target = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_select_target to i32), ptr @__kstrtab_nand_select_target, ptr @__kstrtabns_nand_select_target }, section "___ksymtab_gpl+nand_select_target", align 4
@__kstrtab_nand_deselect_target = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_deselect_target = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_deselect_target = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_deselect_target to i32), ptr @__kstrtab_nand_deselect_target, ptr @__kstrtabns_nand_deselect_target }, section "___ksymtab_gpl+nand_deselect_target", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@__kstrtab_nand_soft_waitrdy = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_soft_waitrdy = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_soft_waitrdy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_soft_waitrdy to i32), ptr @__kstrtab_nand_soft_waitrdy, ptr @__kstrtabns_nand_soft_waitrdy }, section "___ksymtab_gpl+nand_soft_waitrdy", align 4
@__kstrtab_nand_gpio_waitrdy = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_gpio_waitrdy = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_gpio_waitrdy = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_gpio_waitrdy to i32), ptr @__kstrtab_nand_gpio_waitrdy, ptr @__kstrtabns_nand_gpio_waitrdy }, section "___ksymtab_gpl+nand_gpio_waitrdy", align 4
@__kstrtab_nand_read_page_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_page_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_page_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_page_op to i32), ptr @__kstrtab_nand_read_page_op, ptr @__kstrtabns_nand_read_page_op }, section "___ksymtab_gpl+nand_read_page_op", align 4
@__kstrtab_nand_change_read_column_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_change_read_column_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_change_read_column_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_change_read_column_op to i32), ptr @__kstrtab_nand_change_read_column_op, ptr @__kstrtabns_nand_change_read_column_op }, section "___ksymtab_gpl+nand_change_read_column_op", align 4
@__kstrtab_nand_read_oob_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_oob_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_oob_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_oob_op to i32), ptr @__kstrtab_nand_read_oob_op, ptr @__kstrtabns_nand_read_oob_op }, section "___ksymtab_gpl+nand_read_oob_op", align 4
@__kstrtab_nand_prog_page_begin_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_prog_page_begin_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_prog_page_begin_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_prog_page_begin_op to i32), ptr @__kstrtab_nand_prog_page_begin_op, ptr @__kstrtabns_nand_prog_page_begin_op }, section "___ksymtab_gpl+nand_prog_page_begin_op", align 4
@__kstrtab_nand_prog_page_end_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_prog_page_end_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_prog_page_end_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_prog_page_end_op to i32), ptr @__kstrtab_nand_prog_page_end_op, ptr @__kstrtabns_nand_prog_page_end_op }, section "___ksymtab_gpl+nand_prog_page_end_op", align 4
@__kstrtab_nand_prog_page_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_prog_page_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_prog_page_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_prog_page_op to i32), ptr @__kstrtab_nand_prog_page_op, ptr @__kstrtabns_nand_prog_page_op }, section "___ksymtab_gpl+nand_prog_page_op", align 4
@__kstrtab_nand_change_write_column_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_change_write_column_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_change_write_column_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_change_write_column_op to i32), ptr @__kstrtab_nand_change_write_column_op, ptr @__kstrtabns_nand_change_write_column_op }, section "___ksymtab_gpl+nand_change_write_column_op", align 4
@__kstrtab_nand_readid_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_readid_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_readid_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_readid_op to i32), ptr @__kstrtab_nand_readid_op, ptr @__kstrtabns_nand_readid_op }, section "___ksymtab_gpl+nand_readid_op", align 4
@__kstrtab_nand_status_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_status_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_status_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_status_op to i32), ptr @__kstrtab_nand_status_op, ptr @__kstrtabns_nand_status_op }, section "___ksymtab_gpl+nand_status_op", align 4
@__const.nand_exit_status_op.instrs = private unnamed_addr constant [1 x { i32, { %struct.nand_op_cmd_instr, [11 x i8] }, i32 }] [{ i32, { %struct.nand_op_cmd_instr, [11 x i8] }, i32 } { i32 0, { %struct.nand_op_cmd_instr, [11 x i8] } { %struct.nand_op_cmd_instr zeroinitializer, [11 x i8] c"\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF\FF" }, i32 0 }], align 4
@__kstrtab_nand_erase_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_erase_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_erase_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_erase_op to i32), ptr @__kstrtab_nand_erase_op, ptr @__kstrtabns_nand_erase_op }, section "___ksymtab_gpl+nand_erase_op", align 4
@__kstrtab_nand_reset_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_reset_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_reset_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_reset_op to i32), ptr @__kstrtab_nand_reset_op, ptr @__kstrtabns_nand_reset_op }, section "___ksymtab_gpl+nand_reset_op", align 4
@__kstrtab_nand_read_data_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_data_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_data_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_data_op to i32), ptr @__kstrtab_nand_read_data_op, ptr @__kstrtabns_nand_read_data_op }, section "___ksymtab_gpl+nand_read_data_op", align 4
@__kstrtab_nand_write_data_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_write_data_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_write_data_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_write_data_op to i32), ptr @__kstrtab_nand_write_data_op, ptr @__kstrtabns_nand_write_data_op }, section "___ksymtab_gpl+nand_write_data_op", align 4
@nand_op_parser_exec_op.__UNIQUE_ID_ddebug263 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.2, ptr @.str, ptr @.str.3, i8 2, i8 92, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.1 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"nand\00", [27 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"nand_op_parser_exec_op\00", [41 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"->exec_op() parser: pattern not found!\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"nand: ->exec_op() parser: pattern not found!\0A\00", [50 x i8] zeroinitializer }, align 32
@__kstrtab_nand_op_parser_exec_op = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_op_parser_exec_op = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_op_parser_exec_op = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_op_parser_exec_op to i32), ptr @__kstrtab_nand_op_parser_exec_op, ptr @__kstrtabns_nand_op_parser_exec_op }, section "___ksymtab_gpl+nand_op_parser_exec_op", align 4
@__kstrtab_nand_subop_get_addr_start_off = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_subop_get_addr_start_off = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_subop_get_addr_start_off = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_subop_get_addr_start_off to i32), ptr @__kstrtab_nand_subop_get_addr_start_off, ptr @__kstrtabns_nand_subop_get_addr_start_off }, section "___ksymtab_gpl+nand_subop_get_addr_start_off", align 4
@__kstrtab_nand_subop_get_num_addr_cyc = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_subop_get_num_addr_cyc = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_subop_get_num_addr_cyc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_subop_get_num_addr_cyc to i32), ptr @__kstrtab_nand_subop_get_num_addr_cyc, ptr @__kstrtabns_nand_subop_get_num_addr_cyc }, section "___ksymtab_gpl+nand_subop_get_num_addr_cyc", align 4
@__kstrtab_nand_subop_get_data_start_off = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_subop_get_data_start_off = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_subop_get_data_start_off = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_subop_get_data_start_off to i32), ptr @__kstrtab_nand_subop_get_data_start_off, ptr @__kstrtabns_nand_subop_get_data_start_off }, section "___ksymtab_gpl+nand_subop_get_data_start_off", align 4
@__kstrtab_nand_subop_get_data_len = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_subop_get_data_len = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_subop_get_data_len = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_subop_get_data_len to i32), ptr @__kstrtab_nand_subop_get_data_len, ptr @__kstrtabns_nand_subop_get_data_len }, section "___ksymtab_gpl+nand_subop_get_data_len", align 4
@__kstrtab_nand_reset = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_reset = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_reset = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_reset to i32), ptr @__kstrtab_nand_reset, ptr @__kstrtabns_nand_reset }, section "___ksymtab_gpl+nand_reset", align 4
@__kstrtab_nand_check_erased_ecc_chunk = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_check_erased_ecc_chunk = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_check_erased_ecc_chunk = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_check_erased_ecc_chunk to i32), ptr @__kstrtab_nand_check_erased_ecc_chunk, ptr @__kstrtabns_nand_check_erased_ecc_chunk }, section "___ksymtab+nand_check_erased_ecc_chunk", align 4
@__kstrtab_nand_read_page_raw = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_page_raw = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_page_raw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_page_raw to i32), ptr @__kstrtab_nand_read_page_raw, ptr @__kstrtabns_nand_read_page_raw }, section "___ksymtab+nand_read_page_raw", align 4
@__kstrtab_nand_monolithic_read_page_raw = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_monolithic_read_page_raw = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_monolithic_read_page_raw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_monolithic_read_page_raw to i32), ptr @__kstrtab_nand_monolithic_read_page_raw, ptr @__kstrtabns_nand_monolithic_read_page_raw }, section "___ksymtab+nand_monolithic_read_page_raw", align 4
@__kstrtab_nand_read_page_hwecc_oob_first = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_page_hwecc_oob_first = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_page_hwecc_oob_first = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_page_hwecc_oob_first to i32), ptr @__kstrtab_nand_read_page_hwecc_oob_first, ptr @__kstrtabns_nand_read_page_hwecc_oob_first }, section "___ksymtab_gpl+nand_read_page_hwecc_oob_first", align 4
@__kstrtab_nand_read_oob_std = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_read_oob_std = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_read_oob_std = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_read_oob_std to i32), ptr @__kstrtab_nand_read_oob_std, ptr @__kstrtabns_nand_read_oob_std }, section "___ksymtab+nand_read_oob_std", align 4
@__kstrtab_nand_write_oob_std = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_write_oob_std = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_write_oob_std = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_write_oob_std to i32), ptr @__kstrtab_nand_write_oob_std, ptr @__kstrtabns_nand_write_oob_std }, section "___ksymtab+nand_write_oob_std", align 4
@__kstrtab_nand_write_page_raw = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_write_page_raw = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_write_page_raw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_write_page_raw to i32), ptr @__kstrtab_nand_write_page_raw, ptr @__kstrtabns_nand_write_page_raw }, section "___ksymtab+nand_write_page_raw", align 4
@__kstrtab_nand_monolithic_write_page_raw = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_monolithic_write_page_raw = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_monolithic_write_page_raw = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_monolithic_write_page_raw to i32), ptr @__kstrtab_nand_monolithic_write_page_raw, ptr @__kstrtabns_nand_monolithic_write_page_raw }, section "___ksymtab+nand_monolithic_write_page_raw", align 4
@nand_erase_nand.__UNIQUE_ID_ddebug300 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.5, ptr @.str, ptr @.str.6, i8 4, i8 94, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.5 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"nand_erase_nand\00", [16 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: start = 0x%012llx, len = %llu\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"nand: %s: start = 0x%012llx, len = %llu\0A\00", [55 x i8] zeroinitializer }, align 32
@nand_erase_nand.__UNIQUE_ID_ddebug301 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.5, ptr @.str, ptr @.str.8, i8 4, i8 101, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.8 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s: device is write protected!\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"nand: %s: device is write protected!\0A\00", [58 x i8] zeroinitializer }, align 32
@nand_erase_nand._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.5, ptr @.str, i32 4514, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [57 x i8], [39 x i8] } { [57 x i8] c"\014nand: %s: attempt to erase a bad block at page 0x%08x\0A\00", [39 x i8] zeroinitializer }, align 32
@nand_erase_nand._entry_ptr = internal global ptr @nand_erase_nand._entry, section ".printk_index", align 4
@nand_erase_nand.__UNIQUE_ID_ddebug302 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.5, ptr @.str, ptr @.str.11, i8 4, i8 108, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.11 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: failed erase, page 0x%08x\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"nand: %s: failed erase, page 0x%08x\0A\00", [59 x i8] zeroinitializer }, align 32
@__kstrtab_nand_decode_ext_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_decode_ext_id = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_decode_ext_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_decode_ext_id to i32), ptr @__kstrtab_nand_decode_ext_id, ptr @__kstrtabns_nand_decode_ext_id }, section "___ksymtab_gpl+nand_decode_ext_id", align 4
@.str.13 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"cs-gpios\00", [23 x i8] zeroinitializer }, align 32
@rawnand_dt_parse_gpio_cs.__UNIQUE_ID_ddebug304 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.14, ptr @.str, ptr @.str.15, i8 5, i8 56, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.14 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"rawnand_dt_parse_gpio_cs\00", [39 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"No valid cs-gpios property\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"cs\00", [29 x i8] zeroinitializer }, align 32
@__kstrtab_rawnand_dt_parse_gpio_cs = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_dt_parse_gpio_cs = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_dt_parse_gpio_cs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_dt_parse_gpio_cs to i32), ptr @__kstrtab_rawnand_dt_parse_gpio_cs, ptr @__kstrtabns_rawnand_dt_parse_gpio_cs }, section "___ksymtab+rawnand_dt_parse_gpio_cs", align 4
@__kstrtab_rawnand_sw_hamming_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_hamming_init = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_hamming_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_hamming_init to i32), ptr @__kstrtab_rawnand_sw_hamming_init, ptr @__kstrtabns_rawnand_sw_hamming_init }, section "___ksymtab+rawnand_sw_hamming_init", align 4
@__kstrtab_rawnand_sw_hamming_calculate = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_hamming_calculate = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_hamming_calculate = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_hamming_calculate to i32), ptr @__kstrtab_rawnand_sw_hamming_calculate, ptr @__kstrtabns_rawnand_sw_hamming_calculate }, section "___ksymtab+rawnand_sw_hamming_calculate", align 4
@__kstrtab_rawnand_sw_hamming_correct = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_hamming_correct = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_hamming_correct = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_hamming_correct to i32), ptr @__kstrtab_rawnand_sw_hamming_correct, ptr @__kstrtabns_rawnand_sw_hamming_correct }, section "___ksymtab+rawnand_sw_hamming_correct", align 4
@__kstrtab_rawnand_sw_hamming_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_hamming_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_hamming_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_hamming_cleanup to i32), ptr @__kstrtab_rawnand_sw_hamming_cleanup, ptr @__kstrtabns_rawnand_sw_hamming_cleanup }, section "___ksymtab+rawnand_sw_hamming_cleanup", align 4
@__kstrtab_rawnand_sw_bch_init = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_bch_init = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_bch_init = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_bch_init to i32), ptr @__kstrtab_rawnand_sw_bch_init, ptr @__kstrtabns_rawnand_sw_bch_init }, section "___ksymtab+rawnand_sw_bch_init", align 4
@__kstrtab_rawnand_sw_bch_correct = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_bch_correct = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_bch_correct = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_bch_correct to i32), ptr @__kstrtab_rawnand_sw_bch_correct, ptr @__kstrtabns_rawnand_sw_bch_correct }, section "___ksymtab+rawnand_sw_bch_correct", align 4
@__kstrtab_rawnand_sw_bch_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_rawnand_sw_bch_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_rawnand_sw_bch_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rawnand_sw_bch_cleanup to i32), ptr @__kstrtab_rawnand_sw_bch_cleanup, ptr @__kstrtabns_rawnand_sw_bch_cleanup }, section "___ksymtab+rawnand_sw_bch_cleanup", align 4
@__kstrtab_nand_ecc_choose_conf = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_ecc_choose_conf = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_ecc_choose_conf = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_ecc_choose_conf to i32), ptr @__kstrtab_nand_ecc_choose_conf, ptr @__kstrtabns_nand_ecc_choose_conf }, section "___ksymtab_gpl+nand_ecc_choose_conf", align 4
@__kstrtab_nand_scan_with_ids = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_scan_with_ids = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_scan_with_ids = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_scan_with_ids to i32), ptr @__kstrtab_nand_scan_with_ids, ptr @__kstrtabns_nand_scan_with_ids }, section "___ksymtab+nand_scan_with_ids", align 4
@__kstrtab_nand_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_nand_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_nand_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @nand_cleanup to i32), ptr @__kstrtab_nand_cleanup, ptr @__kstrtabns_nand_cleanup }, section "___ksymtab_gpl+nand_cleanup", align 4
@__UNIQUE_ID_file305 = internal constant [36 x i8] c"nand.file=drivers/mtd/nand/raw/nand\00", section ".modinfo", align 1
@__UNIQUE_ID_license306 = internal constant [17 x i8] c"nand.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_author307 = internal constant [55 x i8] c"nand.author=Steven J. Hill <sjhill@realitydiluted.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_author308 = internal constant [49 x i8] c"nand.author=Thomas Gleixner <tglx@linutronix.de>\00", section ".modinfo", align 1
@__UNIQUE_ID_description309 = internal constant [48 x i8] c"nand.description=Generic NAND flash driver code\00", section ".modinfo", align 1
@nand_do_write_oob.__UNIQUE_ID_ddebug254 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.17, ptr @.str, ptr @.str.18, i8 0, i8 107, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.17 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nand_do_write_oob\00", [46 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: to = 0x%08x, len = %i\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"nand: %s: to = 0x%08x, len = %i\0A\00", [63 x i8] zeroinitializer }, align 32
@nand_do_write_oob.__UNIQUE_ID_ddebug255 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.17, ptr @.str, ptr @.str.20, i8 0, i8 109, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.20 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: attempt to write past end of page\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"nand: %s: attempt to write past end of page\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"drivers/mtd/nand/raw/internals.h\00", [63 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@.str.23 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"      \00", [25 x i8] zeroinitializer }, align 32
@nand_op_parser_trace.__UNIQUE_ID_ddebug262 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.24, ptr @.str, ptr @.str.25, i8 2, i8 69, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.24 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nand_op_parser_trace\00", [43 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"executing subop (CS%d):\0A\00", [39 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"nand: executing subop (CS%d):\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"    ->\00", [25 x i8] zeroinitializer }, align 32
@nand_op_trace.__UNIQUE_ID_ddebug242 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.28, ptr @.str.29, ptr @.str.30, i8 1, i8 1, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.28 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"nand_op_trace\00", [18 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/mtd/rawnand.h\00", [36 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%sCMD      [0x%02x]\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"nand: %sCMD      [0x%02x]\0A\00", [37 x i8] zeroinitializer }, align 32
@nand_op_trace.__UNIQUE_ID_ddebug243 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.28, ptr @.str.29, ptr @.str.32, i8 1, i8 3, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.32 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%sADDR     [%d cyc: %*ph]\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"nand: %sADDR     [%d cyc: %*ph]\0A\00", [63 x i8] zeroinitializer }, align 32
@nand_op_trace.__UNIQUE_ID_ddebug244 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.28, ptr @.str.29, ptr @.str.34, i8 1, i8 5, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.34 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%sDATA_IN  [%d B%s]\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"nand: %sDATA_IN  [%d B%s]\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c", force 8-bit\00", [18 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@nand_op_trace.__UNIQUE_ID_ddebug245 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.28, ptr @.str.29, ptr @.str.38, i8 1, i8 6, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.38 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%sDATA_OUT [%d B%s]\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"nand: %sDATA_OUT [%d B%s]\0A\00", [37 x i8] zeroinitializer }, align 32
@nand_op_trace.__UNIQUE_ID_ddebug246 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.28, ptr @.str.29, ptr @.str.40, i8 1, i8 7, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.40 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%sWAITRDY  [max %d ms]\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"nand: %sWAITRDY  [max %d ms]\0A\00", [34 x i8] zeroinitializer }, align 32
@nand_reset_interface._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.43, ptr @.str, i32 821, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"\013nand: Failed to configure data interface to SDR timing mode 0\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nand_reset_interface\00", [43 x i8] zeroinitializer }, align 32
@nand_reset_interface._entry_ptr = internal global ptr @nand_reset_interface._entry, section ".printk_index", align 4
@nand_setup_interface._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.45, ptr @.str, i32 892, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [61 x i8], [35 x i8] } { [61 x i8] c"\014nand: %s timing mode %d not acknowledged by the NAND chip\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"nand_setup_interface\00", [43 x i8] zeroinitializer }, align 32
@nand_setup_interface._entry_ptr = internal global ptr @nand_setup_interface._entry, section ".printk_index", align 4
@.str.46 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"NV-DDR\00", [25 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"SDR\00", [28 x i8] zeroinitializer }, align 32
@nand_setup_interface.__UNIQUE_ID_ddebug256 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.45, ptr @.str, ptr @.str.48, i8 0, i8 -33, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.48 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"NAND chip would work in %s timing mode %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"nand: NAND chip would work in %s timing mode %d\0A\00", [47 x i8] zeroinitializer }, align 32
@check_offs_len.__UNIQUE_ID_ddebug247 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.50, ptr @.str, ptr @.str.51, i8 0, i8 26, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.50 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"check_offs_len\00", [17 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: unaligned address\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"nand: %s: unaligned address\0A\00", [35 x i8] zeroinitializer }, align 32
@check_offs_len.__UNIQUE_ID_ddebug248 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.50, ptr @.str, ptr @.str.53, i8 0, i8 28, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.53 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: length not block aligned\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"nand: %s: length not block aligned\0A\00", [60 x i8] zeroinitializer }, align 32
@nand_region_is_secured.__UNIQUE_ID_ddebug253 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.55, ptr @.str, ptr @.str.56, i8 0, i8 76, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.55 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"nand_region_is_secured\00", [41 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"%s: Region 0x%llx - 0x%llx is secured!\00", [57 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"nand: %s: Region 0x%llx - 0x%llx is secured!\00", [51 x i8] zeroinitializer }, align 32
@nand_isbad_bbm.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@mtd_expert_analysis_mode = external dso_local local_unnamed_addr global i8, align 1
@mtd_expert_analysis_warning = external dso_local local_unnamed_addr global ptr, align 4
@.str.58 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"#gpio-cells\00", [20 x i8] zeroinitializer }, align 32
@nand_check_ecc_caps.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nand_check_ecc_caps._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.60, ptr @.str, i32 5795, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\013nand: ECC (step, strength) = (%d, %d) does not fit in OOB\00", [36 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"nand_check_ecc_caps\00", [44 x i8] zeroinitializer }, align 32
@nand_check_ecc_caps._entry_ptr = internal global ptr @nand_check_ecc_caps._entry, section ".printk_index", align 4
@nand_check_ecc_caps._entry.61 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.60, ptr @.str, i32 5806, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"\013nand: ECC (step, strength) = (%d, %d) not supported on this controller\00", [55 x i8] zeroinitializer }, align 32
@nand_check_ecc_caps._entry_ptr.63 = internal global ptr @nand_check_ecc_caps._entry.61, section ".printk_index", align 4
@nand_maximize_ecc.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nand_match_ecc_req.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nand_scan_ident.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&chip->lock\00", [20 x i8] zeroinitializer }, align 32
@nand_scan_ident._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str, i32 5464, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"\014nand: No NAND device found\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"nand_scan_ident\00", [16 x i8] zeroinitializer }, align 32
@nand_scan_ident._entry_ptr = internal global ptr @nand_scan_ident._entry, section ".printk_index", align 4
@nand_scan_ident._entry.67 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.68, ptr @.str.66, ptr @.str, i32 5496, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"\016nand: %d chips detected\0A\00", [37 x i8] zeroinitializer }, align 32
@nand_scan_ident._entry_ptr.69 = internal global ptr @nand_scan_ident._entry.67, section ".printk_index", align 4
@.str.70 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"nand-is-boot-medium\00", [44 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"nand-bus-width\00", [17 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nand-on-flash-bbt\00", [46 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"soft\00", [27 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"soft_bch\00", [23 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"hw\00", [29 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"hw_syndrome\00", [20 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"on-die\00", [25 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"nand-ecc-mode\00", [18 x i8] zeroinitializer }, align 32
@nand_controller_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.80 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"&nfc->lock\00", [21 x i8] zeroinitializer }, align 32
@nand_detect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.82, ptr @.str, i32 5045, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"\016nand: second ID read did not match %02x,%02x against %02x,%02x\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nand_detect\00", [20 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr = internal global ptr @nand_detect._entry, section ".printk_index", align 4
@nand_flash_ids = external dso_local global [0 x %struct.nand_flash_dev], align 4
@nand_detect._entry.83 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.82, ptr @.str, i32 5131, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\016nand: device found, Manufacturer ID: 0x%02x, Chip ID: 0x%02x\0A\00", [32 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.85 = internal global ptr @nand_detect._entry.83, section ".printk_index", align 4
@nand_detect._entry.86 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.82, ptr @.str, i32 5133, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"\016nand: %s %s\0A\00", [17 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.88 = internal global ptr @nand_detect._entry.86, section ".printk_index", align 4
@nand_detect._entry.89 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.82, ptr @.str, i32 5135, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"\014nand: bus width %d instead of %d bits\0A\00", [55 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.91 = internal global ptr @nand_detect._entry.89, section ".printk_index", align 4
@nand_detect._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.84, ptr @.str.82, ptr @.str, i32 5166, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.93 = internal global ptr @nand_detect._entry.92, section ".printk_index", align 4
@nand_detect._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.87, ptr @.str.82, ptr @.str, i32 5168, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.95 = internal global ptr @nand_detect._entry.94, section ".printk_index", align 4
@nand_detect._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.82, ptr @.str, i32 5171, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"\016nand: %d MiB, %s, erase size: %d KiB, page size: %d, OOB size: %d\0A\00", [59 x i8] zeroinitializer }, align 32
@nand_detect._entry_ptr.98 = internal global ptr @nand_detect._entry.96, section ".printk_index", align 4
@.str.99 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"SLC\00", [28 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"MLC\00", [28 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"Unknown\00", [24 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"chip->bits_per_cell is used uninitialized\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"No oob scheme defined for oobsize %d\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"Driver must set ecc.strength when using hardware ECC\0A\00", [42 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @.str.106, ptr @.str, i32 6147, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"\014nand: %d byte HW ECC not possible on %d byte page size, fallback to SW ECC\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"nand_scan_tail\00", [17 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry_ptr = internal global ptr @nand_scan_tail._entry, section ".printk_index", align 4
@.str.107 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"No ECC functions supplied; on-die ECC not possible\0A\00", [44 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry.108 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.106, ptr @.str, i32 6171, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [86 x i8], [42 x i8] } { [86 x i8] c"\014nand: NAND_ECC_ENGINE_TYPE_NONE selected by board driver. This is not recommended!\0A\00", [42 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry_ptr.110 = internal global ptr @nand_scan_tail._entry.108, section ".printk_index", align 4
@.str.111 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"Invalid NAND_ECC_MODE %d\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Invalid ECC parameters\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Total number of ECC bytes exceeded oobsize\0A\00", [52 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry.114 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.115, ptr @.str.106, ptr @.str, i32 6246, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [128 x i8], [32 x i8] } { [128 x i8] c"\014nand: WARNING: %s: the ECC used on your system (%db/%dB) is too weak compared to the one required by the NAND chip (%db/%dB)\0A\00", [32 x i8] zeroinitializer }, align 32
@nand_scan_tail._entry_ptr.116 = internal global ptr @nand_scan_tail._entry.114, section ".printk_index", align 4
@rawnand_ops = internal constant { %struct.nand_ops, [20 x i8] } { %struct.nand_ops { ptr @rawnand_erase, ptr @rawnand_markbad, ptr @rawnand_isbad }, [20 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"No ECC functions supplied; hardware ECC not possible\0A\00", [42 x i8] zeroinitializer }, align 32
@nand_set_ecc_on_host_ops._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.118, ptr @.str.119, ptr @.str, i32 5673, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"\014nand: Invalid NAND_ECC_PLACEMENT %d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"nand_set_ecc_on_host_ops\00", [39 x i8] zeroinitializer }, align 32
@nand_set_ecc_on_host_ops._entry_ptr = internal global ptr @nand_set_ecc_on_host_ops._entry, section ".printk_index", align 4
@.str.120 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Hamming ECC initialization failed!\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"BCH ECC initialization failed!\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Unsupported ECC algorithm!\0A\00", [36 x i8] zeroinitializer }, align 32
@nand_do_write_ops._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.123, ptr @.str.124, ptr @.str, i32 4270, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"\015nand: %s: attempt to write non page aligned data\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nand_do_write_ops\00", [46 x i8] zeroinitializer }, align 32
@nand_do_write_ops._entry_ptr = internal global ptr @nand_do_write_ops._entry, section ".printk_index", align 4
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@__pv_phys_pfn_offset = external dso_local local_unnamed_addr global i32, align 4
@nand_do_write_ops.__UNIQUE_ID_ddebug295 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.124, ptr @.str, ptr @.str.125, i8 4, i8 57, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.125 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s: using write bounce buffer for buf@%p\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"nand: %s: using write bounce buffer for buf@%p\0A\00", [48 x i8] zeroinitializer }, align 32
@nand_do_read_oob.__UNIQUE_ID_ddebug290 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.127, ptr @.str, ptr @.str.128, i8 3, i8 -88, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.127 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nand_do_read_oob\00", [47 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s: from = 0x%08Lx, len = %i\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"nand: %s: from = 0x%08Lx, len = %i\0A\00", [60 x i8] zeroinitializer }, align 32
@nand_do_read_ops.__UNIQUE_ID_ddebug277 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.130, ptr @.str, ptr @.str.131, i8 3, i8 94, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.130 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nand_do_read_ops\00", [47 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"%s: using read bounce buffer for buf@%p\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"nand: %s: using read bounce buffer for buf@%p\0A\00", [49 x i8] zeroinitializer }, align 32
@nand_setup_read_retry.__UNIQUE_ID_ddebug274 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.133, ptr @.str, ptr @.str.134, i8 3, i8 74, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.133 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"nand_setup_read_retry\00", [42 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"setting READ RETRY mode %d\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"nand: setting READ RETRY mode %d\0A\00", [62 x i8] zeroinitializer }, align 32
@nand_sync.__UNIQUE_ID_ddebug303 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.1, ptr @.str.136, ptr @.str, ptr @.str.137, i8 4, i8 118, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.136 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nand_sync\00", [22 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"%s: called\0A\00", [20 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nand: %s: called\0A\00", [46 x i8] zeroinitializer }, align 32
@nand_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.139, ptr @.str.140, ptr @.str, i32 4660, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"\013nand: %s called for a chip which is not in suspended state\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"nand_resume\00", [20 x i8] zeroinitializer }, align 32
@nand_resume._entry_ptr = internal global ptr @nand_resume._entry, section ".printk_index", align 4
@.str.141 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"secure-regions\00", [17 x i8] zeroinitializer }, align 32
@switch.table.nand_scan_with_ids = internal constant { [8 x i32], [32 x i8] } { [8 x i32] [i32 1, i32 2, i32 1, i32 2, i32 1, i32 1, i32 1, i32 2], [32 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.142 = internal global [6 x i64] [i64 4, i64 32, i64 8, i64 16, i64 64, i64 128]
@__sancov_gen_cov_switch_values.143 = internal global [6 x i64] [i64 4, i64 32, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.144 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.145 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.146 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.147 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.148 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.149 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.150 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.151 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@___asan_gen_.152 = private unnamed_addr constant [21 x i8] c"dist3_pairing_scheme\00", align 1
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 94, i32 33 }
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 178, i32 6 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 2419, i32 4 }
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4472, i32 2 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4500, i32 3 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4513, i32 4 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4530, i32 4 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5343, i32 35 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5345, i32 3 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5354, i32 44 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 429, i32 2 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 436, i32 3 }
@___asan_gen_.225 = private unnamed_addr constant [36 x i8] c"../drivers/mtd/nand/raw/internals.h\00", align 1
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.225, i32 139, i32 6 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 2324, i32 17 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 2327, i32 2 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 2333, i32 13 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1030, i32 3 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1034, i32 3 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1041, i32 3 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1047, i32 3 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1053, i32 3 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 821, i32 3 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 890, i32 3 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 893, i32 3 }
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 106, i32 3 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 112, i32 3 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 304, i32 3 }
@___asan_gen_.339 = private unnamed_addr constant [27 x i8] c"../include/linux/of_gpio.h\00", align 1
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.339, i32 104, i32 50 }
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5794, i32 5 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5805, i32 2 }
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5439, i32 2 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5464, i32 4 }
@___asan_gen_.376 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5496, i32 3 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5378, i32 32 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5281, i32 31 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5295, i32 35 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5193, i32 22 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5194, i32 22 }
@___asan_gen_.394 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5195, i32 25 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5196, i32 20 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5197, i32 28 }
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5198, i32 23 }
@___asan_gen_.406 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5204, i32 36 }
@___asan_gen_.407 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.412 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1105, i32 2 }
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5044, i32 3 }
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5130, i32 3 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5132, i32 3 }
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5134, i32 3 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5165, i32 2 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5167, i32 2 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5169, i32 2 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4987, i32 55 }
@___asan_gen_.462 = private unnamed_addr constant [31 x i8] c"../include/linux/mtd/rawnand.h\00", align 1
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.462, i32 1444, i32 2 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6120, i32 4 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6140, i32 5 }
@___asan_gen_.478 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6146, i32 3 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6160, i32 4 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6171, i32 3 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6184, i32 3 }
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6215, i32 3 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6226, i32 3 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6243, i32 3 }
@___asan_gen_.503 = private unnamed_addr constant [12 x i8] c"rawnand_ops\00", align 1
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 6043, i32 30 }
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5653, i32 4 }
@___asan_gen_.517 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5672, i32 3 }
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5713, i32 4 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5746, i32 4 }
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5752, i32 3 }
@___asan_gen_.535 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4269, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4323, i32 4 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 3746, i32 2 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 3450, i32 5 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 3368, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4570, i32 2 }
@___asan_gen_.578 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 4659, i32 3 }
@___asan_gen_.587 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.588 = private constant [36 x i8] c"../drivers/mtd/nand/raw/nand_base.c\00", align 1
@___asan_gen_.589 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.588, i32 5305, i32 30 }
@___asan_gen_.590 = private unnamed_addr constant [32 x i8] c"switch.table.nand_scan_with_ids\00", align 1
@llvm.compiler.used = appending global [216 x ptr] [ptr @__UNIQUE_ID_author307, ptr @__UNIQUE_ID_author308, ptr @__UNIQUE_ID_description309, ptr @__UNIQUE_ID_file305, ptr @__UNIQUE_ID_license306, ptr @__ksymtab_nand_change_read_column_op, ptr @__ksymtab_nand_change_write_column_op, ptr @__ksymtab_nand_check_erased_ecc_chunk, ptr @__ksymtab_nand_cleanup, ptr @__ksymtab_nand_decode_ext_id, ptr @__ksymtab_nand_deselect_target, ptr @__ksymtab_nand_ecc_choose_conf, ptr @__ksymtab_nand_erase_op, ptr @__ksymtab_nand_extract_bits, ptr @__ksymtab_nand_gpio_waitrdy, ptr @__ksymtab_nand_monolithic_read_page_raw, ptr @__ksymtab_nand_monolithic_write_page_raw, ptr @__ksymtab_nand_op_parser_exec_op, ptr @__ksymtab_nand_prog_page_begin_op, ptr @__ksymtab_nand_prog_page_end_op, ptr @__ksymtab_nand_prog_page_op, ptr @__ksymtab_nand_read_data_op, ptr @__ksymtab_nand_read_oob_op, ptr @__ksymtab_nand_read_oob_std, ptr @__ksymtab_nand_read_page_hwecc_oob_first, ptr @__ksymtab_nand_read_page_op, ptr @__ksymtab_nand_read_page_raw, ptr @__ksymtab_nand_readid_op, ptr @__ksymtab_nand_reset, ptr @__ksymtab_nand_reset_op, ptr @__ksymtab_nand_scan_with_ids, ptr @__ksymtab_nand_select_target, ptr @__ksymtab_nand_soft_waitrdy, ptr @__ksymtab_nand_status_op, ptr @__ksymtab_nand_subop_get_addr_start_off, ptr @__ksymtab_nand_subop_get_data_len, ptr @__ksymtab_nand_subop_get_data_start_off, ptr @__ksymtab_nand_subop_get_num_addr_cyc, ptr @__ksymtab_nand_write_data_op, ptr @__ksymtab_nand_write_oob_std, ptr @__ksymtab_nand_write_page_raw, ptr @__ksymtab_rawnand_dt_parse_gpio_cs, ptr @__ksymtab_rawnand_sw_bch_cleanup, ptr @__ksymtab_rawnand_sw_bch_correct, ptr @__ksymtab_rawnand_sw_bch_init, ptr @__ksymtab_rawnand_sw_hamming_calculate, ptr @__ksymtab_rawnand_sw_hamming_cleanup, ptr @__ksymtab_rawnand_sw_hamming_correct, ptr @__ksymtab_rawnand_sw_hamming_init, ptr @nand_check_ecc_caps._entry, ptr @nand_check_ecc_caps._entry.61, ptr @nand_check_ecc_caps._entry_ptr, ptr @nand_check_ecc_caps._entry_ptr.63, ptr @nand_detect._entry, ptr @nand_detect._entry.83, ptr @nand_detect._entry.86, ptr @nand_detect._entry.89, ptr @nand_detect._entry.92, ptr @nand_detect._entry.94, ptr @nand_detect._entry.96, ptr @nand_detect._entry_ptr, ptr @nand_detect._entry_ptr.85, ptr @nand_detect._entry_ptr.88, ptr @nand_detect._entry_ptr.91, ptr @nand_detect._entry_ptr.93, ptr @nand_detect._entry_ptr.95, ptr @nand_detect._entry_ptr.98, ptr @nand_do_write_ops._entry, ptr @nand_do_write_ops._entry_ptr, ptr @nand_erase_nand._entry, ptr @nand_erase_nand._entry_ptr, ptr @nand_reset_interface._entry, ptr @nand_reset_interface._entry_ptr, ptr @nand_resume._entry, ptr @nand_resume._entry_ptr, ptr @nand_scan_ident._entry, ptr @nand_scan_ident._entry.67, ptr @nand_scan_ident._entry_ptr, ptr @nand_scan_ident._entry_ptr.69, ptr @nand_scan_tail._entry, ptr @nand_scan_tail._entry.108, ptr @nand_scan_tail._entry.114, ptr @nand_scan_tail._entry_ptr, ptr @nand_scan_tail._entry_ptr.110, ptr @nand_scan_tail._entry_ptr.116, ptr @nand_set_ecc_on_host_ops._entry, ptr @nand_set_ecc_on_host_ops._entry_ptr, ptr @nand_setup_interface._entry, ptr @nand_setup_interface._entry_ptr, ptr @dist3_pairing_scheme, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.62, ptr @nand_scan_ident.__key, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.68, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @nand_controller_init.__key, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.84, ptr @.str.87, ptr @.str.90, ptr @.str.97, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.109, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.115, ptr @rawnand_ops, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @switch.table.nand_scan_with_ids], section "llvm.metadata"
@0 = internal global [147 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @dist3_pairing_scheme to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_erase_nand._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 57, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_reset_interface._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_setup_interface._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_check_ecc_caps._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_check_ecc_caps._entry.61 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_ident.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_ident._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_ident._entry.67 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_controller_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.83 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.86 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.89 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_detect._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_tail._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_tail._entry.108 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_scan_tail._entry.114 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rawnand_ops to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_set_ecc_on_host_ops._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_do_write_ops._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nand_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.nand_scan_with_ids to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nand_pairing_dist3_get_info(ptr nocapture noundef readonly %mtd, i32 noundef %page, ptr nocapture noundef writeonly %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %page)
  %tobool.not = icmp ne i32 %page, 0
  %and = and i32 %page, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  %or.cond = and i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %if.else, label %if.then2

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add = add i32 %page, 1
  br label %if.end9

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %erasesize = getelementptr inbounds %struct.mtd_info, ptr %mtd, i32 0, i32 3
  %0 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %erasesize, align 8
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %mtd, i32 0, i32 4
  %2 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %writesize, align 4
  %div = udiv i32 %1, %3
  %sub = add i32 %div, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %page)
  %cmp = icmp eq i32 %sub, %page
  %spec.store.select.neg = select i1 %cmp, i32 -2, i32 -3
  %add5 = add nuw i32 %page, 1
  %sub6 = add i32 %add5, %spec.store.select.neg
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then2
  %.sink = phi i32 [ 1, %if.else ], [ 0, %if.then2 ]
  %storemerge.in = phi i32 [ %sub6, %if.else ], [ %add, %if.then2 ]
  %4 = getelementptr inbounds %struct.mtd_pairing_info, ptr %info, i32 0, i32 1
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %.sink, ptr %4, align 4
  %storemerge = sdiv i32 %storemerge.in, 2
  %6 = ptrtoint ptr %info to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %storemerge, ptr %info, align 4
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nand_pairing_dist3_get_wunit(ptr nocapture noundef readonly %mtd, ptr nocapture noundef readonly %info) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %info, align 4
  %group = getelementptr inbounds %struct.mtd_pairing_info, ptr %info, i32 0, i32 1
  %2 = ptrtoint ptr %group to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %group, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool3.not = icmp eq i32 %1, 0
  %or.cond = select i1 %tobool.not, i1 %tobool3.not, i1 false
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mul = shl i32 %1, 1
  %erasesize = getelementptr inbounds %struct.mtd_info, ptr %mtd, i32 0, i32 3
  %4 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %erasesize, align 8
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %mtd, i32 0, i32 4
  %6 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %writesize, align 4
  %div = udiv i32 %5, %7
  %sub = add i32 %div, -1
  %div139 = lshr i32 %sub, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %div139)
  %cmp = icmp eq i32 %1, %div139
  %spec.select = select i1 %tobool.not, i32 2, i32 1
  %spec.select41 = select i1 %cmp, i32 %spec.select, i32 2
  %dec = add i32 %mul, -1
  %add = add i32 %spec.select41, %mul
  %spec.select40 = select i1 %tobool3.not, i32 0, i32 %add
  %page.0 = select i1 %tobool.not, i32 %dec, i32 %spec.select40
  call void @__sanitizer_cov_trace_cmp4(i32 %page.0, i32 %div)
  %cmp22.not = icmp ult i32 %page.0, %div
  %page.0. = select i1 %cmp22.not, i32 %page.0, i32 -22
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %page.0., %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nand_extract_bits(ptr nocapture noundef %dst, i32 noundef %dst_off, ptr nocapture noundef readonly %src, i32 noundef %src_off, i32 noundef %nbits) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nbits)
  %tobool.not73 = icmp eq i32 %nbits, 0
  br i1 %tobool.not73, label %entry.while.end_crit_edge, label %while.body.preheader

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.preheader:                             ; preds = %entry
  %rem3 = and i32 %src_off, 7
  %div172 = lshr i32 %src_off, 3
  %add.ptr2 = getelementptr i8, ptr %src, i32 %div172
  %rem = and i32 %dst_off, 7
  %div71 = lshr i32 %dst_off, 3
  %add.ptr = getelementptr i8, ptr %dst, i32 %div71
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.preheader
  %dst.addr.078 = phi ptr [ %dst.addr.1, %while.body.while.body_crit_edge ], [ %add.ptr, %while.body.preheader ]
  %dst_off.addr.077 = phi i32 [ %dst_off.addr.1, %while.body.while.body_crit_edge ], [ %rem, %while.body.preheader ]
  %nbits.addr.076 = phi i32 [ %sub41, %while.body.while.body_crit_edge ], [ %nbits, %while.body.preheader ]
  %src_off.addr.075 = phi i32 [ %src_off.addr.1, %while.body.while.body_crit_edge ], [ %rem3, %while.body.preheader ]
  %src.addr.074 = phi ptr [ %src.addr.1, %while.body.while.body_crit_edge ], [ %add.ptr2, %while.body.preheader ]
  %sub = sub i32 8, %dst_off.addr.077
  %sub4 = sub i32 8, %src_off.addr.075
  %0 = tail call i32 @llvm.umin.i32(i32 %sub, i32 %sub4)
  %1 = tail call i32 @llvm.umin.i32(i32 %0, i32 %nbits.addr.076)
  %2 = ptrtoint ptr %src.addr.074 to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %src.addr.074, align 1
  %conv = zext i8 %3 to i32
  %shr = lshr i32 %conv, %src_off.addr.075
  %sub13 = sub i32 32, %1
  %shr14 = lshr i32 -1, %sub13
  %and15 = and i32 %shr, %shr14
  %shl.neg = shl nsw i32 -1, %dst_off.addr.077
  %4 = add i32 %dst_off.addr.077, %1
  %sub20 = sub i32 32, %4
  %shr21 = lshr i32 -1, %sub20
  %and22 = and i32 %shr21, %shl.neg
  %5 = ptrtoint ptr %dst.addr.078 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %dst.addr.078, align 1
  %7 = trunc i32 %and22 to i8
  %8 = xor i8 %7, -1
  %conv26 = and i8 %6, %8
  %shl27 = shl i32 %and15, %dst_off.addr.077
  %9 = trunc i32 %shl27 to i8
  %conv29 = or i8 %conv26, %9
  store i8 %conv29, ptr %dst.addr.078, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %4)
  %cmp31 = icmp ugt i32 %4, 7
  %sub33 = add i32 %4, -8
  %dst_off.addr.1 = select i1 %cmp31, i32 %sub33, i32 %4
  %dst.addr.1.idx = zext i1 %cmp31 to i32
  %dst.addr.1 = getelementptr i8, ptr %dst.addr.078, i32 %dst.addr.1.idx
  %add34 = add i32 %1, %src_off.addr.075
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %add34)
  %cmp35 = icmp ugt i32 %add34, 7
  %sub39 = add i32 %add34, -8
  %src.addr.1.idx = zext i1 %cmp35 to i32
  %src.addr.1 = getelementptr i8, ptr %src.addr.074, i32 %src.addr.1.idx
  %src_off.addr.1 = select i1 %cmp35, i32 %sub39, i32 %add34
  %sub41 = sub i32 %nbits.addr.076, %1
  %tobool.not = icmp eq i32 %sub41, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nand_select_target(ptr noundef %chip, i32 noundef %cs) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ntargets.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %0 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ntargets.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %cs)
  %cmp = icmp ult i32 %1, %cs
  br i1 %cmp, label %do.end, label %if.end21.critedge, !prof !378

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %if.end26

if.end21.critedge:                                ; preds = %entry
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %2 = ptrtoint ptr %cur_cs to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %cs, ptr %cur_cs, align 4
  %select_chip = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %3 = ptrtoint ptr %select_chip to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %select_chip, align 8
  %tobool22.not = icmp eq ptr %4, null
  br i1 %tobool22.not, label %if.end21.critedge.if.end26_crit_edge, label %if.then23

if.end21.critedge.if.end26_crit_edge:             ; preds = %if.end21.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then23:                                        ; preds = %if.end21.critedge
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %4(ptr noundef %chip, i32 noundef %cs) #14
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end21.critedge.if.end26_crit_edge, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nand_deselect_target(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %select_chip = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %0 = ptrtoint ptr %select_chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %select_chip, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %1(ptr noundef %chip, i32 noundef -1) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %2 = ptrtoint ptr %cur_cs to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %cur_cs, align 4
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @nand_bbm_get_next_page(ptr nocapture noundef readonly %chip, i32 noundef %page) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %erasesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %0 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %erasesize, align 8
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %2 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %writesize, align 4
  %sub = sub i32 %1, %3
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %4 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %page_shift, align 4
  %shr = lshr i32 %sub, %5
  %pagemask = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %6 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pagemask, align 8
  %and = and i32 %shr, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %page)
  %cmp = icmp eq i32 %page, 0
  br i1 %cmp, label %land.lhs.true, label %if.end8

land.lhs.true:                                    ; preds = %entry
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %8 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %options, align 8
  %and1 = and i32 %9, 117440512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp ne i32 %and1, 0
  %and5 = and i32 %9, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  %or.cond = and i1 %tobool.not, %tobool6.not
  br i1 %or.cond, label %land.lhs.true.land.lhs.true10_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true.land.lhs.true10_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true10

if.end8:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %page)
  %cmp9 = icmp slt i32 %page, 2
  br i1 %cmp9, label %if.end8.land.lhs.true10_crit_edge, label %if.end8.if.end15_crit_edge

if.end8.if.end15_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.end8.land.lhs.true10_crit_edge:                ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true10

land.lhs.true10:                                  ; preds = %if.end8.land.lhs.true10_crit_edge, %land.lhs.true.land.lhs.true10_crit_edge
  %options11 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %10 = ptrtoint ptr %options11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %options11, align 8
  %and12 = and i32 %11, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %land.lhs.true10.if.end15_crit_edge, label %land.lhs.true10.cleanup_crit_edge

land.lhs.true10.cleanup_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true10.if.end15_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.end15:                                         ; preds = %land.lhs.true10.if.end15_crit_edge, %if.end8.if.end15_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %page)
  %cmp16.not = icmp slt i32 %and, %page
  br i1 %cmp16.not, label %if.end15.if.end22_crit_edge, label %land.lhs.true17

if.end15.if.end22_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

land.lhs.true17:                                  ; preds = %if.end15
  %options18 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %12 = ptrtoint ptr %options18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %options18, align 8
  %and19 = and i32 %13, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  br i1 %tobool20.not, label %land.lhs.true17.if.end22_crit_edge, label %land.lhs.true17.cleanup_crit_edge

land.lhs.true17.cleanup_crit_edge:                ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true17.if.end22_crit_edge:               ; preds = %land.lhs.true17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.end22:                                         ; preds = %land.lhs.true17.if.end22_crit_edge, %if.end15.if.end22_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %land.lhs.true17.cleanup_crit_edge, %land.lhs.true10.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %if.end22 ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 1, %land.lhs.true10.cleanup_crit_edge ], [ %and, %land.lhs.true17.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_markbad_bbm(ptr noundef %chip, i64 noundef %ofs) local_unnamed_addr #4 align 64 {
entry:
  %ops.i = alloca %struct.mtd_oob_ops, align 4
  %buf.i = alloca [2 x i8], align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %block_markbad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 12
  %0 = ptrtoint ptr %block_markbad to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %block_markbad, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call = tail call i32 %1(ptr noundef %chip, i64 noundef %ofs) #14
  br label %return

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ops.i) #14
  %2 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops.i, i32 0, i32 1
  %3 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops.i, i32 0, i32 3
  %4 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops.i, i32 0, i32 5
  %5 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops.i, i32 0, i32 7
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %buf.i) #14
  %6 = ptrtoint ptr %buf.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 0, ptr %buf.i, align 2
  %7 = getelementptr inbounds i8, ptr %ops.i, i32 8
  %8 = call ptr @memset(ptr %7, i32 0, i32 20)
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %buf.i, ptr %5, align 4
  %badblockpos.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 11
  %10 = ptrtoint ptr %badblockpos.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %badblockpos.i, align 4
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %4, align 4
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %13 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %options.i, align 8
  %and.i = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %if.then.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and2.i = and i32 %11, -2
  %15 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %and2.i, ptr %4, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.end.if.end.i_crit_edge
  %storemerge.i = phi i32 [ 2, %if.then.i ], [ 1, %if.end.if.end.i_crit_edge ]
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %storemerge.i, ptr %3, align 4
  %17 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %storemerge.i, ptr %2, align 4
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %ops.i, align 4
  %erasesize.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %19 = ptrtoint ptr %erasesize.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %erasesize.i.i, align 8
  %writesize.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %21 = ptrtoint ptr %writesize.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %writesize.i.i, align 4
  %sub.i.i = sub i32 %20, %22
  %page_shift.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %23 = ptrtoint ptr %page_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %page_shift.i.i, align 4
  %shr.i.i = lshr i32 %sub.i.i, %24
  %pagemask.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %25 = ptrtoint ptr %pagemask.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pagemask.i.i, align 8
  %and.i.i = and i32 %shr.i.i, %26
  %and1.i.i = and i32 %14, 117440512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i.i = icmp ne i32 %and1.i.i, 0
  %and5.i.i = and i32 %14, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  %or.cond.i.i = and i1 %tobool.not.i.i, %tobool6.not.i.i
  br i1 %or.cond.i.i, label %land.lhs.true10.i.i, label %if.end.i.if.end8.i.i.preheader_crit_edge

if.end.i.if.end8.i.i.preheader_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.preheader

land.lhs.true10.i.i:                              ; preds = %if.end.i
  %and12.i.i = and i32 %14, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i)
  %tobool13.not.i.i = icmp eq i32 %and12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end15.i.i, label %land.lhs.true10.i.i.if.end8.i.i.preheader_crit_edge

land.lhs.true10.i.i.if.end8.i.i.preheader_crit_edge: ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.preheader

if.end15.i.i:                                     ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp16.not.i.i = icmp slt i32 %and.i.i, 0
  %and19.i.i = and i32 %14, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i)
  %tobool20.not.i.i = icmp eq i32 %and19.i.i, 0
  %or.cond.i = select i1 %cmp16.not.i.i, i1 true, i1 %tobool20.not.i.i
  br i1 %or.cond.i, label %if.end15.i.i.nand_default_block_markbad.exit_crit_edge, label %if.end15.i.i.if.end8.i.i.preheader_crit_edge

if.end15.i.i.if.end8.i.i.preheader_crit_edge:     ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.preheader

if.end15.i.i.nand_default_block_markbad.exit_crit_edge: ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_default_block_markbad.exit

if.end8.i.i.preheader:                            ; preds = %if.end15.i.i.if.end8.i.i.preheader_crit_edge, %land.lhs.true10.i.i.if.end8.i.i.preheader_crit_edge, %if.end.i.if.end8.i.i.preheader_crit_edge
  %page_offset.050.i.ph = phi i32 [ 0, %if.end.i.if.end8.i.i.preheader_crit_edge ], [ 1, %land.lhs.true10.i.i.if.end8.i.i.preheader_crit_edge ], [ %and.i.i, %if.end15.i.i.if.end8.i.i.preheader_crit_edge ]
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %nand_bbm_get_next_page.exit46.i.if.end8.i.i_crit_edge, %if.end8.i.i.preheader
  %page_offset.050.i = phi i32 [ %retval.0.i45.i, %nand_bbm_get_next_page.exit46.i.if.end8.i.i_crit_edge ], [ %page_offset.050.i.ph, %if.end8.i.i.preheader ]
  %ret.049.i = phi i32 [ %spec.select.i, %nand_bbm_get_next_page.exit46.i.if.end8.i.i_crit_edge ], [ 0, %if.end8.i.i.preheader ]
  %27 = ptrtoint ptr %writesize.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %writesize.i.i, align 4
  %mul.i = mul i32 %28, %page_offset.050.i
  %conv.i = zext i32 %mul.i to i64
  %add.i = add i64 %conv.i, %ofs
  %call6.i = call fastcc i32 @nand_do_write_oob(ptr noundef %chip, i64 noundef %add.i, ptr noundef nonnull %ops.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.049.i)
  %tobool7.not.i = icmp eq i32 %ret.049.i, 0
  %spec.select.i = select i1 %tobool7.not.i, i32 %call6.i, i32 %ret.049.i
  %add10.i = add nuw i32 %page_offset.050.i, 1
  %29 = ptrtoint ptr %erasesize.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %erasesize.i.i, align 8
  %31 = ptrtoint ptr %writesize.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %writesize.i.i, align 4
  %sub.i23.i = sub i32 %30, %32
  %33 = ptrtoint ptr %page_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %page_shift.i.i, align 4
  %shr.i25.i = lshr i32 %sub.i23.i, %34
  %35 = ptrtoint ptr %pagemask.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pagemask.i.i, align 8
  %and.i27.i = and i32 %shr.i25.i, %36
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add10.i)
  %cmp9.i.i = icmp slt i32 %add10.i, 2
  br i1 %cmp9.i.i, label %land.lhs.true10.i37.i, label %if.end8.i.i.if.end15.i39.i_crit_edge

if.end8.i.i.if.end15.i39.i_crit_edge:             ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i39.i

land.lhs.true10.i37.i:                            ; preds = %if.end8.i.i
  %37 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %options.i, align 8
  %and12.i35.i = and i32 %38, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i35.i)
  %tobool13.not.i36.i = icmp eq i32 %and12.i35.i, 0
  br i1 %tobool13.not.i36.i, label %land.lhs.true10.i37.i.if.end15.i39.i_crit_edge, label %land.lhs.true10.i37.i.nand_bbm_get_next_page.exit46.i_crit_edge

land.lhs.true10.i37.i.nand_bbm_get_next_page.exit46.i_crit_edge: ; preds = %land.lhs.true10.i37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_bbm_get_next_page.exit46.i

land.lhs.true10.i37.i.if.end15.i39.i_crit_edge:   ; preds = %land.lhs.true10.i37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i39.i

if.end15.i39.i:                                   ; preds = %land.lhs.true10.i37.i.if.end15.i39.i_crit_edge, %if.end8.i.i.if.end15.i39.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i27.i, i32 %add10.i)
  %cmp16.not.i38.i = icmp slt i32 %and.i27.i, %add10.i
  br i1 %cmp16.not.i38.i, label %if.end15.i39.i.nand_default_block_markbad.exit_crit_edge, label %land.lhs.true17.i43.i

if.end15.i39.i.nand_default_block_markbad.exit_crit_edge: ; preds = %if.end15.i39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_default_block_markbad.exit

land.lhs.true17.i43.i:                            ; preds = %if.end15.i39.i
  %39 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %options.i, align 8
  %and19.i41.i = and i32 %40, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i41.i)
  %tobool20.not.i42.i = icmp eq i32 %and19.i41.i, 0
  br i1 %tobool20.not.i42.i, label %land.lhs.true17.i43.i.nand_default_block_markbad.exit_crit_edge, label %land.lhs.true17.i43.i.nand_bbm_get_next_page.exit46.i_crit_edge

land.lhs.true17.i43.i.nand_bbm_get_next_page.exit46.i_crit_edge: ; preds = %land.lhs.true17.i43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_bbm_get_next_page.exit46.i

land.lhs.true17.i43.i.nand_default_block_markbad.exit_crit_edge: ; preds = %land.lhs.true17.i43.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_default_block_markbad.exit

nand_bbm_get_next_page.exit46.i:                  ; preds = %land.lhs.true17.i43.i.nand_bbm_get_next_page.exit46.i_crit_edge, %land.lhs.true10.i37.i.nand_bbm_get_next_page.exit46.i_crit_edge
  %retval.0.i45.i = phi i32 [ 1, %land.lhs.true10.i37.i.nand_bbm_get_next_page.exit46.i_crit_edge ], [ %and.i27.i, %land.lhs.true17.i43.i.nand_bbm_get_next_page.exit46.i_crit_edge ]
  %cmp.i = icmp sgt i32 %retval.0.i45.i, -1
  br i1 %cmp.i, label %nand_bbm_get_next_page.exit46.i.if.end8.i.i_crit_edge, label %nand_bbm_get_next_page.exit46.i.nand_default_block_markbad.exit_crit_edge

nand_bbm_get_next_page.exit46.i.nand_default_block_markbad.exit_crit_edge: ; preds = %nand_bbm_get_next_page.exit46.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_default_block_markbad.exit

nand_bbm_get_next_page.exit46.i.if.end8.i.i_crit_edge: ; preds = %nand_bbm_get_next_page.exit46.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

nand_default_block_markbad.exit:                  ; preds = %nand_bbm_get_next_page.exit46.i.nand_default_block_markbad.exit_crit_edge, %land.lhs.true17.i43.i.nand_default_block_markbad.exit_crit_edge, %if.end15.i39.i.nand_default_block_markbad.exit_crit_edge, %if.end15.i.i.nand_default_block_markbad.exit_crit_edge
  %ret.0.lcssa.i = phi i32 [ 0, %if.end15.i.i.nand_default_block_markbad.exit_crit_edge ], [ %spec.select.i, %nand_bbm_get_next_page.exit46.i.nand_default_block_markbad.exit_crit_edge ], [ %spec.select.i, %land.lhs.true17.i43.i.nand_default_block_markbad.exit_crit_edge ], [ %spec.select.i, %if.end15.i39.i.nand_default_block_markbad.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %buf.i) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ops.i) #14
  br label %return

return:                                           ; preds = %nand_default_block_markbad.exit, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %ret.0.lcssa.i, %nand_default_block_markbad.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_soft_waitrdy(ptr noundef %chip, i32 noundef %timeout_ms) #4 align 64 {
entry:
  %instrs.i83 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i84 = alloca %struct.nand_operation, align 4
  %instrs.i55 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i56 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  %status = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #14
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %status, align 1
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %1 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %lor.lhs.false.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %4, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %6, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.cleanup_crit_edge, label %cond.false8.i

nand_has_exec_op.exit.cleanup_crit_edge:          ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cond.false8.i:                                    ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %7 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %current_interface_config.i, align 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i48 = icmp eq i32 %10, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %8, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i.i50 = icmp eq i32 %10, 1
  %11 = getelementptr inbounds %struct.nand_interface_config, ptr %8, i32 0, i32 1, i32 1
  %retval.0.i51 = select i1 %cmp.i.i50, ptr %11, ptr inttoptr (i32 -22 to ptr)
  %tWB_max5 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i51, i32 0, i32 31
  %cond.in = select i1 %cmp.i48, ptr %tWB_max, ptr %tWB_max5
  %12 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %12)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %sub.i = add nuw nsw i32 %div, 999
  %div.i = udiv i32 %sub.i, 1000
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %13(i32 noundef %div.i) #14
  %call7 = tail call i32 @nand_status_op(ptr noundef %chip, ptr noundef null)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %if.end9, label %cond.false8.i.cleanup_crit_edge

cond.false8.i.cleanup_crit_edge:                  ; preds = %cond.false8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %cond.false8.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %14 = load volatile i32, ptr @jiffies, align 128
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %timeout_ms) #14
  %add11 = add i32 %call2.i, %14
  %add12.neg = xor i32 %add11, -1
  br label %do.body

do.body:                                          ; preds = %if.end20.do.body_crit_edge, %if.end9
  %call13 = call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef nonnull %status, i32 noundef 1, i1 noundef zeroext true, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end16, label %if.then25.critedge

if.end16:                                         ; preds = %do.body
  %15 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %status, align 1
  %17 = and i8 %16, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool18.not = icmp eq i8 %17, 0
  br i1 %tobool18.not, label %if.end20, label %if.end26.critedge

if.end20:                                         ; preds = %if.end16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %18 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %18(i32 noundef 2147480) #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %19 = load volatile i32, ptr @jiffies, align 128
  %sub21 = add i32 %19, %add12.neg
  %cmp = icmp slt i32 %sub21, 0
  br i1 %cmp, label %if.end20.do.body_crit_edge, label %if.end26.critedge45

if.end20.do.body_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

if.then25.critedge:                               ; preds = %do.body
  %20 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %if.then25.critedge.if.end.i53_crit_edge, label %lor.lhs.false.i.i

if.then25.critedge.if.end.i53_crit_edge:          ; preds = %if.then25.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i53

lor.lhs.false.i.i:                                ; preds = %if.then25.critedge
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %23, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end.i53_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end.i53_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i53

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %23, i32 0, i32 2
  %24 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %25, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end.i53_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i.if.end.i53_crit_edge:     ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i53

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %26 = call ptr @memcpy(ptr %instrs.i, ptr @__const.nand_exit_status_op.instrs, i32 20)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %28 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %29 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cur_cs.i, align 4
  %31 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %op.i, align 4
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %instrs.i, ptr %27, align 4
  %33 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 1, ptr %28, align 4
  %34 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %35, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %36 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %37)
  %cmp.not.i.i = icmp ult i32 %30, %37
  br i1 %cmp.not.i.i, label %if.end24.i.i, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i

if.end24.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i = call i32 %35(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i

nand_exec_op.exit.i:                              ; preds = %if.end24.i.i, %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

if.end.i53:                                       ; preds = %nand_has_exec_op.exit.i.if.end.i53_crit_edge, %lor.lhs.false.i.i.if.end.i53_crit_edge, %if.then25.critedge.if.end.i53_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %38 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %cmdfunc.i, align 8
  call void %39(ptr noundef %chip, i32 noundef 0, i32 noundef -1, i32 noundef -1) #14
  br label %cleanup

if.end26.critedge:                                ; preds = %if.end16
  %40 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i58 = icmp eq ptr %41, null
  br i1 %tobool.not.i.i58, label %if.end26.critedge.if.end.i80_crit_edge, label %lor.lhs.false.i.i61

if.end26.critedge.if.end.i80_crit_edge:           ; preds = %if.end26.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i80

lor.lhs.false.i.i61:                              ; preds = %if.end26.critedge
  %ops.i.i59 = getelementptr inbounds %struct.nand_controller, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %ops.i.i59 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ops.i.i59, align 4
  %tobool2.not.i.i60 = icmp eq ptr %43, null
  br i1 %tobool2.not.i.i60, label %lor.lhs.false.i.i61.if.end.i80_crit_edge, label %nand_has_exec_op.exit.i64

lor.lhs.false.i.i61.if.end.i80_crit_edge:         ; preds = %lor.lhs.false.i.i61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i80

nand_has_exec_op.exit.i64:                        ; preds = %lor.lhs.false.i.i61
  %exec_op.i.i62 = getelementptr inbounds %struct.nand_controller_ops, ptr %43, i32 0, i32 2
  %44 = ptrtoint ptr %exec_op.i.i62 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %exec_op.i.i62, align 4
  %tobool6.not.i.not.i63 = icmp eq ptr %45, null
  br i1 %tobool6.not.i.not.i63, label %nand_has_exec_op.exit.i64.if.end.i80_crit_edge, label %nand_has_exec_op.exit.i.i70

nand_has_exec_op.exit.i64.if.end.i80_crit_edge:   ; preds = %nand_has_exec_op.exit.i64
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i80

nand_has_exec_op.exit.i.i70:                      ; preds = %nand_has_exec_op.exit.i64
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i55) #14
  %46 = call ptr @memcpy(ptr %instrs.i55, ptr @__const.nand_exit_status_op.instrs, i32 20)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i56) #14
  %47 = getelementptr inbounds %struct.nand_operation, ptr %op.i56, i32 0, i32 1
  %48 = getelementptr inbounds %struct.nand_operation, ptr %op.i56, i32 0, i32 2
  %cur_cs.i65 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %49 = ptrtoint ptr %cur_cs.i65 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cur_cs.i65, align 4
  %51 = ptrtoint ptr %op.i56 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %op.i56, align 4
  %52 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %instrs.i55, ptr %47, align 4
  %53 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 1, ptr %48, align 4
  %54 = ptrtoint ptr %exec_op.i.i62 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %exec_op.i.i62, align 4
  %tobool6.not.i.not.i.i69 = icmp eq ptr %55, null
  br i1 %tobool6.not.i.not.i.i69, label %nand_has_exec_op.exit.i.i70.nand_exec_op.exit.i78_crit_edge, label %if.end.i.i73

nand_has_exec_op.exit.i.i70.nand_exec_op.exit.i78_crit_edge: ; preds = %nand_has_exec_op.exit.i.i70
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i78

if.end.i.i73:                                     ; preds = %nand_has_exec_op.exit.i.i70
  %ntargets.i.i.i71 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %56 = ptrtoint ptr %ntargets.i.i.i71 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %ntargets.i.i.i71, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %57)
  %cmp.not.i.i72 = icmp ult i32 %50, %57
  br i1 %cmp.not.i.i72, label %if.end24.i.i76, label %do.end.i.i74, !prof !379

do.end.i.i74:                                     ; preds = %if.end.i.i73
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i78

if.end24.i.i76:                                   ; preds = %if.end.i.i73
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i75 = call i32 %55(ptr noundef %chip, ptr noundef nonnull %op.i56, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i78

nand_exec_op.exit.i78:                            ; preds = %if.end24.i.i76, %do.end.i.i74, %nand_has_exec_op.exit.i.i70.nand_exec_op.exit.i78_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i56) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i55) #14
  br label %if.end26

if.end.i80:                                       ; preds = %nand_has_exec_op.exit.i64.if.end.i80_crit_edge, %lor.lhs.false.i.i61.if.end.i80_crit_edge, %if.end26.critedge.if.end.i80_crit_edge
  %cmdfunc.i79 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %58 = ptrtoint ptr %cmdfunc.i79 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %cmdfunc.i79, align 8
  call void %59(ptr noundef %chip, i32 noundef 0, i32 noundef -1, i32 noundef -1) #14
  br label %if.end26

if.end26.critedge45:                              ; preds = %if.end20
  %60 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i86 = icmp eq ptr %61, null
  br i1 %tobool.not.i.i86, label %if.end26.critedge45.if.end.i108_crit_edge, label %lor.lhs.false.i.i89

if.end26.critedge45.if.end.i108_crit_edge:        ; preds = %if.end26.critedge45
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i108

lor.lhs.false.i.i89:                              ; preds = %if.end26.critedge45
  %ops.i.i87 = getelementptr inbounds %struct.nand_controller, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %ops.i.i87 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %ops.i.i87, align 4
  %tobool2.not.i.i88 = icmp eq ptr %63, null
  br i1 %tobool2.not.i.i88, label %lor.lhs.false.i.i89.if.end.i108_crit_edge, label %nand_has_exec_op.exit.i92

lor.lhs.false.i.i89.if.end.i108_crit_edge:        ; preds = %lor.lhs.false.i.i89
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i108

nand_has_exec_op.exit.i92:                        ; preds = %lor.lhs.false.i.i89
  %exec_op.i.i90 = getelementptr inbounds %struct.nand_controller_ops, ptr %63, i32 0, i32 2
  %64 = ptrtoint ptr %exec_op.i.i90 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %exec_op.i.i90, align 4
  %tobool6.not.i.not.i91 = icmp eq ptr %65, null
  br i1 %tobool6.not.i.not.i91, label %nand_has_exec_op.exit.i92.if.end.i108_crit_edge, label %nand_has_exec_op.exit.i.i98

nand_has_exec_op.exit.i92.if.end.i108_crit_edge:  ; preds = %nand_has_exec_op.exit.i92
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i108

nand_has_exec_op.exit.i.i98:                      ; preds = %nand_has_exec_op.exit.i92
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i83) #14
  %66 = call ptr @memcpy(ptr %instrs.i83, ptr @__const.nand_exit_status_op.instrs, i32 20)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i84) #14
  %67 = getelementptr inbounds %struct.nand_operation, ptr %op.i84, i32 0, i32 1
  %68 = getelementptr inbounds %struct.nand_operation, ptr %op.i84, i32 0, i32 2
  %cur_cs.i93 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %69 = ptrtoint ptr %cur_cs.i93 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %cur_cs.i93, align 4
  %71 = ptrtoint ptr %op.i84 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %op.i84, align 4
  %72 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %72)
  store ptr %instrs.i83, ptr %67, align 4
  %73 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 1, ptr %68, align 4
  %74 = ptrtoint ptr %exec_op.i.i90 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %exec_op.i.i90, align 4
  %tobool6.not.i.not.i.i97 = icmp eq ptr %75, null
  br i1 %tobool6.not.i.not.i.i97, label %nand_has_exec_op.exit.i.i98.nand_exec_op.exit.i106_crit_edge, label %if.end.i.i101

nand_has_exec_op.exit.i.i98.nand_exec_op.exit.i106_crit_edge: ; preds = %nand_has_exec_op.exit.i.i98
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i106

if.end.i.i101:                                    ; preds = %nand_has_exec_op.exit.i.i98
  %ntargets.i.i.i99 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %76 = ptrtoint ptr %ntargets.i.i.i99 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %ntargets.i.i.i99, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %70, i32 %77)
  %cmp.not.i.i100 = icmp ult i32 %70, %77
  br i1 %cmp.not.i.i100, label %if.end24.i.i104, label %do.end.i.i102, !prof !379

do.end.i.i102:                                    ; preds = %if.end.i.i101
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i106

if.end24.i.i104:                                  ; preds = %if.end.i.i101
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i103 = call i32 %75(ptr noundef %chip, ptr noundef nonnull %op.i84, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i106

nand_exec_op.exit.i106:                           ; preds = %if.end24.i.i104, %do.end.i.i102, %nand_has_exec_op.exit.i.i98.nand_exec_op.exit.i106_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i84) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i83) #14
  br label %if.end26

if.end.i108:                                      ; preds = %nand_has_exec_op.exit.i92.if.end.i108_crit_edge, %lor.lhs.false.i.i89.if.end.i108_crit_edge, %if.end26.critedge45.if.end.i108_crit_edge
  %cmdfunc.i107 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %78 = ptrtoint ptr %cmdfunc.i107 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %cmdfunc.i107, align 8
  call void %79(ptr noundef %chip, i32 noundef 0, i32 noundef -1, i32 noundef -1) #14
  br label %if.end26

if.end26:                                         ; preds = %if.end.i108, %nand_exec_op.exit.i106, %if.end.i80, %nand_exec_op.exit.i78
  %80 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %status, align 1
  %82 = and i8 %81, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %82)
  %tobool29.not = icmp eq i8 %82, 0
  %cond30 = select i1 %tobool29.not, i32 -110, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %if.end.i53, %nand_exec_op.exit.i, %cond.false8.i.cleanup_crit_edge, %nand_has_exec_op.exit.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond30, %if.end26 ], [ -524, %nand_has_exec_op.exit.cleanup_crit_edge ], [ %call7, %cond.false8.i.cleanup_crit_edge ], [ %call13, %nand_exec_op.exit.i ], [ %call13, %if.end.i53 ], [ -524, %lor.lhs.false.i.cleanup_crit_edge ], [ -524, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_status_op(ptr noundef %chip, ptr noundef %status) #4 align 64 {
entry:
  %ddrstatus = alloca [2 x i8], align 1
  %instrs = alloca [2 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end34_crit_edge, label %lor.lhs.false.i

entry.if.end34_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end34_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end34_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %5, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end34_crit_edge, label %if.then

nand_has_exec_op.exit.if.end34_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

if.then:                                          ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %6 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ddrstatus) #14
  %8 = ptrtoint ptr %ddrstatus to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -1, ptr %ddrstatus, align 1, !annotation !380
  %9 = getelementptr inbounds [2 x i8], ptr %ddrstatus, i32 0, i32 1
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 -1, ptr %9, align 1, !annotation !380
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %instrs) #14
  %11 = getelementptr inbounds i8, ptr %instrs, i32 4
  %12 = call ptr @memset(ptr %11, i32 255, i32 32)
  %13 = ptrtoint ptr %instrs to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %instrs, align 4
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %14 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 112, ptr %ctx, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 2
  %15 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i = icmp eq i32 %16, 0
  %tADL_min = getelementptr inbounds %struct.nand_interface_config, ptr %7, i32 0, i32 1, i32 1, i32 0, i32 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp.i.i60 = icmp eq i32 %16, 1
  %17 = getelementptr inbounds %struct.nand_interface_config, ptr %7, i32 0, i32 1, i32 1
  %retval.0.i61 = select i1 %cmp.i.i60, ptr %17, ptr inttoptr (i32 -22 to ptr)
  %tADL_min5 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i61, i32 0, i32 6
  %cond.in = select i1 %cmp.i, ptr %tADL_min, ptr %tADL_min5
  %18 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %18)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %19 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %20 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 2, ptr %arrayinit.element, align 4
  %ctx8 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %21 = ptrtoint ptr %ctx8 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %ctx8, align 4
  %buf = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %22 = ptrtoint ptr %buf to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %status, ptr %buf, align 4
  %force_8bit = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 2
  %23 = ptrtoint ptr %force_8bit to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 1, ptr %force_8bit, align 4
  %delay_ns9 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %24 = ptrtoint ptr %delay_ns9 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %delay_ns9, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %25 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %26 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %27 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cur_cs, align 4
  %29 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %op, align 4
  %30 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %instrs, ptr %25, align 4
  %31 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 2, ptr %26, align 4
  %tobool.not = icmp eq ptr %status, null
  br i1 %tobool.not, label %if.then21.critedge, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then
  %32 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %33)
  %cmp.i62 = icmp eq i32 %33, 1
  br i1 %cmp.i62, label %if.then13, label %land.lhs.true.lor.lhs.false.i.i_crit_edge

land.lhs.true.lor.lhs.false.i.i_crit_edge:        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i.i

if.then13:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %ctx8 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ctx8, align 4
  %mul = shl i32 %35, 1
  store i32 %mul, ptr %ctx8, align 4
  %36 = ptrtoint ptr %buf to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %ddrstatus, ptr %buf, align 4
  br label %lor.lhs.false.i.i

if.then21.critedge:                               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 1, ptr %26, align 4
  br label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.then21.critedge, %if.then13, %land.lhs.true.lor.lhs.false.i.i_crit_edge
  %38 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %39, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end33_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end33_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %39, i32 0, i32 2
  %40 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %41, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end33_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.if.end33_crit_edge:       ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %42 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %43)
  %cmp.not.i = icmp ult i32 %28, %43
  br i1 %cmp.not.i, label %nand_exec_op.exit, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %if.end33

nand_exec_op.exit:                                ; preds = %if.end.i
  %call25.i = call i32 %41(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool25.not = icmp ne i32 %call25.i, 0
  %brmerge = or i1 %tobool.not, %tobool25.not
  br i1 %brmerge, label %nand_exec_op.exit.if.end33_crit_edge, label %land.lhs.true28

nand_exec_op.exit.if.end33_crit_edge:             ; preds = %nand_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

land.lhs.true28:                                  ; preds = %nand_exec_op.exit
  %44 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %45)
  %cmp.i65 = icmp eq i32 %45, 1
  br i1 %cmp.i65, label %if.then31, label %land.lhs.true28.if.end33_crit_edge

land.lhs.true28.if.end33_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

if.then31:                                        ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #16
  %46 = ptrtoint ptr %ddrstatus to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %ddrstatus, align 1
  %48 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %47, ptr %status, align 1
  br label %if.end33

if.end33:                                         ; preds = %if.then31, %land.lhs.true28.if.end33_crit_edge, %nand_exec_op.exit.if.end33_crit_edge, %do.end.i, %nand_has_exec_op.exit.i.if.end33_crit_edge, %lor.lhs.false.i.i.if.end33_crit_edge
  %retval.0.i6471 = phi i32 [ %call25.i, %nand_exec_op.exit.if.end33_crit_edge ], [ 0, %if.then31 ], [ 0, %land.lhs.true28.if.end33_crit_edge ], [ -524, %lor.lhs.false.i.i.if.end33_crit_edge ], [ -524, %nand_has_exec_op.exit.i.if.end33_crit_edge ], [ -22, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ddrstatus) #14
  br label %return

if.end34:                                         ; preds = %nand_has_exec_op.exit.if.end34_crit_edge, %lor.lhs.false.i.if.end34_crit_edge, %entry.if.end34_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %49 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %cmdfunc, align 8
  tail call void %50(ptr noundef %chip, i32 noundef 112, i32 noundef -1, i32 noundef -1) #14
  %tobool35.not = icmp eq ptr %status, null
  br i1 %tobool35.not, label %if.end34.return_crit_edge, label %if.then36

if.end34.return_crit_edge:                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then36:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  %read_byte = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 3
  %51 = ptrtoint ptr %read_byte to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %read_byte, align 4
  %call38 = tail call zeroext i8 %52(ptr noundef %chip) #14
  %53 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %call38, ptr %status, align 1
  br label %return

return:                                           ; preds = %if.then36, %if.end34.return_crit_edge, %if.end33
  %retval.0 = phi i32 [ %retval.0.i6471, %if.end33 ], [ 0, %if.then36 ], [ 0, %if.end34.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext %force_8bit, i1 noundef zeroext %check_only) #4 align 64 {
entry:
  %instrs = alloca [1 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %force_8bit to i8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool2.not = icmp eq ptr %buf, null
  %or.cond = or i1 %tobool2.not, %tobool.not
  br i1 %or.cond, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.if.end48_crit_edge, label %lor.lhs.false.i

if.end.if.end48_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

lor.lhs.false.i:                                  ; preds = %if.end
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end48_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end48_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %5, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end48_crit_edge, label %if.then3

nand_has_exec_op.exit.if.end48_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then3:                                         ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %6 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs) #14
  %8 = getelementptr inbounds i8, ptr %instrs, i32 12
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %8, align 4
  %10 = ptrtoint ptr %instrs to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 2, ptr %instrs, align 4
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %11 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %len, ptr %ctx, align 4
  %buf6 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1, i32 0, i32 1
  %12 = ptrtoint ptr %buf6 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %buf, ptr %buf6, align 4
  %force_8bit7 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1, i32 0, i32 2
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 2
  %13 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %delay_ns, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %14 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %15 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %16 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cur_cs, align 4
  %18 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %op, align 4
  %19 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %instrs, ptr %14, align 4
  %20 = ptrtoint ptr %15 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %15, align 4
  %21 = ptrtoint ptr %force_8bit7 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %frombool, ptr %force_8bit7, align 4
  br i1 %force_8bit, label %land.lhs.true, label %if.then3.if.end27_crit_edge

if.then3.if.end27_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

land.lhs.true:                                    ; preds = %if.then3
  %22 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %23)
  %cmp.i = icmp eq i32 %23, 1
  br i1 %cmp.i, label %if.end8.i.i, label %land.lhs.true.if.end27_crit_edge

land.lhs.true.if.end27_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.end8.i.i:                                      ; preds = %land.lhs.true
  %mul = shl i32 %len, 1
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %mul, i32 noundef 3520) #17
  %tobool17.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool17.not, label %if.end8.i.i.cleanup_crit_edge, label %if.end19

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end19:                                         ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ctx, align 4
  %mul23 = shl i32 %25, 1
  store i32 %mul23, ptr %ctx, align 4
  %26 = ptrtoint ptr %buf6 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %call9.i.i, ptr %buf6, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.end19, %land.lhs.true.if.end27_crit_edge, %if.then3.if.end27_crit_edge
  %ddrbuf.0 = phi ptr [ %call9.i.i, %if.end19 ], [ null, %land.lhs.true.if.end27_crit_edge ], [ null, %if.then3.if.end27_crit_edge ]
  %27 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i = icmp eq ptr %28, null
  br i1 %check_only, label %if.then29, label %if.end31

if.then29:                                        ; preds = %if.end27
  br i1 %tobool.not.i.i, label %if.then29.cleanup.sink.split_crit_edge, label %lor.lhs.false.i.i

if.then29.cleanup.sink.split_crit_edge:           ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

lor.lhs.false.i.i:                                ; preds = %if.then29
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %30, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.cleanup.sink.split_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.cleanup.sink.split_crit_edge:   ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %32, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup.sink.split_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.cleanup.sink.split_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = call i32 %32(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext true) #14
  br label %cleanup.sink.split

if.end31:                                         ; preds = %if.end27
  br i1 %tobool.not.i.i, label %if.end31.cleanup.sink.split_crit_edge, label %lor.lhs.false.i.i104

if.end31.cleanup.sink.split_crit_edge:            ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

lor.lhs.false.i.i104:                             ; preds = %if.end31
  %ops.i.i102 = getelementptr inbounds %struct.nand_controller, ptr %28, i32 0, i32 1
  %33 = ptrtoint ptr %ops.i.i102 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ops.i.i102, align 4
  %tobool2.not.i.i103 = icmp eq ptr %34, null
  br i1 %tobool2.not.i.i103, label %lor.lhs.false.i.i104.cleanup.sink.split_crit_edge, label %nand_has_exec_op.exit.i107

lor.lhs.false.i.i104.cleanup.sink.split_crit_edge: ; preds = %lor.lhs.false.i.i104
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

nand_has_exec_op.exit.i107:                       ; preds = %lor.lhs.false.i.i104
  %exec_op.i.i105 = getelementptr inbounds %struct.nand_controller_ops, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %exec_op.i.i105 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %exec_op.i.i105, align 4
  %tobool6.not.i.not.i106 = icmp eq ptr %36, null
  br i1 %tobool6.not.i.not.i106, label %nand_has_exec_op.exit.i107.cleanup.sink.split_crit_edge, label %if.end.i108

nand_has_exec_op.exit.i107.cleanup.sink.split_crit_edge: ; preds = %nand_has_exec_op.exit.i107
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end.i108:                                      ; preds = %nand_has_exec_op.exit.i107
  %37 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %op, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %39 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %38, i32 %40)
  %cmp.not.i = icmp ult i32 %38, %40
  br i1 %cmp.not.i, label %nand_exec_op.exit, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i108
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup.sink.split

nand_exec_op.exit:                                ; preds = %if.end.i108
  %call25.i = call i32 %36(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool33.not = icmp eq i32 %call25.i, 0
  %41 = and i1 %tobool33.not, %force_8bit
  br i1 %41, label %land.lhs.true36, label %nand_exec_op.exit.cleanup.sink.split_crit_edge

nand_exec_op.exit.cleanup.sink.split_crit_edge:   ; preds = %nand_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

land.lhs.true36:                                  ; preds = %nand_exec_op.exit
  %42 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %43)
  %cmp.i111 = icmp eq i32 %43, 1
  br i1 %cmp.i111, label %land.lhs.true36.for.body_crit_edge, label %land.lhs.true36.cleanup.sink.split_crit_edge

land.lhs.true36.cleanup.sink.split_crit_edge:     ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

land.lhs.true36.for.body_crit_edge:               ; preds = %land.lhs.true36
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %land.lhs.true36.for.body_crit_edge
  %i.0123 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %land.lhs.true36.for.body_crit_edge ]
  %mul39 = shl i32 %i.0123, 1
  %arrayidx40 = getelementptr i8, ptr %ddrbuf.0, i32 %mul39
  %44 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx40, align 2
  %arrayidx41 = getelementptr i8, ptr %buf, i32 %i.0123
  %46 = ptrtoint ptr %arrayidx41 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %45, ptr %arrayidx41, align 1
  %inc = add nuw i32 %i.0123, 1
  %exitcond.not = icmp eq i32 %inc, %len
  br i1 %exitcond.not, label %for.body.cleanup.sink.split_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.body.cleanup.sink.split_crit_edge, %land.lhs.true36.cleanup.sink.split_crit_edge, %nand_exec_op.exit.cleanup.sink.split_crit_edge, %do.end.i, %nand_has_exec_op.exit.i107.cleanup.sink.split_crit_edge, %lor.lhs.false.i.i104.cleanup.sink.split_crit_edge, %if.end31.cleanup.sink.split_crit_edge, %if.end.i, %nand_has_exec_op.exit.i.cleanup.sink.split_crit_edge, %lor.lhs.false.i.i.cleanup.sink.split_crit_edge, %if.then29.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ %call1.i, %if.end.i ], [ 0, %nand_has_exec_op.exit.i.cleanup.sink.split_crit_edge ], [ 0, %lor.lhs.false.i.i.cleanup.sink.split_crit_edge ], [ 0, %if.then29.cleanup.sink.split_crit_edge ], [ %call25.i, %nand_exec_op.exit.cleanup.sink.split_crit_edge ], [ 0, %land.lhs.true36.cleanup.sink.split_crit_edge ], [ -524, %if.end31.cleanup.sink.split_crit_edge ], [ -524, %lor.lhs.false.i.i104.cleanup.sink.split_crit_edge ], [ -524, %nand_has_exec_op.exit.i107.cleanup.sink.split_crit_edge ], [ -22, %do.end.i ], [ 0, %for.body.cleanup.sink.split_crit_edge ]
  call void @kfree(ptr noundef %ddrbuf.0) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end8.i.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.end8.i.i.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs) #14
  br label %return

if.end48:                                         ; preds = %nand_has_exec_op.exit.if.end48_crit_edge, %lor.lhs.false.i.if.end48_crit_edge, %if.end.if.end48_crit_edge
  br i1 %check_only, label %if.end48.return_crit_edge, label %if.end51

if.end48.return_crit_edge:                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end51:                                         ; preds = %if.end48
  br i1 %force_8bit, label %for.body57.lr.ph, label %if.else

for.body57.lr.ph:                                 ; preds = %if.end51
  %read_byte = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 3
  br label %for.body57

for.body57:                                       ; preds = %for.body57.for.body57_crit_edge, %for.body57.lr.ph
  %i54.0125 = phi i32 [ 0, %for.body57.lr.ph ], [ %inc61, %for.body57.for.body57_crit_edge ]
  %47 = ptrtoint ptr %read_byte to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %read_byte, align 4
  %call58 = tail call zeroext i8 %48(ptr noundef %chip) #14
  %arrayidx59 = getelementptr i8, ptr %buf, i32 %i54.0125
  %49 = ptrtoint ptr %arrayidx59 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %call58, ptr %arrayidx59, align 1
  %inc61 = add nuw i32 %i54.0125, 1
  %exitcond127.not = icmp eq i32 %inc61, %len
  br i1 %exitcond127.not, label %for.body57.return_crit_edge, label %for.body57.for.body57_crit_edge

for.body57.for.body57_crit_edge:                  ; preds = %for.body57
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body57

for.body57.return_crit_edge:                      ; preds = %for.body57
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.else:                                          ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %50 = ptrtoint ptr %read_buf to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %read_buf, align 8
  tail call void %51(ptr noundef %chip, ptr noundef nonnull %buf, i32 noundef %len) #14
  br label %return

return:                                           ; preds = %if.else, %for.body57.return_crit_edge, %if.end48.return_crit_edge, %cleanup, %entry.return_crit_edge
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ -22, %entry.return_crit_edge ], [ 0, %if.end48.return_crit_edge ], [ 0, %if.else ], [ 0, %for.body57.return_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_exit_status_op(ptr noundef %chip) local_unnamed_addr #4 align 64 {
entry:
  %instrs = alloca [1 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %lor.lhs.false.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end_crit_edge:                 ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %5, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end_crit_edge, label %lor.lhs.false.i.i

nand_has_exec_op.exit.if.end_crit_edge:           ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false.i.i:                                ; preds = %nand_has_exec_op.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs) #14
  %6 = call ptr @memcpy(ptr %instrs, ptr @__const.nand_exit_status_op.instrs, i32 20)
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %7 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %8 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %9 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cur_cs, align 4
  %11 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %op, align 4
  %12 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %instrs, ptr %7, align 4
  %13 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %8, align 4
  %14 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_exec_op.exit_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %17, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %18 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %19)
  %cmp.not.i = icmp ult i32 %10, %19
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit

if.end24.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %17(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit

nand_exec_op.exit:                                ; preds = %if.end24.i, %do.end.i, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge
  %retval.0.i8 = phi i32 [ -22, %do.end.i ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge ], [ -524, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs) #14
  br label %return

if.end:                                           ; preds = %nand_has_exec_op.exit.if.end_crit_edge, %lor.lhs.false.i.if.end_crit_edge, %entry.if.end_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %20 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %cmdfunc, align 8
  tail call void %21(ptr noundef %chip, i32 noundef 0, i32 noundef -1, i32 noundef -1) #14
  br label %return

return:                                           ; preds = %if.end, %nand_exec_op.exit
  %retval.0 = phi i32 [ %retval.0.i8, %nand_exec_op.exit ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_gpio_waitrdy(ptr nocapture readnone %chip, ptr noundef %gpiod, i32 noundef %timeout_ms) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %0 = load volatile i32, ptr @jiffies, align 128
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %timeout_ms) #14
  %add = add i32 %call2.i, %0
  %add1.neg = xor i32 %add, -1
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %entry
  %call2 = tail call i32 @gpiod_get_value_cansleep(ptr noundef %gpiod) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end, label %do.body.return_crit_edge

do.body.return_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %do.body
  tail call void @__might_resched(ptr noundef nonnull @.str, i32 noundef 735, i32 noundef 0) #14
  %call.i = tail call i32 @__cond_resched() #14
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %1 = load volatile i32, ptr @jiffies, align 128
  %sub = add i32 %1, %add1.neg
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.end.do.body_crit_edge, label %do.end

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 @gpiod_get_value_cansleep(ptr noundef %gpiod) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  %cond = select i1 %tobool5.not, i32 -110, i32 0
  br label %return

return:                                           ; preds = %do.end, %do.body.return_crit_edge
  %retval.0 = phi i32 [ %cond, %do.end ], [ 0, %do.body.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gpiod_get_value_cansleep(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @panic_nand_wait(ptr noundef %chip, i32 noundef %timeo) local_unnamed_addr #4 align 64 {
entry:
  %status = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %timeo)
  %cmp23.not = icmp eq i32 %timeo, 0
  br i1 %cmp23.not, label %entry.cleanup14_crit_edge, label %for.body.lr.ph

entry.cleanup14_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

for.body.lr.ph:                                   ; preds = %entry
  %dev_ready = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 9
  br label %for.body

for.body:                                         ; preds = %if.end13.for.body_crit_edge, %for.body.lr.ph
  %i.024 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end13.for.body_crit_edge ]
  %0 = ptrtoint ptr %dev_ready to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_ready, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %call = call i32 %1(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool3.not = icmp eq i32 %call, 0
  br i1 %tobool3.not, label %if.then.if.end13_crit_edge, label %if.then.cleanup14_crit_edge

if.then.cleanup14_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

if.then.if.end13_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.else:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #14
  %2 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %status, align 1, !annotation !380
  %call5 = call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef nonnull %status, i32 noundef 1, i1 noundef zeroext true, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.else.cleanup.thread_crit_edge

if.else.cleanup.thread_crit_edge:                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end8:                                          ; preds = %if.else
  %3 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %status, align 1
  %5 = and i8 %4, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool9.not = icmp eq i8 %5, 0
  br i1 %tobool9.not, label %cleanup, label %if.end8.cleanup.thread_crit_edge

if.end8.cleanup.thread_crit_edge:                 ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end8.cleanup.thread_crit_edge, %if.else.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  br label %cleanup14

cleanup:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  br label %if.end13

if.end13:                                         ; preds = %cleanup, %if.then.if.end13_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %6(i32 noundef 214748000) #14
  %inc = add nuw i32 %i.024, 1
  %exitcond.not = icmp eq i32 %inc, %timeo
  br i1 %exitcond.not, label %if.end13.cleanup14_crit_edge, label %if.end13.for.body_crit_edge

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end13.cleanup14_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup14

cleanup14:                                        ; preds = %if.end13.cleanup14_crit_edge, %cleanup.thread, %if.then.cleanup14_crit_edge, %entry.cleanup14_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_choose_best_sdr_timings(ptr noundef %chip, ptr noundef %iface, ptr noundef %spec_timings) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 4
  %ops1 = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  %4 = ptrtoint ptr %iface to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %iface, align 8
  %tobool.not = icmp eq ptr %spec_timings, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %timings = getelementptr inbounds %struct.nand_interface_config, ptr %iface, i32 0, i32 1
  %5 = getelementptr inbounds %struct.nand_interface_config, ptr %iface, i32 0, i32 1, i32 1
  %6 = call ptr @memcpy(ptr %5, ptr %spec_timings, i32 176)
  %call = tail call i32 @onfi_find_closest_sdr_mode(ptr noundef nonnull %spec_timings) #14
  %7 = ptrtoint ptr %timings to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call, ptr %timings, align 8
  %setup_interface = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  %8 = ptrtoint ptr %setup_interface to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %setup_interface, align 4
  %call4 = tail call i32 %9(ptr noundef %chip, i32 noundef -1, ptr noundef %iface) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then.cleanup.sink.split_crit_edge, label %if.end

if.then.cleanup.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %timings to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %timings, align 8
  br label %if.end15

if.else:                                          ; preds = %entry
  %onfi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 4
  %12 = ptrtoint ptr %onfi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %onfi, align 4
  %tobool9.not = icmp eq ptr %13, null
  br i1 %tobool9.not, label %if.else.for.body.lr.ph_crit_edge, label %if.then10

if.else.for.body.lr.ph_crit_edge:                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph

if.then10:                                        ; preds = %if.else
  %sdr_timing_modes = getelementptr inbounds %struct.onfi_params, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %sdr_timing_modes to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %sdr_timing_modes, align 2
  %conv = zext i16 %15 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool.not.i = icmp eq i16 %15, 0
  %16 = tail call i32 @llvm.ctlz.i32(i32 %conv, i1 true) #14, !range !381
  %sub.i.op = xor i32 %16, 31
  br i1 %tobool.not.i, label %if.then10.cleanup_crit_edge, label %if.then10.if.end15_crit_edge

if.then10.if.end15_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.then10.if.end15_crit_edge, %if.end
  %best_mode.0 = phi i32 [ %11, %if.end ], [ %sub.i.op, %if.then10.if.end15_crit_edge ]
  %ret.0 = phi i32 [ %call4, %if.end ], [ -95, %if.then10.if.end15_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %best_mode.0)
  %cmp50 = icmp sgt i32 %best_mode.0, -1
  br i1 %cmp50, label %if.end15.for.body.lr.ph_crit_edge, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15.for.body.lr.ph_crit_edge:                ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end15.for.body.lr.ph_crit_edge, %if.else.for.body.lr.ph_crit_edge
  %best_mode.056 = phi i32 [ %best_mode.0, %if.end15.for.body.lr.ph_crit_edge ], [ 0, %if.else.for.body.lr.ph_crit_edge ]
  %setup_interface17 = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  br label %for.body

for.cond:                                         ; preds = %for.body
  %dec = add nsw i32 %mode.051, -1
  %cmp = icmp sgt i32 %mode.051, 0
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %mode.051 = phi i32 [ %best_mode.056, %for.body.lr.ph ], [ %dec, %for.cond.for.body_crit_edge ]
  tail call void @onfi_fill_interface_config(ptr noundef %chip, ptr noundef %iface, i32 noundef 0, i32 noundef %mode.051) #14
  %17 = ptrtoint ptr %setup_interface17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %setup_interface17, align 4
  %call18 = tail call i32 %18(ptr noundef %chip, i32 noundef -1, ptr noundef %iface) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %for.body.cleanup.sink.split_crit_edge, label %for.cond

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.body.cleanup.sink.split_crit_edge, %if.then.cleanup.sink.split_crit_edge
  %best_interface_config21 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %19 = ptrtoint ptr %best_interface_config21 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %iface, ptr %best_interface_config21, align 8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.cond.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.then10.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end15.cleanup_crit_edge ], [ -95, %if.then10.cleanup_crit_edge ], [ 0, %cleanup.sink.split ], [ %call18, %for.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @onfi_find_closest_sdr_mode(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @onfi_fill_interface_config(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_choose_best_nvddr_timings(ptr noundef %chip, ptr noundef %iface, ptr noundef %spec_timings) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 4
  %ops1 = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  %4 = ptrtoint ptr %iface to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %iface, align 8
  %tobool.not = icmp eq ptr %spec_timings, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %timings = getelementptr inbounds %struct.nand_interface_config, ptr %iface, i32 0, i32 1
  %5 = getelementptr inbounds %struct.nand_interface_config, ptr %iface, i32 0, i32 1, i32 1
  %6 = call ptr @memcpy(ptr %5, ptr %spec_timings, i32 160)
  %call = tail call i32 @onfi_find_closest_nvddr_mode(ptr noundef nonnull %spec_timings) #14
  %7 = ptrtoint ptr %timings to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call, ptr %timings, align 8
  %setup_interface = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  %8 = ptrtoint ptr %setup_interface to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %setup_interface, align 4
  %call4 = tail call i32 %9(ptr noundef %chip, i32 noundef -1, ptr noundef %iface) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then.cleanup.sink.split_crit_edge, label %if.end

if.then.cleanup.sink.split_crit_edge:             ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %timings to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %timings, align 8
  br label %if.end15

if.else:                                          ; preds = %entry
  %onfi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 4
  %12 = ptrtoint ptr %onfi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %onfi, align 4
  %tobool9.not = icmp eq ptr %13, null
  br i1 %tobool9.not, label %if.else.for.body.lr.ph_crit_edge, label %if.then10

if.else.for.body.lr.ph_crit_edge:                 ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph

if.then10:                                        ; preds = %if.else
  %nvddr_timing_modes = getelementptr inbounds %struct.onfi_params, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %nvddr_timing_modes to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %nvddr_timing_modes, align 4
  %conv = zext i16 %15 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool.not.i = icmp eq i16 %15, 0
  %16 = tail call i32 @llvm.ctlz.i32(i32 %conv, i1 true) #14, !range !381
  %sub.i.op = xor i32 %16, 31
  br i1 %tobool.not.i, label %if.then10.cleanup_crit_edge, label %if.then10.if.end15_crit_edge

if.then10.if.end15_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15:                                         ; preds = %if.then10.if.end15_crit_edge, %if.end
  %best_mode.0 = phi i32 [ %11, %if.end ], [ %sub.i.op, %if.then10.if.end15_crit_edge ]
  %ret.0 = phi i32 [ %call4, %if.end ], [ -95, %if.then10.if.end15_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %best_mode.0)
  %cmp50 = icmp sgt i32 %best_mode.0, -1
  br i1 %cmp50, label %if.end15.for.body.lr.ph_crit_edge, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15.for.body.lr.ph_crit_edge:                ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %if.end15.for.body.lr.ph_crit_edge, %if.else.for.body.lr.ph_crit_edge
  %best_mode.056 = phi i32 [ %best_mode.0, %if.end15.for.body.lr.ph_crit_edge ], [ 0, %if.else.for.body.lr.ph_crit_edge ]
  %setup_interface17 = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  br label %for.body

for.cond:                                         ; preds = %for.body
  %dec = add nsw i32 %mode.051, -1
  %cmp = icmp sgt i32 %mode.051, 0
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.body.lr.ph
  %mode.051 = phi i32 [ %best_mode.056, %for.body.lr.ph ], [ %dec, %for.cond.for.body_crit_edge ]
  tail call void @onfi_fill_interface_config(ptr noundef %chip, ptr noundef %iface, i32 noundef 1, i32 noundef %mode.051) #14
  %17 = ptrtoint ptr %setup_interface17 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %setup_interface17, align 4
  %call18 = tail call i32 %18(ptr noundef %chip, i32 noundef -1, ptr noundef %iface) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %for.body.cleanup.sink.split_crit_edge, label %for.cond

for.body.cleanup.sink.split_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %for.body.cleanup.sink.split_crit_edge, %if.then.cleanup.sink.split_crit_edge
  %best_interface_config21 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %19 = ptrtoint ptr %best_interface_config21 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %iface, ptr %best_interface_config21, align 8
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %for.cond.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.then10.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %if.end15.cleanup_crit_edge ], [ -95, %if.then10.cleanup_crit_edge ], [ 0, %cleanup.sink.split ], [ %call18, %for.cond.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @onfi_find_closest_nvddr_mode(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len) #4 align 64 {
entry:
  %addrs.i41 = alloca [4 x i8], align 4
  %instrs.i42 = alloca [4 x %struct.nand_op_instr], align 4
  %op.i43 = alloca %struct.nand_operation, align 4
  %addrs.i = alloca [5 x i8], align 1
  %instrs.i = alloca [5 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %0 = or i1 %tobool1.not, %tobool.not
  br i1 %0, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_page
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %1 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %writesize, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %3 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %oobsize, align 4
  %add2 = add i32 %4, %2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add2)
  %cmp = icmp ugt i32 %add, %add2
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end4.if.end13_crit_edge, label %lor.lhs.false.i

if.end4.if.end13_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

lor.lhs.false.i:                                  ; preds = %if.end4
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end13_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end13_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end13_crit_edge, label %if.then6

nand_has_exec_op.exit.if.end13_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then6:                                         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %2)
  %cmp8 = icmp ugt i32 %2, 512
  %current_interface_config.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %11 = ptrtoint ptr %current_interface_config.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %current_interface_config.i.i, align 4
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.then6
  call void @llvm.lifetime.start.p0(i64 5, ptr nonnull %addrs.i) #14
  %13 = getelementptr inbounds [5 x i8], ptr %addrs.i, i32 0, i32 1
  %14 = getelementptr inbounds [5 x i8], ptr %addrs.i, i32 0, i32 2
  %15 = getelementptr inbounds [5 x i8], ptr %addrs.i, i32 0, i32 3
  %16 = getelementptr inbounds [5 x i8], ptr %addrs.i, i32 0, i32 4
  %17 = call ptr @memset(ptr %addrs.i, i32 255, i32 5)
  call void @llvm.lifetime.start.p0(i64 100, ptr nonnull %instrs.i) #14
  %18 = getelementptr inbounds i8, ptr %instrs.i, i32 32
  %19 = call ptr @memset(ptr %18, i32 255, i32 64)
  %arrayinit.element.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1
  %20 = call ptr @memset(ptr %instrs.i, i32 0, i32 20)
  %21 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %arrayinit.element.i, align 4
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1
  %22 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 4, ptr %ctx.i, align 4
  %addrs2.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1, i32 0, i32 1
  %23 = ptrtoint ptr %addrs2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %addrs.i, ptr %addrs2.i, align 4
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 2
  %24 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %delay_ns.i, align 4
  %arrayinit.element3.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2
  %25 = ptrtoint ptr %arrayinit.element3.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %arrayinit.element3.i, align 4
  %ctx5.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 1
  %26 = ptrtoint ptr %ctx5.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 48, ptr %ctx5.i, align 4
  %delay_ns6.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 2
  %27 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp.i.i = icmp eq i32 %28, 0
  %tWB_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp.i.i370.i = icmp eq i32 %28, 1
  %29 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1
  %retval.0.i371.i = select i1 %cmp.i.i370.i, ptr %29, ptr inttoptr (i32 -22 to ptr)
  %tWB_max10.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i371.i, i32 0, i32 31
  %cond.in.i = select i1 %cmp.i.i, ptr %tWB_max.i, ptr %tWB_max10.i
  %30 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %sub.i = add i32 %cond.i, 999
  %div.i = udiv i32 %sub.i, 1000
  %31 = ptrtoint ptr %delay_ns6.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %div.i, ptr %delay_ns6.i, align 4
  %arrayinit.element12.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3
  %32 = ptrtoint ptr %arrayinit.element12.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 4, ptr %arrayinit.element12.i, align 4
  %ctx14.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 1
  %33 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.i372.i = icmp eq i32 %34, 0
  %tR_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %34)
  %cmp.i.i375.i = icmp eq i32 %34, 1
  %retval.0.i376.i = select i1 %cmp.i.i375.i, ptr %29, ptr inttoptr (i32 -22 to ptr)
  %tR_max22.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i376.i, i32 0, i32 3
  %cond24.in.i = select i1 %cmp.i372.i, ptr %tR_max.i, ptr %tR_max22.i
  %35 = ptrtoint ptr %cond24.in.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %cond24.i = load i64, ptr %cond24.in.i, align 8
  %sub26.i = add i64 %cond24.i, 999999999
  %36 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub26.i, i32 0) #18, !srcloc !382
  %asmresult.i.i = extractvalue { i64, i32 } %36, 0
  %asmresult4.i.i = extractvalue { i64, i32 } %36, 1
  %37 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub26.i, i64 %asmresult.i.i, i32 %asmresult4.i.i) #18, !srcloc !383
  %asmresult10.i.i = extractvalue { i64, i32 } %37, 0
  %extract368.i = lshr i64 %asmresult10.i.i, 29
  %extract.t369.i = trunc i64 %extract368.i to i32
  %38 = ptrtoint ptr %ctx14.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %extract.t369.i, ptr %ctx14.i, align 4
  %delay_ns219.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 2
  %39 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %cmp.i377.i = icmp eq i32 %40, 0
  %tRR_min.i = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %40)
  %cmp.i.i380.i = icmp eq i32 %40, 1
  %retval.0.i381.i = select i1 %cmp.i.i380.i, ptr %29, ptr inttoptr (i32 -22 to ptr)
  %tRR_min227.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i381.i, i32 0, i32 29
  %cond229.in.i = select i1 %cmp.i377.i, ptr %tRR_min.i, ptr %tRR_min227.i
  %41 = ptrtoint ptr %cond229.in.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %cond229.i = load i32, ptr %cond229.in.i, align 4
  %sub231.i = add i32 %cond229.i, 999
  %div232.i = udiv i32 %sub231.i, 1000
  %42 = ptrtoint ptr %delay_ns219.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %div232.i, ptr %delay_ns219.i, align 4
  %arrayinit.element235.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 4
  %43 = ptrtoint ptr %arrayinit.element235.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 2, ptr %arrayinit.element235.i, align 4
  %ctx237.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 4, i32 1
  %44 = ptrtoint ptr %ctx237.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %len, ptr %ctx237.i, align 4
  %buf239.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 4, i32 1, i32 0, i32 1
  %45 = ptrtoint ptr %buf239.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %buf, ptr %buf239.i, align 4
  %force_8bit.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 4, i32 1, i32 0, i32 2
  %46 = ptrtoint ptr %force_8bit.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 0, ptr %force_8bit.i, align 4
  %delay_ns240.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 4, i32 2
  %47 = ptrtoint ptr %delay_ns240.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %delay_ns240.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %48 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %49 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %50 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cur_cs.i, align 4
  %52 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %51, ptr %op.i, align 4
  %53 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %instrs.i, ptr %48, align 4
  %spec.select.i = select i1 %tobool.not, i32 4, i32 5
  %54 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %spec.select.i, ptr %49, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %offset_in_page)
  %cmp.i382.i = icmp ult i32 %add2, %offset_in_page
  br i1 %cmp.i382.i, label %if.then9.nand_lp_exec_read_page_op.exit_crit_edge, label %if.end.i.i

if.then9.nand_lp_exec_read_page_op.exit_crit_edge: ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_lp_exec_read_page_op.exit

if.end.i.i:                                       ; preds = %if.then9
  %options.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %55 = ptrtoint ptr %options.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %options.i.i, align 8
  %and.i.i = and i32 %56, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i.if.end252.i_crit_edge, label %if.then8.i.i

if.end.i.i.if.end252.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end252.i

if.then8.i.i:                                     ; preds = %if.end.i.i
  %rem.i.i = and i32 %offset_in_page, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i.i)
  %tobool9.not.i.i = icmp eq i32 %rem.i.i, 0
  br i1 %tobool9.not.i.i, label %if.end33.i.i, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1112, i32 noundef 9, ptr noundef null) #14
  br label %nand_lp_exec_read_page_op.exit

if.end33.i.i:                                     ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %div56.i.i = lshr i32 %offset_in_page, 1
  br label %if.end252.i

if.end252.i:                                      ; preds = %if.end33.i.i, %if.end.i.i.if.end252.i_crit_edge
  %offset_in_page.addr.1.i.i = phi i32 [ %div56.i.i, %if.end33.i.i ], [ %offset_in_page, %if.end.i.i.if.end252.i_crit_edge ]
  %conv.i.i = trunc i32 %offset_in_page.addr.1.i.i to i8
  %57 = ptrtoint ptr %addrs.i to i32
  call void @__asan_store1_noabort(i32 %57)
  store i8 %conv.i.i, ptr %addrs.i, align 1
  %shr.i.i = lshr i32 %offset_in_page.addr.1.i.i, 8
  %conv40.i.i = trunc i32 %shr.i.i to i8
  %58 = ptrtoint ptr %13 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %conv40.i.i, ptr %13, align 1
  %conv253.i = trunc i32 %page to i8
  %59 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %conv253.i, ptr %14, align 1
  %shr254.i = lshr i32 %page, 8
  %conv255.i = trunc i32 %shr254.i to i8
  %60 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %conv255.i, ptr %15, align 1
  %and257.i = and i32 %56, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and257.i)
  %tobool258.not.i = icmp eq i32 %and257.i, 0
  br i1 %tobool258.not.i, label %if.end252.i.lor.lhs.false.i.i.i_crit_edge, label %if.then259.i

if.end252.i.lor.lhs.false.i.i.i_crit_edge:        ; preds = %if.end252.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i.i.i

if.then259.i:                                     ; preds = %if.end252.i
  call void @__sanitizer_cov_trace_pc() #16
  %shr260.i = lshr i32 %page, 16
  %conv261.i = trunc i32 %shr260.i to i8
  %61 = ptrtoint ptr %16 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %conv261.i, ptr %16, align 1
  %62 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 5, ptr %ctx.i, align 4
  br label %lor.lhs.false.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then259.i, %if.end252.i.lor.lhs.false.i.i.i_crit_edge
  %63 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %64, null
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i.nand_lp_exec_read_page_op.exit_crit_edge, label %nand_has_exec_op.exit.i.i

lor.lhs.false.i.i.i.nand_lp_exec_read_page_op.exit_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_lp_exec_read_page_op.exit

nand_has_exec_op.exit.i.i:                        ; preds = %lor.lhs.false.i.i.i
  %exec_op.i.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %64, i32 0, i32 2
  %65 = ptrtoint ptr %exec_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %exec_op.i.i.i, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %66, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_lp_exec_read_page_op.exit_crit_edge, label %if.end.i384.i

nand_has_exec_op.exit.i.i.nand_lp_exec_read_page_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_lp_exec_read_page_op.exit

if.end.i384.i:                                    ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %67 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %51, i32 %68)
  %cmp.not.i.i = icmp ult i32 %51, %68
  br i1 %cmp.not.i.i, label %if.end24.i.i, label %do.end.i385.i, !prof !379

do.end.i385.i:                                    ; preds = %if.end.i384.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_lp_exec_read_page_op.exit

if.end24.i.i:                                     ; preds = %if.end.i384.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i = call i32 %66(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  br label %nand_lp_exec_read_page_op.exit

nand_lp_exec_read_page_op.exit:                   ; preds = %if.end24.i.i, %do.end.i385.i, %nand_has_exec_op.exit.i.i.nand_lp_exec_read_page_op.exit_crit_edge, %lor.lhs.false.i.i.i.nand_lp_exec_read_page_op.exit_crit_edge, %do.end.i.i, %if.then9.nand_lp_exec_read_page_op.exit_crit_edge
  %retval.0.i40 = phi i32 [ -22, %do.end.i385.i ], [ %call25.i.i, %if.end24.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_lp_exec_read_page_op.exit_crit_edge ], [ -524, %lor.lhs.false.i.i.i.nand_lp_exec_read_page_op.exit_crit_edge ], [ -22, %do.end.i.i ], [ -22, %if.then9.nand_lp_exec_read_page_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 100, ptr nonnull %instrs.i) #14
  call void @llvm.lifetime.end.p0(i64 5, ptr nonnull %addrs.i) #14
  br label %cleanup

if.end11:                                         ; preds = %if.then6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %addrs.i41) #14
  %69 = getelementptr inbounds [4 x i8], ptr %addrs.i41, i32 0, i32 1
  %70 = getelementptr inbounds [4 x i8], ptr %addrs.i41, i32 0, i32 2
  %71 = getelementptr inbounds [4 x i8], ptr %addrs.i41, i32 0, i32 3
  %72 = ptrtoint ptr %addrs.i41 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 -1, ptr %addrs.i41, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs.i42) #14
  %73 = getelementptr inbounds i8, ptr %instrs.i42, i32 32
  %74 = call ptr @memset(ptr %73, i32 255, i32 44)
  %arrayinit.element.i45 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 1
  %75 = call ptr @memset(ptr %instrs.i42, i32 0, i32 20)
  %76 = ptrtoint ptr %arrayinit.element.i45 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 1, ptr %arrayinit.element.i45, align 4
  %ctx.i46 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 1, i32 1
  %77 = ptrtoint ptr %ctx.i46 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 3, ptr %ctx.i46, align 4
  %addrs3.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 1, i32 1, i32 0, i32 1
  %78 = ptrtoint ptr %addrs3.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %addrs.i41, ptr %addrs3.i, align 4
  %delay_ns.i47 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 1, i32 2
  %79 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %cmp.i.i48 = icmp eq i32 %80, 0
  %tWB_max.i49 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %80)
  %cmp.i.i390.i = icmp eq i32 %80, 1
  %81 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1
  %retval.0.i391.i = select i1 %cmp.i.i390.i, ptr %81, ptr inttoptr (i32 -22 to ptr)
  %tWB_max7.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i391.i, i32 0, i32 31
  %cond.in.i50 = select i1 %cmp.i.i48, ptr %tWB_max.i49, ptr %tWB_max7.i
  %82 = ptrtoint ptr %cond.in.i50 to i32
  call void @__asan_load4_noabort(i32 %82)
  %cond.i51 = load i32, ptr %cond.in.i50, align 4
  %sub.i52 = add i32 %cond.i51, 999
  %div.i53 = udiv i32 %sub.i52, 1000
  %83 = ptrtoint ptr %delay_ns.i47 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %div.i53, ptr %delay_ns.i47, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 2
  %84 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 4, ptr %arrayinit.element9.i, align 4
  %ctx11.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 2, i32 1
  %85 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %cmp.i392.i = icmp eq i32 %86, 0
  %tR_max.i54 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %86)
  %cmp.i.i395.i = icmp eq i32 %86, 1
  %retval.0.i396.i = select i1 %cmp.i.i395.i, ptr %81, ptr inttoptr (i32 -22 to ptr)
  %tR_max19.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i396.i, i32 0, i32 3
  %cond21.in.i = select i1 %cmp.i392.i, ptr %tR_max.i54, ptr %tR_max19.i
  %87 = ptrtoint ptr %cond21.in.i to i32
  call void @__asan_load8_noabort(i32 %87)
  %cond21.i = load i64, ptr %cond21.in.i, align 8
  %sub23.i = add i64 %cond21.i, 999999999
  %88 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub23.i, i32 0) #18, !srcloc !382
  %asmresult.i.i55 = extractvalue { i64, i32 } %88, 0
  %asmresult4.i.i56 = extractvalue { i64, i32 } %88, 1
  %89 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub23.i, i64 %asmresult.i.i55, i32 %asmresult4.i.i56) #18, !srcloc !383
  %asmresult10.i.i57 = extractvalue { i64, i32 } %89, 0
  %extract388.i = lshr i64 %asmresult10.i.i57, 29
  %extract.t389.i = trunc i64 %extract388.i to i32
  %90 = ptrtoint ptr %ctx11.i to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %extract.t389.i, ptr %ctx11.i, align 4
  %delay_ns216.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 2, i32 2
  %91 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %92)
  %cmp.i397.i = icmp eq i32 %92, 0
  %tRR_min.i58 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %92)
  %cmp.i.i400.i = icmp eq i32 %92, 1
  %retval.0.i401.i = select i1 %cmp.i.i400.i, ptr %81, ptr inttoptr (i32 -22 to ptr)
  %tRR_min224.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i401.i, i32 0, i32 29
  %cond226.in.i = select i1 %cmp.i397.i, ptr %tRR_min.i58, ptr %tRR_min224.i
  %93 = ptrtoint ptr %cond226.in.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %cond226.i = load i32, ptr %cond226.in.i, align 4
  %sub228.i = add i32 %cond226.i, 999
  %div229.i = udiv i32 %sub228.i, 1000
  %94 = ptrtoint ptr %delay_ns216.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %div229.i, ptr %delay_ns216.i, align 4
  %arrayinit.element232.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 3
  %95 = ptrtoint ptr %arrayinit.element232.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 2, ptr %arrayinit.element232.i, align 4
  %ctx234.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 3, i32 1
  %96 = ptrtoint ptr %ctx234.i to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %len, ptr %ctx234.i, align 4
  %buf236.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 3, i32 1, i32 0, i32 1
  %97 = ptrtoint ptr %buf236.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store ptr %buf, ptr %buf236.i, align 4
  %force_8bit.i59 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 3, i32 1, i32 0, i32 2
  %98 = ptrtoint ptr %force_8bit.i59 to i32
  call void @__asan_store1_noabort(i32 %98)
  store i8 0, ptr %force_8bit.i59, align 4
  %delay_ns237.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 3, i32 2
  %99 = ptrtoint ptr %delay_ns237.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 0, ptr %delay_ns237.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i43) #14
  %100 = getelementptr inbounds %struct.nand_operation, ptr %op.i43, i32 0, i32 1
  %101 = getelementptr inbounds %struct.nand_operation, ptr %op.i43, i32 0, i32 2
  %cur_cs.i60 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %102 = ptrtoint ptr %cur_cs.i60 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %cur_cs.i60, align 4
  %104 = ptrtoint ptr %op.i43 to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %103, ptr %op.i43, align 4
  %105 = ptrtoint ptr %100 to i32
  call void @__asan_store4_noabort(i32 %105)
  store ptr %instrs.i42, ptr %100, align 4
  %spec.select.i61 = select i1 %tobool.not, i32 3, i32 4
  %106 = ptrtoint ptr %101 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %spec.select.i61, ptr %101, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %offset_in_page)
  %cmp244.not.i = icmp ugt i32 %2, %offset_in_page
  br i1 %cmp244.not.i, label %if.else248.i, label %if.end11.if.end259.sink.split.i_crit_edge

if.end11.if.end259.sink.split.i_crit_edge:        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end259.sink.split.i

if.else248.i:                                     ; preds = %if.end11
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %offset_in_page)
  %cmp249.i = icmp ugt i32 %offset_in_page, 255
  br i1 %cmp249.i, label %land.lhs.true251.i, label %if.else248.i.if.end259.i_crit_edge

if.else248.i.if.end259.i_crit_edge:               ; preds = %if.else248.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end259.i

land.lhs.true251.i:                               ; preds = %if.else248.i
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %107 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %options.i, align 8
  %and252.i = and i32 %108, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and252.i)
  %tobool253.not.i = icmp eq i32 %and252.i, 0
  br i1 %tobool253.not.i, label %land.lhs.true251.i.if.end259.sink.split.i_crit_edge, label %land.lhs.true251.i.if.end259.i_crit_edge

land.lhs.true251.i.if.end259.i_crit_edge:         ; preds = %land.lhs.true251.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end259.i

land.lhs.true251.i.if.end259.sink.split.i_crit_edge: ; preds = %land.lhs.true251.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end259.sink.split.i

if.end259.sink.split.i:                           ; preds = %land.lhs.true251.i.if.end259.sink.split.i_crit_edge, %if.end11.if.end259.sink.split.i_crit_edge
  %.sink.i = phi i8 [ 80, %if.end11.if.end259.sink.split.i_crit_edge ], [ 1, %land.lhs.true251.i.if.end259.sink.split.i_crit_edge ]
  %ctx256.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i42, i32 0, i32 1
  %109 = ptrtoint ptr %ctx256.i to i32
  call void @__asan_store1_noabort(i32 %109)
  store i8 %.sink.i, ptr %ctx256.i, align 4
  br label %if.end259.i

if.end259.i:                                      ; preds = %if.end259.sink.split.i, %land.lhs.true251.i.if.end259.i_crit_edge, %if.else248.i.if.end259.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %offset_in_page)
  %cmp.i402.i = icmp ult i32 %add2, %offset_in_page
  br i1 %cmp.i402.i, label %if.end259.i.nand_sp_exec_read_page_op.exit_crit_edge, label %if.end.i.i71

if.end259.i.nand_sp_exec_read_page_op.exit_crit_edge: ; preds = %if.end259.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_sp_exec_read_page_op.exit

if.end.i.i71:                                     ; preds = %if.end259.i
  %sub.i.i66 = select i1 %cmp244.not.i, i32 0, i32 %2
  %offset_in_page.addr.0.i.i67 = sub i32 %offset_in_page, %sub.i.i66
  %options.i.i68 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %110 = ptrtoint ptr %options.i.i68 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %options.i.i68, align 8
  %and.i.i69 = and i32 %111, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i69)
  %tobool.not.i.i70 = icmp eq i32 %and.i.i69, 0
  br i1 %tobool.not.i.i70, label %if.end.i.i71.if.end34.i.i80_crit_edge, label %if.then8.i.i74

if.end.i.i71.if.end34.i.i80_crit_edge:            ; preds = %if.end.i.i71
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34.i.i80

if.then8.i.i74:                                   ; preds = %if.end.i.i71
  %rem.i.i72 = and i32 %offset_in_page.addr.0.i.i67, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i.i72)
  %tobool9.not.i.i73 = icmp eq i32 %rem.i.i72, 0
  br i1 %tobool9.not.i.i73, label %if.end33.i.i77, label %do.end.i.i75, !prof !379

do.end.i.i75:                                     ; preds = %if.then8.i.i74
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1112, i32 noundef 9, ptr noundef null) #14
  br label %nand_sp_exec_read_page_op.exit

if.end33.i.i77:                                   ; preds = %if.then8.i.i74
  call void @__sanitizer_cov_trace_pc() #16
  %div56.i.i76 = lshr i32 %offset_in_page.addr.0.i.i67, 1
  br label %if.end34.i.i80

if.end34.i.i80:                                   ; preds = %if.end33.i.i77, %if.end.i.i71.if.end34.i.i80_crit_edge
  %offset_in_page.addr.1.i.i78 = phi i32 [ %div56.i.i76, %if.end33.i.i77 ], [ %offset_in_page.addr.0.i.i67, %if.end.i.i71.if.end34.i.i80_crit_edge ]
  %conv.i.i79 = trunc i32 %offset_in_page.addr.1.i.i78 to i8
  %112 = ptrtoint ptr %addrs.i41 to i32
  call void @__asan_store1_noabort(i32 %112)
  store i8 %conv.i.i79, ptr %addrs.i41, align 4
  %conv266.i = trunc i32 %page to i8
  %113 = ptrtoint ptr %69 to i32
  call void @__asan_store1_noabort(i32 %113)
  store i8 %conv266.i, ptr %69, align 1
  %shr268.i = lshr i32 %page, 8
  %conv269.i = trunc i32 %shr268.i to i8
  %114 = ptrtoint ptr %70 to i32
  call void @__asan_store1_noabort(i32 %114)
  store i8 %conv269.i, ptr %70, align 2
  %and272.i = and i32 %111, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and272.i)
  %tobool273.not.i = icmp eq i32 %and272.i, 0
  br i1 %tobool273.not.i, label %if.end34.i.i80.lor.lhs.false.i.i.i86_crit_edge, label %if.then274.i

if.end34.i.i80.lor.lhs.false.i.i.i86_crit_edge:   ; preds = %if.end34.i.i80
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i.i.i86

if.then274.i:                                     ; preds = %if.end34.i.i80
  call void @__sanitizer_cov_trace_pc() #16
  %shr275.i = lshr i32 %page, 16
  %conv276.i = trunc i32 %shr275.i to i8
  %115 = ptrtoint ptr %71 to i32
  call void @__asan_store1_noabort(i32 %115)
  store i8 %conv276.i, ptr %71, align 1
  %116 = ptrtoint ptr %ctx.i46 to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 4, ptr %ctx.i46, align 4
  br label %lor.lhs.false.i.i.i86

lor.lhs.false.i.i.i86:                            ; preds = %if.then274.i, %if.end34.i.i80.lor.lhs.false.i.i.i86_crit_edge
  %117 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i.i85 = icmp eq ptr %118, null
  br i1 %tobool2.not.i.i.i85, label %lor.lhs.false.i.i.i86.nand_sp_exec_read_page_op.exit_crit_edge, label %nand_has_exec_op.exit.i.i89

lor.lhs.false.i.i.i86.nand_sp_exec_read_page_op.exit_crit_edge: ; preds = %lor.lhs.false.i.i.i86
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_sp_exec_read_page_op.exit

nand_has_exec_op.exit.i.i89:                      ; preds = %lor.lhs.false.i.i.i86
  %exec_op.i.i.i87 = getelementptr inbounds %struct.nand_controller_ops, ptr %118, i32 0, i32 2
  %119 = ptrtoint ptr %exec_op.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %exec_op.i.i.i87, align 4
  %tobool6.not.i.not.i.i88 = icmp eq ptr %120, null
  br i1 %tobool6.not.i.not.i.i88, label %nand_has_exec_op.exit.i.i89.nand_sp_exec_read_page_op.exit_crit_edge, label %if.end.i404.i

nand_has_exec_op.exit.i.i89.nand_sp_exec_read_page_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i.i89
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_sp_exec_read_page_op.exit

if.end.i404.i:                                    ; preds = %nand_has_exec_op.exit.i.i89
  %ntargets.i.i.i90 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %121 = ptrtoint ptr %ntargets.i.i.i90 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %ntargets.i.i.i90, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %103, i32 %122)
  %cmp.not.i.i91 = icmp ult i32 %103, %122
  br i1 %cmp.not.i.i91, label %if.end24.i.i93, label %do.end.i405.i, !prof !379

do.end.i405.i:                                    ; preds = %if.end.i404.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_sp_exec_read_page_op.exit

if.end24.i.i93:                                   ; preds = %if.end.i404.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i92 = call i32 %120(ptr noundef %chip, ptr noundef nonnull %op.i43, i1 noundef zeroext false) #14
  br label %nand_sp_exec_read_page_op.exit

nand_sp_exec_read_page_op.exit:                   ; preds = %if.end24.i.i93, %do.end.i405.i, %nand_has_exec_op.exit.i.i89.nand_sp_exec_read_page_op.exit_crit_edge, %lor.lhs.false.i.i.i86.nand_sp_exec_read_page_op.exit_crit_edge, %do.end.i.i75, %if.end259.i.nand_sp_exec_read_page_op.exit_crit_edge
  %retval.0.i94 = phi i32 [ -22, %do.end.i405.i ], [ %call25.i.i92, %if.end24.i.i93 ], [ -524, %nand_has_exec_op.exit.i.i89.nand_sp_exec_read_page_op.exit_crit_edge ], [ -524, %lor.lhs.false.i.i.i86.nand_sp_exec_read_page_op.exit_crit_edge ], [ -22, %do.end.i.i75 ], [ -22, %if.end259.i.nand_sp_exec_read_page_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i43) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs.i42) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %addrs.i41) #14
  br label %cleanup

if.end13:                                         ; preds = %nand_has_exec_op.exit.if.end13_crit_edge, %lor.lhs.false.i.if.end13_crit_edge, %if.end4.if.end13_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %123 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %cmdfunc, align 8
  tail call void %124(ptr noundef %chip, i32 noundef 0, i32 noundef %offset_in_page, i32 noundef %page) #14
  br i1 %tobool.not, label %if.end13.cleanup_crit_edge, label %if.then15

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %125 = ptrtoint ptr %read_buf to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %read_buf, align 8
  tail call void %126(ptr noundef %chip, ptr noundef %buf, i32 noundef %len) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %if.end13.cleanup_crit_edge, %nand_sp_exec_read_page_op.exit, %nand_lp_exec_read_page_op.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i40, %nand_lp_exec_read_page_op.exit ], [ %retval.0.i94, %nand_sp_exec_read_page_op.exit ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.then15 ], [ 0, %if.end13.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_param_page_op(ptr noundef %chip, i8 noundef zeroext %page, ptr noundef %buf, i32 noundef %len) local_unnamed_addr #4 align 64 {
entry:
  %page.addr = alloca i8, align 1
  %instrs = alloca [4 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %page.addr to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 %page, ptr %page.addr, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %1 = or i1 %tobool1.not, %tobool.not
  br i1 %1, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %2 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.if.end250_crit_edge, label %lor.lhs.false.i

if.end.if.end250_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end250

lor.lhs.false.i:                                  ; preds = %if.end
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end250_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end250_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end250

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %7, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end250_crit_edge, label %if.then2

nand_has_exec_op.exit.if.end250_crit_edge:        ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end250

if.then2:                                         ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %8 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs) #14
  %10 = getelementptr inbounds i8, ptr %instrs, i32 32
  %11 = call ptr @memset(ptr %10, i32 255, i32 44)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %12 = call ptr @memset(ptr %instrs, i32 0, i32 20)
  %13 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 -20, ptr %ctx, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %14 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %arrayinit.element, align 4
  %ctx5 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %15 = ptrtoint ptr %ctx5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %ctx5, align 4
  %addrs = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %addrs to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %page.addr, ptr %addrs, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %17 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i = icmp eq i32 %18, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i.i362 = icmp eq i32 %18, 1
  %19 = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1
  %retval.0.i363 = select i1 %cmp.i.i362, ptr %19, ptr inttoptr (i32 -22 to ptr)
  %tWB_max9 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i363, i32 0, i32 31
  %cond.in = select i1 %cmp.i, ptr %tWB_max, ptr %tWB_max9
  %20 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %20)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %21 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element11 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %22 = ptrtoint ptr %arrayinit.element11 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 4, ptr %arrayinit.element11, align 4
  %ctx13 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %23 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.i364 = icmp eq i32 %24, 0
  %tR_max = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i.i367 = icmp eq i32 %24, 1
  %retval.0.i368 = select i1 %cmp.i.i367, ptr %19, ptr inttoptr (i32 -22 to ptr)
  %tR_max21 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i368, i32 0, i32 3
  %cond23.in = select i1 %cmp.i364, ptr %tR_max, ptr %tR_max21
  %25 = ptrtoint ptr %cond23.in to i32
  call void @__asan_load8_noabort(i32 %25)
  %cond23 = load i64, ptr %cond23.in, align 8
  %sub25 = add i64 %cond23, 999999999
  %26 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub25, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %26, 0
  %asmresult4.i = extractvalue { i64, i32 } %26, 1
  %27 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub25, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %27, 0
  %extract359 = lshr i64 %asmresult10.i, 29
  %extract.t360 = trunc i64 %extract359 to i32
  %28 = ptrtoint ptr %ctx13 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %extract.t360, ptr %ctx13, align 4
  %delay_ns222 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %29 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp.i369 = icmp eq i32 %30, 0
  %tRR_min = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1, i32 0, i32 30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %30)
  %cmp.i.i372 = icmp eq i32 %30, 1
  %retval.0.i373 = select i1 %cmp.i.i372, ptr %19, ptr inttoptr (i32 -22 to ptr)
  %tRR_min230 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i373, i32 0, i32 29
  %cond232.in = select i1 %cmp.i369, ptr %tRR_min, ptr %tRR_min230
  %31 = ptrtoint ptr %cond232.in to i32
  call void @__asan_load4_noabort(i32 %31)
  %cond232 = load i32, ptr %cond232.in, align 4
  %sub234 = add i32 %cond232, 999
  %div235 = udiv i32 %sub234, 1000
  %32 = ptrtoint ptr %delay_ns222 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %div235, ptr %delay_ns222, align 4
  %arrayinit.element238 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3
  %33 = ptrtoint ptr %arrayinit.element238 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 2, ptr %arrayinit.element238, align 4
  %ctx240 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1
  %34 = ptrtoint ptr %ctx240 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %len, ptr %ctx240, align 4
  %buf242 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 1
  %35 = ptrtoint ptr %buf242 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %buf, ptr %buf242, align 4
  %force_8bit = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 2
  %36 = ptrtoint ptr %force_8bit to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 1, ptr %force_8bit, align 4
  %delay_ns243 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 2
  %37 = ptrtoint ptr %delay_ns243 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 0, ptr %delay_ns243, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %38 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %39 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %40 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %cur_cs, align 4
  %42 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %op, align 4
  %43 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %instrs, ptr %38, align 4
  %spec.select = select i1 %tobool.not, i32 3, i32 4
  %44 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %spec.select, ptr %39, align 4
  %45 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %46, null
  br i1 %tobool2.not.i.i, label %if.then2.nand_exec_op.exit_crit_edge, label %nand_has_exec_op.exit.i

if.then2.nand_exec_op.exit_crit_edge:             ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

nand_has_exec_op.exit.i:                          ; preds = %if.then2
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %46, i32 0, i32 2
  %47 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %48, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %49 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %41, i32 %50)
  %cmp.not.i = icmp ult i32 %41, %50
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit

if.end24.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %48(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit

nand_exec_op.exit:                                ; preds = %if.end24.i, %do.end.i, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, %if.then2.nand_exec_op.exit_crit_edge
  %retval.0.i375 = phi i32 [ -22, %do.end.i ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge ], [ -524, %if.then2.nand_exec_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs) #14
  br label %cleanup

if.end250:                                        ; preds = %nand_has_exec_op.exit.if.end250_crit_edge, %lor.lhs.false.i.if.end250_crit_edge, %if.end.if.end250_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %51 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %cmdfunc, align 8
  %conv251 = zext i8 %page to i32
  tail call void %52(ptr noundef %chip, i32 noundef 236, i32 noundef %conv251, i32 noundef -1) #14
  br i1 %tobool.not, label %if.end250.cleanup_crit_edge, label %for.body.lr.ph

if.end250.cleanup_crit_edge:                      ; preds = %if.end250
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end250
  %read_byte = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0378 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %53 = ptrtoint ptr %read_byte to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %read_byte, align 4
  %call255 = tail call zeroext i8 %54(ptr noundef %chip) #14
  %arrayidx = getelementptr i8, ptr %buf, i32 %i.0378
  %55 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %call255, ptr %arrayidx, align 1
  %inc = add nuw i32 %i.0378, 1
  %exitcond.not = icmp eq i32 %inc, %len
  br i1 %exitcond.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end250.cleanup_crit_edge, %nand_exec_op.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i375, %nand_exec_op.exit ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end250.cleanup_crit_edge ], [ 0, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_change_read_column_op(ptr noundef %chip, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext %force_8bit) #4 align 64 {
entry:
  %addrs = alloca [2 x i8], align 2
  %instrs = alloca [4 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %force_8bit to i8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %0 = or i1 %tobool1.not, %tobool.not
  br i1 %0, label %if.end, label %entry.cleanup59_crit_edge

entry.cleanup59_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup59

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_page
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %1 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %writesize, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %3 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %oobsize, align 4
  %add2 = add i32 %4, %2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add2)
  %cmp = icmp ugt i32 %add, %add2
  br i1 %cmp, label %if.end.cleanup59_crit_edge, label %if.end4

if.end.cleanup59_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup59

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 513, i32 %2)
  %cmp6 = icmp ult i32 %2, 513
  br i1 %cmp6, label %if.end4.cleanup59_crit_edge, label %if.end8

if.end4.cleanup59_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup59

if.end8:                                          ; preds = %if.end4
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end8.if.end54_crit_edge, label %lor.lhs.false.i

if.end8.if.end54_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

lor.lhs.false.i:                                  ; preds = %if.end8
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end54_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end54_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end54_crit_edge, label %if.then10

nand_has_exec_op.exit.if.end54_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

if.then10:                                        ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %11 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %addrs) #14
  %13 = ptrtoint ptr %addrs to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 0, ptr %addrs, align 2
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs) #14
  %14 = getelementptr inbounds i8, ptr %instrs, i32 32
  %15 = call ptr @memset(ptr %14, i32 255, i32 44)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %16 = call ptr @memset(ptr %instrs, i32 0, i32 20)
  %17 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 5, ptr %ctx, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %18 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %arrayinit.element, align 4
  %ctx13 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %19 = ptrtoint ptr %ctx13 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 2, ptr %ctx13, align 4
  %addrs14 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %20 = ptrtoint ptr %addrs14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %addrs, ptr %addrs14, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %21 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %delay_ns, align 4
  %arrayinit.element15 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %22 = ptrtoint ptr %arrayinit.element15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %arrayinit.element15, align 4
  %ctx17 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %23 = ptrtoint ptr %ctx17 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 -32, ptr %ctx17, align 4
  %delay_ns19 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %24 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i = icmp eq i32 %25, 0
  %tCCS_min = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp.i.i84 = icmp eq i32 %25, 1
  %26 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1
  %retval.0.i85 = select i1 %cmp.i.i84, ptr %26, ptr inttoptr (i32 -22 to ptr)
  %tCCS_min23 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i85, i32 0, i32 1
  %cond.in = select i1 %cmp.i, ptr %tCCS_min, ptr %tCCS_min23
  %27 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %27)
  %cond = load i32, ptr %cond.in, align 8
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %28 = ptrtoint ptr %delay_ns19 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %div, ptr %delay_ns19, align 4
  %arrayinit.element26 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3
  %29 = ptrtoint ptr %arrayinit.element26 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %arrayinit.element26, align 4
  %ctx28 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1
  %30 = ptrtoint ptr %ctx28 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %len, ptr %ctx28, align 4
  %buf30 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 1
  %31 = ptrtoint ptr %buf30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %buf, ptr %buf30, align 4
  %force_8bit31 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 2
  %32 = ptrtoint ptr %force_8bit31 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 0, ptr %force_8bit31, align 4
  %delay_ns32 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 2
  %33 = ptrtoint ptr %delay_ns32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %delay_ns32, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %34 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %35 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %36 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cur_cs, align 4
  %38 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %op, align 4
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %instrs, ptr %34, align 4
  %40 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 4, ptr %35, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %offset_in_page)
  %cmp.i86 = icmp ult i32 %add2, %offset_in_page
  br i1 %cmp.i86, label %if.then10.cleanup_crit_edge, label %if.end.i

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %if.then10
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %41 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %options.i, align 8
  %and.i = and i32 %42, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i87 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i87, label %if.end.i.if.end40_crit_edge, label %if.then8.i

if.end.i.if.end40_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then8.i:                                       ; preds = %if.end.i
  %rem.i = and i32 %offset_in_page, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool9.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool9.not.i, label %if.end33.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1112, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end33.i:                                       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  %div56.i = lshr i32 %offset_in_page, 1
  br label %if.end40

if.end40:                                         ; preds = %if.end33.i, %if.end.i.if.end40_crit_edge
  %offset_in_page.addr.1.i = phi i32 [ %div56.i, %if.end33.i ], [ %offset_in_page, %if.end.i.if.end40_crit_edge ]
  %conv.i = trunc i32 %offset_in_page.addr.1.i to i8
  %43 = ptrtoint ptr %addrs to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %conv.i, ptr %addrs, align 2
  %shr.i = lshr i32 %offset_in_page.addr.1.i, 8
  %conv40.i = trunc i32 %shr.i to i8
  %arrayidx41.i = getelementptr inbounds i8, ptr %addrs, i32 1
  %44 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %conv40.i, ptr %arrayidx41.i, align 1
  br i1 %tobool.not, label %if.then42, label %if.end40.if.end44_crit_edge

if.end40.if.end44_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

if.then42:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %35, align 4
  %dec = add i32 %46, -1
  store i32 %dec, ptr %35, align 4
  br label %if.end44

if.end44:                                         ; preds = %if.then42, %if.end40.if.end44_crit_edge
  %47 = ptrtoint ptr %force_8bit31 to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %frombool, ptr %force_8bit31, align 4
  %48 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i = icmp eq ptr %49, null
  br i1 %tobool.not.i.i, label %if.end44.cleanup_crit_edge, label %lor.lhs.false.i.i

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.end44
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %51, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %51, i32 0, i32 2
  %52 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %53, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup_crit_edge, label %if.end.i89

nand_has_exec_op.exit.i.cleanup_crit_edge:        ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i89:                                       ; preds = %nand_has_exec_op.exit.i
  %54 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %op, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %56 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %55, i32 %57)
  %cmp.not.i = icmp ult i32 %55, %57
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i90, !prof !379

do.end.i90:                                       ; preds = %if.end.i89
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end24.i:                                       ; preds = %if.end.i89
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %53(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end24.i, %do.end.i90, %nand_has_exec_op.exit.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.end44.cleanup_crit_edge, %do.end.i, %if.then10.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end.i90 ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.cleanup_crit_edge ], [ -524, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -524, %if.end44.cleanup_crit_edge ], [ -22, %do.end.i ], [ -22, %if.then10.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %addrs) #14
  br label %cleanup59

if.end54:                                         ; preds = %nand_has_exec_op.exit.if.end54_crit_edge, %lor.lhs.false.i.if.end54_crit_edge, %if.end8.if.end54_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %58 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %cmdfunc, align 8
  tail call void %59(ptr noundef %chip, i32 noundef 5, i32 noundef %offset_in_page, i32 noundef -1) #14
  br i1 %tobool.not, label %if.end54.cleanup59_crit_edge, label %if.then56

if.end54.cleanup59_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup59

if.then56:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %60 = ptrtoint ptr %read_buf to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %read_buf, align 8
  tail call void %61(ptr noundef %chip, ptr noundef %buf, i32 noundef %len) #14
  br label %cleanup59

cleanup59:                                        ; preds = %if.then56, %if.end54.cleanup59_crit_edge, %cleanup, %if.end4.cleanup59_crit_edge, %if.end.cleanup59_crit_edge, %entry.cleanup59_crit_edge
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ -22, %entry.cleanup59_crit_edge ], [ -22, %if.end.cleanup59_crit_edge ], [ -524, %if.end4.cleanup59_crit_edge ], [ 0, %if.then56 ], [ 0, %if.end54.cleanup59_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_oob_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_oob, ptr noundef %buf, i32 noundef %len) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %0 = or i1 %tobool1.not, %tobool.not
  br i1 %0, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_oob
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %1 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %oobsize, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %2)
  %cmp = icmp ugt i32 %add, %2
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %3 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end3.if.end8_crit_edge, label %lor.lhs.false.i

if.end3.if.end8_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

lor.lhs.false.i:                                  ; preds = %if.end3
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %6, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end8_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end8_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %8, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end8_crit_edge, label %if.then5

nand_has_exec_op.exit.if.end8_crit_edge:          ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then5:                                         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %9 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %writesize, align 4
  %add6 = add i32 %10, %offset_in_oob
  %call7 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %add6, ptr noundef %buf, i32 noundef %len)
  br label %cleanup

if.end8:                                          ; preds = %nand_has_exec_op.exit.if.end8_crit_edge, %lor.lhs.false.i.if.end8_crit_edge, %if.end3.if.end8_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %11 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cmdfunc, align 8
  tail call void %12(ptr noundef %chip, i32 noundef 80, i32 noundef %offset_in_oob, i32 noundef %page) #14
  br i1 %tobool.not, label %if.end8.cleanup_crit_edge, label %if.then10

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %13 = ptrtoint ptr %read_buf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %read_buf, align 8
  tail call void %14(ptr noundef %chip, ptr noundef %buf, i32 noundef %len) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end8.cleanup_crit_edge, %if.then5, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.then5 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.then10 ], [ 0, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_prog_page_begin_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp ne i32 %len, 0
  %tobool1.not = icmp eq ptr %buf, null
  %or.cond = and i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_page
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize, align 4
  %add2 = add i32 %3, %1
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add2)
  %cmp = icmp ugt i32 %add, %add2
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %4 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end4.if.end8_crit_edge, label %lor.lhs.false.i

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

lor.lhs.false.i:                                  ; preds = %if.end4
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %7, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end8_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end8_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %9, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end8_crit_edge, label %if.then6

nand_has_exec_op.exit.if.end8_crit_edge:          ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then6:                                         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext false)
  br label %cleanup

if.end8:                                          ; preds = %nand_has_exec_op.exit.if.end8_crit_edge, %lor.lhs.false.i.if.end8_crit_edge, %if.end4.if.end8_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %10 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cmdfunc, align 8
  tail call void %11(ptr noundef %chip, i32 noundef 128, i32 noundef %offset_in_page, i32 noundef %page) #14
  br i1 %tobool1.not, label %if.end8.cleanup_crit_edge, label %if.then10

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %write_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %12 = ptrtoint ptr %write_buf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %write_buf, align 4
  tail call void %13(ptr noundef %chip, ptr noundef nonnull %buf, i32 noundef %len) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end8.cleanup_crit_edge, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.then6 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %if.then10 ], [ 0, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext %prog) unnamed_addr #4 align 64 {
entry:
  %addrs = alloca [5 x i8], align 1
  %instrs = alloca [6 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %0 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 5, ptr nonnull %addrs) #14
  %2 = call ptr @memset(ptr %addrs, i32 0, i32 5)
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %instrs) #14
  %3 = getelementptr inbounds i8, ptr %instrs, i32 52
  %4 = call ptr @memset(ptr %3, i32 255, i32 68)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %5 = call ptr @memset(ptr %instrs, i32 0, i32 40)
  %6 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 -128, ptr %ctx, align 4
  %arrayinit.element3 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %7 = ptrtoint ptr %arrayinit.element3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 1, ptr %arrayinit.element3, align 4
  %ctx5 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %8 = ptrtoint ptr %ctx5 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %ctx5, align 4
  %addrs6 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1, i32 0, i32 1
  %9 = ptrtoint ptr %addrs6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %addrs, ptr %addrs6, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp.i = icmp eq i32 %11, 0
  %tADL_min = getelementptr inbounds %struct.nand_interface_config, ptr %1, i32 0, i32 1, i32 1, i32 0, i32 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp.i.i421 = icmp eq i32 %11, 1
  %12 = getelementptr inbounds %struct.nand_interface_config, ptr %1, i32 0, i32 1, i32 1
  %retval.0.i422 = select i1 %cmp.i.i421, ptr %12, ptr inttoptr (i32 -22 to ptr)
  %tADL_min10 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i422, i32 0, i32 6
  %cond.in = select i1 %cmp.i, ptr %tADL_min, ptr %tADL_min10
  %13 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %13)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %14 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element12 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3
  %15 = ptrtoint ptr %arrayinit.element12 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 3, ptr %arrayinit.element12, align 4
  %ctx14 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1
  %16 = ptrtoint ptr %ctx14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %len, ptr %ctx14, align 4
  %buf16 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 1
  %17 = ptrtoint ptr %buf16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %buf, ptr %buf16, align 4
  %force_8bit = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1, i32 0, i32 2
  %18 = ptrtoint ptr %force_8bit to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %force_8bit, align 4
  %delay_ns17 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 2
  %19 = ptrtoint ptr %delay_ns17 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %delay_ns17, align 4
  %arrayinit.element18 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 4
  %20 = ptrtoint ptr %arrayinit.element18 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %arrayinit.element18, align 4
  %ctx20 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 4, i32 1
  %21 = ptrtoint ptr %ctx20 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 16, ptr %ctx20, align 4
  %delay_ns22 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 4, i32 2
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp.i423 = icmp eq i32 %23, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %1, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %23)
  %cmp.i.i426 = icmp eq i32 %23, 1
  %retval.0.i427 = select i1 %cmp.i.i426, ptr %12, ptr inttoptr (i32 -22 to ptr)
  %tWB_max30 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i427, i32 0, i32 31
  %cond32.in = select i1 %cmp.i423, ptr %tWB_max, ptr %tWB_max30
  %24 = ptrtoint ptr %cond32.in to i32
  call void @__asan_load4_noabort(i32 %24)
  %cond32 = load i32, ptr %cond32.in, align 4
  %sub34 = add i32 %cond32, 999
  %div35 = udiv i32 %sub34, 1000
  %25 = ptrtoint ptr %delay_ns22 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %div35, ptr %delay_ns22, align 4
  %arrayinit.element38 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 5
  %26 = ptrtoint ptr %arrayinit.element38 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 4, ptr %arrayinit.element38, align 4
  %ctx40 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 5, i32 1
  %27 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp.i428 = icmp eq i32 %28, 0
  %tPROG_max = getelementptr inbounds %struct.nand_interface_config, ptr %1, i32 0, i32 1, i32 1, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %28)
  %cmp.i.i431 = icmp eq i32 %28, 1
  %retval.0.i432 = select i1 %cmp.i.i431, ptr %12, ptr inttoptr (i32 -22 to ptr)
  %tPROG_max48 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i432, i32 0, i32 2
  %cond50.in = select i1 %cmp.i428, ptr %tPROG_max, ptr %tPROG_max48
  %29 = ptrtoint ptr %cond50.in to i32
  call void @__asan_load8_noabort(i32 %29)
  %cond50 = load i64, ptr %cond50.in, align 8
  %sub52 = add i64 %cond50, 999999999
  %30 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub52, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %30, 0
  %asmresult4.i = extractvalue { i64, i32 } %30, 1
  %31 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub52, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %31, 0
  %extract419 = lshr i64 %asmresult10.i, 29
  %extract.t420 = trunc i64 %extract419 to i32
  %32 = ptrtoint ptr %ctx40 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %extract.t420, ptr %ctx40, align 4
  %delay_ns245 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 5, i32 2
  %33 = ptrtoint ptr %delay_ns245 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %delay_ns245, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %34 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %35 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %36 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cur_cs, align 4
  %38 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %op, align 4
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %instrs, ptr %34, align 4
  %40 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 6, ptr %35, align 4
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %41 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %writesize.i, align 4
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %43 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %oobsize.i, align 4
  %add.i = add i32 %44, %42
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %offset_in_page)
  %cmp.i433 = icmp ult i32 %add.i, %offset_in_page
  br i1 %cmp.i433, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %42)
  %cmp2.i = icmp ugt i32 %42, 512
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %offset_in_page)
  %cmp4.not.i = icmp ugt i32 %42, %offset_in_page
  %or.cond.i = or i1 %cmp2.i, %cmp4.not.i
  %sub.i = select i1 %or.cond.i, i32 0, i32 %42
  %offset_in_page.addr.0.i = sub i32 %offset_in_page, %sub.i
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %45 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %options.i, align 8
  %and.i = and i32 %46, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i.if.end34.i_crit_edge, label %if.then8.i

if.end.i.if.end34.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34.i

if.then8.i:                                       ; preds = %if.end.i
  %rem.i = and i32 %offset_in_page.addr.0.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool9.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool9.not.i, label %if.end33.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1112, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end33.i:                                       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  %div56.i = lshr i32 %offset_in_page.addr.0.i, 1
  br label %if.end34.i

if.end34.i:                                       ; preds = %if.end33.i, %if.end.i.if.end34.i_crit_edge
  %offset_in_page.addr.1.i = phi i32 [ %div56.i, %if.end33.i ], [ %offset_in_page.addr.0.i, %if.end.i.if.end34.i_crit_edge ]
  %conv.i = trunc i32 %offset_in_page.addr.1.i to i8
  %47 = ptrtoint ptr %addrs to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %conv.i, ptr %addrs, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 513, i32 %42)
  %cmp36.i = icmp ult i32 %42, 513
  br i1 %cmp36.i, label %if.end34.i.if.end254_crit_edge, label %if.end39.i

if.end34.i.if.end254_crit_edge:                   ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end254

if.end39.i:                                       ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #16
  %shr.i = lshr i32 %offset_in_page.addr.1.i, 8
  %conv40.i = trunc i32 %shr.i to i8
  %arrayidx41.i = getelementptr inbounds i8, ptr %addrs, i32 1
  %48 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_store1_noabort(i32 %48)
  store i8 %conv40.i, ptr %arrayidx41.i, align 1
  br label %if.end254

if.end254:                                        ; preds = %if.end39.i, %if.end34.i.if.end254_crit_edge
  %retval.0.i434 = phi i32 [ 2, %if.end39.i ], [ 1, %if.end34.i.if.end254_crit_edge ]
  %conv255 = trunc i32 %page to i8
  %inc = add nuw nsw i32 %retval.0.i434, 1
  %arrayidx = getelementptr [5 x i8], ptr %addrs, i32 0, i32 %retval.0.i434
  %49 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 %conv255, ptr %arrayidx, align 1
  %shr256 = lshr i32 %page, 8
  %conv257 = trunc i32 %shr256 to i8
  %inc258 = add nuw nsw i32 %retval.0.i434, 2
  %arrayidx259 = getelementptr [5 x i8], ptr %addrs, i32 0, i32 %inc
  %50 = ptrtoint ptr %arrayidx259 to i32
  call void @__asan_store1_noabort(i32 %50)
  store i8 %conv257, ptr %arrayidx259, align 1
  %51 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %options.i, align 8
  %and260 = and i32 %52, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and260)
  %tobool261.not = icmp eq i32 %and260, 0
  br i1 %tobool261.not, label %if.end254.if.end267_crit_edge, label %if.then262

if.end254.if.end267_crit_edge:                    ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end267

if.then262:                                       ; preds = %if.end254
  call void @__sanitizer_cov_trace_pc() #16
  %shr263 = lshr i32 %page, 16
  %conv264 = trunc i32 %shr263 to i8
  %inc265 = add nuw nsw i32 %retval.0.i434, 3
  %arrayidx266 = getelementptr [5 x i8], ptr %addrs, i32 0, i32 %inc258
  %53 = ptrtoint ptr %arrayidx266 to i32
  call void @__asan_store1_noabort(i32 %53)
  store i8 %conv264, ptr %arrayidx266, align 1
  br label %if.end267

if.end267:                                        ; preds = %if.then262, %if.end254.if.end267_crit_edge
  %naddrs248.0 = phi i32 [ %inc265, %if.then262 ], [ %inc258, %if.end254.if.end267_crit_edge ]
  %54 = ptrtoint ptr %ctx5 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %naddrs248.0, ptr %ctx5, align 4
  br i1 %prog, label %if.end267.if.end279_crit_edge, label %if.then272

if.end267.if.end279_crit_edge:                    ; preds = %if.end267
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end279

if.then272:                                       ; preds = %if.end267
  %55 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %35, align 4
  %sub274 = add i32 %56, -2
  store i32 %sub274, ptr %35, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool275.not = icmp eq i32 %len, 0
  br i1 %tobool275.not, label %if.then276, label %if.then272.if.end279_crit_edge

if.then272.if.end279_crit_edge:                   ; preds = %if.then272
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end279

if.then276:                                       ; preds = %if.then272
  call void @__sanitizer_cov_trace_pc() #16
  %dec = add i32 %56, -3
  %57 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %dec, ptr %35, align 4
  br label %if.end279

if.end279:                                        ; preds = %if.then276, %if.then272.if.end279_crit_edge, %if.end267.if.end279_crit_edge
  %58 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %writesize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 513, i32 %59)
  %cmp280 = icmp ult i32 %59, 513
  br i1 %cmp280, label %if.then282, label %if.else303

if.then282:                                       ; preds = %if.end279
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %offset_in_page)
  %cmp284.not = icmp ugt i32 %59, %offset_in_page
  br i1 %cmp284.not, label %if.else290, label %if.then286

if.then286:                                       ; preds = %if.then282
  call void @__sanitizer_cov_trace_pc() #16
  %ctx288 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %60 = ptrtoint ptr %ctx288 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 80, ptr %ctx288, align 4
  br label %if.end307

if.else290:                                       ; preds = %if.then282
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %offset_in_page)
  %cmp291 = icmp ugt i32 %offset_in_page, 255
  %and295 = and i32 %52, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and295)
  %tobool296.not = icmp eq i32 %and295, 0
  %or.cond = select i1 %cmp291, i1 %tobool296.not, i1 false
  br i1 %or.cond, label %if.then297, label %if.else290.if.end307_crit_edge

if.else290.if.end307_crit_edge:                   ; preds = %if.else290
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end307

if.then297:                                       ; preds = %if.else290
  call void @__sanitizer_cov_trace_pc() #16
  %ctx299 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %61 = ptrtoint ptr %ctx299 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 1, ptr %ctx299, align 4
  br label %if.end307

if.else303:                                       ; preds = %if.end279
  call void @__sanitizer_cov_trace_pc() #16
  %62 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %34, align 4
  %incdec.ptr = getelementptr %struct.nand_op_instr, ptr %63, i32 1
  store ptr %incdec.ptr, ptr %34, align 4
  %64 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %35, align 4
  %dec306 = add i32 %65, -1
  store i32 %dec306, ptr %35, align 4
  br label %if.end307

if.end307:                                        ; preds = %if.else303, %if.then297, %if.else290.if.end307_crit_edge, %if.then286
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %66 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %67, null
  br i1 %tobool.not.i.i, label %if.end307.cleanup_crit_edge, label %lor.lhs.false.i.i

if.end307.cleanup_crit_edge:                      ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.end307
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %67, i32 0, i32 1
  %68 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %69, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %69, i32 0, i32 2
  %70 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %71, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup_crit_edge, label %if.end.i435

nand_has_exec_op.exit.i.cleanup_crit_edge:        ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i435:                                      ; preds = %nand_has_exec_op.exit.i
  %72 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %op, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %74 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %73, i32 %75)
  %cmp.not.i = icmp ult i32 %73, %75
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i436, !prof !379

do.end.i436:                                      ; preds = %if.end.i435
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end24.i:                                       ; preds = %if.end.i435
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %71(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end24.i, %do.end.i436, %nand_has_exec_op.exit.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.end307.cleanup_crit_edge, %do.end.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end.i436 ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.cleanup_crit_edge ], [ -524, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -524, %if.end307.cleanup_crit_edge ], [ -22, %do.end.i ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 5, ptr nonnull %addrs) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_prog_page_end_op(ptr noundef %chip) #4 align 64 {
entry:
  %status = alloca i8, align 1
  %instrs = alloca [2 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #14
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %status, align 1, !annotation !380
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %1 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %2, null
  br i1 %tobool.not.i, label %entry.if.else226_crit_edge, label %lor.lhs.false.i

entry.if.else226_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else226

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %4, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.else226_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.else226_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else226

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %6, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.else226_crit_edge, label %if.then

nand_has_exec_op.exit.if.else226_crit_edge:       ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else226

if.then:                                          ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %7 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %instrs) #14
  %9 = getelementptr inbounds i8, ptr %instrs, i32 4
  %10 = call ptr @memset(ptr %9, i32 255, i32 32)
  %11 = ptrtoint ptr %instrs to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %instrs, align 4
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %12 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 16, ptr %ctx, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 2
  %13 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i = icmp eq i32 %14, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %8, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i.i346 = icmp eq i32 %14, 1
  %15 = getelementptr inbounds %struct.nand_interface_config, ptr %8, i32 0, i32 1, i32 1
  %retval.0.i347 = select i1 %cmp.i.i346, ptr %15, ptr inttoptr (i32 -22 to ptr)
  %tWB_max5 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i347, i32 0, i32 31
  %cond.in = select i1 %cmp.i, ptr %tWB_max, ptr %tWB_max5
  %16 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %16)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %17 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %18 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 4, ptr %arrayinit.element, align 4
  %ctx8 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %19 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %8, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i348 = icmp eq i32 %20, 0
  %tPROG_max = getelementptr inbounds %struct.nand_interface_config, ptr %8, i32 0, i32 1, i32 1, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp.i.i351 = icmp eq i32 %20, 1
  %retval.0.i352 = select i1 %cmp.i.i351, ptr %15, ptr inttoptr (i32 -22 to ptr)
  %tPROG_max16 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i352, i32 0, i32 2
  %cond18.in = select i1 %cmp.i348, ptr %tPROG_max, ptr %tPROG_max16
  %21 = ptrtoint ptr %cond18.in to i32
  call void @__asan_load8_noabort(i32 %21)
  %cond18 = load i64, ptr %cond18.in, align 8
  %sub20 = add i64 %cond18, 999999999
  %22 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub20, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %22, 0
  %asmresult4.i = extractvalue { i64, i32 } %22, 1
  %23 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub20, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %23, 0
  %extract342 = lshr i64 %asmresult10.i, 29
  %extract.t343 = trunc i64 %extract342 to i32
  %24 = ptrtoint ptr %ctx8 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %extract.t343, ptr %ctx8, align 4
  %delay_ns214 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %25 = ptrtoint ptr %delay_ns214 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %delay_ns214, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %26 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %28 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cur_cs, align 4
  %30 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %op, align 4
  %31 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %instrs, ptr %26, align 4
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 2, ptr %27, align 4
  %33 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %34, null
  br i1 %tobool2.not.i.i, label %if.then.cleanup.thread_crit_edge, label %nand_has_exec_op.exit.i

if.then.cleanup.thread_crit_edge:                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

nand_has_exec_op.exit.i:                          ; preds = %if.then
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %36, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup.thread_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.cleanup.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %37 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %38)
  %cmp.not.i = icmp ult i32 %29, %38
  br i1 %cmp.not.i, label %nand_exec_op.exit, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup.thread

nand_exec_op.exit:                                ; preds = %if.end.i
  %call25.i = call i32 %36(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool217.not = icmp eq i32 %call25.i, 0
  br i1 %tobool217.not, label %cleanup, label %nand_exec_op.exit.cleanup.thread_crit_edge

nand_exec_op.exit.cleanup.thread_crit_edge:       ; preds = %nand_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %nand_exec_op.exit.cleanup.thread_crit_edge, %do.end.i, %nand_has_exec_op.exit.i.cleanup.thread_crit_edge, %if.then.cleanup.thread_crit_edge
  %retval.0.ph = phi i32 [ %call25.i, %nand_exec_op.exit.cleanup.thread_crit_edge ], [ -524, %if.then.cleanup.thread_crit_edge ], [ -524, %nand_has_exec_op.exit.i.cleanup.thread_crit_edge ], [ -22, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %instrs) #14
  br label %cleanup240

cleanup:                                          ; preds = %nand_exec_op.exit
  %call220 = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call220)
  %tobool221.not = icmp eq i32 %call220, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %instrs) #14
  br i1 %tobool221.not, label %cleanup.if.end234_crit_edge, label %cleanup.cleanup240_crit_edge

cleanup.cleanup240_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup240

cleanup.if.end234_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end234

if.else226:                                       ; preds = %nand_has_exec_op.exit.if.else226_crit_edge, %lor.lhs.false.i.if.else226_crit_edge, %entry.if.else226_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %39 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cmdfunc, align 8
  tail call void %40(ptr noundef %chip, i32 noundef 16, i32 noundef -1, i32 noundef -1) #14
  %waitfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 10
  %41 = ptrtoint ptr %waitfunc to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %waitfunc, align 8
  %call228 = tail call i32 %42(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call228)
  %cmp229 = icmp slt i32 %call228, 0
  br i1 %cmp229, label %if.else226.cleanup240_crit_edge, label %if.end232

if.else226.cleanup240_crit_edge:                  ; preds = %if.else226
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup240

if.end232:                                        ; preds = %if.else226
  call void @__sanitizer_cov_trace_pc() #16
  %conv233 = trunc i32 %call228 to i8
  %43 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %conv233, ptr %status, align 1
  br label %if.end234

if.end234:                                        ; preds = %if.end232, %cleanup.if.end234_crit_edge
  %44 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %status, align 1
  %46 = and i8 %45, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool237.not = icmp eq i8 %46, 0
  %.344 = select i1 %tobool237.not, i32 0, i32 -5
  br label %cleanup240

cleanup240:                                       ; preds = %if.end234, %if.else226.cleanup240_crit_edge, %cleanup.cleanup240_crit_edge, %cleanup.thread
  %retval.1 = phi i32 [ %call220, %cleanup.cleanup240_crit_edge ], [ %call228, %if.else226.cleanup240_crit_edge ], [ %.344, %if.end234 ], [ %retval.0.ph, %cleanup.thread ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len) #4 align 64 {
entry:
  %status = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #14
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 -1, ptr %status, align 1, !annotation !380
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp eq ptr %buf, null
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_page
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %1 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %writesize, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %3 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %oobsize, align 4
  %add2 = add i32 %4, %2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add2)
  %cmp = icmp ugt i32 %add, %add2
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end4.if.else_crit_edge, label %lor.lhs.false.i

if.end4.if.else_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

lor.lhs.false.i:                                  ; preds = %if.end4
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.else_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.else_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.else_crit_edge, label %if.then6

nand_has_exec_op.exit.if.else_crit_edge:          ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then6:                                         ; preds = %nand_has_exec_op.exit
  %call7 = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %offset_in_page, ptr noundef nonnull %buf, i32 noundef %len, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10:                                         ; preds = %if.then6
  %call11 = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end10.if.end23_crit_edge, label %if.end10.cleanup_crit_edge

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10.if.end23_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.else:                                          ; preds = %nand_has_exec_op.exit.if.else_crit_edge, %lor.lhs.false.i.if.else_crit_edge, %if.end4.if.else_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %11 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cmdfunc, align 8
  tail call void %12(ptr noundef %chip, i32 noundef 128, i32 noundef %offset_in_page, i32 noundef %page) #14
  %write_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %13 = ptrtoint ptr %write_buf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %write_buf, align 4
  tail call void %14(ptr noundef %chip, ptr noundef nonnull %buf, i32 noundef %len) #14
  %15 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cmdfunc, align 8
  tail call void %16(ptr noundef %chip, i32 noundef 16, i32 noundef -1, i32 noundef -1) #14
  %waitfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 10
  %17 = ptrtoint ptr %waitfunc to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %waitfunc, align 8
  %call19 = tail call i32 %18(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.else.cleanup_crit_edge, label %if.end22

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end22:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %conv = trunc i32 %call19 to i8
  %19 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %conv, ptr %status, align 1
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.end10.if.end23_crit_edge
  %20 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %status, align 1
  %22 = and i8 %21, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool25.not = icmp eq i8 %22, 0
  %. = select i1 %tobool25.not, i32 0, i32 -5
  br label %cleanup

cleanup:                                          ; preds = %if.end23, %if.else.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %call7, %if.then6.cleanup_crit_edge ], [ %call11, %if.end10.cleanup_crit_edge ], [ %call19, %if.else.cleanup_crit_edge ], [ %., %if.end23 ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_change_write_column_op(ptr noundef %chip, i32 noundef %offset_in_page, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext %force_8bit) #4 align 64 {
entry:
  %addrs = alloca [2 x i8], align 1
  %instrs = alloca [3 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %force_8bit to i8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %0 = or i1 %tobool1.not, %tobool.not
  br i1 %0, label %if.end, label %entry.cleanup54_crit_edge

entry.cleanup54_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup54

if.end:                                           ; preds = %entry
  %add = add i32 %len, %offset_in_page
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %1 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %writesize, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %3 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %oobsize, align 4
  %add2 = add i32 %4, %2
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %add2)
  %cmp = icmp ugt i32 %add, %add2
  br i1 %cmp, label %if.end.cleanup54_crit_edge, label %if.end4

if.end.cleanup54_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup54

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 513, i32 %2)
  %cmp6 = icmp ult i32 %2, 513
  br i1 %cmp6, label %if.end4.cleanup54_crit_edge, label %if.end8

if.end4.cleanup54_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup54

if.end8:                                          ; preds = %if.end4
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %if.end8.if.end49_crit_edge, label %lor.lhs.false.i

if.end8.if.end49_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

lor.lhs.false.i:                                  ; preds = %if.end8
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end49_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end49_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end49_crit_edge, label %if.then10

nand_has_exec_op.exit.if.end49_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then10:                                        ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %11 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %addrs) #14
  %13 = ptrtoint ptr %addrs to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 -1, ptr %addrs, align 1, !annotation !380
  %14 = getelementptr inbounds [2 x i8], ptr %addrs, i32 0, i32 1
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 -1, ptr %14, align 1, !annotation !380
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %instrs) #14
  %16 = getelementptr inbounds i8, ptr %instrs, i32 32
  %17 = call ptr @memset(ptr %16, i32 255, i32 24)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %18 = call ptr @memset(ptr %instrs, i32 0, i32 20)
  %19 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 -123, ptr %ctx, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %20 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %arrayinit.element, align 4
  %ctx13 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %21 = ptrtoint ptr %ctx13 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 2, ptr %ctx13, align 4
  %addrs14 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %22 = ptrtoint ptr %addrs14 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %addrs, ptr %addrs14, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %23 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp.i = icmp eq i32 %24, 0
  %tCCS_min = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %24)
  %cmp.i.i79 = icmp eq i32 %24, 1
  %25 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1
  %retval.0.i80 = select i1 %cmp.i.i79, ptr %25, ptr inttoptr (i32 -22 to ptr)
  %tCCS_min18 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i80, i32 0, i32 1
  %cond.in = select i1 %cmp.i, ptr %tCCS_min, ptr %tCCS_min18
  %26 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %26)
  %cond = load i32, ptr %cond.in, align 8
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %27 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element21 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %28 = ptrtoint ptr %arrayinit.element21 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 3, ptr %arrayinit.element21, align 4
  %ctx23 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %29 = ptrtoint ptr %ctx23 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %len, ptr %ctx23, align 4
  %buf25 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %buf25 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %buf, ptr %buf25, align 4
  %force_8bit26 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1, i32 0, i32 2
  %31 = ptrtoint ptr %force_8bit26 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 0, ptr %force_8bit26, align 4
  %delay_ns27 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %32 = ptrtoint ptr %delay_ns27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %delay_ns27, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %33 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %34 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %35 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cur_cs, align 4
  %37 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %op, align 4
  %38 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %instrs, ptr %33, align 4
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 3, ptr %34, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add2, i32 %offset_in_page)
  %cmp.i81 = icmp ult i32 %add2, %offset_in_page
  br i1 %cmp.i81, label %if.then10.cleanup_crit_edge, label %if.end.i

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %if.then10
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %40 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %options.i, align 8
  %and.i = and i32 %41, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i82 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i82, label %if.end.i.if.end35_crit_edge, label %if.then8.i

if.end.i.if.end35_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then8.i:                                       ; preds = %if.end.i
  %rem.i = and i32 %offset_in_page, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool9.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool9.not.i, label %if.end33.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 1112, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end33.i:                                       ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  %div56.i = lshr i32 %offset_in_page, 1
  br label %if.end35

if.end35:                                         ; preds = %if.end33.i, %if.end.i.if.end35_crit_edge
  %offset_in_page.addr.1.i = phi i32 [ %div56.i, %if.end33.i ], [ %offset_in_page, %if.end.i.if.end35_crit_edge ]
  %conv.i = trunc i32 %offset_in_page.addr.1.i to i8
  %42 = ptrtoint ptr %addrs to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %conv.i, ptr %addrs, align 1
  %shr.i = lshr i32 %offset_in_page.addr.1.i, 8
  %conv40.i = trunc i32 %shr.i to i8
  %43 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %conv40.i, ptr %14, align 1
  %44 = ptrtoint ptr %force_8bit26 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %frombool, ptr %force_8bit26, align 4
  br i1 %tobool.not, label %if.then41, label %if.end35.if.end43_crit_edge

if.end35.if.end43_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43

if.then41:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %34, align 4
  %dec = add i32 %46, -1
  store i32 %dec, ptr %34, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %if.end35.if.end43_crit_edge
  %47 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i = icmp eq ptr %48, null
  br i1 %tobool.not.i.i, label %if.end43.cleanup_crit_edge, label %lor.lhs.false.i.i

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i.i:                                ; preds = %if.end43
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %50, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.cleanup_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.cleanup_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %50, i32 0, i32 2
  %51 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %52, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup_crit_edge, label %if.end.i84

nand_has_exec_op.exit.i.cleanup_crit_edge:        ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i84:                                       ; preds = %nand_has_exec_op.exit.i
  %53 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %op, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %55 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %54, i32 %56)
  %cmp.not.i = icmp ult i32 %54, %56
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i85, !prof !379

do.end.i85:                                       ; preds = %if.end.i84
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end24.i:                                       ; preds = %if.end.i84
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %52(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end24.i, %do.end.i85, %nand_has_exec_op.exit.i.cleanup_crit_edge, %lor.lhs.false.i.i.cleanup_crit_edge, %if.end43.cleanup_crit_edge, %do.end.i, %if.then10.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end.i85 ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.cleanup_crit_edge ], [ -524, %lor.lhs.false.i.i.cleanup_crit_edge ], [ -524, %if.end43.cleanup_crit_edge ], [ -22, %do.end.i ], [ -22, %if.then10.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %addrs) #14
  br label %cleanup54

if.end49:                                         ; preds = %nand_has_exec_op.exit.if.end49_crit_edge, %lor.lhs.false.i.if.end49_crit_edge, %if.end8.if.end49_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %57 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %cmdfunc, align 8
  tail call void %58(ptr noundef %chip, i32 noundef 133, i32 noundef %offset_in_page, i32 noundef -1) #14
  br i1 %tobool.not, label %if.end49.cleanup54_crit_edge, label %if.then51

if.end49.cleanup54_crit_edge:                     ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup54

if.then51:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  %write_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %59 = ptrtoint ptr %write_buf to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %write_buf, align 4
  tail call void %60(ptr noundef %chip, ptr noundef %buf, i32 noundef %len) #14
  br label %cleanup54

cleanup54:                                        ; preds = %if.then51, %if.end49.cleanup54_crit_edge, %cleanup, %if.end4.cleanup54_crit_edge, %if.end.cleanup54_crit_edge, %entry.cleanup54_crit_edge
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ -22, %entry.cleanup54_crit_edge ], [ -22, %if.end.cleanup54_crit_edge ], [ -524, %if.end4.cleanup54_crit_edge ], [ 0, %if.then51 ], [ 0, %if.end49.cleanup54_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_readid_op(ptr noundef %chip, i8 noundef zeroext %addr, ptr noundef %buf, i32 noundef %len) #4 align 64 {
entry:
  %addr.addr = alloca i8, align 1
  %instrs = alloca [3 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %addr.addr to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 %addr, ptr %addr.addr, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp ne ptr %buf, null
  %1 = or i1 %tobool1.not, %tobool.not
  br i1 %1, label %if.end, label %entry.cleanup66_crit_edge

entry.cleanup66_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup66

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %2 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.if.end54_crit_edge, label %lor.lhs.false.i

if.end.if.end54_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

lor.lhs.false.i:                                  ; preds = %if.end
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end54_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end54_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %7, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end54_crit_edge, label %if.then2

nand_has_exec_op.exit.if.end54_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end54

if.then2:                                         ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %8 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 60, ptr nonnull %instrs) #14
  %10 = getelementptr inbounds i8, ptr %instrs, i32 32
  %11 = call ptr @memset(ptr %10, i32 255, i32 24)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %12 = call ptr @memset(ptr %instrs, i32 0, i32 20)
  %13 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 -112, ptr %ctx, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %14 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 1, ptr %arrayinit.element, align 4
  %ctx5 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %15 = ptrtoint ptr %ctx5 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %ctx5, align 4
  %addrs = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %16 = ptrtoint ptr %addrs to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %addr.addr, ptr %addrs, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %17 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i = icmp eq i32 %18, 0
  %tADL_min = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1, i32 0, i32 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i.i101 = icmp eq i32 %18, 1
  %19 = getelementptr inbounds %struct.nand_interface_config, ptr %9, i32 0, i32 1, i32 1
  %retval.0.i102 = select i1 %cmp.i.i101, ptr %19, ptr inttoptr (i32 -22 to ptr)
  %tADL_min9 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i102, i32 0, i32 6
  %cond.in = select i1 %cmp.i, ptr %tADL_min, ptr %tADL_min9
  %20 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %20)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %21 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element11 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %22 = ptrtoint ptr %arrayinit.element11 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 2, ptr %arrayinit.element11, align 4
  %ctx13 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %23 = ptrtoint ptr %ctx13 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %len, ptr %ctx13, align 4
  %buf15 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1, i32 0, i32 1
  %24 = ptrtoint ptr %buf15 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %buf, ptr %buf15, align 4
  %force_8bit = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1, i32 0, i32 2
  %25 = ptrtoint ptr %force_8bit to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 1, ptr %force_8bit, align 4
  %delay_ns16 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %26 = ptrtoint ptr %delay_ns16 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %delay_ns16, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %28 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %29 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cur_cs, align 4
  %31 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %op, align 4
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %instrs, ptr %27, align 4
  %33 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 3, ptr %28, align 4
  br i1 %tobool.not, label %if.then35, label %land.lhs.true19

land.lhs.true19:                                  ; preds = %if.then2
  %34 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp.i103 = icmp eq i32 %35, 1
  br i1 %cmp.i103, label %if.end8.i.i, label %land.lhs.true19.if.end37_crit_edge

land.lhs.true19.if.end37_crit_edge:               ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

if.end8.i.i:                                      ; preds = %land.lhs.true19
  %mul = shl i32 %len, 1
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %mul, i32 noundef 3520) #17
  %tobool24.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool24.not, label %if.end8.i.i.cleanup_crit_edge, label %if.end26

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26:                                         ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %ctx13 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ctx13, align 4
  %mul29 = shl i32 %37, 1
  store i32 %mul29, ptr %ctx13, align 4
  %38 = ptrtoint ptr %buf15 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call9.i.i, ptr %buf15, align 4
  br label %if.end37

if.then35:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %28, align 4
  %dec = add i32 %40, -1
  store i32 %dec, ptr %28, align 4
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end26, %land.lhs.true19.if.end37_crit_edge
  %ddrbuf.0113 = phi ptr [ null, %if.then35 ], [ null, %land.lhs.true19.if.end37_crit_edge ], [ %call9.i.i, %if.end26 ]
  %41 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %controller.i, align 4
  %tobool.not.i.i = icmp eq ptr %42, null
  br i1 %tobool.not.i.i, label %if.end37.if.end50_crit_edge, label %lor.lhs.false.i.i

if.end37.if.end50_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

lor.lhs.false.i.i:                                ; preds = %if.end37
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %44, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end50_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end50_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %44, i32 0, i32 2
  %45 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %46, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end50_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.if.end50_crit_edge:       ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %47 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %op, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %49 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %50)
  %cmp.not.i = icmp ult i32 %48, %50
  br i1 %cmp.not.i, label %nand_exec_op.exit, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %if.end50

nand_exec_op.exit:                                ; preds = %if.end.i
  %call25.i = call i32 %46(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool39.not = icmp ne i32 %call25.i, 0
  %brmerge = or i1 %tobool.not, %tobool39.not
  br i1 %brmerge, label %nand_exec_op.exit.if.end50_crit_edge, label %land.lhs.true42

nand_exec_op.exit.if.end50_crit_edge:             ; preds = %nand_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

land.lhs.true42:                                  ; preds = %nand_exec_op.exit
  %51 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %9, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i107 = icmp eq i32 %52, 1
  br i1 %cmp.i107, label %land.lhs.true42.for.body_crit_edge, label %land.lhs.true42.if.end50_crit_edge

land.lhs.true42.if.end50_crit_edge:               ; preds = %land.lhs.true42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

land.lhs.true42.for.body_crit_edge:               ; preds = %land.lhs.true42
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %land.lhs.true42.for.body_crit_edge
  %i.0120 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %land.lhs.true42.for.body_crit_edge ]
  %mul47 = shl i32 %i.0120, 1
  %arrayidx48 = getelementptr i8, ptr %ddrbuf.0113, i32 %mul47
  %53 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx48, align 2
  %arrayidx49 = getelementptr i8, ptr %buf, i32 %i.0120
  %55 = ptrtoint ptr %arrayidx49 to i32
  call void @__asan_store1_noabort(i32 %55)
  store i8 %54, ptr %arrayidx49, align 1
  %inc = add nuw i32 %i.0120, 1
  %exitcond.not = icmp eq i32 %inc, %len
  br i1 %exitcond.not, label %for.body.if.end50_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.if.end50_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end50:                                         ; preds = %for.body.if.end50_crit_edge, %land.lhs.true42.if.end50_crit_edge, %nand_exec_op.exit.if.end50_crit_edge, %do.end.i, %nand_has_exec_op.exit.i.if.end50_crit_edge, %lor.lhs.false.i.i.if.end50_crit_edge, %if.end37.if.end50_crit_edge
  %retval.0.i106118 = phi i32 [ %call25.i, %nand_exec_op.exit.if.end50_crit_edge ], [ 0, %land.lhs.true42.if.end50_crit_edge ], [ -524, %if.end37.if.end50_crit_edge ], [ -524, %lor.lhs.false.i.i.if.end50_crit_edge ], [ -524, %nand_has_exec_op.exit.i.if.end50_crit_edge ], [ -22, %do.end.i ], [ 0, %for.body.if.end50_crit_edge ]
  call void @kfree(ptr noundef %ddrbuf.0113) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.end8.i.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i106118, %if.end50 ], [ -12, %if.end8.i.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 60, ptr nonnull %instrs) #14
  br label %cleanup66

if.end54:                                         ; preds = %nand_has_exec_op.exit.if.end54_crit_edge, %lor.lhs.false.i.if.end54_crit_edge, %if.end.if.end54_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %56 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cmdfunc, align 8
  %conv55 = zext i8 %addr to i32
  tail call void %57(ptr noundef %chip, i32 noundef 144, i32 noundef %conv55, i32 noundef -1) #14
  br i1 %tobool.not, label %if.end54.cleanup66_crit_edge, label %for.body59.lr.ph

if.end54.cleanup66_crit_edge:                     ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup66

for.body59.lr.ph:                                 ; preds = %if.end54
  %read_byte = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 3
  br label %for.body59

for.body59:                                       ; preds = %for.body59.for.body59_crit_edge, %for.body59.lr.ph
  %i.1122 = phi i32 [ 0, %for.body59.lr.ph ], [ %inc64, %for.body59.for.body59_crit_edge ]
  %58 = ptrtoint ptr %read_byte to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %read_byte, align 4
  %call61 = tail call zeroext i8 %59(ptr noundef %chip) #14
  %arrayidx62 = getelementptr i8, ptr %buf, i32 %i.1122
  %60 = ptrtoint ptr %arrayidx62 to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %call61, ptr %arrayidx62, align 1
  %inc64 = add nuw i32 %i.1122, 1
  %exitcond123.not = icmp eq i32 %inc64, %len
  br i1 %exitcond123.not, label %for.body59.cleanup66_crit_edge, label %for.body59.for.body59_crit_edge

for.body59.for.body59_crit_edge:                  ; preds = %for.body59
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body59

for.body59.cleanup66_crit_edge:                   ; preds = %for.body59
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup66

cleanup66:                                        ; preds = %for.body59.cleanup66_crit_edge, %if.end54.cleanup66_crit_edge, %cleanup, %entry.cleanup66_crit_edge
  %retval.1 = phi i32 [ %retval.0, %cleanup ], [ -22, %entry.cleanup66_crit_edge ], [ 0, %if.end54.cleanup66_crit_edge ], [ 0, %for.body59.cleanup66_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_erase_op(ptr noundef %chip, i32 noundef %eraseblock) #4 align 64 {
entry:
  %status = alloca i8, align 1
  %addrs = alloca [3 x i8], align 1
  %instrs = alloca [4 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %phys_erase_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 18
  %0 = ptrtoint ptr %phys_erase_shift to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %phys_erase_shift, align 8
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %2 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %page_shift, align 4
  %sub = sub i32 %1, %3
  %shl = shl i32 %eraseblock, %sub
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status) #14
  %4 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 -1, ptr %status, align 1, !annotation !380
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %6, null
  br i1 %tobool.not.i, label %entry.if.else254_crit_edge, label %lor.lhs.false.i

entry.if.else254_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else254

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.else254_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.else254_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else254

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.else254_crit_edge, label %if.then

nand_has_exec_op.exit.if.else254_crit_edge:       ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else254

if.then:                                          ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %11 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 3, ptr nonnull %addrs) #14
  %13 = getelementptr inbounds [3 x i8], ptr %addrs, i32 0, i32 1
  %14 = getelementptr inbounds [3 x i8], ptr %addrs, i32 0, i32 2
  %conv = trunc i32 %shl to i8
  %15 = ptrtoint ptr %addrs to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %conv, ptr %addrs, align 1
  %shr = lshr i32 %shl, 8
  %conv2 = trunc i32 %shr to i8
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %conv2, ptr %13, align 1
  %shr4 = lshr i32 %shl, 16
  %conv5 = trunc i32 %shr4 to i8
  %17 = ptrtoint ptr %14 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv5, ptr %14, align 1
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs) #14
  %18 = getelementptr inbounds i8, ptr %instrs, i32 32
  %19 = call ptr @memset(ptr %18, i32 255, i32 44)
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %20 = call ptr @memset(ptr %instrs, i32 0, i32 20)
  %21 = ptrtoint ptr %ctx to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 96, ptr %ctx, align 4
  %arrayinit.element7 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %22 = ptrtoint ptr %arrayinit.element7 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %arrayinit.element7, align 4
  %ctx9 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %23 = ptrtoint ptr %ctx9 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2, ptr %ctx9, align 4
  %addrs10 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1, i32 0, i32 1
  %24 = ptrtoint ptr %addrs10 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %addrs, ptr %addrs10, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %25 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %delay_ns, align 4
  %arrayinit.element11 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2
  %26 = ptrtoint ptr %arrayinit.element11 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %arrayinit.element11, align 4
  %ctx13 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 1
  %27 = ptrtoint ptr %ctx13 to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 -48, ptr %ctx13, align 4
  %delay_ns15 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 2, i32 2
  %28 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp.i = icmp eq i32 %29, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp.i.i385 = icmp eq i32 %29, 1
  %30 = getelementptr inbounds %struct.nand_interface_config, ptr %12, i32 0, i32 1, i32 1
  %retval.0.i386 = select i1 %cmp.i.i385, ptr %30, ptr inttoptr (i32 -22 to ptr)
  %tWB_max20 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i386, i32 0, i32 31
  %cond.in = select i1 %cmp.i, ptr %tWB_max, ptr %tWB_max20
  %31 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %31)
  %cond = load i32, ptr %cond.in, align 4
  %sub21 = add i32 %cond, 999
  %div = udiv i32 %sub21, 1000
  %32 = ptrtoint ptr %delay_ns15 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %div, ptr %delay_ns15, align 4
  %arrayinit.element24 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3
  %33 = ptrtoint ptr %arrayinit.element24 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 4, ptr %arrayinit.element24, align 4
  %ctx26 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 1
  %34 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %12, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %35)
  %36 = icmp ult i32 %35, 2
  %cond36.in = select i1 %36, ptr %30, ptr inttoptr (i32 -22 to ptr)
  %37 = ptrtoint ptr %cond36.in to i32
  call void @__asan_load8_noabort(i32 %37)
  %cond36 = load i64, ptr %cond36.in, align 8
  %sub38 = add i64 %cond36, 999999999
  %38 = call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub38, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %38, 0
  %asmresult4.i = extractvalue { i64, i32 } %38, 1
  %39 = call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub38, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %39, 0
  %extract381 = lshr i64 %asmresult10.i, 29
  %extract.t382 = trunc i64 %extract381 to i32
  %40 = ptrtoint ptr %ctx26 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %extract.t382, ptr %ctx26, align 4
  %delay_ns234 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 3, i32 2
  %41 = ptrtoint ptr %delay_ns234 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %delay_ns234, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %42 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %43 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %44 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cur_cs, align 4
  %46 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %op, align 4
  %47 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %instrs, ptr %42, align 4
  %48 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 4, ptr %43, align 4
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %49 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %options, align 8
  %and237 = and i32 %50, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and237)
  %tobool238.not = icmp eq i32 %and237, 0
  br i1 %tobool238.not, label %if.then.lor.lhs.false.i.i_crit_edge, label %if.then239

if.then.lor.lhs.false.i.i_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i.i

if.then239:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %51 = ptrtoint ptr %ctx9 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %ctx9, align 4
  %inc = add i32 %52, 1
  store i32 %inc, ptr %ctx9, align 4
  br label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %if.then239, %if.then.lor.lhs.false.i.i_crit_edge
  %53 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %54, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.cleanup.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.cleanup.thread_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %54, i32 0, i32 2
  %55 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %56, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.cleanup.thread_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.cleanup.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %57 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %45, i32 %58)
  %cmp.not.i = icmp ult i32 %45, %58
  br i1 %cmp.not.i, label %nand_exec_op.exit, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %cleanup.thread

nand_exec_op.exit:                                ; preds = %if.end.i
  %call25.i = call i32 %56(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i)
  %tobool244.not = icmp eq i32 %call25.i, 0
  br i1 %tobool244.not, label %cleanup, label %nand_exec_op.exit.cleanup.thread_crit_edge

nand_exec_op.exit.cleanup.thread_crit_edge:       ; preds = %nand_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %nand_exec_op.exit.cleanup.thread_crit_edge, %do.end.i, %nand_has_exec_op.exit.i.cleanup.thread_crit_edge, %lor.lhs.false.i.i.cleanup.thread_crit_edge
  %retval.0.ph = phi i32 [ %call25.i, %nand_exec_op.exit.cleanup.thread_crit_edge ], [ -524, %lor.lhs.false.i.i.cleanup.thread_crit_edge ], [ -524, %nand_has_exec_op.exit.i.cleanup.thread_crit_edge ], [ -22, %do.end.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %addrs) #14
  br label %cleanup270

cleanup:                                          ; preds = %nand_exec_op.exit
  %call247 = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call247)
  %tobool248.not = icmp eq i32 %call247, 0
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs) #14
  call void @llvm.lifetime.end.p0(i64 3, ptr nonnull %addrs) #14
  br i1 %tobool248.not, label %cleanup.if.end264_crit_edge, label %cleanup.cleanup270_crit_edge

cleanup.cleanup270_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup270

cleanup.if.end264_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end264

if.else254:                                       ; preds = %nand_has_exec_op.exit.if.else254_crit_edge, %lor.lhs.false.i.if.else254_crit_edge, %entry.if.else254_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %59 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %cmdfunc, align 8
  tail call void %60(ptr noundef %chip, i32 noundef 96, i32 noundef -1, i32 noundef %shl) #14
  %61 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %cmdfunc, align 8
  tail call void %62(ptr noundef %chip, i32 noundef 208, i32 noundef -1, i32 noundef -1) #14
  %waitfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 10
  %63 = ptrtoint ptr %waitfunc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %waitfunc, align 8
  %call258 = tail call i32 %64(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call258)
  %cmp259 = icmp slt i32 %call258, 0
  br i1 %cmp259, label %if.else254.cleanup270_crit_edge, label %if.end262

if.else254.cleanup270_crit_edge:                  ; preds = %if.else254
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup270

if.end262:                                        ; preds = %if.else254
  call void @__sanitizer_cov_trace_pc() #16
  %conv263 = trunc i32 %call258 to i8
  %65 = ptrtoint ptr %status to i32
  call void @__asan_store1_noabort(i32 %65)
  store i8 %conv263, ptr %status, align 1
  br label %if.end264

if.end264:                                        ; preds = %if.end262, %cleanup.if.end264_crit_edge
  %66 = ptrtoint ptr %status to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %status, align 1
  %68 = and i8 %67, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %68)
  %tobool267.not = icmp eq i8 %68, 0
  %.383 = select i1 %tobool267.not, i32 0, i32 -5
  br label %cleanup270

cleanup270:                                       ; preds = %if.end264, %if.else254.cleanup270_crit_edge, %cleanup.cleanup270_crit_edge, %cleanup.thread
  %retval.1 = phi i32 [ %call247, %cleanup.cleanup270_crit_edge ], [ %call258, %if.else254.cleanup270_crit_edge ], [ %.383, %if.end264 ], [ %retval.0.ph, %cleanup.thread ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status) #14
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_reset_op(ptr noundef %chip) #4 align 64 {
entry:
  %instrs = alloca [2 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.end218_crit_edge, label %lor.lhs.false.i

entry.if.end218_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end218

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end218_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end218_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end218

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %5, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end218_crit_edge, label %if.then

nand_has_exec_op.exit.if.end218_crit_edge:        ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end218

if.then:                                          ; preds = %nand_has_exec_op.exit
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %6 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %current_interface_config.i, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %instrs) #14
  %8 = getelementptr inbounds i8, ptr %instrs, i32 4
  %9 = call ptr @memset(ptr %8, i32 255, i32 32)
  %10 = ptrtoint ptr %instrs to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %instrs, align 4
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 2
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.i = icmp eq i32 %12, 0
  %tWB_max = getelementptr inbounds %struct.nand_interface_config, ptr %7, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %12)
  %cmp.i.i312 = icmp eq i32 %12, 1
  %13 = getelementptr inbounds %struct.nand_interface_config, ptr %7, i32 0, i32 1, i32 1
  %retval.0.i313 = select i1 %cmp.i.i312, ptr %13, ptr inttoptr (i32 -22 to ptr)
  %tWB_max5 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i313, i32 0, i32 31
  %cond.in = select i1 %cmp.i, ptr %tWB_max, ptr %tWB_max5
  %14 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %14)
  %cond = load i32, ptr %cond.in, align 4
  %sub = add i32 %cond, 999
  %div = udiv i32 %sub, 1000
  %15 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %div, ptr %delay_ns, align 4
  %arrayinit.element = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1
  %16 = ptrtoint ptr %arrayinit.element to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 4, ptr %arrayinit.element, align 4
  %ctx8 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 1
  %17 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %7, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp.i314 = icmp eq i32 %18, 0
  br i1 %cmp.i314, label %cond.true12, label %cond.false14

cond.true12:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %tRST_max = getelementptr inbounds %struct.nand_interface_config, ptr %7, i32 0, i32 1, i32 1, i32 0, i32 31
  %19 = ptrtoint ptr %tRST_max to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %tRST_max, align 8
  br label %lor.lhs.false.i.i

cond.false14:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %18)
  %cmp.i.i317 = icmp eq i32 %18, 1
  %retval.0.i318 = select i1 %cmp.i.i317, ptr %13, ptr inttoptr (i32 -22 to ptr)
  %tRST_max16 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i318, i32 0, i32 30
  %21 = ptrtoint ptr %tRST_max16 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tRST_max16, align 8
  %conv17 = zext i32 %22 to i64
  br label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %cond.false14, %cond.true12
  %cond19 = phi i64 [ %20, %cond.true12 ], [ %conv17, %cond.false14 ]
  %sub21 = add i64 %cond19, 999999999
  %23 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub21, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %23, 0
  %asmresult4.i = extractvalue { i64, i32 } %23, 1
  %24 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub21, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %24, 0
  %extract309 = lshr i64 %asmresult10.i, 29
  %extract.t310 = trunc i64 %extract309 to i32
  %25 = ptrtoint ptr %ctx8 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %extract.t310, ptr %ctx8, align 4
  %delay_ns215 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 1, i32 2
  %26 = ptrtoint ptr %delay_ns215 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %delay_ns215, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %28 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %29 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cur_cs, align 4
  %31 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %op, align 4
  %32 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %instrs, ptr %27, align 4
  %33 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 2, ptr %28, align 4
  %34 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %35, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_exec_op.exit_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %35, i32 0, i32 2
  %36 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %37, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %38 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %39)
  %cmp.not.i = icmp ult i32 %30, %39
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit

if.end24.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %37(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit

nand_exec_op.exit:                                ; preds = %if.end24.i, %do.end.i, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge
  %retval.0.i320 = phi i32 [ -22, %do.end.i ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge ], [ -524, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %instrs) #14
  br label %return

if.end218:                                        ; preds = %nand_has_exec_op.exit.if.end218_crit_edge, %lor.lhs.false.i.if.end218_crit_edge, %entry.if.end218_crit_edge
  %cmdfunc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %40 = ptrtoint ptr %cmdfunc to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %cmdfunc, align 8
  tail call void %41(ptr noundef %chip, i32 noundef 255, i32 noundef -1, i32 noundef -1) #14
  br label %return

return:                                           ; preds = %if.end218, %nand_exec_op.exit
  %retval.0 = phi i32 [ %retval.0.i320, %nand_exec_op.exit ], [ 0, %if.end218 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_write_data_op(ptr noundef %chip, ptr noundef %buf, i32 noundef %len, i1 noundef zeroext %force_8bit) #4 align 64 {
entry:
  %instrs = alloca [1 x %struct.nand_op_instr], align 4
  %op = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %force_8bit to i8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not = icmp eq i32 %len, 0
  %tobool1.not = icmp eq ptr %buf, null
  %or.cond = or i1 %tobool1.not, %tobool.not
  br i1 %or.cond, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.if.end12_crit_edge, label %lor.lhs.false.i

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

lor.lhs.false.i:                                  ; preds = %if.end
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.if.end12_crit_edge, label %nand_has_exec_op.exit

lor.lhs.false.i.if.end12_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

nand_has_exec_op.exit:                            ; preds = %lor.lhs.false.i
  %exec_op.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %exec_op.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %exec_op.i, align 4
  %tobool6.not.i.not = icmp eq ptr %5, null
  br i1 %tobool6.not.i.not, label %nand_has_exec_op.exit.if.end12_crit_edge, label %lor.lhs.false.i.i

nand_has_exec_op.exit.if.end12_crit_edge:         ; preds = %nand_has_exec_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

lor.lhs.false.i.i:                                ; preds = %nand_has_exec_op.exit
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs) #14
  %6 = getelementptr inbounds i8, ptr %instrs, i32 12
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %6, align 4
  %8 = ptrtoint ptr %instrs to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 3, ptr %instrs, align 4
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1
  %9 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %len, ptr %ctx, align 4
  %buf4 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %buf4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %buf, ptr %buf4, align 4
  %force_8bit5 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 1, i32 0, i32 2
  %delay_ns = getelementptr inbounds %struct.nand_op_instr, ptr %instrs, i32 0, i32 2
  %11 = ptrtoint ptr %delay_ns to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %delay_ns, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op) #14
  %12 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %13 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %cur_cs = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %14 = ptrtoint ptr %cur_cs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cur_cs, align 4
  %16 = ptrtoint ptr %op to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %op, align 4
  %17 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %instrs, ptr %12, align 4
  %18 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 1, ptr %13, align 4
  %19 = ptrtoint ptr %force_8bit5 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %frombool, ptr %force_8bit5, align 4
  %20 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i.i = icmp eq ptr %21, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_exec_op.exit_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %23, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, label %if.end.i

nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %24 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %25)
  %cmp.not.i = icmp ult i32 %15, %25
  br i1 %cmp.not.i, label %if.end24.i, label %do.end.i, !prof !379

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit

if.end24.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i = call i32 %23(ptr noundef %chip, ptr noundef nonnull %op, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit

nand_exec_op.exit:                                ; preds = %if.end24.i, %do.end.i, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge
  %retval.0.i34 = phi i32 [ -22, %do.end.i ], [ %call25.i, %if.end24.i ], [ -524, %nand_has_exec_op.exit.i.nand_exec_op.exit_crit_edge ], [ -524, %lor.lhs.false.i.i.nand_exec_op.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs) #14
  br label %return

if.end12:                                         ; preds = %nand_has_exec_op.exit.if.end12_crit_edge, %lor.lhs.false.i.if.end12_crit_edge, %if.end.if.end12_crit_edge
  br i1 %force_8bit, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %if.end12
  %write_byte = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 4
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.037 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %26 = ptrtoint ptr %write_byte to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %write_byte, align 8
  %arrayidx15 = getelementptr i8, ptr %buf, i32 %i.037
  %28 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %arrayidx15, align 1
  tail call void %27(ptr noundef %chip, i8 noundef zeroext %29) #14
  %inc = add nuw i32 %i.037, 1
  %exitcond.not = icmp eq i32 %inc, %len
  br i1 %exitcond.not, label %for.body.return_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.return_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.else:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %write_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %30 = ptrtoint ptr %write_buf to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %write_buf, align 4
  tail call void %31(ptr noundef %chip, ptr noundef nonnull %buf, i32 noundef %len) #14
  br label %return

return:                                           ; preds = %if.else, %for.body.return_crit_edge, %nand_exec_op.exit, %entry.return_crit_edge
  %retval.0 = phi i32 [ %retval.0.i34, %nand_exec_op.exit ], [ -22, %entry.return_crit_edge ], [ 0, %if.else ], [ 0, %for.body.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_op_parser_exec_op(ptr noundef %chip, ptr nocapture noundef readonly %parser, ptr nocapture noundef readonly %op, i1 noundef zeroext %check_only) #4 align 64 {
entry:
  %ctx = alloca %struct.nand_op_parser_ctx, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %ctx) #14
  %0 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 1
  %1 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 2
  %2 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 2, i32 1
  %3 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 2, i32 2
  %4 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 2, i32 3
  %5 = getelementptr inbounds %struct.nand_op_parser_ctx, ptr %ctx, i32 0, i32 2, i32 4
  %instrs1 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 1
  %6 = ptrtoint ptr %instrs1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %instrs1, align 4
  %8 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %ctx, align 4
  %ninstrs2 = getelementptr inbounds %struct.nand_operation, ptr %op, i32 0, i32 2
  %9 = ptrtoint ptr %ninstrs2 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ninstrs2, align 4
  %11 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %0, align 4
  %12 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %op, align 4
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %1, align 4
  %15 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %7, ptr %2, align 4
  %16 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %3, align 4
  %17 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %4, align 4
  %18 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %5, align 4
  %add.ptr165 = getelementptr %struct.nand_op_instr, ptr %7, i32 %10
  %cmp166 = icmp ult ptr %7, %add.ptr165
  br i1 %cmp166, label %for.cond.preheader.lr.ph, label %entry.cleanup61_crit_edge

entry.cleanup61_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup61

for.cond.preheader.lr.ph:                         ; preds = %entry
  %npatterns = getelementptr inbounds %struct.nand_op_parser, ptr %parser, i32 0, i32 1
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end50.for.cond.preheader_crit_edge, %for.cond.preheader.lr.ph
  %19 = ptrtoint ptr %npatterns to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %npatterns, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp11123.not = icmp eq i32 %20, 0
  br i1 %cmp11123.not, label %for.cond.preheader.do.body_crit_edge, label %for.body.lr.ph

for.cond.preheader.do.body_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %21 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %21)
  %test_ctx.sroa.0.0.copyload = load ptr, ptr %ctx, align 4
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %22)
  %test_ctx.sroa.6.0.copyload = load i32, ptr %0, align 4
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %test_ctx.sroa.8.0.copyload = load i32, ptr %1, align 4
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %test_ctx.sroa.9.0.copyload = load ptr, ptr %2, align 4
  %25 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %test_ctx.sroa.14.0.copyload = load i32, ptr %4, align 4
  %26 = ptrtoint ptr %parser to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %parser, align 4
  %add.ptr.i = getelementptr %struct.nand_op_instr, ptr %test_ctx.sroa.0.0.copyload, i32 %test_ctx.sroa.6.0.copyload
  %cmp479.i = icmp ult ptr %test_ctx.sroa.9.0.copyload, %add.ptr.i
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %i.0156 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %cleanup.for.body_crit_edge ]
  %best_pattern.0152 = phi i32 [ -1, %for.body.lr.ph ], [ %best_pattern.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.0.0148 = phi ptr [ inttoptr (i32 -1 to ptr), %for.body.lr.ph ], [ %best_ctx.sroa.0.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.5.0144 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ctx.sroa.5.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.7.0140 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ctx.sroa.7.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.9.0136 = phi ptr [ inttoptr (i32 -1 to ptr), %for.body.lr.ph ], [ %best_ctx.sroa.9.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.11.0132 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ctx.sroa.11.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.14.0128 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ctx.sroa.14.1, %cleanup.for.body_crit_edge ]
  %best_ctx.sroa.16.0124 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ctx.sroa.16.1, %cleanup.for.body_crit_edge ]
  %nelems.i = getelementptr %struct.nand_op_parser_pattern, ptr %27, i32 %i.0156, i32 1
  %28 = ptrtoint ptr %nelems.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nelems.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp78.i = icmp ne i32 %29, 0
  %or.cond80.i = select i1 %cmp78.i, i1 %cmp479.i, i1 false
  br i1 %or.cond80.i, label %for.body.lr.ph.i, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph.i:                                 ; preds = %for.body
  %arrayidx = getelementptr %struct.nand_op_parser_pattern, ptr %27, i32 %i.0156
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %ninstrs3.087.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %ninstrs3.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.084.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc17.i, %for.inc.i.for.body.i_crit_edge ]
  %instr.082.i = phi ptr [ %test_ctx.sroa.9.0.copyload, %for.body.lr.ph.i ], [ %instr.1.i, %for.inc.i.for.body.i_crit_edge ]
  %instr_offset.081.i = phi i32 [ %test_ctx.sroa.14.0.copyload, %for.body.lr.ph.i ], [ %instr_offset.2.i, %for.inc.i.for.body.i_crit_edge ]
  %32 = ptrtoint ptr %instr.082.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %instr.082.i, align 4
  %arrayidx.i = getelementptr %struct.nand_op_parser_pattern_elem, ptr %31, i32 %i.084.i
  %34 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %35)
  %cmp6.not.i = icmp eq i32 %33, %35
  br i1 %cmp6.not.i, label %if.end10.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %optional.i = getelementptr %struct.nand_op_parser_pattern_elem, ptr %31, i32 %i.084.i, i32 1
  %36 = ptrtoint ptr %optional.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %optional.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %tobool.not.i = icmp eq i8 %37, 0
  br i1 %tobool.not.i, label %if.then.i.cleanup_crit_edge, label %if.then.i.for.inc.i_crit_edge

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end10.i:                                       ; preds = %for.body.i
  %38 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values)
  switch i32 %33, label %if.end10.i.if.end15.i_crit_edge [
    i32 1, label %sw.bb.i.i
    i32 2, label %if.end10.i.sw.bb8.i.i_crit_edge
    i32 3, label %if.end10.i.sw.bb8.i.i_crit_edge212
  ]

if.end10.i.sw.bb8.i.i_crit_edge212:               ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb8.i.i

if.end10.i.sw.bb8.i.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb8.i.i

if.end10.i.if.end15.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

sw.bb.i.i:                                        ; preds = %if.end10.i
  %ctx.i.i = getelementptr %struct.nand_op_parser_pattern_elem, ptr %31, i32 %i.084.i, i32 2
  %39 = ptrtoint ptr %ctx.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ctx.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i.i = icmp eq i32 %40, 0
  br i1 %tobool.not.i.i, label %sw.bb.i.i.if.end15.i_crit_edge, label %if.end.i.i

sw.bb.i.i.if.end15.i_crit_edge:                   ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.end.i.i:                                       ; preds = %sw.bb.i.i
  %ctx1.i.i = getelementptr inbounds %struct.nand_op_instr, ptr %instr.082.i, i32 0, i32 1
  %41 = ptrtoint ptr %ctx1.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ctx1.i.i, align 4
  %sub.i.i = sub i32 %42, %instr_offset.081.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i, i32 %40)
  %cmp.i.i = icmp ugt i32 %sub.i.i, %40
  br i1 %cmp.i.i, label %if.end.i.i.if.then13.i_crit_edge, label %if.end.i.i.if.end15.i_crit_edge

if.end.i.i.if.end15.i_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.end.i.i.if.then13.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i

sw.bb8.i.i:                                       ; preds = %if.end10.i.sw.bb8.i.i_crit_edge, %if.end10.i.sw.bb8.i.i_crit_edge212
  %ctx9.i.i = getelementptr %struct.nand_op_parser_pattern_elem, ptr %31, i32 %i.084.i, i32 2
  %43 = ptrtoint ptr %ctx9.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %ctx9.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool10.not.i.i = icmp eq i32 %44, 0
  br i1 %tobool10.not.i.i, label %sw.bb8.i.i.if.end15.i_crit_edge, label %if.end12.i.i

sw.bb8.i.i.if.end15.i_crit_edge:                  ; preds = %sw.bb8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.end12.i.i:                                     ; preds = %sw.bb8.i.i
  %ctx13.i.i = getelementptr inbounds %struct.nand_op_instr, ptr %instr.082.i, i32 0, i32 1
  %45 = ptrtoint ptr %ctx13.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %ctx13.i.i, align 4
  %sub14.i.i = sub i32 %46, %instr_offset.081.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub14.i.i, i32 %44)
  %cmp17.i.i = icmp ugt i32 %sub14.i.i, %44
  br i1 %cmp17.i.i, label %if.end12.i.i.if.then13.i_crit_edge, label %if.end12.i.i.if.end15.i_crit_edge

if.end12.i.i.if.end15.i_crit_edge:                ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i

if.end12.i.i.if.then13.i_crit_edge:               ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then13.i

if.then13.i:                                      ; preds = %if.end12.i.i.if.then13.i_crit_edge, %if.end.i.i.if.then13.i_crit_edge
  %.pn.i = phi i32 [ %40, %if.end.i.i.if.then13.i_crit_edge ], [ %44, %if.end12.i.i.if.then13.i_crit_edge ]
  %instr_offset.1.i = add i32 %.pn.i, %instr_offset.081.i
  %inc.i = add i32 %ninstrs3.087.i, 1
  %inc14.i = add nuw i32 %i.084.i, 1
  br label %for.end.i

if.end15.i:                                       ; preds = %if.end12.i.i.if.end15.i_crit_edge, %sw.bb8.i.i.if.end15.i_crit_edge, %if.end.i.i.if.end15.i_crit_edge, %sw.bb.i.i.if.end15.i_crit_edge, %if.end10.i.if.end15.i_crit_edge
  %incdec.ptr.i = getelementptr %struct.nand_op_instr, ptr %instr.082.i, i32 1
  %inc16.i = add i32 %ninstrs3.087.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end15.i, %if.then.i.for.inc.i_crit_edge
  %instr_offset.2.i = phi i32 [ 0, %if.end15.i ], [ %instr_offset.081.i, %if.then.i.for.inc.i_crit_edge ]
  %instr.1.i = phi ptr [ %incdec.ptr.i, %if.end15.i ], [ %instr.082.i, %if.then.i.for.inc.i_crit_edge ]
  %ninstrs3.1.i = phi i32 [ %inc16.i, %if.end15.i ], [ %ninstrs3.087.i, %if.then.i.for.inc.i_crit_edge ]
  %inc17.i = add nuw i32 %i.084.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc17.i, i32 %29)
  %cmp.i = icmp ult i32 %inc17.i, %29
  %cmp4.i = icmp ult ptr %instr.1.i, %add.ptr.i
  %or.cond.i = select i1 %cmp.i, i1 %cmp4.i, i1 false
  br i1 %or.cond.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.then13.i
  %instr_offset.3.i = phi i32 [ %instr_offset.1.i, %if.then13.i ], [ %instr_offset.2.i, %for.inc.i.for.end.i_crit_edge ]
  %i.1.i = phi i32 [ %inc14.i, %if.then13.i ], [ %inc17.i, %for.inc.i.for.end.i_crit_edge ]
  %ninstrs3.2.i = phi i32 [ %inc.i, %if.then13.i ], [ %ninstrs3.1.i, %for.inc.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ninstrs3.2.i)
  %tobool18.not.i = icmp eq i32 %ninstrs3.2.i, 0
  br i1 %tobool18.not.i, label %for.end.i.cleanup_crit_edge, label %for.cond21.preheader.i

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond21.preheader.i:                           ; preds = %for.end.i
  call void @__sanitizer_cov_trace_cmp4(i32 %i.1.i, i32 %29)
  %cmp2392.i = icmp ult i32 %i.1.i, %29
  br i1 %cmp2392.i, label %for.cond21.preheader.i.for.body24.i_crit_edge, label %for.cond21.preheader.i.if.end_crit_edge

for.cond21.preheader.i.if.end_crit_edge:          ; preds = %for.cond21.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.cond21.preheader.i.for.body24.i_crit_edge:    ; preds = %for.cond21.preheader.i
  br label %for.body24.i

for.cond21.i:                                     ; preds = %for.body24.i
  %inc32.i = add i32 %i.293.i, 1
  %exitcond.not.i = icmp eq i32 %inc32.i, %29
  br i1 %exitcond.not.i, label %for.cond21.i.if.end_crit_edge, label %for.cond21.i.for.body24.i_crit_edge

for.cond21.i.for.body24.i_crit_edge:              ; preds = %for.cond21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body24.i

for.cond21.i.if.end_crit_edge:                    ; preds = %for.cond21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body24.i:                                     ; preds = %for.cond21.i.for.body24.i_crit_edge, %for.cond21.preheader.i.for.body24.i_crit_edge
  %i.293.i = phi i32 [ %inc32.i, %for.cond21.i.for.body24.i_crit_edge ], [ %i.1.i, %for.cond21.preheader.i.for.body24.i_crit_edge ]
  %optional27.i = getelementptr %struct.nand_op_parser_pattern_elem, ptr %31, i32 %i.293.i, i32 1
  %47 = ptrtoint ptr %optional27.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %optional27.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %48)
  %tobool28.not.i = icmp eq i8 %48, 0
  br i1 %tobool28.not.i, label %for.body24.i.cleanup_crit_edge, label %for.cond21.i

for.body24.i.cleanup_crit_edge:                   ; preds = %for.body24.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.cond21.i.if.end_crit_edge, %for.cond21.preheader.i.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %best_pattern.0152)
  %cmp12 = icmp sgt i32 %best_pattern.0152, -1
  br i1 %cmp12, label %land.lhs.true, label %if.end.if.end16_crit_edge

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

land.lhs.true:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_cmp4(i32 %ninstrs3.2.i, i32 %best_ctx.sroa.11.0132)
  %cmp.i79 = icmp ult i32 %ninstrs3.2.i, %best_ctx.sroa.11.0132
  br i1 %cmp.i79, label %land.lhs.true.cleanup_crit_edge, label %if.else.i

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else.i:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_cmp4(i32 %ninstrs3.2.i, i32 %best_ctx.sroa.11.0132)
  %cmp7.i = icmp ugt i32 %ninstrs3.2.i, %best_ctx.sroa.11.0132
  call void @__sanitizer_cov_trace_cmp4(i32 %instr_offset.3.i, i32 %best_ctx.sroa.16.0124)
  %cmp20.i = icmp ugt i32 %instr_offset.3.i, %best_ctx.sroa.16.0124
  %or.cond = select i1 %cmp7.i, i1 true, i1 %cmp20.i
  br i1 %or.cond, label %if.else.i.if.end16_crit_edge, label %if.else.i.cleanup_crit_edge

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else.i.if.end16_crit_edge:                     ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.end16:                                         ; preds = %if.else.i.if.end16_crit_edge, %if.end.if.end16_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.else.i.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %for.body24.i.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %best_ctx.sroa.16.1 = phi i32 [ %instr_offset.3.i, %if.end16 ], [ %best_ctx.sroa.16.0124, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.16.0124, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.16.0124, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.16.0124, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.16.0124, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.16.0124, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.14.1 = phi i32 [ %test_ctx.sroa.14.0.copyload, %if.end16 ], [ %best_ctx.sroa.14.0128, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.14.0128, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.14.0128, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.14.0128, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.14.0128, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.14.0128, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.11.1 = phi i32 [ %ninstrs3.2.i, %if.end16 ], [ %best_ctx.sroa.11.0132, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.11.0132, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.11.0132, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.11.0132, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.11.0132, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.11.0132, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.9.1 = phi ptr [ %test_ctx.sroa.9.0.copyload, %if.end16 ], [ %best_ctx.sroa.9.0136, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.9.0136, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.9.0136, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.9.0136, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.9.0136, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.9.0136, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.7.1 = phi i32 [ %test_ctx.sroa.8.0.copyload, %if.end16 ], [ %best_ctx.sroa.7.0140, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.7.0140, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.7.0140, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.7.0140, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.7.0140, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.7.0140, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.5.1 = phi i32 [ %test_ctx.sroa.6.0.copyload, %if.end16 ], [ %best_ctx.sroa.5.0144, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.5.0144, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.5.0144, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.5.0144, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.5.0144, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.5.0144, %if.then.i.cleanup_crit_edge ]
  %best_ctx.sroa.0.1 = phi ptr [ %test_ctx.sroa.0.0.copyload, %if.end16 ], [ %best_ctx.sroa.0.0148, %for.end.i.cleanup_crit_edge ], [ %best_ctx.sroa.0.0148, %for.body.cleanup_crit_edge ], [ %best_ctx.sroa.0.0148, %land.lhs.true.cleanup_crit_edge ], [ %best_ctx.sroa.0.0148, %if.else.i.cleanup_crit_edge ], [ %best_ctx.sroa.0.0148, %for.body24.i.cleanup_crit_edge ], [ %best_ctx.sroa.0.0148, %if.then.i.cleanup_crit_edge ]
  %best_pattern.1 = phi i32 [ %i.0156, %if.end16 ], [ %best_pattern.0152, %for.end.i.cleanup_crit_edge ], [ %best_pattern.0152, %for.body.cleanup_crit_edge ], [ %best_pattern.0152, %land.lhs.true.cleanup_crit_edge ], [ %best_pattern.0152, %if.else.i.cleanup_crit_edge ], [ %best_pattern.0152, %for.body24.i.cleanup_crit_edge ], [ %best_pattern.0152, %if.then.i.cleanup_crit_edge ]
  %inc = add nuw i32 %i.0156, 1
  %exitcond.not = icmp eq i32 %inc, %20
  br i1 %exitcond.not, label %for.end, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %best_pattern.1)
  %cmp17 = icmp slt i32 %best_pattern.1, 0
  br i1 %cmp17, label %for.end.do.body_crit_edge, label %if.end25

for.end.do.body_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body

do.body:                                          ; preds = %for.end.do.body_crit_edge, %for.cond.preheader.do.body_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_parser_exec_op.__UNIQUE_ID_ddebug263, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_parser_exec_op, %if.then23)) #14
          to label %cleanup61 [label %if.then23], !srcloc !385

if.then23:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_parser_exec_op.__UNIQUE_ID_ddebug263, ptr noundef nonnull @.str.4) #14
  br label %cleanup61

if.end25:                                         ; preds = %for.end
  %49 = ptrtoint ptr %ctx to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %best_ctx.sroa.0.1, ptr %ctx, align 4
  %50 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %best_ctx.sroa.5.1, ptr %0, align 4
  %51 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %best_ctx.sroa.7.1, ptr %1, align 4
  %52 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %best_ctx.sroa.9.1, ptr %2, align 4
  %53 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %best_ctx.sroa.11.1, ptr %3, align 4
  %54 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %best_ctx.sroa.14.1, ptr %4, align 4
  %55 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %best_ctx.sroa.16.1, ptr %5, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_parser_trace.__UNIQUE_ID_ddebug262, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_parser_exec_op, %if.then.i82)) #14
          to label %do.end.i [label %if.then.i82], !srcloc !385

if.then.i82:                                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  %56 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %1, align 4
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_parser_trace.__UNIQUE_ID_ddebug262, ptr noundef nonnull @.str.26, i32 noundef %57) #14
  br label %do.end.i

do.end.i:                                         ; preds = %if.then.i82, %if.end25
  %58 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp27.not.i = icmp eq i32 %59, 0
  br i1 %cmp27.not.i, label %do.end.i.nand_op_parser_trace.exit_crit_edge, label %do.end.i.for.body.i88_crit_edge

do.end.i.for.body.i88_crit_edge:                  ; preds = %do.end.i
  br label %for.body.i88

do.end.i.nand_op_parser_trace.exit_crit_edge:     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_op_parser_trace.exit

for.body.i88:                                     ; preds = %for.body.i88.for.body.i88_crit_edge, %do.end.i.for.body.i88_crit_edge
  %prefix.029.i = phi ptr [ %prefix.2.i, %for.body.i88.for.body.i88_crit_edge ], [ @.str.23, %do.end.i.for.body.i88_crit_edge ]
  %i.028.i = phi i32 [ %inc.i86, %for.body.i88.for.body.i88_crit_edge ], [ 0, %do.end.i.for.body.i88_crit_edge ]
  %60 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %ctx, align 4
  %arrayidx.i85 = getelementptr %struct.nand_op_instr, ptr %61, i32 %i.028.i
  %62 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %2, align 4
  %cmp6.i = icmp eq ptr %arrayidx.i85, %63
  %spec.select.i = select i1 %cmp6.i, ptr @.str.27, ptr %prefix.029.i
  call fastcc void @nand_op_trace(ptr noundef %spec.select.i, ptr noundef %arrayidx.i85) #14
  %64 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %2, align 4
  %66 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %3, align 4
  %sub.i = add i32 %67, -1
  %arrayidx13.i = getelementptr %struct.nand_op_instr, ptr %65, i32 %sub.i
  %cmp14.i = icmp eq ptr %arrayidx.i85, %arrayidx13.i
  %prefix.2.i = select i1 %cmp14.i, ptr @.str.23, ptr %spec.select.i
  %inc.i86 = add nuw i32 %i.028.i, 1
  %68 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %0, align 4
  %cmp.i87 = icmp ult i32 %inc.i86, %69
  br i1 %cmp.i87, label %for.body.i88.for.body.i88_crit_edge, label %for.body.i88.nand_op_parser_trace.exit_crit_edge

for.body.i88.nand_op_parser_trace.exit_crit_edge: ; preds = %for.body.i88
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_op_parser_trace.exit

for.body.i88.for.body.i88_crit_edge:              ; preds = %for.body.i88
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i88

nand_op_parser_trace.exit:                        ; preds = %for.body.i88.nand_op_parser_trace.exit_crit_edge, %do.end.i.nand_op_parser_trace.exit_crit_edge
  br i1 %check_only, label %nand_op_parser_trace.exit.if.end35_crit_edge, label %if.then27

nand_op_parser_trace.exit.if.end35_crit_edge:     ; preds = %nand_op_parser_trace.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then27:                                        ; preds = %nand_op_parser_trace.exit
  %70 = ptrtoint ptr %parser to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %parser, align 4
  %exec = getelementptr %struct.nand_op_parser_pattern, ptr %71, i32 %best_pattern.1, i32 2
  %72 = ptrtoint ptr %exec to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %exec, align 4
  %call31 = call i32 %73(ptr noundef %chip, ptr noundef %1) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then27.if.end35_crit_edge, label %if.then27.cleanup61_crit_edge

if.then27.cleanup61_crit_edge:                    ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup61

if.then27.if.end35_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.end35:                                         ; preds = %if.then27.if.end35_crit_edge, %nand_op_parser_trace.exit.if.end35_crit_edge
  %74 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %2, align 4
  %76 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %3, align 4
  %add.ptr40 = getelementptr %struct.nand_op_instr, ptr %75, i32 %77
  store ptr %add.ptr40, ptr %2, align 4
  %78 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool45.not = icmp eq i32 %79, 0
  br i1 %tobool45.not, label %if.end35.if.end50_crit_edge, label %if.then46

if.end35.if.end50_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.then46:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr49 = getelementptr %struct.nand_op_instr, ptr %add.ptr40, i32 -1
  %80 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %add.ptr49, ptr %2, align 4
  br label %if.end50

if.end50:                                         ; preds = %if.then46, %if.end35.if.end50_crit_edge
  %81 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %79, ptr %4, align 4
  %82 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %2, align 4
  %84 = ptrtoint ptr %instrs1 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %instrs1, align 4
  %86 = ptrtoint ptr %ninstrs2 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %ninstrs2, align 4
  %add.ptr = getelementptr %struct.nand_op_instr, ptr %85, i32 %87
  %cmp = icmp ult ptr %83, %add.ptr
  br i1 %cmp, label %if.end50.for.cond.preheader_crit_edge, label %if.end50.cleanup61_crit_edge

if.end50.cleanup61_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup61

if.end50.for.cond.preheader_crit_edge:            ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

cleanup61:                                        ; preds = %if.end50.cleanup61_crit_edge, %if.then27.cleanup61_crit_edge, %if.then23, %do.body, %entry.cleanup61_crit_edge
  %retval.2 = phi i32 [ -524, %do.body ], [ -524, %if.then23 ], [ 0, %entry.cleanup61_crit_edge ], [ 0, %if.end50.cleanup61_crit_edge ], [ %call31, %if.then27.cleanup61_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %ctx) #14
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_subop_get_addr_start_off(ptr noundef readonly %subop, i32 noundef %instr_idx) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %subop, null
  br i1 %tobool.not.i, label %entry.do.end_crit_edge, label %nand_subop_instr_is_valid.exit

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_subop_instr_is_valid.exit:                   ; preds = %entry
  %ninstrs.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 2
  %0 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %instr_idx)
  %cmp.i = icmp ugt i32 %1, %instr_idx
  br i1 %cmp.i, label %lor.rhs, label %nand_subop_instr_is_valid.exit.do.end_crit_edge

nand_subop_instr_is_valid.exit.do.end_crit_edge:  ; preds = %nand_subop_instr_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %nand_subop_instr_is_valid.exit
  %instrs = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 1
  %2 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %instrs, align 4
  %arrayidx = getelementptr %struct.nand_op_instr, ptr %3, i32 %instr_idx
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.not = icmp eq i32 %5, 1
  br i1 %cmp.not, label %if.end21, label %lor.rhs.do.end_crit_edge, !prof !379

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %nand_subop_instr_is_valid.exit.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2484, i32 noundef 9, ptr noundef null) #14
  br label %return

if.end21:                                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %instr_idx)
  %tobool.not.i28 = icmp eq i32 %instr_idx, 0
  br i1 %tobool.not.i28, label %if.end.i, label %if.end21.return_crit_edge

if.end21.return_crit_edge:                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.i:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %first_instr_start_off.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 3
  %6 = ptrtoint ptr %first_instr_start_off.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %first_instr_start_off.i, align 4
  br label %return

return:                                           ; preds = %if.end.i, %if.end21.return_crit_edge, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %7, %if.end.i ], [ 0, %if.end21.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_subop_get_num_addr_cyc(ptr noundef readonly %subop, i32 noundef %instr_idx) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %subop, null
  br i1 %tobool.not.i, label %entry.do.end_crit_edge, label %nand_subop_instr_is_valid.exit

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_subop_instr_is_valid.exit:                   ; preds = %entry
  %ninstrs.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 2
  %0 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %instr_idx)
  %cmp.i = icmp ugt i32 %1, %instr_idx
  br i1 %cmp.i, label %lor.rhs, label %nand_subop_instr_is_valid.exit.do.end_crit_edge

nand_subop_instr_is_valid.exit.do.end_crit_edge:  ; preds = %nand_subop_instr_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %nand_subop_instr_is_valid.exit
  %instrs = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 1
  %2 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %instrs, align 4
  %arrayidx = getelementptr %struct.nand_op_instr, ptr %3, i32 %instr_idx
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.not = icmp eq i32 %5, 1
  br i1 %cmp.not, label %nand_subop_instr_is_valid.exit.i, label %lor.rhs.do.end_crit_edge, !prof !379

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %nand_subop_instr_is_valid.exit.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2508, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

nand_subop_instr_is_valid.exit.i:                 ; preds = %lor.rhs
  %6 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %instr_idx)
  %cmp.i.i = icmp ugt i32 %7, %instr_idx
  br i1 %cmp.i.i, label %if.end21.i, label %do.end.i

do.end.i:                                         ; preds = %nand_subop_instr_is_valid.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2484, i32 noundef 9, ptr noundef null) #14
  br label %nand_subop_get_addr_start_off.exit

if.end21.i:                                       ; preds = %nand_subop_instr_is_valid.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %instr_idx)
  %tobool.not.i28.i = icmp eq i32 %instr_idx, 0
  br i1 %tobool.not.i28.i, label %if.end.i.i, label %if.end21.i.nand_subop_get_addr_start_off.exit_crit_edge

if.end21.i.nand_subop_get_addr_start_off.exit_crit_edge: ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_subop_get_addr_start_off.exit

if.end.i.i:                                       ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  %first_instr_start_off.i.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 3
  %8 = ptrtoint ptr %first_instr_start_off.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %first_instr_start_off.i.i, align 4
  br label %nand_subop_get_addr_start_off.exit

nand_subop_get_addr_start_off.exit:               ; preds = %if.end.i.i, %if.end21.i.nand_subop_get_addr_start_off.exit_crit_edge, %do.end.i
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ %9, %if.end.i.i ], [ 0, %if.end21.i.nand_subop_get_addr_start_off.exit_crit_edge ]
  %10 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ninstrs.i, align 4
  %sub = add i32 %11, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %instr_idx)
  %cmp23 = icmp eq i32 %sub, %instr_idx
  br i1 %cmp23, label %land.lhs.true, label %nand_subop_get_addr_start_off.exit.if.else_crit_edge

nand_subop_get_addr_start_off.exit.if.else_crit_edge: ; preds = %nand_subop_get_addr_start_off.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %nand_subop_get_addr_start_off.exit
  %last_instr_end_off = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 4
  %12 = ptrtoint ptr %last_instr_end_off to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %last_instr_end_off, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool24.not = icmp eq i32 %13, 0
  br i1 %tobool24.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.if.end29_crit_edge

land.lhs.true.if.end29_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %nand_subop_get_addr_start_off.exit.if.else_crit_edge
  %14 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %instrs, align 4
  %ctx = getelementptr %struct.nand_op_instr, ptr %15, i32 %instr_idx, i32 1
  %16 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ctx, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.else, %land.lhs.true.if.end29_crit_edge
  %end_off.0 = phi i32 [ %17, %if.else ], [ %13, %land.lhs.true.if.end29_crit_edge ]
  %sub30 = sub i32 %end_off.0, %retval.0.i
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %sub30, %if.end29 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_subop_get_data_start_off(ptr noundef readonly %subop, i32 noundef %instr_idx) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %subop, null
  br i1 %tobool.not.i, label %entry.do.end_crit_edge, label %nand_subop_instr_is_valid.exit

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_subop_instr_is_valid.exit:                   ; preds = %entry
  %ninstrs.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 2
  %0 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %instr_idx)
  %cmp.i = icmp ugt i32 %1, %instr_idx
  br i1 %cmp.i, label %lor.rhs, label %nand_subop_instr_is_valid.exit.do.end_crit_edge

nand_subop_instr_is_valid.exit.do.end_crit_edge:  ; preds = %nand_subop_instr_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %nand_subop_instr_is_valid.exit
  %instrs = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 1
  %2 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %instrs, align 4
  %arrayidx = getelementptr %struct.nand_op_instr, ptr %3, i32 %instr_idx
  %tobool.not.i30 = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i30, label %lor.rhs.do.end_crit_edge, label %nand_instr_is_data.exit

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_instr_is_data.exit:                          ; preds = %lor.rhs
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = and i32 %5, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %.not = icmp eq i32 %6, 2
  br i1 %.not, label %if.end23, label %nand_instr_is_data.exit.do.end_crit_edge, !prof !379

nand_instr_is_data.exit.do.end_crit_edge:         ; preds = %nand_instr_is_data.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %nand_instr_is_data.exit.do.end_crit_edge, %lor.rhs.do.end_crit_edge, %nand_subop_instr_is_valid.exit.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2538, i32 noundef 9, ptr noundef null) #14
  br label %return

if.end23:                                         ; preds = %nand_instr_is_data.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %instr_idx)
  %tobool.not.i32 = icmp eq i32 %instr_idx, 0
  br i1 %tobool.not.i32, label %if.end.i, label %if.end23.return_crit_edge

if.end23.return_crit_edge:                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end.i:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  %first_instr_start_off.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 3
  %7 = ptrtoint ptr %first_instr_start_off.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %first_instr_start_off.i, align 4
  br label %return

return:                                           ; preds = %if.end.i, %if.end23.return_crit_edge, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %8, %if.end.i ], [ 0, %if.end23.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_subop_get_data_len(ptr noundef readonly %subop, i32 noundef %instr_idx) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %subop, null
  br i1 %tobool.not.i, label %entry.do.end_crit_edge, label %nand_subop_instr_is_valid.exit

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_subop_instr_is_valid.exit:                   ; preds = %entry
  %ninstrs.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 2
  %0 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %instr_idx)
  %cmp.i = icmp ugt i32 %1, %instr_idx
  br i1 %cmp.i, label %lor.rhs, label %nand_subop_instr_is_valid.exit.do.end_crit_edge

nand_subop_instr_is_valid.exit.do.end_crit_edge:  ; preds = %nand_subop_instr_is_valid.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %nand_subop_instr_is_valid.exit
  %instrs = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 1
  %2 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %instrs, align 4
  %arrayidx = getelementptr %struct.nand_op_instr, ptr %3, i32 %instr_idx
  %tobool.not.i44 = icmp eq ptr %arrayidx, null
  br i1 %tobool.not.i44, label %lor.rhs.do.end_crit_edge, label %nand_instr_is_data.exit

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_instr_is_data.exit:                          ; preds = %lor.rhs
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = and i32 %5, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %.not = icmp eq i32 %6, 2
  br i1 %.not, label %nand_subop_instr_is_valid.exit.i, label %nand_instr_is_data.exit.do.end_crit_edge, !prof !379

nand_instr_is_data.exit.do.end_crit_edge:         ; preds = %nand_instr_is_data.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %nand_instr_is_data.exit.do.end_crit_edge, %lor.rhs.do.end_crit_edge, %nand_subop_instr_is_valid.exit.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2562, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

nand_subop_instr_is_valid.exit.i:                 ; preds = %nand_instr_is_data.exit
  %7 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ninstrs.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %instr_idx)
  %cmp.i.i = icmp ugt i32 %8, %instr_idx
  br i1 %cmp.i.i, label %nand_instr_is_data.exit.i, label %nand_subop_instr_is_valid.exit.i.do.end.i_crit_edge

nand_subop_instr_is_valid.exit.i.do.end.i_crit_edge: ; preds = %nand_subop_instr_is_valid.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

nand_instr_is_data.exit.i:                        ; preds = %nand_subop_instr_is_valid.exit.i
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %11 = and i32 %10, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %.not.i = icmp eq i32 %11, 2
  br i1 %.not.i, label %if.end23.i, label %nand_instr_is_data.exit.i.do.end.i_crit_edge, !prof !379

nand_instr_is_data.exit.i.do.end.i_crit_edge:     ; preds = %nand_instr_is_data.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

do.end.i:                                         ; preds = %nand_instr_is_data.exit.i.do.end.i_crit_edge, %nand_subop_instr_is_valid.exit.i.do.end.i_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 2538, i32 noundef 9, ptr noundef null) #14
  br label %nand_subop_get_data_start_off.exit

if.end23.i:                                       ; preds = %nand_instr_is_data.exit.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %instr_idx)
  %tobool.not.i32.i = icmp eq i32 %instr_idx, 0
  br i1 %tobool.not.i32.i, label %if.end.i.i, label %if.end23.i.nand_subop_get_data_start_off.exit_crit_edge

if.end23.i.nand_subop_get_data_start_off.exit_crit_edge: ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_subop_get_data_start_off.exit

if.end.i.i:                                       ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #16
  %first_instr_start_off.i.i = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 3
  %12 = ptrtoint ptr %first_instr_start_off.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %first_instr_start_off.i.i, align 4
  br label %nand_subop_get_data_start_off.exit

nand_subop_get_data_start_off.exit:               ; preds = %if.end.i.i, %if.end23.i.nand_subop_get_data_start_off.exit_crit_edge, %do.end.i
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ %13, %if.end.i.i ], [ 0, %if.end23.i.nand_subop_get_data_start_off.exit_crit_edge ]
  %14 = ptrtoint ptr %ninstrs.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ninstrs.i, align 4
  %sub = add i32 %15, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %instr_idx)
  %cmp = icmp eq i32 %sub, %instr_idx
  br i1 %cmp, label %land.lhs.true, label %nand_subop_get_data_start_off.exit.if.else_crit_edge

nand_subop_get_data_start_off.exit.if.else_crit_edge: ; preds = %nand_subop_get_data_start_off.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %nand_subop_get_data_start_off.exit
  %last_instr_end_off = getelementptr inbounds %struct.nand_subop, ptr %subop, i32 0, i32 4
  %16 = ptrtoint ptr %last_instr_end_off to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %last_instr_end_off, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool25.not = icmp eq i32 %17, 0
  br i1 %tobool25.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true.if.end30_crit_edge

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %nand_subop_get_data_start_off.exit.if.else_crit_edge
  %18 = ptrtoint ptr %instrs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %instrs, align 4
  %ctx = getelementptr %struct.nand_op_instr, ptr %19, i32 %instr_idx, i32 1
  %20 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ctx, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.else, %land.lhs.true.if.end30_crit_edge
  %end_off.0 = phi i32 [ %21, %if.else ], [ %17, %land.lhs.true.if.end30_crit_edge ]
  %sub31 = sub i32 %end_off.0, %retval.0.i
  br label %cleanup

cleanup:                                          ; preds = %if.end30, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %sub31, %if.end30 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_reset(ptr noundef %chip, i32 noundef %chipnr) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %ops1.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  %tobool2.not.i.i = icmp eq ptr %3, null
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %entry.if.end_crit_edge, label %lor.lhs.false3.i.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false3.i.i:                               ; preds = %entry
  %setup_interface.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %setup_interface.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %setup_interface.i.i, align 4
  %tobool6.not.i.i = icmp eq ptr %5, null
  br i1 %tobool6.not.i.i, label %lor.lhs.false3.i.i.if.end_crit_edge, label %nand_controller_can_setup_interface.exit.i

lor.lhs.false3.i.i.if.end_crit_edge:              ; preds = %lor.lhs.false3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

nand_controller_can_setup_interface.exit.i:       ; preds = %lor.lhs.false3.i.i
  %options.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %6 = ptrtoint ptr %options.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %options.i.i, align 8
  %and.i.i = and i32 %7, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %if.end.i, label %nand_controller_can_setup_interface.exit.i.if.end_crit_edge

nand_controller_can_setup_interface.exit.i.if.end_crit_edge: ; preds = %nand_controller_can_setup_interface.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end.i:                                         ; preds = %nand_controller_can_setup_interface.exit.i
  %call2.i = tail call ptr @nand_get_reset_interface_config() #14
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %8 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call2.i, ptr %current_interface_config.i, align 4
  %9 = ptrtoint ptr %setup_interface.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %setup_interface.i.i, align 4
  %call4.i = tail call i32 %10(ptr noundef %chip, i32 noundef %chipnr, ptr noundef %call2.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i, label %if.end.i.if.end_crit_edge, label %nand_reset_interface.exit

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

nand_reset_interface.exit:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42) #19
  br label %cleanup

if.end:                                           ; preds = %if.end.i.if.end_crit_edge, %nand_controller_can_setup_interface.exit.i.if.end_crit_edge, %lor.lhs.false3.i.i.if.end_crit_edge, %entry.if.end_crit_edge
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %11 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %chipnr)
  %cmp.i = icmp ult i32 %12, %chipnr
  br i1 %cmp.i, label %do.end.i20, label %if.end21.critedge.i, !prof !378

do.end.i20:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %13 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %chipnr, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %14 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %15, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %15(ptr noundef %chip, i32 noundef %chipnr) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i20
  %call1 = tail call i32 @nand_reset_op(ptr noundef %chip)
  %select_chip.i21 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %16 = ptrtoint ptr %select_chip.i21 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %select_chip.i21, align 8
  %tobool.not.i22 = icmp eq ptr %17, null
  br i1 %tobool.not.i22, label %nand_select_target.exit.nand_deselect_target.exit_crit_edge, label %if.then.i

nand_select_target.exit.nand_deselect_target.exit_crit_edge: ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %17(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %nand_select_target.exit.nand_deselect_target.exit_crit_edge
  %cur_cs.i23 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %18 = ptrtoint ptr %cur_cs.i23 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 -1, ptr %cur_cs.i23, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %nand_deselect_target.exit.cleanup_crit_edge

nand_deselect_target.exit.cleanup_crit_edge:      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call5 = tail call fastcc i32 @nand_setup_interface(ptr noundef %chip, i32 noundef %chipnr)
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %nand_deselect_target.exit.cleanup_crit_edge, %nand_reset_interface.exit
  %retval.0 = phi i32 [ %call4.i, %nand_reset_interface.exit ], [ %call1, %nand_deselect_target.exit.cleanup_crit_edge ], [ %call5, %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_setup_interface(ptr noundef %chip, i32 noundef %chipnr) unnamed_addr #4 align 64 {
entry:
  %tmode_param = alloca [4 x i8], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 4
  %ops1 = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmode_param) #14
  %4 = ptrtoint ptr %tmode_param to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %tmode_param, align 4
  %tobool.not.i = icmp eq ptr %1, null
  %tobool2.not.i = icmp eq ptr %3, null
  %or.cond = select i1 %tobool.not.i, i1 true, i1 %tobool2.not.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %lor.lhs.false3.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false3.i:                                 ; preds = %entry
  %setup_interface.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  %5 = ptrtoint ptr %setup_interface.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %setup_interface.i, align 4
  %tobool6.not.i = icmp eq ptr %6, null
  br i1 %tobool6.not.i, label %lor.lhs.false3.i.cleanup_crit_edge, label %nand_controller_can_setup_interface.exit

lor.lhs.false3.i.cleanup_crit_edge:               ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_controller_can_setup_interface.exit:         ; preds = %lor.lhs.false3.i
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %7 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %options.i, align 8
  %and.i = and i32 %8, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool7.not.i, label %if.end, label %nand_controller_can_setup_interface.exit.cleanup_crit_edge

nand_controller_can_setup_interface.exit.cleanup_crit_edge: ; preds = %nand_controller_can_setup_interface.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %nand_controller_can_setup_interface.exit
  %best_interface_config = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %9 = ptrtoint ptr %best_interface_config to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %best_interface_config, align 8
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %timings = getelementptr inbounds %struct.nand_interface_config, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %timings to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %timings, align 8
  %13 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %10, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i = icmp eq i32 %14, 0
  %conv = trunc i32 %12 to i8
  %conv12 = or i8 %conv, 16
  %request.0 = select i1 %cmp.i, i8 %conv, i8 %conv12
  %15 = ptrtoint ptr %tmode_param to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 %request.0, ptr %tmode_param, align 4
  %supports_set_get_features.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %supports_set_get_features.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %supports_set_get_features.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.not.i122 = icmp eq i8 %17, 0
  br i1 %tobool.not.i122, label %if.end3.if.end20_crit_edge, label %nand_supports_set_features.exit

if.end3.if.end20_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

nand_supports_set_features.exit:                  ; preds = %if.end3
  %set_feature_list.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 2
  %18 = ptrtoint ptr %set_feature_list.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %set_feature_list.i, align 4
  %20 = and i32 %19, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool2.i.not = icmp eq i32 %20, 0
  br i1 %tobool2.i.not, label %nand_supports_set_features.exit.if.end20_crit_edge, label %if.then15

nand_supports_set_features.exit.if.end20_crit_edge: ; preds = %nand_supports_set_features.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.then15:                                        ; preds = %nand_supports_set_features.exit
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %21 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %22, i32 %chipnr)
  %cmp.i123 = icmp ult i32 %22, %chipnr
  br i1 %cmp.i123, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.then15
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %23 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %chipnr, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %24 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %25, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %25(ptr noundef %chip, i32 noundef %chipnr) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %call16 = call i32 @nand_set_features(ptr noundef %chip, i32 noundef 1, ptr noundef nonnull %tmode_param)
  %select_chip.i124 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %26 = ptrtoint ptr %select_chip.i124 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %select_chip.i124, align 8
  %tobool.not.i125 = icmp eq ptr %27, null
  br i1 %tobool.not.i125, label %nand_select_target.exit.nand_deselect_target.exit_crit_edge, label %if.then.i

nand_select_target.exit.nand_deselect_target.exit_crit_edge: ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void %27(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %nand_select_target.exit.nand_deselect_target.exit_crit_edge
  %cur_cs.i126 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %28 = ptrtoint ptr %cur_cs.i126 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %cur_cs.i126, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %nand_deselect_target.exit.if.end20_crit_edge, label %nand_deselect_target.exit.cleanup_crit_edge

nand_deselect_target.exit.cleanup_crit_edge:      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_deselect_target.exit.if.end20_crit_edge:     ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

if.end20:                                         ; preds = %nand_deselect_target.exit.if.end20_crit_edge, %nand_supports_set_features.exit.if.end20_crit_edge, %if.end3.if.end20_crit_edge
  %29 = ptrtoint ptr %setup_interface.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %setup_interface.i, align 4
  %31 = ptrtoint ptr %best_interface_config to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %best_interface_config, align 8
  %call22 = call i32 %30(ptr noundef %chip, i32 noundef %chipnr, ptr noundef %32) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end25, label %if.end20.cleanup_crit_edge

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end25:                                         ; preds = %if.end20
  %33 = ptrtoint ptr %supports_set_get_features.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %supports_set_get_features.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i129 = icmp eq i8 %34, 0
  br i1 %tobool.not.i129, label %if.end25.update_interface_config_crit_edge, label %nand_supports_get_features.exit

if.end25.update_interface_config_crit_edge:       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %update_interface_config

nand_supports_get_features.exit:                  ; preds = %if.end25
  %get_feature_list.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 3
  %35 = ptrtoint ptr %get_feature_list.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %get_feature_list.i, align 4
  %37 = and i32 %36, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool2.i130.not = icmp eq i32 %37, 0
  br i1 %tobool2.i130.not, label %nand_supports_get_features.exit.update_interface_config_crit_edge, label %if.end28

nand_supports_get_features.exit.update_interface_config_crit_edge: ; preds = %nand_supports_get_features.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %update_interface_config

if.end28:                                         ; preds = %nand_supports_get_features.exit
  %38 = ptrtoint ptr %tmode_param to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %tmode_param, align 4
  %ntargets.i.i132 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %39 = ptrtoint ptr %ntargets.i.i132 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ntargets.i.i132, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %chipnr)
  %cmp.i133 = icmp ult i32 %40, %chipnr
  br i1 %cmp.i133, label %do.end.i134, label %if.end21.critedge.i138, !prof !378

do.end.i134:                                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit140

if.end21.critedge.i138:                           ; preds = %if.end28
  %cur_cs.i135 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %41 = ptrtoint ptr %cur_cs.i135 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %chipnr, ptr %cur_cs.i135, align 4
  %select_chip.i136 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %42 = ptrtoint ptr %select_chip.i136 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %select_chip.i136, align 8
  %tobool22.not.i137 = icmp eq ptr %43, null
  br i1 %tobool22.not.i137, label %if.end21.critedge.i138.nand_select_target.exit140_crit_edge, label %if.then23.i139

if.end21.critedge.i138.nand_select_target.exit140_crit_edge: ; preds = %if.end21.critedge.i138
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit140

if.then23.i139:                                   ; preds = %if.end21.critedge.i138
  call void @__sanitizer_cov_trace_pc() #16
  call void %43(ptr noundef %chip, i32 noundef %chipnr) #14
  br label %nand_select_target.exit140

nand_select_target.exit140:                       ; preds = %if.then23.i139, %if.end21.critedge.i138.nand_select_target.exit140_crit_edge, %do.end.i134
  %call31 = call i32 @nand_get_features(ptr noundef %chip, i32 noundef 1, ptr noundef nonnull %tmode_param)
  %select_chip.i141 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %44 = ptrtoint ptr %select_chip.i141 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %select_chip.i141, align 8
  %tobool.not.i142 = icmp eq ptr %45, null
  br i1 %tobool.not.i142, label %nand_select_target.exit140.nand_deselect_target.exit146_crit_edge, label %if.then.i143

nand_select_target.exit140.nand_deselect_target.exit146_crit_edge: ; preds = %nand_select_target.exit140
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit146

if.then.i143:                                     ; preds = %nand_select_target.exit140
  call void @__sanitizer_cov_trace_pc() #16
  call void %45(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit146

nand_deselect_target.exit146:                     ; preds = %if.then.i143, %nand_select_target.exit140.nand_deselect_target.exit146_crit_edge
  %cur_cs.i144 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %46 = ptrtoint ptr %cur_cs.i144 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 -1, ptr %cur_cs.i144, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %nand_deselect_target.exit146.err_reset_chip_crit_edge

nand_deselect_target.exit146.err_reset_chip_crit_edge: ; preds = %nand_deselect_target.exit146
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_reset_chip

if.end34:                                         ; preds = %nand_deselect_target.exit146
  %47 = ptrtoint ptr %tmode_param to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %tmode_param, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %request.0, i8 %48)
  %cmp.not = icmp eq i8 %request.0, %48
  br i1 %cmp.not, label %if.end34.update_interface_config_crit_edge, label %do.end

if.end34.update_interface_config_crit_edge:       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %update_interface_config

do.end:                                           ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  %49 = ptrtoint ptr %best_interface_config to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %best_interface_config, align 8
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %50, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %52)
  %cmp.i147 = icmp eq i32 %52, 1
  %cond = select i1 %cmp.i147, ptr @.str.46, ptr @.str.47
  %timings44 = getelementptr inbounds %struct.nand_interface_config, ptr %50, i32 0, i32 1
  %53 = ptrtoint ptr %timings44 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %timings44, align 8
  %call46 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.44, ptr noundef nonnull %cond, i32 noundef %54) #19
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_setup_interface.__UNIQUE_ID_ddebug256, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_setup_interface, %if.then53)) #14
          to label %err_reset_chip [label %if.then53], !srcloc !385

if.then53:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %tmode_param to i32
  call void @__asan_load1_noabort(i32 %55)
  %56 = load i8, ptr %tmode_param, align 4
  %conv55 = zext i8 %56 to i32
  %and = and i32 %conv55, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool56.not = icmp eq i32 %and, 0
  %cond57 = select i1 %tobool56.not, ptr @.str.47, ptr @.str.46
  %and76 = and i32 %conv55, 15
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_setup_interface.__UNIQUE_ID_ddebug256, ptr noundef nonnull @.str.49, ptr noundef nonnull %cond57, i32 noundef %and76) #14
  br label %err_reset_chip

update_interface_config:                          ; preds = %if.end34.update_interface_config_crit_edge, %nand_supports_get_features.exit.update_interface_config_crit_edge, %if.end25.update_interface_config_crit_edge
  %57 = ptrtoint ptr %best_interface_config to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %best_interface_config, align 8
  %current_interface_config = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %59 = ptrtoint ptr %current_interface_config to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr %58, ptr %current_interface_config, align 4
  br label %cleanup

err_reset_chip:                                   ; preds = %if.then53, %do.end, %nand_deselect_target.exit146.err_reset_chip_crit_edge
  %60 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %controller, align 4
  %ops1.i = getelementptr inbounds %struct.nand_controller, ptr %61, i32 0, i32 1
  %62 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %ops1.i, align 4
  %tobool.not.i.i = icmp eq ptr %61, null
  %tobool2.not.i.i = icmp eq ptr %63, null
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %err_reset_chip.nand_reset_interface.exit_crit_edge, label %lor.lhs.false3.i.i

err_reset_chip.nand_reset_interface.exit_crit_edge: ; preds = %err_reset_chip
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_reset_interface.exit

lor.lhs.false3.i.i:                               ; preds = %err_reset_chip
  %setup_interface.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %63, i32 0, i32 3
  %64 = ptrtoint ptr %setup_interface.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %setup_interface.i.i, align 4
  %tobool6.not.i.i = icmp eq ptr %65, null
  br i1 %tobool6.not.i.i, label %lor.lhs.false3.i.i.nand_reset_interface.exit_crit_edge, label %nand_controller_can_setup_interface.exit.i

lor.lhs.false3.i.i.nand_reset_interface.exit_crit_edge: ; preds = %lor.lhs.false3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_reset_interface.exit

nand_controller_can_setup_interface.exit.i:       ; preds = %lor.lhs.false3.i.i
  %66 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %options.i, align 8
  %and.i.i = and i32 %67, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %if.end.i150, label %nand_controller_can_setup_interface.exit.i.nand_reset_interface.exit_crit_edge

nand_controller_can_setup_interface.exit.i.nand_reset_interface.exit_crit_edge: ; preds = %nand_controller_can_setup_interface.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_reset_interface.exit

if.end.i150:                                      ; preds = %nand_controller_can_setup_interface.exit.i
  %call2.i = call ptr @nand_get_reset_interface_config() #14
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %68 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call2.i, ptr %current_interface_config.i, align 4
  %69 = ptrtoint ptr %setup_interface.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %setup_interface.i.i, align 4
  %call4.i = call i32 %70(ptr noundef %chip, i32 noundef %chipnr, ptr noundef %call2.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool.not.i149 = icmp eq i32 %call4.i, 0
  br i1 %tobool.not.i149, label %if.end.i150.nand_reset_interface.exit_crit_edge, label %do.end.i151

if.end.i150.nand_reset_interface.exit_crit_edge:  ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_reset_interface.exit

do.end.i151:                                      ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #16
  %call6.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42) #19
  br label %nand_reset_interface.exit

nand_reset_interface.exit:                        ; preds = %do.end.i151, %if.end.i150.nand_reset_interface.exit_crit_edge, %nand_controller_can_setup_interface.exit.i.nand_reset_interface.exit_crit_edge, %lor.lhs.false3.i.i.nand_reset_interface.exit_crit_edge, %err_reset_chip.nand_reset_interface.exit_crit_edge
  %71 = ptrtoint ptr %ntargets.i.i132 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %ntargets.i.i132, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %chipnr)
  %cmp.i154 = icmp ult i32 %72, %chipnr
  br i1 %cmp.i154, label %do.end.i155, label %if.end21.critedge.i159, !prof !378

do.end.i155:                                      ; preds = %nand_reset_interface.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit161

if.end21.critedge.i159:                           ; preds = %nand_reset_interface.exit
  %73 = ptrtoint ptr %cur_cs.i144 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %chipnr, ptr %cur_cs.i144, align 4
  %74 = ptrtoint ptr %select_chip.i141 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %select_chip.i141, align 8
  %tobool22.not.i158 = icmp eq ptr %75, null
  br i1 %tobool22.not.i158, label %if.end21.critedge.i159.nand_select_target.exit161_crit_edge, label %if.then23.i160

if.end21.critedge.i159.nand_select_target.exit161_crit_edge: ; preds = %if.end21.critedge.i159
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit161

if.then23.i160:                                   ; preds = %if.end21.critedge.i159
  call void @__sanitizer_cov_trace_pc() #16
  call void %75(ptr noundef %chip, i32 noundef %chipnr) #14
  br label %nand_select_target.exit161

nand_select_target.exit161:                       ; preds = %if.then23.i160, %if.end21.critedge.i159.nand_select_target.exit161_crit_edge, %do.end.i155
  %call83 = call i32 @nand_reset_op(ptr noundef %chip)
  %76 = ptrtoint ptr %select_chip.i141 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %select_chip.i141, align 8
  %tobool.not.i163 = icmp eq ptr %77, null
  br i1 %tobool.not.i163, label %nand_select_target.exit161.nand_deselect_target.exit167_crit_edge, label %if.then.i164

nand_select_target.exit161.nand_deselect_target.exit167_crit_edge: ; preds = %nand_select_target.exit161
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit167

if.then.i164:                                     ; preds = %nand_select_target.exit161
  call void @__sanitizer_cov_trace_pc() #16
  call void %77(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit167

nand_deselect_target.exit167:                     ; preds = %if.then.i164, %nand_select_target.exit161.nand_deselect_target.exit167_crit_edge
  %78 = ptrtoint ptr %cur_cs.i144 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 -1, ptr %cur_cs.i144, align 4
  br label %cleanup

cleanup:                                          ; preds = %nand_deselect_target.exit167, %update_interface_config, %if.end20.cleanup_crit_edge, %nand_deselect_target.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %nand_controller_can_setup_interface.exit.cleanup_crit_edge, %lor.lhs.false3.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call31, %nand_deselect_target.exit167 ], [ 0, %update_interface_config ], [ 0, %nand_controller_can_setup_interface.exit.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call16, %nand_deselect_target.exit.cleanup_crit_edge ], [ %call22, %if.end20.cleanup_crit_edge ], [ 0, %lor.lhs.false3.i.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmode_param) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_get_features(ptr noundef %chip, i32 noundef %addr, ptr noundef %subfeature_param) local_unnamed_addr #4 align 64 {
entry:
  %feature.addr.i = alloca i8, align 1
  %ddrbuf.i = alloca [8 x i8], align 8
  %instrs.i = alloca [4 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %supports_set_get_features.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 1
  %0 = ptrtoint ptr %supports_set_get_features.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %supports_set_get_features.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %nand_supports_get_features.exit

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

nand_supports_get_features.exit:                  ; preds = %entry
  %get_feature_list.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 3
  %div3.i.i = lshr i32 %addr, 5
  %arrayidx.i.i = getelementptr i32, ptr %get_feature_list.i, i32 %div3.i.i
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %addr, 31
  %4 = shl nuw i32 1, %and.i.i
  %5 = and i32 %3, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.i.not = icmp eq i32 %5, 0
  br i1 %tobool2.i.not, label %nand_supports_get_features.exit.return_crit_edge, label %if.end

nand_supports_get_features.exit.return_crit_edge: ; preds = %nand_supports_get_features.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %nand_supports_get_features.exit
  %get_features = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 14
  %6 = ptrtoint ptr %get_features to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %get_features, align 8
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 %7(ptr noundef %chip, i32 noundef %addr, ptr noundef %subfeature_param) #14
  br label %return

if.end5:                                          ; preds = %if.end
  %conv = trunc i32 %addr to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %feature.addr.i)
  %8 = ptrtoint ptr %feature.addr.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %feature.addr.i, align 1
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ddrbuf.i) #14
  %9 = getelementptr inbounds [8 x i8], ptr %ddrbuf.i, i32 0, i32 2
  %10 = getelementptr inbounds [8 x i8], ptr %ddrbuf.i, i32 0, i32 4
  %11 = getelementptr inbounds [8 x i8], ptr %ddrbuf.i, i32 0, i32 6
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %12 = ptrtoint ptr %ddrbuf.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 -1, ptr %ddrbuf.i, align 8
  %13 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %if.end5.if.end64.i_crit_edge, label %lor.lhs.false.i.i

if.end5.if.end64.i_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64.i

lor.lhs.false.i.i:                                ; preds = %if.end5
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %16, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end64.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end64.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %18, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end64.i_crit_edge, label %if.then.i

nand_has_exec_op.exit.i.if.end64.i_crit_edge:     ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64.i

if.then.i:                                        ; preds = %nand_has_exec_op.exit.i
  %current_interface_config.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %19 = ptrtoint ptr %current_interface_config.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %current_interface_config.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs.i) #14
  %21 = getelementptr inbounds i8, ptr %instrs.i, i32 32
  %22 = call ptr @memset(ptr %21, i32 255, i32 44)
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %23 = call ptr @memset(ptr %instrs.i, i32 0, i32 20)
  %24 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 -18, ptr %ctx.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1
  %25 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %arrayinit.element.i, align 4
  %ctx3.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1
  %26 = ptrtoint ptr %ctx3.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 1, ptr %ctx3.i, align 4
  %addrs.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1, i32 0, i32 1
  %27 = ptrtoint ptr %addrs.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %feature.addr.i, ptr %addrs.i, align 4
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 2
  %28 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %20, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp.i.i = icmp eq i32 %29, 0
  %tWB_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %20, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %29)
  %cmp.i.i104.i = icmp eq i32 %29, 1
  %30 = getelementptr inbounds %struct.nand_interface_config, ptr %20, i32 0, i32 1, i32 1
  %retval.0.i105.i = select i1 %cmp.i.i104.i, ptr %30, ptr inttoptr (i32 -22 to ptr)
  %tWB_max7.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i105.i, i32 0, i32 31
  %cond.in.i = select i1 %cmp.i.i, ptr %tWB_max.i, ptr %tWB_max7.i
  %31 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %sub.i = add i32 %cond.i, 999
  %div.i = udiv i32 %sub.i, 1000
  %32 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %div.i, ptr %delay_ns.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2
  %33 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 4, ptr %arrayinit.element9.i, align 4
  %ctx11.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 1
  %34 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %20, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp.i106.i = icmp eq i32 %35, 0
  %tFEAT_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %20, i32 0, i32 1, i32 1, i32 0, i32 19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %35)
  %cmp.i.i109.i = icmp eq i32 %35, 1
  %retval.0.i110.i = select i1 %cmp.i.i109.i, ptr %30, ptr inttoptr (i32 -22 to ptr)
  %tFEAT_max19.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i110.i, i32 0, i32 25
  %cond21.in.i = select i1 %cmp.i106.i, ptr %tFEAT_max.i, ptr %tFEAT_max19.i
  %36 = ptrtoint ptr %cond21.in.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %cond21.i = load i32, ptr %cond21.in.i, align 4
  %sub23.i = add i32 %cond21.i, 999999999
  %div24.i = udiv i32 %sub23.i, 1000000000
  %37 = ptrtoint ptr %ctx11.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %div24.i, ptr %ctx11.i, align 4
  %delay_ns27.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 2
  %38 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %20, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp.i111.i = icmp eq i32 %39, 0
  %tRR_min.i = getelementptr inbounds %struct.nand_interface_config, ptr %20, i32 0, i32 1, i32 1, i32 0, i32 30
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %39)
  %cmp.i.i114.i = icmp eq i32 %39, 1
  %retval.0.i115.i = select i1 %cmp.i.i114.i, ptr %30, ptr inttoptr (i32 -22 to ptr)
  %tRR_min35.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i115.i, i32 0, i32 29
  %cond37.in.i = select i1 %cmp.i111.i, ptr %tRR_min.i, ptr %tRR_min35.i
  %40 = ptrtoint ptr %cond37.in.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %cond37.i = load i32, ptr %cond37.in.i, align 4
  %sub39.i = add i32 %cond37.i, 999
  %div40.i = udiv i32 %sub39.i, 1000
  %41 = ptrtoint ptr %delay_ns27.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %div40.i, ptr %delay_ns27.i, align 4
  %arrayinit.element43.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3
  %42 = ptrtoint ptr %arrayinit.element43.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 2, ptr %arrayinit.element43.i, align 4
  %ctx45.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 1
  %43 = ptrtoint ptr %ctx45.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 4, ptr %ctx45.i, align 4
  %buf.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 1, i32 0, i32 1
  %44 = ptrtoint ptr %buf.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %subfeature_param, ptr %buf.i, align 4
  %force_8bit.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 1, i32 0, i32 2
  %45 = ptrtoint ptr %force_8bit.i to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 1, ptr %force_8bit.i, align 4
  %delay_ns46.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 2
  %46 = ptrtoint ptr %delay_ns46.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %delay_ns46.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %47 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %48 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %49 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %cur_cs.i, align 4
  %51 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %op.i, align 4
  %52 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %instrs.i, ptr %47, align 4
  %53 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 4, ptr %48, align 4
  %54 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %20, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %55)
  %cmp.i116.i = icmp eq i32 %55, 1
  br i1 %cmp.i116.i, label %if.then49.i, label %if.then.i.lor.lhs.false.i.i.i_crit_edge

if.then.i.lor.lhs.false.i.i.i_crit_edge:          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false.i.i.i

if.then49.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %56 = ptrtoint ptr %ctx45.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 8, ptr %ctx45.i, align 4
  %57 = ptrtoint ptr %buf.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %ddrbuf.i, ptr %buf.i, align 4
  br label %lor.lhs.false.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then49.i, %if.then.i.lor.lhs.false.i.i.i_crit_edge
  %58 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i.i = icmp eq ptr %59, null
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i.nand_exec_op.exit.i_crit_edge, label %nand_has_exec_op.exit.i.i

lor.lhs.false.i.i.i.nand_exec_op.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i

nand_has_exec_op.exit.i.i:                        ; preds = %lor.lhs.false.i.i.i
  %exec_op.i.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %59, i32 0, i32 2
  %60 = ptrtoint ptr %exec_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %exec_op.i.i.i, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %61, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %62 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %63)
  %cmp.not.i.i = icmp ult i32 %50, %63
  br i1 %cmp.not.i.i, label %if.end24.i.i, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i

if.end24.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i = call i32 %61(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i

nand_exec_op.exit.i:                              ; preds = %if.end24.i.i, %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge, %lor.lhs.false.i.i.i.nand_exec_op.exit.i_crit_edge
  %retval.0.i118.i = phi i32 [ -22, %do.end.i.i ], [ %call25.i.i, %if.end24.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge ], [ -524, %lor.lhs.false.i.i.i.nand_exec_op.exit.i_crit_edge ]
  %64 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %20, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %65)
  %cmp.i119.i = icmp eq i32 %65, 1
  br i1 %cmp.i119.i, label %for.body.preheader.i, label %nand_exec_op.exit.i.if.end63.i_crit_edge

nand_exec_op.exit.i.if.end63.i_crit_edge:         ; preds = %nand_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63.i

for.body.preheader.i:                             ; preds = %nand_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %66 = ptrtoint ptr %ddrbuf.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %ddrbuf.i, align 8
  %68 = ptrtoint ptr %subfeature_param to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %67, ptr %subfeature_param, align 1
  %69 = ptrtoint ptr %9 to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %9, align 2
  %arrayidx62.1.i = getelementptr i8, ptr %subfeature_param, i32 1
  %71 = ptrtoint ptr %arrayidx62.1.i to i32
  call void @__asan_store1_noabort(i32 %71)
  store i8 %70, ptr %arrayidx62.1.i, align 1
  %72 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %10, align 4
  %arrayidx62.2.i = getelementptr i8, ptr %subfeature_param, i32 2
  %74 = ptrtoint ptr %arrayidx62.2.i to i32
  call void @__asan_store1_noabort(i32 %74)
  store i8 %73, ptr %arrayidx62.2.i, align 1
  %75 = ptrtoint ptr %11 to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %11, align 2
  %arrayidx62.3.i = getelementptr i8, ptr %subfeature_param, i32 3
  %77 = ptrtoint ptr %arrayidx62.3.i to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 %76, ptr %arrayidx62.3.i, align 1
  br label %if.end63.i

if.end63.i:                                       ; preds = %for.body.preheader.i, %nand_exec_op.exit.i.if.end63.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs.i) #14
  br label %nand_get_features_op.exit

if.end64.i:                                       ; preds = %nand_has_exec_op.exit.i.if.end64.i_crit_edge, %lor.lhs.false.i.i.if.end64.i_crit_edge, %if.end5.if.end64.i_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %78 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %cmdfunc.i, align 8
  %conv65.i = and i32 %addr, 255
  tail call void %79(ptr noundef %chip, i32 noundef 238, i32 noundef %conv65.i, i32 noundef -1) #14
  %read_byte.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 3
  %80 = ptrtoint ptr %read_byte.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %read_byte.i, align 4
  %call71.i = tail call zeroext i8 %81(ptr noundef %chip) #14
  %82 = ptrtoint ptr %subfeature_param to i32
  call void @__asan_store1_noabort(i32 %82)
  store i8 %call71.i, ptr %subfeature_param, align 1
  %83 = ptrtoint ptr %read_byte.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %read_byte.i, align 4
  %call71.1.i = tail call zeroext i8 %84(ptr noundef %chip) #14
  %arrayidx72.1.i = getelementptr i8, ptr %subfeature_param, i32 1
  %85 = ptrtoint ptr %arrayidx72.1.i to i32
  call void @__asan_store1_noabort(i32 %85)
  store i8 %call71.1.i, ptr %arrayidx72.1.i, align 1
  %86 = ptrtoint ptr %read_byte.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %read_byte.i, align 4
  %call71.2.i = tail call zeroext i8 %87(ptr noundef %chip) #14
  %arrayidx72.2.i = getelementptr i8, ptr %subfeature_param, i32 2
  %88 = ptrtoint ptr %arrayidx72.2.i to i32
  call void @__asan_store1_noabort(i32 %88)
  store i8 %call71.2.i, ptr %arrayidx72.2.i, align 1
  %89 = ptrtoint ptr %read_byte.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %read_byte.i, align 4
  %call71.3.i = tail call zeroext i8 %90(ptr noundef %chip) #14
  %arrayidx72.3.i = getelementptr i8, ptr %subfeature_param, i32 3
  %91 = ptrtoint ptr %arrayidx72.3.i to i32
  call void @__asan_store1_noabort(i32 %91)
  store i8 %call71.3.i, ptr %arrayidx72.3.i, align 1
  br label %nand_get_features_op.exit

nand_get_features_op.exit:                        ; preds = %if.end64.i, %if.end63.i
  %retval.0.i = phi i32 [ %retval.0.i118.i, %if.end63.i ], [ 0, %if.end64.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ddrbuf.i) #14
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %feature.addr.i)
  br label %return

return:                                           ; preds = %nand_get_features_op.exit, %if.then1, %nand_supports_get_features.exit.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call4, %if.then1 ], [ %retval.0.i, %nand_get_features_op.exit ], [ -524, %nand_supports_get_features.exit.return_crit_edge ], [ -524, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_set_features(ptr noundef %chip, i32 noundef %addr, ptr noundef %subfeature_param) local_unnamed_addr #4 align 64 {
entry:
  %feature.addr.i = alloca i8, align 1
  %instrs.i = alloca [4 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %supports_set_get_features.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 1
  %0 = ptrtoint ptr %supports_set_get_features.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %supports_set_get_features.i, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %tobool.not.i = icmp eq i8 %1, 0
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %nand_supports_set_features.exit

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

nand_supports_set_features.exit:                  ; preds = %entry
  %set_feature_list.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 2
  %div3.i.i = lshr i32 %addr, 5
  %arrayidx.i.i = getelementptr i32, ptr %set_feature_list.i, i32 %div3.i.i
  %2 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %arrayidx.i.i, align 4
  %and.i.i = and i32 %addr, 31
  %4 = shl nuw i32 1, %and.i.i
  %5 = and i32 %3, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.i.not = icmp eq i32 %5, 0
  br i1 %tobool2.i.not, label %nand_supports_set_features.exit.return_crit_edge, label %if.end

nand_supports_set_features.exit.return_crit_edge: ; preds = %nand_supports_set_features.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %nand_supports_set_features.exit
  %set_features = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 13
  %6 = ptrtoint ptr %set_features to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_features, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end5, label %if.then1

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call i32 %7(ptr noundef %chip, i32 noundef %addr, ptr noundef %subfeature_param) #14
  br label %return

if.end5:                                          ; preds = %if.end
  %conv = trunc i32 %addr to i8
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %feature.addr.i)
  %8 = ptrtoint ptr %feature.addr.i to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %feature.addr.i, align 1
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %9 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %10, null
  br i1 %tobool.not.i.i, label %if.end5.if.end.i_crit_edge, label %lor.lhs.false.i.i

if.end5.if.end.i_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

lor.lhs.false.i.i:                                ; preds = %if.end5
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %12, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end.i_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %14, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end.i_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i.if.end.i_crit_edge:       ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i
  %current_interface_config.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %15 = ptrtoint ptr %current_interface_config.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %current_interface_config.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %instrs.i) #14
  %17 = getelementptr inbounds i8, ptr %instrs.i, i32 32
  %18 = call ptr @memset(ptr %17, i32 255, i32 44)
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %19 = call ptr @memset(ptr %instrs.i, i32 0, i32 20)
  %20 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 -17, ptr %ctx.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1
  %21 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %arrayinit.element.i, align 4
  %ctx3.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1
  %22 = ptrtoint ptr %ctx3.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 1, ptr %ctx3.i, align 4
  %addrs.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 1, i32 0, i32 1
  %23 = ptrtoint ptr %addrs.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %feature.addr.i, ptr %addrs.i, align 4
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 1, i32 2
  %24 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i = icmp eq i32 %25, 0
  %tADL_min.i = getelementptr inbounds %struct.nand_interface_config, ptr %16, i32 0, i32 1, i32 1, i32 0, i32 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %25)
  %cmp.i.i85.i = icmp eq i32 %25, 1
  %26 = getelementptr inbounds %struct.nand_interface_config, ptr %16, i32 0, i32 1, i32 1
  %retval.0.i86.i = select i1 %cmp.i.i85.i, ptr %26, ptr inttoptr (i32 -22 to ptr)
  %tADL_min7.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i86.i, i32 0, i32 6
  %cond.in.i = select i1 %cmp.i.i, ptr %tADL_min.i, ptr %tADL_min7.i
  %27 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %sub.i = add i32 %cond.i, 999
  %div.i = udiv i32 %sub.i, 1000
  %28 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %div.i, ptr %delay_ns.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2
  %29 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 3, ptr %arrayinit.element9.i, align 4
  %ctx11.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 1
  %30 = ptrtoint ptr %ctx11.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 4, ptr %ctx11.i, align 4
  %buf.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 1, i32 0, i32 1
  %31 = ptrtoint ptr %buf.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %subfeature_param, ptr %buf.i, align 4
  %force_8bit.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 1, i32 0, i32 2
  %32 = ptrtoint ptr %force_8bit.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 1, ptr %force_8bit.i, align 4
  %delay_ns12.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 2, i32 2
  %33 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.i87.i = icmp eq i32 %34, 0
  %tWB_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %16, i32 0, i32 1, i32 1, i32 0, i32 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %34)
  %cmp.i.i90.i = icmp eq i32 %34, 1
  %retval.0.i91.i = select i1 %cmp.i.i90.i, ptr %26, ptr inttoptr (i32 -22 to ptr)
  %tWB_max20.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i91.i, i32 0, i32 31
  %cond22.in.i = select i1 %cmp.i87.i, ptr %tWB_max.i, ptr %tWB_max20.i
  %35 = ptrtoint ptr %cond22.in.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %cond22.i = load i32, ptr %cond22.in.i, align 4
  %sub24.i = add i32 %cond22.i, 999
  %div25.i = udiv i32 %sub24.i, 1000
  %36 = ptrtoint ptr %delay_ns12.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %div25.i, ptr %delay_ns12.i, align 4
  %arrayinit.element28.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3
  %37 = ptrtoint ptr %arrayinit.element28.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 4, ptr %arrayinit.element28.i, align 4
  %ctx30.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 1
  %38 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %16, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp.i92.i = icmp eq i32 %39, 0
  %tFEAT_max.i = getelementptr inbounds %struct.nand_interface_config, ptr %16, i32 0, i32 1, i32 1, i32 0, i32 19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %39)
  %cmp.i.i95.i = icmp eq i32 %39, 1
  %retval.0.i96.i = select i1 %cmp.i.i95.i, ptr %26, ptr inttoptr (i32 -22 to ptr)
  %tFEAT_max38.i = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i96.i, i32 0, i32 25
  %cond40.in.i = select i1 %cmp.i92.i, ptr %tFEAT_max.i, ptr %tFEAT_max38.i
  %40 = ptrtoint ptr %cond40.in.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %cond40.i = load i32, ptr %cond40.in.i, align 4
  %sub42.i = add i32 %cond40.i, 999999999
  %div43.i = udiv i32 %sub42.i, 1000000000
  %41 = ptrtoint ptr %ctx30.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %div43.i, ptr %ctx30.i, align 4
  %delay_ns46.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 3, i32 2
  %42 = ptrtoint ptr %delay_ns46.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %delay_ns46.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %43 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %44 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %45 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cur_cs.i, align 4
  %47 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %op.i, align 4
  %48 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %instrs.i, ptr %43, align 4
  %49 = ptrtoint ptr %44 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 4, ptr %44, align 4
  %50 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %51, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %52 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %53)
  %cmp.not.i.i = icmp ult i32 %46, %53
  br i1 %cmp.not.i.i, label %if.end24.i.i, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i

if.end24.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i = call i32 %51(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i

nand_exec_op.exit.i:                              ; preds = %if.end24.i.i, %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge
  %retval.0.i98.i = phi i32 [ -22, %do.end.i.i ], [ %call25.i.i, %if.end24.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %instrs.i) #14
  br label %nand_set_features_op.exit

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i.if.end.i_crit_edge, %lor.lhs.false.i.i.if.end.i_crit_edge, %if.end5.if.end.i_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %54 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %cmdfunc.i, align 8
  %conv49.i = and i32 %addr, 255
  tail call void %55(ptr noundef %chip, i32 noundef 239, i32 noundef %conv49.i, i32 noundef -1) #14
  %write_byte.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 4
  %56 = ptrtoint ptr %write_byte.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %write_byte.i, align 8
  %58 = ptrtoint ptr %subfeature_param to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %subfeature_param, align 1
  tail call void %57(ptr noundef %chip, i8 noundef zeroext %59) #14
  %60 = ptrtoint ptr %write_byte.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %write_byte.i, align 8
  %arrayidx.1.i = getelementptr i8, ptr %subfeature_param, i32 1
  %62 = ptrtoint ptr %arrayidx.1.i to i32
  call void @__asan_load1_noabort(i32 %62)
  %63 = load i8, ptr %arrayidx.1.i, align 1
  tail call void %61(ptr noundef %chip, i8 noundef zeroext %63) #14
  %64 = ptrtoint ptr %write_byte.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %write_byte.i, align 8
  %arrayidx.2.i = getelementptr i8, ptr %subfeature_param, i32 2
  %66 = ptrtoint ptr %arrayidx.2.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %arrayidx.2.i, align 1
  tail call void %65(ptr noundef %chip, i8 noundef zeroext %67) #14
  %68 = ptrtoint ptr %write_byte.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %write_byte.i, align 8
  %arrayidx.3.i = getelementptr i8, ptr %subfeature_param, i32 3
  %70 = ptrtoint ptr %arrayidx.3.i to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %arrayidx.3.i, align 1
  tail call void %69(ptr noundef %chip, i8 noundef zeroext %71) #14
  %waitfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 10
  %72 = ptrtoint ptr %waitfunc.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %waitfunc.i, align 8
  %call53.i = tail call i32 %73(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i)
  %cmp54.i = icmp slt i32 %call53.i, 0
  br i1 %cmp54.i, label %if.end.i.nand_set_features_op.exit_crit_edge, label %if.end57.i

if.end.i.nand_set_features_op.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_set_features_op.exit

if.end57.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %and.i = and i32 %call53.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i14 = icmp eq i32 %and.i, 0
  %..i = select i1 %tobool.not.i14, i32 0, i32 -5
  br label %nand_set_features_op.exit

nand_set_features_op.exit:                        ; preds = %if.end57.i, %if.end.i.nand_set_features_op.exit_crit_edge, %nand_exec_op.exit.i
  %retval.0.i = phi i32 [ %retval.0.i98.i, %nand_exec_op.exit.i ], [ %call53.i, %if.end.i.nand_set_features_op.exit_crit_edge ], [ %..i, %if.end57.i ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %feature.addr.i)
  br label %return

return:                                           ; preds = %nand_set_features_op.exit, %if.then1, %nand_supports_set_features.exit.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call4, %if.then1 ], [ %retval.0.i, %nand_set_features_op.exit ], [ -524, %nand_supports_set_features.exit.return_crit_edge ], [ -524, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_check_erased_ecc_chunk(ptr noundef %data, i32 noundef %datalen, ptr noundef %ecc, i32 noundef %ecclen, ptr noundef %extraoob, i32 noundef %extraooblen, i32 noundef %bitflips_threshold) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %data, i32 noundef %datalen, i32 noundef %bitflips_threshold)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %sub = sub i32 %bitflips_threshold, %call
  %call1 = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %ecc, i32 noundef %ecclen, i32 noundef %sub)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp2 = icmp slt i32 %call1, 0
  br i1 %cmp2, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %sub5 = sub i32 %sub, %call1
  %call6 = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %extraoob, i32 noundef %extraooblen, i32 noundef %sub5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %if.end4.cleanup_crit_edge, label %if.end9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end9.if.end11_crit_edge, label %if.then10

if.end9.if.end11_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.then10:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %0 = call ptr @memset(ptr %data, i32 255, i32 %datalen)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end9.if.end11_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool12.not = icmp eq i32 %call1, 0
  br i1 %tobool12.not, label %if.end11.if.end14_crit_edge, label %if.then13

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  %1 = call ptr @memset(ptr %ecc, i32 255, i32 %ecclen)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end11.if.end14_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool15.not = icmp eq i32 %call6, 0
  br i1 %tobool15.not, label %if.end14.if.end17_crit_edge, label %if.then16

if.end14.if.end17_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %2 = call ptr @memset(ptr %extraoob, i32 255, i32 %extraooblen)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end14.if.end17_crit_edge
  %add = add nuw i32 %call1, %call
  %add18 = add i32 %add, %call6
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %add18, %if.end17 ], [ %call, %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ], [ %call6, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_check_erased_buf(ptr noundef %buf, i32 noundef %len, i32 noundef %bitflips_threshold) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %tobool.not247 = icmp eq i32 %len, 0
  %0 = ptrtoint ptr %buf to i32
  %rem248 = and i32 %0, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem248)
  %tobool1.not249 = icmp eq i32 %rem248, 0
  %or.cond250 = or i1 %tobool.not247, %tobool1.not249
  br i1 %or.cond250, label %entry.for.cond67.preheader_crit_edge, label %cond.false

entry.for.cond67.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond67.preheader

for.cond67.preheader:                             ; preds = %for.inc.3, %for.inc.2.for.cond67.preheader_crit_edge, %for.inc.1.for.cond67.preheader_crit_edge, %for.inc.for.cond67.preheader_crit_edge, %entry.for.cond67.preheader_crit_edge
  %len.addr.0.lcssa = phi i32 [ %len, %entry.for.cond67.preheader_crit_edge ], [ %dec, %for.inc.for.cond67.preheader_crit_edge ], [ %dec.1, %for.inc.1.for.cond67.preheader_crit_edge ], [ %dec.2, %for.inc.2.for.cond67.preheader_crit_edge ], [ %dec.3, %for.inc.3 ]
  %bitmap.0.lcssa = phi ptr [ %buf, %entry.for.cond67.preheader_crit_edge ], [ %incdec.ptr, %for.inc.for.cond67.preheader_crit_edge ], [ %incdec.ptr.1, %for.inc.1.for.cond67.preheader_crit_edge ], [ %incdec.ptr.2, %for.inc.2.for.cond67.preheader_crit_edge ], [ %incdec.ptr.3, %for.inc.3 ]
  %bitflips.0.lcssa = phi i32 [ 0, %entry.for.cond67.preheader_crit_edge ], [ %sub, %for.inc.for.cond67.preheader_crit_edge ], [ %add60.1, %for.inc.1.for.cond67.preheader_crit_edge ], [ %add60.2, %for.inc.2.for.cond67.preheader_crit_edge ], [ %add60.3, %for.inc.3 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %len.addr.0.lcssa)
  %cmp68256 = icmp ugt i32 %len.addr.0.lcssa, 3
  br i1 %cmp68256, label %for.cond67.preheader.for.body70_crit_edge, label %for.cond67.preheader.for.cond91.preheader_crit_edge

for.cond67.preheader.for.cond91.preheader_crit_edge: ; preds = %for.cond67.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond91.preheader

for.cond67.preheader.for.body70_crit_edge:        ; preds = %for.cond67.preheader
  br label %for.body70

cond.false:                                       ; preds = %entry
  %1 = ptrtoint ptr %buf to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %buf, align 1
  %conv59 = zext i8 %2 to i32
  %call.i = tail call i32 @__sw_hweight8(i32 noundef %conv59) #14
  %sub = sub i32 8, %call.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %bitflips_threshold)
  %cmp = icmp sgt i32 %sub, %bitflips_threshold
  br i1 %cmp, label %cond.false.cleanup180_crit_edge, label %for.inc, !prof !378

cond.false.cleanup180_crit_edge:                  ; preds = %cond.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc:                                          ; preds = %cond.false
  %dec = add i32 %len, -1
  %incdec.ptr = getelementptr i8, ptr %buf, i32 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %tobool.not = icmp eq i32 %dec, 0
  %3 = ptrtoint ptr %incdec.ptr to i32
  %rem = and i32 %3, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool1.not = icmp eq i32 %rem, 0
  %or.cond = or i1 %tobool.not, %tobool1.not
  br i1 %or.cond, label %for.inc.for.cond67.preheader_crit_edge, label %cond.false.1

for.inc.for.cond67.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond67.preheader

cond.false.1:                                     ; preds = %for.inc
  %4 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %incdec.ptr, align 1
  %conv59.1 = zext i8 %5 to i32
  %call.i.1 = tail call i32 @__sw_hweight8(i32 noundef %conv59.1) #14
  %sub.1 = sub i32 8, %call.i.1
  %add60.1 = add i32 %sub.1, %sub
  call void @__sanitizer_cov_trace_cmp4(i32 %add60.1, i32 %bitflips_threshold)
  %cmp.1 = icmp sgt i32 %add60.1, %bitflips_threshold
  br i1 %cmp.1, label %cond.false.1.cleanup180_crit_edge, label %for.inc.1, !prof !378

cond.false.1.cleanup180_crit_edge:                ; preds = %cond.false.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc.1:                                        ; preds = %cond.false.1
  %dec.1 = add i32 %len, -2
  %incdec.ptr.1 = getelementptr i8, ptr %buf, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.1)
  %tobool.not.1 = icmp eq i32 %dec.1, 0
  %6 = ptrtoint ptr %incdec.ptr.1 to i32
  %rem.1 = and i32 %6, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.1)
  %tobool1.not.1 = icmp eq i32 %rem.1, 0
  %or.cond.1 = or i1 %tobool.not.1, %tobool1.not.1
  br i1 %or.cond.1, label %for.inc.1.for.cond67.preheader_crit_edge, label %cond.false.2

for.inc.1.for.cond67.preheader_crit_edge:         ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond67.preheader

cond.false.2:                                     ; preds = %for.inc.1
  %7 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %incdec.ptr.1, align 1
  %conv59.2 = zext i8 %8 to i32
  %call.i.2 = tail call i32 @__sw_hweight8(i32 noundef %conv59.2) #14
  %sub.2 = sub i32 8, %call.i.2
  %add60.2 = add i32 %sub.2, %add60.1
  call void @__sanitizer_cov_trace_cmp4(i32 %add60.2, i32 %bitflips_threshold)
  %cmp.2 = icmp sgt i32 %add60.2, %bitflips_threshold
  br i1 %cmp.2, label %cond.false.2.cleanup180_crit_edge, label %for.inc.2, !prof !378

cond.false.2.cleanup180_crit_edge:                ; preds = %cond.false.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc.2:                                        ; preds = %cond.false.2
  %dec.2 = add i32 %len, -3
  %incdec.ptr.2 = getelementptr i8, ptr %buf, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.2)
  %tobool.not.2 = icmp eq i32 %dec.2, 0
  %9 = ptrtoint ptr %incdec.ptr.2 to i32
  %rem.2 = and i32 %9, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.2)
  %tobool1.not.2 = icmp eq i32 %rem.2, 0
  %or.cond.2 = or i1 %tobool.not.2, %tobool1.not.2
  br i1 %or.cond.2, label %for.inc.2.for.cond67.preheader_crit_edge, label %cond.false.3

for.inc.2.for.cond67.preheader_crit_edge:         ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond67.preheader

cond.false.3:                                     ; preds = %for.inc.2
  %10 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %incdec.ptr.2, align 1
  %conv59.3 = zext i8 %11 to i32
  %call.i.3 = tail call i32 @__sw_hweight8(i32 noundef %conv59.3) #14
  %sub.3 = sub i32 8, %call.i.3
  %add60.3 = add i32 %sub.3, %add60.2
  call void @__sanitizer_cov_trace_cmp4(i32 %add60.3, i32 %bitflips_threshold)
  %cmp.3 = icmp sgt i32 %add60.3, %bitflips_threshold
  br i1 %cmp.3, label %cond.false.3.cleanup180_crit_edge, label %for.inc.3, !prof !378

cond.false.3.cleanup180_crit_edge:                ; preds = %cond.false.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc.3:                                        ; preds = %cond.false.3
  call void @__sanitizer_cov_trace_pc() #16
  %dec.3 = add i32 %len, -4
  %incdec.ptr.3 = getelementptr i8, ptr %buf, i32 4
  br label %for.cond67.preheader

for.cond91.preheader:                             ; preds = %for.inc88.for.cond91.preheader_crit_edge, %for.cond67.preheader.for.cond91.preheader_crit_edge
  %len.addr.1.lcssa = phi i32 [ %len.addr.0.lcssa, %for.cond67.preheader.for.cond91.preheader_crit_edge ], [ %sub89, %for.inc88.for.cond91.preheader_crit_edge ]
  %bitmap.1.lcssa = phi ptr [ %bitmap.0.lcssa, %for.cond67.preheader.for.cond91.preheader_crit_edge ], [ %add.ptr, %for.inc88.for.cond91.preheader_crit_edge ]
  %bitflips.1.lcssa = phi i32 [ %bitflips.0.lcssa, %for.cond67.preheader.for.cond91.preheader_crit_edge ], [ %bitflips.2.ph, %for.inc88.for.cond91.preheader_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.addr.1.lcssa)
  %cmp92263.not = icmp eq i32 %len.addr.1.lcssa, 0
  br i1 %cmp92263.not, label %for.cond91.preheader.cleanup180_crit_edge, label %for.cond91.preheader.cond.false159_crit_edge

for.cond91.preheader.cond.false159_crit_edge:     ; preds = %for.cond91.preheader
  br label %cond.false159

for.cond91.preheader.cleanup180_crit_edge:        ; preds = %for.cond91.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.body70:                                       ; preds = %for.inc88.for.body70_crit_edge, %for.cond67.preheader.for.body70_crit_edge
  %bitflips.1259 = phi i32 [ %bitflips.2.ph, %for.inc88.for.body70_crit_edge ], [ %bitflips.0.lcssa, %for.cond67.preheader.for.body70_crit_edge ]
  %bitmap.1258 = phi ptr [ %add.ptr, %for.inc88.for.body70_crit_edge ], [ %bitmap.0.lcssa, %for.cond67.preheader.for.body70_crit_edge ]
  %len.addr.1257 = phi i32 [ %sub89, %for.inc88.for.body70_crit_edge ], [ %len.addr.0.lcssa, %for.cond67.preheader.for.body70_crit_edge ]
  %12 = ptrtoint ptr %bitmap.1258 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bitmap.1258, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %cmp71 = icmp eq i32 %13, -1
  br i1 %cmp71, label %for.body70.for.inc88_crit_edge, label %cond.false.i

for.body70.for.inc88_crit_edge:                   ; preds = %for.body70
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc88

cond.false.i:                                     ; preds = %for.body70
  %call.i.i = tail call i32 @__sw_hweight32(i32 noundef %13) #14
  %sub76 = sub i32 32, %call.i.i
  %add77 = add i32 %sub76, %bitflips.1259
  call void @__sanitizer_cov_trace_cmp4(i32 %add77, i32 %bitflips_threshold)
  %cmp78 = icmp sgt i32 %add77, %bitflips_threshold
  br i1 %cmp78, label %cond.false.i.cleanup180_crit_edge, label %cond.false.i.for.inc88_crit_edge

cond.false.i.for.inc88_crit_edge:                 ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc88

cond.false.i.cleanup180_crit_edge:                ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc88:                                        ; preds = %cond.false.i.for.inc88_crit_edge, %for.body70.for.inc88_crit_edge
  %bitflips.2.ph = phi i32 [ %add77, %cond.false.i.for.inc88_crit_edge ], [ %bitflips.1259, %for.body70.for.inc88_crit_edge ]
  %sub89 = add i32 %len.addr.1257, -4
  %add.ptr = getelementptr i8, ptr %bitmap.1258, i32 4
  %cmp68 = icmp ugt i32 %sub89, 3
  br i1 %cmp68, label %for.inc88.for.body70_crit_edge, label %for.inc88.for.cond91.preheader_crit_edge

for.inc88.for.cond91.preheader_crit_edge:         ; preds = %for.inc88
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond91.preheader

for.inc88.for.body70_crit_edge:                   ; preds = %for.inc88
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body70

cond.false159:                                    ; preds = %for.inc176.cond.false159_crit_edge, %for.cond91.preheader.cond.false159_crit_edge
  %bitflips.3266 = phi i32 [ %add165, %for.inc176.cond.false159_crit_edge ], [ %bitflips.1.lcssa, %for.cond91.preheader.cond.false159_crit_edge ]
  %bitmap.2265 = phi ptr [ %incdec.ptr178, %for.inc176.cond.false159_crit_edge ], [ %bitmap.1.lcssa, %for.cond91.preheader.cond.false159_crit_edge ]
  %len.addr.2264 = phi i32 [ %dec177, %for.inc176.cond.false159_crit_edge ], [ %len.addr.1.lcssa, %for.cond91.preheader.cond.false159_crit_edge ]
  %14 = ptrtoint ptr %bitmap.2265 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bitmap.2265, align 1
  %conv160 = zext i8 %15 to i32
  %call.i235 = tail call i32 @__sw_hweight8(i32 noundef %conv160) #14
  %sub164 = sub i32 8, %call.i235
  %add165 = add i32 %sub164, %bitflips.3266
  call void @__sanitizer_cov_trace_cmp4(i32 %add165, i32 %bitflips_threshold)
  %cmp166 = icmp sgt i32 %add165, %bitflips_threshold
  br i1 %cmp166, label %cond.false159.cleanup180_crit_edge, label %for.inc176, !prof !378

cond.false159.cleanup180_crit_edge:               ; preds = %cond.false159
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc176:                                       ; preds = %cond.false159
  %dec177 = add nsw i32 %len.addr.2264, -1
  %incdec.ptr178 = getelementptr i8, ptr %bitmap.2265, i32 1
  %cmp92 = icmp sgt i32 %len.addr.2264, 1
  br i1 %cmp92, label %for.inc176.cond.false159_crit_edge, label %for.inc176.cleanup180_crit_edge

for.inc176.cleanup180_crit_edge:                  ; preds = %for.inc176
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup180

for.inc176.cond.false159_crit_edge:               ; preds = %for.inc176
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.false159

cleanup180:                                       ; preds = %for.inc176.cleanup180_crit_edge, %cond.false159.cleanup180_crit_edge, %cond.false.i.cleanup180_crit_edge, %for.cond91.preheader.cleanup180_crit_edge, %cond.false.3.cleanup180_crit_edge, %cond.false.2.cleanup180_crit_edge, %cond.false.1.cleanup180_crit_edge, %cond.false.cleanup180_crit_edge
  %retval.2 = phi i32 [ %bitflips.1.lcssa, %for.cond91.preheader.cleanup180_crit_edge ], [ -74, %cond.false159.cleanup180_crit_edge ], [ %add165, %for.inc176.cleanup180_crit_edge ], [ -74, %cond.false.i.cleanup180_crit_edge ], [ -74, %cond.false.3.cleanup180_crit_edge ], [ -74, %cond.false.2.cleanup180_crit_edge ], [ -74, %cond.false.1.cleanup180_crit_edge ], [ -74, %cond.false.cleanup180_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @nand_read_page_raw_notsupp(ptr nocapture noundef readnone %chip, ptr nocapture noundef readnone %buf, i32 noundef %oob_required, i32 noundef %page) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_page_raw(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  %call1 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef %buf, i32 noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oob_required)
  %tobool2.not = icmp eq i32 %oob_required, 0
  br i1 %tobool2.not, label %if.end.if.end8_crit_edge, label %if.then3

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then3:                                         ; preds = %if.end
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %2 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %4 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %oobsize, align 4
  %call4 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %3, i32 noundef %5, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then3.if.end8_crit_edge, label %if.then3.cleanup_crit_edge

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then3.if.end8_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.end8:                                          ; preds = %if.then3.if.end8_crit_edge, %if.end.if.end8_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end8 ], [ %call1, %entry.cleanup_crit_edge ], [ %call4, %if.then3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_monolithic_read_page_raw(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oob_required)
  %tobool.not = icmp eq i32 %oob_required, 0
  br i1 %tobool.not, label %entry.if.end3_crit_edge, label %if.then

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then:                                          ; preds = %entry
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize, align 4
  %add = add i32 %3, %1
  %data_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %4 = ptrtoint ptr %data_buf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data_buf, align 8
  %cmp.not = icmp eq ptr %5, %buf
  br i1 %cmp.not, label %if.then.if.end3_crit_edge, label %if.then1

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %6 = ptrtoint ptr %page.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %page.i, align 4
  br label %if.end3

if.end3:                                          ; preds = %if.then1, %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %size.0 = phi i32 [ %add, %if.then1 ], [ %add, %if.then.if.end3_crit_edge ], [ %1, %entry.if.end3_crit_edge ]
  %read_buf.0 = phi ptr [ %5, %if.then1 ], [ %buf, %if.then.if.end3_crit_edge ], [ %buf, %entry.if.end3_crit_edge ]
  %call4 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef %read_buf.0, i32 noundef %size.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end7, label %if.end3.cleanup_crit_edge

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %data_buf8 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %7 = ptrtoint ptr %data_buf8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %data_buf8, align 8
  %cmp9.not = icmp eq ptr %8, %buf
  br i1 %cmp9.not, label %if.end7.cleanup_crit_edge, label %if.then10

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then10:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %writesize, align 4
  %11 = call ptr @memcpy(ptr %buf, ptr %read_buf.0, i32 %10)
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end7.cleanup_crit_edge, %if.end3.cleanup_crit_edge
  ret i32 %call4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_page_hwecc_oob_first(ptr noundef %chip, ptr noundef %buf, i32 %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %code_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %6 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %code_buf, align 8
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %8 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %10 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %oobsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i = icmp eq i32 %11, 0
  %tobool1.not.i = icmp ne ptr %9, null
  %12 = or i1 %tobool1.not.i, %tobool.not.i
  br i1 %12, label %if.end3.i, label %entry.cleanup36_crit_edge

entry.cleanup36_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.end3.i:                                        ; preds = %entry
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %13 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %if.end3.i.if.end8.i_crit_edge, label %lor.lhs.false.i.i

if.end3.i.if.end8.i_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

lor.lhs.false.i.i:                                ; preds = %if.end3.i
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %16, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end8.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end8.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %18, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end8.i_crit_edge, label %nand_read_oob_op.exit

nand_has_exec_op.exit.i.if.end8.i_crit_edge:      ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

if.end8.i:                                        ; preds = %nand_has_exec_op.exit.i.if.end8.i_crit_edge, %lor.lhs.false.i.i.if.end8.i_crit_edge, %if.end3.i.if.end8.i_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %19 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %20(ptr noundef %chip, i32 noundef 80, i32 noundef 0, i32 noundef %page) #14
  br i1 %tobool.not.i, label %if.end8.i.if.end_crit_edge, label %if.then10.i

if.end8.i.if.end_crit_edge:                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %21 = ptrtoint ptr %read_buf.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %read_buf.i, align 8
  tail call void %22(ptr noundef %chip, ptr noundef %9, i32 noundef %11) #14
  br label %if.end

nand_read_oob_op.exit:                            ; preds = %nand_has_exec_op.exit.i
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %23 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %writesize.i, align 4
  %call7.i = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %24, ptr noundef %9, i32 noundef %11) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_read_oob_op.exit.if.end_crit_edge, label %nand_read_oob_op.exit.cleanup36_crit_edge

nand_read_oob_op.exit.cleanup36_crit_edge:        ; preds = %nand_read_oob_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

nand_read_oob_op.exit.if.end_crit_edge:           ; preds = %nand_read_oob_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %nand_read_oob_op.exit.if.end_crit_edge, %if.then10.i, %if.end8.i.if.end_crit_edge
  %call5 = tail call i32 @nand_change_read_column_op(ptr noundef %chip, i32 noundef 0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end.cleanup36_crit_edge

if.end.cleanup36_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.end8:                                          ; preds = %if.end
  %25 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %27 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %total, align 8
  %call11 = tail call i32 @mtd_ooblayout_get_eccbytes(ptr noundef %chip, ptr noundef %7, ptr noundef %26, i32 noundef 0, i32 noundef %28) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %for.cond.preheader, label %if.end8.cleanup36_crit_edge

if.end8.cleanup36_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

for.cond.preheader:                               ; preds = %if.end8
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool15.not109 = icmp eq i32 %5, 0
  br i1 %tobool15.not109, label %for.cond.preheader.cleanup36_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup36_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %correct = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %ecc_stats32 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %failed = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %max_bitflips.0117 = phi i32 [ 0, %for.body.lr.ph ], [ %max_bitflips.2, %for.inc.for.body_crit_edge ]
  %p.0112 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %for.inc.for.body_crit_edge ]
  %eccsteps.0111 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %for.inc.for.body_crit_edge ]
  %i.0110 = phi i32 [ 0, %for.body.lr.ph ], [ %add35, %for.inc.for.body_crit_edge ]
  %29 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %hwctl, align 4
  tail call void %30(ptr noundef %chip, i32 noundef 0) #14
  %call17 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %p.0112, i32 noundef %1, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.end20, label %for.body.cleanup36_crit_edge

for.body.cleanup36_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.end20:                                         ; preds = %for.body
  %31 = ptrtoint ptr %correct to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %correct, align 4
  %arrayidx = getelementptr i8, ptr %7, i32 %i.0110
  %call22 = tail call i32 %32(ptr noundef %chip, ptr noundef %p.0112, ptr noundef %arrayidx, ptr noundef null) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %call22)
  %cmp = icmp eq i32 %call22, -74
  br i1 %cmp, label %land.lhs.true, label %if.end20.if.end29_crit_edge

if.end20.if.end29_crit_edge:                      ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

land.lhs.true:                                    ; preds = %if.end20
  %33 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %options, align 8
  %and = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %land.lhs.true.if.then31_crit_edge, label %if.then25

land.lhs.true.if.then31_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then31

if.then25:                                        ; preds = %land.lhs.true
  %35 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %strength, align 4
  %call.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %p.0112, i32 noundef %1, i32 noundef %36) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i89 = icmp slt i32 %call.i, 0
  br i1 %cmp.i89, label %if.then25.if.then31_crit_edge, label %if.end.i90

if.then25.if.then31_crit_edge:                    ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then31

if.end.i90:                                       ; preds = %if.then25
  %sub.i = sub i32 %36, %call.i
  %call1.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %arrayidx, i32 noundef %3, i32 noundef %sub.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp2.i = icmp slt i32 %call1.i, 0
  br i1 %cmp2.i, label %if.end.i90.if.then31_crit_edge, label %nand_check_erased_buf.exit.thread101

if.end.i90.if.then31_crit_edge:                   ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then31

nand_check_erased_buf.exit.thread101:             ; preds = %if.end.i90
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i91 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i91, label %nand_check_erased_buf.exit.thread101.if.end11.i_crit_edge, label %if.then10.i92

nand_check_erased_buf.exit.thread101.if.end11.i_crit_edge: ; preds = %nand_check_erased_buf.exit.thread101
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then10.i92:                                    ; preds = %nand_check_erased_buf.exit.thread101
  call void @__sanitizer_cov_trace_pc() #16
  %37 = call ptr @memset(ptr %p.0112, i32 255, i32 %1)
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i92, %nand_check_erased_buf.exit.thread101.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool12.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool12.not.i, label %if.end11.i.if.end17.i_crit_edge, label %if.then13.i

if.end11.i.if.end17.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  %38 = call ptr @memset(ptr %arrayidx, i32 255, i32 %3)
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i.if.end17.i_crit_edge
  %add.i = add nuw i32 %call1.i, %call.i
  br label %if.end29

if.end29:                                         ; preds = %if.end17.i, %if.end20.if.end29_crit_edge
  %stat.0 = phi i32 [ %call22, %if.end20.if.end29_crit_edge ], [ %add.i, %if.end17.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stat.0)
  %cmp30 = icmp slt i32 %stat.0, 0
  br i1 %cmp30, label %if.end29.if.then31_crit_edge, label %if.else

if.end29.if.then31_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then31

if.then31:                                        ; preds = %if.end29.if.then31_crit_edge, %if.end.i90.if.then31_crit_edge, %if.then25.if.then31_crit_edge, %land.lhs.true.if.then31_crit_edge
  %39 = ptrtoint ptr %failed to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %failed, align 4
  %inc = add i32 %40, 1
  store i32 %inc, ptr %failed, align 4
  br label %for.inc

if.else:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %41 = ptrtoint ptr %ecc_stats32 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ecc_stats32, align 4
  %add = add i32 %42, %stat.0
  store i32 %add, ptr %ecc_stats32, align 4
  %43 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0117, i32 %stat.0)
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then31
  %max_bitflips.2 = phi i32 [ %max_bitflips.0117, %if.then31 ], [ %43, %if.else ]
  %dec = add i32 %eccsteps.0111, -1
  %add35 = add i32 %i.0110, %3
  %add.ptr = getelementptr i8, ptr %p.0112, i32 %1
  %tobool15.not = icmp eq i32 %dec, 0
  br i1 %tobool15.not, label %for.inc.cleanup36_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup36_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

cleanup36:                                        ; preds = %for.inc.cleanup36_crit_edge, %for.body.cleanup36_crit_edge, %for.cond.preheader.cleanup36_crit_edge, %if.end8.cleanup36_crit_edge, %if.end.cleanup36_crit_edge, %nand_read_oob_op.exit.cleanup36_crit_edge, %entry.cleanup36_crit_edge
  %retval.2 = phi i32 [ %call7.i, %nand_read_oob_op.exit.cleanup36_crit_edge ], [ %call5, %if.end.cleanup36_crit_edge ], [ %call11, %if.end8.cleanup36_crit_edge ], [ -22, %entry.cleanup36_crit_edge ], [ 0, %for.cond.preheader.cleanup36_crit_edge ], [ %call17, %for.body.cleanup36_crit_edge ], [ %max_bitflips.2, %for.inc.cleanup36_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_get_eccbytes(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_read_oob_std(ptr noundef %chip, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %0 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i = icmp eq i32 %3, 0
  %tobool1.not.i = icmp ne ptr %1, null
  %4 = or i1 %tobool1.not.i, %tobool.not.i
  br i1 %4, label %if.end3.i, label %entry.nand_read_oob_op.exit_crit_edge

entry.nand_read_oob_op.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_read_oob_op.exit

if.end3.i:                                        ; preds = %entry
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i, label %if.end3.i.if.end8.i_crit_edge, label %lor.lhs.false.i.i

if.end3.i.if.end8.i_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

lor.lhs.false.i.i:                                ; preds = %if.end3.i
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end8.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end8.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end8.i_crit_edge, label %if.then5.i

nand_has_exec_op.exit.i.if.end8.i_crit_edge:      ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

if.then5.i:                                       ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %11 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %writesize.i, align 4
  %call7.i = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %12, ptr noundef %1, i32 noundef %3) #14
  br label %nand_read_oob_op.exit

if.end8.i:                                        ; preds = %nand_has_exec_op.exit.i.if.end8.i_crit_edge, %lor.lhs.false.i.i.if.end8.i_crit_edge, %if.end3.i.if.end8.i_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %13 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %14(ptr noundef %chip, i32 noundef 80, i32 noundef 0, i32 noundef %page) #14
  br i1 %tobool.not.i, label %if.end8.i.nand_read_oob_op.exit_crit_edge, label %if.then10.i

if.end8.i.nand_read_oob_op.exit_crit_edge:        ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_read_oob_op.exit

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %read_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 6
  %15 = ptrtoint ptr %read_buf.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %read_buf.i, align 8
  tail call void %16(ptr noundef %chip, ptr noundef %1, i32 noundef %3) #14
  br label %nand_read_oob_op.exit

nand_read_oob_op.exit:                            ; preds = %if.then10.i, %if.end8.i.nand_read_oob_op.exit_crit_edge, %if.then5.i, %entry.nand_read_oob_op.exit_crit_edge
  %retval.0.i = phi i32 [ %call7.i, %if.then5.i ], [ -22, %entry.nand_read_oob_op.exit_crit_edge ], [ 0, %if.then10.i ], [ 0, %if.end8.i.nand_read_oob_op.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_write_oob_std(ptr noundef %chip, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %2 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %4 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %oobsize, align 4
  %call1 = tail call i32 @nand_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %1, ptr noundef %3, i32 noundef %5)
  ret i32 %call1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @nand_write_page_raw_notsupp(ptr nocapture noundef readnone %chip, ptr nocapture noundef readnone %buf, i32 noundef %oob_required, i32 noundef %page) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_write_page_raw(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp ne i32 %1, 0
  %tobool1.not.i = icmp eq ptr %buf, null
  %or.cond.i = and i1 %tobool1.not.i, %tobool.not.i
  br i1 %or.cond.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize.i, align 4
  %4 = xor i32 %1, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %4)
  %cmp.i = icmp ugt i32 %3, %4
  br i1 %cmp.i, label %if.end.i.cleanup_crit_edge, label %if.end4.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %5 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %6, null
  br i1 %tobool.not.i.i, label %if.end4.i.if.end8.i_crit_edge, label %lor.lhs.false.i.i

if.end4.i.if.end8.i_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

lor.lhs.false.i.i:                                ; preds = %if.end4.i
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %8, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end8.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end8.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %10, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end8.i_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.if.end8.i_crit_edge:      ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i

if.end8.i:                                        ; preds = %nand_has_exec_op.exit.i.if.end8.i_crit_edge, %lor.lhs.false.i.i.if.end8.i_crit_edge, %if.end4.i.if.end8.i_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %11 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %12(ptr noundef %chip, i32 noundef 128, i32 noundef 0, i32 noundef %page) #14
  br i1 %tobool1.not.i, label %if.end8.i.if.end_crit_edge, label %if.then10.i

if.end8.i.if.end_crit_edge:                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then10.i:                                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %13 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %write_buf.i, align 4
  tail call void %14(ptr noundef %chip, ptr noundef nonnull %buf, i32 noundef %1) #14
  br label %if.end

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef %buf, i32 noundef %1, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_prog_page_begin_op.exit.if.end_crit_edge, label %nand_prog_page_begin_op.exit.cleanup_crit_edge

nand_prog_page_begin_op.exit.cleanup_crit_edge:   ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_prog_page_begin_op.exit.if.end_crit_edge:    ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %nand_prog_page_begin_op.exit.if.end_crit_edge, %if.then10.i, %if.end8.i.if.end_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oob_required)
  %tobool2.not = icmp eq i32 %oob_required, 0
  br i1 %tobool2.not, label %if.end.if.end8_crit_edge, label %if.then3

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.then3:                                         ; preds = %if.end
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %15 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %oob_poi, align 4
  %17 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %oobsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i19 = icmp eq i32 %18, 0
  %tobool1.not.i20 = icmp eq ptr %16, null
  %or.cond.i21 = or i1 %tobool1.not.i20, %tobool.not.i19
  br i1 %or.cond.i21, label %if.then3.cleanup_crit_edge, label %if.end.i24

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i24:                                       ; preds = %if.then3
  %19 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i23 = icmp eq ptr %20, null
  br i1 %tobool.not.i.i23, label %if.end.i24.nand_write_data_op.exit.thread_crit_edge, label %lor.lhs.false.i.i27

if.end.i24.nand_write_data_op.exit.thread_crit_edge: ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

lor.lhs.false.i.i27:                              ; preds = %if.end.i24
  %ops.i.i25 = getelementptr inbounds %struct.nand_controller, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %ops.i.i25 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops.i.i25, align 4
  %tobool2.not.i.i26 = icmp eq ptr %22, null
  br i1 %tobool2.not.i.i26, label %lor.lhs.false.i.i27.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i30

lor.lhs.false.i.i27.nand_write_data_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i27
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i30:                        ; preds = %lor.lhs.false.i.i27
  %exec_op.i.i28 = getelementptr inbounds %struct.nand_controller_ops, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %exec_op.i.i28 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %exec_op.i.i28, align 4
  %tobool6.not.i.not.i29 = icmp eq ptr %24, null
  br i1 %tobool6.not.i.not.i29, label %nand_has_exec_op.exit.i30.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i30.nand_write_data_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i30
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i30
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %25 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 16777215, ptr %25, align 4
  %27 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 3, ptr %instrs.i, align 4
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %28 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %18, ptr %ctx.i, align 4
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %29 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %16, ptr %buf4.i, align 4
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %30 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %31 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %32 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %33 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cur_cs.i, align 4
  %35 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %op.i, align 4
  %36 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %instrs.i, ptr %31, align 4
  %37 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 1, ptr %32, align 4
  %38 = ptrtoint ptr %exec_op.i.i28 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %exec_op.i.i28, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %39, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread44_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread44_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread44

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %40 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %41)
  %cmp.not.i.i = icmp ult i32 %34, %41
  br i1 %cmp.not.i.i, label %nand_write_data_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit.thread44

nand_write_data_op.exit.thread:                   ; preds = %nand_has_exec_op.exit.i30.nand_write_data_op.exit.thread_crit_edge, %lor.lhs.false.i.i27.nand_write_data_op.exit.thread_crit_edge, %if.end.i24.nand_write_data_op.exit.thread_crit_edge
  %write_buf.i31 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %42 = ptrtoint ptr %write_buf.i31 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %write_buf.i31, align 4
  tail call void %43(ptr noundef %chip, ptr noundef nonnull %16, i32 noundef %18) #14
  br label %if.end8

nand_write_data_op.exit.thread44:                 ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread44_crit_edge
  %retval.0.i34.i.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread44_crit_edge ], [ -22, %do.end.i.i ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

nand_write_data_op.exit:                          ; preds = %if.end.i.i
  %call25.i.i = call i32 %39(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool5.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool5.not, label %nand_write_data_op.exit.if.end8_crit_edge, label %nand_write_data_op.exit.cleanup_crit_edge

nand_write_data_op.exit.cleanup_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit.if.end8_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

if.end8:                                          ; preds = %nand_write_data_op.exit.if.end8_crit_edge, %nand_write_data_op.exit.thread, %if.end.if.end8_crit_edge
  %call9 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %nand_write_data_op.exit.cleanup_crit_edge, %nand_write_data_op.exit.thread44, %if.then3.cleanup_crit_edge, %nand_prog_page_begin_op.exit.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end8 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup_crit_edge ], [ %call25.i.i, %nand_write_data_op.exit.cleanup_crit_edge ], [ %retval.0.i34.i.ph, %nand_write_data_op.exit.thread44 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.i.cleanup_crit_edge ], [ -22, %if.then3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_monolithic_write_page_raw(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %0 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oob_required)
  %tobool.not = icmp eq i32 %oob_required, 0
  br i1 %tobool.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then:                                          ; preds = %entry
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize, align 4
  %add = add i32 %3, %1
  %data_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %4 = ptrtoint ptr %data_buf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %data_buf, align 8
  %cmp.not = icmp eq ptr %5, %buf
  br i1 %cmp.not, label %if.then.if.end4_crit_edge, label %if.then1

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4

if.then1:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %6 = ptrtoint ptr %page.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %page.i, align 4
  %7 = call ptr @memcpy(ptr %5, ptr %buf, i32 %1)
  br label %if.end4

if.end4:                                          ; preds = %if.then1, %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  %size.0 = phi i32 [ %add, %if.then1 ], [ %add, %if.then.if.end4_crit_edge ], [ %1, %entry.if.end4_crit_edge ]
  %write_buf.0 = phi ptr [ %5, %if.then1 ], [ %buf, %if.then.if.end4_crit_edge ], [ %buf, %entry.if.end4_crit_edge ]
  %call5 = tail call i32 @nand_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef %write_buf.0, i32 noundef %size.0)
  ret i32 %call5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_erase_nand(ptr noundef %chip, ptr nocapture noundef %instr, i32 noundef %allowbbt) local_unnamed_addr #4 align 64 {
entry:
  %status.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_erase_nand.__UNIQUE_ID_ddebug300, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %if.then)) #14
          to label %do.end [label %if.then], !srcloc !385

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %instr to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %instr, align 8
  %len3 = getelementptr inbounds %struct.erase_info, ptr %instr, i32 0, i32 1
  %2 = ptrtoint ptr %len3 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %len3, align 8
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_erase_nand.__UNIQUE_ID_ddebug300, ptr noundef nonnull @.str.7, ptr noundef nonnull @.str.5, i64 noundef %1, i64 noundef %3) #14
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %4 = ptrtoint ptr %instr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %instr, align 8
  %len5 = getelementptr inbounds %struct.erase_info, ptr %instr, i32 0, i32 1
  %6 = ptrtoint ptr %len5 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %len5, align 8
  %phys_erase_shift.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 18
  %8 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %phys_erase_shift.i, align 8
  %sh_prom.i = zext i32 %9 to i64
  %notmask.i = shl nsw i64 -1, %sh_prom.i
  %sub.i = xor i64 %notmask.i, -1
  %and.i = and i64 %5, %sub.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %do.end.if.end5.i_crit_edge, label %do.body.i

do.end.if.end5.i_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5.i

do.body.i:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @check_offs_len.__UNIQUE_ID_ddebug247, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %if.then4.i)) #14
          to label %if.end5.i [label %if.then4.i], !srcloc !385

if.then4.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @check_offs_len.__UNIQUE_ID_ddebug247, ptr noundef nonnull @.str.52, ptr noundef nonnull @.str.50) #14
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.then4.i, %do.body.i, %do.end.if.end5.i_crit_edge
  %ret.0.i = phi i32 [ 0, %do.end.if.end5.i_crit_edge ], [ -22, %if.then4.i ], [ -22, %do.body.i ]
  %10 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %phys_erase_shift.i, align 8
  %sh_prom7.i = zext i32 %11 to i64
  %notmask31.i = shl nsw i64 -1, %sh_prom7.i
  %sub9.i = xor i64 %notmask31.i, -1
  %and10.i = and i64 %7, %sub9.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and10.i)
  %tobool11.not.i = icmp eq i64 %and10.i, 0
  br i1 %tobool11.not.i, label %if.end5.i.check_offs_len.exit_crit_edge, label %do.body13.i

if.end5.i.check_offs_len.exit_crit_edge:          ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %check_offs_len.exit

do.body13.i:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @check_offs_len.__UNIQUE_ID_ddebug248, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %check_offs_len.exit.thread)) #14
          to label %check_offs_len.exit [label %check_offs_len.exit.thread], !srcloc !385

check_offs_len.exit.thread:                       ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @check_offs_len.__UNIQUE_ID_ddebug248, ptr noundef nonnull @.str.54, ptr noundef nonnull @.str.50) #14
  br label %cleanup

check_offs_len.exit:                              ; preds = %do.body13.i, %if.end5.i.check_offs_len.exit_crit_edge
  %ret.1.i = phi i32 [ %ret.0.i, %if.end5.i.check_offs_len.exit_crit_edge ], [ -22, %do.body13.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %tobool7.not = icmp eq i32 %ret.1.i, 0
  br i1 %tobool7.not, label %if.end9, label %check_offs_len.exit.cleanup_crit_edge

check_offs_len.exit.cleanup_crit_edge:            ; preds = %check_offs_len.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %check_offs_len.exit
  %12 = ptrtoint ptr %instr to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %instr, align 8
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %14 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %15 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp29.not.i = icmp eq i8 %15, 0
  br i1 %cmp29.not.i, label %if.end9.if.end14_crit_edge, label %for.body.lr.ph.i

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

for.body.lr.ph.i:                                 ; preds = %if.end9
  %16 = ptrtoint ptr %len5 to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %len5, align 8
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %18 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %17, %13
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %19, i32 %i.030.i
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %21)
  %cmp3.not.i = icmp ugt i64 %add.i, %21
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %19, i32 %i.030.i, i32 1
  %22 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %23, %21
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %13)
  %cmp8.not.i = icmp ugt i64 %add7.i, %13
  br i1 %cmp8.not.i, label %do.body.i169, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i169:                                     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i169
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %13, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup_crit_edge, label %if.then12.i.if.end14_crit_edge

if.then12.i.if.end14_crit_edge:                   ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then12.i.cleanup_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i169
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i169 ], [ %cmp.i, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup_crit_edge, label %nand_region_is_secured.exit.if.end14_crit_edge

nand_region_is_secured.exit.if.end14_crit_edge:   ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

nand_region_is_secured.exit.cleanup_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end14:                                         ; preds = %nand_region_is_secured.exit.if.end14_crit_edge, %if.then12.i.if.end14_crit_edge, %if.end9.if.end14_crit_edge
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 27
  %24 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i170 = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i170, label %if.end18, label %nand_get_device.exit

nand_get_device.exit:                             ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  br label %cleanup

if.end18:                                         ; preds = %if.end14
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %25 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %26, i32 noundef 0) #14
  %27 = ptrtoint ptr %instr to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %instr, align 8
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %29 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %page_shift, align 4
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %31 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %chip_shift, align 4
  %sh_prom21 = zext i32 %32 to i64
  %shr22 = lshr i64 %28, %sh_prom21
  %conv23 = trunc i64 %shr22 to i32
  %33 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %phys_erase_shift.i, align 8
  %sub = sub i32 %34, %30
  %shl = shl nuw i32 1, %sub
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %35 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %conv23)
  %cmp.i172 = icmp ult i32 %36, %conv23
  br i1 %cmp.i172, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end18
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %37 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %conv23, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %38 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %39, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %39(ptr noundef %chip, i32 noundef %conv23) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status.i) #14
  %40 = ptrtoint ptr %status.i to i32
  call void @__asan_store1_noabort(i32 %40)
  store i8 -1, ptr %status.i, align 1, !annotation !380
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %41 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %options.i, align 8
  %and.i173 = and i32 %42, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i173)
  %tobool.not.i174 = icmp eq i32 %and.i173, 0
  br i1 %tobool.not.i174, label %if.end.i175, label %nand_check_wp.exit.thread

nand_check_wp.exit.thread:                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %if.end44

if.end.i175:                                      ; preds = %nand_select_target.exit
  %call.i = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %nand_check_wp.exit, label %nand_check_wp.exit.thread211

nand_check_wp.exit.thread211:                     ; preds = %if.end.i175
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %do.body28

nand_check_wp.exit:                               ; preds = %if.end.i175
  %43 = ptrtoint ptr %status.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %status.i, align 1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %tobool26.not = icmp slt i8 %44, 0
  br i1 %tobool26.not, label %nand_check_wp.exit.if.end44_crit_edge, label %nand_check_wp.exit.do.body28_crit_edge

nand_check_wp.exit.do.body28_crit_edge:           ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body28

nand_check_wp.exit.if.end44_crit_edge:            ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

do.body28:                                        ; preds = %nand_check_wp.exit.do.body28_crit_edge, %nand_check_wp.exit.thread211
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_erase_nand.__UNIQUE_ID_ddebug301, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %if.then40)) #14
          to label %erase_exit [label %if.then40], !srcloc !385

if.then40:                                        ; preds = %do.body28
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_erase_nand.__UNIQUE_ID_ddebug301, ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.5) #14
  br label %erase_exit

if.end44:                                         ; preds = %nand_check_wp.exit.if.end44_crit_edge, %nand_check_wp.exit.thread
  %45 = ptrtoint ptr %len5 to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %len5, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %46)
  %tobool46.not220 = icmp eq i64 %46, 0
  br i1 %tobool46.not220, label %if.end44.erase_exit_crit_edge, label %while.body.lr.ph

if.end44.erase_exit_crit_edge:                    ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #16
  br label %erase_exit

while.body.lr.ph:                                 ; preds = %if.end44
  %sh_prom = zext i32 %30 to i64
  %shr = lshr i64 %28, %sh_prom
  %conv = trunc i64 %shr to i32
  %bbt.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 16
  %page60 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %pagemask = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %select_chip.i182 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %cur_cs.i185 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  br label %while.body.outer

while.body.outer:                                 ; preds = %while.body.outer.backedge, %while.body.lr.ph
  %page.0223.ph = phi i32 [ %conv, %while.body.lr.ph ], [ %add, %while.body.outer.backedge ]
  %chipnr.0222.ph = phi i32 [ %conv23, %while.body.lr.ph ], [ %inc, %while.body.outer.backedge ]
  %len.0221.ph = phi i64 [ %46, %while.body.lr.ph ], [ %sub101, %while.body.outer.backedge ]
  br label %while.body

while.body:                                       ; preds = %land.lhs.true104.while.body_crit_edge, %while.body.outer
  %page.0223 = phi i32 [ %add, %land.lhs.true104.while.body_crit_edge ], [ %page.0223.ph, %while.body.outer ]
  %len.0221 = phi i64 [ %sub101, %land.lhs.true104.while.body_crit_edge ], [ %len.0221.ph, %while.body.outer ]
  %conv47 = sext i32 %page.0223 to i64
  %47 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %page_shift, align 4
  %sh_prom49 = zext i32 %48 to i64
  %shl50 = shl i64 %conv47, %sh_prom49
  %49 = ptrtoint ptr %bbt.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %bbt.i, align 8
  %tobool.not.i177 = icmp eq ptr %50, null
  br i1 %tobool.not.i177, label %if.end.i180, label %if.then.i179

if.then.i179:                                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %call.i178 = call i32 @nand_isbad_bbt(ptr noundef %chip, i64 noundef %shl50, i32 noundef %allowbbt) #14
  br label %nand_block_checkbad.exit

if.end.i180:                                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = call fastcc i32 @nand_isbad_bbm(ptr noundef %chip, i64 noundef %shl50) #14
  br label %nand_block_checkbad.exit

nand_block_checkbad.exit:                         ; preds = %if.end.i180, %if.then.i179
  %retval.0.i181 = phi i32 [ %call.i178, %if.then.i179 ], [ %call1.i, %if.end.i180 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i181)
  %tobool52.not = icmp eq i32 %retval.0.i181, 0
  br i1 %tobool52.not, label %if.end59, label %do.end56

do.end56:                                         ; preds = %nand_block_checkbad.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call58 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef nonnull @.str.5, i32 noundef %page.0223) #19
  br label %erase_exit

if.end59:                                         ; preds = %nand_block_checkbad.exit
  %51 = ptrtoint ptr %page60 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %page60, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %page.0223, i32 %52)
  %cmp.not = icmp sle i32 %page.0223, %52
  %add = add i32 %page.0223, %shl
  call void @__sanitizer_cov_trace_cmp4(i32 %52, i32 %add)
  %cmp64 = icmp slt i32 %52, %add
  %or.cond = select i1 %cmp.not, i1 %cmp64, i1 false
  br i1 %or.cond, label %if.then66, label %if.end59.if.end69_crit_edge

if.end59.if.end69_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end69

if.then66:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  %53 = ptrtoint ptr %page60 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 -1, ptr %page60, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.then66, %if.end59.if.end69_crit_edge
  %54 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %pagemask, align 8
  %and = and i32 %55, %page.0223
  %56 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %phys_erase_shift.i, align 8
  %58 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %page_shift, align 4
  %sub72 = sub i32 %57, %59
  %shr73 = lshr i32 %and, %sub72
  %call74 = call i32 @nand_erase_op(ptr noundef %chip, i32 noundef %shr73)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool75.not = icmp eq i32 %call74, 0
  br i1 %tobool75.not, label %if.end97, label %do.body77

do.body77:                                        ; preds = %if.end69
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_erase_nand.__UNIQUE_ID_ddebug302, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_erase_nand, %if.then89)) #14
          to label %do.end92 [label %if.then89], !srcloc !385

if.then89:                                        ; preds = %do.body77
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_erase_nand.__UNIQUE_ID_ddebug302, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.5, i32 noundef %page.0223) #14
  br label %do.end92

do.end92:                                         ; preds = %if.then89, %do.body77
  %60 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %page_shift, align 4
  %sh_prom95 = zext i32 %61 to i64
  %shl96 = shl i64 %conv47, %sh_prom95
  %fail_addr = getelementptr inbounds %struct.erase_info, ptr %instr, i32 0, i32 2
  %62 = ptrtoint ptr %fail_addr to i32
  call void @__asan_store8_noabort(i32 %62)
  store i64 %shl96, ptr %fail_addr, align 8
  br label %erase_exit

if.end97:                                         ; preds = %if.end69
  %63 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %phys_erase_shift.i, align 8
  %sh_prom99 = zext i32 %64 to i64
  %shl100.neg = shl nsw i64 -1, %sh_prom99
  %sub101 = add i64 %shl100.neg, %len.0221
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub101)
  %tobool103.not = icmp eq i64 %sub101, 0
  br i1 %tobool103.not, label %if.end97.erase_exit_crit_edge, label %land.lhs.true104

if.end97.erase_exit_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #16
  br label %erase_exit

land.lhs.true104:                                 ; preds = %if.end97
  %65 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %pagemask, align 8
  %and106 = and i32 %66, %add
  %tobool107.not = icmp eq i32 %and106, 0
  br i1 %tobool107.not, label %if.then108, label %land.lhs.true104.while.body_crit_edge

land.lhs.true104.while.body_crit_edge:            ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.then108:                                       ; preds = %land.lhs.true104
  %inc = add i32 %chipnr.0222.ph, 1
  %67 = ptrtoint ptr %select_chip.i182 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %select_chip.i182, align 8
  %tobool.not.i183 = icmp eq ptr %68, null
  br i1 %tobool.not.i183, label %if.then108.nand_deselect_target.exit_crit_edge, label %if.then.i184

if.then108.nand_deselect_target.exit_crit_edge:   ; preds = %if.then108
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i184:                                     ; preds = %if.then108
  call void @__sanitizer_cov_trace_pc() #16
  call void %68(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i184, %if.then108.nand_deselect_target.exit_crit_edge
  %69 = ptrtoint ptr %cur_cs.i185 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 -1, ptr %cur_cs.i185, align 4
  %70 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %inc)
  %cmp.i188 = icmp ult i32 %71, %inc
  br i1 %cmp.i188, label %do.end.i189, label %if.end21.critedge.i193, !prof !378

do.end.i189:                                      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %while.body.outer.backedge

if.end21.critedge.i193:                           ; preds = %nand_deselect_target.exit
  %72 = ptrtoint ptr %cur_cs.i185 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %inc, ptr %cur_cs.i185, align 4
  %73 = ptrtoint ptr %select_chip.i182 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %select_chip.i182, align 8
  %tobool22.not.i192 = icmp eq ptr %74, null
  br i1 %tobool22.not.i192, label %if.end21.critedge.i193.while.body.outer.backedge_crit_edge, label %if.then23.i194

if.end21.critedge.i193.while.body.outer.backedge_crit_edge: ; preds = %if.end21.critedge.i193
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.outer.backedge

if.then23.i194:                                   ; preds = %if.end21.critedge.i193
  call void @__sanitizer_cov_trace_pc() #16
  call void %74(ptr noundef %chip, i32 noundef %inc) #14
  br label %while.body.outer.backedge

while.body.outer.backedge:                        ; preds = %if.then23.i194, %if.end21.critedge.i193.while.body.outer.backedge_crit_edge, %do.end.i189
  br label %while.body.outer

erase_exit:                                       ; preds = %if.end97.erase_exit_crit_edge, %do.end92, %do.end56, %if.end44.erase_exit_crit_edge, %if.then40, %do.body28
  %ret.0 = phi i32 [ -5, %do.end56 ], [ %call74, %do.end92 ], [ -5, %if.then40 ], [ -5, %do.body28 ], [ 0, %if.end44.erase_exit_crit_edge ], [ 0, %if.end97.erase_exit_crit_edge ]
  %select_chip.i196 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %75 = ptrtoint ptr %select_chip.i196 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %select_chip.i196, align 8
  %tobool.not.i197 = icmp eq ptr %76, null
  br i1 %tobool.not.i197, label %erase_exit.nand_deselect_target.exit201_crit_edge, label %if.then.i198

erase_exit.nand_deselect_target.exit201_crit_edge: ; preds = %erase_exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit201

if.then.i198:                                     ; preds = %erase_exit
  call void @__sanitizer_cov_trace_pc() #16
  call void %76(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit201

nand_deselect_target.exit201:                     ; preds = %if.then.i198, %erase_exit.nand_deselect_target.exit201_crit_edge
  %cur_cs.i199 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %77 = ptrtoint ptr %cur_cs.i199 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 -1, ptr %cur_cs.i199, align 4
  %78 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %controller.i, align 4
  call void @mutex_unlock(ptr noundef %79) #14
  call void @mutex_unlock(ptr noundef %lock.i) #14
  br label %cleanup

cleanup:                                          ; preds = %nand_deselect_target.exit201, %nand_get_device.exit, %nand_region_is_secured.exit.cleanup_crit_edge, %if.then12.i.cleanup_crit_edge, %check_offs_len.exit.cleanup_crit_edge, %check_offs_len.exit.thread
  %retval.0 = phi i32 [ %ret.0, %nand_deselect_target.exit201 ], [ -22, %check_offs_len.exit.cleanup_crit_edge ], [ -5, %nand_region_is_secured.exit.cleanup_crit_edge ], [ -16, %nand_get_device.exit ], [ -22, %check_offs_len.exit.thread ], [ -5, %if.then12.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @sanitize_string(ptr noundef %s, i32 noundef %len) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sub = add i32 %len, -1
  %arrayidx = getelementptr i8, ptr %s, i32 %sub
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %0)
  store i8 0, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp19.not = icmp eq i32 %sub, 0
  br i1 %cmp19.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %i.020 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx2 = getelementptr i8, ptr %s, i32 %i.020
  %1 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %arrayidx2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 32, i8 %2)
  %3 = icmp slt i8 %2, 32
  br i1 %3, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 63, ptr %arrayidx2, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.020, 1
  %exitcond.not = icmp eq i32 %inc, %sub
  br i1 %exitcond.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %call = tail call ptr @strim(ptr noundef %s) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strim(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @nand_decode_ext_id(ptr nocapture noundef %chip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %memorg.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1
  %arrayidx = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arrayidx, align 1
  %2 = lshr i8 %1, 2
  %3 = and i8 %2, 3
  %narrow.i = add nuw nsw i8 %3, 1
  %add.i = zext i8 %narrow.i to i32
  %4 = ptrtoint ptr %memorg.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %add.i, ptr %memorg.i, align 4
  %arrayidx3 = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %5 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx3, align 1
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 3
  %shl = shl nuw nsw i32 1024, %and
  %pagesize = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %pagesize to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %shl, ptr %pagesize, align 4
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %8 = ptrtoint ptr %writesize to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %shl, ptr %writesize, align 4
  %9 = lshr i32 %conv, 2
  %and5 = and i32 %9, 1
  %shl6 = shl nuw nsw i32 8, %and5
  %shr8 = lshr exact i32 %shl, 9
  %mul = mul nuw nsw i32 %shl6, %shr8
  %oobsize = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 2
  %10 = ptrtoint ptr %oobsize to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %mul, ptr %oobsize, align 4
  %oobsize10 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %11 = ptrtoint ptr %oobsize10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %mul, ptr %oobsize10, align 4
  %12 = lshr i32 %conv, 4
  %and12 = and i32 %12, 3
  %shl13 = shl nuw nsw i32 65536, %and12
  %13 = add nuw nsw i32 %and, 10
  %div39 = lshr i32 %shl13, %13
  %pages_per_eraseblock = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %14 = ptrtoint ptr %pages_per_eraseblock to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %div39, ptr %pages_per_eraseblock, align 4
  %erasesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %15 = ptrtoint ptr %erasesize to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %shl13, ptr %erasesize, align 8
  %16 = and i32 %conv, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not = icmp eq i32 %16, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %17 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %options, align 8
  %or = or i32 %18, 2
  store i32 %or, ptr %options, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_dt_parse_gpio_cs(ptr noundef %dev, ptr nocapture noundef writeonly %cs_array, ptr nocapture noundef writeonly %ncs_array) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  %call.i = tail call i32 @of_count_phandle_with_args(ptr noundef %1, ptr noundef nonnull @.str.13, ptr noundef nonnull @.str.58) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.body, label %if.end5

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @rawnand_dt_parse_gpio_cs.__UNIQUE_ID_ddebug304, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@rawnand_dt_parse_gpio_cs, %if.then4)) #14
          to label %cleanup [label %if.then4], !srcloc !385

if.then4:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @rawnand_dt_parse_gpio_cs.__UNIQUE_ID_ddebug304, ptr noundef %dev, ptr noundef nonnull @.str.15) #14
  br label %cleanup

if.end5:                                          ; preds = %entry
  %2 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %call.i, i32 4) #14
  %3 = extractvalue { i32, i1 } %2, 1
  br i1 %3, label %if.end5.cleanup_crit_edge, label %devm_kcalloc.exit, !prof !378

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

devm_kcalloc.exit:                                ; preds = %if.end5
  %4 = extractvalue { i32, i1 } %2, 0
  %call5.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef %4, i32 noundef 3520) #14
  %tobool7.not = icmp eq ptr %call5.i.i, null
  br i1 %tobool7.not, label %devm_kcalloc.exit.cleanup_crit_edge, label %for.cond.preheader

devm_kcalloc.exit.cleanup_crit_edge:              ; preds = %devm_kcalloc.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %devm_kcalloc.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp1039.not = icmp eq i32 %call.i, 0
  br i1 %cmp1039.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.cond:                                         ; preds = %for.body
  %inc = add nuw nsw i32 %i.040, 1
  %exitcond.not = icmp eq i32 %inc, %call.i
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.040 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call11 = tail call ptr @gpiod_get_index_optional(ptr noundef %dev, ptr noundef nonnull @.str.16, i32 noundef %i.040, i32 noundef 7) #14
  %arrayidx = getelementptr ptr, ptr %call5.i.i, i32 %i.040
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %call11, ptr %arrayidx, align 4
  %cmp.i = icmp ugt ptr %call11, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then14, label %for.cond

if.then14:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %call11 to i32
  br label %cleanup

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %7 = ptrtoint ptr %ncs_array to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %call.i, ptr %ncs_array, align 4
  %8 = ptrtoint ptr %cs_array to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %call5.i.i, ptr %cs_array, align 4
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then14, %devm_kcalloc.exit.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.then4, %do.body
  %retval.0 = phi i32 [ %6, %if.then14 ], [ 0, %for.end ], [ 0, %if.then4 ], [ -12, %devm_kcalloc.exit.cleanup_crit_edge ], [ 0, %do.body ], [ -12, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @gpiod_get_index_optional(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_sw_hamming_init(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %user_conf = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2
  %0 = ptrtoint ptr %user_conf to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 2, ptr %user_conf, align 4
  %algo = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 2
  %1 = ptrtoint ptr %algo to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %algo, align 4
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %2 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %strength, align 4
  %strength7 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 3
  %4 = ptrtoint ptr %strength7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %strength7, align 4
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %5 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %size, align 8
  %step_size = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 4
  %7 = ptrtoint ptr %step_size to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %step_size, align 4
  %call = tail call i32 @nand_ecc_sw_hamming_init_ctx(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %8 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %options, align 8
  %and = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  br i1 %tobool13.not, label %if.end.if.end15_crit_edge, label %if.then14

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %priv = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 3
  %10 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv, align 4
  %sm_order = getelementptr inbounds %struct.nand_ecc_sw_hamming_conf, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %sm_order to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 1, ptr %sm_order, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end.if.end15_crit_edge
  %step_size18 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 4
  %13 = ptrtoint ptr %step_size18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %step_size18, align 4
  %15 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %size, align 8
  %strength24 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 3
  %16 = ptrtoint ptr %strength24 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %strength24, align 4
  %18 = ptrtoint ptr %strength to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %strength, align 4
  %total = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 2
  %19 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %total, align 4
  %total30 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %21 = ptrtoint ptr %total30 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %total30, align 8
  %nsteps.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 1
  %22 = ptrtoint ptr %nsteps.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nsteps.i, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %24 = ptrtoint ptr %steps to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %steps, align 4
  %div = udiv i32 %20, %23
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %25 = ptrtoint ptr %bytes to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %div, ptr %bytes, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %entry.cleanup_crit_edge
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_hamming_init_ctx(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_sw_hamming_calculate(ptr noundef %chip, ptr noundef %buf, ptr noundef %code) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nand_ecc_sw_hamming_calculate(ptr noundef %chip, ptr noundef %buf, ptr noundef %code) #14
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_hamming_calculate(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_sw_hamming_correct(ptr noundef %chip, ptr noundef %buf, ptr noundef %read_ecc, ptr noundef %calc_ecc) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nand_ecc_sw_hamming_correct(ptr noundef %chip, ptr noundef %buf, ptr noundef %read_ecc, ptr noundef %calc_ecc) #14
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_hamming_correct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rawnand_sw_hamming_cleanup(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @nand_ecc_sw_hamming_cleanup_ctx(ptr noundef %chip) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nand_ecc_sw_hamming_cleanup_ctx(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_sw_bch_init(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %user_conf = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2
  %0 = ptrtoint ptr %user_conf to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 2, ptr %user_conf, align 4
  %algo = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 2
  %1 = ptrtoint ptr %algo to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2, ptr %algo, align 4
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size, align 8
  %step_size = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 4
  %4 = ptrtoint ptr %step_size to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %step_size, align 4
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %5 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %strength, align 4
  %strength10 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 3
  %7 = ptrtoint ptr %strength10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %strength10, align 4
  %call11 = tail call i32 @nand_ecc_sw_bch_init_ctx(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool.not = icmp eq i32 %call11, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %step_size12 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 4
  %8 = ptrtoint ptr %step_size12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %step_size12, align 4
  %10 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %size, align 8
  %strength15 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 3
  %11 = ptrtoint ptr %strength15 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %strength15, align 4
  %13 = ptrtoint ptr %strength to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %strength, align 4
  %total = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 2
  %14 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %total, align 4
  %total20 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %16 = ptrtoint ptr %total20 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %total20, align 8
  %nsteps.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 1
  %17 = ptrtoint ptr %nsteps.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %nsteps.i, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %19 = ptrtoint ptr %steps to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %steps, align 4
  %div = udiv i32 %15, %18
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %20 = ptrtoint ptr %bytes to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %div, ptr %bytes, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret i32 %call11
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_bch_init_ctx(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rawnand_sw_bch_correct(ptr noundef %chip, ptr noundef %buf, ptr noundef %read_ecc, ptr noundef %calc_ecc) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nand_ecc_sw_bch_correct(ptr noundef %chip, ptr noundef %buf, ptr noundef %read_ecc, ptr noundef %calc_ecc) #14
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_bch_correct(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @rawnand_sw_bch_cleanup(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @nand_ecc_sw_bch_cleanup_ctx(ptr noundef %chip) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nand_ecc_sw_bch_cleanup_ctx(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_ecc_choose_conf(ptr nocapture noundef %chip, ptr nocapture noundef readonly %caps, i32 noundef %oobavail) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oobavail)
  %cmp = icmp slt i32 %oobavail, 0
  br i1 %cmp, label %entry.do.end_crit_edge, label %lor.rhs

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.rhs:                                          ; preds = %entry
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %0 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %oobsize, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %oobavail)
  %cmp2 = icmp ult i32 %1, %oobavail
  br i1 %cmp2, label %lor.rhs.do.end_crit_edge, label %if.end23, !prof !378

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5989, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end23:                                         ; preds = %lor.rhs
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %2 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool24.not = icmp eq i32 %3, 0
  br i1 %tobool24.not, label %if.end23.if.end29_crit_edge, label %land.lhs.true

if.end23.if.end29_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

land.lhs.true:                                    ; preds = %if.end23
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %4 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %strength, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool26.not = icmp eq i32 %5, 0
  br i1 %tobool26.not, label %land.lhs.true.if.end29_crit_edge, label %if.then27

land.lhs.true.if.end29_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then27:                                        ; preds = %land.lhs.true
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %6 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %writesize.i, align 4
  %div.i = udiv i32 %7, %3
  %nstepinfos.i = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 1
  %8 = ptrtoint ptr %nstepinfos.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nstepinfos.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp103.i = icmp sgt i32 %9, 0
  br i1 %cmp103.i, label %for.body.lr.ph.i, label %if.then27.do.end65.i_crit_edge

if.then27.do.end65.i_crit_edge:                   ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end65.i

for.body.lr.ph.i:                                 ; preds = %if.then27
  %10 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %caps, align 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc60.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0104.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc61.i, %for.inc60.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_ecc_step_info, ptr %11, i32 %i.0104.i
  %12 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %3)
  %cmp2.not.i = icmp eq i32 %13, %3
  br i1 %cmp2.not.i, label %for.cond3.preheader.i, label %for.body.i.for.inc60.i_crit_edge

for.body.i.for.inc60.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc60.i

for.cond3.preheader.i:                            ; preds = %for.body.i
  %nstrengths.i = getelementptr %struct.nand_ecc_step_info, ptr %11, i32 %i.0104.i, i32 2
  %14 = ptrtoint ptr %nstrengths.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nstrengths.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp4101.i = icmp sgt i32 %15, 0
  br i1 %cmp4101.i, label %for.body5.lr.ph.i, label %for.cond3.preheader.i.for.inc60.i_crit_edge

for.cond3.preheader.i.for.inc60.i_crit_edge:      ; preds = %for.cond3.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc60.i

for.body5.lr.ph.i:                                ; preds = %for.cond3.preheader.i
  %strengths.i = getelementptr %struct.nand_ecc_step_info, ptr %11, i32 %i.0104.i, i32 1
  %16 = ptrtoint ptr %strengths.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %strengths.i, align 4
  br label %for.body5.i

for.cond3.i:                                      ; preds = %for.body5.i
  %inc.i = add nuw nsw i32 %j.0102.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %15
  br i1 %exitcond.not.i, label %for.cond3.i.for.inc60.i_crit_edge, label %for.cond3.i.for.body5.i_crit_edge

for.cond3.i.for.body5.i_crit_edge:                ; preds = %for.cond3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body5.i

for.cond3.i.for.inc60.i_crit_edge:                ; preds = %for.cond3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc60.i

for.body5.i:                                      ; preds = %for.cond3.i.for.body5.i_crit_edge, %for.body5.lr.ph.i
  %j.0102.i = phi i32 [ 0, %for.body5.lr.ph.i ], [ %inc.i, %for.cond3.i.for.body5.i_crit_edge ]
  %arrayidx6.i = getelementptr i32, ptr %17, i32 %j.0102.i
  %18 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx6.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %5)
  %cmp7.not.i = icmp eq i32 %19, %5
  br i1 %cmp7.not.i, label %if.end9.i, label %for.cond3.i

if.end9.i:                                        ; preds = %for.body5.i
  %calc_ecc_bytes.i = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 2
  %20 = ptrtoint ptr %calc_ecc_bytes.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %calc_ecc_bytes.i, align 4
  %call10.i = tail call i32 %21(i32 noundef %3, i32 noundef %5) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %cmp11.i = icmp slt i32 %call10.i, 0
  br i1 %cmp11.i, label %land.rhs.i, label %if.end50.i

land.rhs.i:                                       ; preds = %if.end9.i
  %.b99.i = load i1, ptr @nand_check_ecc_caps.__already_done, align 1
  br i1 %.b99.i, label %land.rhs.i.cleanup_crit_edge, label %if.then18.i, !prof !379

land.rhs.i.cleanup_crit_edge:                     ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then18.i:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @nand_check_ecc_caps.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5790, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

if.end50.i:                                       ; preds = %if.end9.i
  %mul.i = mul i32 %call10.i, %div.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %oobavail)
  %cmp51.i = icmp sgt i32 %mul.i, %oobavail
  br i1 %cmp51.i, label %do.end55.i, label %if.end58.i

do.end55.i:                                       ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  %call57.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.59, i32 noundef %3, i32 noundef %5) #19
  br label %cleanup

if.end58.i:                                       ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  %bytes.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %22 = ptrtoint ptr %bytes.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %call10.i, ptr %bytes.i, align 4
  br label %cleanup

for.inc60.i:                                      ; preds = %for.cond3.i.for.inc60.i_crit_edge, %for.cond3.preheader.i.for.inc60.i_crit_edge, %for.body.i.for.inc60.i_crit_edge
  %inc61.i = add nuw nsw i32 %i.0104.i, 1
  %exitcond107.not.i = icmp eq i32 %inc61.i, %9
  br i1 %exitcond107.not.i, label %for.inc60.i.do.end65.i_crit_edge, label %for.inc60.i.for.body.i_crit_edge

for.inc60.i.for.body.i_crit_edge:                 ; preds = %for.inc60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc60.i.do.end65.i_crit_edge:                 ; preds = %for.inc60.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end65.i

do.end65.i:                                       ; preds = %for.inc60.i.do.end65.i_crit_edge, %if.then27.do.end65.i_crit_edge
  %call67.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.62, i32 noundef %3, i32 noundef %5) #19
  br label %cleanup

if.end29:                                         ; preds = %land.lhs.true.if.end29_crit_edge, %if.end23.if.end29_crit_edge
  %flags = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 5
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags, align 4
  %and = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool31.not = icmp eq i32 %and, 0
  br i1 %tobool31.not, label %if.end34, label %if.then32

if.then32:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %call33 = tail call fastcc i32 @nand_maximize_ecc(ptr noundef %chip, ptr noundef %caps, i32 noundef %oobavail)
  br label %cleanup

if.end34:                                         ; preds = %if.end29
  %step_size.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 4
  %25 = ptrtoint ptr %step_size.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %step_size.i, align 4
  %strength.i57 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 3
  %27 = ptrtoint ptr %strength.i57 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %strength.i57, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i = icmp eq i32 %26, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool4.not.i = icmp eq i32 %28, 0
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %tobool4.not.i
  br i1 %or.cond.i, label %if.end34.if.end38_crit_edge, label %if.end.i

if.end34.if.end38_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.end.i:                                         ; preds = %if.end34
  %writesize.i58 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %29 = ptrtoint ptr %writesize.i58 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %writesize.i58, align 4
  %div.i59 = udiv i32 %30, %26
  %mul.i60 = mul i32 %div.i59, %28
  %nstepinfos.i61 = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 1
  %31 = ptrtoint ptr %nstepinfos.i61 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %nstepinfos.i61, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp145.i = icmp sgt i32 %32, 0
  br i1 %cmp145.i, label %for.body.lr.ph.i63, label %if.end.i.if.end38_crit_edge

if.end.i.if.end38_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

for.body.lr.ph.i63:                               ; preds = %if.end.i
  %calc_ecc_bytes.i62 = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 2
  br label %for.body.i66

for.body.i66:                                     ; preds = %for.inc71.i.for.body.i66_crit_edge, %for.body.lr.ph.i63
  %i.0150.i = phi i32 [ 0, %for.body.lr.ph.i63 ], [ %inc72.i, %for.inc71.i.for.body.i66_crit_edge ]
  %best_ecc_bytes_total.0149.i = phi i32 [ 2147483647, %for.body.lr.ph.i63 ], [ %best_ecc_bytes_total.1.lcssa.i, %for.inc71.i.for.body.i66_crit_edge ]
  %best_ecc_bytes.0148.i = phi i32 [ -1, %for.body.lr.ph.i63 ], [ %best_ecc_bytes.1.lcssa.i, %for.inc71.i.for.body.i66_crit_edge ]
  %best_strength.0147.i = phi i32 [ -1, %for.body.lr.ph.i63 ], [ %best_strength.1.lcssa.i, %for.inc71.i.for.body.i66_crit_edge ]
  %best_step.0146.i = phi i32 [ -1, %for.body.lr.ph.i63 ], [ %best_step.1.lcssa.i, %for.inc71.i.for.body.i66_crit_edge ]
  %33 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %caps, align 4
  %arrayidx.i64 = getelementptr %struct.nand_ecc_step_info, ptr %34, i32 %i.0150.i
  %35 = ptrtoint ptr %arrayidx.i64 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx.i64, align 4
  %nstrengths.i65 = getelementptr %struct.nand_ecc_step_info, ptr %34, i32 %i.0150.i, i32 2
  %37 = ptrtoint ptr %nstrengths.i65 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nstrengths.i65, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp6136.i = icmp sgt i32 %38, 0
  br i1 %cmp6136.i, label %for.body7.lr.ph.i, label %for.body.i66.for.inc71.i_crit_edge

for.body.i66.for.inc71.i_crit_edge:               ; preds = %for.body.i66
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc71.i

for.body7.lr.ph.i:                                ; preds = %for.body.i66
  %strengths.i67 = getelementptr %struct.nand_ecc_step_info, ptr %34, i32 %i.0150.i, i32 1
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %26)
  %cmp9.i = icmp slt i32 %36, %26
  br label %for.body7.i

for.body7.i:                                      ; preds = %for.inc.i.for.body7.i_crit_edge, %for.body7.lr.ph.i
  %j.0141.i = phi i32 [ 0, %for.body7.lr.ph.i ], [ %inc.i69, %for.inc.i.for.body7.i_crit_edge ]
  %best_ecc_bytes_total.1140.i = phi i32 [ %best_ecc_bytes_total.0149.i, %for.body7.lr.ph.i ], [ %best_ecc_bytes_total.2.i, %for.inc.i.for.body7.i_crit_edge ]
  %best_ecc_bytes.1139.i = phi i32 [ %best_ecc_bytes.0148.i, %for.body7.lr.ph.i ], [ %best_ecc_bytes.2.i, %for.inc.i.for.body7.i_crit_edge ]
  %best_strength.1138.i = phi i32 [ %best_strength.0147.i, %for.body7.lr.ph.i ], [ %best_strength.2.i, %for.inc.i.for.body7.i_crit_edge ]
  %best_step.1137.i = phi i32 [ %best_step.0146.i, %for.body7.lr.ph.i ], [ %best_step.2.i, %for.inc.i.for.body7.i_crit_edge ]
  %39 = ptrtoint ptr %strengths.i67 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %strengths.i67, align 4
  %arrayidx8.i = getelementptr i32, ptr %40, i32 %j.0141.i
  %41 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %arrayidx8.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %28)
  %cmp10.i = icmp slt i32 %42, %28
  %or.cond132.i = select i1 %cmp9.i, i1 %cmp10.i, i1 false
  br i1 %or.cond132.i, label %for.body7.i.for.inc.i_crit_edge, label %if.end12.i

for.body7.i.for.inc.i_crit_edge:                  ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end12.i:                                       ; preds = %for.body7.i
  %43 = ptrtoint ptr %writesize.i58 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %writesize.i58, align 4
  %.frozen = freeze i32 %44
  %.frozen75 = freeze i32 %36
  %div18.i = udiv i32 %.frozen, %.frozen75
  %45 = mul i32 %div18.i, %.frozen75
  %rem.i.decomposed = sub i32 %.frozen, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i.decomposed)
  %tobool14.not.i = icmp eq i32 %rem.i.decomposed, 0
  br i1 %tobool14.not.i, label %if.end16.i, label %if.end12.i.for.inc.i_crit_edge

if.end12.i.for.inc.i_crit_edge:                   ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.end16.i:                                       ; preds = %if.end12.i
  %46 = ptrtoint ptr %calc_ecc_bytes.i62 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %calc_ecc_bytes.i62, align 4
  %call19.i = tail call i32 %47(i32 noundef %36, i32 noundef %42) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %cmp20.i = icmp slt i32 %call19.i, 0
  br i1 %cmp20.i, label %land.rhs.i68, label %if.end60.critedge.i

land.rhs.i68:                                     ; preds = %if.end16.i
  %.b131.i = load i1, ptr @nand_match_ecc_req.__already_done, align 1
  br i1 %.b131.i, label %land.rhs.i68.for.inc.i_crit_edge, label %if.then28.i, !prof !379

land.rhs.i68.for.inc.i_crit_edge:                 ; preds = %land.rhs.i68
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then28.i:                                      ; preds = %land.rhs.i68
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @nand_match_ecc_req.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5864, i32 noundef 9, ptr noundef null) #14
  br label %for.inc.i

if.end60.critedge.i:                              ; preds = %if.end16.i
  %mul61.i = mul i32 %div18.i, %call19.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul61.i, i32 %oobavail)
  %cmp62.i = icmp sle i32 %mul61.i, %oobavail
  %mul64.i = mul i32 %div18.i, %42
  call void @__sanitizer_cov_trace_cmp4(i32 %mul64.i, i32 %mul.i60)
  %cmp65.i = icmp sge i32 %mul64.i, %mul.i60
  %or.cond134.i = select i1 %cmp62.i, i1 %cmp65.i, i1 false
  call void @__sanitizer_cov_trace_cmp4(i32 %mul61.i, i32 %best_ecc_bytes_total.1140.i)
  %cmp68.i = icmp slt i32 %mul61.i, %best_ecc_bytes_total.1140.i
  %or.cond135.i = select i1 %or.cond134.i, i1 %cmp68.i, i1 false
  br i1 %or.cond135.i, label %if.then69.i, label %if.end60.critedge.i.for.inc.i_crit_edge

if.end60.critedge.i.for.inc.i_crit_edge:          ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then69.i:                                      ; preds = %if.end60.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then69.i, %if.end60.critedge.i.for.inc.i_crit_edge, %if.then28.i, %land.rhs.i68.for.inc.i_crit_edge, %if.end12.i.for.inc.i_crit_edge, %for.body7.i.for.inc.i_crit_edge
  %best_step.2.i = phi i32 [ %best_step.1137.i, %if.end12.i.for.inc.i_crit_edge ], [ %best_step.1137.i, %if.end60.critedge.i.for.inc.i_crit_edge ], [ %36, %if.then69.i ], [ %best_step.1137.i, %for.body7.i.for.inc.i_crit_edge ], [ %best_step.1137.i, %if.then28.i ], [ %best_step.1137.i, %land.rhs.i68.for.inc.i_crit_edge ]
  %best_strength.2.i = phi i32 [ %best_strength.1138.i, %if.end12.i.for.inc.i_crit_edge ], [ %best_strength.1138.i, %if.end60.critedge.i.for.inc.i_crit_edge ], [ %42, %if.then69.i ], [ %best_strength.1138.i, %for.body7.i.for.inc.i_crit_edge ], [ %best_strength.1138.i, %if.then28.i ], [ %best_strength.1138.i, %land.rhs.i68.for.inc.i_crit_edge ]
  %best_ecc_bytes.2.i = phi i32 [ %best_ecc_bytes.1139.i, %if.end12.i.for.inc.i_crit_edge ], [ %best_ecc_bytes.1139.i, %if.end60.critedge.i.for.inc.i_crit_edge ], [ %call19.i, %if.then69.i ], [ %best_ecc_bytes.1139.i, %for.body7.i.for.inc.i_crit_edge ], [ %best_ecc_bytes.1139.i, %if.then28.i ], [ %best_ecc_bytes.1139.i, %land.rhs.i68.for.inc.i_crit_edge ]
  %best_ecc_bytes_total.2.i = phi i32 [ %best_ecc_bytes_total.1140.i, %if.end12.i.for.inc.i_crit_edge ], [ %best_ecc_bytes_total.1140.i, %if.end60.critedge.i.for.inc.i_crit_edge ], [ %mul61.i, %if.then69.i ], [ %best_ecc_bytes_total.1140.i, %for.body7.i.for.inc.i_crit_edge ], [ %best_ecc_bytes_total.1140.i, %if.then28.i ], [ %best_ecc_bytes_total.1140.i, %land.rhs.i68.for.inc.i_crit_edge ]
  %inc.i69 = add nuw nsw i32 %j.0141.i, 1
  %48 = ptrtoint ptr %nstrengths.i65 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nstrengths.i65, align 4
  %cmp6.i = icmp slt i32 %inc.i69, %49
  br i1 %cmp6.i, label %for.inc.i.for.body7.i_crit_edge, label %for.inc.i.for.inc71.i_crit_edge

for.inc.i.for.inc71.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc71.i

for.inc.i.for.body7.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body7.i

for.inc71.i:                                      ; preds = %for.inc.i.for.inc71.i_crit_edge, %for.body.i66.for.inc71.i_crit_edge
  %best_step.1.lcssa.i = phi i32 [ %best_step.0146.i, %for.body.i66.for.inc71.i_crit_edge ], [ %best_step.2.i, %for.inc.i.for.inc71.i_crit_edge ]
  %best_strength.1.lcssa.i = phi i32 [ %best_strength.0147.i, %for.body.i66.for.inc71.i_crit_edge ], [ %best_strength.2.i, %for.inc.i.for.inc71.i_crit_edge ]
  %best_ecc_bytes.1.lcssa.i = phi i32 [ %best_ecc_bytes.0148.i, %for.body.i66.for.inc71.i_crit_edge ], [ %best_ecc_bytes.2.i, %for.inc.i.for.inc71.i_crit_edge ]
  %best_ecc_bytes_total.1.lcssa.i = phi i32 [ %best_ecc_bytes_total.0149.i, %for.body.i66.for.inc71.i_crit_edge ], [ %best_ecc_bytes_total.2.i, %for.inc.i.for.inc71.i_crit_edge ]
  %inc72.i = add nuw nsw i32 %i.0150.i, 1
  %50 = ptrtoint ptr %nstepinfos.i61 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %nstepinfos.i61, align 4
  %cmp.i = icmp slt i32 %inc72.i, %51
  br i1 %cmp.i, label %for.inc71.i.for.body.i66_crit_edge, label %for.end73.i

for.inc71.i.for.body.i66_crit_edge:               ; preds = %for.inc71.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i66

for.end73.i:                                      ; preds = %for.inc71.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %best_ecc_bytes_total.1.lcssa.i)
  %cmp74.i = icmp eq i32 %best_ecc_bytes_total.1.lcssa.i, 2147483647
  br i1 %cmp74.i, label %for.end73.i.if.end38_crit_edge, label %nand_match_ecc_req.exit

for.end73.i.if.end38_crit_edge:                   ; preds = %for.end73.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

nand_match_ecc_req.exit:                          ; preds = %for.end73.i
  call void @__sanitizer_cov_trace_pc() #16
  %52 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %best_step.1.lcssa.i, ptr %size, align 8
  %strength78.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %53 = ptrtoint ptr %strength78.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %best_strength.1.lcssa.i, ptr %strength78.i, align 4
  %bytes.i71 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %54 = ptrtoint ptr %bytes.i71 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %best_ecc_bytes.1.lcssa.i, ptr %bytes.i71, align 4
  br label %cleanup

if.end38:                                         ; preds = %for.end73.i.if.end38_crit_edge, %if.end.i.if.end38_crit_edge, %if.end34.if.end38_crit_edge
  %call39 = tail call fastcc i32 @nand_maximize_ecc(ptr noundef %chip, ptr noundef %caps, i32 noundef %oobavail)
  br label %cleanup

cleanup:                                          ; preds = %if.end38, %nand_match_ecc_req.exit, %if.then32, %do.end65.i, %if.end58.i, %do.end55.i, %if.then18.i, %land.rhs.i.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %call33, %if.then32 ], [ %call39, %if.end38 ], [ 0, %nand_match_ecc_req.exit ], [ -28, %do.end55.i ], [ 0, %if.end58.i ], [ -524, %do.end65.i ], [ %call10.i, %if.then18.i ], [ %call10.i, %land.rhs.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_maximize_ecc(ptr nocapture noundef %chip, ptr nocapture noundef readonly %caps, i32 noundef %oobavail) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %nstepinfos = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 1
  %0 = ptrtoint ptr %nstepinfos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nstepinfos, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp130 = icmp sgt i32 %1, 0
  br i1 %cmp130, label %for.body.lr.ph, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %calc_ecc_bytes = getelementptr inbounds %struct.nand_ecc_caps, ptr %caps, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc64.for.body_crit_edge, %for.body.lr.ph
  %i.0135 = phi i32 [ 0, %for.body.lr.ph ], [ %inc65, %for.inc64.for.body_crit_edge ]
  %best_ecc_bytes.0134 = phi i32 [ -1, %for.body.lr.ph ], [ %best_ecc_bytes.3, %for.inc64.for.body_crit_edge ]
  %best_strength.0133 = phi i32 [ -1, %for.body.lr.ph ], [ %best_strength.3, %for.inc64.for.body_crit_edge ]
  %best_step.0132 = phi i32 [ 0, %for.body.lr.ph ], [ %best_step.3, %for.inc64.for.body_crit_edge ]
  %best_corr.0131 = phi i32 [ 0, %for.body.lr.ph ], [ %best_corr.3, %for.inc64.for.body_crit_edge ]
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %caps, align 4
  %arrayidx = getelementptr %struct.nand_ecc_step_info, ptr %3, i32 %i.0135
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %6 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp3.not = icmp eq i32 %5, %7
  %or.cond = select i1 %tobool.not, i1 true, i1 %cmp3.not
  br i1 %or.cond, label %for.cond4.preheader, label %for.body.for.inc64_crit_edge

for.body.for.inc64_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc64

for.cond4.preheader:                              ; preds = %for.body
  %nstrengths = getelementptr %struct.nand_ecc_step_info, ptr %3, i32 %i.0135, i32 2
  %8 = ptrtoint ptr %nstrengths to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nstrengths, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp5121 = icmp sgt i32 %9, 0
  br i1 %cmp5121, label %for.body6.lr.ph, label %for.cond4.preheader.for.inc64_crit_edge

for.cond4.preheader.for.inc64_crit_edge:          ; preds = %for.cond4.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc64

for.body6.lr.ph:                                  ; preds = %for.cond4.preheader
  %strengths = getelementptr %struct.nand_ecc_step_info, ptr %3, i32 %i.0135, i32 1
  br label %for.body6

for.body6:                                        ; preds = %for.inc.for.body6_crit_edge, %for.body6.lr.ph
  %j.0126 = phi i32 [ 0, %for.body6.lr.ph ], [ %inc, %for.inc.for.body6_crit_edge ]
  %best_ecc_bytes.1125 = phi i32 [ %best_ecc_bytes.0134, %for.body6.lr.ph ], [ %best_ecc_bytes.2, %for.inc.for.body6_crit_edge ]
  %best_strength.1124 = phi i32 [ %best_strength.0133, %for.body6.lr.ph ], [ %best_strength.2, %for.inc.for.body6_crit_edge ]
  %best_step.1123 = phi i32 [ %best_step.0132, %for.body6.lr.ph ], [ %best_step.2, %for.inc.for.body6_crit_edge ]
  %best_corr.1122 = phi i32 [ %best_corr.0131, %for.body6.lr.ph ], [ %best_corr.2, %for.inc.for.body6_crit_edge ]
  %10 = ptrtoint ptr %strengths to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %strengths, align 4
  %arrayidx7 = getelementptr i32, ptr %11, i32 %j.0126
  %12 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx7, align 4
  %14 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %writesize, align 4
  %.frozen = freeze i32 %15
  %.frozen147 = freeze i32 %5
  %div = udiv i32 %.frozen, %.frozen147
  %16 = mul i32 %div, %.frozen147
  %rem.decomposed = sub i32 %.frozen, %16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.decomposed)
  %tobool8.not = icmp eq i32 %rem.decomposed, 0
  br i1 %tobool8.not, label %if.end10, label %for.body6.for.inc_crit_edge

for.body6.for.inc_crit_edge:                      ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end10:                                         ; preds = %for.body6
  %17 = ptrtoint ptr %calc_ecc_bytes to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %calc_ecc_bytes, align 4
  %call12 = tail call i32 %18(i32 noundef %5, i32 noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %cmp13 = icmp slt i32 %call12, 0
  br i1 %cmp13, label %land.rhs, label %if.end53.critedge

land.rhs:                                         ; preds = %if.end10
  %.b118 = load i1, ptr @nand_maximize_ecc.__already_done, align 1
  br i1 %.b118, label %land.rhs.for.inc_crit_edge, label %if.then21, !prof !379

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then21:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @nand_maximize_ecc.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5933, i32 noundef 9, ptr noundef null) #14
  br label %for.inc

if.end53.critedge:                                ; preds = %if.end10
  %mul = mul i32 %call12, %div
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %oobavail)
  %cmp54 = icmp sgt i32 %mul, %oobavail
  br i1 %cmp54, label %if.end53.critedge.for.inc_crit_edge, label %if.end56

if.end53.critedge.for.inc_crit_edge:              ; preds = %if.end53.critedge
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end56:                                         ; preds = %if.end53.critedge
  %mul57 = mul i32 %div, %13
  call void @__sanitizer_cov_trace_cmp4(i32 %mul57, i32 %best_corr.1122)
  %cmp58 = icmp sgt i32 %mul57, %best_corr.1122
  br i1 %cmp58, label %if.end56.if.then62_crit_edge, label %lor.lhs.false

if.end56.if.then62_crit_edge:                     ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then62

lor.lhs.false:                                    ; preds = %if.end56
  call void @__sanitizer_cov_trace_cmp4(i32 %mul57, i32 %best_corr.1122)
  %cmp59 = icmp eq i32 %mul57, %best_corr.1122
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %best_step.1123)
  %cmp61 = icmp sgt i32 %5, %best_step.1123
  %or.cond120 = select i1 %cmp59, i1 %cmp61, i1 false
  br i1 %or.cond120, label %lor.lhs.false.if.then62_crit_edge, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

lor.lhs.false.if.then62_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then62

if.then62:                                        ; preds = %lor.lhs.false.if.then62_crit_edge, %if.end56.if.then62_crit_edge
  br label %for.inc

for.inc:                                          ; preds = %if.then62, %lor.lhs.false.for.inc_crit_edge, %if.end53.critedge.for.inc_crit_edge, %if.then21, %land.rhs.for.inc_crit_edge, %for.body6.for.inc_crit_edge
  %best_corr.2 = phi i32 [ %best_corr.1122, %for.body6.for.inc_crit_edge ], [ %best_corr.1122, %if.end53.critedge.for.inc_crit_edge ], [ %mul57, %if.then62 ], [ %best_corr.1122, %lor.lhs.false.for.inc_crit_edge ], [ %best_corr.1122, %if.then21 ], [ %best_corr.1122, %land.rhs.for.inc_crit_edge ]
  %best_step.2 = phi i32 [ %best_step.1123, %for.body6.for.inc_crit_edge ], [ %best_step.1123, %if.end53.critedge.for.inc_crit_edge ], [ %5, %if.then62 ], [ %best_step.1123, %lor.lhs.false.for.inc_crit_edge ], [ %best_step.1123, %if.then21 ], [ %best_step.1123, %land.rhs.for.inc_crit_edge ]
  %best_strength.2 = phi i32 [ %best_strength.1124, %for.body6.for.inc_crit_edge ], [ %best_strength.1124, %if.end53.critedge.for.inc_crit_edge ], [ %13, %if.then62 ], [ %best_strength.1124, %lor.lhs.false.for.inc_crit_edge ], [ %best_strength.1124, %if.then21 ], [ %best_strength.1124, %land.rhs.for.inc_crit_edge ]
  %best_ecc_bytes.2 = phi i32 [ %best_ecc_bytes.1125, %for.body6.for.inc_crit_edge ], [ %best_ecc_bytes.1125, %if.end53.critedge.for.inc_crit_edge ], [ %call12, %if.then62 ], [ %best_ecc_bytes.1125, %lor.lhs.false.for.inc_crit_edge ], [ %best_ecc_bytes.1125, %if.then21 ], [ %best_ecc_bytes.1125, %land.rhs.for.inc_crit_edge ]
  %inc = add nuw nsw i32 %j.0126, 1
  %19 = ptrtoint ptr %nstrengths to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %nstrengths, align 4
  %cmp5 = icmp slt i32 %inc, %20
  br i1 %cmp5, label %for.inc.for.body6_crit_edge, label %for.inc.for.inc64_crit_edge

for.inc.for.inc64_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc64

for.inc.for.body6_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body6

for.inc64:                                        ; preds = %for.inc.for.inc64_crit_edge, %for.cond4.preheader.for.inc64_crit_edge, %for.body.for.inc64_crit_edge
  %best_corr.3 = phi i32 [ %best_corr.0131, %for.body.for.inc64_crit_edge ], [ %best_corr.0131, %for.cond4.preheader.for.inc64_crit_edge ], [ %best_corr.2, %for.inc.for.inc64_crit_edge ]
  %best_step.3 = phi i32 [ %best_step.0132, %for.body.for.inc64_crit_edge ], [ %best_step.0132, %for.cond4.preheader.for.inc64_crit_edge ], [ %best_step.2, %for.inc.for.inc64_crit_edge ]
  %best_strength.3 = phi i32 [ %best_strength.0133, %for.body.for.inc64_crit_edge ], [ %best_strength.0133, %for.cond4.preheader.for.inc64_crit_edge ], [ %best_strength.2, %for.inc.for.inc64_crit_edge ]
  %best_ecc_bytes.3 = phi i32 [ %best_ecc_bytes.0134, %for.body.for.inc64_crit_edge ], [ %best_ecc_bytes.0134, %for.cond4.preheader.for.inc64_crit_edge ], [ %best_ecc_bytes.2, %for.inc.for.inc64_crit_edge ]
  %inc65 = add nuw nsw i32 %i.0135, 1
  %21 = ptrtoint ptr %nstepinfos to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %nstepinfos, align 4
  %cmp = icmp slt i32 %inc65, %22
  br i1 %cmp, label %for.inc64.for.body_crit_edge, label %for.end66

for.inc64.for.body_crit_edge:                     ; preds = %for.inc64
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end66:                                        ; preds = %for.inc64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %best_corr.3)
  %tobool67.not = icmp eq i32 %best_corr.3, 0
  br i1 %tobool67.not, label %for.end66.cleanup_crit_edge, label %if.end69

for.end66.cleanup_crit_edge:                      ; preds = %for.end66
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end69:                                         ; preds = %for.end66
  call void @__sanitizer_cov_trace_pc() #16
  %size71 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %23 = ptrtoint ptr %size71 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %best_step.3, ptr %size71, align 8
  %strength73 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %24 = ptrtoint ptr %strength73 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %best_strength.3, ptr %strength73, align 4
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %25 = ptrtoint ptr %bytes to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %best_ecc_bytes.3, ptr %bytes, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end69, %for.end66.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end69 ], [ -524, %for.end66.cleanup_crit_edge ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nand_scan_with_ids(ptr noundef %chip, i32 noundef %maxchips, ptr noundef readonly %ids) #4 align 64 {
entry:
  %pm.i28.i.i.i = alloca ptr, align 4
  %pm.i22.i.i.i = alloca ptr, align 4
  %pm.i.i.i.i = alloca ptr, align 4
  %val.i.i.i = alloca i32, align 4
  %id32.i = alloca [2 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %maxchips)
  %tobool.not = icmp eq i32 %maxchips, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %memorg.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %0 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cur_cs.i, align 4
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 26
  tail call void @__mutex_init(ptr noundef %lock.i, ptr noundef nonnull @.str.64, ptr noundef nonnull @nand_scan_ident.__key) #14
  %call2.i = tail call ptr @nand_get_reset_interface_config() #14
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %1 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call2.i, ptr %current_interface_config.i, align 4
  %of_node.i.i.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 56, i32 27
  %2 = ptrtoint ptr %of_node.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node.i.i.i.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.end.rawnand_dt_init.exit.i_crit_edge, label %if.end.i.i

if.end.rawnand_dt_init.exit.i_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %rawnand_dt_init.exit.i

if.end.i.i:                                       ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.i.i.i) #14
  %4 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -1, ptr %val.i.i.i, align 4, !annotation !380
  %call.i.i.i.i.i = call i32 @of_property_read_variable_u32_array(ptr noundef nonnull %3, ptr noundef nonnull @.str.71, ptr noundef nonnull %val.i.i.i, i32 noundef 1, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i.i.i.i)
  %tobool.not.i.i.i = icmp sgt i32 %call.i.i.i.i.i, -1
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %if.end.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge

if.end.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_nand_bus_width.exit.thread.i.i

if.end.i.i.i:                                     ; preds = %if.end.i.i
  %5 = ptrtoint ptr %val.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %6)
  %switch.selectcmp1.i.i.i = icmp eq i32 %6, 8
  br i1 %switch.selectcmp1.i.i.i, label %if.end.i.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge, label %of_get_nand_bus_width.exit.i.i

if.end.i.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_nand_bus_width.exit.thread.i.i

of_get_nand_bus_width.exit.thread.i.i:            ; preds = %if.end.i.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge, %if.end.i.i.of_get_nand_bus_width.exit.thread.i.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #14
  br label %if.end5.i.i

of_get_nand_bus_width.exit.i.i:                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %6)
  %switch.selectcmp.i.i.i = icmp eq i32 %6, 16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.i.i.i) #14
  br i1 %switch.selectcmp.i.i.i, label %if.then4.i.i, label %of_get_nand_bus_width.exit.i.i.if.end5.i.i_crit_edge

of_get_nand_bus_width.exit.i.i.if.end5.i.i_crit_edge: ; preds = %of_get_nand_bus_width.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end5.i.i

if.then4.i.i:                                     ; preds = %of_get_nand_bus_width.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %options.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %7 = ptrtoint ptr %options.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %options.i.i, align 8
  %or.i.i = or i32 %8, 2
  store i32 %or.i.i, ptr %options.i.i, align 8
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %if.then4.i.i, %of_get_nand_bus_width.exit.i.i.if.end5.i.i_crit_edge, %of_get_nand_bus_width.exit.thread.i.i
  %call.i.i.i = call ptr @of_find_property(ptr noundef nonnull %3, ptr noundef nonnull @.str.70, ptr noundef null) #14
  %tobool.i.not.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.i.not.i.i, label %if.end5.i.i.if.end10.i.i_crit_edge, label %if.then7.i.i

if.end5.i.i.if.end10.i.i_crit_edge:               ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i.i

if.then7.i.i:                                     ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %options8.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %9 = ptrtoint ptr %options8.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %options8.i.i, align 8
  %or9.i.i = or i32 %10, 4194304
  store i32 %or9.i.i, ptr %options8.i.i, align 8
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then7.i.i, %if.end5.i.i.if.end10.i.i_crit_edge
  %call.i.i.i.i = call ptr @of_find_property(ptr noundef nonnull %3, ptr noundef nonnull @.str.72, ptr noundef null) #14
  %tobool.i.i.not.i.i = icmp eq ptr %call.i.i.i.i, null
  br i1 %tobool.i.i.not.i.i, label %if.end10.i.i.if.end14.i.i_crit_edge, label %if.then12.i.i

if.end10.i.i.if.end14.i.i_crit_edge:              ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i.i

if.then12.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %bbt_options.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 10
  %11 = ptrtoint ptr %bbt_options.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %bbt_options.i.i, align 8
  %or13.i.i = or i32 %12, 131072
  store i32 %or13.i.i, ptr %bbt_options.i.i, align 8
  br label %if.end14.i.i

if.end14.i.i:                                     ; preds = %if.then12.i.i, %if.end10.i.i.if.end14.i.i_crit_edge
  call void @of_get_nand_ecc_user_config(ptr noundef %chip) #14
  %13 = ptrtoint ptr %of_node.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %of_node.i.i.i.i.i, align 8
  %user_conf1.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2
  %15 = ptrtoint ptr %user_conf1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %user_conf1.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp.i.i.i = icmp eq i32 %16, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end14.i.i.if.end.i2.i.i_crit_edge

if.end14.i.i.if.end.i2.i.i_crit_edge:             ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i2.i.i

if.then.i.i.i:                                    ; preds = %if.end14.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pm.i.i.i.i) #14
  %17 = ptrtoint ptr %pm.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr inttoptr (i32 -1 to ptr), ptr %pm.i.i.i.i, align 4, !annotation !380
  %call.i.i1.i.i = call i32 @of_property_read_string(ptr noundef %14, ptr noundef nonnull @.str.79, ptr noundef nonnull %pm.i.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i1.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call.i.i1.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %for.cond.preheader.i.i.i.i, label %if.then.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge

if.then.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.cond.preheader.i.i.i.i:                       ; preds = %if.then.i.i.i
  %18 = ptrtoint ptr %pm.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pm.i.i.i.i, align 4
  %call1.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.73) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %for.cond.preheader.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, label %for.inc.i.i.i.i

for.cond.preheader.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %for.cond.preheader.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.cond.preheader.i.i.i.i
  %call1.1.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.74) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.1.i.i.i.i)
  %tobool2.not.1.i.i.i.i = icmp eq i32 %call1.1.i.i.i.i, 0
  br i1 %tobool2.not.1.i.i.i.i, label %for.inc.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, label %for.inc.1.i.i.i.i

for.inc.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %for.inc.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.inc.1.i.i.i.i:                                ; preds = %for.inc.i.i.i.i
  %call1.2.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.75) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.2.i.i.i.i)
  %tobool2.not.2.i.i.i.i = icmp eq i32 %call1.2.i.i.i.i, 0
  br i1 %tobool2.not.2.i.i.i.i, label %for.inc.1.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, label %for.inc.2.i.i.i.i

for.inc.1.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %for.inc.1.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.inc.2.i.i.i.i:                                ; preds = %for.inc.1.i.i.i.i
  %call1.3.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.76) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.3.i.i.i.i)
  %tobool2.not.3.i.i.i.i = icmp eq i32 %call1.3.i.i.i.i, 0
  br i1 %tobool2.not.3.i.i.i.i, label %for.inc.2.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, label %for.inc.3.i.i.i.i

for.inc.2.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %for.inc.2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.inc.3.i.i.i.i:                                ; preds = %for.inc.2.i.i.i.i
  %call1.4.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.77) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.4.i.i.i.i)
  %tobool2.not.4.i.i.i.i = icmp eq i32 %call1.4.i.i.i.i, 0
  br i1 %tobool2.not.4.i.i.i.i, label %for.inc.3.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, label %for.inc.4.i.i.i.i

for.inc.3.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge: ; preds = %for.inc.3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

for.inc.4.i.i.i.i:                                ; preds = %for.inc.3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call1.5.i.i.i.i = call i32 @strcasecmp(ptr noundef %19, ptr noundef nonnull @.str.78) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.5.i.i.i.i)
  %tobool2.not.5.i.i.i.i = icmp eq i32 %call1.5.i.i.i.i, 0
  %spec.select.i.i.i.i = select i1 %tobool2.not.5.i.i.i.i, i32 4, i32 0
  br label %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i

of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i: ; preds = %for.inc.4.i.i.i.i, %for.inc.3.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, %for.inc.2.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, %for.inc.1.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, %for.inc.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, %for.cond.preheader.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge, %if.then.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge
  %retval.0.i.i.i.i = phi i32 [ 0, %if.then.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ 3, %for.inc.2.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ 3, %for.inc.3.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ 1, %for.cond.preheader.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ 2, %for.inc.1.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ 2, %for.inc.i.i.i.i.of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i_crit_edge ], [ %spec.select.i.i.i.i, %for.inc.4.i.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pm.i.i.i.i) #14
  %20 = ptrtoint ptr %user_conf1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %retval.0.i.i.i.i, ptr %user_conf1.i.i.i, align 4
  br label %if.end.i2.i.i

if.end.i2.i.i:                                    ; preds = %of_get_rawnand_ecc_engine_type_legacy.exit.i.i.i, %if.end14.i.i.if.end.i2.i.i_crit_edge
  %algo.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 2
  %21 = ptrtoint ptr %algo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %algo.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp4.i.i.i = icmp eq i32 %22, 0
  br i1 %cmp4.i.i.i, label %if.then5.i.i.i, label %if.end.i2.i.i.if.end8.i.i.i_crit_edge

if.end.i2.i.i.if.end8.i.i.i_crit_edge:            ; preds = %if.end.i2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.i

if.then5.i.i.i:                                   ; preds = %if.end.i2.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pm.i22.i.i.i) #14
  %23 = ptrtoint ptr %pm.i22.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr inttoptr (i32 -1 to ptr), ptr %pm.i22.i.i.i, align 4, !annotation !380
  %call.i23.i.i.i = call i32 @of_property_read_string(ptr noundef %14, ptr noundef nonnull @.str.79, ptr noundef nonnull %pm.i22.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i23.i.i.i)
  %tobool.not.i24.i.i.i = icmp eq i32 %call.i23.i.i.i, 0
  br i1 %tobool.not.i24.i.i.i, label %if.then.i.i.i.i, label %if.then5.i.i.i.if.end8.i.i.i.i_crit_edge

if.then5.i.i.i.if.end8.i.i.i.i_crit_edge:         ; preds = %if.then5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then5.i.i.i
  %24 = ptrtoint ptr %pm.i22.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pm.i22.i.i.i, align 4
  %call1.i25.i.i.i = call i32 @strcasecmp(ptr noundef %25, ptr noundef nonnull @.str.74) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i25.i.i.i)
  %tobool2.not.i26.i.i.i = icmp eq i32 %call1.i25.i.i.i, 0
  br i1 %tobool2.not.i26.i.i.i, label %if.then.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge, label %if.else.i.i.i.i

if.then.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge: ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_algo_legacy.exit.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i.i.i.i
  %call4.i.i.i.i = call i32 @strcasecmp(ptr noundef %25, ptr noundef nonnull @.str.75) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i.i)
  %tobool5.not.i.i.i.i = icmp eq i32 %call4.i.i.i.i, 0
  br i1 %tobool5.not.i.i.i.i, label %if.else.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge, label %if.else.i.i.i.i.if.end8.i.i.i.i_crit_edge

if.else.i.i.i.i.if.end8.i.i.i.i_crit_edge:        ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i.i.i

if.else.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_algo_legacy.exit.i.i.i

if.end8.i.i.i.i:                                  ; preds = %if.else.i.i.i.i.if.end8.i.i.i.i_crit_edge, %if.then5.i.i.i.if.end8.i.i.i.i_crit_edge
  br label %of_get_rawnand_ecc_algo_legacy.exit.i.i.i

of_get_rawnand_ecc_algo_legacy.exit.i.i.i:        ; preds = %if.end8.i.i.i.i, %if.else.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge, %if.then.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge
  %retval.0.i27.i.i.i = phi i32 [ 0, %if.end8.i.i.i.i ], [ 1, %if.then.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge ], [ 2, %if.else.i.i.i.i.of_get_rawnand_ecc_algo_legacy.exit.i.i.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pm.i22.i.i.i) #14
  %26 = ptrtoint ptr %algo.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %retval.0.i27.i.i.i, ptr %algo.i.i.i, align 4
  br label %if.end8.i.i.i

if.end8.i.i.i:                                    ; preds = %of_get_rawnand_ecc_algo_legacy.exit.i.i.i, %if.end.i2.i.i.if.end8.i.i.i_crit_edge
  %placement.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 1
  %27 = ptrtoint ptr %placement.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %placement.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %cmp9.i.i.i = icmp eq i32 %28, 0
  br i1 %cmp9.i.i.i, label %if.then10.i.i.i, label %if.end8.i.i.i.of_get_nand_ecc_legacy_user_config.exit.i.i_crit_edge

if.end8.i.i.i.of_get_nand_ecc_legacy_user_config.exit.i.i_crit_edge: ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_nand_ecc_legacy_user_config.exit.i.i

if.then10.i.i.i:                                  ; preds = %if.end8.i.i.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pm.i28.i.i.i) #14
  %29 = ptrtoint ptr %pm.i28.i.i.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 -1 to ptr), ptr %pm.i28.i.i.i, align 4, !annotation !380
  %call.i29.i.i.i = call i32 @of_property_read_string(ptr noundef %14, ptr noundef nonnull @.str.79, ptr noundef nonnull %pm.i28.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i29.i.i.i)
  %tobool.not.i30.i.i.i = icmp eq i32 %call.i29.i.i.i, 0
  br i1 %tobool.not.i30.i.i.i, label %if.then.i33.i.i.i, label %if.then10.i.i.i.if.end4.i.i.i.i_crit_edge

if.then10.i.i.i.if.end4.i.i.i.i_crit_edge:        ; preds = %if.then10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i.i.i.i

if.then.i33.i.i.i:                                ; preds = %if.then10.i.i.i
  %30 = ptrtoint ptr %pm.i28.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pm.i28.i.i.i, align 4
  %call1.i31.i.i.i = call i32 @strcasecmp(ptr noundef %31, ptr noundef nonnull @.str.77) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i31.i.i.i)
  %tobool2.not.i32.i.i.i = icmp eq i32 %call1.i31.i.i.i, 0
  br i1 %tobool2.not.i32.i.i.i, label %if.then.i33.i.i.i.of_get_rawnand_ecc_placement_legacy.exit.i.i.i_crit_edge, label %if.then.i33.i.i.i.if.end4.i.i.i.i_crit_edge

if.then.i33.i.i.i.if.end4.i.i.i.i_crit_edge:      ; preds = %if.then.i33.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i.i.i.i

if.then.i33.i.i.i.of_get_rawnand_ecc_placement_legacy.exit.i.i.i_crit_edge: ; preds = %if.then.i33.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %of_get_rawnand_ecc_placement_legacy.exit.i.i.i

if.end4.i.i.i.i:                                  ; preds = %if.then.i33.i.i.i.if.end4.i.i.i.i_crit_edge, %if.then10.i.i.i.if.end4.i.i.i.i_crit_edge
  br label %of_get_rawnand_ecc_placement_legacy.exit.i.i.i

of_get_rawnand_ecc_placement_legacy.exit.i.i.i:   ; preds = %if.end4.i.i.i.i, %if.then.i33.i.i.i.of_get_rawnand_ecc_placement_legacy.exit.i.i.i_crit_edge
  %retval.0.i34.i.i.i = phi i32 [ 0, %if.end4.i.i.i.i ], [ 2, %if.then.i33.i.i.i.of_get_rawnand_ecc_placement_legacy.exit.i.i.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pm.i28.i.i.i) #14
  %32 = ptrtoint ptr %placement.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %retval.0.i34.i.i.i, ptr %placement.i.i.i, align 4
  br label %of_get_nand_ecc_legacy_user_config.exit.i.i

of_get_nand_ecc_legacy_user_config.exit.i.i:      ; preds = %of_get_rawnand_ecc_placement_legacy.exit.i.i.i, %if.end8.i.i.i.of_get_nand_ecc_legacy_user_config.exit.i.i_crit_edge
  %ecc.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2
  %33 = ptrtoint ptr %ecc.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 3, ptr %ecc.i.i, align 4
  %34 = ptrtoint ptr %user_conf1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %user_conf1.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp17.not.i.i = icmp eq i32 %35, 0
  br i1 %cmp17.not.i.i, label %of_get_nand_ecc_legacy_user_config.exit.i.i.if.end24.i.i_crit_edge, label %if.then18.i.i

of_get_nand_ecc_legacy_user_config.exit.i.i.if.end24.i.i_crit_edge: ; preds = %of_get_nand_ecc_legacy_user_config.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24.i.i

if.then18.i.i:                                    ; preds = %of_get_nand_ecc_legacy_user_config.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %ecc22.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33
  %36 = ptrtoint ptr %ecc22.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %ecc22.i.i, align 8
  br label %if.end24.i.i

if.end24.i.i:                                     ; preds = %if.then18.i.i, %of_get_nand_ecc_legacy_user_config.exit.i.i.if.end24.i.i_crit_edge
  %ecc25.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33
  %37 = ptrtoint ptr %ecc25.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %ecc25.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %cmp27.i.i = icmp eq i32 %38, 0
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end24.i.i.if.end34.i.i_crit_edge

if.end24.i.i.if.end34.i.i_crit_edge:              ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34.i.i

if.then28.i.i:                                    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %ecc25.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 3, ptr %ecc25.i.i, align 8
  br label %if.end34.i.i

if.end34.i.i:                                     ; preds = %if.then28.i.i, %if.end24.i.i.if.end34.i.i_crit_edge
  %40 = ptrtoint ptr %placement.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %placement.i.i.i, align 4
  %placement38.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 1
  %42 = ptrtoint ptr %placement38.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %placement38.i.i, align 4
  %43 = ptrtoint ptr %algo.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %algo.i.i.i, align 4
  %algo42.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 2
  %45 = ptrtoint ptr %algo42.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %algo42.i.i, align 8
  %strength.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 3
  %46 = ptrtoint ptr %strength.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %strength.i.i, align 4
  %strength46.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %48 = ptrtoint ptr %strength46.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %strength46.i.i, align 4
  %step_size.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 4
  %49 = ptrtoint ptr %step_size.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %step_size.i.i, align 4
  %size.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %51 = ptrtoint ptr %size.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %size.i.i, align 8
  br label %rawnand_dt_init.exit.i

rawnand_dt_init.exit.i:                           ; preds = %if.end34.i.i, %if.end.rawnand_dt_init.exit.i_crit_edge
  %name.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 13
  %52 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %name.i, align 8
  %tobool4.not.i = icmp eq ptr %53, null
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %rawnand_dt_init.exit.i.if.end11.i_crit_edge

rawnand_dt_init.exit.i.if.end11.i_crit_edge:      ; preds = %rawnand_dt_init.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

land.lhs.true.i:                                  ; preds = %rawnand_dt_init.exit.i
  %parent.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 56, i32 1
  %54 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %parent.i, align 8
  %tobool5.not.i = icmp eq ptr %55, null
  br i1 %tobool5.not.i, label %land.lhs.true.i.if.end11.i_crit_edge, label %if.then6.i

land.lhs.true.i.if.end11.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then6.i:                                       ; preds = %land.lhs.true.i
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %55, i32 0, i32 3
  %56 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i109.i = icmp eq ptr %57, null
  br i1 %tobool.not.i109.i, label %if.end.i110.i, label %if.then6.i.dev_name.exit.i_crit_edge

if.then6.i.dev_name.exit.i_crit_edge:             ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %dev_name.exit.i

if.end.i110.i:                                    ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #16
  %58 = ptrtoint ptr %55 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %55, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i110.i, %if.then6.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %59, %if.end.i110.i ], [ %57, %if.then6.i.dev_name.exit.i_crit_edge ]
  %60 = ptrtoint ptr %name.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %retval.0.i.i, ptr %name.i, align 8
  br label %if.end11.i

if.end11.i:                                       ; preds = %dev_name.exit.i, %land.lhs.true.i.if.end11.i_crit_edge, %rawnand_dt_init.exit.i.if.end11.i_crit_edge
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %61 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i111.i = icmp eq ptr %62, null
  br i1 %tobool.not.i111.i, label %if.then.i.i, label %if.end11.i.if.end.i112.i_crit_edge

if.end11.i.if.end.i112.i_crit_edge:               ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i112.i

if.then.i.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  %dummy_controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 16
  %63 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %dummy_controller.i.i, ptr %controller.i.i, align 4
  call void @__mutex_init(ptr noundef %dummy_controller.i.i, ptr noundef nonnull @.str.80, ptr noundef nonnull @nand_controller_init.__key) #14
  br label %if.end.i112.i

if.end.i112.i:                                    ; preds = %if.then.i.i, %if.end11.i.if.end.i112.i_crit_edge
  call void @nand_legacy_set_defaults(ptr noundef %chip) #14
  %buf_align.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 25
  %64 = ptrtoint ptr %buf_align.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %buf_align.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool3.not.i.i = icmp eq i32 %65, 0
  br i1 %tobool3.not.i.i, label %if.then4.i113.i, label %if.end.i112.i.nand_set_defaults.exit.i_crit_edge

if.end.i112.i.nand_set_defaults.exit.i_crit_edge: ; preds = %if.end.i112.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_set_defaults.exit.i

if.then4.i113.i:                                  ; preds = %if.end.i112.i
  call void @__sanitizer_cov_trace_pc() #16
  %66 = ptrtoint ptr %buf_align.i.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 1, ptr %buf_align.i.i, align 8
  br label %nand_set_defaults.exit.i

nand_set_defaults.exit.i:                         ; preds = %if.then4.i113.i, %if.end.i112.i.nand_set_defaults.exit.i_crit_edge
  %call12.i = call i32 @nand_legacy_check_hooks(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %nand_set_defaults.exit.i.cleanup_crit_edge

nand_set_defaults.exit.i.cleanup_crit_edge:       ; preds = %nand_set_defaults.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end15.i:                                       ; preds = %nand_set_defaults.exit.i
  %ntargets.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %67 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %maxchips, ptr %ntargets.i, align 4
  %id.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 1
  %planes_per_lun.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 6
  %68 = ptrtoint ptr %planes_per_lun.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 1, ptr %planes_per_lun.i.i, align 4
  %luns_per_target.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 7
  %69 = ptrtoint ptr %luns_per_target.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 1, ptr %luns_per_target.i.i, align 4
  %call2.i.i = call i32 @nand_reset(ptr noundef %chip, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i114.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i114.i, label %if.end.i115.i, label %if.end15.i.if.then18.i_crit_edge

if.end15.i.if.then18.i_crit_edge:                 ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.end.i115.i:                                    ; preds = %if.end15.i
  %70 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 0, ptr %cur_cs.i, align 4
  %select_chip.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %71 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool22.not.i.i.i = icmp eq ptr %72, null
  br i1 %tobool22.not.i.i.i, label %if.end.i115.i.nand_select_target.exit.i.i_crit_edge, label %if.then23.i.i.i

if.end.i115.i.nand_select_target.exit.i.i_crit_edge: ; preds = %if.end.i115.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit.i.i

if.then23.i.i.i:                                  ; preds = %if.end.i115.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %72(ptr noundef %chip, i32 noundef 0) #14
  br label %nand_select_target.exit.i.i

nand_select_target.exit.i.i:                      ; preds = %if.then23.i.i.i, %if.end.i115.i.nand_select_target.exit.i.i_crit_edge
  %call3.i.i = call i32 @nand_readid_op(ptr noundef %chip, i8 noundef zeroext 0, ptr noundef %id.i.i, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end6.i.i, label %nand_select_target.exit.i.i.if.then18.i_crit_edge

nand_select_target.exit.i.i.if.then18.i_crit_edge: ; preds = %nand_select_target.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.end6.i.i:                                      ; preds = %nand_select_target.exit.i.i
  %73 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %id.i.i, align 1
  %arrayidx7.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 1
  %75 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %75)
  %76 = load i8, ptr %arrayidx7.i.i, align 1
  %call8.i.i = call i32 @nand_readid_op(ptr noundef %chip, i8 noundef zeroext 0, ptr noundef %id.i.i, i32 noundef 8) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i.i)
  %tobool9.not.i.i = icmp eq i32 %call8.i.i, 0
  br i1 %tobool9.not.i.i, label %if.end11.i.i, label %if.end6.i.i.if.then18.i_crit_edge

if.end6.i.i.if.then18.i_crit_edge:                ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.end11.i.i:                                     ; preds = %if.end6.i.i
  %77 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %id.i.i, align 1
  %conv13.i.i = zext i8 %74 to i32
  call void @__sanitizer_cov_trace_cmp1(i8 %78, i8 %74)
  %cmp.not.i.i = icmp eq i8 %78, %74
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %if.end11.do.end_crit_edge.i.i

if.end11.do.end_crit_edge.i.i:                    ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %.pre.i.i = zext i8 %76 to i32
  br label %do.end.i.i

lor.lhs.false.i.i:                                ; preds = %if.end11.i.i
  %79 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %79)
  %80 = load i8, ptr %arrayidx7.i.i, align 1
  %conv17.i.i = zext i8 %76 to i32
  call void @__sanitizer_cov_trace_cmp1(i8 %80, i8 %76)
  %cmp18.not.i.i = icmp eq i8 %80, %76
  br i1 %cmp18.not.i.i, label %if.end28.i.i, label %lor.lhs.false.i.i.do.end.i.i_crit_edge

lor.lhs.false.i.i.do.end.i.i_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i

do.end.i.i:                                       ; preds = %lor.lhs.false.i.i.do.end.i.i_crit_edge, %if.end11.do.end_crit_edge.i.i
  %conv22.pre-phi.i.i = phi i32 [ %.pre.i.i, %if.end11.do.end_crit_edge.i.i ], [ %conv17.i.i, %lor.lhs.false.i.i.do.end.i.i_crit_edge ]
  %conv24.i.i = zext i8 %78 to i32
  %81 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %arrayidx7.i.i, align 1
  %conv26.i.i = zext i8 %82 to i32
  %call27.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, i32 noundef %conv13.i.i, i32 noundef %conv22.pre-phi.i.i, i32 noundef %conv24.i.i, i32 noundef %conv26.i.i) #19
  br label %if.then18.i

if.end28.i.i:                                     ; preds = %lor.lhs.false.i.i
  %arrayidx.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 7
  %83 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load1_noabort(i32 %83)
  %84 = load i8, ptr %arrayidx.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %84)
  %tobool.not.i.i116.i = icmp eq i8 %84, 0
  br i1 %tobool.not.i.i116.i, label %for.inc.i.i.i, label %if.end28.i.i.for.cond4.preheader.i.i.i_crit_edge

if.end28.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %if.end28.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.cond4.preheader.i.i.i:                        ; preds = %for.inc.6.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.5.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.4.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.3.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.2.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.1.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %for.inc.i.i.i.for.cond4.preheader.i.i.i_crit_edge, %if.end28.i.i.for.cond4.preheader.i.i.i_crit_edge
  %spec.select.i.i.i = phi i32 [ 1, %for.inc.6.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 2, %for.inc.5.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 3, %for.inc.4.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 4, %for.inc.3.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 5, %for.inc.2.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 6, %for.inc.1.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 7, %for.inc.i.i.i.for.cond4.preheader.i.i.i_crit_edge ], [ 8, %if.end28.i.i.for.cond4.preheader.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %76)
  %cmp6.not.i.i.i.i = icmp eq i8 %74, %76
  br i1 %cmp6.not.i.i.i.i, label %for.cond1.i.i.1.i.i, label %for.cond4.preheader.i.i.i.for.inc10.i.i.i_crit_edge

for.cond4.preheader.i.i.i.for.inc10.i.i.i_crit_edge: ; preds = %for.cond4.preheader.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.inc.i.i.i:                                    ; preds = %if.end28.i.i
  %arrayidx.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %85 = ptrtoint ptr %arrayidx.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %arrayidx.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %86)
  %tobool.not.1.i.i.i = icmp eq i8 %86, 0
  br i1 %tobool.not.1.i.i.i, label %for.inc.1.i.i.i, label %for.inc.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.1.i.i.i:                                  ; preds = %for.inc.i.i.i
  %arrayidx.2.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %87 = ptrtoint ptr %arrayidx.2.i.i.i to i32
  call void @__asan_load1_noabort(i32 %87)
  %88 = load i8, ptr %arrayidx.2.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %88)
  %tobool.not.2.i.i.i = icmp eq i8 %88, 0
  br i1 %tobool.not.2.i.i.i, label %for.inc.2.i.i.i, label %for.inc.1.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.1.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.2.i.i.i:                                  ; preds = %for.inc.1.i.i.i
  %arrayidx.3.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 4
  %89 = ptrtoint ptr %arrayidx.3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %arrayidx.3.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %90)
  %tobool.not.3.i.i.i = icmp eq i8 %90, 0
  br i1 %tobool.not.3.i.i.i, label %for.inc.3.i.i.i, label %for.inc.2.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.2.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.3.i.i.i:                                  ; preds = %for.inc.2.i.i.i
  %arrayidx.4.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %91 = ptrtoint ptr %arrayidx.4.i.i.i to i32
  call void @__asan_load1_noabort(i32 %91)
  %92 = load i8, ptr %arrayidx.4.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %92)
  %tobool.not.4.i.i.i = icmp eq i8 %92, 0
  br i1 %tobool.not.4.i.i.i, label %for.inc.4.i.i.i, label %for.inc.3.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.3.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.4.i.i.i:                                  ; preds = %for.inc.3.i.i.i
  %arrayidx.5.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %93 = ptrtoint ptr %arrayidx.5.i.i.i to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %arrayidx.5.i.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %94)
  %tobool.not.5.i.i.i = icmp eq i8 %94, 0
  br i1 %tobool.not.5.i.i.i, label %for.inc.5.i.i.i, label %for.inc.4.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.4.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.5.i.i.i:                                  ; preds = %for.inc.4.i.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %76)
  %tobool.not.6.i.i.i = icmp eq i8 %76, 0
  br i1 %tobool.not.6.i.i.i, label %for.inc.6.i.i.i, label %for.inc.5.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.5.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.5.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.6.i.i.i:                                  ; preds = %for.inc.5.i.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %74)
  %tobool.not.7.i.i.i = icmp eq i8 %74, 0
  br i1 %tobool.not.7.i.i.i, label %for.inc.6.i.i.i.nand_id_len.exit.i.i_crit_edge, label %for.inc.6.i.i.i.for.cond4.preheader.i.i.i_crit_edge

for.inc.6.i.i.i.for.cond4.preheader.i.i.i_crit_edge: ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond4.preheader.i.i.i

for.inc.6.i.i.i.nand_id_len.exit.i.i_crit_edge:   ; preds = %for.inc.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_id_len.exit.i.i

for.cond1.i.i.1.i.i:                              ; preds = %for.cond4.preheader.i.i.i
  %arrayidx4.i.i.1.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %95 = ptrtoint ptr %arrayidx4.i.i.1.i.i to i32
  call void @__asan_load1_noabort(i32 %95)
  %96 = load i8, ptr %arrayidx4.i.i.1.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %96)
  %cmp6.not.i.i.1.i.i = icmp eq i8 %74, %96
  br i1 %cmp6.not.i.i.1.i.i, label %for.cond1.i.i.2.i.i, label %for.cond1.i.i.1.i.i.for.inc10.i.i.i_crit_edge

for.cond1.i.i.1.i.i.for.inc10.i.i.i_crit_edge:    ; preds = %for.cond1.i.i.1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.cond1.i.i.2.i.i:                              ; preds = %for.cond1.i.i.1.i.i
  %arrayidx4.i.i.2.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %97 = ptrtoint ptr %arrayidx4.i.i.2.i.i to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %arrayidx4.i.i.2.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %98)
  %cmp6.not.i.i.2.i.i = icmp eq i8 %74, %98
  br i1 %cmp6.not.i.i.2.i.i, label %for.cond1.i.i.3.i.i, label %for.cond1.i.i.2.i.i.for.inc10.i.i.i_crit_edge

for.cond1.i.i.2.i.i.for.inc10.i.i.i_crit_edge:    ; preds = %for.cond1.i.i.2.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.cond1.i.i.3.i.i:                              ; preds = %for.cond1.i.i.2.i.i
  %arrayidx4.i.i.3.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 4
  %99 = ptrtoint ptr %arrayidx4.i.i.3.i.i to i32
  call void @__asan_load1_noabort(i32 %99)
  %100 = load i8, ptr %arrayidx4.i.i.3.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %100)
  %cmp6.not.i.i.3.i.i = icmp eq i8 %74, %100
  br i1 %cmp6.not.i.i.3.i.i, label %for.cond1.i.i.4.i.i, label %for.cond1.i.i.3.i.i.for.inc10.i.i.i_crit_edge

for.cond1.i.i.3.i.i.for.inc10.i.i.i_crit_edge:    ; preds = %for.cond1.i.i.3.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.cond1.i.i.4.i.i:                              ; preds = %for.cond1.i.i.3.i.i
  %arrayidx4.i.i.4.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %101 = ptrtoint ptr %arrayidx4.i.i.4.i.i to i32
  call void @__asan_load1_noabort(i32 %101)
  %102 = load i8, ptr %arrayidx4.i.i.4.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %102)
  %cmp6.not.i.i.4.i.i = icmp eq i8 %74, %102
  br i1 %cmp6.not.i.i.4.i.i, label %for.cond1.i.i.5.i.i, label %for.cond1.i.i.4.i.i.for.inc10.i.i.i_crit_edge

for.cond1.i.i.4.i.i.for.inc10.i.i.i_crit_edge:    ; preds = %for.cond1.i.i.4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.cond1.i.i.5.i.i:                              ; preds = %for.cond1.i.i.4.i.i
  %arrayidx4.i.i.5.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %103 = ptrtoint ptr %arrayidx4.i.i.5.i.i to i32
  call void @__asan_load1_noabort(i32 %103)
  %104 = load i8, ptr %arrayidx4.i.i.5.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %104)
  %cmp6.not.i.i.5.i.i = icmp eq i8 %74, %104
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %84)
  %cmp6.not.i.i.6.i.i = icmp eq i8 %74, %84
  %or.cond.i = select i1 %cmp6.not.i.i.5.i.i, i1 %cmp6.not.i.i.6.i.i, i1 false
  br i1 %or.cond.i, label %for.cond1.i.i.5.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.cond1.i.i.5.i.i.for.inc10.i.i.i_crit_edge

for.cond1.i.i.5.i.i.for.inc10.i.i.i_crit_edge:    ; preds = %for.cond1.i.i.5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.i.i.i

for.cond1.i.i.5.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.cond1.i.i.5.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.inc10.i.i.i:                                  ; preds = %for.cond1.i.i.5.i.i.for.inc10.i.i.i_crit_edge, %for.cond1.i.i.4.i.i.for.inc10.i.i.i_crit_edge, %for.cond1.i.i.3.i.i.for.inc10.i.i.i_crit_edge, %for.cond1.i.i.2.i.i.for.inc10.i.i.i_crit_edge, %for.cond1.i.i.1.i.i.for.inc10.i.i.i_crit_edge, %for.cond4.preheader.i.i.i.for.inc10.i.i.i_crit_edge
  %arrayidx4.i.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %105 = ptrtoint ptr %arrayidx4.i.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %arrayidx4.i.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %106)
  %cmp6.not.i.1.i.i.i = icmp eq i8 %74, %106
  br i1 %cmp6.not.i.1.i.i.i, label %for.cond1.i.1.171.i.i.i, label %for.inc10.i.i.i.for.inc10.1.i.i.i_crit_edge

for.inc10.i.i.i.for.inc10.1.i.i.i_crit_edge:      ; preds = %for.inc10.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.1.i.i.i

for.inc9.i.1.i.i.i:                               ; preds = %for.cond1.i.1.2.i.i.i
  %arrayidx4.i.1.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %107 = ptrtoint ptr %arrayidx4.i.1.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %arrayidx4.i.1.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %108)
  %cmp6.not.i.1.1.i.i.i = icmp eq i8 %76, %108
  br i1 %cmp6.not.i.1.1.i.i.i, label %for.cond1.i.1.1.1.i.i.i, label %for.inc9.i.1.i.i.i.for.inc10.1.i.i.i_crit_edge

for.inc9.i.1.i.i.i.for.inc10.1.i.i.i_crit_edge:   ; preds = %for.inc9.i.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.1.i.i.i

for.cond1.i.1.1.1.i.i.i:                          ; preds = %for.inc9.i.1.i.i.i
  %arrayidx4.i.1.1.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %109 = ptrtoint ptr %arrayidx4.i.1.1.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %109)
  %110 = load i8, ptr %arrayidx4.i.1.1.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %110)
  %cmp6.not.i.1.1.1.i.i.i = icmp eq i8 %76, %110
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %84)
  %cmp6.not.i.1.1.2.i.i.i = icmp eq i8 %76, %84
  %or.cond.i.i = select i1 %cmp6.not.i.1.1.1.i.i.i, i1 %cmp6.not.i.1.1.2.i.i.i, i1 false
  br i1 %or.cond.i.i, label %for.cond1.i.1.1.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.cond1.i.1.1.1.i.i.i.for.inc10.1.i.i.i_crit_edge

for.cond1.i.1.1.1.i.i.i.for.inc10.1.i.i.i_crit_edge: ; preds = %for.cond1.i.1.1.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.1.i.i.i

for.cond1.i.1.1.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.cond1.i.1.1.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.cond1.i.1.171.i.i.i:                          ; preds = %for.inc10.i.i.i
  %arrayidx4.i.1.172.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 4
  %111 = ptrtoint ptr %arrayidx4.i.1.172.i.i.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %arrayidx4.i.1.172.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %112)
  %cmp6.not.i.1.173.i.i.i = icmp eq i8 %74, %112
  br i1 %cmp6.not.i.1.173.i.i.i, label %for.cond1.i.1.2.i.i.i, label %for.cond1.i.1.171.i.i.i.for.inc10.1.i.i.i_crit_edge

for.cond1.i.1.171.i.i.i.for.inc10.1.i.i.i_crit_edge: ; preds = %for.cond1.i.1.171.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.1.i.i.i

for.cond1.i.1.2.i.i.i:                            ; preds = %for.cond1.i.1.171.i.i.i
  %arrayidx4.i.1.2.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %113 = ptrtoint ptr %arrayidx4.i.1.2.i.i.i to i32
  call void @__asan_load1_noabort(i32 %113)
  %114 = load i8, ptr %arrayidx4.i.1.2.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %114)
  %cmp6.not.i.1.2.i.i.i = icmp eq i8 %74, %114
  br i1 %cmp6.not.i.1.2.i.i.i, label %for.inc9.i.1.i.i.i, label %for.cond1.i.1.2.i.i.i.for.inc10.1.i.i.i_crit_edge

for.cond1.i.1.2.i.i.i.for.inc10.1.i.i.i_crit_edge: ; preds = %for.cond1.i.1.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.1.i.i.i

for.inc10.1.i.i.i:                                ; preds = %for.cond1.i.1.2.i.i.i.for.inc10.1.i.i.i_crit_edge, %for.cond1.i.1.171.i.i.i.for.inc10.1.i.i.i_crit_edge, %for.cond1.i.1.1.1.i.i.i.for.inc10.1.i.i.i_crit_edge, %for.inc9.i.1.i.i.i.for.inc10.1.i.i.i_crit_edge, %for.inc10.i.i.i.for.inc10.1.i.i.i_crit_edge
  %arrayidx4.i.2.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %115 = ptrtoint ptr %arrayidx4.i.2.i.i.i to i32
  call void @__asan_load1_noabort(i32 %115)
  %116 = load i8, ptr %arrayidx4.i.2.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %116)
  %cmp6.not.i.2.i.i.i = icmp eq i8 %74, %116
  br i1 %cmp6.not.i.2.i.i.i, label %for.cond1.i.2.162.i.i.i, label %for.inc10.1.i.i.i.for.inc10.2.i.i.i_crit_edge

for.inc10.1.i.i.i.for.inc10.2.i.i.i_crit_edge:    ; preds = %for.inc10.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.2.i.i.i

for.inc9.i.2.i.i.i:                               ; preds = %for.cond1.i.2.162.i.i.i
  %arrayidx4.i.2.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 4
  %117 = ptrtoint ptr %arrayidx4.i.2.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %117)
  %118 = load i8, ptr %arrayidx4.i.2.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %118)
  %cmp6.not.i.2.1.i.i.i = icmp eq i8 %76, %118
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %84)
  %cmp6.not.i.2.1.1.i.i.i = icmp eq i8 %76, %84
  %or.cond663.i.i = select i1 %cmp6.not.i.2.1.i.i.i, i1 %cmp6.not.i.2.1.1.i.i.i, i1 false
  br i1 %or.cond663.i.i, label %for.inc9.i.2.1.i.i.i, label %for.inc9.i.2.i.i.i.for.inc10.2.i.i.i_crit_edge

for.inc9.i.2.i.i.i.for.inc10.2.i.i.i_crit_edge:   ; preds = %for.inc9.i.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.2.i.i.i

for.inc9.i.2.1.i.i.i:                             ; preds = %for.inc9.i.2.i.i.i
  %arrayidx4.i.2.2.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %119 = ptrtoint ptr %arrayidx4.i.2.2.i.i.i to i32
  call void @__asan_load1_noabort(i32 %119)
  %120 = load i8, ptr %arrayidx4.i.2.2.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %106, i8 %120)
  %cmp6.not.i.2.2.i.i.i = icmp eq i8 %106, %120
  br i1 %cmp6.not.i.2.2.i.i.i, label %for.inc9.i.2.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.inc9.i.2.1.i.i.i.for.inc10.2.i.i.i_crit_edge

for.inc9.i.2.1.i.i.i.for.inc10.2.i.i.i_crit_edge: ; preds = %for.inc9.i.2.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.2.i.i.i

for.inc9.i.2.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.inc9.i.2.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.cond1.i.2.162.i.i.i:                          ; preds = %for.inc10.1.i.i.i
  %arrayidx4.i.2.163.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %121 = ptrtoint ptr %arrayidx4.i.2.163.i.i.i to i32
  call void @__asan_load1_noabort(i32 %121)
  %122 = load i8, ptr %arrayidx4.i.2.163.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %122)
  %cmp6.not.i.2.164.i.i.i = icmp eq i8 %74, %122
  br i1 %cmp6.not.i.2.164.i.i.i, label %for.inc9.i.2.i.i.i, label %for.cond1.i.2.162.i.i.i.for.inc10.2.i.i.i_crit_edge

for.cond1.i.2.162.i.i.i.for.inc10.2.i.i.i_crit_edge: ; preds = %for.cond1.i.2.162.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.2.i.i.i

for.inc10.2.i.i.i:                                ; preds = %for.cond1.i.2.162.i.i.i.for.inc10.2.i.i.i_crit_edge, %for.inc9.i.2.1.i.i.i.for.inc10.2.i.i.i_crit_edge, %for.inc9.i.2.i.i.i.for.inc10.2.i.i.i_crit_edge, %for.inc10.1.i.i.i.for.inc10.2.i.i.i_crit_edge
  %arrayidx4.i.3.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 4
  %123 = ptrtoint ptr %arrayidx4.i.3.i.i.i to i32
  call void @__asan_load1_noabort(i32 %123)
  %124 = load i8, ptr %arrayidx4.i.3.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %124)
  %cmp6.not.i.3.i.i.i = icmp eq i8 %74, %124
  br i1 %cmp6.not.i.3.i.i.i, label %for.inc9.i.3.i.i.i, label %for.inc10.2.i.i.i.for.inc10.3.i.i.i_crit_edge

for.inc10.2.i.i.i.for.inc10.3.i.i.i_crit_edge:    ; preds = %for.inc10.2.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.3.i.i.i

for.inc9.i.3.i.i.i:                               ; preds = %for.inc10.2.i.i.i
  %arrayidx4.i.3.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %125 = ptrtoint ptr %arrayidx4.i.3.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %125)
  %126 = load i8, ptr %arrayidx4.i.3.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %126)
  %cmp6.not.i.3.1.i.i.i = icmp eq i8 %76, %126
  br i1 %cmp6.not.i.3.1.i.i.i, label %for.inc9.i.3.1.i.i.i, label %for.inc9.i.3.i.i.i.for.inc10.3.i.i.i_crit_edge

for.inc9.i.3.i.i.i.for.inc10.3.i.i.i_crit_edge:   ; preds = %for.inc9.i.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.3.i.i.i

for.inc9.i.3.1.i.i.i:                             ; preds = %for.inc9.i.3.i.i.i
  %arrayidx4.i.3.2.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %127 = ptrtoint ptr %arrayidx4.i.3.2.i.i.i to i32
  call void @__asan_load1_noabort(i32 %127)
  %128 = load i8, ptr %arrayidx4.i.3.2.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %106, i8 %128)
  %cmp6.not.i.3.2.i.i.i = icmp eq i8 %106, %128
  call void @__sanitizer_cov_trace_cmp1(i8 %116, i8 %84)
  %cmp6.not.i.3.3.i.i.i = icmp eq i8 %116, %84
  %or.cond664.i.i = select i1 %cmp6.not.i.3.2.i.i.i, i1 %cmp6.not.i.3.3.i.i.i, i1 false
  br i1 %or.cond664.i.i, label %for.inc9.i.3.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.inc9.i.3.1.i.i.i.for.inc10.3.i.i.i_crit_edge

for.inc9.i.3.1.i.i.i.for.inc10.3.i.i.i_crit_edge: ; preds = %for.inc9.i.3.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.3.i.i.i

for.inc9.i.3.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.inc9.i.3.1.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.inc10.3.i.i.i:                                ; preds = %for.inc9.i.3.1.i.i.i.for.inc10.3.i.i.i_crit_edge, %for.inc9.i.3.i.i.i.for.inc10.3.i.i.i_crit_edge, %for.inc10.2.i.i.i.for.inc10.3.i.i.i_crit_edge
  %arrayidx4.i.4.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 5
  %129 = ptrtoint ptr %arrayidx4.i.4.i.i.i to i32
  call void @__asan_load1_noabort(i32 %129)
  %130 = load i8, ptr %arrayidx4.i.4.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %130)
  %cmp6.not.i.4.i.i.i = icmp eq i8 %74, %130
  br i1 %cmp6.not.i.4.i.i.i, label %for.inc9.i.4.i.i.i, label %for.inc10.3.i.i.i.for.inc10.4.i.i.i_crit_edge

for.inc10.3.i.i.i.for.inc10.4.i.i.i_crit_edge:    ; preds = %for.inc10.3.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.4.i.i.i

for.inc9.i.4.i.i.i:                               ; preds = %for.inc10.3.i.i.i
  %arrayidx4.i.4.1.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %131 = ptrtoint ptr %arrayidx4.i.4.1.i.i.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %arrayidx4.i.4.1.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %132)
  %cmp6.not.i.4.1.i.i.i = icmp eq i8 %76, %132
  call void @__sanitizer_cov_trace_cmp1(i8 %106, i8 %84)
  %cmp6.not.i.4.2.i.i.i = icmp eq i8 %106, %84
  %or.cond665.i.i = select i1 %cmp6.not.i.4.1.i.i.i, i1 %cmp6.not.i.4.2.i.i.i, i1 false
  br i1 %or.cond665.i.i, label %for.inc9.i.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.inc9.i.4.i.i.i.for.inc10.4.i.i.i_crit_edge

for.inc9.i.4.i.i.i.for.inc10.4.i.i.i_crit_edge:   ; preds = %for.inc9.i.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc10.4.i.i.i

for.inc9.i.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.inc9.i.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.inc10.4.i.i.i:                                ; preds = %for.inc9.i.4.i.i.i.for.inc10.4.i.i.i_crit_edge, %for.inc10.3.i.i.i.for.inc10.4.i.i.i_crit_edge
  %arrayidx4.i.5.i.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 6
  %133 = ptrtoint ptr %arrayidx4.i.5.i.i.i to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %arrayidx4.i.5.i.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %134)
  %cmp6.not.i.5.i.i.i = icmp eq i8 %74, %134
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %84)
  %cmp6.not.i.5.1.i.i.i = icmp eq i8 %76, %84
  %or.cond158.i = select i1 %cmp6.not.i.5.i.i.i, i1 %cmp6.not.i.5.1.i.i.i, i1 false
  br i1 %or.cond158.i, label %for.inc10.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.cond1.preheader.i.preheader.6.i.i.i

for.inc10.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.inc10.4.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

for.cond1.preheader.i.preheader.6.i.i.i:          ; preds = %for.inc10.4.i.i.i
  call void @__sanitizer_cov_trace_cmp1(i8 %74, i8 %84)
  %cmp6.not.i.6.i.i.i = icmp eq i8 %74, %84
  br i1 %cmp6.not.i.6.i.i.i, label %for.cond1.preheader.i.preheader.6.i.i.i.cleanup.loopexit.i.i.i_crit_edge, label %for.cond1.preheader.i.preheader.6.i.i.i.nand_id_len.exit.i.i_crit_edge

for.cond1.preheader.i.preheader.6.i.i.i.nand_id_len.exit.i.i_crit_edge: ; preds = %for.cond1.preheader.i.preheader.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_id_len.exit.i.i

for.cond1.preheader.i.preheader.6.i.i.i.cleanup.loopexit.i.i.i_crit_edge: ; preds = %for.cond1.preheader.i.preheader.6.i.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.loopexit.i.i.i

cleanup.loopexit.i.i.i:                           ; preds = %for.cond1.preheader.i.preheader.6.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.inc10.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.inc9.i.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.inc9.i.3.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.inc9.i.2.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.cond1.i.1.1.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge, %for.cond1.i.i.5.i.i.cleanup.loopexit.i.i.i_crit_edge
  %period.010.lcssa13.i.i.i = phi i32 [ 3, %for.inc9.i.2.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 7, %for.cond1.preheader.i.preheader.6.i.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 2, %for.cond1.i.1.1.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 4, %for.inc9.i.3.1.i.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 5, %for.inc9.i.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 1, %for.cond1.i.i.5.i.i.cleanup.loopexit.i.i.i_crit_edge ], [ 6, %for.inc10.4.i.i.i.cleanup.loopexit.i.i.i_crit_edge ]
  br label %nand_id_len.exit.i.i

nand_id_len.exit.i.i:                             ; preds = %cleanup.loopexit.i.i.i, %for.cond1.preheader.i.preheader.6.i.i.i.nand_id_len.exit.i.i_crit_edge, %for.inc.6.i.i.i.nand_id_len.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %period.010.lcssa13.i.i.i, %cleanup.loopexit.i.i.i ], [ 0, %for.inc.6.i.i.i.nand_id_len.exit.i.i_crit_edge ], [ %spec.select.i.i.i, %for.cond1.preheader.i.preheader.6.i.i.i.nand_id_len.exit.i.i_crit_edge ]
  %len.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 1
  %135 = ptrtoint ptr %len.i.i to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 %retval.0.i.i.i, ptr %len.i.i, align 8
  %call31.i.i = call ptr @nand_get_manufacturer_desc(i8 noundef zeroext %74) #14
  %manufacturer.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 3
  %136 = ptrtoint ptr %manufacturer.i.i to i32
  call void @__asan_store4_noabort(i32 %136)
  store ptr %call31.i.i, ptr %manufacturer.i.i, align 8
  %tobool32.not.i.i = icmp eq ptr %ids, null
  %spec.store.select.i.i = select i1 %tobool32.not.i.i, ptr @nand_flash_ids, ptr %ids
  %options.i117.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %137 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %options.i117.i, align 8
  %and.i.i = and i32 %138, 2
  %and36.i.i = and i32 %138, -3
  store i32 %and36.i.i, ptr %options.i117.i, align 8
  %139 = ptrtoint ptr %spec.store.select.i.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %spec.store.select.i.i, align 4
  %cmp37.not675.i.i = icmp eq ptr %140, null
  br i1 %cmp37.not675.i.i, label %nand_id_len.exit.i.i.if.then56.i.i_crit_edge, label %for.body.lr.ph.i.i

nand_id_len.exit.i.i.if.then56.i.i_crit_edge:     ; preds = %nand_id_len.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then56.i.i

for.body.lr.ph.i.i:                               ; preds = %nand_id_len.exit.i.i
  %pagesize6.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %writesize.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %pages_per_eraseblock.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %erasesize10.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %oobsize12.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 2
  %oobsize14.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %arrayidx.i623.i.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %eraseblocks_per_lun.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 4
  %requirements.i.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1
  %requirements.sroa.4.0.requirements.i.sroa_idx.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 1
  %requirements.sroa.5.0.requirements.i.sroa_idx.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 2
  %requirements.sroa.6.0.requirements.i.sroa_idx.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 3
  %requirements.sroa.8.0.requirements.i.sroa_idx.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 4
  %requirements.sroa.10.0.requirements.i.sroa_idx.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 5
  %parameters.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %type.addr.0676.i.i = phi ptr [ %spec.store.select.i.i, %for.body.lr.ph.i.i ], [ %incdec.ptr.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %id_len.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 6
  %141 = ptrtoint ptr %id_len.i.i.i to i32
  call void @__asan_load2_noabort(i32 %141)
  %142 = load i16, ptr %id_len.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %142)
  %tobool.i.not.i118.i = icmp eq i16 %142, 0
  br i1 %tobool.i.not.i118.i, label %if.else.i.i, label %if.then40.i.i

if.then40.i.i:                                    ; preds = %for.body.i.i
  %143 = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 1
  %conv.i.i.i = zext i16 %142 to i32
  %call5.i.i.i = call i32 @strncmp(ptr noundef %143, ptr noundef %id.i.i, i32 noundef %conv.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i.i)
  %tobool.not.i622.i.i = icmp eq i32 %call5.i.i.i, 0
  br i1 %tobool.not.i622.i.i, label %if.then.i.i119.i, label %if.then40.i.i.for.inc.i.i_crit_edge

if.then40.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then40.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

if.then.i.i119.i:                                 ; preds = %if.then40.i.i
  %pagesize.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 2
  %144 = ptrtoint ptr %pagesize.i.i.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %pagesize.i.i.i, align 4
  %146 = ptrtoint ptr %pagesize6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 %145, ptr %pagesize6.i.i.i, align 4
  %147 = ptrtoint ptr %writesize.i.i.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store i32 %145, ptr %writesize.i.i.i, align 4
  %erasesize.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 4
  %148 = ptrtoint ptr %erasesize.i.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %erasesize.i.i.i, align 4
  %150 = load i32, ptr %pagesize.i.i.i, align 4
  %div.i.i.i = udiv i32 %149, %150
  %151 = ptrtoint ptr %pages_per_eraseblock.i.i.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %div.i.i.i, ptr %pages_per_eraseblock.i.i.i, align 4
  %152 = load i32, ptr %erasesize.i.i.i, align 4
  %153 = ptrtoint ptr %erasesize10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %152, ptr %erasesize10.i.i.i, align 8
  %oobsize.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 7
  %154 = ptrtoint ptr %oobsize.i.i.i to i32
  call void @__asan_load2_noabort(i32 %154)
  %155 = load i16, ptr %oobsize.i.i.i, align 2
  %conv11.i.i.i = zext i16 %155 to i32
  %156 = ptrtoint ptr %oobsize12.i.i.i to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 %conv11.i.i.i, ptr %oobsize12.i.i.i, align 4
  %157 = ptrtoint ptr %oobsize14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %conv11.i.i.i, ptr %oobsize14.i.i.i, align 4
  %158 = ptrtoint ptr %arrayidx.i623.i.i to i32
  call void @__asan_load1_noabort(i32 %158)
  %159 = load i8, ptr %arrayidx.i623.i.i, align 1
  %160 = lshr i8 %159, 2
  %161 = and i8 %160, 3
  %narrow.i.i.i.i = add nuw nsw i8 %161, 1
  %add.i.i.i.i = zext i8 %narrow.i.i.i.i to i32
  %162 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %add.i.i.i.i, ptr %memorg.i.i, align 4
  %chipsize.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 3
  %163 = ptrtoint ptr %chipsize.i.i.i to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load i32, ptr %chipsize.i.i.i, align 4
  %conv16.i.i.i = zext i32 %164 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv16.i.i.i, 20
  %mul.i.i.i = mul i32 %div.i.i.i, %145
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %164)
  %cmp190.i.i.i = icmp ult i32 %164, 4096
  br i1 %cmp190.i.i.i, label %if.then194.i.i.i, label %if.else200.i.i.i, !prof !379

if.then194.i.i.i:                                 ; preds = %if.then.i.i119.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv195.i.i.i = trunc i64 %shl.i.i.i to i32
  %div198.i.i.i = udiv i32 %conv195.i.i.i, %mul.i.i.i
  br label %find_full_id_nand.exit.i.i

if.else200.i.i.i:                                 ; preds = %if.then.i.i119.i
  call void @__sanitizer_cov_trace_pc() #16
  %165 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %mul.i.i.i, i64 %shl.i.i.i) #18, !srcloc !386
  %asmresult1.i.i.i.i = extractvalue { i64, i64 } %165, 1
  %extract.t358.i.i.i = trunc i64 %asmresult1.i.i.i.i to i32
  br label %find_full_id_nand.exit.i.i

find_full_id_nand.exit.i.i:                       ; preds = %if.else200.i.i.i, %if.then194.i.i.i
  %_tmp.0.off0.i.i.i = phi i32 [ %div198.i.i.i, %if.then194.i.i.i ], [ %extract.t358.i.i.i, %if.else200.i.i.i ]
  %166 = ptrtoint ptr %eraseblocks_per_lun.i.i.i to i32
  call void @__asan_store4_noabort(i32 %166)
  store i32 %_tmp.0.off0.i.i.i, ptr %eraseblocks_per_lun.i.i.i, align 4
  %options.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 5
  %167 = ptrtoint ptr %options.i.i.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load i32, ptr %options.i.i.i, align 4
  %169 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %options.i117.i, align 8
  %or209.i.i.i = or i32 %170, %168
  store i32 %or209.i.i.i, ptr %options.i117.i, align 8
  %ecc.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 8
  %171 = ptrtoint ptr %ecc.i.i.i to i32
  call void @__asan_load2_noabort(i32 %171)
  %172 = load i16, ptr %ecc.i.i.i, align 4
  %conv210.i.i.i = zext i16 %172 to i32
  %step_ds.i.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 8, i32 1
  %173 = ptrtoint ptr %step_ds.i.i.i to i32
  call void @__asan_load2_noabort(i32 %173)
  %174 = load i16, ptr %step_ds.i.i.i, align 2
  %conv212.i.i.i = zext i16 %174 to i32
  %175 = ptrtoint ptr %requirements.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %175)
  store i32 -1, ptr %requirements.i.i.i.i, align 4
  %176 = ptrtoint ptr %requirements.sroa.4.0.requirements.i.sroa_idx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %176)
  store i32 -1, ptr %requirements.sroa.4.0.requirements.i.sroa_idx.i.i.i, align 4
  %177 = ptrtoint ptr %requirements.sroa.5.0.requirements.i.sroa_idx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %177)
  store i32 -1, ptr %requirements.sroa.5.0.requirements.i.sroa_idx.i.i.i, align 4
  %178 = ptrtoint ptr %requirements.sroa.6.0.requirements.i.sroa_idx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %178)
  store i32 %conv210.i.i.i, ptr %requirements.sroa.6.0.requirements.i.sroa_idx.i.i.i, align 4
  %179 = ptrtoint ptr %requirements.sroa.8.0.requirements.i.sroa_idx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %179)
  store i32 %conv212.i.i.i, ptr %requirements.sroa.8.0.requirements.i.sroa_idx.i.i.i, align 4
  %180 = ptrtoint ptr %requirements.sroa.10.0.requirements.i.sroa_idx.i.i.i to i32
  call void @__asan_store4_noabort(i32 %180)
  store i32 -1, ptr %requirements.sroa.10.0.requirements.i.sroa_idx.i.i.i, align 4
  %181 = ptrtoint ptr %type.addr.0676.i.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %type.addr.0676.i.i, align 4
  %call213.i.i.i = call noalias ptr @kstrdup(ptr noundef %182, i32 noundef 3264) #14
  %183 = ptrtoint ptr %parameters.i.i.i to i32
  call void @__asan_store4_noabort(i32 %183)
  store ptr %call213.i.i.i, ptr %parameters.i.i.i, align 4
  %tobool216.not.i.not.i.i = icmp eq ptr %call213.i.i.i, null
  br i1 %tobool216.not.i.not.i.i, label %find_full_id_nand.exit.i.i.for.inc.i.i_crit_edge, label %find_full_id_nand.exit.i.i.ident_done.i.i_crit_edge

find_full_id_nand.exit.i.i.ident_done.i.i_crit_edge: ; preds = %find_full_id_nand.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ident_done.i.i

find_full_id_nand.exit.i.i.for.inc.i.i_crit_edge: ; preds = %find_full_id_nand.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

if.else.i.i:                                      ; preds = %for.body.i.i
  %dev_id45.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 1, i32 0, i32 1
  %184 = ptrtoint ptr %dev_id45.i.i to i32
  call void @__asan_load1_noabort(i32 %184)
  %185 = load i8, ptr %dev_id45.i.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %76, i8 %185)
  %cmp47.i.i = icmp eq i8 %76, %185
  br i1 %cmp47.i.i, label %lor.lhs.false54.i.i, label %if.else.i.i.for.inc.i.i_crit_edge

if.else.i.i.for.inc.i.i_crit_edge:                ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %if.else.i.i.for.inc.i.i_crit_edge, %find_full_id_nand.exit.i.i.for.inc.i.i_crit_edge, %if.then40.i.i.for.inc.i.i_crit_edge
  %incdec.ptr.i.i = getelementptr %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 1
  %186 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %incdec.ptr.i.i, align 4
  %cmp37.not.i.i = icmp eq ptr %187, null
  br i1 %cmp37.not.i.i, label %for.inc.i.i.if.then56.i.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.inc.i.i.if.then56.i.i_crit_edge:              ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then56.i.i

lor.lhs.false54.i.i:                              ; preds = %if.else.i.i
  %pagesize.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0676.i.i, i32 0, i32 2
  %188 = ptrtoint ptr %pagesize.i.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load i32, ptr %pagesize.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %189)
  %tobool55.not.i.i = icmp eq i32 %189, 0
  br i1 %tobool55.not.i.i, label %lor.lhs.false54.i.i.if.then56.i.i_crit_edge, label %lor.lhs.false54.i.i.if.end75.i.i_crit_edge

lor.lhs.false54.i.i.if.end75.i.i_crit_edge:       ; preds = %lor.lhs.false54.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75.i.i

lor.lhs.false54.i.i.if.then56.i.i_crit_edge:      ; preds = %lor.lhs.false54.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then56.i.i

if.then56.i.i:                                    ; preds = %lor.lhs.false54.i.i.if.then56.i.i_crit_edge, %for.inc.i.i.if.then56.i.i_crit_edge, %nand_id_len.exit.i.i.if.then56.i.i_crit_edge
  %type.addr.0673.i.i = phi ptr [ %type.addr.0676.i.i, %lor.lhs.false54.i.i.if.then56.i.i_crit_edge ], [ %spec.store.select.i.i, %nand_id_len.exit.i.i.if.then56.i.i_crit_edge ], [ %incdec.ptr.i.i, %for.inc.i.i.if.then56.i.i_crit_edge ]
  %call57.i.i = call i32 @nand_onfi_detect(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i.i)
  %cmp58.i.i = icmp slt i32 %call57.i.i, 0
  br i1 %cmp58.i.i, label %if.then56.i.i.if.then18.i_crit_edge, label %if.else61.i.i

if.then56.i.i.if.then18.i_crit_edge:              ; preds = %if.then56.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.else61.i.i:                                    ; preds = %if.then56.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i.i)
  %tobool62.not.i.i = icmp eq i32 %call57.i.i, 0
  br i1 %tobool62.not.i.i, label %if.end65.i.i, label %if.else61.i.i.ident_done.i.i_crit_edge

if.else61.i.i.ident_done.i.i_crit_edge:           ; preds = %if.else61.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ident_done.i.i

if.end65.i.i:                                     ; preds = %if.else61.i.i
  %call66.i.i = call i32 @nand_jedec_detect(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66.i.i)
  %cmp67.i.i = icmp slt i32 %call66.i.i, 0
  br i1 %cmp67.i.i, label %if.end65.i.i.if.then18.i_crit_edge, label %if.else70.i.i

if.end65.i.i.if.then18.i_crit_edge:               ; preds = %if.end65.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.else70.i.i:                                    ; preds = %if.end65.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66.i.i)
  %tobool71.not.i.i = icmp eq i32 %call66.i.i, 0
  br i1 %tobool71.not.i.i, label %if.else70.i.i.if.end75.i.i_crit_edge, label %if.else70.i.i.ident_done.i.i_crit_edge

if.else70.i.i.ident_done.i.i_crit_edge:           ; preds = %if.else70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %ident_done.i.i

if.else70.i.i.if.end75.i.i_crit_edge:             ; preds = %if.else70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75.i.i

if.end75.i.i:                                     ; preds = %if.else70.i.i.if.end75.i.i_crit_edge, %lor.lhs.false54.i.i.if.end75.i.i_crit_edge
  %type.addr.0672.i.i = phi ptr [ %type.addr.0673.i.i, %if.else70.i.i.if.end75.i.i_crit_edge ], [ %type.addr.0676.i.i, %lor.lhs.false54.i.i.if.end75.i.i_crit_edge ]
  %190 = ptrtoint ptr %type.addr.0672.i.i to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %type.addr.0672.i.i, align 4
  %tobool77.not.i.i = icmp eq ptr %191, null
  br i1 %tobool77.not.i.i, label %if.end75.i.i.if.then18.i_crit_edge, label %if.end79.i.i

if.end75.i.i.if.then18.i_crit_edge:               ; preds = %if.end75.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.end79.i.i:                                     ; preds = %if.end75.i.i
  %call81.i.i = call noalias ptr @kstrdup(ptr noundef nonnull %191, i32 noundef 3264) #14
  %parameters.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  %192 = ptrtoint ptr %parameters.i.i to i32
  call void @__asan_store4_noabort(i32 %192)
  store ptr %call81.i.i, ptr %parameters.i.i, align 4
  %tobool84.not.i.i = icmp eq ptr %call81.i.i, null
  br i1 %tobool84.not.i.i, label %if.end79.i.i.if.then18.i_crit_edge, label %if.end86.i.i

if.end79.i.i.if.then18.i_crit_edge:               ; preds = %if.end79.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18.i

if.end86.i.i:                                     ; preds = %if.end79.i.i
  %pagesize87.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0672.i.i, i32 0, i32 2
  %193 = ptrtoint ptr %pagesize87.i.i to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load i32, ptr %pagesize87.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %194)
  %tobool88.not.i.i = icmp eq i32 %194, 0
  br i1 %tobool88.not.i.i, label %if.then89.i.i, label %if.else90.i.i

if.then89.i.i:                                    ; preds = %if.end86.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @nand_manufacturer_detect(ptr noundef %chip) #14
  br label %if.end91.i.i

if.else90.i.i:                                    ; preds = %if.end86.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %erasesize.i626.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0672.i.i, i32 0, i32 4
  %195 = ptrtoint ptr %erasesize.i626.i.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %erasesize.i626.i.i, align 4
  %div.i628.i.i = udiv i32 %196, %194
  %pages_per_eraseblock.i629.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %197 = ptrtoint ptr %pages_per_eraseblock.i629.i.i to i32
  call void @__asan_store4_noabort(i32 %197)
  store i32 %div.i628.i.i, ptr %pages_per_eraseblock.i629.i.i, align 4
  %198 = load i32, ptr %erasesize.i626.i.i, align 4
  %erasesize3.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %199 = ptrtoint ptr %erasesize3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %198, ptr %erasesize3.i.i.i, align 8
  %200 = ptrtoint ptr %pagesize87.i.i to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %pagesize87.i.i, align 4
  %pagesize5.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %202 = ptrtoint ptr %pagesize5.i.i.i to i32
  call void @__asan_store4_noabort(i32 %202)
  store i32 %201, ptr %pagesize5.i.i.i, align 4
  %writesize.i630.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %203 = ptrtoint ptr %writesize.i630.i.i to i32
  call void @__asan_store4_noabort(i32 %203)
  store i32 %201, ptr %writesize.i630.i.i, align 4
  %div823.i.i.i = lshr i32 %201, 5
  %oobsize.i631.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 2
  %204 = ptrtoint ptr %oobsize.i631.i.i to i32
  call void @__asan_store4_noabort(i32 %204)
  store i32 %div823.i.i.i, ptr %oobsize.i631.i.i, align 4
  %oobsize10.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %205 = ptrtoint ptr %oobsize10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 %div823.i.i.i, ptr %oobsize10.i.i.i, align 4
  %206 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_store4_noabort(i32 %206)
  store i32 1, ptr %memorg.i.i, align 4
  br label %if.end91.i.i

if.end91.i.i:                                     ; preds = %if.else90.i.i, %if.then89.i.i
  %options92.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0672.i.i, i32 0, i32 5
  %207 = ptrtoint ptr %options92.i.i to i32
  call void @__asan_load4_noabort(i32 %207)
  %208 = load i32, ptr %options92.i.i, align 4
  %209 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %options.i117.i, align 8
  %or.i122.i = or i32 %210, %208
  store i32 %or.i122.i, ptr %options.i117.i, align 8
  %chipsize.i.i = getelementptr inbounds %struct.nand_flash_dev, ptr %type.addr.0672.i.i, i32 0, i32 3
  %211 = ptrtoint ptr %chipsize.i.i to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load i32, ptr %chipsize.i.i, align 4
  %conv94.i.i = zext i32 %212 to i64
  %shl.i.i = shl nuw nsw i64 %conv94.i.i, 20
  %pagesize95.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %213 = ptrtoint ptr %pagesize95.i.i to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load i32, ptr %pagesize95.i.i, align 4
  %pages_per_eraseblock.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %215 = ptrtoint ptr %pages_per_eraseblock.i.i to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load i32, ptr %pages_per_eraseblock.i.i, align 4
  %mul.i.i = mul i32 %216, %214
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %212)
  %cmp272.i.i = icmp ult i32 %212, 4096
  br i1 %cmp272.i.i, label %if.then276.i.i, label %if.else282.i.i, !prof !379

if.then276.i.i:                                   ; preds = %if.end91.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv277.i.i = trunc i64 %shl.i.i to i32
  %div280.i.i = udiv i32 %conv277.i.i, %mul.i.i
  br label %if.end286.i.i

if.else282.i.i:                                   ; preds = %if.end91.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %217 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %mul.i.i, i64 %shl.i.i) #18, !srcloc !386
  %asmresult1.i.i.i = extractvalue { i64, i64 } %217, 1
  %extract.t668.i.i = trunc i64 %asmresult1.i.i.i to i32
  br label %if.end286.i.i

if.end286.i.i:                                    ; preds = %if.else282.i.i, %if.then276.i.i
  %_tmp.0.off0.i.i = phi i32 [ %div280.i.i, %if.then276.i.i ], [ %extract.t668.i.i, %if.else282.i.i ]
  %eraseblocks_per_lun.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 4
  %218 = ptrtoint ptr %eraseblocks_per_lun.i.i to i32
  call void @__asan_store4_noabort(i32 %218)
  store i32 %_tmp.0.off0.i.i, ptr %eraseblocks_per_lun.i.i, align 4
  br label %ident_done.i.i

ident_done.i.i:                                   ; preds = %if.end286.i.i, %if.else70.i.i.ident_done.i.i_crit_edge, %if.else61.i.i.ident_done.i.i_crit_edge, %find_full_id_nand.exit.i.i.ident_done.i.i_crit_edge
  %219 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %name.i, align 8
  %tobool291.not.i.i = icmp eq ptr %220, null
  br i1 %tobool291.not.i.i, label %if.then292.i.i, label %ident_done.i.i.if.end296.i.i_crit_edge

ident_done.i.i.if.end296.i.i_crit_edge:           ; preds = %ident_done.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end296.i.i

if.then292.i.i:                                   ; preds = %ident_done.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %parameters293.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  %221 = ptrtoint ptr %parameters293.i.i to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %parameters293.i.i, align 4
  %223 = ptrtoint ptr %name.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store ptr %222, ptr %name.i, align 8
  br label %if.end296.i.i

if.end296.i.i:                                    ; preds = %if.then292.i.i, %ident_done.i.i.if.end296.i.i_crit_edge
  %224 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %224)
  %225 = load i32, ptr %options.i117.i, align 8
  %and298.i.i = and i32 %225, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and298.i.i)
  %tobool299.not.i.i = icmp eq i32 %and298.i.i, 0
  br i1 %tobool299.not.i.i, label %if.else332.i.i, label %if.then300.i.i

if.then300.i.i:                                   ; preds = %if.end296.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool302.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool302.not.i.i, label %if.then300.i.i.if.end324.i.i_crit_edge, label %do.end318.i.i, !prof !379

if.then300.i.i.if.end324.i.i_crit_edge:           ; preds = %if.then300.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end324.i.i

do.end318.i.i:                                    ; preds = %if.then300.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5123, i32 noundef 9, ptr noundef null) #14
  br label %if.end324.i.i

if.end324.i.i:                                    ; preds = %do.end318.i.i, %if.then300.i.i.if.end324.i.i_crit_edge
  call fastcc void @nand_set_defaults(ptr noundef %chip) #14
  br label %if.end364.i.i

if.else332.i.i:                                   ; preds = %if.end296.i.i
  %and334.i.i = and i32 %225, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i.i, i32 %and334.i.i)
  %cmp335.not.i.i = icmp eq i32 %and.i.i, %and334.i.i
  br i1 %cmp335.not.i.i, label %if.else332.i.i.if.end364.i.i_crit_edge, label %do.end340.i.i

if.else332.i.i.if.end364.i.i_crit_edge:           ; preds = %if.else332.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end364.i.i

do.end340.i.i:                                    ; preds = %if.else332.i.i
  %call344.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, i32 noundef %conv13.i.i, i32 noundef %conv17.i.i) #19
  %tobool.not.i635.i.i = icmp eq ptr %call31.i.i, null
  br i1 %tobool.not.i635.i.i, label %do.end340.i.i.nand_manufacturer_name.exit.i.i_crit_edge, label %cond.true.i636.i.i

do.end340.i.i.nand_manufacturer_name.exit.i.i_crit_edge: ; preds = %do.end340.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_name.exit.i.i

cond.true.i636.i.i:                               ; preds = %do.end340.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %name.i.i.i = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %call31.i.i, i32 0, i32 1
  %226 = ptrtoint ptr %name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %name.i.i.i, align 4
  br label %nand_manufacturer_name.exit.i.i

nand_manufacturer_name.exit.i.i:                  ; preds = %cond.true.i636.i.i, %do.end340.i.i.nand_manufacturer_name.exit.i.i_crit_edge
  %cond.i.i.i = phi ptr [ %227, %cond.true.i636.i.i ], [ @.str.101, %do.end340.i.i.nand_manufacturer_name.exit.i.i_crit_edge ]
  %228 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %name.i, align 8
  %call351.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, ptr noundef %cond.i.i.i, ptr noundef %229) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool356.not.i.i = icmp eq i32 %and.i.i, 0
  %cond357.i.i = select i1 %tobool356.not.i.i, i32 8, i32 16
  %230 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %230)
  %231 = load i32, ptr %options.i117.i, align 8
  %and359.i.i = and i32 %231, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and359.i.i)
  %tobool360.not.i.i = icmp eq i32 %and359.i.i, 0
  %cond361.i.i = select i1 %tobool360.not.i.i, i32 8, i32 16
  %call362.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.90, i32 noundef %cond357.i.i, i32 noundef %cond361.i.i) #19
  %parameters429.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  %232 = ptrtoint ptr %parameters429.i.i to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %parameters429.i.i, align 4
  call void @kfree(ptr noundef %233) #14
  br label %if.then18.i

if.end364.i.i:                                    ; preds = %if.else332.i.i.if.end364.i.i_crit_edge, %if.end324.i.i
  %writesize.i637.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %234 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %234)
  %235 = load i32, ptr %writesize.i637.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %235)
  %cmp.i638.i.i = icmp ugt i32 %235, 512
  br i1 %cmp.i638.i.i, label %if.end364.i.i.nand_decode_bbm_options.exit.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end364.i.i.nand_decode_bbm_options.exit.i.i_crit_edge: ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_decode_bbm_options.exit.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end364.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %236 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %236)
  %237 = load i32, ptr %options.i117.i, align 8
  %and.i.i.i = and i32 %237, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i640.i.i = icmp eq i32 %and.i.i.i, 0
  %spec.select.i641.i.i = select i1 %tobool.not.i640.i.i, i32 5, i32 0
  br label %nand_decode_bbm_options.exit.i.i

nand_decode_bbm_options.exit.i.i:                 ; preds = %lor.lhs.false.i.i.i, %if.end364.i.i.nand_decode_bbm_options.exit.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 0, %if.end364.i.i.nand_decode_bbm_options.exit.i.i_crit_edge ], [ %spec.select.i641.i.i, %lor.lhs.false.i.i.i ]
  %badblockpos1.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 11
  %238 = ptrtoint ptr %badblockpos1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %238)
  store i32 %.sink.i.i.i, ptr %badblockpos1.i.i.i, align 4
  %239 = call i32 @llvm.cttz.i32(i32 %235, i1 true) #14, !range !381
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %235)
  %iszero.i.i = icmp eq i32 %235, 0
  %sub365.i.i = select i1 %iszero.i.i, i32 -1, i32 %239
  %page_shift.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %240 = ptrtoint ptr %page_shift.i.i to i32
  call void @__asan_store4_noabort(i32 %240)
  store i32 %sub365.i.i, ptr %page_shift.i.i, align 4
  %241 = ptrtoint ptr %luns_per_target.i.i to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %luns_per_target.i.i, align 4
  %conv.i642.i.i = zext i32 %242 to i64
  %eraseblocks_per_lun.i643.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 4
  %243 = ptrtoint ptr %eraseblocks_per_lun.i643.i.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %eraseblocks_per_lun.i643.i.i, align 8
  %conv2.i.i.i = zext i32 %244 to i64
  %mul.i644.i.i = mul nuw i64 %conv2.i.i.i, %conv.i642.i.i
  %pages_per_eraseblock.i645.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %245 = ptrtoint ptr %pages_per_eraseblock.i645.i.i to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %pages_per_eraseblock.i645.i.i, align 4
  %conv4.i.i.i = zext i32 %246 to i64
  %mul5.i.i.i = mul i64 %mul.i644.i.i, %conv4.i.i.i
  %pagesize.i646.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %247 = ptrtoint ptr %pagesize.i646.i.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load i32, ptr %pagesize.i646.i.i, align 4
  %conv7.i.i.i = zext i32 %248 to i64
  %mul8.i.i.i = mul i64 %mul5.i.i.i, %conv7.i.i.i
  %sh_prom369.i.i = zext i32 %sub365.i.i to i64
  %shr370.i.i = lshr i64 %mul8.i.i.i, %sh_prom369.i.i
  %249 = trunc i64 %shr370.i.i to i32
  %conv372.i.i = add i32 %249, -1
  %pagemask.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %250 = ptrtoint ptr %pagemask.i.i to i32
  call void @__asan_store4_noabort(i32 %250)
  store i32 %conv372.i.i, ptr %pagemask.i.i, align 8
  %erasesize.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %251 = ptrtoint ptr %erasesize.i.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %erasesize.i.i, align 8
  %253 = call i32 @llvm.cttz.i32(i32 %252, i1 true) #14, !range !381
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %252)
  %iszero373.i.i = icmp eq i32 %252, 0
  %sub375.i.i = select i1 %iszero373.i.i, i32 -1, i32 %253
  %phys_erase_shift.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 18
  %254 = ptrtoint ptr %phys_erase_shift.i.i to i32
  call void @__asan_store4_noabort(i32 %254)
  store i32 %sub375.i.i, ptr %phys_erase_shift.i.i, align 8
  %bbt_erase_shift.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 9
  %255 = ptrtoint ptr %bbt_erase_shift.i.i to i32
  call void @__asan_store4_noabort(i32 %255)
  store i32 %sub375.i.i, ptr %bbt_erase_shift.i.i, align 4
  %and376.i.i = and i64 %mul8.i.i.i, 4294967295
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and376.i.i)
  %tobool377.not.i.i = icmp eq i64 %and376.i.i, 0
  br i1 %tobool377.not.i.i, label %if.else383.i.i, label %if.then378.i.i

if.then378.i.i:                                   ; preds = %nand_decode_bbm_options.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %conv379.i.i = trunc i64 %mul8.i.i.i to i32
  %256 = call i32 @llvm.cttz.i32(i32 %conv379.i.i, i1 true) #14, !range !381
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv379.i.i)
  %iszero380.i.i = icmp eq i32 %conv379.i.i, 0
  %sub382.i.i = select i1 %iszero380.i.i, i32 -1, i32 %256
  br label %if.end391.i.i

if.else383.i.i:                                   ; preds = %nand_decode_bbm_options.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %shr384.i.i = lshr i64 %mul8.i.i.i, 32
  %conv385.i.i = trunc i64 %shr384.i.i to i32
  %257 = call i32 @llvm.cttz.i32(i32 %conv385.i.i, i1 true) #14, !range !381
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv385.i.i)
  %iszero386.i.i = icmp eq i32 %conv385.i.i, 0
  %.op.i.i = or i32 %257, 32
  %add390.i.i = select i1 %iszero386.i.i, i32 31, i32 %.op.i.i
  br label %if.end391.i.i

if.end391.i.i:                                    ; preds = %if.else383.i.i, %if.then378.i.i
  %sub382.sink.i.i = phi i32 [ %add390.i.i, %if.else383.i.i ], [ %sub382.i.i, %if.then378.i.i ]
  %258 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %259 = ptrtoint ptr %258 to i32
  call void @__asan_store4_noabort(i32 %259)
  store i32 %sub382.sink.i.i, ptr %258, align 4
  %sub394.i.i = sub nsw i32 %sub382.sink.i.i, %sub365.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %sub394.i.i)
  %cmp395.i.i = icmp ugt i32 %sub394.i.i, 16
  br i1 %cmp395.i.i, label %if.then397.i.i, label %if.end391.i.i.if.end400.i.i_crit_edge

if.end391.i.i.if.end400.i.i_crit_edge:            ; preds = %if.end391.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end400.i.i

if.then397.i.i:                                   ; preds = %if.end391.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %260 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %options.i117.i, align 8
  %or399.i.i = or i32 %261, 16384
  store i32 %or399.i.i, ptr %options.i117.i, align 8
  br label %if.end400.i.i

if.end400.i.i:                                    ; preds = %if.then397.i.i, %if.end391.i.i.if.end400.i.i_crit_edge
  %badblockbits.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 12
  %262 = ptrtoint ptr %badblockbits.i.i to i32
  call void @__asan_store4_noabort(i32 %262)
  store i32 8, ptr %badblockbits.i.i, align 8
  call void @nand_legacy_adjust_cmdfunc(ptr noundef %chip) #14
  %call407.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.84, i32 noundef %conv13.i.i, i32 noundef %conv17.i.i) #19
  %tobool.not.i647.i.i = icmp eq ptr %call31.i.i, null
  br i1 %tobool.not.i647.i.i, label %if.end400.i.i.nand_manufacturer_name.exit651.i.i_crit_edge, label %cond.true.i649.i.i

if.end400.i.i.nand_manufacturer_name.exit651.i.i_crit_edge: ; preds = %if.end400.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_name.exit651.i.i

cond.true.i649.i.i:                               ; preds = %if.end400.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %name.i648.i.i = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %call31.i.i, i32 0, i32 1
  %263 = ptrtoint ptr %name.i648.i.i to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %name.i648.i.i, align 4
  br label %nand_manufacturer_name.exit651.i.i

nand_manufacturer_name.exit651.i.i:               ; preds = %cond.true.i649.i.i, %if.end400.i.i.nand_manufacturer_name.exit651.i.i_crit_edge
  %cond.i650.i.i = phi ptr [ %264, %cond.true.i649.i.i ], [ @.str.101, %if.end400.i.i.nand_manufacturer_name.exit651.i.i_crit_edge ]
  %parameters413.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  %265 = ptrtoint ptr %parameters413.i.i to i32
  call void @__asan_load4_noabort(i32 %265)
  %266 = load ptr, ptr %parameters413.i.i, align 4
  %call415.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.87, ptr noundef %cond.i650.i.i, ptr noundef %266) #19
  %shr420.i.i = lshr i64 %mul8.i.i.i, 20
  %conv421.i.i = trunc i64 %shr420.i.i to i32
  %267 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load i32, ptr %memorg.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %268)
  %cmp.i653.i.i = icmp eq i32 %268, 0
  br i1 %cmp.i653.i.i, label %do.end.i.i.i, label %nand_manufacturer_name.exit651.i.i.if.end26.i_crit_edge, !prof !378

nand_manufacturer_name.exit651.i.i.if.end26.i_crit_edge: ; preds = %nand_manufacturer_name.exit651.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i

do.end.i.i.i:                                     ; preds = %nand_manufacturer_name.exit651.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 1445, i32 noundef 9, ptr noundef nonnull @.str.102) #14
  br label %if.end26.i

if.then18.i:                                      ; preds = %nand_manufacturer_name.exit.i.i, %if.end79.i.i.if.then18.i_crit_edge, %if.end75.i.i.if.then18.i_crit_edge, %if.end65.i.i.if.then18.i_crit_edge, %if.then56.i.i.if.then18.i_crit_edge, %do.end.i.i, %if.end6.i.i.if.then18.i_crit_edge, %nand_select_target.exit.i.i.if.then18.i_crit_edge, %if.end15.i.if.then18.i_crit_edge
  %retval.0.i123.ph.i = phi i32 [ -12, %if.end79.i.i.if.then18.i_crit_edge ], [ -19, %if.end75.i.i.if.then18.i_crit_edge ], [ %call66.i.i, %if.end65.i.i.if.then18.i_crit_edge ], [ %call57.i.i, %if.then56.i.i.if.then18.i_crit_edge ], [ %call8.i.i, %if.end6.i.i.if.then18.i_crit_edge ], [ %call3.i.i, %nand_select_target.exit.i.i.if.then18.i_crit_edge ], [ %call2.i.i, %if.end15.i.if.then18.i_crit_edge ], [ -22, %nand_manufacturer_name.exit.i.i ], [ -19, %do.end.i.i ]
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %269 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %269)
  %270 = load i32, ptr %options.i, align 8
  %and.i = and i32 %270, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool19.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool19.not.i, label %do.end23.i, label %if.then18.i.if.end25.i_crit_edge

if.then18.i.if.end25.i_crit_edge:                 ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25.i

do.end23.i:                                       ; preds = %if.then18.i
  call void @__sanitizer_cov_trace_pc() #16
  %call24.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65) #19
  br label %if.end25.i

if.end25.i:                                       ; preds = %do.end23.i, %if.then18.i.if.end25.i_crit_edge
  %select_chip.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %271 = ptrtoint ptr %select_chip.i.i to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %select_chip.i.i, align 8
  %tobool.not.i124.i = icmp eq ptr %272, null
  br i1 %tobool.not.i124.i, label %if.end25.i.nand_deselect_target.exit.i_crit_edge, label %if.then.i125.i

if.end25.i.nand_deselect_target.exit.i_crit_edge: ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit.i

if.then.i125.i:                                   ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %272(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit.i

nand_deselect_target.exit.i:                      ; preds = %if.then.i125.i, %if.end25.i.nand_deselect_target.exit.i_crit_edge
  %273 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %273)
  store i32 -1, ptr %cur_cs.i, align 4
  br label %cleanup

if.end26.i:                                       ; preds = %do.end.i.i.i, %nand_manufacturer_name.exit651.i.i.if.end26.i_crit_edge
  %274 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load i32, ptr %memorg.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %275)
  %cmp21.i.i.i = icmp eq i32 %275, 1
  %cond424.i.i = select i1 %cmp21.i.i.i, ptr @.str.99, ptr @.str.100
  %276 = ptrtoint ptr %erasesize.i.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %erasesize.i.i, align 8
  %shr426.i.i = lshr i32 %277, 10
  %278 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %writesize.i637.i.i, align 4
  %oobsize.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %280 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load i32, ptr %oobsize.i.i, align 4
  %call428.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.97, i32 noundef %conv421.i.i, ptr noundef nonnull %cond424.i.i, i32 noundef %shr426.i.i, i32 noundef %279, i32 noundef %281) #19
  %282 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load1_noabort(i32 %282)
  %283 = load i8, ptr %id.i.i, align 8
  %284 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load1_noabort(i32 %284)
  %285 = load i8, ptr %arrayidx7.i.i, align 1
  %286 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool.not.i128.i = icmp eq ptr %287, null
  br i1 %tobool.not.i128.i, label %if.end26.i.nand_deselect_target.exit132.i_crit_edge, label %if.then.i129.i

if.end26.i.nand_deselect_target.exit132.i_crit_edge: ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit132.i

if.then.i129.i:                                   ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %287(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit132.i

nand_deselect_target.exit132.i:                   ; preds = %if.then.i129.i, %if.end26.i.nand_deselect_target.exit132.i_crit_edge
  %288 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %288)
  store i32 -1, ptr %cur_cs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %maxchips)
  %cmp166.i = icmp ugt i32 %maxchips, 1
  br i1 %cmp166.i, label %for.body.lr.ph.i, label %nand_deselect_target.exit132.i.if.end3_crit_edge

nand_deselect_target.exit132.i.if.end3_crit_edge: ; preds = %nand_deselect_target.exit132.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

for.body.lr.ph.i:                                 ; preds = %nand_deselect_target.exit132.i
  %289 = getelementptr inbounds [2 x i8], ptr %id32.i, i32 0, i32 1
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.0167.i = phi i32 [ 1, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %id32.i) #14
  %290 = ptrtoint ptr %id32.i to i32
  call void @__asan_store1_noabort(i32 %290)
  store i8 -1, ptr %id32.i, align 1, !annotation !380
  %291 = ptrtoint ptr %289 to i32
  call void @__asan_store1_noabort(i32 %291)
  store i8 -1, ptr %289, align 1, !annotation !380
  %call33.i = call i32 @nand_reset(ptr noundef %chip, i32 noundef %i.0167.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33.i)
  %tobool34.not.i = icmp eq i32 %call33.i, 0
  br i1 %tobool34.not.i, label %if.end36.i, label %for.body.i.cleanup.thread.i_crit_edge

for.body.i.cleanup.thread.i_crit_edge:            ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i

if.end36.i:                                       ; preds = %for.body.i
  %292 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_load4_noabort(i32 %292)
  %293 = load i32, ptr %ntargets.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %293, i32 %i.0167.i)
  %cmp.i.i = icmp ult i32 %293, %i.0167.i
  br i1 %cmp.i.i, label %do.end.i133.i, label %if.end21.critedge.i.i, !prof !378

do.end.i133.i:                                    ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit.i

if.end21.critedge.i.i:                            ; preds = %if.end36.i
  %294 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %294)
  store i32 %i.0167.i, ptr %cur_cs.i, align 4
  %295 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool22.not.i.i = icmp eq ptr %296, null
  br i1 %tobool22.not.i.i, label %if.end21.critedge.i.i.nand_select_target.exit.i_crit_edge, label %if.then23.i.i

if.end21.critedge.i.i.nand_select_target.exit.i_crit_edge: ; preds = %if.end21.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit.i

if.then23.i.i:                                    ; preds = %if.end21.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %296(ptr noundef %chip, i32 noundef %i.0167.i) #14
  br label %nand_select_target.exit.i

nand_select_target.exit.i:                        ; preds = %if.then23.i.i, %if.end21.critedge.i.i.nand_select_target.exit.i_crit_edge, %do.end.i133.i
  %call37.i = call i32 @nand_readid_op(ptr noundef %chip, i8 noundef zeroext 0, ptr noundef nonnull %id32.i, i32 noundef 2) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37.i)
  %tobool38.not.i = icmp eq i32 %call37.i, 0
  br i1 %tobool38.not.i, label %if.end40.i, label %nand_select_target.exit.i.cleanup.thread.i_crit_edge

nand_select_target.exit.i.cleanup.thread.i_crit_edge: ; preds = %nand_select_target.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i

if.end40.i:                                       ; preds = %nand_select_target.exit.i
  %297 = ptrtoint ptr %id32.i to i32
  call void @__asan_load1_noabort(i32 %297)
  %298 = load i8, ptr %id32.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %283, i8 %298)
  %cmp43.not.i = icmp eq i8 %283, %298
  br i1 %cmp43.not.i, label %lor.lhs.false.i, label %if.end40.i.if.then49.i_crit_edge

if.end40.i.if.then49.i_crit_edge:                 ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49.i

lor.lhs.false.i:                                  ; preds = %if.end40.i
  %299 = ptrtoint ptr %289 to i32
  call void @__asan_load1_noabort(i32 %299)
  %300 = load i8, ptr %289, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %285, i8 %300)
  %cmp47.not.i = icmp eq i8 %285, %300
  br i1 %cmp47.not.i, label %if.end50.i, label %lor.lhs.false.i.if.then49.i_crit_edge

lor.lhs.false.i.if.then49.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then49.i

if.then49.i:                                      ; preds = %lor.lhs.false.i.if.then49.i_crit_edge, %if.end40.i.if.then49.i_crit_edge
  %301 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %301)
  %302 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool.not.i137.i = icmp eq ptr %302, null
  br i1 %tobool.not.i137.i, label %if.then49.i.nand_deselect_target.exit141.i_crit_edge, label %if.then.i138.i

if.then49.i.nand_deselect_target.exit141.i_crit_edge: ; preds = %if.then49.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit141.i

if.then.i138.i:                                   ; preds = %if.then49.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %302(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit141.i

nand_deselect_target.exit141.i:                   ; preds = %if.then.i138.i, %if.then49.i.nand_deselect_target.exit141.i_crit_edge
  %303 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %303)
  store i32 -1, ptr %cur_cs.i, align 4
  br label %cleanup.thread.i

if.end50.i:                                       ; preds = %lor.lhs.false.i
  %304 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool.not.i143.i = icmp eq ptr %305, null
  br i1 %tobool.not.i143.i, label %if.end50.i.for.inc.i_crit_edge, label %if.then.i144.i

if.end50.i.for.inc.i_crit_edge:                   ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then.i144.i:                                   ; preds = %if.end50.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %305(ptr noundef %chip, i32 noundef -1) #14
  br label %for.inc.i

cleanup.thread.i:                                 ; preds = %nand_deselect_target.exit141.i, %nand_select_target.exit.i.cleanup.thread.i_crit_edge, %for.body.i.cleanup.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id32.i) #14
  br label %for.end.i

for.inc.i:                                        ; preds = %if.then.i144.i, %if.end50.i.for.inc.i_crit_edge
  %306 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %306)
  store i32 -1, ptr %cur_cs.i, align 4
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id32.i) #14
  %inc.i = add nuw i32 %i.0167.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %maxchips
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %cleanup.thread.i
  %i.0161.i = phi i32 [ %i.0167.i, %cleanup.thread.i ], [ %maxchips, %for.inc.i.for.end.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %i.0161.i)
  %cmp51.i = icmp ugt i32 %i.0161.i, 1
  br i1 %cmp51.i, label %do.end56.i, label %for.end.i.if.end3_crit_edge

for.end.i.if.end3_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

do.end56.i:                                       ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %call58.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.68, i32 noundef %i.0161.i) #19
  br label %if.end3

if.end3:                                          ; preds = %do.end56.i, %for.end.i.if.end3_crit_edge, %nand_deselect_target.exit132.i.if.end3_crit_edge
  %i.0161175.i = phi i32 [ %i.0161.i, %do.end56.i ], [ %i.0161.i, %for.end.i.if.end3_crit_edge ], [ 1, %nand_deselect_target.exit132.i.if.end3_crit_edge ]
  %307 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_store4_noabort(i32 %307)
  store i32 %i.0161175.i, ptr %ntargets.i, align 4
  %conv61.i = zext i32 %i.0161175.i to i64
  %308 = ptrtoint ptr %luns_per_target.i.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %luns_per_target.i.i, align 4
  %conv.i.i = zext i32 %309 to i64
  %310 = ptrtoint ptr %eraseblocks_per_lun.i643.i.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load i32, ptr %eraseblocks_per_lun.i643.i.i, align 8
  %conv2.i.i = zext i32 %311 to i64
  %312 = ptrtoint ptr %pages_per_eraseblock.i645.i.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load i32, ptr %pages_per_eraseblock.i645.i.i, align 4
  %conv4.i.i = zext i32 %313 to i64
  %314 = ptrtoint ptr %pagesize.i646.i.i to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %pagesize.i646.i.i, align 4
  %conv7.i.i = zext i32 %315 to i64
  %mul.i150.i = mul nuw i64 %conv.i.i, %conv61.i
  %mul5.i.i = mul i64 %mul.i150.i, %conv2.i.i
  %mul8.i.i = mul i64 %mul5.i.i, %conv4.i.i
  %mul.i = mul i64 %mul8.i.i, %conv7.i.i
  %size.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 2
  %316 = ptrtoint ptr %size.i to i32
  call void @__asan_store8_noabort(i32 %316)
  store i64 %mul.i, ptr %size.i, align 8
  %317 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %controller.i.i, align 4
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %318, i32 0, i32 1
  %319 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %319)
  %320 = load ptr, ptr %ops.i, align 4
  %tobool.not.i = icmp eq ptr %320, null
  br i1 %tobool.not.i, label %if.end3.if.end7_crit_edge, label %land.lhs.true.i21

if.end3.if.end7_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

land.lhs.true.i21:                                ; preds = %if.end3
  %321 = ptrtoint ptr %320 to i32
  call void @__asan_load4_noabort(i32 %321)
  %322 = load ptr, ptr %320, align 4
  %tobool3.not.i = icmp eq ptr %322, null
  br i1 %tobool3.not.i, label %land.lhs.true.i21.if.end7_crit_edge, label %nand_attach.exit

land.lhs.true.i21.if.end7_crit_edge:              ; preds = %land.lhs.true.i21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

nand_attach.exit:                                 ; preds = %land.lhs.true.i21
  %call.i = call i32 %322(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool5.not = icmp eq i32 %call.i, 0
  br i1 %tobool5.not, label %nand_attach.exit.if.end7_crit_edge, label %nand_attach.exit.cleanup_ident_crit_edge

nand_attach.exit.cleanup_ident_crit_edge:         ; preds = %nand_attach.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_ident

nand_attach.exit.if.end7_crit_edge:               ; preds = %nand_attach.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.end7:                                          ; preds = %nand_attach.exit.if.end7_crit_edge, %land.lhs.true.i21.if.end7_crit_edge, %if.end3.if.end7_crit_edge
  %ecc1.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33
  %bbt_options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 10
  %323 = ptrtoint ptr %bbt_options.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %bbt_options.i, align 8
  %325 = and i32 %324, 655360
  call void @__sanitizer_cov_trace_const_cmp4(i32 524288, i32 %325)
  %326 = icmp eq i32 %325, 524288
  br i1 %326, label %do.end.i, label %if.end8.i.i, !prof !378

do.end.i:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6065, i32 noundef 9, ptr noundef null) #14
  br label %detach_chip

if.end8.i.i:                                      ; preds = %if.end7
  %327 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %oobsize.i.i, align 4
  %329 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %329)
  %330 = load i32, ptr %writesize.i637.i.i, align 4
  %add.i = add i32 %328, %330
  %call9.i.i = call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3264) #17
  %data_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %331 = ptrtoint ptr %data_buf.i to i32
  call void @__asan_store4_noabort(i32 %331)
  store ptr %call9.i.i, ptr %data_buf.i, align 8
  %tobool30.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool30.not.i, label %if.end8.i.i.detach_chip_crit_edge, label %if.end32.i

if.end8.i.i.detach_chip_crit_edge:                ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %detach_chip

if.end32.i:                                       ; preds = %if.end8.i.i
  %332 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %332)
  store i32 0, ptr %cur_cs.i, align 4
  %333 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %333)
  %334 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool22.not.i.i33 = icmp eq ptr %334, null
  br i1 %tobool22.not.i.i33, label %if.end32.i.nand_select_target.exit.i37_crit_edge, label %if.then23.i.i34

if.end32.i.nand_select_target.exit.i37_crit_edge: ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit.i37

if.then23.i.i34:                                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %334(ptr noundef %chip, i32 noundef 0) #14
  br label %nand_select_target.exit.i37

nand_select_target.exit.i37:                      ; preds = %if.then23.i.i34, %if.end32.i.nand_select_target.exit.i37_crit_edge
  %335 = ptrtoint ptr %manufacturer.i.i to i32
  call void @__asan_load4_noabort(i32 %335)
  %336 = load ptr, ptr %manufacturer.i.i, align 8
  %tobool.not.i.i36 = icmp eq ptr %336, null
  br i1 %tobool.not.i.i36, label %nand_select_target.exit.i37.nand_manufacturer_init.exit.i_crit_edge, label %lor.lhs.false.i.i39

nand_select_target.exit.i37.nand_manufacturer_init.exit.i_crit_edge: ; preds = %nand_select_target.exit.i37
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_init.exit.i

lor.lhs.false.i.i39:                              ; preds = %nand_select_target.exit.i37
  %ops.i.i = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %336, i32 0, i32 2
  %337 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %337)
  %338 = load ptr, ptr %ops.i.i, align 4
  %tobool3.not.i.i38 = icmp eq ptr %338, null
  br i1 %tobool3.not.i.i38, label %lor.lhs.false.i.i39.nand_manufacturer_init.exit.i_crit_edge, label %lor.lhs.false4.i.i

lor.lhs.false.i.i39.nand_manufacturer_init.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i39
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_init.exit.i

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i39
  %init.i.i = getelementptr inbounds %struct.nand_manufacturer_ops, ptr %338, i32 0, i32 1
  %339 = ptrtoint ptr %init.i.i to i32
  call void @__asan_load4_noabort(i32 %339)
  %340 = load ptr, ptr %init.i.i, align 4
  %tobool8.not.i.i = icmp eq ptr %340, null
  br i1 %tobool8.not.i.i, label %lor.lhs.false4.i.i.nand_manufacturer_init.exit.i_crit_edge, label %if.end.i642.i

lor.lhs.false4.i.i.nand_manufacturer_init.exit.i_crit_edge: ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_init.exit.i

if.end.i642.i:                                    ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i.i = call i32 %340(ptr noundef %chip) #14
  br label %nand_manufacturer_init.exit.i

nand_manufacturer_init.exit.i:                    ; preds = %if.end.i642.i, %lor.lhs.false4.i.i.nand_manufacturer_init.exit.i_crit_edge, %lor.lhs.false.i.i39.nand_manufacturer_init.exit.i_crit_edge, %nand_select_target.exit.i37.nand_manufacturer_init.exit.i_crit_edge
  %retval.0.i.i40 = phi i32 [ %call.i.i, %if.end.i642.i ], [ 0, %lor.lhs.false4.i.i.nand_manufacturer_init.exit.i_crit_edge ], [ 0, %lor.lhs.false.i.i39.nand_manufacturer_init.exit.i_crit_edge ], [ 0, %nand_select_target.exit.i37.nand_manufacturer_init.exit.i_crit_edge ]
  %341 = ptrtoint ptr %select_chip.i.i.i to i32
  call void @__asan_load4_noabort(i32 %341)
  %342 = load ptr, ptr %select_chip.i.i.i, align 8
  %tobool.not.i644.i = icmp eq ptr %342, null
  br i1 %tobool.not.i644.i, label %nand_manufacturer_init.exit.i.nand_deselect_target.exit.i42_crit_edge, label %if.then.i645.i

nand_manufacturer_init.exit.i.nand_deselect_target.exit.i42_crit_edge: ; preds = %nand_manufacturer_init.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit.i42

if.then.i645.i:                                   ; preds = %nand_manufacturer_init.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %342(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit.i42

nand_deselect_target.exit.i42:                    ; preds = %if.then.i645.i, %nand_manufacturer_init.exit.i.nand_deselect_target.exit.i42_crit_edge
  %343 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %343)
  store i32 -1, ptr %cur_cs.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i40)
  %tobool34.not.i41 = icmp eq i32 %retval.0.i.i40, 0
  br i1 %tobool34.not.i41, label %if.end36.i43, label %nand_deselect_target.exit.i42.err_free_buf.i_crit_edge

nand_deselect_target.exit.i42.err_free_buf.i_crit_edge: ; preds = %nand_deselect_target.exit.i42
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_buf.i

if.end36.i43:                                     ; preds = %nand_deselect_target.exit.i42
  %344 = ptrtoint ptr %data_buf.i to i32
  call void @__asan_load4_noabort(i32 %344)
  %345 = load ptr, ptr %data_buf.i, align 8
  %346 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %346)
  %347 = load i32, ptr %writesize.i637.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %345, i32 %347
  %oob_poi.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %348 = ptrtoint ptr %oob_poi.i to i32
  call void @__asan_store4_noabort(i32 %348)
  store ptr %add.ptr.i, ptr %oob_poi.i, align 4
  %ooblayout.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 15
  %349 = ptrtoint ptr %ooblayout.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load ptr, ptr %ooblayout.i, align 8
  %tobool39.not.i = icmp eq ptr %350, null
  br i1 %tobool39.not.i, label %land.lhs.true.i44, label %if.end36.i43.if.end85.i_crit_edge

if.end36.i43.if.end85.i_crit_edge:                ; preds = %if.end36.i43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85.i

land.lhs.true.i44:                                ; preds = %if.end36.i43
  %351 = ptrtoint ptr %ecc1.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load i32, ptr %ecc1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %352)
  %cmp.i = icmp eq i32 %352, 2
  br i1 %cmp.i, label %land.lhs.true40.i, label %land.lhs.true.i44.if.then48.i_crit_edge

land.lhs.true.i44.if.then48.i_crit_edge:          ; preds = %land.lhs.true.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48.i

land.lhs.true40.i:                                ; preds = %land.lhs.true.i44
  %algo.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 2
  %353 = ptrtoint ptr %algo.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %algo.i, align 4
  %.off = add i32 %354, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %land.lhs.true40.i.if.end85.i_crit_edge, label %land.lhs.true40.i.if.then48.i_crit_edge

land.lhs.true40.i.if.then48.i_crit_edge:          ; preds = %land.lhs.true40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then48.i

land.lhs.true40.i.if.end85.i_crit_edge:           ; preds = %land.lhs.true40.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85.i

if.then48.i:                                      ; preds = %land.lhs.true40.i.if.then48.i_crit_edge, %land.lhs.true.i44.if.then48.i_crit_edge
  %355 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load i32, ptr %oobsize.i.i, align 4
  %357 = zext i32 %356 to i64
  call void @__sanitizer_cov_trace_switch(i64 %357, ptr @__sancov_gen_cov_switch_values.142)
  switch i32 %356, label %sw.default.i [
    i32 8, label %if.then48.i.sw.bb.i_crit_edge
    i32 16, label %if.then48.i.sw.bb.i_crit_edge123
    i32 64, label %if.then48.i.sw.bb51.i_crit_edge
    i32 128, label %if.then48.i.sw.bb51.i_crit_edge124
  ]

if.then48.i.sw.bb51.i_crit_edge124:               ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb51.i

if.then48.i.sw.bb51.i_crit_edge:                  ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb51.i

if.then48.i.sw.bb.i_crit_edge123:                 ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.then48.i.sw.bb.i_crit_edge:                    ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.then48.i.sw.bb.i_crit_edge, %if.then48.i.sw.bb.i_crit_edge123
  %call50.i = call ptr @nand_get_small_page_ooblayout() #14
  br label %if.end85.sink.split.i

sw.bb51.i:                                        ; preds = %if.then48.i.sw.bb51.i_crit_edge, %if.then48.i.sw.bb51.i_crit_edge124
  %call52.i = call ptr @nand_get_large_page_hamming_ooblayout() #14
  br label %if.end85.sink.split.i

sw.default.i:                                     ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %352)
  %cmp54.i = icmp eq i32 %352, 1
  br i1 %cmp54.i, label %if.then55.i, label %do.end70.i

if.then55.i:                                      ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #16
  %call56.i = call ptr @nand_get_large_page_ooblayout() #14
  br label %if.end85.sink.split.i

do.end70.i:                                       ; preds = %sw.default.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6121, i32 noundef 9, ptr noundef nonnull @.str.103, i32 noundef %356) #14
  br label %err_nand_manuf_cleanup.i

if.end85.sink.split.i:                            ; preds = %if.then55.i, %sw.bb51.i, %sw.bb.i
  %call50.sink.i = phi ptr [ %call50.i, %sw.bb.i ], [ %call52.i, %sw.bb51.i ], [ %call56.i, %if.then55.i ]
  %358 = ptrtoint ptr %ooblayout.i to i32
  call void @__asan_store4_noabort(i32 %358)
  store ptr %call50.sink.i, ptr %ooblayout.i, align 8
  br label %if.end85.i

if.end85.i:                                       ; preds = %if.end85.sink.split.i, %land.lhs.true40.i.if.end85.i_crit_edge, %if.end36.i43.if.end85.i_crit_edge
  %359 = ptrtoint ptr %ecc1.i to i32
  call void @__asan_load4_noabort(i32 %359)
  %360 = load i32, ptr %ecc1.i, align 4
  %361 = zext i32 %360 to i64
  call void @__sanitizer_cov_trace_switch(i64 %361, ptr @__sancov_gen_cov_switch_values.143)
  switch i32 %360, label %do.end204.i [
    i32 3, label %sw.bb87.i
    i32 2, label %if.end85.i.if.end23.i.i_crit_edge
    i32 4, label %sw.bb139.i
    i32 1, label %do.end181.i
  ]

if.end85.i.if.end23.i.i_crit_edge:                ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23.i.i

sw.bb87.i:                                        ; preds = %if.end85.i
  %placement.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 1
  %362 = ptrtoint ptr %placement.i.i to i32
  call void @__asan_load4_noabort(i32 %362)
  %363 = load i32, ptr %placement.i.i, align 4
  %364 = zext i32 %363 to i64
  call void @__sanitizer_cov_trace_switch(i64 %364, ptr @__sancov_gen_cov_switch_values.144)
  switch i32 %363, label %do.end103.i.i [
    i32 0, label %sw.bb87.i.sw.bb.i.i_crit_edge
    i32 1, label %sw.bb87.i.sw.bb.i.i_crit_edge125
    i32 2, label %sw.bb87.i.sw.bb34.i.i_crit_edge
  ]

sw.bb87.i.sw.bb34.i.i_crit_edge:                  ; preds = %sw.bb87.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i

sw.bb87.i.sw.bb.i.i_crit_edge125:                 ; preds = %sw.bb87.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i.i

sw.bb87.i.sw.bb.i.i_crit_edge:                    ; preds = %sw.bb87.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i.i

sw.bb.i.i:                                        ; preds = %sw.bb87.i.sw.bb.i.i_crit_edge, %sw.bb87.i.sw.bb.i.i_crit_edge125
  %read_page.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %365 = ptrtoint ptr %read_page.i.i to i32
  call void @__asan_load4_noabort(i32 %365)
  %366 = load ptr, ptr %read_page.i.i, align 4
  %tobool.not.i650.i = icmp eq ptr %366, null
  br i1 %tobool.not.i650.i, label %if.then.i651.i, label %sw.bb.i.i.if.end.i653.i_crit_edge

sw.bb.i.i.if.end.i653.i_crit_edge:                ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i653.i

if.then.i651.i:                                   ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %367 = ptrtoint ptr %read_page.i.i to i32
  call void @__asan_store4_noabort(i32 %367)
  store ptr @nand_read_page_hwecc, ptr %read_page.i.i, align 4
  br label %if.end.i653.i

if.end.i653.i:                                    ; preds = %if.then.i651.i, %sw.bb.i.i.if.end.i653.i_crit_edge
  %write_page.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %368 = ptrtoint ptr %write_page.i.i to i32
  call void @__asan_load4_noabort(i32 %368)
  %369 = load ptr, ptr %write_page.i.i, align 4
  %tobool3.not.i652.i = icmp eq ptr %369, null
  br i1 %tobool3.not.i652.i, label %if.then4.i.i45, label %if.end.i653.i.if.end6.i.i46_crit_edge

if.end.i653.i.if.end6.i.i46_crit_edge:            ; preds = %if.end.i653.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i.i46

if.then4.i.i45:                                   ; preds = %if.end.i653.i
  call void @__sanitizer_cov_trace_pc() #16
  %370 = ptrtoint ptr %write_page.i.i to i32
  call void @__asan_store4_noabort(i32 %370)
  store ptr @nand_write_page_hwecc, ptr %write_page.i.i, align 4
  br label %if.end6.i.i46

if.end6.i.i46:                                    ; preds = %if.then4.i.i45, %if.end.i653.i.if.end6.i.i46_crit_edge
  %read_page_raw.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %371 = ptrtoint ptr %read_page_raw.i.i to i32
  call void @__asan_load4_noabort(i32 %371)
  %372 = load ptr, ptr %read_page_raw.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %372, null
  br i1 %tobool7.not.i.i, label %if.then8.i.i, label %if.end6.i.i46.if.end10.i.i47_crit_edge

if.end6.i.i46.if.end10.i.i47_crit_edge:           ; preds = %if.end6.i.i46
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i.i47

if.then8.i.i:                                     ; preds = %if.end6.i.i46
  call void @__sanitizer_cov_trace_pc() #16
  %373 = ptrtoint ptr %read_page_raw.i.i to i32
  call void @__asan_store4_noabort(i32 %373)
  store ptr @nand_read_page_raw, ptr %read_page_raw.i.i, align 4
  br label %if.end10.i.i47

if.end10.i.i47:                                   ; preds = %if.then8.i.i, %if.end6.i.i46.if.end10.i.i47_crit_edge
  %write_page_raw.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %374 = ptrtoint ptr %write_page_raw.i.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load ptr, ptr %write_page_raw.i.i, align 4
  %tobool11.not.i.i = icmp eq ptr %375, null
  br i1 %tobool11.not.i.i, label %if.then12.i.i48, label %if.end10.i.i47.if.end14.i.i49_crit_edge

if.end10.i.i47.if.end14.i.i49_crit_edge:          ; preds = %if.end10.i.i47
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14.i.i49

if.then12.i.i48:                                  ; preds = %if.end10.i.i47
  call void @__sanitizer_cov_trace_pc() #16
  %376 = ptrtoint ptr %write_page_raw.i.i to i32
  call void @__asan_store4_noabort(i32 %376)
  store ptr @nand_write_page_raw, ptr %write_page_raw.i.i, align 4
  br label %if.end14.i.i49

if.end14.i.i49:                                   ; preds = %if.then12.i.i48, %if.end10.i.i47.if.end14.i.i49_crit_edge
  %read_oob.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %377 = ptrtoint ptr %read_oob.i.i to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load ptr, ptr %read_oob.i.i, align 4
  %tobool15.not.i.i = icmp eq ptr %378, null
  br i1 %tobool15.not.i.i, label %if.then16.i.i, label %if.end14.i.i49.if.end18.i.i_crit_edge

if.end14.i.i49.if.end18.i.i_crit_edge:            ; preds = %if.end14.i.i49
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18.i.i

if.then16.i.i:                                    ; preds = %if.end14.i.i49
  call void @__sanitizer_cov_trace_pc() #16
  %379 = ptrtoint ptr %read_oob.i.i to i32
  call void @__asan_store4_noabort(i32 %379)
  store ptr @nand_read_oob_std, ptr %read_oob.i.i, align 4
  br label %if.end18.i.i

if.end18.i.i:                                     ; preds = %if.then16.i.i, %if.end14.i.i49.if.end18.i.i_crit_edge
  %write_oob.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %380 = ptrtoint ptr %write_oob.i.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load ptr, ptr %write_oob.i.i, align 4
  %tobool19.not.i.i = icmp eq ptr %381, null
  br i1 %tobool19.not.i.i, label %if.then20.i.i, label %if.end18.i.i.if.end22.i.i_crit_edge

if.end18.i.i.if.end22.i.i_crit_edge:              ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i.i

if.then20.i.i:                                    ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %382 = ptrtoint ptr %write_oob.i.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store ptr @nand_write_oob_std, ptr %write_oob.i.i, align 4
  br label %if.end22.i.i

if.end22.i.i:                                     ; preds = %if.then20.i.i, %if.end18.i.i.if.end22.i.i_crit_edge
  %read_subpage.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 19
  %383 = ptrtoint ptr %read_subpage.i.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load ptr, ptr %read_subpage.i.i, align 4
  %tobool23.not.i.i = icmp eq ptr %384, null
  br i1 %tobool23.not.i.i, label %if.then24.i.i, label %if.end22.i.i.if.end26.i.i_crit_edge

if.end22.i.i.if.end26.i.i_crit_edge:              ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26.i.i

if.then24.i.i:                                    ; preds = %if.end22.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %385 = ptrtoint ptr %read_subpage.i.i to i32
  call void @__asan_store4_noabort(i32 %385)
  store ptr @nand_read_subpage, ptr %read_subpage.i.i, align 4
  br label %if.end26.i.i

if.end26.i.i:                                     ; preds = %if.then24.i.i, %if.end22.i.i.if.end26.i.i_crit_edge
  %write_subpage.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 20
  %386 = ptrtoint ptr %write_subpage.i.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load ptr, ptr %write_subpage.i.i, align 4
  %tobool27.not.i.i = icmp eq ptr %387, null
  br i1 %tobool27.not.i.i, label %land.lhs.true.i.i, label %if.end26.i.i.sw.bb34.i.i_crit_edge

if.end26.i.i.sw.bb34.i.i_crit_edge:               ; preds = %if.end26.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i

land.lhs.true.i.i:                                ; preds = %if.end26.i.i
  %hwctl.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  %388 = ptrtoint ptr %hwctl.i.i to i32
  call void @__asan_load4_noabort(i32 %388)
  %389 = load ptr, ptr %hwctl.i.i, align 4
  %tobool28.not.i.i = icmp eq ptr %389, null
  br i1 %tobool28.not.i.i, label %land.lhs.true.i.i.sw.bb34.i.i_crit_edge, label %land.lhs.true29.i.i

land.lhs.true.i.i.sw.bb34.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i

land.lhs.true29.i.i:                              ; preds = %land.lhs.true.i.i
  %calculate.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %390 = ptrtoint ptr %calculate.i.i to i32
  call void @__asan_load4_noabort(i32 %390)
  %391 = load ptr, ptr %calculate.i.i, align 4
  %tobool30.not.i.i = icmp eq ptr %391, null
  br i1 %tobool30.not.i.i, label %land.lhs.true29.i.i.sw.bb34.i.i_crit_edge, label %if.then31.i.i

land.lhs.true29.i.i.sw.bb34.i.i_crit_edge:        ; preds = %land.lhs.true29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb34.i.i

if.then31.i.i:                                    ; preds = %land.lhs.true29.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %392 = ptrtoint ptr %write_subpage.i.i to i32
  call void @__asan_store4_noabort(i32 %392)
  store ptr @nand_write_subpage_hwecc, ptr %write_subpage.i.i, align 4
  br label %sw.bb34.i.i

sw.bb34.i.i:                                      ; preds = %if.then31.i.i, %land.lhs.true29.i.i.sw.bb34.i.i_crit_edge, %land.lhs.true.i.i.sw.bb34.i.i_crit_edge, %if.end26.i.i.sw.bb34.i.i_crit_edge, %sw.bb87.i.sw.bb34.i.i_crit_edge
  %calculate35.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %393 = ptrtoint ptr %calculate35.i.i to i32
  call void @__asan_load4_noabort(i32 %393)
  %394 = load ptr, ptr %calculate35.i.i, align 4
  %tobool36.not.i.i = icmp eq ptr %394, null
  br i1 %tobool36.not.i.i, label %sw.bb34.i.i.land.lhs.true41.i.i_crit_edge, label %lor.lhs.false.i654.i

sw.bb34.i.i.land.lhs.true41.i.i_crit_edge:        ; preds = %sw.bb34.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true41.i.i

lor.lhs.false.i654.i:                             ; preds = %sw.bb34.i.i
  %correct.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %395 = ptrtoint ptr %correct.i.i to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load ptr, ptr %correct.i.i, align 4
  %tobool37.not.i.i = icmp eq ptr %396, null
  br i1 %tobool37.not.i.i, label %lor.lhs.false.i654.i.land.lhs.true41.i.i_crit_edge, label %lor.lhs.false38.i.i

lor.lhs.false.i654.i.land.lhs.true41.i.i_crit_edge: ; preds = %lor.lhs.false.i654.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true41.i.i

lor.lhs.false38.i.i:                              ; preds = %lor.lhs.false.i654.i
  %hwctl39.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  %397 = ptrtoint ptr %hwctl39.i.i to i32
  call void @__asan_load4_noabort(i32 %397)
  %398 = load ptr, ptr %hwctl39.i.i, align 4
  %tobool40.not.i.i = icmp eq ptr %398, null
  br i1 %tobool40.not.i.i, label %lor.lhs.false38.i.i.land.lhs.true41.i.i_crit_edge, label %lor.lhs.false38.i.i.if.end70.i.i_crit_edge

lor.lhs.false38.i.i.if.end70.i.i_crit_edge:       ; preds = %lor.lhs.false38.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70.i.i

lor.lhs.false38.i.i.land.lhs.true41.i.i_crit_edge: ; preds = %lor.lhs.false38.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true41.i.i

land.lhs.true41.i.i:                              ; preds = %lor.lhs.false38.i.i.land.lhs.true41.i.i_crit_edge, %lor.lhs.false.i654.i.land.lhs.true41.i.i_crit_edge, %sw.bb34.i.i.land.lhs.true41.i.i_crit_edge
  %read_page42.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %399 = ptrtoint ptr %read_page42.i.i to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load ptr, ptr %read_page42.i.i, align 4
  %tobool43.not.i.i = icmp eq ptr %400, null
  %cmp.i655.i = icmp eq ptr %400, @nand_read_page_hwecc
  %or.cond.i.i50 = or i1 %tobool43.not.i.i, %cmp.i655.i
  br i1 %or.cond.i.i50, label %land.lhs.true41.i.i.do.end.i.i51_crit_edge, label %lor.lhs.false46.i.i

land.lhs.true41.i.i.do.end.i.i51_crit_edge:       ; preds = %land.lhs.true41.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i51

lor.lhs.false46.i.i:                              ; preds = %land.lhs.true41.i.i
  %write_page47.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %401 = ptrtoint ptr %write_page47.i.i to i32
  call void @__asan_load4_noabort(i32 %401)
  %402 = load ptr, ptr %write_page47.i.i, align 4
  %tobool48.not.i.i = icmp eq ptr %402, null
  %cmp51.i.i = icmp eq ptr %402, @nand_write_page_hwecc
  %or.cond146.i.i = or i1 %tobool48.not.i.i, %cmp51.i.i
  br i1 %or.cond146.i.i, label %lor.lhs.false46.i.i.do.end.i.i51_crit_edge, label %lor.lhs.false46.i.i.if.end70.i.i_crit_edge

lor.lhs.false46.i.i.if.end70.i.i_crit_edge:       ; preds = %lor.lhs.false46.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end70.i.i

lor.lhs.false46.i.i.do.end.i.i51_crit_edge:       ; preds = %lor.lhs.false46.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i.i51

do.end.i.i51:                                     ; preds = %lor.lhs.false46.i.i.do.end.i.i51_crit_edge, %land.lhs.true41.i.i.do.end.i.i51_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5653, i32 noundef 9, ptr noundef nonnull @.str.117) #14
  br label %err_nand_manuf_cleanup.i

if.end70.i.i:                                     ; preds = %lor.lhs.false46.i.i.if.end70.i.i_crit_edge, %lor.lhs.false38.i.i.if.end70.i.i_crit_edge
  %read_page71.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %403 = ptrtoint ptr %read_page71.i.i to i32
  call void @__asan_load4_noabort(i32 %403)
  %404 = load ptr, ptr %read_page71.i.i, align 4
  %tobool72.not.i.i = icmp eq ptr %404, null
  br i1 %tobool72.not.i.i, label %if.then73.i.i, label %if.end70.i.i.if.end75.i.i53_crit_edge

if.end70.i.i.if.end75.i.i53_crit_edge:            ; preds = %if.end70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75.i.i53

if.then73.i.i:                                    ; preds = %if.end70.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %405 = ptrtoint ptr %read_page71.i.i to i32
  call void @__asan_store4_noabort(i32 %405)
  store ptr @nand_read_page_syndrome, ptr %read_page71.i.i, align 4
  br label %if.end75.i.i53

if.end75.i.i53:                                   ; preds = %if.then73.i.i, %if.end70.i.i.if.end75.i.i53_crit_edge
  %write_page76.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %406 = ptrtoint ptr %write_page76.i.i to i32
  call void @__asan_load4_noabort(i32 %406)
  %407 = load ptr, ptr %write_page76.i.i, align 4
  %tobool77.not.i.i52 = icmp eq ptr %407, null
  br i1 %tobool77.not.i.i52, label %if.then78.i.i, label %if.end75.i.i53.if.end80.i.i_crit_edge

if.end75.i.i53.if.end80.i.i_crit_edge:            ; preds = %if.end75.i.i53
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end80.i.i

if.then78.i.i:                                    ; preds = %if.end75.i.i53
  call void @__sanitizer_cov_trace_pc() #16
  %408 = ptrtoint ptr %write_page76.i.i to i32
  call void @__asan_store4_noabort(i32 %408)
  store ptr @nand_write_page_syndrome, ptr %write_page76.i.i, align 4
  br label %if.end80.i.i

if.end80.i.i:                                     ; preds = %if.then78.i.i, %if.end75.i.i53.if.end80.i.i_crit_edge
  %read_page_raw81.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %409 = ptrtoint ptr %read_page_raw81.i.i to i32
  call void @__asan_load4_noabort(i32 %409)
  %410 = load ptr, ptr %read_page_raw81.i.i, align 4
  %tobool82.not.i.i = icmp eq ptr %410, null
  br i1 %tobool82.not.i.i, label %if.then83.i.i, label %if.end80.i.i.if.end85.i.i_crit_edge

if.end80.i.i.if.end85.i.i_crit_edge:              ; preds = %if.end80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end85.i.i

if.then83.i.i:                                    ; preds = %if.end80.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %411 = ptrtoint ptr %read_page_raw81.i.i to i32
  call void @__asan_store4_noabort(i32 %411)
  store ptr @nand_read_page_raw_syndrome, ptr %read_page_raw81.i.i, align 4
  br label %if.end85.i.i

if.end85.i.i:                                     ; preds = %if.then83.i.i, %if.end80.i.i.if.end85.i.i_crit_edge
  %write_page_raw86.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %412 = ptrtoint ptr %write_page_raw86.i.i to i32
  call void @__asan_load4_noabort(i32 %412)
  %413 = load ptr, ptr %write_page_raw86.i.i, align 4
  %tobool87.not.i.i = icmp eq ptr %413, null
  br i1 %tobool87.not.i.i, label %if.then88.i.i, label %if.end85.i.i.if.end90.i.i_crit_edge

if.end85.i.i.if.end90.i.i_crit_edge:              ; preds = %if.end85.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end90.i.i

if.then88.i.i:                                    ; preds = %if.end85.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %414 = ptrtoint ptr %write_page_raw86.i.i to i32
  call void @__asan_store4_noabort(i32 %414)
  store ptr @nand_write_page_raw_syndrome, ptr %write_page_raw86.i.i, align 4
  br label %if.end90.i.i

if.end90.i.i:                                     ; preds = %if.then88.i.i, %if.end85.i.i.if.end90.i.i_crit_edge
  %read_oob91.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %415 = ptrtoint ptr %read_oob91.i.i to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load ptr, ptr %read_oob91.i.i, align 4
  %tobool92.not.i.i = icmp eq ptr %416, null
  br i1 %tobool92.not.i.i, label %if.then93.i.i, label %if.end90.i.i.if.end95.i.i_crit_edge

if.end90.i.i.if.end95.i.i_crit_edge:              ; preds = %if.end90.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end95.i.i

if.then93.i.i:                                    ; preds = %if.end90.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %417 = ptrtoint ptr %read_oob91.i.i to i32
  call void @__asan_store4_noabort(i32 %417)
  store ptr @nand_read_oob_syndrome, ptr %read_oob91.i.i, align 4
  br label %if.end95.i.i

if.end95.i.i:                                     ; preds = %if.then93.i.i, %if.end90.i.i.if.end95.i.i_crit_edge
  %write_oob96.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %418 = ptrtoint ptr %write_oob96.i.i to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load ptr, ptr %write_oob96.i.i, align 4
  %tobool97.not.i.i = icmp eq ptr %419, null
  br i1 %tobool97.not.i.i, label %if.then98.i.i, label %if.end95.i.i.if.end91.i_crit_edge

if.end95.i.i.if.end91.i_crit_edge:                ; preds = %if.end95.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end91.i

if.then98.i.i:                                    ; preds = %if.end95.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %420 = ptrtoint ptr %write_oob96.i.i to i32
  call void @__asan_store4_noabort(i32 %420)
  store ptr @nand_write_oob_syndrome, ptr %write_oob96.i.i, align 4
  br label %if.end91.i

do.end103.i.i:                                    ; preds = %sw.bb87.i
  call void @__sanitizer_cov_trace_pc() #16
  %call.i656.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.118, i32 noundef %363) #19
  br label %err_nand_manuf_cleanup.i

if.end91.i:                                       ; preds = %if.then98.i.i, %if.end95.i.i.if.end91.i_crit_edge
  %421 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load i32, ptr %writesize.i637.i.i, align 4
  %size.i54 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %423 = ptrtoint ptr %size.i54 to i32
  call void @__asan_load4_noabort(i32 %423)
  %424 = load i32, ptr %size.i54, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %422, i32 %424)
  %cmp93.not.i = icmp ult i32 %422, %424
  br i1 %cmp93.not.i, label %do.end127.i, label %if.then94.i

if.then94.i:                                      ; preds = %if.end91.i
  %strength.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %425 = ptrtoint ptr %strength.i to i32
  call void @__asan_load4_noabort(i32 %425)
  %426 = load i32, ptr %strength.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %426)
  %tobool95.not.i = icmp eq i32 %426, 0
  br i1 %tobool95.not.i, label %do.end109.i, label %if.then94.i.sw.epilog219.i_crit_edge

if.then94.i.sw.epilog219.i_crit_edge:             ; preds = %if.then94.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog219.i

do.end109.i:                                      ; preds = %if.then94.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6140, i32 noundef 9, ptr noundef nonnull @.str.104) #14
  br label %err_nand_manuf_cleanup.i

do.end127.i:                                      ; preds = %if.end91.i
  call void @__sanitizer_cov_trace_pc() #16
  %call131.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.105, i32 noundef %424, i32 noundef %422) #19
  %427 = ptrtoint ptr %ecc1.i to i32
  call void @__asan_store4_noabort(i32 %427)
  store i32 2, ptr %ecc1.i, align 4
  %algo133.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 2
  %428 = ptrtoint ptr %algo133.i to i32
  call void @__asan_store4_noabort(i32 %428)
  store i32 1, ptr %algo133.i, align 4
  br label %if.end23.i.i

if.end23.i.i:                                     ; preds = %do.end127.i, %if.end85.i.if.end23.i.i_crit_edge
  %algo.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 2
  %429 = ptrtoint ptr %algo.i.i to i32
  call void @__asan_load4_noabort(i32 %429)
  %430 = load i32, ptr %algo.i.i, align 4
  %431 = zext i32 %430 to i64
  call void @__sanitizer_cov_trace_switch(i64 %431, ptr @__sancov_gen_cov_switch_values.145)
  switch i32 %430, label %do.end136.i.i [
    i32 1, label %sw.bb.i665.i
    i32 2, label %sw.bb66.i.i
  ]

sw.bb.i665.i:                                     ; preds = %if.end23.i.i
  %calculate.i659.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %432 = ptrtoint ptr %calculate.i659.i to i32
  call void @__asan_store4_noabort(i32 %432)
  store ptr @rawnand_sw_hamming_calculate, ptr %calculate.i659.i, align 4
  %correct.i660.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %433 = ptrtoint ptr %correct.i660.i to i32
  call void @__asan_store4_noabort(i32 %433)
  store ptr @rawnand_sw_hamming_correct, ptr %correct.i660.i, align 4
  %read_page.i661.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %434 = ptrtoint ptr %read_page.i661.i to i32
  call void @__asan_store4_noabort(i32 %434)
  store ptr @nand_read_page_swecc, ptr %read_page.i661.i, align 4
  %read_subpage.i662.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 19
  %435 = ptrtoint ptr %read_subpage.i662.i to i32
  call void @__asan_store4_noabort(i32 %435)
  store ptr @nand_read_subpage, ptr %read_subpage.i662.i, align 4
  %write_page.i663.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %436 = ptrtoint ptr %write_page.i663.i to i32
  call void @__asan_store4_noabort(i32 %436)
  store ptr @nand_write_page_swecc, ptr %write_page.i663.i, align 4
  %read_page_raw.i664.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %437 = ptrtoint ptr %read_page_raw.i664.i to i32
  call void @__asan_load4_noabort(i32 %437)
  %438 = load ptr, ptr %read_page_raw.i664.i, align 4
  %tobool24.not.i.i = icmp eq ptr %438, null
  br i1 %tobool24.not.i.i, label %if.then25.i.i, label %sw.bb.i665.i.if.end27.i.i_crit_edge

sw.bb.i665.i.if.end27.i.i_crit_edge:              ; preds = %sw.bb.i665.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27.i.i

if.then25.i.i:                                    ; preds = %sw.bb.i665.i
  call void @__sanitizer_cov_trace_pc() #16
  %439 = ptrtoint ptr %read_page_raw.i664.i to i32
  call void @__asan_store4_noabort(i32 %439)
  store ptr @nand_read_page_raw, ptr %read_page_raw.i664.i, align 4
  br label %if.end27.i.i

if.end27.i.i:                                     ; preds = %if.then25.i.i, %sw.bb.i665.i.if.end27.i.i_crit_edge
  %write_page_raw.i666.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %440 = ptrtoint ptr %write_page_raw.i666.i to i32
  call void @__asan_load4_noabort(i32 %440)
  %441 = load ptr, ptr %write_page_raw.i666.i, align 4
  %tobool28.not.i667.i = icmp eq ptr %441, null
  br i1 %tobool28.not.i667.i, label %if.then29.i.i, label %if.end27.i.i.if.end31.i.i_crit_edge

if.end27.i.i.if.end31.i.i_crit_edge:              ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end31.i.i

if.then29.i.i:                                    ; preds = %if.end27.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %442 = ptrtoint ptr %write_page_raw.i666.i to i32
  call void @__asan_store4_noabort(i32 %442)
  store ptr @nand_write_page_raw, ptr %write_page_raw.i666.i, align 4
  br label %if.end31.i.i

if.end31.i.i:                                     ; preds = %if.then29.i.i, %if.end27.i.i.if.end31.i.i_crit_edge
  %read_oob.i668.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %443 = ptrtoint ptr %read_oob.i668.i to i32
  call void @__asan_store4_noabort(i32 %443)
  store ptr @nand_read_oob_std, ptr %read_oob.i668.i, align 4
  %write_oob.i669.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %444 = ptrtoint ptr %write_oob.i669.i to i32
  call void @__asan_store4_noabort(i32 %444)
  store ptr @nand_write_oob_std, ptr %write_oob.i669.i, align 4
  %size.i.i55 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %445 = ptrtoint ptr %size.i.i55 to i32
  call void @__asan_load4_noabort(i32 %445)
  %446 = load i32, ptr %size.i.i55, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %446)
  %tobool32.not.i.i56 = icmp eq i32 %446, 0
  br i1 %tobool32.not.i.i56, label %if.then33.i.i, label %if.end31.i.i.if.end35.i.i_crit_edge

if.end31.i.i.if.end35.i.i_crit_edge:              ; preds = %if.end31.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35.i.i

if.then33.i.i:                                    ; preds = %if.end31.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %447 = ptrtoint ptr %size.i.i55 to i32
  call void @__asan_store4_noabort(i32 %447)
  store i32 256, ptr %size.i.i55, align 4
  br label %if.end35.i.i

if.end35.i.i:                                     ; preds = %if.then33.i.i, %if.end31.i.i.if.end35.i.i_crit_edge
  %bytes.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %448 = ptrtoint ptr %bytes.i.i to i32
  call void @__asan_store4_noabort(i32 %448)
  store i32 3, ptr %bytes.i.i, align 4
  %strength.i.i57 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %449 = ptrtoint ptr %strength.i.i57 to i32
  call void @__asan_store4_noabort(i32 %449)
  store i32 1, ptr %strength.i.i57, align 4
  %options.i.i58 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %450 = ptrtoint ptr %options.i.i58 to i32
  call void @__asan_load4_noabort(i32 %450)
  %451 = load i32, ptr %options.i.i58, align 4
  %or.i.i59 = or i32 %451, 4
  store i32 %or.i.i59, ptr %options.i.i58, align 4
  %user_conf.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2
  %452 = ptrtoint ptr %user_conf.i.i.i to i32
  call void @__asan_store4_noabort(i32 %452)
  store i32 2, ptr %user_conf.i.i.i, align 4
  %algo.i.i.i60 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 2
  %453 = ptrtoint ptr %algo.i.i.i60 to i32
  call void @__asan_store4_noabort(i32 %453)
  store i32 1, ptr %algo.i.i.i60, align 4
  %strength7.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 3
  %454 = ptrtoint ptr %strength7.i.i.i to i32
  call void @__asan_store4_noabort(i32 %454)
  store i32 1, ptr %strength7.i.i.i, align 4
  %455 = ptrtoint ptr %size.i.i55 to i32
  call void @__asan_load4_noabort(i32 %455)
  %456 = load i32, ptr %size.i.i55, align 8
  %step_size.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 4
  %457 = ptrtoint ptr %step_size.i.i.i to i32
  call void @__asan_store4_noabort(i32 %457)
  store i32 %456, ptr %step_size.i.i.i, align 4
  %call.i.i.i61 = call i32 @nand_ecc_sw_hamming_init_ctx(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i61)
  %tobool.not.i.i670.i = icmp eq i32 %call.i.i.i61, 0
  br i1 %tobool.not.i.i670.i, label %if.end.i.i671.i, label %do.end51.i.i

if.end.i.i671.i:                                  ; preds = %if.end35.i.i
  %458 = ptrtoint ptr %options.i.i58 to i32
  call void @__asan_load4_noabort(i32 %458)
  %459 = load i32, ptr %options.i.i58, align 8
  %and.i.i.i62 = and i32 %459, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i62)
  %tobool13.not.i.i.i = icmp eq i32 %and.i.i.i62, 0
  br i1 %tobool13.not.i.i.i, label %if.end.i.i671.i.rawnand_sw_hamming_init.exit.thread.i.i_crit_edge, label %if.then14.i.i.i

if.end.i.i671.i.rawnand_sw_hamming_init.exit.thread.i.i_crit_edge: ; preds = %if.end.i.i671.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %rawnand_sw_hamming_init.exit.thread.i.i

if.then14.i.i.i:                                  ; preds = %if.end.i.i671.i
  call void @__sanitizer_cov_trace_pc() #16
  %priv.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 3
  %460 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load ptr, ptr %priv.i.i.i, align 4
  %sm_order.i.i.i = getelementptr inbounds %struct.nand_ecc_sw_hamming_conf, ptr %461, i32 0, i32 4
  %462 = ptrtoint ptr %sm_order.i.i.i to i32
  call void @__asan_store4_noabort(i32 %462)
  store i32 1, ptr %sm_order.i.i.i, align 4
  br label %rawnand_sw_hamming_init.exit.thread.i.i

rawnand_sw_hamming_init.exit.thread.i.i:          ; preds = %if.then14.i.i.i, %if.end.i.i671.i.rawnand_sw_hamming_init.exit.thread.i.i_crit_edge
  %step_size18.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 4
  %463 = ptrtoint ptr %step_size18.i.i.i to i32
  call void @__asan_load4_noabort(i32 %463)
  %464 = load i32, ptr %step_size18.i.i.i, align 4
  %465 = ptrtoint ptr %size.i.i55 to i32
  call void @__asan_store4_noabort(i32 %465)
  store i32 %464, ptr %size.i.i55, align 8
  %strength24.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 3
  %466 = ptrtoint ptr %strength24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %466)
  %467 = load i32, ptr %strength24.i.i.i, align 4
  %468 = ptrtoint ptr %strength.i.i57 to i32
  call void @__asan_store4_noabort(i32 %468)
  store i32 %467, ptr %strength.i.i57, align 4
  %total.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 2
  %469 = ptrtoint ptr %total.i.i.i to i32
  call void @__asan_load4_noabort(i32 %469)
  %470 = load i32, ptr %total.i.i.i, align 4
  %total30.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %471 = ptrtoint ptr %total30.i.i.i to i32
  call void @__asan_store4_noabort(i32 %471)
  store i32 %470, ptr %total30.i.i.i, align 8
  %nsteps.i.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 1
  %472 = ptrtoint ptr %nsteps.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %472)
  %473 = load i32, ptr %nsteps.i.i.i.i, align 4
  %steps.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %474 = ptrtoint ptr %steps.i.i.i to i32
  call void @__asan_store4_noabort(i32 %474)
  store i32 %473, ptr %steps.i.i.i, align 4
  %div.i.i.i63 = udiv i32 %470, %473
  %475 = ptrtoint ptr %bytes.i.i to i32
  call void @__asan_store4_noabort(i32 %475)
  store i32 %div.i.i.i63, ptr %bytes.i.i, align 4
  br label %sw.epilog219.i

do.end51.i.i:                                     ; preds = %if.end35.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5713, i32 noundef 9, ptr noundef nonnull @.str.120) #14
  br label %err_nand_manuf_cleanup.i

sw.bb66.i.i:                                      ; preds = %if.end23.i.i
  %calculate67.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %476 = ptrtoint ptr %calculate67.i.i to i32
  call void @__asan_store4_noabort(i32 %476)
  store ptr @rawnand_sw_bch_calculate, ptr %calculate67.i.i, align 4
  %correct68.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %477 = ptrtoint ptr %correct68.i.i to i32
  call void @__asan_store4_noabort(i32 %477)
  store ptr @rawnand_sw_bch_correct, ptr %correct68.i.i, align 4
  %read_page69.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %478 = ptrtoint ptr %read_page69.i.i to i32
  call void @__asan_store4_noabort(i32 %478)
  store ptr @nand_read_page_swecc, ptr %read_page69.i.i, align 4
  %read_subpage70.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 19
  %479 = ptrtoint ptr %read_subpage70.i.i to i32
  call void @__asan_store4_noabort(i32 %479)
  store ptr @nand_read_subpage, ptr %read_subpage70.i.i, align 4
  %write_page71.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %480 = ptrtoint ptr %write_page71.i.i to i32
  call void @__asan_store4_noabort(i32 %480)
  store ptr @nand_write_page_swecc, ptr %write_page71.i.i, align 4
  %read_page_raw72.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %481 = ptrtoint ptr %read_page_raw72.i.i to i32
  call void @__asan_load4_noabort(i32 %481)
  %482 = load ptr, ptr %read_page_raw72.i.i, align 4
  %tobool73.not.i.i = icmp eq ptr %482, null
  br i1 %tobool73.not.i.i, label %if.then74.i.i, label %sw.bb66.i.i.if.end76.i.i_crit_edge

sw.bb66.i.i.if.end76.i.i_crit_edge:               ; preds = %sw.bb66.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end76.i.i

if.then74.i.i:                                    ; preds = %sw.bb66.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %483 = ptrtoint ptr %read_page_raw72.i.i to i32
  call void @__asan_store4_noabort(i32 %483)
  store ptr @nand_read_page_raw, ptr %read_page_raw72.i.i, align 4
  br label %if.end76.i.i

if.end76.i.i:                                     ; preds = %if.then74.i.i, %sw.bb66.i.i.if.end76.i.i_crit_edge
  %write_page_raw77.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %484 = ptrtoint ptr %write_page_raw77.i.i to i32
  call void @__asan_load4_noabort(i32 %484)
  %485 = load ptr, ptr %write_page_raw77.i.i, align 4
  %tobool78.not.i.i = icmp eq ptr %485, null
  br i1 %tobool78.not.i.i, label %if.then79.i.i, label %if.end76.i.i.if.end81.i.i_crit_edge

if.end76.i.i.if.end81.i.i_crit_edge:              ; preds = %if.end76.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end81.i.i

if.then79.i.i:                                    ; preds = %if.end76.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %486 = ptrtoint ptr %write_page_raw77.i.i to i32
  call void @__asan_store4_noabort(i32 %486)
  store ptr @nand_write_page_raw, ptr %write_page_raw77.i.i, align 4
  br label %if.end81.i.i

if.end81.i.i:                                     ; preds = %if.then79.i.i, %if.end76.i.i.if.end81.i.i_crit_edge
  %read_oob82.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %487 = ptrtoint ptr %read_oob82.i.i to i32
  call void @__asan_store4_noabort(i32 %487)
  store ptr @nand_read_oob_std, ptr %read_oob82.i.i, align 4
  %write_oob83.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %488 = ptrtoint ptr %write_oob83.i.i to i32
  call void @__asan_store4_noabort(i32 %488)
  store ptr @nand_write_oob_std, ptr %write_oob83.i.i, align 4
  %flags.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 5
  %489 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %489)
  %490 = load i32, ptr %flags.i.i, align 4
  %and.i.i64 = and i32 %490, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i64)
  %tobool85.not.i.i = icmp eq i32 %and.i.i64, 0
  br i1 %tobool85.not.i.i, label %if.end81.i.i.if.end93.i.i_crit_edge, label %land.lhs.true.i672.i

if.end81.i.i.if.end93.i.i_crit_edge:              ; preds = %if.end81.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end93.i.i

land.lhs.true.i672.i:                             ; preds = %if.end81.i.i
  %491 = ptrtoint ptr %ooblayout.i to i32
  call void @__asan_load4_noabort(i32 %491)
  %492 = load ptr, ptr %ooblayout.i, align 8
  %call86.i.i = call ptr @nand_get_large_page_ooblayout() #14
  %cmp87.not.i.i = icmp eq ptr %492, %call86.i.i
  br i1 %cmp87.not.i.i, label %land.lhs.true.i672.i.if.end93.i.i_crit_edge, label %if.then88.i673.i

land.lhs.true.i672.i.if.end93.i.i_crit_edge:      ; preds = %land.lhs.true.i672.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end93.i.i

if.then88.i673.i:                                 ; preds = %land.lhs.true.i672.i
  call void @__sanitizer_cov_trace_pc() #16
  %493 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %493)
  %494 = load i32, ptr %flags.i.i, align 4
  %and92.i.i = and i32 %494, -2
  store i32 %and92.i.i, ptr %flags.i.i, align 4
  br label %if.end93.i.i

if.end93.i.i:                                     ; preds = %if.then88.i673.i, %land.lhs.true.i672.i.if.end93.i.i_crit_edge, %if.end81.i.i.if.end93.i.i_crit_edge
  %user_conf.i193.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2
  %495 = ptrtoint ptr %user_conf.i193.i.i to i32
  call void @__asan_store4_noabort(i32 %495)
  store i32 2, ptr %user_conf.i193.i.i, align 4
  %algo.i194.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 2
  %496 = ptrtoint ptr %algo.i194.i.i to i32
  call void @__asan_store4_noabort(i32 %496)
  store i32 2, ptr %algo.i194.i.i, align 4
  %size.i195.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %497 = ptrtoint ptr %size.i195.i.i to i32
  call void @__asan_load4_noabort(i32 %497)
  %498 = load i32, ptr %size.i195.i.i, align 8
  %step_size.i196.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 4
  %499 = ptrtoint ptr %step_size.i196.i.i to i32
  call void @__asan_store4_noabort(i32 %499)
  store i32 %498, ptr %step_size.i196.i.i, align 4
  %strength.i197.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %500 = ptrtoint ptr %strength.i197.i.i to i32
  call void @__asan_load4_noabort(i32 %500)
  %501 = load i32, ptr %strength.i197.i.i, align 4
  %strength10.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 2, i32 3
  %502 = ptrtoint ptr %strength10.i.i.i to i32
  call void @__asan_store4_noabort(i32 %502)
  store i32 %501, ptr %strength10.i.i.i, align 4
  %call11.i.i.i = call i32 @nand_ecc_sw_bch_init_ctx(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i.i.i)
  %tobool.not.i198.i.i = icmp eq i32 %call11.i.i.i, 0
  br i1 %tobool.not.i198.i.i, label %rawnand_sw_bch_init.exit.thread.i.i, label %do.end109.i.i

rawnand_sw_bch_init.exit.thread.i.i:              ; preds = %if.end93.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %step_size12.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 4
  %503 = ptrtoint ptr %step_size12.i.i.i to i32
  call void @__asan_load4_noabort(i32 %503)
  %504 = load i32, ptr %step_size12.i.i.i, align 4
  %505 = ptrtoint ptr %size.i195.i.i to i32
  call void @__asan_store4_noabort(i32 %505)
  store i32 %504, ptr %size.i195.i.i, align 8
  %strength15.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 0, i32 3
  %506 = ptrtoint ptr %strength15.i.i.i to i32
  call void @__asan_load4_noabort(i32 %506)
  %507 = load i32, ptr %strength15.i.i.i, align 4
  %508 = ptrtoint ptr %strength.i197.i.i to i32
  call void @__asan_store4_noabort(i32 %508)
  store i32 %507, ptr %strength.i197.i.i, align 4
  %total.i199.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 2
  %509 = ptrtoint ptr %total.i199.i.i to i32
  call void @__asan_load4_noabort(i32 %509)
  %510 = load i32, ptr %total.i199.i.i, align 4
  %total20.i.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %511 = ptrtoint ptr %total20.i.i.i to i32
  call void @__asan_store4_noabort(i32 %511)
  store i32 %510, ptr %total20.i.i.i, align 8
  %nsteps.i.i200.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 1
  %512 = ptrtoint ptr %nsteps.i.i200.i.i to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load i32, ptr %nsteps.i.i200.i.i, align 4
  %steps.i201.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %514 = ptrtoint ptr %steps.i201.i.i to i32
  call void @__asan_store4_noabort(i32 %514)
  store i32 %513, ptr %steps.i201.i.i, align 4
  %div.i202.i.i = udiv i32 %510, %513
  %bytes.i203.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %515 = ptrtoint ptr %bytes.i203.i.i to i32
  call void @__asan_store4_noabort(i32 %515)
  store i32 %div.i202.i.i, ptr %bytes.i203.i.i, align 4
  br label %sw.epilog219.i

do.end109.i.i:                                    ; preds = %if.end93.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5746, i32 noundef 9, ptr noundef nonnull @.str.121) #14
  br label %err_nand_manuf_cleanup.i

do.end136.i.i:                                    ; preds = %if.end23.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5752, i32 noundef 9, ptr noundef nonnull @.str.122) #14
  br label %err_nand_manuf_cleanup.i

sw.bb139.i:                                       ; preds = %if.end85.i
  %read_page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %516 = ptrtoint ptr %read_page.i to i32
  call void @__asan_load4_noabort(i32 %516)
  %517 = load ptr, ptr %read_page.i, align 4
  %tobool140.not.i = icmp eq ptr %517, null
  br i1 %tobool140.not.i, label %sw.bb139.i.do.end155.i_crit_edge, label %lor.lhs.false.i65

sw.bb139.i.do.end155.i_crit_edge:                 ; preds = %sw.bb139.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end155.i

lor.lhs.false.i65:                                ; preds = %sw.bb139.i
  %write_page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %518 = ptrtoint ptr %write_page.i to i32
  call void @__asan_load4_noabort(i32 %518)
  %519 = load ptr, ptr %write_page.i, align 4
  %tobool141.not.i = icmp eq ptr %519, null
  br i1 %tobool141.not.i, label %lor.lhs.false.i65.do.end155.i_crit_edge, label %if.end169.i

lor.lhs.false.i65.do.end155.i_crit_edge:          ; preds = %lor.lhs.false.i65
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end155.i

do.end155.i:                                      ; preds = %lor.lhs.false.i65.do.end155.i_crit_edge, %sw.bb139.i.do.end155.i_crit_edge
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6160, i32 noundef 9, ptr noundef nonnull @.str.107) #14
  br label %err_nand_manuf_cleanup.i

if.end169.i:                                      ; preds = %lor.lhs.false.i65
  %read_oob.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %520 = ptrtoint ptr %read_oob.i to i32
  call void @__asan_load4_noabort(i32 %520)
  %521 = load ptr, ptr %read_oob.i, align 4
  %tobool170.not.i = icmp eq ptr %521, null
  br i1 %tobool170.not.i, label %if.then171.i, label %if.end169.i.if.end173.i_crit_edge

if.end169.i.if.end173.i_crit_edge:                ; preds = %if.end169.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end173.i

if.then171.i:                                     ; preds = %if.end169.i
  call void @__sanitizer_cov_trace_pc() #16
  %522 = ptrtoint ptr %read_oob.i to i32
  call void @__asan_store4_noabort(i32 %522)
  store ptr @nand_read_oob_std, ptr %read_oob.i, align 4
  br label %if.end173.i

if.end173.i:                                      ; preds = %if.then171.i, %if.end169.i.if.end173.i_crit_edge
  %write_oob.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %523 = ptrtoint ptr %write_oob.i to i32
  call void @__asan_load4_noabort(i32 %523)
  %524 = load ptr, ptr %write_oob.i, align 4
  %tobool174.not.i = icmp eq ptr %524, null
  br i1 %tobool174.not.i, label %if.then175.i, label %if.end173.i.sw.epilog219.i_crit_edge

if.end173.i.sw.epilog219.i_crit_edge:             ; preds = %if.end173.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog219.i

if.then175.i:                                     ; preds = %if.end173.i
  call void @__sanitizer_cov_trace_pc() #16
  %525 = ptrtoint ptr %write_oob.i to i32
  call void @__asan_store4_noabort(i32 %525)
  store ptr @nand_write_oob_std, ptr %write_oob.i, align 4
  br label %sw.epilog219.i

do.end181.i:                                      ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #16
  %call183.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109) #19
  %read_page184.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %526 = ptrtoint ptr %read_page184.i to i32
  call void @__asan_store4_noabort(i32 %526)
  store ptr @nand_read_page_raw, ptr %read_page184.i, align 4
  %write_page185.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %527 = ptrtoint ptr %write_page185.i to i32
  call void @__asan_store4_noabort(i32 %527)
  store ptr @nand_write_page_raw, ptr %write_page185.i, align 4
  %read_oob186.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %528 = ptrtoint ptr %read_oob186.i to i32
  call void @__asan_store4_noabort(i32 %528)
  store ptr @nand_read_oob_std, ptr %read_oob186.i, align 4
  %read_page_raw.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %529 = ptrtoint ptr %read_page_raw.i to i32
  call void @__asan_store4_noabort(i32 %529)
  store ptr @nand_read_page_raw, ptr %read_page_raw.i, align 4
  %write_page_raw.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %530 = ptrtoint ptr %write_page_raw.i to i32
  call void @__asan_store4_noabort(i32 %530)
  store ptr @nand_write_page_raw, ptr %write_page_raw.i, align 4
  %write_oob187.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %531 = ptrtoint ptr %write_oob187.i to i32
  call void @__asan_store4_noabort(i32 %531)
  store ptr @nand_write_oob_std, ptr %write_oob187.i, align 4
  %532 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %532)
  %533 = load i32, ptr %writesize.i637.i.i, align 4
  %size189.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %534 = ptrtoint ptr %size189.i to i32
  call void @__asan_store4_noabort(i32 %534)
  store i32 %533, ptr %size189.i, align 4
  %bytes.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %535 = ptrtoint ptr %bytes.i to i32
  call void @__asan_store4_noabort(i32 %535)
  store i32 0, ptr %bytes.i, align 4
  %strength190.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %536 = ptrtoint ptr %strength190.i to i32
  call void @__asan_store4_noabort(i32 %536)
  store i32 0, ptr %strength190.i, align 4
  br label %sw.epilog219.i

do.end204.i:                                      ; preds = %if.end85.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6184, i32 noundef 9, ptr noundef nonnull @.str.111, i32 noundef %360) #14
  br label %err_nand_manuf_cleanup.i

sw.epilog219.i:                                   ; preds = %do.end181.i, %if.then175.i, %if.end173.i.sw.epilog219.i_crit_edge, %rawnand_sw_bch_init.exit.thread.i.i, %rawnand_sw_hamming_init.exit.thread.i.i, %if.then94.i.sw.epilog219.i_crit_edge
  %correct.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %537 = ptrtoint ptr %correct.i to i32
  call void @__asan_load4_noabort(i32 %537)
  %538 = load ptr, ptr %correct.i, align 4
  %tobool220.not.i = icmp eq ptr %538, null
  br i1 %tobool220.not.i, label %lor.lhs.false221.i, label %sw.epilog219.i.if.end8.i607.i_crit_edge

sw.epilog219.i.if.end8.i607.i_crit_edge:          ; preds = %sw.epilog219.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i607.i

lor.lhs.false221.i:                               ; preds = %sw.epilog219.i
  %calculate.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %539 = ptrtoint ptr %calculate.i to i32
  call void @__asan_load4_noabort(i32 %539)
  %540 = load ptr, ptr %calculate.i, align 4
  %tobool222.not.i = icmp eq ptr %540, null
  br i1 %tobool222.not.i, label %lor.lhs.false221.i.if.end235.i_crit_edge, label %lor.lhs.false221.i.if.end8.i607.i_crit_edge

lor.lhs.false221.i.if.end8.i607.i_crit_edge:      ; preds = %lor.lhs.false221.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i607.i

lor.lhs.false221.i.if.end235.i_crit_edge:         ; preds = %lor.lhs.false221.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end235.i

if.end8.i607.i:                                   ; preds = %lor.lhs.false221.i.if.end8.i607.i_crit_edge, %sw.epilog219.i.if.end8.i607.i_crit_edge
  %541 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %541)
  %542 = load i32, ptr %oobsize.i.i, align 4
  %call9.i606.i = call noalias align 128 ptr @__kmalloc(i32 noundef %542, i32 noundef 3264) #17
  %calc_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %543 = ptrtoint ptr %calc_buf.i to i32
  call void @__asan_store4_noabort(i32 %543)
  store ptr %call9.i606.i, ptr %calc_buf.i, align 4
  %544 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %544)
  %545 = load i32, ptr %oobsize.i.i, align 4
  %call9.i638.i = call noalias align 128 ptr @__kmalloc(i32 noundef %545, i32 noundef 3264) #17
  %code_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %546 = ptrtoint ptr %code_buf.i to i32
  call void @__asan_store4_noabort(i32 %546)
  store ptr %call9.i638.i, ptr %code_buf.i, align 4
  %547 = ptrtoint ptr %calc_buf.i to i32
  call void @__asan_load4_noabort(i32 %547)
  %548 = load ptr, ptr %calc_buf.i, align 4
  %tobool229.not.i = icmp eq ptr %548, null
  %tobool232.not.i = icmp eq ptr %call9.i638.i, null
  %or.cond.i66 = select i1 %tobool229.not.i, i1 true, i1 %tobool232.not.i
  br i1 %or.cond.i66, label %if.end8.i607.i.err_nand_manuf_cleanup.i_crit_edge, label %if.end8.i607.i.if.end235.i_crit_edge

if.end8.i607.i.if.end235.i_crit_edge:             ; preds = %if.end8.i607.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end235.i

if.end8.i607.i.err_nand_manuf_cleanup.i_crit_edge: ; preds = %if.end8.i607.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_nand_manuf_cleanup.i

if.end235.i:                                      ; preds = %if.end8.i607.i.if.end235.i_crit_edge, %lor.lhs.false221.i.if.end235.i_crit_edge
  %read_oob_raw.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 23
  %549 = ptrtoint ptr %read_oob_raw.i to i32
  call void @__asan_load4_noabort(i32 %549)
  %550 = load ptr, ptr %read_oob_raw.i, align 4
  %tobool236.not.i = icmp eq ptr %550, null
  br i1 %tobool236.not.i, label %if.then237.i, label %if.end235.i.if.end240.i_crit_edge

if.end235.i.if.end240.i_crit_edge:                ; preds = %if.end235.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end240.i

if.then237.i:                                     ; preds = %if.end235.i
  call void @__sanitizer_cov_trace_pc() #16
  %read_oob238.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %551 = ptrtoint ptr %read_oob238.i to i32
  call void @__asan_load4_noabort(i32 %551)
  %552 = load ptr, ptr %read_oob238.i, align 4
  %553 = ptrtoint ptr %read_oob_raw.i to i32
  call void @__asan_store4_noabort(i32 %553)
  store ptr %552, ptr %read_oob_raw.i, align 4
  br label %if.end240.i

if.end240.i:                                      ; preds = %if.then237.i, %if.end235.i.if.end240.i_crit_edge
  %write_oob_raw.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 22
  %554 = ptrtoint ptr %write_oob_raw.i to i32
  call void @__asan_load4_noabort(i32 %554)
  %555 = load ptr, ptr %write_oob_raw.i, align 4
  %tobool241.not.i = icmp eq ptr %555, null
  br i1 %tobool241.not.i, label %if.then242.i, label %if.end240.i.if.end245.i_crit_edge

if.end240.i.if.end245.i_crit_edge:                ; preds = %if.end240.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end245.i

if.then242.i:                                     ; preds = %if.end240.i
  call void @__sanitizer_cov_trace_pc() #16
  %write_oob243.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %556 = ptrtoint ptr %write_oob243.i to i32
  call void @__asan_load4_noabort(i32 %556)
  %557 = load ptr, ptr %write_oob243.i, align 4
  %558 = ptrtoint ptr %write_oob_raw.i to i32
  call void @__asan_store4_noabort(i32 %558)
  store ptr %557, ptr %write_oob_raw.i, align 4
  br label %if.end245.i

if.end245.i:                                      ; preds = %if.then242.i, %if.end240.i.if.end245.i_crit_edge
  %strength246.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %559 = ptrtoint ptr %strength246.i to i32
  call void @__asan_load4_noabort(i32 %559)
  %560 = load i32, ptr %strength246.i, align 4
  %ecc_strength.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 18
  %561 = ptrtoint ptr %ecc_strength.i to i32
  call void @__asan_store4_noabort(i32 %561)
  store i32 %560, ptr %ecc_strength.i, align 4
  %size247.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %562 = ptrtoint ptr %size247.i to i32
  call void @__asan_load4_noabort(i32 %562)
  %563 = load i32, ptr %size247.i, align 4
  %ecc_step_size.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 17
  %564 = ptrtoint ptr %ecc_step_size.i to i32
  call void @__asan_store4_noabort(i32 %564)
  store i32 %563, ptr %ecc_step_size.i, align 8
  %steps.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %565 = ptrtoint ptr %steps.i to i32
  call void @__asan_load4_noabort(i32 %565)
  %566 = load i32, ptr %steps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %566)
  %tobool248.not.i = icmp eq i32 %566, 0
  br i1 %tobool248.not.i, label %if.then249.i, label %if.end245.i.if.end253.i_crit_edge

if.end245.i.if.end253.i_crit_edge:                ; preds = %if.end245.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end253.i

if.then249.i:                                     ; preds = %if.end245.i
  call void @__sanitizer_cov_trace_pc() #16
  %567 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %567)
  %568 = load i32, ptr %writesize.i637.i.i, align 4
  %div.i = udiv i32 %568, %563
  %569 = ptrtoint ptr %steps.i to i32
  call void @__asan_store4_noabort(i32 %569)
  store i32 %div.i, ptr %steps.i, align 4
  br label %if.end253.i

if.end253.i:                                      ; preds = %if.then249.i, %if.end245.i.if.end253.i_crit_edge
  %570 = ptrtoint ptr %steps.i to i32
  call void @__asan_load4_noabort(i32 %570)
  %571 = load i32, ptr %steps.i, align 4
  %mul.i67 = mul i32 %571, %563
  %572 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %572)
  %573 = load i32, ptr %writesize.i637.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i67, i32 %573)
  %cmp257.not.i = icmp eq i32 %mul.i67, %573
  br i1 %cmp257.not.i, label %if.end285.i, label %do.end271.i

do.end271.i:                                      ; preds = %if.end253.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6215, i32 noundef 9, ptr noundef nonnull @.str.112) #14
  br label %err_nand_manuf_cleanup.i

if.end285.i:                                      ; preds = %if.end253.i
  %total.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %574 = ptrtoint ptr %total.i to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load i32, ptr %total.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %575)
  %tobool286.not.i = icmp eq i32 %575, 0
  br i1 %tobool286.not.i, label %if.then287.i, label %if.end285.i.if.end295.i_crit_edge

if.end285.i.if.end295.i_crit_edge:                ; preds = %if.end285.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end295.i

if.then287.i:                                     ; preds = %if.end285.i
  call void @__sanitizer_cov_trace_pc() #16
  %bytes289.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %576 = ptrtoint ptr %bytes289.i to i32
  call void @__asan_load4_noabort(i32 %576)
  %577 = load i32, ptr %bytes289.i, align 4
  %mul290.i = mul i32 %577, %571
  %578 = ptrtoint ptr %total.i to i32
  call void @__asan_store4_noabort(i32 %578)
  store i32 %mul290.i, ptr %total.i, align 4
  %total294.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 3, i32 2
  %579 = ptrtoint ptr %total294.i to i32
  call void @__asan_store4_noabort(i32 %579)
  store i32 %mul290.i, ptr %total294.i, align 4
  br label %if.end295.i

if.end295.i:                                      ; preds = %if.then287.i, %if.end285.i.if.end295.i_crit_edge
  %580 = ptrtoint ptr %total.i to i32
  call void @__asan_load4_noabort(i32 %580)
  %581 = load i32, ptr %total.i, align 4
  %582 = ptrtoint ptr %oobsize.i.i to i32
  call void @__asan_load4_noabort(i32 %582)
  %583 = load i32, ptr %oobsize.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %581, i32 %583)
  %cmp298.i = icmp ugt i32 %581, %583
  br i1 %cmp298.i, label %do.end312.i, label %if.end326.i

do.end312.i:                                      ; preds = %if.end295.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 6226, i32 noundef 9, ptr noundef nonnull @.str.113) #14
  br label %err_nand_manuf_cleanup.i

if.end326.i:                                      ; preds = %if.end295.i
  %call327.i = call i32 @mtd_ooblayout_count_freebytes(ptr noundef %chip) #14
  %584 = call i32 @llvm.smax.i32(i32 %call327.i, i32 0) #14
  %oobavail.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 7
  %585 = ptrtoint ptr %oobavail.i to i32
  call void @__asan_store4_noabort(i32 %585)
  store i32 %584, ptr %oobavail.i, align 8
  %call332.i = call zeroext i1 @nand_ecc_is_strong_enough(ptr noundef %chip) #14
  br i1 %call332.i, label %if.end326.i.if.end348.i_crit_edge, label %do.end336.i

if.end326.i.if.end348.i_crit_edge:                ; preds = %if.end326.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end348.i

do.end336.i:                                      ; preds = %if.end326.i
  call void @__sanitizer_cov_trace_pc() #16
  %586 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %586)
  %587 = load ptr, ptr %name.i, align 8
  %588 = ptrtoint ptr %strength246.i to i32
  call void @__asan_load4_noabort(i32 %588)
  %589 = load i32, ptr %strength246.i, align 4
  %590 = ptrtoint ptr %size247.i to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load i32, ptr %size247.i, align 8
  %strength344.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 3
  %592 = ptrtoint ptr %strength344.i to i32
  call void @__asan_load4_noabort(i32 %592)
  %593 = load i32, ptr %strength344.i, align 4
  %step_size.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 2, i32 1, i32 4
  %594 = ptrtoint ptr %step_size.i to i32
  call void @__asan_load4_noabort(i32 %594)
  %595 = load i32, ptr %step_size.i, align 4
  %call347.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.115, ptr noundef %587, i32 noundef %589, i32 noundef %591, i32 noundef %593, i32 noundef %595) #19
  br label %if.end348.i

if.end348.i:                                      ; preds = %do.end336.i, %if.end326.i.if.end348.i_crit_edge
  %596 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %596)
  %597 = load i32, ptr %options.i117.i, align 8
  %and349.i = and i32 %597, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and349.i)
  %tobool350.not.i = icmp eq i32 %and349.i, 0
  br i1 %tobool350.not.i, label %land.lhs.true351.i, label %if.end348.i.if.end359.i_crit_edge

if.end348.i.if.end359.i_crit_edge:                ; preds = %if.end348.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end359.i

land.lhs.true351.i:                               ; preds = %if.end348.i
  %598 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_load4_noabort(i32 %598)
  %599 = load i32, ptr %memorg.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %599)
  %cmp.i676.i = icmp eq i32 %599, 0
  br i1 %cmp.i676.i, label %do.end.i677.i, label %land.lhs.true351.i.nand_is_slc.exit.i_crit_edge, !prof !378

land.lhs.true351.i.nand_is_slc.exit.i_crit_edge:  ; preds = %land.lhs.true351.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_is_slc.exit.i

do.end.i677.i:                                    ; preds = %land.lhs.true351.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.29, i32 noundef 1445, i32 noundef 9, ptr noundef nonnull @.str.102) #14
  %600 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_load4_noabort(i32 %600)
  %.pr.i = load i32, ptr %memorg.i.i, align 8
  br label %nand_is_slc.exit.i

nand_is_slc.exit.i:                               ; preds = %do.end.i677.i, %land.lhs.true351.i.nand_is_slc.exit.i_crit_edge
  %601 = phi i32 [ %599, %land.lhs.true351.i.nand_is_slc.exit.i_crit_edge ], [ %.pr.i, %do.end.i677.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %601)
  %cmp21.i.i = icmp eq i32 %601, 1
  br i1 %cmp21.i.i, label %if.then353.i, label %nand_is_slc.exit.i.if.end359.i_crit_edge

nand_is_slc.exit.i.if.end359.i_crit_edge:         ; preds = %nand_is_slc.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end359.i

if.then353.i:                                     ; preds = %nand_is_slc.exit.i
  %602 = ptrtoint ptr %steps.i to i32
  call void @__asan_load4_noabort(i32 %602)
  %603 = load i32, ptr %steps.i, align 4
  %604 = add i32 %603, -2
  %605 = call i32 @llvm.fshl.i32(i32 %604, i32 %604, i32 31) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %605)
  %606 = icmp ult i32 %605, 8
  br i1 %606, label %switch.hole_check, label %if.then353.i.if.end359.i_crit_edge

if.then353.i.if.end359.i_crit_edge:               ; preds = %if.then353.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end359.i

switch.hole_check:                                ; preds = %if.then353.i
  %switch.maskindex = trunc i32 %605 to i8
  %switch.shifted = lshr i8 -117, %switch.maskindex
  %607 = and i8 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %607)
  %switch.lobit.not = icmp eq i8 %607, 0
  br i1 %switch.lobit.not, label %switch.hole_check.if.end359.i_crit_edge, label %switch.lookup

switch.hole_check.if.end359.i_crit_edge:          ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end359.i

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  %switch.gep = getelementptr inbounds [8 x i32], ptr @switch.table.nand_scan_with_ids, i32 0, i32 %605
  %608 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %608)
  %switch.load = load i32, ptr %switch.gep, align 4
  %subpage_sft.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 53
  %609 = ptrtoint ptr %subpage_sft.i to i32
  call void @__asan_store4_noabort(i32 %609)
  store i32 %switch.load, ptr %subpage_sft.i, align 4
  br label %if.end359.i

if.end359.i:                                      ; preds = %switch.lookup, %switch.hole_check.if.end359.i_crit_edge, %if.then353.i.if.end359.i_crit_edge, %nand_is_slc.exit.i.if.end359.i_crit_edge, %if.end348.i.if.end359.i_crit_edge
  %610 = ptrtoint ptr %writesize.i637.i.i to i32
  call void @__asan_load4_noabort(i32 %610)
  %611 = load i32, ptr %writesize.i637.i.i, align 4
  %subpage_sft361.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 53
  %612 = ptrtoint ptr %subpage_sft361.i to i32
  call void @__asan_load4_noabort(i32 %612)
  %613 = load i32, ptr %subpage_sft361.i, align 4
  %shr.i = lshr i32 %611, %613
  %subpagesize.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 21
  %614 = ptrtoint ptr %subpagesize.i to i32
  call void @__asan_store4_noabort(i32 %614)
  store i32 %shr.i, ptr %subpagesize.i, align 4
  %page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %615 = ptrtoint ptr %page.i to i32
  call void @__asan_store4_noabort(i32 %615)
  store i32 -1, ptr %page.i, align 4
  %616 = ptrtoint ptr %ecc1.i to i32
  call void @__asan_load4_noabort(i32 %616)
  %617 = load i32, ptr %ecc1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %617)
  %cond.i = icmp eq i32 %617, 2
  br i1 %cond.i, label %sw.bb363.i, label %if.end359.i.sw.epilog369.i_crit_edge

if.end359.i.sw.epilog369.i_crit_edge:             ; preds = %if.end359.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog369.i

sw.bb363.i:                                       ; preds = %if.end359.i
  %618 = ptrtoint ptr %page_shift.i.i to i32
  call void @__asan_load4_noabort(i32 %618)
  %619 = load i32, ptr %page_shift.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %619)
  %cmp364.i = icmp ugt i32 %619, 9
  br i1 %cmp364.i, label %if.then365.i, label %sw.bb363.i.sw.epilog369.i_crit_edge

sw.bb363.i.sw.epilog369.i_crit_edge:              ; preds = %sw.bb363.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog369.i

if.then365.i:                                     ; preds = %sw.bb363.i
  call void @__sanitizer_cov_trace_pc() #16
  %620 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %620)
  %621 = load i32, ptr %options.i117.i, align 8
  %or.i = or i32 %621, 4096
  store i32 %or.i, ptr %options.i117.i, align 8
  br label %sw.epilog369.i

sw.epilog369.i:                                   ; preds = %if.then365.i, %sw.bb363.i.sw.epilog369.i_crit_edge, %if.end359.i.sw.epilog369.i_crit_edge
  %owner.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 55
  %622 = ptrtoint ptr %owner.i to i32
  call void @__asan_load4_noabort(i32 %622)
  %623 = load ptr, ptr %owner.i, align 4
  %call371.i = call i32 @nanddev_init(ptr noundef %chip, ptr noundef nonnull @rawnand_ops, ptr noundef %623) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call371.i)
  %tobool372.not.i = icmp eq i32 %call371.i, 0
  br i1 %tobool372.not.i, label %if.end374.i, label %sw.epilog369.i.err_nand_manuf_cleanup.i_crit_edge

sw.epilog369.i.err_nand_manuf_cleanup.i_crit_edge: ; preds = %sw.epilog369.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_nand_manuf_cleanup.i

if.end374.i:                                      ; preds = %sw.epilog369.i
  %624 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %624)
  %625 = load i32, ptr %options.i117.i, align 8
  %and376.i = and i32 %625, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and376.i)
  %tobool377.not.i = icmp eq i32 %and376.i, 0
  br i1 %tobool377.not.i, label %if.end374.i.if.end379.i_crit_edge, label %if.then378.i

if.end374.i.if.end379.i_crit_edge:                ; preds = %if.end374.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end379.i

if.then378.i:                                     ; preds = %if.end374.i
  call void @__sanitizer_cov_trace_pc() #16
  %flags.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 1
  %626 = ptrtoint ptr %flags.i to i32
  call void @__asan_store4_noabort(i32 %626)
  store i32 0, ptr %flags.i, align 4
  br label %if.end379.i

if.end379.i:                                      ; preds = %if.then378.i, %if.end374.i.if.end379.i_crit_edge
  %_erase.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 21
  %627 = ptrtoint ptr %_erase.i to i32
  call void @__asan_store4_noabort(i32 %627)
  store ptr @nand_erase, ptr %_erase.i, align 8
  %_point.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 22
  %628 = ptrtoint ptr %_point.i to i32
  call void @__asan_store4_noabort(i32 %628)
  store ptr null, ptr %_point.i, align 4
  %_unpoint.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 23
  %629 = ptrtoint ptr %_unpoint.i to i32
  call void @__asan_store4_noabort(i32 %629)
  store ptr null, ptr %_unpoint.i, align 8
  %_panic_write.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 26
  %630 = ptrtoint ptr %_panic_write.i to i32
  call void @__asan_store4_noabort(i32 %630)
  store ptr @panic_nand_write, ptr %_panic_write.i, align 4
  %_read_oob.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 27
  %631 = ptrtoint ptr %_read_oob.i to i32
  call void @__asan_store4_noabort(i32 %631)
  store ptr @nand_read_oob, ptr %_read_oob.i, align 8
  %_write_oob.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 28
  %632 = ptrtoint ptr %_write_oob.i to i32
  call void @__asan_store4_noabort(i32 %632)
  store ptr @nand_write_oob, ptr %_write_oob.i, align 4
  %_sync.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 37
  %633 = ptrtoint ptr %_sync.i to i32
  call void @__asan_store4_noabort(i32 %633)
  store ptr @nand_sync, ptr %_sync.i, align 8
  %_lock.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 38
  %634 = ptrtoint ptr %_lock.i to i32
  call void @__asan_store4_noabort(i32 %634)
  store ptr @nand_lock, ptr %_lock.i, align 4
  %_unlock.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 39
  %635 = ptrtoint ptr %_unlock.i to i32
  call void @__asan_store4_noabort(i32 %635)
  store ptr @nand_unlock, ptr %_unlock.i, align 8
  %_suspend.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 45
  %636 = ptrtoint ptr %_suspend.i to i32
  call void @__asan_store4_noabort(i32 %636)
  store ptr @nand_suspend, ptr %_suspend.i, align 8
  %_resume.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 46
  %637 = ptrtoint ptr %_resume.i to i32
  call void @__asan_store4_noabort(i32 %637)
  store ptr @nand_resume, ptr %_resume.i, align 4
  %_reboot.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 47
  %638 = ptrtoint ptr %_reboot.i to i32
  call void @__asan_store4_noabort(i32 %638)
  store ptr @nand_shutdown, ptr %_reboot.i, align 8
  %_block_isreserved.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 41
  %639 = ptrtoint ptr %_block_isreserved.i to i32
  call void @__asan_store4_noabort(i32 %639)
  store ptr @nand_block_isreserved, ptr %_block_isreserved.i, align 8
  %_block_isbad.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 42
  %640 = ptrtoint ptr %_block_isbad.i to i32
  call void @__asan_store4_noabort(i32 %640)
  store ptr @nand_block_isbad, ptr %_block_isbad.i, align 4
  %_block_markbad.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 43
  %641 = ptrtoint ptr %_block_markbad.i to i32
  call void @__asan_store4_noabort(i32 %641)
  store ptr @nand_block_markbad, ptr %_block_markbad.i, align 8
  %_max_bad_blocks.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 44
  %642 = ptrtoint ptr %_max_bad_blocks.i to i32
  call void @__asan_store4_noabort(i32 %642)
  store ptr @nanddev_mtd_max_bad_blocks, ptr %_max_bad_blocks.i, align 4
  %bitflip_threshold.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 12
  %643 = ptrtoint ptr %bitflip_threshold.i to i32
  call void @__asan_load4_noabort(i32 %643)
  %644 = load i32, ptr %bitflip_threshold.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %644)
  %tobool380.not.i = icmp eq i32 %644, 0
  br i1 %tobool380.not.i, label %if.then381.i, label %if.end379.i.if.end387.i_crit_edge

if.end379.i.if.end387.i_crit_edge:                ; preds = %if.end379.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end387.i

if.then381.i:                                     ; preds = %if.end379.i
  call void @__sanitizer_cov_trace_pc() #16
  %645 = ptrtoint ptr %ecc_strength.i to i32
  call void @__asan_load4_noabort(i32 %645)
  %646 = load i32, ptr %ecc_strength.i, align 4
  %mul383.i = mul i32 %646, 3
  %sub.i = add i32 %mul383.i, 3
  %div385577.i = lshr i32 %sub.i, 2
  %647 = ptrtoint ptr %bitflip_threshold.i to i32
  call void @__asan_store4_noabort(i32 %647)
  store i32 %div385577.i, ptr %bitflip_threshold.i, align 4
  br label %if.end387.i

if.end387.i:                                      ; preds = %if.then381.i, %if.end379.i.if.end387.i_crit_edge
  %call388.i = call fastcc i32 @nand_choose_interface_config(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call388.i)
  %tobool389.not.i = icmp eq i32 %call388.i, 0
  br i1 %tobool389.not.i, label %for.cond.preheader.i, label %if.end387.i.err_nanddev_cleanup.i_crit_edge

if.end387.i.err_nanddev_cleanup.i_crit_edge:      ; preds = %if.end387.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_nanddev_cleanup.i

for.cond.preheader.i:                             ; preds = %if.end387.i
  %648 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_load4_noabort(i32 %648)
  %649 = load i32, ptr %ntargets.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %649)
  %cmp394695.not.i = icmp eq i32 %649, 0
  br i1 %cmp394695.not.i, label %for.cond.preheader.i.for.end.i72_crit_edge, label %for.cond.preheader.i.for.body.i71_crit_edge

for.cond.preheader.i.for.body.i71_crit_edge:      ; preds = %for.cond.preheader.i
  br label %for.body.i71

for.cond.preheader.i.for.end.i72_crit_edge:       ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i72

for.cond.i:                                       ; preds = %for.body.i71
  %inc.i70 = add nuw i32 %i.0696.i, 1
  %650 = ptrtoint ptr %ntargets.i to i32
  call void @__asan_load4_noabort(i32 %650)
  %651 = load i32, ptr %ntargets.i, align 8
  %cmp394.i = icmp ult i32 %inc.i70, %651
  br i1 %cmp394.i, label %for.cond.i.for.body.i71_crit_edge, label %for.cond.i.for.end.i72_crit_edge

for.cond.i.for.end.i72_crit_edge:                 ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i72

for.cond.i.for.body.i71_crit_edge:                ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i71

for.body.i71:                                     ; preds = %for.cond.i.for.body.i71_crit_edge, %for.cond.preheader.i.for.body.i71_crit_edge
  %i.0696.i = phi i32 [ %inc.i70, %for.cond.i.for.body.i71_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i71_crit_edge ]
  %call395.i = call fastcc i32 @nand_setup_interface(ptr noundef %chip, i32 noundef %i.0696.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call395.i)
  %tobool396.not.i = icmp eq i32 %call395.i, 0
  br i1 %tobool396.not.i, label %for.cond.i, label %for.body.i71.err_free_interface_config.i_crit_edge

for.body.i71.err_free_interface_config.i_crit_edge: ; preds = %for.body.i71
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_interface_config.i

for.end.i72:                                      ; preds = %for.cond.i.for.end.i72_crit_edge, %for.cond.preheader.i.for.end.i72_crit_edge
  %call399.i = call fastcc i32 @of_get_nand_secure_regions(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call399.i)
  %tobool400.not.i = icmp eq i32 %call399.i, 0
  br i1 %tobool400.not.i, label %if.end402.i, label %for.end.i72.err_free_interface_config.i_crit_edge

for.end.i72.err_free_interface_config.i_crit_edge: ; preds = %for.end.i72
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_interface_config.i

if.end402.i:                                      ; preds = %for.end.i72
  %652 = ptrtoint ptr %options.i117.i to i32
  call void @__asan_load4_noabort(i32 %652)
  %653 = load i32, ptr %options.i117.i, align 8
  %and404.i = and i32 %653, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and404.i)
  %tobool405.not.i = icmp eq i32 %and404.i, 0
  br i1 %tobool405.not.i, label %if.end407.i, label %if.end402.i.cleanup_crit_edge

if.end402.i.cleanup_crit_edge:                    ; preds = %if.end402.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end407.i:                                      ; preds = %if.end402.i
  %call408.i = call i32 @nand_create_bbt(ptr noundef %chip) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call408.i)
  %tobool409.not.i = icmp eq i32 %call408.i, 0
  br i1 %tobool409.not.i, label %if.end407.i.cleanup_crit_edge, label %err_free_secure_regions.i

if.end407.i.cleanup_crit_edge:                    ; preds = %if.end407.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

err_free_secure_regions.i:                        ; preds = %if.end407.i
  call void @__sanitizer_cov_trace_pc() #16
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %654 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %654)
  %655 = load ptr, ptr %secure_regions.i, align 4
  call void @kfree(ptr noundef %655) #14
  br label %err_free_interface_config.i

err_free_interface_config.i:                      ; preds = %err_free_secure_regions.i, %for.end.i72.err_free_interface_config.i_crit_edge, %for.body.i71.err_free_interface_config.i_crit_edge
  %ret.0.i = phi i32 [ %call399.i, %for.end.i72.err_free_interface_config.i_crit_edge ], [ %call408.i, %err_free_secure_regions.i ], [ %call395.i, %for.body.i71.err_free_interface_config.i_crit_edge ]
  %best_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %656 = ptrtoint ptr %best_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %656)
  %657 = load ptr, ptr %best_interface_config.i, align 8
  call void @kfree(ptr noundef %657) #14
  br label %err_nanddev_cleanup.i

err_nanddev_cleanup.i:                            ; preds = %err_free_interface_config.i, %if.end387.i.err_nanddev_cleanup.i_crit_edge
  %ret.1.i = phi i32 [ %call388.i, %if.end387.i.err_nanddev_cleanup.i_crit_edge ], [ %ret.0.i, %err_free_interface_config.i ]
  call void @nanddev_cleanup(ptr noundef %chip) #14
  br label %err_nand_manuf_cleanup.i

err_nand_manuf_cleanup.i:                         ; preds = %err_nanddev_cleanup.i, %sw.epilog369.i.err_nand_manuf_cleanup.i_crit_edge, %do.end312.i, %do.end271.i, %if.end8.i607.i.err_nand_manuf_cleanup.i_crit_edge, %do.end204.i, %do.end155.i, %do.end136.i.i, %do.end109.i.i, %do.end51.i.i, %do.end109.i, %do.end103.i.i, %do.end.i.i51, %do.end70.i
  %ret.2.i = phi i32 [ -22, %do.end204.i ], [ -22, %do.end271.i ], [ -22, %do.end312.i ], [ %call371.i, %sw.epilog369.i.err_nand_manuf_cleanup.i_crit_edge ], [ %ret.1.i, %err_nanddev_cleanup.i ], [ -22, %do.end155.i ], [ -22, %do.end109.i ], [ -22, %do.end70.i ], [ -12, %if.end8.i607.i.err_nand_manuf_cleanup.i_crit_edge ], [ -22, %do.end103.i.i ], [ -22, %do.end.i.i51 ], [ %call.i.i.i61, %do.end51.i.i ], [ %call11.i.i.i, %do.end109.i.i ], [ -22, %do.end136.i.i ]
  %658 = ptrtoint ptr %manufacturer.i.i to i32
  call void @__asan_load4_noabort(i32 %658)
  %659 = load ptr, ptr %manufacturer.i.i, align 8
  %tobool.not.i680.i = icmp eq ptr %659, null
  br i1 %tobool.not.i680.i, label %err_nand_manuf_cleanup.i.err_free_buf.i_crit_edge, label %land.lhs.true.i683.i

err_nand_manuf_cleanup.i.err_free_buf.i_crit_edge: ; preds = %err_nand_manuf_cleanup.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_buf.i

land.lhs.true.i683.i:                             ; preds = %err_nand_manuf_cleanup.i
  %ops.i681.i = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %659, i32 0, i32 2
  %660 = ptrtoint ptr %ops.i681.i to i32
  call void @__asan_load4_noabort(i32 %660)
  %661 = load ptr, ptr %ops.i681.i, align 4
  %tobool3.not.i682.i = icmp eq ptr %661, null
  br i1 %tobool3.not.i682.i, label %land.lhs.true.i683.i.err_free_buf.i_crit_edge, label %land.lhs.true4.i.i

land.lhs.true.i683.i.err_free_buf.i_crit_edge:    ; preds = %land.lhs.true.i683.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_buf.i

land.lhs.true4.i.i:                               ; preds = %land.lhs.true.i683.i
  %cleanup.i.i = getelementptr inbounds %struct.nand_manufacturer_ops, ptr %661, i32 0, i32 2
  %662 = ptrtoint ptr %cleanup.i.i to i32
  call void @__asan_load4_noabort(i32 %662)
  %663 = load ptr, ptr %cleanup.i.i, align 4
  %tobool8.not.i684.i = icmp eq ptr %663, null
  br i1 %tobool8.not.i684.i, label %land.lhs.true4.i.i.err_free_buf.i_crit_edge, label %if.then.i685.i

land.lhs.true4.i.i.err_free_buf.i_crit_edge:      ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_free_buf.i

if.then.i685.i:                                   ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void %663(ptr noundef %chip) #14
  br label %err_free_buf.i

err_free_buf.i:                                   ; preds = %if.then.i685.i, %land.lhs.true4.i.i.err_free_buf.i_crit_edge, %land.lhs.true.i683.i.err_free_buf.i_crit_edge, %err_nand_manuf_cleanup.i.err_free_buf.i_crit_edge, %nand_deselect_target.exit.i42.err_free_buf.i_crit_edge
  %ret.3.i = phi i32 [ %retval.0.i.i40, %nand_deselect_target.exit.i42.err_free_buf.i_crit_edge ], [ %ret.2.i, %err_nand_manuf_cleanup.i.err_free_buf.i_crit_edge ], [ %ret.2.i, %land.lhs.true.i683.i.err_free_buf.i_crit_edge ], [ %ret.2.i, %land.lhs.true4.i.i.err_free_buf.i_crit_edge ], [ %ret.2.i, %if.then.i685.i ]
  %664 = ptrtoint ptr %data_buf.i to i32
  call void @__asan_load4_noabort(i32 %664)
  %665 = load ptr, ptr %data_buf.i, align 8
  call void @kfree(ptr noundef %665) #14
  %code_buf414.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %666 = ptrtoint ptr %code_buf414.i to i32
  call void @__asan_load4_noabort(i32 %666)
  %667 = load ptr, ptr %code_buf414.i, align 4
  call void @kfree(ptr noundef %667) #14
  %calc_buf415.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %668 = ptrtoint ptr %calc_buf415.i to i32
  call void @__asan_load4_noabort(i32 %668)
  %669 = load ptr, ptr %calc_buf415.i, align 4
  call void @kfree(ptr noundef %669) #14
  br label %detach_chip

detach_chip:                                      ; preds = %err_free_buf.i, %if.end8.i.i.detach_chip_crit_edge, %do.end.i
  %retval.0.i73.ph = phi i32 [ -12, %if.end8.i.i.detach_chip_crit_edge ], [ %ret.3.i, %err_free_buf.i ], [ -22, %do.end.i ]
  %670 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %670)
  %671 = load ptr, ptr %controller.i.i, align 4
  %ops.i75 = getelementptr inbounds %struct.nand_controller, ptr %671, i32 0, i32 1
  %672 = ptrtoint ptr %ops.i75 to i32
  call void @__asan_load4_noabort(i32 %672)
  %673 = load ptr, ptr %ops.i75, align 4
  %tobool.not.i76 = icmp eq ptr %673, null
  br i1 %tobool.not.i76, label %detach_chip.cleanup_ident_crit_edge, label %land.lhs.true.i78

detach_chip.cleanup_ident_crit_edge:              ; preds = %detach_chip
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_ident

land.lhs.true.i78:                                ; preds = %detach_chip
  %detach_chip.i = getelementptr inbounds %struct.nand_controller_ops, ptr %673, i32 0, i32 1
  %674 = ptrtoint ptr %detach_chip.i to i32
  call void @__asan_load4_noabort(i32 %674)
  %675 = load ptr, ptr %detach_chip.i, align 4
  %tobool3.not.i77 = icmp eq ptr %675, null
  br i1 %tobool3.not.i77, label %land.lhs.true.i78.cleanup_ident_crit_edge, label %if.then.i79

land.lhs.true.i78.cleanup_ident_crit_edge:        ; preds = %land.lhs.true.i78
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup_ident

if.then.i79:                                      ; preds = %land.lhs.true.i78
  call void @__sanitizer_cov_trace_pc() #16
  call void %675(ptr noundef %chip) #14
  br label %cleanup_ident

cleanup_ident:                                    ; preds = %if.then.i79, %land.lhs.true.i78.cleanup_ident_crit_edge, %detach_chip.cleanup_ident_crit_edge, %nand_attach.exit.cleanup_ident_crit_edge
  %ret.0 = phi i32 [ %call.i, %nand_attach.exit.cleanup_ident_crit_edge ], [ %retval.0.i73.ph, %detach_chip.cleanup_ident_crit_edge ], [ %retval.0.i73.ph, %land.lhs.true.i78.cleanup_ident_crit_edge ], [ %retval.0.i73.ph, %if.then.i79 ]
  %676 = ptrtoint ptr %parameters413.i.i to i32
  call void @__asan_load4_noabort(i32 %676)
  %677 = load ptr, ptr %parameters413.i.i, align 4
  call void @kfree(ptr noundef %677) #14
  %onfi.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 4
  %678 = ptrtoint ptr %onfi.i to i32
  call void @__asan_load4_noabort(i32 %678)
  %679 = load ptr, ptr %onfi.i, align 4
  call void @kfree(ptr noundef %679) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup_ident, %if.end407.i.cleanup_crit_edge, %if.end402.i.cleanup_crit_edge, %nand_deselect_target.exit.i, %nand_set_defaults.exit.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %cleanup_ident ], [ -22, %entry.cleanup_crit_edge ], [ 0, %if.end402.i.cleanup_crit_edge ], [ 0, %if.end407.i.cleanup_crit_edge ], [ %call12.i, %nand_set_defaults.exit.i.cleanup_crit_edge ], [ %retval.0.i123.ph.i, %nand_deselect_target.exit.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nand_cleanup(ptr noundef %chip) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ecc = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33
  %0 = ptrtoint ptr %ecc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ecc, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp = icmp eq i32 %1, 2
  br i1 %cmp, label %if.then, label %entry.if.end9_crit_edge

entry.if.end9_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then:                                          ; preds = %entry
  %algo = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 2
  %2 = ptrtoint ptr %algo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %algo, align 8
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.146)
  switch i32 %3, label %if.then.if.end9_crit_edge [
    i32 1, label %if.then3
    i32 2, label %if.then7
  ]

if.then.if.end9_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @nand_ecc_sw_hamming_cleanup_ctx(ptr noundef %chip) #14
  br label %if.end9

if.then7:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @nand_ecc_sw_bch_cleanup_ctx(ptr noundef %chip) #14
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.then3, %if.then.if.end9_crit_edge, %entry.if.end9_crit_edge
  tail call void @nanddev_cleanup(ptr noundef %chip) #14
  %secure_regions = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %5 = ptrtoint ptr %secure_regions to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %secure_regions, align 4
  tail call void @kfree(ptr noundef %6) #14
  %bbt = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 16
  %7 = ptrtoint ptr %bbt to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bbt, align 8
  tail call void @kfree(ptr noundef %8) #14
  %data_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %9 = ptrtoint ptr %data_buf to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %data_buf, align 8
  tail call void @kfree(ptr noundef %10) #14
  %code_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %11 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %code_buf, align 8
  tail call void @kfree(ptr noundef %12) #14
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %13 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %calc_buf, align 4
  tail call void @kfree(ptr noundef %14) #14
  %badblock_pattern = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 15
  %15 = ptrtoint ptr %badblock_pattern to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %badblock_pattern, align 4
  %tobool.not = icmp eq ptr %16, null
  br i1 %tobool.not, label %if.end9.if.end16_crit_edge, label %land.lhs.true

if.end9.if.end16_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

land.lhs.true:                                    ; preds = %if.end9
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %tobool13.not = icmp sgt i32 %18, -1
  br i1 %tobool13.not, label %land.lhs.true.if.end16_crit_edge, label %if.then14

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then14:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @kfree(ptr noundef nonnull %16) #14
  br label %if.end16

if.end16:                                         ; preds = %if.then14, %land.lhs.true.if.end16_crit_edge, %if.end9.if.end16_crit_edge
  %best_interface_config = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %19 = ptrtoint ptr %best_interface_config to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %best_interface_config, align 8
  tail call void @kfree(ptr noundef %20) #14
  %manufacturer.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 3
  %21 = ptrtoint ptr %manufacturer.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %manufacturer.i, align 8
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.end16.nand_manufacturer_cleanup.exit_crit_edge, label %land.lhs.true.i

if.end16.nand_manufacturer_cleanup.exit_crit_edge: ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_cleanup.exit

land.lhs.true.i:                                  ; preds = %if.end16
  %ops.i = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %22, i32 0, i32 2
  %23 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i, align 4
  %tobool3.not.i = icmp eq ptr %24, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.nand_manufacturer_cleanup.exit_crit_edge, label %land.lhs.true4.i

land.lhs.true.i.nand_manufacturer_cleanup.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_cleanup.exit

land.lhs.true4.i:                                 ; preds = %land.lhs.true.i
  %cleanup.i = getelementptr inbounds %struct.nand_manufacturer_ops, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %cleanup.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cleanup.i, align 4
  %tobool8.not.i = icmp eq ptr %26, null
  br i1 %tobool8.not.i, label %land.lhs.true4.i.nand_manufacturer_cleanup.exit_crit_edge, label %if.then.i

land.lhs.true4.i.nand_manufacturer_cleanup.exit_crit_edge: ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_manufacturer_cleanup.exit

if.then.i:                                        ; preds = %land.lhs.true4.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %26(ptr noundef %chip) #14
  br label %nand_manufacturer_cleanup.exit

nand_manufacturer_cleanup.exit:                   ; preds = %if.then.i, %land.lhs.true4.i.nand_manufacturer_cleanup.exit_crit_edge, %land.lhs.true.i.nand_manufacturer_cleanup.exit_crit_edge, %if.end16.nand_manufacturer_cleanup.exit_crit_edge
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %27 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %controller.i, align 4
  %ops.i35 = getelementptr inbounds %struct.nand_controller, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %ops.i35 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops.i35, align 4
  %tobool.not.i36 = icmp eq ptr %30, null
  br i1 %tobool.not.i36, label %nand_manufacturer_cleanup.exit.nand_detach.exit_crit_edge, label %land.lhs.true.i38

nand_manufacturer_cleanup.exit.nand_detach.exit_crit_edge: ; preds = %nand_manufacturer_cleanup.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_detach.exit

land.lhs.true.i38:                                ; preds = %nand_manufacturer_cleanup.exit
  %detach_chip.i = getelementptr inbounds %struct.nand_controller_ops, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %detach_chip.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %detach_chip.i, align 4
  %tobool3.not.i37 = icmp eq ptr %32, null
  br i1 %tobool3.not.i37, label %land.lhs.true.i38.nand_detach.exit_crit_edge, label %if.then.i39

land.lhs.true.i38.nand_detach.exit_crit_edge:     ; preds = %land.lhs.true.i38
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_detach.exit

if.then.i39:                                      ; preds = %land.lhs.true.i38
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %32(ptr noundef %chip) #14
  br label %nand_detach.exit

nand_detach.exit:                                 ; preds = %if.then.i39, %land.lhs.true.i38.nand_detach.exit_crit_edge, %nand_manufacturer_cleanup.exit.nand_detach.exit_crit_edge
  %parameters.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2
  %33 = ptrtoint ptr %parameters.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %parameters.i, align 4
  tail call void @kfree(ptr noundef %34) #14
  %onfi.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 4
  %35 = ptrtoint ptr %onfi.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %onfi.i, align 4
  tail call void @kfree(ptr noundef %36) #14
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nanddev_cleanup(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_do_write_oob(ptr noundef %chip, i64 noundef %to, ptr nocapture noundef %ops) unnamed_addr #4 align 64 {
entry:
  %status.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_do_write_oob.__UNIQUE_ID_ddebug254, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_write_oob, %if.then)) #14
          to label %do.end [label %if.then], !srcloc !385

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %conv = trunc i64 %to to i32
  %ooblen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 3
  %0 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ooblen, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_do_write_oob.__UNIQUE_ID_ddebug254, ptr noundef nonnull @.str.19, ptr noundef nonnull @.str.17, i32 noundef %conv, i32 noundef %1) #14
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i = icmp eq i32 %3, 1
  %oobavail.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 7
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %cond.in.i = select i1 %cmp.i, ptr %oobavail.i, ptr %oobsize.i
  %4 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %ooboffs = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %5 = ptrtoint ptr %ooboffs to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ooboffs, align 4
  %ooblen5 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 3
  %7 = ptrtoint ptr %ooblen5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ooblen5, align 4
  %add = add i32 %8, %6
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %cond.i)
  %cmp = icmp ugt i32 %add, %cond.i
  br i1 %cmp, label %do.body8, label %if.end24

do.body8:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_do_write_oob.__UNIQUE_ID_ddebug255, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_write_oob, %if.then20)) #14
          to label %cleanup [label %if.then20], !srcloc !385

if.then20:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_do_write_oob.__UNIQUE_ID_ddebug255, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.17) #14
  br label %cleanup

if.end24:                                         ; preds = %do.end
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %9 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %10 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %cmp29.not.i = icmp eq i8 %10, 0
  br i1 %cmp29.not.i, label %if.end24.if.end29_crit_edge, label %for.body.lr.ph.i

if.end24.if.end29_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

for.body.lr.ph.i:                                 ; preds = %if.end24
  %conv26 = zext i32 %8 to i64
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %11 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %conv26, %to
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i107, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %12, i32 %i.030.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %14)
  %cmp3.not.i = icmp ugt i64 %add.i, %14
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %12, i32 %i.030.i, i32 1
  %15 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %16, %14
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %to)
  %cmp8.not.i = icmp ugt i64 %add7.i, %to
  br i1 %cmp8.not.i, label %do.body.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_write_oob, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %to, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup_crit_edge, label %if.then12.i.if.end29_crit_edge

if.then12.i.if.end29_crit_edge:                   ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then12.i.cleanup_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i107 = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i ], [ %cmp.i107, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup_crit_edge, label %nand_region_is_secured.exit.if.end29_crit_edge

nand_region_is_secured.exit.if.end29_crit_edge:   ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

nand_region_is_secured.exit.cleanup_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end29:                                         ; preds = %nand_region_is_secured.exit.if.end29_crit_edge, %if.then12.i.if.end29_crit_edge, %if.end24.if.end29_crit_edge
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %17 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %chip_shift, align 4
  %sh_prom = zext i32 %18 to i64
  %shr = ashr i64 %to, %sh_prom
  %conv30 = trunc i64 %shr to i32
  %call31 = tail call i32 @nand_reset(ptr noundef %chip, i32 noundef %conv30)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %if.end29.cleanup_crit_edge

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %if.end29
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %19 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %20, i32 %conv30)
  %cmp.i108 = icmp ult i32 %20, %conv30
  br i1 %cmp.i108, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end34
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %21 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %conv30, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %22 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %23, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %23(ptr noundef %chip, i32 noundef %conv30) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %24 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %page_shift, align 4
  %sh_prom35 = zext i32 %25 to i64
  %shr36 = ashr i64 %to, %sh_prom35
  %conv37 = trunc i64 %shr36 to i32
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status.i) #14
  %26 = ptrtoint ptr %status.i to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 -1, ptr %status.i, align 1, !annotation !380
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %27 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %options.i, align 8
  %and.i = and i32 %28, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %nand_check_wp.exit.thread

nand_check_wp.exit.thread:                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %if.end41

if.end.i:                                         ; preds = %nand_select_target.exit
  %call.i = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %nand_check_wp.exit, label %nand_check_wp.exit.thread128

nand_check_wp.exit.thread128:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %if.then40

nand_check_wp.exit:                               ; preds = %if.end.i
  %29 = ptrtoint ptr %status.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %status.i, align 1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool39.not = icmp slt i8 %30, 0
  br i1 %tobool39.not, label %nand_check_wp.exit.if.end41_crit_edge, label %nand_check_wp.exit.if.then40_crit_edge

nand_check_wp.exit.if.then40_crit_edge:           ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then40

nand_check_wp.exit.if.end41_crit_edge:            ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end41

if.then40:                                        ; preds = %nand_check_wp.exit.if.then40_crit_edge, %nand_check_wp.exit.thread128
  %select_chip.i110 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %31 = ptrtoint ptr %select_chip.i110 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %select_chip.i110, align 8
  %tobool.not.i111 = icmp eq ptr %32, null
  br i1 %tobool.not.i111, label %if.then40.nand_deselect_target.exit_crit_edge, label %if.then.i

if.then40.nand_deselect_target.exit_crit_edge:    ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %if.then40
  call void @__sanitizer_cov_trace_pc() #16
  call void %32(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %if.then40.nand_deselect_target.exit_crit_edge
  %cur_cs.i112 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %33 = ptrtoint ptr %cur_cs.i112 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 -1, ptr %cur_cs.i112, align 4
  br label %cleanup

if.end41:                                         ; preds = %nand_check_wp.exit.if.end41_crit_edge, %nand_check_wp.exit.thread
  %page42 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %34 = ptrtoint ptr %page42 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %page42, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %conv37)
  %cmp43 = icmp eq i32 %35, %conv37
  br i1 %cmp43, label %if.then45, label %if.end41.if.end48_crit_edge

if.end41.if.end48_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then45:                                        ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %page42 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -1, ptr %page42, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %if.end41.if.end48_crit_edge
  %oobbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 7
  %37 = ptrtoint ptr %oobbuf to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %oobbuf, align 4
  %39 = ptrtoint ptr %ooblen5 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ooblen5, align 4
  %oob_poi.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %41 = ptrtoint ptr %oob_poi.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %oob_poi.i, align 4
  %43 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %oobsize.i, align 4
  %45 = call ptr @memset(ptr %42, i32 255, i32 %44)
  %46 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ops, align 4
  %48 = zext i32 %47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %48, ptr @__sancov_gen_cov_switch_values.147)
  switch i32 %47, label %do.body16.i [
    i32 0, label %if.end48.sw.bb.i_crit_edge
    i32 2, label %if.end48.sw.bb.i_crit_edge138
    i32 1, label %sw.bb3.i
  ]

if.end48.sw.bb.i_crit_edge138:                    ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.end48.sw.bb.i_crit_edge:                       ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.end48.sw.bb.i_crit_edge, %if.end48.sw.bb.i_crit_edge138
  %49 = ptrtoint ptr %oob_poi.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %oob_poi.i, align 4
  %51 = ptrtoint ptr %ooboffs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %ooboffs, align 4
  %add.ptr.i = getelementptr i8, ptr %50, i32 %52
  %53 = call ptr @memcpy(ptr %add.ptr.i, ptr %38, i32 %40)
  br label %nand_fill_oob.exit

sw.bb3.i:                                         ; preds = %if.end48
  %54 = ptrtoint ptr %oob_poi.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %oob_poi.i, align 4
  %56 = ptrtoint ptr %ooboffs to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %ooboffs, align 4
  %call6.i = call i32 @mtd_ooblayout_set_databytes(ptr noundef %chip, ptr noundef %38, ptr noundef %55, i32 noundef %57, i32 noundef %40) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not.i115 = icmp eq i32 %call6.i, 0
  br i1 %tobool.not.i115, label %sw.bb3.i.nand_fill_oob.exit_crit_edge, label %do.body9.i, !prof !379

sw.bb3.i.nand_fill_oob.exit_crit_edge:            ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_fill_oob.exit

do.body9.i:                                       ; preds = %sw.bb3.i
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 406, 0\0A.popsection", ""() #14, !srcloc !387
  unreachable

do.body16.i:                                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 410, 0\0A.popsection", ""() #14, !srcloc !388
  unreachable

nand_fill_oob.exit:                               ; preds = %sw.bb3.i.nand_fill_oob.exit_crit_edge, %sw.bb.i
  %58 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %59)
  %cmp51 = icmp eq i32 %59, 2
  %write_oob = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 25
  %write_oob_raw = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 22
  %.sink.in = select i1 %cmp51, ptr %write_oob_raw, ptr %write_oob
  %60 = ptrtoint ptr %.sink.in to i32
  call void @__asan_load4_noabort(i32 %60)
  %.sink = load ptr, ptr %.sink.in, align 4
  %pagemask56 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %61 = ptrtoint ptr %pagemask56 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %pagemask56, align 8
  %and57 = and i32 %62, %conv37
  %call58 = call i32 %.sink(ptr noundef %chip, i32 noundef %and57) #14
  %select_chip.i117 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %63 = ptrtoint ptr %select_chip.i117 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %select_chip.i117, align 8
  %tobool.not.i118 = icmp eq ptr %64, null
  br i1 %tobool.not.i118, label %nand_fill_oob.exit.nand_deselect_target.exit122_crit_edge, label %if.then.i119

nand_fill_oob.exit.nand_deselect_target.exit122_crit_edge: ; preds = %nand_fill_oob.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit122

if.then.i119:                                     ; preds = %nand_fill_oob.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void %64(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit122

nand_deselect_target.exit122:                     ; preds = %if.then.i119, %nand_fill_oob.exit.nand_deselect_target.exit122_crit_edge
  %cur_cs.i120 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %65 = ptrtoint ptr %cur_cs.i120 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 -1, ptr %cur_cs.i120, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool60.not = icmp eq i32 %call58, 0
  br i1 %tobool60.not, label %if.end62, label %nand_deselect_target.exit122.cleanup_crit_edge

nand_deselect_target.exit122.cleanup_crit_edge:   ; preds = %nand_deselect_target.exit122
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end62:                                         ; preds = %nand_deselect_target.exit122
  call void @__sanitizer_cov_trace_pc() #16
  %66 = ptrtoint ptr %ooblen5 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %ooblen5, align 4
  %oobretlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 4
  %68 = ptrtoint ptr %oobretlen to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %67, ptr %oobretlen, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end62, %nand_deselect_target.exit122.cleanup_crit_edge, %nand_deselect_target.exit, %if.end29.cleanup_crit_edge, %nand_region_is_secured.exit.cleanup_crit_edge, %if.then12.i.cleanup_crit_edge, %if.then20, %do.body8
  %retval.0 = phi i32 [ -30, %nand_deselect_target.exit ], [ 0, %if.end62 ], [ -22, %if.then20 ], [ -5, %nand_region_is_secured.exit.cleanup_crit_edge ], [ %call31, %if.end29.cleanup_crit_edge ], [ %call58, %nand_deselect_target.exit122.cleanup_crit_edge ], [ -22, %do.body8 ], [ -5, %if.then12.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @nand_fill_oob(ptr noundef %chip, ptr noundef %oob, i32 noundef %len, ptr nocapture noundef readonly %ops) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %0 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %2 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oobsize, align 4
  %4 = call ptr @memset(ptr %1, i32 255, i32 %3)
  %5 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ops, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.148)
  switch i32 %6, label %do.body16 [
    i32 0, label %entry.sw.bb_crit_edge
    i32 2, label %entry.sw.bb_crit_edge35
    i32 1, label %sw.bb3
  ]

entry.sw.bb_crit_edge35:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

entry.sw.bb_crit_edge:                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

sw.bb:                                            ; preds = %entry.sw.bb_crit_edge, %entry.sw.bb_crit_edge35
  %8 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %oob_poi, align 4
  %ooboffs = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %10 = ptrtoint ptr %ooboffs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ooboffs, align 4
  %add.ptr = getelementptr i8, ptr %9, i32 %11
  %12 = call ptr @memcpy(ptr %add.ptr, ptr %oob, i32 %len)
  br label %cleanup

sw.bb3:                                           ; preds = %entry
  %13 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %oob_poi, align 4
  %ooboffs5 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %15 = ptrtoint ptr %ooboffs5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ooboffs5, align 4
  %call6 = tail call i32 @mtd_ooblayout_set_databytes(ptr noundef %chip, ptr noundef %oob, ptr noundef %14, i32 noundef %16, i32 noundef %len) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %sw.bb3.cleanup_crit_edge, label %do.body9, !prof !379

sw.bb3.cleanup_crit_edge:                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.body9:                                         ; preds = %sw.bb3
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 406, 0\0A.popsection", ""() #14, !srcloc !387
  unreachable

do.body16:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 410, 0\0A.popsection", ""() #14, !srcloc !388
  unreachable

cleanup:                                          ; preds = %sw.bb3.cleanup_crit_edge, %sw.bb
  %retval.0 = getelementptr i8, ptr %oob, i32 %len
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_set_databytes(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nand_op_trace(ptr noundef %prefix, ptr nocapture noundef readonly %instr) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  %0 = ptrtoint ptr %instr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %instr, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.149)
  switch i32 %1, label %entry.sw.epilog_crit_edge [
    i32 0, label %do.body
    i32 1, label %do.body4
    i32 2, label %do.body27
    i32 3, label %do.body48
    i32 4, label %do.body71
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_trace.__UNIQUE_ID_ddebug242, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_trace, %if.then)) #14
          to label %sw.epilog [label %if.then], !srcloc !385

if.then:                                          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  %ctx = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1
  %3 = ptrtoint ptr %ctx to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %ctx, align 4
  %conv = zext i8 %4 to i32
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_trace.__UNIQUE_ID_ddebug242, ptr noundef nonnull @.str.31, ptr noundef %prefix, i32 noundef %conv) #14
  br label %sw.epilog

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_trace.__UNIQUE_ID_ddebug243, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_trace, %if.then16)) #14
          to label %sw.epilog [label %if.then16], !srcloc !385

if.then16:                                        ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #16
  %ctx17 = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1
  %5 = ptrtoint ptr %ctx17 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ctx17, align 4
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 64)
  %addrs = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1, i32 0, i32 1
  %8 = ptrtoint ptr %addrs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %addrs, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_trace.__UNIQUE_ID_ddebug243, ptr noundef nonnull @.str.33, ptr noundef %prefix, i32 noundef %6, i32 noundef %7, ptr noundef %9) #14
  br label %sw.epilog

do.body27:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_trace.__UNIQUE_ID_ddebug244, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_trace, %if.then39)) #14
          to label %sw.epilog [label %if.then39], !srcloc !385

if.then39:                                        ; preds = %do.body27
  call void @__sanitizer_cov_trace_pc() #16
  %ctx40 = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1
  %10 = ptrtoint ptr %ctx40 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ctx40, align 4
  %force_8bit = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1, i32 0, i32 2
  %12 = ptrtoint ptr %force_8bit to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %force_8bit, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool42.not = icmp eq i8 %13, 0
  %cond44 = select i1 %tobool42.not, ptr @.str.37, ptr @.str.36
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_trace.__UNIQUE_ID_ddebug244, ptr noundef nonnull @.str.35, ptr noundef %prefix, i32 noundef %11, ptr noundef nonnull %cond44) #14
  br label %sw.epilog

do.body48:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_trace.__UNIQUE_ID_ddebug245, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_trace, %if.then60)) #14
          to label %sw.epilog [label %if.then60], !srcloc !385

if.then60:                                        ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #16
  %ctx61 = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1
  %14 = ptrtoint ptr %ctx61 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ctx61, align 4
  %force_8bit64 = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1, i32 0, i32 2
  %16 = ptrtoint ptr %force_8bit64 to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %force_8bit64, align 4, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool65.not = icmp eq i8 %17, 0
  %cond67 = select i1 %tobool65.not, ptr @.str.37, ptr @.str.36
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_trace.__UNIQUE_ID_ddebug245, ptr noundef nonnull @.str.39, ptr noundef %prefix, i32 noundef %15, ptr noundef nonnull %cond67) #14
  br label %sw.epilog

do.body71:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_op_trace.__UNIQUE_ID_ddebug246, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_op_trace, %if.then83)) #14
          to label %sw.epilog [label %if.then83], !srcloc !385

if.then83:                                        ; preds = %do.body71
  call void @__sanitizer_cov_trace_pc() #16
  %ctx84 = getelementptr inbounds %struct.nand_op_instr, ptr %instr, i32 0, i32 1
  %18 = ptrtoint ptr %ctx84 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ctx84, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_op_trace.__UNIQUE_ID_ddebug246, ptr noundef nonnull @.str.41, ptr noundef %prefix, i32 noundef %19) #14
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then83, %do.body71, %if.then60, %do.body48, %if.then39, %do.body27, %if.then16, %do.body4, %if.then, %do.body, %entry.sw.epilog_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nand_get_reset_interface_config() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight8(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_isbad_bbt(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_isbad_bbm(ptr noundef %chip, i64 noundef %ofs) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %0 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %options, align 8
  %and = and i32 %1, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %erasesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %2 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %3 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp29.not.i = icmp eq i8 %3, 0
  br i1 %cmp29.not.i, label %if.end.if.end3_crit_edge, label %for.body.lr.ph.i

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

for.body.lr.ph.i:                                 ; preds = %if.end
  %4 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %erasesize, align 8
  %conv = zext i32 %5 to i64
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %6 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %conv, %ofs
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %7, i32 %i.030.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %9)
  %cmp3.not.i = icmp ugt i64 %add.i, %9
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %7, i32 %i.030.i, i32 1
  %10 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %11, %9
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %ofs)
  %cmp8.not.i = icmp ugt i64 %add7.i, %ofs
  br i1 %cmp8.not.i, label %do.body.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_isbad_bbm, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %ofs, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup_crit_edge, label %if.then12.i.if.end3_crit_edge

if.then12.i.if.end3_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

if.then12.i.cleanup_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i ], [ %cmp.i, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup_crit_edge, label %nand_region_is_secured.exit.if.end3_crit_edge

nand_region_is_secured.exit.if.end3_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end3

nand_region_is_secured.exit.cleanup_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %nand_region_is_secured.exit.if.end3_crit_edge, %if.then12.i.if.end3_crit_edge, %if.end.if.end3_crit_edge
  call void @__asan_load1_noabort(i32 ptrtoint (ptr @mtd_expert_analysis_mode to i32))
  %12 = load i8, ptr @mtd_expert_analysis_mode, align 1, !range !384
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool4.not = icmp eq i8 %12, 0
  br i1 %tobool4.not, label %if.end45, label %land.rhs

land.rhs:                                         ; preds = %if.end3
  %.b63 = load i1, ptr @nand_isbad_bbm.__already_done, align 1
  br i1 %.b63, label %land.rhs.cleanup_crit_edge, label %if.then13, !prof !379

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then13:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  store i1 true, ptr @nand_isbad_bbm.__already_done, align 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mtd_expert_analysis_warning to i32))
  %13 = load ptr, ptr @mtd_expert_analysis_warning, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 324, i32 noundef 9, ptr noundef %13) #14
  br label %cleanup

if.end45:                                         ; preds = %if.end3
  %block_bad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 11
  %14 = ptrtoint ptr %block_bad to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %block_bad, align 4
  %tobool46.not = icmp eq ptr %15, null
  br i1 %tobool46.not, label %if.end51, label %if.then47

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #16
  %call50 = tail call i32 %15(ptr noundef %chip, i64 noundef %ofs) #14
  br label %cleanup

if.end51:                                         ; preds = %if.end45
  %page_shift.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %16 = ptrtoint ptr %page_shift.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %page_shift.i, align 4
  %sh_prom.i = zext i32 %17 to i64
  %shr.i = ashr i64 %ofs, %sh_prom.i
  %conv.i65 = trunc i64 %shr.i to i32
  %pagemask.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %18 = ptrtoint ptr %pagemask.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pagemask.i, align 8
  %and.i = and i32 %19, %conv.i65
  %20 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %erasesize, align 8
  %writesize.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %22 = ptrtoint ptr %writesize.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %writesize.i.i, align 4
  %sub.i.i = sub i32 %21, %23
  %shr.i.i = lshr i32 %sub.i.i, %17
  %and.i.i = and i32 %shr.i.i, %19
  %24 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %options, align 8
  %and1.i.i = and i32 %25, 117440512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i.i = icmp ne i32 %and1.i.i, 0
  %and5.i.i = and i32 %25, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  %or.cond.i.i = and i1 %tobool.not.i.i, %tobool6.not.i.i
  br i1 %or.cond.i.i, label %land.lhs.true10.i.i, label %if.end51.while.body.lr.ph.i_crit_edge

if.end51.while.body.lr.ph.i_crit_edge:            ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph.i

land.lhs.true10.i.i:                              ; preds = %if.end51
  %and12.i.i = and i32 %25, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i.i)
  %tobool13.not.i.i = icmp eq i32 %and12.i.i, 0
  br i1 %tobool13.not.i.i, label %if.end15.i.i, label %land.lhs.true10.i.i.while.body.lr.ph.i_crit_edge

land.lhs.true10.i.i.while.body.lr.ph.i_crit_edge: ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph.i

if.end15.i.i:                                     ; preds = %land.lhs.true10.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp16.not.i.i = icmp slt i32 %and.i.i, 0
  %and19.i.i = and i32 %25, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i.i)
  %tobool20.not.i.i = icmp eq i32 %and19.i.i, 0
  %or.cond.i = select i1 %cmp16.not.i.i, i1 true, i1 %tobool20.not.i.i
  br i1 %or.cond.i, label %if.end15.i.i.cleanup_crit_edge, label %if.end15.i.i.while.body.lr.ph.i_crit_edge

if.end15.i.i.while.body.lr.ph.i_crit_edge:        ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.lr.ph.i

if.end15.i.i.cleanup_crit_edge:                   ; preds = %if.end15.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.body.lr.ph.i:                               ; preds = %if.end15.i.i.while.body.lr.ph.i_crit_edge, %land.lhs.true10.i.i.while.body.lr.ph.i_crit_edge, %if.end51.while.body.lr.ph.i_crit_edge
  %retval.0.i.ph.i = phi i32 [ %and.i.i, %if.end15.i.i.while.body.lr.ph.i_crit_edge ], [ 1, %land.lhs.true10.i.i.while.body.lr.ph.i_crit_edge ], [ 0, %if.end51.while.body.lr.ph.i_crit_edge ]
  %read_oob150.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %oob_poi.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %badblockpos.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 11
  %badblockbits.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 12
  br label %while.body.i

while.body.i:                                     ; preds = %nand_bbm_get_next_page.exit143.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %page_offset.0145.i = phi i32 [ %retval.0.i.ph.i, %while.body.lr.ph.i ], [ %retval.0.i142.i, %nand_bbm_get_next_page.exit143.i.while.body.i_crit_edge ]
  %26 = ptrtoint ptr %read_oob150.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %read_oob150.i, align 8
  %add.i66 = add i32 %page_offset.0145.i, %and.i
  %call2.i = tail call i32 %27(ptr noundef %chip, i32 noundef %add.i66) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %cmp3.i = icmp slt i32 %call2.i, 0
  br i1 %cmp3.i, label %while.body.i.cleanup_crit_edge, label %if.end.i

while.body.i.cleanup_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %while.body.i
  %28 = ptrtoint ptr %oob_poi.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %oob_poi.i, align 4
  %30 = ptrtoint ptr %badblockpos.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %badblockpos.i, align 4
  %arrayidx.i67 = getelementptr i8, ptr %29, i32 %31
  %32 = ptrtoint ptr %arrayidx.i67 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %arrayidx.i67, align 1
  %34 = ptrtoint ptr %badblockbits.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %badblockbits.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %35)
  %cmp5.i = icmp eq i32 %35, 8
  br i1 %cmp5.i, label %if.then8.i, label %cond.false.i, !prof !379

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %33)
  %cmp10.not.i = icmp eq i8 %33, -1
  br i1 %cmp10.not.i, label %if.then8.i.if.end8.i.i_crit_edge, label %if.then8.i.cleanup_crit_edge

if.then8.i.cleanup_crit_edge:                     ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then8.i.if.end8.i.i_crit_edge:                 ; preds = %if.then8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

cond.false.i:                                     ; preds = %if.end.i
  %conv75.i = zext i8 %33 to i32
  %call.i.i = tail call i32 @__sw_hweight8(i32 noundef %conv75.i) #14
  %36 = ptrtoint ptr %badblockbits.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %badblockbits.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %call.i.i, i32 %37)
  %cmp78.i = icmp ult i32 %call.i.i, %37
  br i1 %cmp78.i, label %cond.false.i.cleanup_crit_edge, label %cond.false.i.if.end8.i.i_crit_edge

cond.false.i.if.end8.i.i_crit_edge:               ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8.i.i

cond.false.i.cleanup_crit_edge:                   ; preds = %cond.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8.i.i:                                      ; preds = %cond.false.i.if.end8.i.i_crit_edge, %if.then8.i.if.end8.i.i_crit_edge
  %add84.i = add nuw i32 %page_offset.0145.i, 1
  %38 = ptrtoint ptr %erasesize to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %erasesize, align 8
  %40 = ptrtoint ptr %writesize.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %writesize.i.i, align 4
  %sub.i120.i = sub i32 %39, %41
  %42 = ptrtoint ptr %page_shift.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %page_shift.i, align 4
  %shr.i122.i = lshr i32 %sub.i120.i, %43
  %44 = ptrtoint ptr %pagemask.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pagemask.i, align 8
  %and.i124.i = and i32 %shr.i122.i, %45
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %add84.i)
  %cmp9.i.i = icmp slt i32 %add84.i, 2
  br i1 %cmp9.i.i, label %land.lhs.true10.i134.i, label %if.end8.i.i.if.end15.i136.i_crit_edge

if.end8.i.i.if.end15.i136.i_crit_edge:            ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i136.i

land.lhs.true10.i134.i:                           ; preds = %if.end8.i.i
  %46 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %options, align 8
  %and12.i132.i = and i32 %47, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i132.i)
  %tobool13.not.i133.i = icmp eq i32 %and12.i132.i, 0
  br i1 %tobool13.not.i133.i, label %land.lhs.true10.i134.i.if.end15.i136.i_crit_edge, label %land.lhs.true10.i134.i.nand_bbm_get_next_page.exit143.i_crit_edge

land.lhs.true10.i134.i.nand_bbm_get_next_page.exit143.i_crit_edge: ; preds = %land.lhs.true10.i134.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_bbm_get_next_page.exit143.i

land.lhs.true10.i134.i.if.end15.i136.i_crit_edge: ; preds = %land.lhs.true10.i134.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15.i136.i

if.end15.i136.i:                                  ; preds = %land.lhs.true10.i134.i.if.end15.i136.i_crit_edge, %if.end8.i.i.if.end15.i136.i_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i124.i, i32 %add84.i)
  %cmp16.not.i135.i = icmp slt i32 %and.i124.i, %add84.i
  br i1 %cmp16.not.i135.i, label %if.end15.i136.i.cleanup_crit_edge, label %land.lhs.true17.i140.i

if.end15.i136.i.cleanup_crit_edge:                ; preds = %if.end15.i136.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.lhs.true17.i140.i:                           ; preds = %if.end15.i136.i
  %48 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %options, align 8
  %and19.i138.i = and i32 %49, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19.i138.i)
  %tobool20.not.i139.i = icmp eq i32 %and19.i138.i, 0
  br i1 %tobool20.not.i139.i, label %land.lhs.true17.i140.i.cleanup_crit_edge, label %land.lhs.true17.i140.i.nand_bbm_get_next_page.exit143.i_crit_edge

land.lhs.true17.i140.i.nand_bbm_get_next_page.exit143.i_crit_edge: ; preds = %land.lhs.true17.i140.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_bbm_get_next_page.exit143.i

land.lhs.true17.i140.i.cleanup_crit_edge:         ; preds = %land.lhs.true17.i140.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_bbm_get_next_page.exit143.i:                 ; preds = %land.lhs.true17.i140.i.nand_bbm_get_next_page.exit143.i_crit_edge, %land.lhs.true10.i134.i.nand_bbm_get_next_page.exit143.i_crit_edge
  %retval.0.i142.i = phi i32 [ 1, %land.lhs.true10.i134.i.nand_bbm_get_next_page.exit143.i_crit_edge ], [ %and.i124.i, %land.lhs.true17.i140.i.nand_bbm_get_next_page.exit143.i_crit_edge ]
  %cmp.i68 = icmp sgt i32 %retval.0.i142.i, -1
  br i1 %cmp.i68, label %nand_bbm_get_next_page.exit143.i.while.body.i_crit_edge, label %nand_bbm_get_next_page.exit143.i.cleanup_crit_edge

nand_bbm_get_next_page.exit143.i.cleanup_crit_edge: ; preds = %nand_bbm_get_next_page.exit143.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_bbm_get_next_page.exit143.i.while.body.i_crit_edge: ; preds = %nand_bbm_get_next_page.exit143.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

cleanup:                                          ; preds = %nand_bbm_get_next_page.exit143.i.cleanup_crit_edge, %land.lhs.true17.i140.i.cleanup_crit_edge, %if.end15.i136.i.cleanup_crit_edge, %cond.false.i.cleanup_crit_edge, %if.then8.i.cleanup_crit_edge, %while.body.i.cleanup_crit_edge, %if.end15.i.i.cleanup_crit_edge, %if.then47, %if.then13, %land.rhs.cleanup_crit_edge, %nand_region_is_secured.exit.cleanup_crit_edge, %if.then12.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call50, %if.then47 ], [ 0, %entry.cleanup_crit_edge ], [ -5, %nand_region_is_secured.exit.cleanup_crit_edge ], [ 0, %if.then13 ], [ 0, %land.rhs.cleanup_crit_edge ], [ -5, %if.then12.i.cleanup_crit_edge ], [ 0, %if.end15.i.i.cleanup_crit_edge ], [ %call2.i, %while.body.i.cleanup_crit_edge ], [ 1, %cond.false.i.cleanup_crit_edge ], [ 0, %nand_bbm_get_next_page.exit143.i.cleanup_crit_edge ], [ 1, %if.then8.i.cleanup_crit_edge ], [ 0, %if.end15.i136.i.cleanup_crit_edge ], [ 0, %land.lhs.true17.i140.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_count_phandle_with_args(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #8

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nand_set_defaults(ptr noundef %chip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %dummy_controller = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 16
  %2 = ptrtoint ptr %controller to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %dummy_controller, ptr %controller, align 4
  tail call void @__mutex_init(ptr noundef %dummy_controller, ptr noundef nonnull @.str.80, ptr noundef nonnull @nand_controller_init.__key) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @nand_legacy_set_defaults(ptr noundef %chip) #14
  %buf_align = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 25
  %3 = ptrtoint ptr %buf_align to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %buf_align, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %if.then4, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %buf_align to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %buf_align, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_legacy_check_hooks(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_get_nand_ecc_user_config(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_variable_u32_array(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_find_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_string(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcasecmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @nand_legacy_set_defaults(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nand_get_manufacturer_desc(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_onfi_detect(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_jedec_detect(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nand_manufacturer_detect(ptr noundef %chip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %manufacturer = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 3
  %0 = ptrtoint ptr %manufacturer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %manufacturer, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.else_crit_edge, label %land.lhs.true

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %ops = getelementptr inbounds %struct.nand_manufacturer_desc, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %tobool3.not = icmp eq ptr %3, null
  br i1 %tobool3.not, label %land.lhs.true.if.else_crit_edge, label %land.lhs.true4

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool8.not = icmp eq ptr %5, null
  br i1 %tobool8.not, label %land.lhs.true4.if.else_crit_edge, label %if.then

land.lhs.true4.if.else_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #16
  %memorg.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1
  %arrayidx = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 2
  %8 = lshr i8 %7, 2
  %9 = and i8 %8, 3
  %narrow.i = add nuw nsw i8 %9, 1
  %add.i = zext i8 %narrow.i to i32
  %10 = ptrtoint ptr %memorg.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %add.i, ptr %memorg.i, align 4
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %12, align 4
  tail call void %14(ptr noundef %chip) #14
  br label %if.end

if.else:                                          ; preds = %land.lhs.true4.if.else_crit_edge, %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %memorg.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1
  %arrayidx.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 2
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %arrayidx.i, align 1
  %17 = lshr i8 %16, 2
  %18 = and i8 %17, 3
  %narrow.i.i = add nuw nsw i8 %18, 1
  %add.i.i = zext i8 %narrow.i.i to i32
  %19 = ptrtoint ptr %memorg.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %add.i.i, ptr %memorg.i.i, align 4
  %arrayidx3.i = getelementptr %struct.nand_chip, ptr %chip, i32 0, i32 1, i32 0, i32 3
  %20 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %arrayidx3.i, align 1
  %conv.i = zext i8 %21 to i32
  %and.i = and i32 %conv.i, 3
  %shl.i = shl nuw nsw i32 1024, %and.i
  %pagesize.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 1
  %22 = ptrtoint ptr %pagesize.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %shl.i, ptr %pagesize.i, align 4
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %23 = ptrtoint ptr %writesize.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %shl.i, ptr %writesize.i, align 4
  %24 = lshr i32 %conv.i, 2
  %and5.i = and i32 %24, 1
  %shl6.i = shl nuw nsw i32 8, %and5.i
  %shr8.i = lshr exact i32 %shl.i, 9
  %mul.i = mul nuw nsw i32 %shl6.i, %shr8.i
  %oobsize.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 2
  %25 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %mul.i, ptr %oobsize.i, align 4
  %oobsize10.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %26 = ptrtoint ptr %oobsize10.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %mul.i, ptr %oobsize10.i, align 4
  %27 = lshr i32 %conv.i, 4
  %and12.i = and i32 %27, 3
  %shl13.i = shl nuw nsw i32 65536, %and12.i
  %28 = add nuw nsw i32 %and.i, 10
  %div39.i = lshr i32 %shl13.i, %28
  %pages_per_eraseblock.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 3
  %29 = ptrtoint ptr %pages_per_eraseblock.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %div39.i, ptr %pages_per_eraseblock.i, align 4
  %erasesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 3
  %30 = ptrtoint ptr %erasesize.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %shl13.i, ptr %erasesize.i, align 8
  %31 = and i32 %conv.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i = icmp eq i32 %31, 0
  br i1 %tobool.not.i, label %if.else.if.end_crit_edge, label %if.then.i

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %32 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %options.i, align 8
  %or.i = or i32 %33, 2
  store i32 %or.i, ptr %options.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.else.if.end_crit_edge, %if.then
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.cttz.i32(i32, i1 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @nand_legacy_adjust_cmdfunc(ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nand_get_small_page_ooblayout() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nand_get_large_page_hamming_ooblayout() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nand_get_large_page_ooblayout() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_count_freebytes(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @nand_ecc_is_strong_enough(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nanddev_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_erase(ptr noundef %mtd, ptr nocapture noundef %instr) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call1 = tail call i32 @nand_erase_nand(ptr noundef %mtd, ptr noundef %instr, i32 noundef 0)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @panic_nand_write(ptr noundef %mtd, i64 noundef %to, i32 noundef %len, ptr nocapture noundef writeonly %retlen, ptr noundef %buf) #4 align 64 {
entry:
  %status.i = alloca i8, align 1
  %ops = alloca %struct.mtd_oob_ops, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 19
  %0 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip_shift, align 4
  %sh_prom = zext i32 %1 to i64
  %shr = ashr i64 %to, %sh_prom
  %conv = trunc i64 %shr to i32
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ops) #14
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %mtd, i32 0, i32 1, i32 8
  %2 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %conv)
  %cmp.i = icmp ult i32 %3, %conv
  br i1 %cmp.i, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %entry
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 28
  %4 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 5, i32 2
  %5 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %6, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %6(ptr noundef %mtd, i32 noundef %conv) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %dev_ready.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 5, i32 9
  br label %for.body.i

for.body.i:                                       ; preds = %if.end13.i.for.body.i_crit_edge, %nand_select_target.exit
  %i.024.i = phi i32 [ 0, %nand_select_target.exit ], [ %inc.i, %if.end13.i.for.body.i_crit_edge ]
  %7 = ptrtoint ptr %dev_ready.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev_ready.i, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.body.i
  %call.i = call i32 %8(ptr noundef %mtd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool3.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool3.not.i, label %if.then.i.if.end13.i_crit_edge, label %if.then.i.panic_nand_wait.exit_crit_edge

if.then.i.panic_nand_wait.exit_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %panic_nand_wait.exit

if.then.i.if.end13.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13.i

if.else.i:                                        ; preds = %for.body.i
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status.i) #14
  %9 = ptrtoint ptr %status.i to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 -1, ptr %status.i, align 1, !annotation !380
  %call5.i = call i32 @nand_read_data_op(ptr noundef %mtd, ptr noundef nonnull %status.i, i32 noundef 1, i1 noundef zeroext true, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.else.i.cleanup.thread.i_crit_edge

if.else.i.cleanup.thread.i_crit_edge:             ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i

if.end8.i:                                        ; preds = %if.else.i
  %10 = ptrtoint ptr %status.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %status.i, align 1
  %12 = and i8 %11, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool9.not.i = icmp eq i8 %12, 0
  br i1 %tobool9.not.i, label %cleanup.i, label %if.end8.i.cleanup.thread.i_crit_edge

if.end8.i.cleanup.thread.i_crit_edge:             ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.thread.i

cleanup.thread.i:                                 ; preds = %if.end8.i.cleanup.thread.i_crit_edge, %if.else.i.cleanup.thread.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %panic_nand_wait.exit

cleanup.i:                                        ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %if.end13.i

if.end13.i:                                       ; preds = %cleanup.i, %if.then.i.if.end13.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %13 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %13(i32 noundef 214748000) #14
  %inc.i = add nuw nsw i32 %i.024.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 400
  br i1 %exitcond.not.i, label %if.end13.i.panic_nand_wait.exit_crit_edge, label %if.end13.i.for.body.i_crit_edge

if.end13.i.for.body.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

if.end13.i.panic_nand_wait.exit_crit_edge:        ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %panic_nand_wait.exit

panic_nand_wait.exit:                             ; preds = %if.end13.i.panic_nand_wait.exit_crit_edge, %cleanup.thread.i, %if.then.i.panic_nand_wait.exit_crit_edge
  %14 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 6
  %15 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 2
  %16 = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 1
  %17 = getelementptr inbounds i8, ptr %ops, i32 8
  %18 = call ptr @memset(ptr %17, i32 0, i32 24)
  %19 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %len, ptr %16, align 4
  %20 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %buf, ptr %14, align 4
  %21 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %ops, align 4
  %call2 = call fastcc i32 @nand_do_write_ops(ptr noundef %mtd, i64 noundef %to, ptr noundef nonnull %ops)
  %22 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %15, align 4
  %24 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %retlen, align 4
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ops) #14
  ret i32 %call2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_oob(ptr noundef %mtd, i64 noundef %from, ptr nocapture noundef %ops) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %retlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 2
  %0 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %retlen, align 4
  %1 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %switch = icmp ult i32 %2, 3
  br i1 %switch, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %3 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end8, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end8:                                          ; preds = %if.end
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %4 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %5, i32 noundef 0) #14
  %datbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 6
  %6 = ptrtoint ptr %datbuf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %datbuf, align 4
  %tobool9.not = icmp eq ptr %7, null
  br i1 %tobool9.not, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %call11 = tail call fastcc i32 @nand_do_read_oob(ptr noundef %mtd, i64 noundef %from, ptr noundef %ops)
  br label %if.end13

if.else:                                          ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %call12 = tail call fastcc i32 @nand_do_read_ops(ptr noundef %mtd, i64 noundef %from, ptr noundef %ops)
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then10
  %ret.0 = phi i32 [ %call12, %if.else ], [ %call11, %if.then10 ]
  %8 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_unlock(ptr noundef %9) #14
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end13, %if.end.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ %ret.0, %if.end13 ], [ -16, %if.end.cleanup.sink.split_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -524, %entry.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_oob(ptr noundef %mtd, i64 noundef %to, ptr nocapture noundef %ops) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %retlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 2
  %0 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %retlen, align 4
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %1 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %2 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %3, i32 noundef 0) #14
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %5)
  %switch = icmp ult i32 %5, 3
  br i1 %switch, label %sw.epilog, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

sw.epilog:                                        ; preds = %if.end
  %datbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 6
  %6 = ptrtoint ptr %datbuf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %datbuf, align 4
  %tobool2.not = icmp eq ptr %7, null
  br i1 %tobool2.not, label %if.then3, label %if.else

if.then3:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %call4 = tail call fastcc i32 @nand_do_write_oob(ptr noundef %mtd, i64 noundef %to, ptr noundef %ops)
  br label %out

if.else:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %call5 = tail call fastcc i32 @nand_do_write_ops(ptr noundef %mtd, i64 noundef %to, ptr noundef %ops)
  br label %out

out:                                              ; preds = %if.else, %if.then3, %if.end.out_crit_edge
  %ret.0 = phi i32 [ 0, %if.end.out_crit_edge ], [ %call5, %if.else ], [ %call4, %if.then3 ]
  %8 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_unlock(ptr noundef %9) #14
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %out ], [ -16, %entry.cleanup_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nand_sync(ptr noundef %mtd) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_sync.__UNIQUE_ID_ddebug303, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_sync, %if.then)) #14
          to label %do.end [label %if.then], !srcloc !385

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_sync.__UNIQUE_ID_ddebug303, ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.136) #14
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %0 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %nand_get_device.exit.thread, label %do.end21

nand_get_device.exit.thread:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %1 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %2, i32 noundef 0) #14
  br label %if.end27

do.end21:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4573, i32 noundef 9, ptr noundef null) #14
  br label %if.end27

if.end27:                                         ; preds = %do.end21, %nand_get_device.exit.thread
  %controller.i38 = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %3 = ptrtoint ptr %controller.i38 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller.i38, align 4
  tail call void @mutex_unlock(ptr noundef %4) #14
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_lock(ptr noundef %mtd, i64 noundef %ofs, i64 noundef %len) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock_area = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 4, i32 2
  %0 = ptrtoint ptr %lock_area to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lock_area, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 %1(ptr noundef %mtd, i64 noundef %ofs, i64 noundef %len) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_unlock(ptr noundef %mtd, i64 noundef %ofs, i64 noundef %len) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %unlock_area = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 4, i32 3
  %0 = ptrtoint ptr %unlock_area to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %unlock_area, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call3 = tail call i32 %1(ptr noundef %mtd, i64 noundef %ofs, i64 noundef %len) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ -524, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_suspend(ptr noundef %mtd) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #14
  %ops = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 4
  %0 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.then5_crit_edge, label %if.end

entry.if.then5_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

if.end:                                           ; preds = %entry
  %call3 = tail call i32 %1(ptr noundef %mtd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.end.if.then5_crit_edge, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.end.if.then5_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5

if.then5:                                         ; preds = %if.end.if.then5_crit_edge, %entry.if.then5_crit_edge
  %suspended = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %2 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %suspended, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %suspended, align 8
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %ret.016 = phi i32 [ 0, %if.then5 ], [ %call3, %if.end.if.end6_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock) #14
  ret i32 %ret.016
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nand_resume(ptr noundef %mtd) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock, i32 noundef 0) #14
  %suspended = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %0 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %suspended, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool.not, label %do.end, label %if.then

if.then:                                          ; preds = %entry
  %resume = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 4, i32 1
  %1 = ptrtoint ptr %resume to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %resume, align 4
  %tobool1.not = icmp eq ptr %2, null
  br i1 %tobool1.not, label %if.then.if.end_crit_edge, label %if.then2

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %2(ptr noundef %mtd) #14
  br label %if.end

if.end:                                           ; preds = %if.then2, %if.then.if.end_crit_edge
  %3 = ptrtoint ptr %suspended to i32
  call void @__asan_load1_noabort(i32 %3)
  %bf.load6 = load i8, ptr %suspended, align 8
  %bf.clear = and i8 %bf.load6, 127
  store i8 %bf.clear, ptr %suspended, align 8
  br label %if.end8

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.139, ptr noundef nonnull @.str.140) #19
  br label %if.end8

if.end8:                                          ; preds = %do.end, %if.end
  tail call void @mutex_unlock(ptr noundef %lock) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @nand_shutdown(ptr noundef %mtd) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %ops.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 4
  %0 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ops.i, align 8
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.if.then5.i_crit_edge, label %if.end.i

entry.if.then5.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5.i

if.end.i:                                         ; preds = %entry
  %call3.i = tail call i32 %1(ptr noundef %mtd) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %if.end.i.if.then5.i_crit_edge, label %if.end.i.nand_suspend.exit_crit_edge

if.end.i.nand_suspend.exit_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_suspend.exit

if.end.i.if.then5.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then5.i

if.then5.i:                                       ; preds = %if.end.i.if.then5.i_crit_edge, %entry.if.then5.i_crit_edge
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %2 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %suspended.i, align 8
  br label %nand_suspend.exit

nand_suspend.exit:                                ; preds = %if.then5.i, %if.end.i.nand_suspend.exit_crit_edge
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_block_isreserved(ptr noundef %mtd, i64 noundef %ofs) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bbt = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 16
  %0 = ptrtoint ptr %bbt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bbt, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1 = tail call i32 @nand_isreserved_bbt(ptr noundef %mtd, i64 noundef %ofs) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_block_isbad(ptr noundef %mtd, i64 noundef %offs) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 19
  %0 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip_shift, align 4
  %lock.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i, i32 noundef 0) #14
  %suspended.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %2 = ptrtoint ptr %suspended.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load.i = load i8, ptr %suspended.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i)
  %tobool.not.i = icmp sgt i8 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %3 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %4, i32 noundef 0) #14
  %sh_prom = zext i32 %1 to i64
  %shr = ashr i64 %offs, %sh_prom
  %conv = trunc i64 %shr to i32
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %mtd, i32 0, i32 1, i32 8
  %5 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %conv)
  %cmp.i = icmp ult i32 %6, %conv
  br i1 %cmp.i, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 28
  %7 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 5, i32 2
  %8 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %9, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %9(ptr noundef %mtd, i32 noundef %conv) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %bbt.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 16
  %10 = ptrtoint ptr %bbt.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bbt.i, align 8
  %tobool.not.i13 = icmp eq ptr %11, null
  br i1 %tobool.not.i13, label %if.end.i15, label %if.then.i14

if.then.i14:                                      ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call.i = tail call i32 @nand_isbad_bbt(ptr noundef %mtd, i64 noundef %offs, i32 noundef 0) #14
  br label %nand_block_checkbad.exit

if.end.i15:                                       ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @nand_isbad_bbm(ptr noundef %mtd, i64 noundef %offs) #14
  br label %nand_block_checkbad.exit

nand_block_checkbad.exit:                         ; preds = %if.end.i15, %if.then.i14
  %retval.0.i16 = phi i32 [ %call.i, %if.then.i14 ], [ %call1.i, %if.end.i15 ]
  %select_chip.i17 = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 5, i32 2
  %12 = ptrtoint ptr %select_chip.i17 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %select_chip.i17, align 8
  %tobool.not.i18 = icmp eq ptr %13, null
  br i1 %tobool.not.i18, label %nand_block_checkbad.exit.nand_deselect_target.exit_crit_edge, label %if.then.i19

nand_block_checkbad.exit.nand_deselect_target.exit_crit_edge: ; preds = %nand_block_checkbad.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i19:                                      ; preds = %nand_block_checkbad.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %13(ptr noundef %mtd, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i19, %nand_block_checkbad.exit.nand_deselect_target.exit_crit_edge
  %cur_cs.i20 = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 28
  %14 = ptrtoint ptr %cur_cs.i20 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1, ptr %cur_cs.i20, align 4
  %15 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %controller.i, align 4
  tail call void @mutex_unlock(ptr noundef %16) #14
  br label %cleanup

cleanup:                                          ; preds = %nand_deselect_target.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i16, %nand_deselect_target.exit ], [ -16, %entry.cleanup_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %lock.i) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_block_markbad(ptr noundef %mtd, i64 noundef %ofs) #4 align 64 {
entry:
  %einfo.i = alloca %struct.erase_info, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nand_block_isbad(ptr noundef %mtd, i64 noundef %ofs)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end2, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %0 = tail call i32 @llvm.smin.i32(i32 %call, i32 0)
  br label %cleanup

if.end2:                                          ; preds = %entry
  %bbt_options.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 10
  %1 = ptrtoint ptr %bbt_options.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %bbt_options.i, align 8
  %and.i = and i32 %2, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.end2.if.end6.i_crit_edge

if.end2.if.end6.i_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end2
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %einfo.i) #14
  %3 = getelementptr inbounds %struct.erase_info, ptr %einfo.i, i32 0, i32 1
  %4 = getelementptr inbounds i8, ptr %einfo.i, i32 16
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 0, ptr %4, align 8
  %6 = ptrtoint ptr %einfo.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %ofs, ptr %einfo.i, align 8
  %phys_erase_shift.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 18
  %7 = ptrtoint ptr %phys_erase_shift.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %phys_erase_shift.i, align 8
  %sh_prom.i = zext i32 %8 to i64
  %shl.i = shl nuw i64 1, %sh_prom.i
  %9 = ptrtoint ptr %3 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %shl.i, ptr %3, align 8
  %call1.i = call i32 @nand_erase_nand(ptr noundef %mtd, ptr noundef nonnull %einfo.i, i32 noundef 0) #14
  %lock.i.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 26
  tail call void @mutex_lock_nested(ptr noundef %lock.i.i, i32 noundef 0) #14
  %suspended.i.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 27
  %10 = ptrtoint ptr %suspended.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %bf.load.i.i = load i8, ptr %suspended.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %cleanup.thread.i, label %cleanup.i

cleanup.thread.i:                                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 32
  %11 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %controller.i.i, align 4
  tail call void @mutex_lock_nested(ptr noundef %12, i32 noundef 0) #14
  %call5.i = tail call i32 @nand_markbad_bbm(ptr noundef %mtd, i64 noundef %ofs) #14
  %13 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %controller.i.i, align 4
  tail call void @mutex_unlock(ptr noundef %14) #14
  tail call void @mutex_unlock(ptr noundef %lock.i.i) #14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %einfo.i) #14
  br label %if.end6.i

cleanup.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @mutex_unlock(ptr noundef %lock.i.i) #14
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %einfo.i) #14
  br label %cleanup

if.end6.i:                                        ; preds = %cleanup.thread.i, %if.end2.if.end6.i_crit_edge
  %ret.1.i = phi i32 [ 0, %if.end2.if.end6.i_crit_edge ], [ %call5.i, %cleanup.thread.i ]
  %bbt.i = getelementptr inbounds %struct.nand_chip, ptr %mtd, i32 0, i32 16
  %15 = ptrtoint ptr %bbt.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %bbt.i, align 8
  %tobool7.not.i = icmp eq ptr %16, null
  br i1 %tobool7.not.i, label %if.end6.i.if.end13.i_crit_edge, label %if.then8.i

if.end6.i.if.end13.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #16
  %call9.i = tail call i32 @nand_markbad_bbt(ptr noundef %mtd, i64 noundef %ofs) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1.i)
  %tobool10.not.i = icmp eq i32 %ret.1.i, 0
  %spec.select.i = select i1 %tobool10.not.i, i32 %call9.i, i32 %ret.1.i
  br label %if.end13.i

if.end13.i:                                       ; preds = %if.then8.i, %if.end6.i.if.end13.i_crit_edge
  %ret.2.i = phi i32 [ %ret.1.i, %if.end6.i.if.end13.i_crit_edge ], [ %spec.select.i, %if.then8.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2.i)
  %tobool14.not.i = icmp eq i32 %ret.2.i, 0
  br i1 %tobool14.not.i, label %if.then15.i, label %if.end13.i.cleanup_crit_edge

if.end13.i.cleanup_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then15.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #16
  %badblocks.i = getelementptr inbounds %struct.mtd_info, ptr %mtd, i32 0, i32 52, i32 2
  %17 = ptrtoint ptr %badblocks.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %badblocks.i, align 4
  %inc.i = add i32 %18, 1
  store i32 %inc.i, ptr %badblocks.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then15.i, %if.end13.i.cleanup_crit_edge, %cleanup.i, %if.then
  %retval.0 = phi i32 [ %0, %if.then ], [ -16, %cleanup.i ], [ 0, %if.then15.i ], [ %ret.2.i, %if.end13.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nanddev_mtd_max_bad_blocks(ptr noundef, i64 noundef, i32 noundef) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_choose_interface_config(ptr noundef %chip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %controller.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %0 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %controller.i, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %lor.lhs.false.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %entry
  %ops.i = getelementptr inbounds %struct.nand_controller, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %tobool2.not.i = icmp eq ptr %3, null
  br i1 %tobool2.not.i, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false3.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %setup_interface.i = getelementptr inbounds %struct.nand_controller_ops, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %setup_interface.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %setup_interface.i, align 4
  %tobool6.not.i = icmp eq ptr %5, null
  br i1 %tobool6.not.i, label %lor.lhs.false3.i.cleanup_crit_edge, label %nand_controller_can_setup_interface.exit

lor.lhs.false3.i.cleanup_crit_edge:               ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_controller_can_setup_interface.exit:         ; preds = %lor.lhs.false3.i
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %6 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %options.i, align 8
  %and.i = and i32 %7, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool7.not.i, label %if.end, label %nand_controller_can_setup_interface.exit.cleanup_crit_edge

nand_controller_can_setup_interface.exit.cleanup_crit_edge: ; preds = %nand_controller_can_setup_interface.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %nand_controller_can_setup_interface.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %8 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %8, i32 noundef 3520, i32 noundef 192) #20
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %choose_interface_config = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 4, i32 5
  %9 = ptrtoint ptr %choose_interface_config to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %choose_interface_config, align 4
  %tobool4.not = icmp eq ptr %10, null
  br i1 %tobool4.not, label %if.else, label %if.end10

if.else:                                          ; preds = %if.end3
  %11 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %controller.i, align 4
  %ops1.i.i = getelementptr inbounds %struct.nand_controller, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %ops1.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops1.i.i, align 4
  %15 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 1, ptr %call7.i.i, align 8
  %onfi.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 2, i32 4
  %16 = ptrtoint ptr %onfi.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %onfi.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %17, null
  br i1 %tobool9.not.i.i, label %if.else.for.body.lr.ph.i.i_crit_edge, label %if.then10.i.i

if.else.for.body.lr.ph.i.i_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph.i.i

if.then10.i.i:                                    ; preds = %if.else
  %nvddr_timing_modes.i.i = getelementptr inbounds %struct.onfi_params, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %nvddr_timing_modes.i.i to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %nvddr_timing_modes.i.i, align 4
  %conv.i.i = zext i16 %19 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool.not.i.i.not.i = icmp eq i16 %19, 0
  %20 = tail call i32 @llvm.ctlz.i32(i32 %conv.i.i, i1 true) #14, !range !381
  %sub.i.op.i.i = xor i32 %20, 31
  br i1 %tobool.not.i.i.not.i, label %if.then10.i.i.if.end.i23_crit_edge, label %if.then10.i.i.for.body.lr.ph.i.i_crit_edge

if.then10.i.i.for.body.lr.ph.i.i_crit_edge:       ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph.i.i

if.then10.i.i.if.end.i23_crit_edge:               ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i23

for.body.lr.ph.i.i:                               ; preds = %if.then10.i.i.for.body.lr.ph.i.i_crit_edge, %if.else.for.body.lr.ph.i.i_crit_edge
  %best_mode.056.i.i = phi i32 [ 0, %if.else.for.body.lr.ph.i.i_crit_edge ], [ %sub.i.op.i.i, %if.then10.i.i.for.body.lr.ph.i.i_crit_edge ]
  %setup_interface17.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %14, i32 0, i32 3
  br label %for.body.i.i

for.cond.i.i:                                     ; preds = %for.body.i.i
  %dec.i.i = add nsw i32 %mode.051.i.i, -1
  %cmp.i.i = icmp sgt i32 %mode.051.i.i, 0
  br i1 %cmp.i.i, label %for.cond.i.i.for.body.i.i_crit_edge, label %for.cond.i.i.if.end.i23_crit_edge

for.cond.i.i.if.end.i23_crit_edge:                ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i23

for.cond.i.i.for.body.i.i_crit_edge:              ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %mode.051.i.i = phi i32 [ %best_mode.056.i.i, %for.body.lr.ph.i.i ], [ %dec.i.i, %for.cond.i.i.for.body.i.i_crit_edge ]
  tail call void @onfi_fill_interface_config(ptr noundef %chip, ptr noundef nonnull %call7.i.i, i32 noundef 1, i32 noundef %mode.051.i.i) #14
  %21 = ptrtoint ptr %setup_interface17.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %setup_interface17.i.i, align 4
  %call18.i.i = tail call i32 %22(ptr noundef %chip, i32 noundef -1, ptr noundef nonnull %call7.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i.i)
  %tobool19.not.i.i = icmp eq i32 %call18.i.i, 0
  br i1 %tobool19.not.i.i, label %for.body.i.i.if.end10.thread29_crit_edge, label %for.cond.i.i

for.body.i.i.if.end10.thread29_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.thread29

if.end.i23:                                       ; preds = %for.cond.i.i.if.end.i23_crit_edge, %if.then10.i.i.if.end.i23_crit_edge
  %23 = ptrtoint ptr %controller.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %controller.i, align 4
  %ops1.i5.i = getelementptr inbounds %struct.nand_controller, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %ops1.i5.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ops1.i5.i, align 4
  %27 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %call7.i.i, align 8
  %28 = ptrtoint ptr %onfi.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %onfi.i.i, align 4
  %tobool9.not.i7.i = icmp eq ptr %29, null
  br i1 %tobool9.not.i7.i, label %if.end.i23.for.body.lr.ph.i16.i_crit_edge, label %if.then10.i11.i

if.end.i23.for.body.lr.ph.i16.i_crit_edge:        ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph.i16.i

if.then10.i11.i:                                  ; preds = %if.end.i23
  %sdr_timing_modes.i.i = getelementptr inbounds %struct.onfi_params, ptr %29, i32 0, i32 6
  %30 = ptrtoint ptr %sdr_timing_modes.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %sdr_timing_modes.i.i, align 2
  %conv.i8.i = zext i16 %31 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %31)
  %tobool.not.i.i9.not.i = icmp eq i16 %31, 0
  %32 = tail call i32 @llvm.ctlz.i32(i32 %conv.i8.i, i1 true) #14, !range !381
  %sub.i.op.i10.i = xor i32 %32, 31
  br i1 %tobool.not.i.i9.not.i, label %if.then10.i11.i.if.then12_crit_edge, label %if.then10.i11.i.for.body.lr.ph.i16.i_crit_edge

if.then10.i11.i.for.body.lr.ph.i16.i_crit_edge:   ; preds = %if.then10.i11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.lr.ph.i16.i

if.then10.i11.i.if.then12_crit_edge:              ; preds = %if.then10.i11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then12

for.body.lr.ph.i16.i:                             ; preds = %if.then10.i11.i.for.body.lr.ph.i16.i_crit_edge, %if.end.i23.for.body.lr.ph.i16.i_crit_edge
  %best_mode.056.i14.i = phi i32 [ 0, %if.end.i23.for.body.lr.ph.i16.i_crit_edge ], [ %sub.i.op.i10.i, %if.then10.i11.i.for.body.lr.ph.i16.i_crit_edge ]
  %setup_interface17.i15.i = getelementptr inbounds %struct.nand_controller_ops, ptr %26, i32 0, i32 3
  br label %for.body.i23.i

for.cond.i19.i:                                   ; preds = %for.body.i23.i
  %dec.i17.i = add nsw i32 %mode.051.i20.i, -1
  %cmp.i18.i = icmp sgt i32 %mode.051.i20.i, 0
  br i1 %cmp.i18.i, label %for.cond.i19.i.for.body.i23.i_crit_edge, label %for.cond.i19.i.if.then12_crit_edge

for.cond.i19.i.if.then12_crit_edge:               ; preds = %for.cond.i19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then12

for.cond.i19.i.for.body.i23.i_crit_edge:          ; preds = %for.cond.i19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i23.i

for.body.i23.i:                                   ; preds = %for.cond.i19.i.for.body.i23.i_crit_edge, %for.body.lr.ph.i16.i
  %mode.051.i20.i = phi i32 [ %best_mode.056.i14.i, %for.body.lr.ph.i16.i ], [ %dec.i17.i, %for.cond.i19.i.for.body.i23.i_crit_edge ]
  tail call void @onfi_fill_interface_config(ptr noundef %chip, ptr noundef nonnull %call7.i.i, i32 noundef 0, i32 noundef %mode.051.i20.i) #14
  %33 = ptrtoint ptr %setup_interface17.i15.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %setup_interface17.i15.i, align 4
  %call18.i21.i = tail call i32 %34(ptr noundef %chip, i32 noundef -1, ptr noundef nonnull %call7.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18.i21.i)
  %tobool19.not.i22.i = icmp eq i32 %call18.i21.i, 0
  br i1 %tobool19.not.i22.i, label %for.body.i23.i.if.end10.thread29_crit_edge, label %for.cond.i19.i

for.body.i23.i.if.end10.thread29_crit_edge:       ; preds = %for.body.i23.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.thread29

if.end10.thread29:                                ; preds = %for.body.i23.i.if.end10.thread29_crit_edge, %for.body.i.i.if.end10.thread29_crit_edge
  %best_interface_config21.i24.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 8
  %35 = ptrtoint ptr %best_interface_config21.i24.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call7.i.i, ptr %best_interface_config21.i24.i, align 8
  br label %cleanup

if.end10:                                         ; preds = %if.end3
  %call8 = tail call i32 %10(ptr noundef %chip, ptr noundef nonnull %call7.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool11.not = icmp eq i32 %call8, 0
  br i1 %tobool11.not, label %if.end10.cleanup_crit_edge, label %if.end10.if.then12_crit_edge

if.end10.if.then12_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then12

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then12:                                        ; preds = %if.end10.if.then12_crit_edge, %for.cond.i19.i.if.then12_crit_edge, %if.then10.i11.i.if.then12_crit_edge
  %ret.028 = phi i32 [ %call8, %if.end10.if.then12_crit_edge ], [ -95, %if.then10.i11.i.if.then12_crit_edge ], [ %call18.i21.i, %for.cond.i19.i.if.then12_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end10.cleanup_crit_edge, %if.end10.thread29, %if.end.cleanup_crit_edge, %nand_controller_can_setup_interface.exit.cleanup_crit_edge, %lor.lhs.false3.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %nand_controller_can_setup_interface.exit.cleanup_crit_edge ], [ -12, %if.end.cleanup_crit_edge ], [ %ret.028, %if.then12 ], [ 0, %if.end10.cleanup_crit_edge ], [ 0, %if.end10.thread29 ], [ 0, %lor.lhs.false3.i.cleanup_crit_edge ], [ 0, %lor.lhs.false.i.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @of_get_nand_secure_regions(ptr nocapture noundef %chip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %of_node.i.i.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 56, i32 27
  %0 = ptrtoint ptr %of_node.i.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node.i.i.i, align 8
  %call1 = tail call ptr @of_find_property(ptr noundef %1, ptr noundef nonnull @.str.141, ptr noundef null) #14
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call i32 @of_property_count_elems_of_size(ptr noundef %1, ptr noundef nonnull @.str.141, i32 noundef 8) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call2)
  %cmp = icmp slt i32 %call2, 1
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %div4647 = lshr i32 %call2, 1
  %conv = trunc i32 %div4647 to i8
  %nr_secure_regions = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %2 = ptrtoint ptr %nr_secure_regions to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %conv, ptr %nr_secure_regions, align 8
  %conv6 = shl i32 %div4647, 4
  %3 = and i32 %conv6, 4080
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %3, i32 noundef 3520) #17
  %secure_regions = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %4 = ptrtoint ptr %secure_regions to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call8.i.i, ptr %secure_regions, align 4
  %tobool9.not = icmp eq ptr %call8.i.i, null
  br i1 %tobool9.not, label %if.end4.cleanup_crit_edge, label %for.cond.preheader

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %if.end4
  %5 = ptrtoint ptr %nr_secure_regions to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %nr_secure_regions, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %cmp1449.not = icmp eq i8 %6, 0
  br i1 %cmp1449.not, label %for.cond.preheader.cleanup_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %j.051 = phi i32 [ %add21, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %i.050 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %7 = ptrtoint ptr %secure_regions to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %secure_regions, align 4
  %arrayidx = getelementptr %struct.nand_secure_region, ptr %8, i32 %i.050
  %call17 = tail call i32 @of_property_read_u64_index(ptr noundef %1, ptr noundef nonnull @.str.141, i32 noundef %j.051, ptr noundef %arrayidx) #14
  %add = or i32 %j.051, 1
  %9 = ptrtoint ptr %secure_regions to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %secure_regions, align 4
  %size = getelementptr %struct.nand_secure_region, ptr %10, i32 %i.050, i32 1
  %call20 = tail call i32 @of_property_read_u64_index(ptr noundef %1, ptr noundef nonnull @.str.141, i32 noundef %add, ptr noundef %size) #14
  %inc = add nuw nsw i32 %i.050, 1
  %add21 = add nuw nsw i32 %j.051, 2
  %11 = ptrtoint ptr %nr_secure_regions to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %nr_secure_regions, align 8
  %conv13 = zext i8 %12 to i32
  %cmp14 = icmp ult i32 %inc, %conv13
  br i1 %cmp14, label %for.body.for.body_crit_edge, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call2, %if.end.cleanup_crit_edge ], [ -12, %if.end4.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ 0, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_create_bbt(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_page_hwecc(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %6 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %calc_buf, align 4
  %code_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %8 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %code_buf, align 8
  %call5 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool6.not127 = icmp eq i32 %5, 0
  br i1 %tobool6.not127, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  br label %for.body

for.body:                                         ; preds = %if.end11.for.body_crit_edge, %for.body.lr.ph
  %p.0130 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %if.end11.for.body_crit_edge ]
  %eccsteps.0129 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %if.end11.for.body_crit_edge ]
  %i.0128 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %if.end11.for.body_crit_edge ]
  %10 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %hwctl, align 4
  tail call void %11(ptr noundef %chip, i32 noundef 0) #14
  %call8 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %p.0130, i32 noundef %1, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end11:                                         ; preds = %for.body
  %12 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %calculate, align 8
  %arrayidx = getelementptr i8, ptr %7, i32 %i.0128
  %call13 = tail call i32 %13(ptr noundef %chip, ptr noundef %p.0130, ptr noundef %arrayidx) #14
  %dec = add i32 %eccsteps.0129, -1
  %add = add i32 %i.0128, %3
  %add.ptr = getelementptr i8, ptr %p.0130, i32 %1
  %tobool6.not = icmp eq i32 %dec, 0
  br i1 %tobool6.not, label %if.end11.for.end_crit_edge, label %if.end11.for.body_crit_edge

if.end11.for.body_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end11.for.end_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end11.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %14 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %16 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %oobsize, align 4
  %call14 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %15, i32 noundef %17, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %for.end
  %18 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %20 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %total, align 8
  %call20 = tail call i32 @mtd_ooblayout_get_eccbytes(ptr noundef %chip, ptr noundef %9, ptr noundef %19, i32 noundef 0, i32 noundef %21) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.end23, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end23:                                         ; preds = %if.end17
  %22 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %steps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool27.not131 = icmp eq i32 %23, 0
  br i1 %tobool27.not131, label %if.end23.cleanup_crit_edge, label %for.body28.lr.ph

if.end23.cleanup_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body28.lr.ph:                                 ; preds = %if.end23
  %correct = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %ecc_stats42 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %failed = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  br label %for.body28

for.body28:                                       ; preds = %if.end45.for.body28_crit_edge, %for.body28.lr.ph
  %max_bitflips.0139 = phi i32 [ 0, %for.body28.lr.ph ], [ %max_bitflips.1, %if.end45.for.body28_crit_edge ]
  %p.1134 = phi ptr [ %buf, %for.body28.lr.ph ], [ %add.ptr49, %if.end45.for.body28_crit_edge ]
  %eccsteps.1133 = phi i32 [ %23, %for.body28.lr.ph ], [ %dec47, %if.end45.for.body28_crit_edge ]
  %i.1132 = phi i32 [ 0, %for.body28.lr.ph ], [ %add48, %if.end45.for.body28_crit_edge ]
  %24 = ptrtoint ptr %correct to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %correct, align 4
  %arrayidx30 = getelementptr i8, ptr %9, i32 %i.1132
  %arrayidx31 = getelementptr i8, ptr %7, i32 %i.1132
  %call32 = tail call i32 %25(ptr noundef %chip, ptr noundef %p.1134, ptr noundef %arrayidx30, ptr noundef %arrayidx31) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %call32)
  %cmp = icmp eq i32 %call32, -74
  br i1 %cmp, label %land.lhs.true, label %for.body28.if.end39_crit_edge

for.body28.if.end39_crit_edge:                    ; preds = %for.body28
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end39

land.lhs.true:                                    ; preds = %for.body28
  %26 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %options, align 8
  %and = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool34.not = icmp eq i32 %and, 0
  br i1 %tobool34.not, label %land.lhs.true.if.then41_crit_edge, label %if.then35

land.lhs.true.if.then41_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41

if.then35:                                        ; preds = %land.lhs.true
  %28 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %strength, align 4
  %call.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %p.1134, i32 noundef %1, i32 noundef %29) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then35.if.then41_crit_edge, label %if.end.i

if.then35.if.then41_crit_edge:                    ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41

if.end.i:                                         ; preds = %if.then35
  %sub.i = sub i32 %29, %call.i
  %call1.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %arrayidx30, i32 noundef %3, i32 noundef %sub.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp2.i = icmp slt i32 %call1.i, 0
  br i1 %cmp2.i, label %if.end.i.if.then41_crit_edge, label %nand_check_erased_buf.exit.thread120

if.end.i.if.then41_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41

nand_check_erased_buf.exit.thread120:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %nand_check_erased_buf.exit.thread120.if.end11.i_crit_edge, label %if.then10.i

nand_check_erased_buf.exit.thread120.if.end11.i_crit_edge: ; preds = %nand_check_erased_buf.exit.thread120
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then10.i:                                      ; preds = %nand_check_erased_buf.exit.thread120
  call void @__sanitizer_cov_trace_pc() #16
  %30 = call ptr @memset(ptr %p.1134, i32 255, i32 %1)
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %nand_check_erased_buf.exit.thread120.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool12.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool12.not.i, label %if.end11.i.if.end17.i_crit_edge, label %if.then13.i

if.end11.i.if.end17.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  %31 = call ptr @memset(ptr %arrayidx30, i32 255, i32 %3)
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i.if.end17.i_crit_edge
  %add.i = add nuw i32 %call1.i, %call.i
  br label %if.end39

if.end39:                                         ; preds = %if.end17.i, %for.body28.if.end39_crit_edge
  %stat.0 = phi i32 [ %call32, %for.body28.if.end39_crit_edge ], [ %add.i, %if.end17.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stat.0)
  %cmp40 = icmp slt i32 %stat.0, 0
  br i1 %cmp40, label %if.end39.if.then41_crit_edge, label %if.else

if.end39.if.then41_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then41

if.then41:                                        ; preds = %if.end39.if.then41_crit_edge, %if.end.i.if.then41_crit_edge, %if.then35.if.then41_crit_edge, %land.lhs.true.if.then41_crit_edge
  %32 = ptrtoint ptr %failed to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %failed, align 4
  %inc = add i32 %33, 1
  store i32 %inc, ptr %failed, align 4
  br label %if.end45

if.else:                                          ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #16
  %34 = ptrtoint ptr %ecc_stats42 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ecc_stats42, align 4
  %add43 = add i32 %35, %stat.0
  store i32 %add43, ptr %ecc_stats42, align 4
  %36 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0139, i32 %stat.0)
  br label %if.end45

if.end45:                                         ; preds = %if.else, %if.then41
  %max_bitflips.1 = phi i32 [ %max_bitflips.0139, %if.then41 ], [ %36, %if.else ]
  %dec47 = add i32 %eccsteps.1133, -1
  %add48 = add i32 %i.1132, %3
  %add.ptr49 = getelementptr i8, ptr %p.1134, i32 %1
  %tobool27.not = icmp eq i32 %dec47, 0
  br i1 %tobool27.not, label %if.end45.cleanup_crit_edge, label %if.end45.for.body28_crit_edge

if.end45.for.body28_crit_edge:                    ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body28

if.end45.cleanup_crit_edge:                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end45.cleanup_crit_edge, %if.end23.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %for.end.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %entry.cleanup_crit_edge ], [ %call14, %for.end.cleanup_crit_edge ], [ %call20, %if.end17.cleanup_crit_edge ], [ 0, %if.end23.cleanup_crit_edge ], [ %max_bitflips.1, %if.end45.cleanup_crit_edge ], [ %call8, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_page_hwecc(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i69 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i70 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %6 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %calc_buf, align 4
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %8 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %entry.nand_prog_page_begin_op.exit.thread_crit_edge, label %lor.lhs.false.i.i

entry.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

lor.lhs.false.i.i:                                ; preds = %entry
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %11, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %13, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_prog_page_begin_op.exit.thread:              ; preds = %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, %entry.nand_prog_page_begin_op.exit.thread_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %14 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %15(ptr noundef %chip, i32 noundef 128, i32 noundef 0, i32 noundef %page) #14
  br label %for.cond.preheader

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, label %nand_prog_page_begin_op.exit.cleanup_crit_edge

nand_prog_page_begin_op.exit.cleanup_crit_edge:   ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge: ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, %nand_prog_page_begin_op.exit.thread
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool5.not121 = icmp eq i32 %5, 0
  br i1 %tobool5.not121, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  %16 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %17 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %18 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  br label %for.body

for.body:                                         ; preds = %if.end10.for.body_crit_edge, %for.body.lr.ph
  %p.0124 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %if.end10.for.body_crit_edge ]
  %eccsteps.0123 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %if.end10.for.body_crit_edge ]
  %i.0122 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %if.end10.for.body_crit_edge ]
  %19 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %hwctl, align 4
  call void %20(ptr noundef %chip, i32 noundef 1) #14
  %tobool1.not.i = icmp eq ptr %p.0124, null
  %or.cond.i = or i1 %tobool.not.i, %tobool1.not.i
  br i1 %or.cond.i, label %for.body.cleanup_crit_edge, label %if.end.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %for.body
  %21 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i61 = icmp eq ptr %22, null
  br i1 %tobool.not.i.i61, label %if.end.i.nand_write_data_op.exit.thread_crit_edge, label %lor.lhs.false.i.i64

if.end.i.nand_write_data_op.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

lor.lhs.false.i.i64:                              ; preds = %if.end.i
  %ops.i.i62 = getelementptr inbounds %struct.nand_controller, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %ops.i.i62 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i.i62, align 4
  %tobool2.not.i.i63 = icmp eq ptr %24, null
  br i1 %tobool2.not.i.i63, label %lor.lhs.false.i.i64.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i67

lor.lhs.false.i.i64.nand_write_data_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i64
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i67:                        ; preds = %lor.lhs.false.i.i64
  %exec_op.i.i65 = getelementptr inbounds %struct.nand_controller_ops, ptr %24, i32 0, i32 2
  %25 = ptrtoint ptr %exec_op.i.i65 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %exec_op.i.i65, align 4
  %tobool6.not.i.not.i66 = icmp eq ptr %26, null
  br i1 %tobool6.not.i.not.i66, label %nand_has_exec_op.exit.i67.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i67.nand_write_data_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i67
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i67
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %27 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 16777215, ptr %16, align 4
  %28 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 3, ptr %instrs.i, align 4
  %29 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %1, ptr %ctx.i, align 4
  %30 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %p.0124, ptr %buf4.i, align 4
  %31 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %32 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cur_cs.i, align 4
  %34 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %op.i, align 4
  %35 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %instrs.i, ptr %17, align 4
  %36 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1, ptr %18, align 4
  %37 = ptrtoint ptr %exec_op.i.i65 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %exec_op.i.i65, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %38, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread110_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread110_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread110

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %39 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %33, i32 %40)
  %cmp.not.i.i = icmp ult i32 %33, %40
  br i1 %cmp.not.i.i, label %nand_write_data_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit.thread110

nand_write_data_op.exit.thread:                   ; preds = %nand_has_exec_op.exit.i67.nand_write_data_op.exit.thread_crit_edge, %lor.lhs.false.i.i64.nand_write_data_op.exit.thread_crit_edge, %if.end.i.nand_write_data_op.exit.thread_crit_edge
  %41 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %write_buf.i, align 4
  call void %42(ptr noundef %chip, ptr noundef nonnull %p.0124, i32 noundef %1) #14
  br label %if.end10

nand_write_data_op.exit.thread110:                ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread110_crit_edge
  %retval.0.i34.i.ph = phi i32 [ -22, %do.end.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread110_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

nand_write_data_op.exit:                          ; preds = %if.end.i.i
  %call25.i.i = call i32 %38(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool8.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool8.not, label %nand_write_data_op.exit.if.end10_crit_edge, label %nand_write_data_op.exit.cleanup_crit_edge

nand_write_data_op.exit.cleanup_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit.if.end10_crit_edge:       ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.end10:                                         ; preds = %nand_write_data_op.exit.if.end10_crit_edge, %nand_write_data_op.exit.thread
  %43 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %calculate, align 8
  %arrayidx = getelementptr i8, ptr %7, i32 %i.0122
  %call12 = call i32 %44(ptr noundef %chip, ptr noundef nonnull %p.0124, ptr noundef %arrayidx) #14
  %dec = add i32 %eccsteps.0123, -1
  %add = add i32 %i.0122, %3
  %add.ptr = getelementptr i8, ptr %p.0124, i32 %1
  %tobool5.not = icmp eq i32 %dec, 0
  br i1 %tobool5.not, label %if.end10.for.end_crit_edge, label %if.end10.for.body_crit_edge

if.end10.for.body_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end10.for.end_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end10.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %45 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %47 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %total, align 8
  %call14 = call i32 @mtd_ooblayout_set_eccbytes(ptr noundef %chip, ptr noundef %7, ptr noundef %46, i32 noundef 0, i32 noundef %48) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end17:                                         ; preds = %for.end
  %49 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %oob_poi, align 4
  %51 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %oobsize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i71 = icmp eq i32 %52, 0
  %tobool1.not.i72 = icmp eq ptr %50, null
  %or.cond.i73 = or i1 %tobool1.not.i72, %tobool.not.i71
  br i1 %or.cond.i73, label %if.end17.cleanup_crit_edge, label %if.end.i76

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i76:                                       ; preds = %if.end17
  %53 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i75 = icmp eq ptr %54, null
  br i1 %tobool.not.i.i75, label %if.end.i76.nand_write_data_op.exit104.thread_crit_edge, label %lor.lhs.false.i.i79

if.end.i76.nand_write_data_op.exit104.thread_crit_edge: ; preds = %if.end.i76
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit104.thread

lor.lhs.false.i.i79:                              ; preds = %if.end.i76
  %ops.i.i77 = getelementptr inbounds %struct.nand_controller, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %ops.i.i77 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %ops.i.i77, align 4
  %tobool2.not.i.i78 = icmp eq ptr %56, null
  br i1 %tobool2.not.i.i78, label %lor.lhs.false.i.i79.nand_write_data_op.exit104.thread_crit_edge, label %nand_has_exec_op.exit.i82

lor.lhs.false.i.i79.nand_write_data_op.exit104.thread_crit_edge: ; preds = %lor.lhs.false.i.i79
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit104.thread

nand_has_exec_op.exit.i82:                        ; preds = %lor.lhs.false.i.i79
  %exec_op.i.i80 = getelementptr inbounds %struct.nand_controller_ops, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %exec_op.i.i80 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %exec_op.i.i80, align 4
  %tobool6.not.i.not.i81 = icmp eq ptr %58, null
  br i1 %tobool6.not.i.not.i81, label %nand_has_exec_op.exit.i82.nand_write_data_op.exit104.thread_crit_edge, label %nand_has_exec_op.exit.i.i92

nand_has_exec_op.exit.i82.nand_write_data_op.exit104.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i82
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit104.thread

nand_has_exec_op.exit.i.i92:                      ; preds = %nand_has_exec_op.exit.i82
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i69) #14
  %59 = getelementptr inbounds i8, ptr %instrs.i69, i32 12
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 16777215, ptr %59, align 4
  %61 = ptrtoint ptr %instrs.i69 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 3, ptr %instrs.i69, align 4
  %ctx.i83 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i69, i32 0, i32 1
  %62 = ptrtoint ptr %ctx.i83 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %52, ptr %ctx.i83, align 4
  %buf4.i84 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i69, i32 0, i32 1, i32 0, i32 1
  %63 = ptrtoint ptr %buf4.i84 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %50, ptr %buf4.i84, align 4
  %delay_ns.i86 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i69, i32 0, i32 2
  %64 = ptrtoint ptr %delay_ns.i86 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %delay_ns.i86, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i70) #14
  %65 = getelementptr inbounds %struct.nand_operation, ptr %op.i70, i32 0, i32 1
  %66 = getelementptr inbounds %struct.nand_operation, ptr %op.i70, i32 0, i32 2
  %cur_cs.i87 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %67 = ptrtoint ptr %cur_cs.i87 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %cur_cs.i87, align 4
  %69 = ptrtoint ptr %op.i70 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %op.i70, align 4
  %70 = ptrtoint ptr %65 to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %instrs.i69, ptr %65, align 4
  %71 = ptrtoint ptr %66 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 1, ptr %66, align 4
  %72 = ptrtoint ptr %exec_op.i.i80 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %exec_op.i.i80, align 4
  %tobool6.not.i.not.i.i91 = icmp eq ptr %73, null
  br i1 %tobool6.not.i.not.i.i91, label %nand_has_exec_op.exit.i.i92.nand_write_data_op.exit104.thread118_crit_edge, label %if.end.i.i95

nand_has_exec_op.exit.i.i92.nand_write_data_op.exit104.thread118_crit_edge: ; preds = %nand_has_exec_op.exit.i.i92
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit104.thread118

if.end.i.i95:                                     ; preds = %nand_has_exec_op.exit.i.i92
  %ntargets.i.i.i93 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %74 = ptrtoint ptr %ntargets.i.i.i93 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %ntargets.i.i.i93, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %68, i32 %75)
  %cmp.not.i.i94 = icmp ult i32 %68, %75
  br i1 %cmp.not.i.i94, label %nand_write_data_op.exit104, label %do.end.i.i96, !prof !379

do.end.i.i96:                                     ; preds = %if.end.i.i95
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit104.thread118

nand_write_data_op.exit104.thread:                ; preds = %nand_has_exec_op.exit.i82.nand_write_data_op.exit104.thread_crit_edge, %lor.lhs.false.i.i79.nand_write_data_op.exit104.thread_crit_edge, %if.end.i76.nand_write_data_op.exit104.thread_crit_edge
  %write_buf.i102 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %76 = ptrtoint ptr %write_buf.i102 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %write_buf.i102, align 4
  call void %77(ptr noundef %chip, ptr noundef nonnull %50, i32 noundef %52) #14
  br label %if.end22

nand_write_data_op.exit104.thread118:             ; preds = %do.end.i.i96, %nand_has_exec_op.exit.i.i92.nand_write_data_op.exit104.thread118_crit_edge
  %retval.0.i34.i99.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i92.nand_write_data_op.exit104.thread118_crit_edge ], [ -22, %do.end.i.i96 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i70) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i69) #14
  br label %cleanup

nand_write_data_op.exit104:                       ; preds = %if.end.i.i95
  %call25.i.i97 = call i32 %73(ptr noundef %chip, ptr noundef nonnull %op.i70, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i70) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i69) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i97)
  %tobool20.not = icmp eq i32 %call25.i.i97, 0
  br i1 %tobool20.not, label %nand_write_data_op.exit104.if.end22_crit_edge, label %nand_write_data_op.exit104.cleanup_crit_edge

nand_write_data_op.exit104.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit104
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit104.if.end22_crit_edge:    ; preds = %nand_write_data_op.exit104
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.end22:                                         ; preds = %nand_write_data_op.exit104.if.end22_crit_edge, %nand_write_data_op.exit104.thread
  %call23 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %nand_write_data_op.exit104.cleanup_crit_edge, %nand_write_data_op.exit104.thread118, %if.end17.cleanup_crit_edge, %for.end.cleanup_crit_edge, %nand_write_data_op.exit.cleanup_crit_edge, %nand_write_data_op.exit.thread110, %for.body.cleanup_crit_edge, %nand_prog_page_begin_op.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call23, %if.end22 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup_crit_edge ], [ %call14, %for.end.cleanup_crit_edge ], [ %call25.i.i97, %nand_write_data_op.exit104.cleanup_crit_edge ], [ %retval.0.i34.i.ph, %nand_write_data_op.exit.thread110 ], [ %retval.0.i34.i99.ph, %nand_write_data_op.exit104.thread118 ], [ -22, %if.end17.cleanup_crit_edge ], [ -22, %for.body.cleanup_crit_edge ], [ %call25.i.i, %nand_write_data_op.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_subpage(ptr noundef %chip, i32 noundef %data_offs, i32 noundef %readlen, ptr noundef %bufpoi, i32 noundef %page) #4 align 64 {
entry:
  %section = alloca i32, align 4
  %oobregion = alloca %struct.mtd_oob_region, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %0 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %options, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %section) #14
  %2 = ptrtoint ptr %section to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %section, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %oobregion) #14
  %3 = ptrtoint ptr %oobregion to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 0, ptr %oobregion, align 8
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size, align 8
  %div = udiv i32 %data_offs, %5
  %add = add i32 %data_offs, -1
  %sub = add i32 %add, %readlen
  %div3 = udiv i32 %sub, %5
  %sub4 = sub i32 %div3, %div
  %add5 = add i32 %sub4, 1
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %6 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bytes, align 4
  %mul = mul i32 %7, %div
  %mul9 = mul i32 %add5, %5
  %mul12 = mul i32 %add5, %7
  %mul15 = mul i32 %div, %5
  %add.ptr = getelementptr i8, ptr %bufpoi, i32 %mul15
  %call16 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %mul15, ptr noundef %add.ptr, i32 noundef %mul9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul12)
  %cmp226 = icmp sgt i32 %mul12, 0
  br i1 %cmp226, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.0228 = phi i32 [ 0, %for.body.lr.ph ], [ %add23, %for.body.for.body_crit_edge ]
  %p.0227 = phi ptr [ %add.ptr, %for.body.lr.ph ], [ %add.ptr26, %for.body.for.body_crit_edge ]
  %8 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %calculate, align 8
  %10 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %calc_buf, align 4
  %arrayidx = getelementptr i8, ptr %11, i32 %i.0228
  %call20 = tail call i32 %9(ptr noundef %chip, ptr noundef %p.0227, ptr noundef %arrayidx) #14
  %12 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %bytes, align 4
  %add23 = add i32 %13, %i.0228
  %14 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %size, align 8
  %add.ptr26 = getelementptr i8, ptr %p.0227, i32 %15
  %cmp = icmp slt i32 %add23, %mul12
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %call27 = call i32 @mtd_ooblayout_find_eccregion(ptr noundef %chip, i32 noundef %mul, ptr noundef nonnull %section, ptr noundef nonnull %oobregion) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end30:                                         ; preds = %for.end
  %length = getelementptr inbounds %struct.mtd_oob_region, ptr %oobregion, i32 0, i32 1
  %16 = ptrtoint ptr %length to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %length, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %mul12)
  %cmp31 = icmp ult i32 %17, %mul12
  br i1 %cmp31, label %if.then35, label %if.else

if.then35:                                        ; preds = %if.end30
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %18 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %writesize, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %20 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %oob_poi, align 4
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %22 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %oobsize, align 4
  %call36 = call i32 @nand_change_read_column_op(ptr noundef %chip, i32 noundef %19, ptr noundef %21, i32 noundef %23, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.then35.if.end67_crit_edge, label %if.then35.cleanup_crit_edge

if.then35.cleanup_crit_edge:                      ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then35.if.end67_crit_edge:                     ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.else:                                          ; preds = %if.end30
  %24 = ptrtoint ptr %oobregion to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %oobregion, align 8
  %and = lshr i32 %1, 1
  %and.lobit = and i32 %and, 1
  %neg = xor i32 %and.lobit, -1
  %and41 = and i32 %25, %neg
  %and44 = and i32 %25, %and.lobit
  %spec.select = add i32 %and44, %mul12
  %26 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %bytes, align 4
  %mul51 = mul i32 %27, %add5
  %add52 = add i32 %mul51, %25
  %and54 = and i32 %add52, %and.lobit
  %aligned_len.1 = add i32 %spec.select, %and54
  %writesize59 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %28 = ptrtoint ptr %writesize59 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %writesize59, align 4
  %add60 = add i32 %29, %and41
  %oob_poi61 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %30 = ptrtoint ptr %oob_poi61 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %oob_poi61, align 4
  %arrayidx62 = getelementptr i8, ptr %31, i32 %and41
  %call63 = call i32 @nand_change_read_column_op(ptr noundef %chip, i32 noundef %add60, ptr noundef %arrayidx62, i32 noundef %aligned_len.1, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call63)
  %tobool64.not = icmp eq i32 %call63, 0
  br i1 %tobool64.not, label %if.else.if.end67_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else.if.end67_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.end67:                                         ; preds = %if.else.if.end67_crit_edge, %if.then35.if.end67_crit_edge
  %code_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %32 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %code_buf, align 8
  %oob_poi69 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %34 = ptrtoint ptr %oob_poi69 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %oob_poi69, align 4
  %call70 = call i32 @mtd_ooblayout_get_eccbytes(ptr noundef %chip, ptr noundef %33, ptr noundef %35, i32 noundef %mul, i32 noundef %mul12) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call70)
  %tobool71.not = icmp ne i32 %call70, 0
  %cmp226.not = xor i1 %cmp226, true
  %brmerge = select i1 %tobool71.not, i1 true, i1 %cmp226.not
  br i1 %brmerge, label %if.end67.cleanup_crit_edge, label %for.body77.lr.ph

if.end67.cleanup_crit_edge:                       ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body77.lr.ph:                                 ; preds = %if.end67
  %correct = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %calc_buf83 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %options88 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %ecc_stats106 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %failed = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  br label %for.body77

for.body77:                                       ; preds = %if.end110.for.body77_crit_edge, %for.body77.lr.ph
  %max_bitflips.0239 = phi i32 [ 0, %for.body77.lr.ph ], [ %max_bitflips.1, %if.end110.for.body77_crit_edge ]
  %i.1235 = phi i32 [ 0, %for.body77.lr.ph ], [ %add114, %if.end110.for.body77_crit_edge ]
  %p.1230 = phi ptr [ %add.ptr, %for.body77.lr.ph ], [ %add.ptr117, %if.end110.for.body77_crit_edge ]
  %36 = ptrtoint ptr %correct to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %correct, align 4
  %38 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %code_buf, align 8
  %arrayidx81 = getelementptr i8, ptr %39, i32 %i.1235
  %40 = ptrtoint ptr %calc_buf83 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %calc_buf83, align 4
  %arrayidx84 = getelementptr i8, ptr %41, i32 %i.1235
  %call85 = call i32 %37(ptr noundef %chip, ptr noundef %p.1230, ptr noundef %arrayidx81, ptr noundef %arrayidx84) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %call85)
  %cmp86 = icmp eq i32 %call85, -74
  br i1 %cmp86, label %land.lhs.true, label %for.body77.if.end101_crit_edge

for.body77.if.end101_crit_edge:                   ; preds = %for.body77
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end101

land.lhs.true:                                    ; preds = %for.body77
  %42 = ptrtoint ptr %options88 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %options88, align 8
  %and89 = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %land.lhs.true.if.then103_crit_edge, label %if.then91

land.lhs.true.if.then103_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103

if.then91:                                        ; preds = %land.lhs.true
  %44 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %size, align 8
  %46 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %code_buf, align 8
  %arrayidx96 = getelementptr i8, ptr %47, i32 %i.1235
  %48 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %bytes, align 4
  %50 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %strength, align 4
  %call.i = call fastcc i32 @nand_check_erased_buf(ptr noundef %p.1230, i32 noundef %45, i32 noundef %51) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then91.if.then103_crit_edge, label %if.end.i

if.then91.if.then103_crit_edge:                   ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103

if.end.i:                                         ; preds = %if.then91
  %sub.i = sub i32 %51, %call.i
  %call1.i = call fastcc i32 @nand_check_erased_buf(ptr noundef %arrayidx96, i32 noundef %49, i32 noundef %sub.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp2.i = icmp slt i32 %call1.i, 0
  br i1 %cmp2.i, label %if.end.i.if.then103_crit_edge, label %nand_check_erased_buf.exit.thread220

if.end.i.if.then103_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103

nand_check_erased_buf.exit.thread220:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %nand_check_erased_buf.exit.thread220.if.end11.i_crit_edge, label %if.then10.i

nand_check_erased_buf.exit.thread220.if.end11.i_crit_edge: ; preds = %nand_check_erased_buf.exit.thread220
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then10.i:                                      ; preds = %nand_check_erased_buf.exit.thread220
  call void @__sanitizer_cov_trace_pc() #16
  %52 = call ptr @memset(ptr %p.1230, i32 255, i32 %45)
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %nand_check_erased_buf.exit.thread220.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool12.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool12.not.i, label %if.end11.i.if.end17.i_crit_edge, label %if.then13.i

if.end11.i.if.end17.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  %53 = call ptr @memset(ptr %arrayidx96, i32 255, i32 %49)
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i.if.end17.i_crit_edge
  %add.i = add nuw i32 %call1.i, %call.i
  br label %if.end101

if.end101:                                        ; preds = %if.end17.i, %for.body77.if.end101_crit_edge
  %stat.0 = phi i32 [ %call85, %for.body77.if.end101_crit_edge ], [ %add.i, %if.end17.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stat.0)
  %cmp102 = icmp slt i32 %stat.0, 0
  br i1 %cmp102, label %if.end101.if.then103_crit_edge, label %if.else105

if.end101.if.then103_crit_edge:                   ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then103

if.then103:                                       ; preds = %if.end101.if.then103_crit_edge, %if.end.i.if.then103_crit_edge, %if.then91.if.then103_crit_edge, %land.lhs.true.if.then103_crit_edge
  %54 = ptrtoint ptr %failed to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %failed, align 4
  %inc104 = add i32 %55, 1
  store i32 %inc104, ptr %failed, align 4
  br label %if.end110

if.else105:                                       ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #16
  %56 = ptrtoint ptr %ecc_stats106 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %ecc_stats106, align 4
  %add107 = add i32 %57, %stat.0
  store i32 %add107, ptr %ecc_stats106, align 4
  %58 = call i32 @llvm.umax.i32(i32 %max_bitflips.0239, i32 %stat.0)
  br label %if.end110

if.end110:                                        ; preds = %if.else105, %if.then103
  %max_bitflips.1 = phi i32 [ %max_bitflips.0239, %if.then103 ], [ %58, %if.else105 ]
  %59 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %bytes, align 4
  %add114 = add i32 %60, %i.1235
  %61 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %size, align 8
  %add.ptr117 = getelementptr i8, ptr %p.1230, i32 %62
  %cmp76 = icmp slt i32 %add114, %mul12
  br i1 %cmp76, label %if.end110.for.body77_crit_edge, label %if.end110.cleanup_crit_edge

if.end110.cleanup_crit_edge:                      ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end110.for.body77_crit_edge:                   ; preds = %if.end110
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body77

cleanup:                                          ; preds = %if.end110.cleanup_crit_edge, %if.end67.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then35.cleanup_crit_edge, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %entry.cleanup_crit_edge ], [ %call27, %for.end.cleanup_crit_edge ], [ %call36, %if.then35.cleanup_crit_edge ], [ %call63, %if.else.cleanup_crit_edge ], [ %call70, %if.end67.cleanup_crit_edge ], [ %max_bitflips.1, %if.end110.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %oobregion) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %section) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_subpage_hwecc(ptr noundef %chip, i32 noundef %offset, i32 noundef %data_len, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i108 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i109 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %0 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %oob_poi, align 4
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %2 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %calc_buf, align 4
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %4 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %6 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %8 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %steps, align 4
  %div = udiv i32 %offset, %5
  %add = add i32 %offset, -1
  %sub = add i32 %add, %data_len
  %div4 = udiv i32 %sub, %5
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %10 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %oobsize, align 4
  %div5 = udiv i32 %11, %9
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %12 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i, label %entry.nand_prog_page_begin_op.exit.thread_crit_edge, label %lor.lhs.false.i.i

entry.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

lor.lhs.false.i.i:                                ; preds = %entry
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %15, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %17, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_prog_page_begin_op.exit.thread:              ; preds = %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, %entry.nand_prog_page_begin_op.exit.thread_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %18 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %19(ptr noundef %chip, i32 noundef 128, i32 noundef 0, i32 noundef %page) #14
  br label %for.cond.preheader

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, label %nand_prog_page_begin_op.exit.cleanup_crit_edge

nand_prog_page_begin_op.exit.cleanup_crit_edge:   ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge: ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, %nand_prog_page_begin_op.exit.thread
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp160 = icmp sgt i32 %9, 0
  br i1 %cmp160, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  %20 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %21 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %22 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %oob_required)
  %tobool18.not = icmp eq i32 %oob_required, 0
  br label %for.body

for.body:                                         ; preds = %if.end24.for.body_crit_edge, %for.body.lr.ph
  %step.0167 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end24.for.body_crit_edge ]
  %ecc_calc.0165 = phi ptr [ %3, %for.body.lr.ph ], [ %add.ptr25, %if.end24.for.body_crit_edge ]
  %oob_buf.0164 = phi ptr [ %1, %for.body.lr.ph ], [ %add.ptr26, %if.end24.for.body_crit_edge ]
  %buf.addr.0161 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %if.end24.for.body_crit_edge ]
  %23 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %hwctl, align 4
  call void %24(ptr noundef %chip, i32 noundef 1) #14
  %tobool1.not.i = icmp eq ptr %buf.addr.0161, null
  %or.cond.i = or i1 %tobool.not.i, %tobool1.not.i
  br i1 %or.cond.i, label %for.body.cleanup_crit_edge, label %if.end.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %for.body
  %25 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i100 = icmp eq ptr %26, null
  br i1 %tobool.not.i.i100, label %if.end.i.nand_write_data_op.exit.thread_crit_edge, label %lor.lhs.false.i.i103

if.end.i.nand_write_data_op.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

lor.lhs.false.i.i103:                             ; preds = %if.end.i
  %ops.i.i101 = getelementptr inbounds %struct.nand_controller, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %ops.i.i101 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i.i101, align 4
  %tobool2.not.i.i102 = icmp eq ptr %28, null
  br i1 %tobool2.not.i.i102, label %lor.lhs.false.i.i103.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i106

lor.lhs.false.i.i103.nand_write_data_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i103
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i106:                       ; preds = %lor.lhs.false.i.i103
  %exec_op.i.i104 = getelementptr inbounds %struct.nand_controller_ops, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %exec_op.i.i104 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %exec_op.i.i104, align 4
  %tobool6.not.i.not.i105 = icmp eq ptr %30, null
  br i1 %tobool6.not.i.not.i105, label %nand_has_exec_op.exit.i106.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i106.nand_write_data_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i106
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i106
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %31 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 16777215, ptr %20, align 4
  %32 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 3, ptr %instrs.i, align 4
  %33 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %5, ptr %ctx.i, align 4
  %34 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %buf.addr.0161, ptr %buf4.i, align 4
  %35 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %36 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cur_cs.i, align 4
  %38 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %op.i, align 4
  %39 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %instrs.i, ptr %21, align 4
  %40 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 1, ptr %22, align 4
  %41 = ptrtoint ptr %exec_op.i.i104 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %exec_op.i.i104, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %42, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread149_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread149_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread149

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %43 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %44)
  %cmp.not.i.i = icmp ult i32 %37, %44
  br i1 %cmp.not.i.i, label %nand_write_data_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit.thread149

nand_write_data_op.exit.thread:                   ; preds = %nand_has_exec_op.exit.i106.nand_write_data_op.exit.thread_crit_edge, %lor.lhs.false.i.i103.nand_write_data_op.exit.thread_crit_edge, %if.end.i.nand_write_data_op.exit.thread_crit_edge
  %45 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %write_buf.i, align 4
  call void %46(ptr noundef %chip, ptr noundef nonnull %buf.addr.0161, i32 noundef %5) #14
  br label %if.end11

nand_write_data_op.exit.thread149:                ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread149_crit_edge
  %retval.0.i34.i.ph = phi i32 [ -22, %do.end.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread149_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

nand_write_data_op.exit:                          ; preds = %if.end.i.i
  %call25.i.i = call i32 %42(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool9.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool9.not, label %nand_write_data_op.exit.if.end11_crit_edge, label %nand_write_data_op.exit.cleanup_crit_edge

nand_write_data_op.exit.cleanup_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit.if.end11_crit_edge:       ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11

if.end11:                                         ; preds = %nand_write_data_op.exit.if.end11_crit_edge, %nand_write_data_op.exit.thread
  call void @__sanitizer_cov_trace_cmp4(i32 %step.0167, i32 %div)
  %cmp12 = icmp ult i32 %step.0167, %div
  call void @__sanitizer_cov_trace_cmp4(i32 %step.0167, i32 %div4)
  %cmp13 = icmp ugt i32 %step.0167, %div4
  %or.cond = or i1 %cmp12, %cmp13
  br i1 %or.cond, label %if.then14, label %if.else

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  %47 = call ptr @memset(ptr %ecc_calc.0165, i32 255, i32 %7)
  br label %if.end17

if.else:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  %48 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %calculate, align 8
  %call16 = call i32 %49(ptr noundef %chip, ptr noundef nonnull %buf.addr.0161, ptr noundef %ecc_calc.0165) #14
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then14
  %brmerge = select i1 %tobool18.not, i1 true, i1 %cmp12
  %or.cond98 = select i1 %brmerge, i1 true, i1 %cmp13
  br i1 %or.cond98, label %if.then23, label %if.end17.if.end24_crit_edge

if.end17.if.end24_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

if.then23:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %50 = call ptr @memset(ptr %oob_buf.0164, i32 255, i32 %div5)
  br label %if.end24

if.end24:                                         ; preds = %if.then23, %if.end17.if.end24_crit_edge
  %add.ptr = getelementptr i8, ptr %buf.addr.0161, i32 %5
  %add.ptr25 = getelementptr i8, ptr %ecc_calc.0165, i32 %7
  %add.ptr26 = getelementptr i8, ptr %oob_buf.0164, i32 %div5
  %inc = add nuw nsw i32 %step.0167, 1
  %exitcond.not = icmp eq i32 %inc, %9
  br i1 %exitcond.not, label %if.end24.for.end_crit_edge, label %if.end24.for.body_crit_edge

if.end24.for.body_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end24.for.end_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end24.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %51 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %calc_buf, align 4
  %53 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %55 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %total, align 8
  %call31 = call i32 @mtd_ooblayout_set_eccbytes(ptr noundef %chip, ptr noundef %52, ptr noundef %54, i32 noundef 0, i32 noundef %56) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.end34, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %for.end
  %57 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %oob_poi, align 4
  %59 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %oobsize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i110 = icmp eq i32 %60, 0
  %tobool1.not.i111 = icmp eq ptr %58, null
  %or.cond.i112 = or i1 %tobool1.not.i111, %tobool.not.i110
  br i1 %or.cond.i112, label %if.end34.cleanup_crit_edge, label %if.end.i115

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i115:                                      ; preds = %if.end34
  %61 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i114 = icmp eq ptr %62, null
  br i1 %tobool.not.i.i114, label %if.end.i115.nand_write_data_op.exit143.thread_crit_edge, label %lor.lhs.false.i.i118

if.end.i115.nand_write_data_op.exit143.thread_crit_edge: ; preds = %if.end.i115
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit143.thread

lor.lhs.false.i.i118:                             ; preds = %if.end.i115
  %ops.i.i116 = getelementptr inbounds %struct.nand_controller, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %ops.i.i116 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %ops.i.i116, align 4
  %tobool2.not.i.i117 = icmp eq ptr %64, null
  br i1 %tobool2.not.i.i117, label %lor.lhs.false.i.i118.nand_write_data_op.exit143.thread_crit_edge, label %nand_has_exec_op.exit.i121

lor.lhs.false.i.i118.nand_write_data_op.exit143.thread_crit_edge: ; preds = %lor.lhs.false.i.i118
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit143.thread

nand_has_exec_op.exit.i121:                       ; preds = %lor.lhs.false.i.i118
  %exec_op.i.i119 = getelementptr inbounds %struct.nand_controller_ops, ptr %64, i32 0, i32 2
  %65 = ptrtoint ptr %exec_op.i.i119 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %exec_op.i.i119, align 4
  %tobool6.not.i.not.i120 = icmp eq ptr %66, null
  br i1 %tobool6.not.i.not.i120, label %nand_has_exec_op.exit.i121.nand_write_data_op.exit143.thread_crit_edge, label %nand_has_exec_op.exit.i.i131

nand_has_exec_op.exit.i121.nand_write_data_op.exit143.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i121
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit143.thread

nand_has_exec_op.exit.i.i131:                     ; preds = %nand_has_exec_op.exit.i121
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i108) #14
  %67 = getelementptr inbounds i8, ptr %instrs.i108, i32 12
  %68 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 16777215, ptr %67, align 4
  %69 = ptrtoint ptr %instrs.i108 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 3, ptr %instrs.i108, align 4
  %ctx.i122 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i108, i32 0, i32 1
  %70 = ptrtoint ptr %ctx.i122 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %60, ptr %ctx.i122, align 4
  %buf4.i123 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i108, i32 0, i32 1, i32 0, i32 1
  %71 = ptrtoint ptr %buf4.i123 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %58, ptr %buf4.i123, align 4
  %delay_ns.i125 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i108, i32 0, i32 2
  %72 = ptrtoint ptr %delay_ns.i125 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 0, ptr %delay_ns.i125, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i109) #14
  %73 = getelementptr inbounds %struct.nand_operation, ptr %op.i109, i32 0, i32 1
  %74 = getelementptr inbounds %struct.nand_operation, ptr %op.i109, i32 0, i32 2
  %cur_cs.i126 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %75 = ptrtoint ptr %cur_cs.i126 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %cur_cs.i126, align 4
  %77 = ptrtoint ptr %op.i109 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %op.i109, align 4
  %78 = ptrtoint ptr %73 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %instrs.i108, ptr %73, align 4
  %79 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %74, align 4
  %80 = ptrtoint ptr %exec_op.i.i119 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %exec_op.i.i119, align 4
  %tobool6.not.i.not.i.i130 = icmp eq ptr %81, null
  br i1 %tobool6.not.i.not.i.i130, label %nand_has_exec_op.exit.i.i131.nand_write_data_op.exit143.thread157_crit_edge, label %if.end.i.i134

nand_has_exec_op.exit.i.i131.nand_write_data_op.exit143.thread157_crit_edge: ; preds = %nand_has_exec_op.exit.i.i131
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit143.thread157

if.end.i.i134:                                    ; preds = %nand_has_exec_op.exit.i.i131
  %ntargets.i.i.i132 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %82 = ptrtoint ptr %ntargets.i.i.i132 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %ntargets.i.i.i132, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %76, i32 %83)
  %cmp.not.i.i133 = icmp ult i32 %76, %83
  br i1 %cmp.not.i.i133, label %nand_write_data_op.exit143, label %do.end.i.i135, !prof !379

do.end.i.i135:                                    ; preds = %if.end.i.i134
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit143.thread157

nand_write_data_op.exit143.thread:                ; preds = %nand_has_exec_op.exit.i121.nand_write_data_op.exit143.thread_crit_edge, %lor.lhs.false.i.i118.nand_write_data_op.exit143.thread_crit_edge, %if.end.i115.nand_write_data_op.exit143.thread_crit_edge
  %write_buf.i141 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %84 = ptrtoint ptr %write_buf.i141 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %write_buf.i141, align 4
  call void %85(ptr noundef %chip, ptr noundef nonnull %58, i32 noundef %60) #14
  br label %if.end40

nand_write_data_op.exit143.thread157:             ; preds = %do.end.i.i135, %nand_has_exec_op.exit.i.i131.nand_write_data_op.exit143.thread157_crit_edge
  %retval.0.i34.i138.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i131.nand_write_data_op.exit143.thread157_crit_edge ], [ -22, %do.end.i.i135 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i109) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i108) #14
  br label %cleanup

nand_write_data_op.exit143:                       ; preds = %if.end.i.i134
  %call25.i.i136 = call i32 %81(ptr noundef %chip, ptr noundef nonnull %op.i109, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i109) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i108) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i136)
  %tobool38.not = icmp eq i32 %call25.i.i136, 0
  br i1 %tobool38.not, label %nand_write_data_op.exit143.if.end40_crit_edge, label %nand_write_data_op.exit143.cleanup_crit_edge

nand_write_data_op.exit143.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit143
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit143.if.end40_crit_edge:    ; preds = %nand_write_data_op.exit143
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.end40:                                         ; preds = %nand_write_data_op.exit143.if.end40_crit_edge, %nand_write_data_op.exit143.thread
  %call41 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.end40, %nand_write_data_op.exit143.cleanup_crit_edge, %nand_write_data_op.exit143.thread157, %if.end34.cleanup_crit_edge, %for.end.cleanup_crit_edge, %nand_write_data_op.exit.cleanup_crit_edge, %nand_write_data_op.exit.thread149, %for.body.cleanup_crit_edge, %nand_prog_page_begin_op.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call41, %if.end40 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup_crit_edge ], [ %call31, %for.end.cleanup_crit_edge ], [ %call25.i.i136, %nand_write_data_op.exit143.cleanup_crit_edge ], [ %retval.0.i34.i.ph, %nand_write_data_op.exit.thread149 ], [ %retval.0.i34.i138.ph, %nand_write_data_op.exit143.thread157 ], [ -22, %if.end34.cleanup_crit_edge ], [ -22, %for.body.cleanup_crit_edge ], [ %call25.i.i, %nand_write_data_op.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_page_syndrome(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %6 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %prepad, align 8
  %add = add i32 %7, %3
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  %8 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %postpad, align 4
  %add5 = add i32 %add, %9
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %10 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %oob_poi, align 4
  %call6 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup74_crit_edge

entry.cleanup74_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool7.not167 = icmp eq i32 %5, 0
  br i1 %tobool7.not167, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  %correct = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 10
  %idx.neg = sub i32 0, %add5
  %strength = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 7
  %ecc_stats60 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %failed = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %max_bitflips.0175 = phi i32 [ 0, %for.body.lr.ph ], [ %max_bitflips.2, %for.inc.for.body_crit_edge ]
  %oob.0174 = phi ptr [ %11, %for.body.lr.ph ], [ %oob.2, %for.inc.for.body_crit_edge ]
  %p.0169 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr65, %for.inc.for.body_crit_edge ]
  %eccsteps.0168 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %for.inc.for.body_crit_edge ]
  %12 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %hwctl, align 4
  tail call void %13(ptr noundef %chip, i32 noundef 0) #14
  %call9 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %p.0169, i32 noundef %1, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %for.body.cleanup74_crit_edge

for.body.cleanup74_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

if.end12:                                         ; preds = %for.body
  %14 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %prepad, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool15.not = icmp eq i32 %15, 0
  br i1 %tobool15.not, label %if.end12.if.end25_crit_edge, label %if.then16

if.end12.if.end25_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25

if.then16:                                        ; preds = %if.end12
  %call19 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.0174, i32 noundef %15, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end22, label %if.then16.cleanup74_crit_edge

if.then16.cleanup74_crit_edge:                    ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

if.end22:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %prepad, align 8
  %add.ptr = getelementptr i8, ptr %oob.0174, i32 %17
  br label %if.end25

if.end25:                                         ; preds = %if.end22, %if.end12.if.end25_crit_edge
  %oob.1 = phi ptr [ %add.ptr, %if.end22 ], [ %oob.0174, %if.end12.if.end25_crit_edge ]
  %18 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hwctl, align 4
  tail call void %19(ptr noundef %chip, i32 noundef 2) #14
  %call28 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.1, i32 noundef %3, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %if.end25.cleanup74_crit_edge

if.end25.cleanup74_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

if.end31:                                         ; preds = %if.end25
  %20 = ptrtoint ptr %correct to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %correct, align 4
  %call33 = tail call i32 %21(ptr noundef %chip, ptr noundef %p.0169, ptr noundef %oob.1, ptr noundef null) #14
  %add.ptr34 = getelementptr i8, ptr %oob.1, i32 %3
  %22 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %postpad, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool37.not = icmp eq i32 %23, 0
  br i1 %tobool37.not, label %if.end31.if.end48_crit_edge, label %if.then38

if.end31.if.end48_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then38:                                        ; preds = %if.end31
  %call41 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %add.ptr34, i32 noundef %23, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.then38.cleanup74_crit_edge

if.then38.cleanup74_crit_edge:                    ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

if.end44:                                         ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %postpad, align 4
  %add.ptr47 = getelementptr i8, ptr %add.ptr34, i32 %25
  br label %if.end48

if.end48:                                         ; preds = %if.end44, %if.end31.if.end48_crit_edge
  %oob.2 = phi ptr [ %add.ptr47, %if.end44 ], [ %add.ptr34, %if.end31.if.end48_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %call33)
  %cmp = icmp eq i32 %call33, -74
  br i1 %cmp, label %land.lhs.true, label %if.end48.if.end57_crit_edge

if.end48.if.end57_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end57

land.lhs.true:                                    ; preds = %if.end48
  %26 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %options, align 8
  %and = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool50.not = icmp eq i32 %and, 0
  br i1 %tobool50.not, label %land.lhs.true.if.then59_crit_edge, label %if.then51

land.lhs.true.if.then59_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then59

if.then51:                                        ; preds = %land.lhs.true
  %28 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %size, align 8
  %add.ptr54 = getelementptr i8, ptr %oob.2, i32 %idx.neg
  %30 = ptrtoint ptr %strength to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %strength, align 4
  %call.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %p.0169, i32 noundef %29, i32 noundef %31) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 0
  br i1 %cmp.i, label %if.then51.if.then59_crit_edge, label %if.end.i

if.then51.if.then59_crit_edge:                    ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then59

if.end.i:                                         ; preds = %if.then51
  %sub.i = sub i32 %31, %call.i
  %call1.i = tail call fastcc i32 @nand_check_erased_buf(ptr noundef %add.ptr54, i32 noundef %add5, i32 noundef %sub.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %cmp2.i = icmp slt i32 %call1.i, 0
  br i1 %cmp2.i, label %if.end.i.if.then59_crit_edge, label %nand_check_erased_buf.exit.thread155

if.end.i.if.then59_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then59

nand_check_erased_buf.exit.thread155:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %nand_check_erased_buf.exit.thread155.if.end11.i_crit_edge, label %if.then10.i

nand_check_erased_buf.exit.thread155.if.end11.i_crit_edge: ; preds = %nand_check_erased_buf.exit.thread155
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end11.i

if.then10.i:                                      ; preds = %nand_check_erased_buf.exit.thread155
  call void @__sanitizer_cov_trace_pc() #16
  %32 = call ptr @memset(ptr %p.0169, i32 255, i32 %29)
  br label %if.end11.i

if.end11.i:                                       ; preds = %if.then10.i, %nand_check_erased_buf.exit.thread155.if.end11.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool12.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool12.not.i, label %if.end11.i.if.end17.i_crit_edge, label %if.then13.i

if.end11.i.if.end17.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17.i

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #16
  %33 = call ptr @memset(ptr %add.ptr54, i32 255, i32 %add5)
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then13.i, %if.end11.i.if.end17.i_crit_edge
  %add.i = add nuw i32 %call1.i, %call.i
  br label %if.end57

if.end57:                                         ; preds = %if.end17.i, %if.end48.if.end57_crit_edge
  %stat.0 = phi i32 [ %call33, %if.end48.if.end57_crit_edge ], [ %add.i, %if.end17.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %stat.0)
  %cmp58 = icmp slt i32 %stat.0, 0
  br i1 %cmp58, label %if.end57.if.then59_crit_edge, label %if.else

if.end57.if.then59_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then59

if.then59:                                        ; preds = %if.end57.if.then59_crit_edge, %if.end.i.if.then59_crit_edge, %if.then51.if.then59_crit_edge, %land.lhs.true.if.then59_crit_edge
  %34 = ptrtoint ptr %failed to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %failed, align 4
  %inc = add i32 %35, 1
  store i32 %inc, ptr %failed, align 4
  br label %for.inc

if.else:                                          ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %ecc_stats60 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ecc_stats60, align 4
  %add61 = add i32 %37, %stat.0
  store i32 %add61, ptr %ecc_stats60, align 4
  %38 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0175, i32 %stat.0)
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then59
  %max_bitflips.2 = phi i32 [ %max_bitflips.0175, %if.then59 ], [ %38, %if.else ]
  %dec = add i32 %eccsteps.0168, -1
  %add.ptr65 = getelementptr i8, ptr %p.0169, i32 %1
  %tobool7.not = icmp eq i32 %dec, 0
  br i1 %tobool7.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %oob.0.lcssa = phi ptr [ %11, %for.cond.preheader.for.end_crit_edge ], [ %oob.2, %for.inc.for.end_crit_edge ]
  %max_bitflips.0.lcssa = phi i32 [ 0, %for.cond.preheader.for.end_crit_edge ], [ %max_bitflips.2, %for.inc.for.end_crit_edge ]
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %39 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %oobsize, align 4
  %41 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %oob_poi, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %oob.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %42 to i32
  %sub.ptr.sub.neg = sub i32 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub = add i32 %sub.ptr.sub.neg, %40
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool67.not = icmp eq i32 %sub, 0
  br i1 %tobool67.not, label %for.end.if.end73_crit_edge, label %if.then68

for.end.if.end73_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end73

if.then68:                                        ; preds = %for.end
  %call69 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.0.lcssa, i32 noundef %sub, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.then68.if.end73_crit_edge, label %if.then68.cleanup74_crit_edge

if.then68.cleanup74_crit_edge:                    ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup74

if.then68.if.end73_crit_edge:                     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end73

if.end73:                                         ; preds = %if.then68.if.end73_crit_edge, %for.end.if.end73_crit_edge
  br label %cleanup74

cleanup74:                                        ; preds = %if.end73, %if.then68.cleanup74_crit_edge, %if.then38.cleanup74_crit_edge, %if.end25.cleanup74_crit_edge, %if.then16.cleanup74_crit_edge, %for.body.cleanup74_crit_edge, %entry.cleanup74_crit_edge
  %retval.2 = phi i32 [ %max_bitflips.0.lcssa, %if.end73 ], [ %call6, %entry.cleanup74_crit_edge ], [ %call69, %if.then68.cleanup74_crit_edge ], [ %call9, %for.body.cleanup74_crit_edge ], [ %call19, %if.then16.cleanup74_crit_edge ], [ %call28, %if.end25.cleanup74_crit_edge ], [ %call41, %if.then38.cleanup74_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_page_syndrome(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i226 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i227 = alloca %struct.nand_operation, align 4
  %instrs.i190 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i191 = alloca %struct.nand_operation, align 4
  %instrs.i154 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i155 = alloca %struct.nand_operation, align 4
  %instrs.i118 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i119 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %6 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %oob_poi, align 4
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %8 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %entry.nand_prog_page_begin_op.exit.thread_crit_edge, label %lor.lhs.false.i.i

entry.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

lor.lhs.false.i.i:                                ; preds = %entry
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %11, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %13, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_prog_page_begin_op.exit.thread:              ; preds = %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, %entry.nand_prog_page_begin_op.exit.thread_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %14 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %15(ptr noundef %chip, i32 noundef 128, i32 noundef 0, i32 noundef %page) #14
  br label %for.cond.preheader

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, label %nand_prog_page_begin_op.exit.cleanup_crit_edge

nand_prog_page_begin_op.exit.cleanup_crit_edge:   ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge: ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, %nand_prog_page_begin_op.exit.thread
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool4.not311 = icmp eq i32 %5, 0
  br i1 %tobool4.not311, label %for.cond.preheader.for.end_crit_edge, label %for.body.lr.ph

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %hwctl = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  %16 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %17 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %18 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %19 = getelementptr inbounds i8, ptr %instrs.i118, i32 12
  %ctx.i132 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i118, i32 0, i32 1
  %buf4.i133 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i118, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i135 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i118, i32 0, i32 2
  %20 = getelementptr inbounds %struct.nand_operation, ptr %op.i119, i32 0, i32 1
  %21 = getelementptr inbounds %struct.nand_operation, ptr %op.i119, i32 0, i32 2
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i156 = icmp eq i32 %3, 0
  %22 = getelementptr inbounds i8, ptr %instrs.i154, i32 12
  %ctx.i168 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i154, i32 0, i32 1
  %buf4.i169 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i154, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i171 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i154, i32 0, i32 2
  %23 = getelementptr inbounds %struct.nand_operation, ptr %op.i155, i32 0, i32 1
  %24 = getelementptr inbounds %struct.nand_operation, ptr %op.i155, i32 0, i32 2
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  %25 = getelementptr inbounds i8, ptr %instrs.i190, i32 12
  %ctx.i204 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i190, i32 0, i32 1
  %buf4.i205 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i190, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i207 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i190, i32 0, i32 2
  %26 = getelementptr inbounds %struct.nand_operation, ptr %op.i191, i32 0, i32 1
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op.i191, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %oob.0315 = phi ptr [ %7, %for.body.lr.ph ], [ %oob.2, %for.inc.for.body_crit_edge ]
  %p.0313 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr42, %for.inc.for.body_crit_edge ]
  %eccsteps.0312 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %for.inc.for.body_crit_edge ]
  %28 = ptrtoint ptr %hwctl to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %hwctl, align 4
  call void %29(ptr noundef %chip, i32 noundef 1) #14
  %tobool1.not.i = icmp eq ptr %p.0313, null
  %or.cond.i = or i1 %tobool.not.i, %tobool1.not.i
  br i1 %or.cond.i, label %for.body.cleanup_crit_edge, label %if.end.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %for.body
  %30 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i110 = icmp eq ptr %31, null
  br i1 %tobool.not.i.i110, label %if.end.i.nand_write_data_op.exit.thread_crit_edge, label %lor.lhs.false.i.i113

if.end.i.nand_write_data_op.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

lor.lhs.false.i.i113:                             ; preds = %if.end.i
  %ops.i.i111 = getelementptr inbounds %struct.nand_controller, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %ops.i.i111 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ops.i.i111, align 4
  %tobool2.not.i.i112 = icmp eq ptr %33, null
  br i1 %tobool2.not.i.i112, label %lor.lhs.false.i.i113.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i116

lor.lhs.false.i.i113.nand_write_data_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i113
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i116:                       ; preds = %lor.lhs.false.i.i113
  %exec_op.i.i114 = getelementptr inbounds %struct.nand_controller_ops, ptr %33, i32 0, i32 2
  %34 = ptrtoint ptr %exec_op.i.i114 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %exec_op.i.i114, align 4
  %tobool6.not.i.not.i115 = icmp eq ptr %35, null
  br i1 %tobool6.not.i.not.i115, label %nand_has_exec_op.exit.i116.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i116.nand_write_data_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i116
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i116
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %36 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 16777215, ptr %16, align 4
  %37 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 3, ptr %instrs.i, align 4
  %38 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %1, ptr %ctx.i, align 4
  %39 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %p.0313, ptr %buf4.i, align 4
  %40 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %41 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %cur_cs.i, align 4
  %43 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %op.i, align 4
  %44 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %instrs.i, ptr %17, align 4
  %45 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 1, ptr %18, align 4
  %46 = ptrtoint ptr %exec_op.i.i114 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %exec_op.i.i114, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %47, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread267_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread267_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread267

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %48 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %49)
  %cmp.not.i.i = icmp ult i32 %42, %49
  br i1 %cmp.not.i.i, label %nand_write_data_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit.thread267

nand_write_data_op.exit.thread:                   ; preds = %nand_has_exec_op.exit.i116.nand_write_data_op.exit.thread_crit_edge, %lor.lhs.false.i.i113.nand_write_data_op.exit.thread_crit_edge, %if.end.i.nand_write_data_op.exit.thread_crit_edge
  %50 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %write_buf.i, align 4
  call void %51(ptr noundef %chip, ptr noundef nonnull %p.0313, i32 noundef %1) #14
  br label %if.end9

nand_write_data_op.exit.thread267:                ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread267_crit_edge
  %retval.0.i34.i.ph = phi i32 [ -22, %do.end.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread267_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

nand_write_data_op.exit:                          ; preds = %if.end.i.i
  %call25.i.i = call i32 %47(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool7.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool7.not, label %nand_write_data_op.exit.if.end9_crit_edge, label %nand_write_data_op.exit.cleanup_crit_edge

nand_write_data_op.exit.cleanup_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit.if.end9_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.end9:                                          ; preds = %nand_write_data_op.exit.if.end9_crit_edge, %nand_write_data_op.exit.thread
  %52 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %prepad, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %tobool11.not = icmp eq i32 %53, 0
  br i1 %tobool11.not, label %if.end9.if.end21_crit_edge, label %if.then12

if.end9.if.end21_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21

if.then12:                                        ; preds = %if.end9
  %tobool1.not.i121 = icmp eq ptr %oob.0315, null
  br i1 %tobool1.not.i121, label %if.then12.cleanup_crit_edge, label %if.end.i125

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i125:                                      ; preds = %if.then12
  %54 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i124 = icmp eq ptr %55, null
  br i1 %tobool.not.i.i124, label %if.end.i125.nand_write_data_op.exit153.thread_crit_edge, label %lor.lhs.false.i.i128

if.end.i125.nand_write_data_op.exit153.thread_crit_edge: ; preds = %if.end.i125
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit153.thread

lor.lhs.false.i.i128:                             ; preds = %if.end.i125
  %ops.i.i126 = getelementptr inbounds %struct.nand_controller, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %ops.i.i126 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ops.i.i126, align 4
  %tobool2.not.i.i127 = icmp eq ptr %57, null
  br i1 %tobool2.not.i.i127, label %lor.lhs.false.i.i128.nand_write_data_op.exit153.thread_crit_edge, label %nand_has_exec_op.exit.i131

lor.lhs.false.i.i128.nand_write_data_op.exit153.thread_crit_edge: ; preds = %lor.lhs.false.i.i128
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit153.thread

nand_has_exec_op.exit.i131:                       ; preds = %lor.lhs.false.i.i128
  %exec_op.i.i129 = getelementptr inbounds %struct.nand_controller_ops, ptr %57, i32 0, i32 2
  %58 = ptrtoint ptr %exec_op.i.i129 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %exec_op.i.i129, align 4
  %tobool6.not.i.not.i130 = icmp eq ptr %59, null
  br i1 %tobool6.not.i.not.i130, label %nand_has_exec_op.exit.i131.nand_write_data_op.exit153.thread_crit_edge, label %nand_has_exec_op.exit.i.i141

nand_has_exec_op.exit.i131.nand_write_data_op.exit153.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i131
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit153.thread

nand_has_exec_op.exit.i.i141:                     ; preds = %nand_has_exec_op.exit.i131
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i118) #14
  %60 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 16777215, ptr %19, align 4
  %61 = ptrtoint ptr %instrs.i118 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 3, ptr %instrs.i118, align 4
  %62 = ptrtoint ptr %ctx.i132 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %53, ptr %ctx.i132, align 4
  %63 = ptrtoint ptr %buf4.i133 to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %oob.0315, ptr %buf4.i133, align 4
  %64 = ptrtoint ptr %delay_ns.i135 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %delay_ns.i135, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i119) #14
  %65 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %cur_cs.i, align 4
  %67 = ptrtoint ptr %op.i119 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %66, ptr %op.i119, align 4
  %68 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %instrs.i118, ptr %20, align 4
  %69 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 1, ptr %21, align 4
  %70 = ptrtoint ptr %exec_op.i.i129 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %exec_op.i.i129, align 4
  %tobool6.not.i.not.i.i140 = icmp eq ptr %71, null
  br i1 %tobool6.not.i.not.i.i140, label %nand_has_exec_op.exit.i.i141.nand_write_data_op.exit153.thread275_crit_edge, label %if.end.i.i144

nand_has_exec_op.exit.i.i141.nand_write_data_op.exit153.thread275_crit_edge: ; preds = %nand_has_exec_op.exit.i.i141
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit153.thread275

if.end.i.i144:                                    ; preds = %nand_has_exec_op.exit.i.i141
  %72 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %66, i32 %73)
  %cmp.not.i.i143 = icmp ult i32 %66, %73
  br i1 %cmp.not.i.i143, label %nand_write_data_op.exit153, label %do.end.i.i145, !prof !379

do.end.i.i145:                                    ; preds = %if.end.i.i144
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit153.thread275

nand_write_data_op.exit153.thread:                ; preds = %nand_has_exec_op.exit.i131.nand_write_data_op.exit153.thread_crit_edge, %lor.lhs.false.i.i128.nand_write_data_op.exit153.thread_crit_edge, %if.end.i125.nand_write_data_op.exit153.thread_crit_edge
  %74 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %write_buf.i, align 4
  call void %75(ptr noundef %chip, ptr noundef nonnull %oob.0315, i32 noundef %53) #14
  br label %if.end18

nand_write_data_op.exit153.thread275:             ; preds = %do.end.i.i145, %nand_has_exec_op.exit.i.i141.nand_write_data_op.exit153.thread275_crit_edge
  %retval.0.i34.i148.ph = phi i32 [ -22, %do.end.i.i145 ], [ -524, %nand_has_exec_op.exit.i.i141.nand_write_data_op.exit153.thread275_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i119) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i118) #14
  br label %cleanup

nand_write_data_op.exit153:                       ; preds = %if.end.i.i144
  %call25.i.i146 = call i32 %71(ptr noundef %chip, ptr noundef nonnull %op.i119, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i119) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i118) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i146)
  %tobool16.not = icmp eq i32 %call25.i.i146, 0
  br i1 %tobool16.not, label %nand_write_data_op.exit153.if.end18_crit_edge, label %nand_write_data_op.exit153.cleanup_crit_edge

nand_write_data_op.exit153.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit153
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit153.if.end18_crit_edge:    ; preds = %nand_write_data_op.exit153
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.end18:                                         ; preds = %nand_write_data_op.exit153.if.end18_crit_edge, %nand_write_data_op.exit153.thread
  %76 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %prepad, align 8
  %add.ptr = getelementptr i8, ptr %oob.0315, i32 %77
  br label %if.end21

if.end21:                                         ; preds = %if.end18, %if.end9.if.end21_crit_edge
  %oob.1 = phi ptr [ %add.ptr, %if.end18 ], [ %oob.0315, %if.end9.if.end21_crit_edge ]
  %78 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %calculate, align 8
  %call23 = call i32 %79(ptr noundef %chip, ptr noundef nonnull %p.0313, ptr noundef %oob.1) #14
  %tobool1.not.i157 = icmp eq ptr %oob.1, null
  %or.cond.i158 = or i1 %tobool.not.i156, %tobool1.not.i157
  br i1 %or.cond.i158, label %if.end21.cleanup_crit_edge, label %if.end.i161

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i161:                                      ; preds = %if.end21
  %80 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i160 = icmp eq ptr %81, null
  br i1 %tobool.not.i.i160, label %if.end.i161.nand_write_data_op.exit189.thread_crit_edge, label %lor.lhs.false.i.i164

if.end.i161.nand_write_data_op.exit189.thread_crit_edge: ; preds = %if.end.i161
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit189.thread

lor.lhs.false.i.i164:                             ; preds = %if.end.i161
  %ops.i.i162 = getelementptr inbounds %struct.nand_controller, ptr %81, i32 0, i32 1
  %82 = ptrtoint ptr %ops.i.i162 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ops.i.i162, align 4
  %tobool2.not.i.i163 = icmp eq ptr %83, null
  br i1 %tobool2.not.i.i163, label %lor.lhs.false.i.i164.nand_write_data_op.exit189.thread_crit_edge, label %nand_has_exec_op.exit.i167

lor.lhs.false.i.i164.nand_write_data_op.exit189.thread_crit_edge: ; preds = %lor.lhs.false.i.i164
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit189.thread

nand_has_exec_op.exit.i167:                       ; preds = %lor.lhs.false.i.i164
  %exec_op.i.i165 = getelementptr inbounds %struct.nand_controller_ops, ptr %83, i32 0, i32 2
  %84 = ptrtoint ptr %exec_op.i.i165 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %exec_op.i.i165, align 4
  %tobool6.not.i.not.i166 = icmp eq ptr %85, null
  br i1 %tobool6.not.i.not.i166, label %nand_has_exec_op.exit.i167.nand_write_data_op.exit189.thread_crit_edge, label %nand_has_exec_op.exit.i.i177

nand_has_exec_op.exit.i167.nand_write_data_op.exit189.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i167
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit189.thread

nand_has_exec_op.exit.i.i177:                     ; preds = %nand_has_exec_op.exit.i167
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i154) #14
  %86 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 16777215, ptr %22, align 4
  %87 = ptrtoint ptr %instrs.i154 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 3, ptr %instrs.i154, align 4
  %88 = ptrtoint ptr %ctx.i168 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %3, ptr %ctx.i168, align 4
  %89 = ptrtoint ptr %buf4.i169 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %oob.1, ptr %buf4.i169, align 4
  %90 = ptrtoint ptr %delay_ns.i171 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 0, ptr %delay_ns.i171, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i155) #14
  %91 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %cur_cs.i, align 4
  %93 = ptrtoint ptr %op.i155 to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %92, ptr %op.i155, align 4
  %94 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr %instrs.i154, ptr %23, align 4
  %95 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 1, ptr %24, align 4
  %96 = ptrtoint ptr %exec_op.i.i165 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %exec_op.i.i165, align 4
  %tobool6.not.i.not.i.i176 = icmp eq ptr %97, null
  br i1 %tobool6.not.i.not.i.i176, label %nand_has_exec_op.exit.i.i177.nand_write_data_op.exit189.thread283_crit_edge, label %if.end.i.i180

nand_has_exec_op.exit.i.i177.nand_write_data_op.exit189.thread283_crit_edge: ; preds = %nand_has_exec_op.exit.i.i177
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit189.thread283

if.end.i.i180:                                    ; preds = %nand_has_exec_op.exit.i.i177
  %98 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %92, i32 %99)
  %cmp.not.i.i179 = icmp ult i32 %92, %99
  br i1 %cmp.not.i.i179, label %nand_write_data_op.exit189, label %do.end.i.i181, !prof !379

do.end.i.i181:                                    ; preds = %if.end.i.i180
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit189.thread283

nand_write_data_op.exit189.thread:                ; preds = %nand_has_exec_op.exit.i167.nand_write_data_op.exit189.thread_crit_edge, %lor.lhs.false.i.i164.nand_write_data_op.exit189.thread_crit_edge, %if.end.i161.nand_write_data_op.exit189.thread_crit_edge
  %100 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %write_buf.i, align 4
  call void %101(ptr noundef %chip, ptr noundef nonnull %oob.1, i32 noundef %3) #14
  br label %if.end27

nand_write_data_op.exit189.thread283:             ; preds = %do.end.i.i181, %nand_has_exec_op.exit.i.i177.nand_write_data_op.exit189.thread283_crit_edge
  %retval.0.i34.i184.ph = phi i32 [ -22, %do.end.i.i181 ], [ -524, %nand_has_exec_op.exit.i.i177.nand_write_data_op.exit189.thread283_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i155) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i154) #14
  br label %cleanup

nand_write_data_op.exit189:                       ; preds = %if.end.i.i180
  %call25.i.i182 = call i32 %97(ptr noundef %chip, ptr noundef nonnull %op.i155, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i155) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i154) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i182)
  %tobool25.not = icmp eq i32 %call25.i.i182, 0
  br i1 %tobool25.not, label %nand_write_data_op.exit189.if.end27_crit_edge, label %nand_write_data_op.exit189.cleanup_crit_edge

nand_write_data_op.exit189.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit189
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit189.if.end27_crit_edge:    ; preds = %nand_write_data_op.exit189
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.end27:                                         ; preds = %nand_write_data_op.exit189.if.end27_crit_edge, %nand_write_data_op.exit189.thread
  %add.ptr28 = getelementptr i8, ptr %oob.1, i32 %3
  %102 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %postpad, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %tobool30.not = icmp eq i32 %103, 0
  br i1 %tobool30.not, label %if.end27.for.inc_crit_edge, label %if.then31

if.end27.for.inc_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then31:                                        ; preds = %if.end27
  %tobool1.not.i193 = icmp eq ptr %add.ptr28, null
  br i1 %tobool1.not.i193, label %if.then31.cleanup_crit_edge, label %if.end.i197

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i197:                                      ; preds = %if.then31
  %104 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i196 = icmp eq ptr %105, null
  br i1 %tobool.not.i.i196, label %if.end.i197.nand_write_data_op.exit225.thread_crit_edge, label %lor.lhs.false.i.i200

if.end.i197.nand_write_data_op.exit225.thread_crit_edge: ; preds = %if.end.i197
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit225.thread

lor.lhs.false.i.i200:                             ; preds = %if.end.i197
  %ops.i.i198 = getelementptr inbounds %struct.nand_controller, ptr %105, i32 0, i32 1
  %106 = ptrtoint ptr %ops.i.i198 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %ops.i.i198, align 4
  %tobool2.not.i.i199 = icmp eq ptr %107, null
  br i1 %tobool2.not.i.i199, label %lor.lhs.false.i.i200.nand_write_data_op.exit225.thread_crit_edge, label %nand_has_exec_op.exit.i203

lor.lhs.false.i.i200.nand_write_data_op.exit225.thread_crit_edge: ; preds = %lor.lhs.false.i.i200
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit225.thread

nand_has_exec_op.exit.i203:                       ; preds = %lor.lhs.false.i.i200
  %exec_op.i.i201 = getelementptr inbounds %struct.nand_controller_ops, ptr %107, i32 0, i32 2
  %108 = ptrtoint ptr %exec_op.i.i201 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %exec_op.i.i201, align 4
  %tobool6.not.i.not.i202 = icmp eq ptr %109, null
  br i1 %tobool6.not.i.not.i202, label %nand_has_exec_op.exit.i203.nand_write_data_op.exit225.thread_crit_edge, label %nand_has_exec_op.exit.i.i213

nand_has_exec_op.exit.i203.nand_write_data_op.exit225.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i203
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit225.thread

nand_has_exec_op.exit.i.i213:                     ; preds = %nand_has_exec_op.exit.i203
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i190) #14
  %110 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 16777215, ptr %25, align 4
  %111 = ptrtoint ptr %instrs.i190 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 3, ptr %instrs.i190, align 4
  %112 = ptrtoint ptr %ctx.i204 to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 %103, ptr %ctx.i204, align 4
  %113 = ptrtoint ptr %buf4.i205 to i32
  call void @__asan_store4_noabort(i32 %113)
  store ptr %add.ptr28, ptr %buf4.i205, align 4
  %114 = ptrtoint ptr %delay_ns.i207 to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 0, ptr %delay_ns.i207, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i191) #14
  %115 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %cur_cs.i, align 4
  %117 = ptrtoint ptr %op.i191 to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 %116, ptr %op.i191, align 4
  %118 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %instrs.i190, ptr %26, align 4
  %119 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 1, ptr %27, align 4
  %120 = ptrtoint ptr %exec_op.i.i201 to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %exec_op.i.i201, align 4
  %tobool6.not.i.not.i.i212 = icmp eq ptr %121, null
  br i1 %tobool6.not.i.not.i.i212, label %nand_has_exec_op.exit.i.i213.nand_write_data_op.exit225.thread291_crit_edge, label %if.end.i.i216

nand_has_exec_op.exit.i.i213.nand_write_data_op.exit225.thread291_crit_edge: ; preds = %nand_has_exec_op.exit.i.i213
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit225.thread291

if.end.i.i216:                                    ; preds = %nand_has_exec_op.exit.i.i213
  %122 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %116, i32 %123)
  %cmp.not.i.i215 = icmp ult i32 %116, %123
  br i1 %cmp.not.i.i215, label %nand_write_data_op.exit225, label %do.end.i.i217, !prof !379

do.end.i.i217:                                    ; preds = %if.end.i.i216
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit225.thread291

nand_write_data_op.exit225.thread:                ; preds = %nand_has_exec_op.exit.i203.nand_write_data_op.exit225.thread_crit_edge, %lor.lhs.false.i.i200.nand_write_data_op.exit225.thread_crit_edge, %if.end.i197.nand_write_data_op.exit225.thread_crit_edge
  %124 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %write_buf.i, align 4
  call void %125(ptr noundef %chip, ptr noundef nonnull %add.ptr28, i32 noundef %103) #14
  br label %if.end37

nand_write_data_op.exit225.thread291:             ; preds = %do.end.i.i217, %nand_has_exec_op.exit.i.i213.nand_write_data_op.exit225.thread291_crit_edge
  %retval.0.i34.i220.ph = phi i32 [ -22, %do.end.i.i217 ], [ -524, %nand_has_exec_op.exit.i.i213.nand_write_data_op.exit225.thread291_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i191) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i190) #14
  br label %cleanup

nand_write_data_op.exit225:                       ; preds = %if.end.i.i216
  %call25.i.i218 = call i32 %121(ptr noundef %chip, ptr noundef nonnull %op.i191, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i191) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i190) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i218)
  %tobool35.not = icmp eq i32 %call25.i.i218, 0
  br i1 %tobool35.not, label %nand_write_data_op.exit225.if.end37_crit_edge, label %nand_write_data_op.exit225.cleanup_crit_edge

nand_write_data_op.exit225.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit225
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit225.if.end37_crit_edge:    ; preds = %nand_write_data_op.exit225
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

if.end37:                                         ; preds = %nand_write_data_op.exit225.if.end37_crit_edge, %nand_write_data_op.exit225.thread
  %126 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %postpad, align 4
  %add.ptr40 = getelementptr i8, ptr %add.ptr28, i32 %127
  br label %for.inc

for.inc:                                          ; preds = %if.end37, %if.end27.for.inc_crit_edge
  %oob.2 = phi ptr [ %add.ptr40, %if.end37 ], [ %add.ptr28, %if.end27.for.inc_crit_edge ]
  %dec = add i32 %eccsteps.0312, -1
  %add.ptr42 = getelementptr i8, ptr %p.0313, i32 %1
  %tobool4.not = icmp eq i32 %dec, 0
  br i1 %tobool4.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %oob.0.lcssa = phi ptr [ %7, %for.cond.preheader.for.end_crit_edge ], [ %oob.2, %for.inc.for.end_crit_edge ]
  %128 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %oobsize.i, align 4
  %130 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %oob_poi, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %oob.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %131 to i32
  %sub.ptr.sub.neg = sub i32 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub = add i32 %sub.ptr.sub.neg, %129
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool44.not = icmp eq i32 %sub, 0
  br i1 %tobool44.not, label %for.end.if.end50_crit_edge, label %if.then45

for.end.if.end50_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.then45:                                        ; preds = %for.end
  %tobool1.not.i229 = icmp eq ptr %oob.0.lcssa, null
  br i1 %tobool1.not.i229, label %if.then45.cleanup_crit_edge, label %if.end.i233

if.then45.cleanup_crit_edge:                      ; preds = %if.then45
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i233:                                      ; preds = %if.then45
  %132 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i232 = icmp eq ptr %133, null
  br i1 %tobool.not.i.i232, label %if.end.i233.nand_write_data_op.exit261.thread_crit_edge, label %lor.lhs.false.i.i236

if.end.i233.nand_write_data_op.exit261.thread_crit_edge: ; preds = %if.end.i233
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit261.thread

lor.lhs.false.i.i236:                             ; preds = %if.end.i233
  %ops.i.i234 = getelementptr inbounds %struct.nand_controller, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %ops.i.i234 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load ptr, ptr %ops.i.i234, align 4
  %tobool2.not.i.i235 = icmp eq ptr %135, null
  br i1 %tobool2.not.i.i235, label %lor.lhs.false.i.i236.nand_write_data_op.exit261.thread_crit_edge, label %nand_has_exec_op.exit.i239

lor.lhs.false.i.i236.nand_write_data_op.exit261.thread_crit_edge: ; preds = %lor.lhs.false.i.i236
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit261.thread

nand_has_exec_op.exit.i239:                       ; preds = %lor.lhs.false.i.i236
  %exec_op.i.i237 = getelementptr inbounds %struct.nand_controller_ops, ptr %135, i32 0, i32 2
  %136 = ptrtoint ptr %exec_op.i.i237 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %exec_op.i.i237, align 4
  %tobool6.not.i.not.i238 = icmp eq ptr %137, null
  br i1 %tobool6.not.i.not.i238, label %nand_has_exec_op.exit.i239.nand_write_data_op.exit261.thread_crit_edge, label %nand_has_exec_op.exit.i.i249

nand_has_exec_op.exit.i239.nand_write_data_op.exit261.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i239
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit261.thread

nand_has_exec_op.exit.i.i249:                     ; preds = %nand_has_exec_op.exit.i239
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i226) #14
  %138 = getelementptr inbounds i8, ptr %instrs.i226, i32 12
  %139 = ptrtoint ptr %138 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 16777215, ptr %138, align 4
  %140 = ptrtoint ptr %instrs.i226 to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 3, ptr %instrs.i226, align 4
  %ctx.i240 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i226, i32 0, i32 1
  %141 = ptrtoint ptr %ctx.i240 to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 %sub, ptr %ctx.i240, align 4
  %buf4.i241 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i226, i32 0, i32 1, i32 0, i32 1
  %142 = ptrtoint ptr %buf4.i241 to i32
  call void @__asan_store4_noabort(i32 %142)
  store ptr %oob.0.lcssa, ptr %buf4.i241, align 4
  %delay_ns.i243 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i226, i32 0, i32 2
  %143 = ptrtoint ptr %delay_ns.i243 to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 0, ptr %delay_ns.i243, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i227) #14
  %144 = getelementptr inbounds %struct.nand_operation, ptr %op.i227, i32 0, i32 1
  %145 = getelementptr inbounds %struct.nand_operation, ptr %op.i227, i32 0, i32 2
  %cur_cs.i244 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %146 = ptrtoint ptr %cur_cs.i244 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %cur_cs.i244, align 4
  %148 = ptrtoint ptr %op.i227 to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 %147, ptr %op.i227, align 4
  %149 = ptrtoint ptr %144 to i32
  call void @__asan_store4_noabort(i32 %149)
  store ptr %instrs.i226, ptr %144, align 4
  %150 = ptrtoint ptr %145 to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 1, ptr %145, align 4
  %151 = ptrtoint ptr %exec_op.i.i237 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %exec_op.i.i237, align 4
  %tobool6.not.i.not.i.i248 = icmp eq ptr %152, null
  br i1 %tobool6.not.i.not.i.i248, label %nand_has_exec_op.exit.i.i249.nand_write_data_op.exit261.thread299_crit_edge, label %if.end.i.i252

nand_has_exec_op.exit.i.i249.nand_write_data_op.exit261.thread299_crit_edge: ; preds = %nand_has_exec_op.exit.i.i249
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit261.thread299

if.end.i.i252:                                    ; preds = %nand_has_exec_op.exit.i.i249
  %ntargets.i.i.i250 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %153 = ptrtoint ptr %ntargets.i.i.i250 to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %ntargets.i.i.i250, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %147, i32 %154)
  %cmp.not.i.i251 = icmp ult i32 %147, %154
  br i1 %cmp.not.i.i251, label %nand_write_data_op.exit261, label %do.end.i.i253, !prof !379

do.end.i.i253:                                    ; preds = %if.end.i.i252
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit261.thread299

nand_write_data_op.exit261.thread:                ; preds = %nand_has_exec_op.exit.i239.nand_write_data_op.exit261.thread_crit_edge, %lor.lhs.false.i.i236.nand_write_data_op.exit261.thread_crit_edge, %if.end.i233.nand_write_data_op.exit261.thread_crit_edge
  %write_buf.i259 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %155 = ptrtoint ptr %write_buf.i259 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %write_buf.i259, align 4
  call void %156(ptr noundef %chip, ptr noundef nonnull %oob.0.lcssa, i32 noundef %sub) #14
  br label %if.end50

nand_write_data_op.exit261.thread299:             ; preds = %do.end.i.i253, %nand_has_exec_op.exit.i.i249.nand_write_data_op.exit261.thread299_crit_edge
  %retval.0.i34.i256.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i249.nand_write_data_op.exit261.thread299_crit_edge ], [ -22, %do.end.i.i253 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i227) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i226) #14
  br label %cleanup

nand_write_data_op.exit261:                       ; preds = %if.end.i.i252
  %call25.i.i254 = call i32 %152(ptr noundef %chip, ptr noundef nonnull %op.i227, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i227) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i226) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i254)
  %tobool47.not = icmp eq i32 %call25.i.i254, 0
  br i1 %tobool47.not, label %nand_write_data_op.exit261.if.end50_crit_edge, label %nand_write_data_op.exit261.cleanup_crit_edge

nand_write_data_op.exit261.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit261
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit261.if.end50_crit_edge:    ; preds = %nand_write_data_op.exit261
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end50:                                         ; preds = %nand_write_data_op.exit261.if.end50_crit_edge, %nand_write_data_op.exit261.thread, %for.end.if.end50_crit_edge
  %call51 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %nand_write_data_op.exit261.cleanup_crit_edge, %nand_write_data_op.exit261.thread299, %if.then45.cleanup_crit_edge, %nand_write_data_op.exit225.cleanup_crit_edge, %nand_write_data_op.exit225.thread291, %if.then31.cleanup_crit_edge, %nand_write_data_op.exit189.cleanup_crit_edge, %nand_write_data_op.exit189.thread283, %if.end21.cleanup_crit_edge, %nand_write_data_op.exit153.cleanup_crit_edge, %nand_write_data_op.exit153.thread275, %if.then12.cleanup_crit_edge, %nand_write_data_op.exit.cleanup_crit_edge, %nand_write_data_op.exit.thread267, %for.body.cleanup_crit_edge, %nand_prog_page_begin_op.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call51, %if.end50 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup_crit_edge ], [ %call25.i.i254, %nand_write_data_op.exit261.cleanup_crit_edge ], [ %retval.0.i34.i.ph, %nand_write_data_op.exit.thread267 ], [ %retval.0.i34.i148.ph, %nand_write_data_op.exit153.thread275 ], [ %retval.0.i34.i184.ph, %nand_write_data_op.exit189.thread283 ], [ %retval.0.i34.i220.ph, %nand_write_data_op.exit225.thread291 ], [ %retval.0.i34.i256.ph, %nand_write_data_op.exit261.thread299 ], [ -22, %if.then45.cleanup_crit_edge ], [ -22, %if.then31.cleanup_crit_edge ], [ -22, %if.end21.cleanup_crit_edge ], [ -22, %if.then12.cleanup_crit_edge ], [ -22, %for.body.cleanup_crit_edge ], [ %call25.i.i218, %nand_write_data_op.exit225.cleanup_crit_edge ], [ %call25.i.i182, %nand_write_data_op.exit189.cleanup_crit_edge ], [ %call25.i.i146, %nand_write_data_op.exit153.cleanup_crit_edge ], [ %call25.i.i, %nand_write_data_op.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_page_raw_syndrome(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %4 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %oob_poi, align 4
  %call3 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool.not = icmp eq i32 %call3, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %steps5 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %6 = ptrtoint ptr %steps5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %steps5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp97 = icmp sgt i32 %7, 0
  br i1 %cmp97, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %steps.0100 = phi i32 [ %7, %for.body.lr.ph ], [ %dec, %for.inc.for.body_crit_edge ]
  %oob.099 = phi ptr [ %5, %for.body.lr.ph ], [ %oob.2, %for.inc.for.body_crit_edge ]
  %buf.addr.098 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %for.inc.for.body_crit_edge ]
  %call6 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %buf.addr.098, i32 noundef %1, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.end9, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %for.body
  %add.ptr = getelementptr i8, ptr %buf.addr.098, i32 %1
  %8 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %prepad, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool11.not = icmp eq i32 %9, 0
  br i1 %tobool11.not, label %if.end9.if.end22_crit_edge, label %if.then12

if.end9.if.end22_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then12:                                        ; preds = %if.end9
  %call15 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.099, i32 noundef %9, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.end18, label %if.then12.cleanup_crit_edge

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  %10 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %prepad, align 8
  %add.ptr21 = getelementptr i8, ptr %oob.099, i32 %11
  br label %if.end22

if.end22:                                         ; preds = %if.end18, %if.end9.if.end22_crit_edge
  %oob.1 = phi ptr [ %add.ptr21, %if.end18 ], [ %oob.099, %if.end9.if.end22_crit_edge ]
  %call23 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.1, i32 noundef %3, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end26, label %if.end22.cleanup_crit_edge

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end26:                                         ; preds = %if.end22
  %add.ptr27 = getelementptr i8, ptr %oob.1, i32 %3
  %12 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %postpad, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool29.not = icmp eq i32 %13, 0
  br i1 %tobool29.not, label %if.end26.for.inc_crit_edge, label %if.then30

if.end26.for.inc_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then30:                                        ; preds = %if.end26
  %call33 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %add.ptr27, i32 noundef %13, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.then30.cleanup_crit_edge

if.then30.cleanup_crit_edge:                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end36:                                         ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  %14 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %postpad, align 4
  %add.ptr39 = getelementptr i8, ptr %add.ptr27, i32 %15
  br label %for.inc

for.inc:                                          ; preds = %if.end36, %if.end26.for.inc_crit_edge
  %oob.2 = phi ptr [ %add.ptr39, %if.end36 ], [ %add.ptr27, %if.end26.for.inc_crit_edge ]
  %dec = add nsw i32 %steps.0100, -1
  %cmp = icmp sgt i32 %steps.0100, 1
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %oob.0.lcssa = phi ptr [ %5, %if.end.for.end_crit_edge ], [ %oob.2, %for.inc.for.end_crit_edge ]
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %16 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %oobsize, align 4
  %18 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %oob_poi, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %oob.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %19 to i32
  %sub.ptr.sub.neg = sub i32 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub = add i32 %sub.ptr.sub.neg, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool42.not = icmp eq i32 %sub, 0
  br i1 %tobool42.not, label %for.end.if.end48_crit_edge, label %if.then43

for.end.if.end48_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then43:                                        ; preds = %for.end
  %call44 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %oob.0.lcssa, i32 noundef %sub, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44)
  %tobool45.not = icmp eq i32 %call44, 0
  br i1 %tobool45.not, label %if.then43.if.end48_crit_edge, label %if.then43.cleanup_crit_edge

if.then43.cleanup_crit_edge:                      ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then43.if.end48_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.end48:                                         ; preds = %if.then43.if.end48_crit_edge, %for.end.if.end48_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.then43.cleanup_crit_edge, %if.then30.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %if.then12.cleanup_crit_edge, %for.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end48 ], [ %call3, %entry.cleanup_crit_edge ], [ %call44, %if.then43.cleanup_crit_edge ], [ %call33, %if.then30.cleanup_crit_edge ], [ %call23, %if.end22.cleanup_crit_edge ], [ %call15, %if.then12.cleanup_crit_edge ], [ %call6, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_page_raw_syndrome(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i215 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i216 = alloca %struct.nand_operation, align 4
  %instrs.i179 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i180 = alloca %struct.nand_operation, align 4
  %instrs.i143 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i144 = alloca %struct.nand_operation, align 4
  %instrs.i107 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i108 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %4 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %oob_poi, align 4
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %6 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %entry.nand_prog_page_begin_op.exit.thread_crit_edge, label %lor.lhs.false.i.i

entry.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

lor.lhs.false.i.i:                                ; preds = %entry
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %9, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %11, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_prog_page_begin_op.exit.thread:              ; preds = %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, %entry.nand_prog_page_begin_op.exit.thread_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %12 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %13(ptr noundef %chip, i32 noundef 128, i32 noundef 0, i32 noundef %page) #14
  br label %if.end

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef 0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool.not = icmp eq i32 %call7.i, 0
  br i1 %tobool.not, label %nand_prog_page_begin_op.exit.if.end_crit_edge, label %nand_prog_page_begin_op.exit.cleanup_crit_edge

nand_prog_page_begin_op.exit.cleanup_crit_edge:   ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_prog_page_begin_op.exit.if.end_crit_edge:    ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %nand_prog_page_begin_op.exit.if.end_crit_edge, %nand_prog_page_begin_op.exit.thread
  %steps5 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %14 = ptrtoint ptr %steps5 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %steps5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp302 = icmp sgt i32 %15, 0
  br i1 %cmp302, label %for.body.lr.ph, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %.fr = freeze i32 %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.fr)
  %tobool.not.i = icmp eq i32 %.fr, 0
  %16 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %17 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %18 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %19 = getelementptr inbounds i8, ptr %instrs.i107, i32 12
  %ctx.i121 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i107, i32 0, i32 1
  %buf4.i122 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i107, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i124 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i107, i32 0, i32 2
  %20 = getelementptr inbounds %struct.nand_operation, ptr %op.i108, i32 0, i32 1
  %21 = getelementptr inbounds %struct.nand_operation, ptr %op.i108, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not.i145 = icmp eq i32 %3, 0
  %22 = getelementptr inbounds i8, ptr %instrs.i143, i32 12
  %ctx.i157 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i143, i32 0, i32 1
  %buf4.i158 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i143, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i160 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i143, i32 0, i32 2
  %23 = getelementptr inbounds %struct.nand_operation, ptr %op.i144, i32 0, i32 1
  %24 = getelementptr inbounds %struct.nand_operation, ptr %op.i144, i32 0, i32 2
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  %25 = getelementptr inbounds i8, ptr %instrs.i179, i32 12
  %ctx.i193 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i179, i32 0, i32 1
  %buf4.i194 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i179, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i196 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i179, i32 0, i32 2
  %26 = getelementptr inbounds %struct.nand_operation, ptr %op.i180, i32 0, i32 1
  %27 = getelementptr inbounds %struct.nand_operation, ptr %op.i180, i32 0, i32 2
  br i1 %tobool.not.i, label %for.body.lr.ph.cleanup_crit_edge, label %for.body.lr.ph.for.body_crit_edge

for.body.lr.ph.for.body_crit_edge:                ; preds = %for.body.lr.ph
  br label %for.body

for.body.lr.ph.cleanup_crit_edge:                 ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph.for.body_crit_edge
  %steps.0307 = phi i32 [ %dec, %for.inc.for.body_crit_edge ], [ %15, %for.body.lr.ph.for.body_crit_edge ]
  %oob.0305 = phi ptr [ %oob.2, %for.inc.for.body_crit_edge ], [ %5, %for.body.lr.ph.for.body_crit_edge ]
  %buf.addr.0303 = phi ptr [ %add.ptr, %for.inc.for.body_crit_edge ], [ %buf, %for.body.lr.ph.for.body_crit_edge ]
  %tobool1.not.i = icmp eq ptr %buf.addr.0303, null
  br i1 %tobool1.not.i, label %for.body.cleanup_crit_edge, label %if.end.i

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i:                                         ; preds = %for.body
  %28 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i99 = icmp eq ptr %29, null
  br i1 %tobool.not.i.i99, label %if.end.i.nand_write_data_op.exit.thread_crit_edge, label %lor.lhs.false.i.i102

if.end.i.nand_write_data_op.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

lor.lhs.false.i.i102:                             ; preds = %if.end.i
  %ops.i.i100 = getelementptr inbounds %struct.nand_controller, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %ops.i.i100 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ops.i.i100, align 4
  %tobool2.not.i.i101 = icmp eq ptr %31, null
  br i1 %tobool2.not.i.i101, label %lor.lhs.false.i.i102.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i105

lor.lhs.false.i.i102.nand_write_data_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i102
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i105:                       ; preds = %lor.lhs.false.i.i102
  %exec_op.i.i103 = getelementptr inbounds %struct.nand_controller_ops, ptr %31, i32 0, i32 2
  %32 = ptrtoint ptr %exec_op.i.i103 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %exec_op.i.i103, align 4
  %tobool6.not.i.not.i104 = icmp eq ptr %33, null
  br i1 %tobool6.not.i.not.i104, label %nand_has_exec_op.exit.i105.nand_write_data_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i105.nand_write_data_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i105
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i105
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %34 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 16777215, ptr %16, align 4
  %35 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 3, ptr %instrs.i, align 4
  %36 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %.fr, ptr %ctx.i, align 4
  %37 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %buf.addr.0303, ptr %buf4.i, align 4
  %38 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %39 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cur_cs.i, align 4
  %41 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %op.i, align 4
  %42 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %instrs.i, ptr %17, align 4
  %43 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 1, ptr %18, align 4
  %44 = ptrtoint ptr %exec_op.i.i103 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %exec_op.i.i103, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %45, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread258_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread258_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit.thread258

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %46 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %40, i32 %47)
  %cmp.not.i.i = icmp ult i32 %40, %47
  br i1 %cmp.not.i.i, label %nand_write_data_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit.thread258

nand_write_data_op.exit.thread:                   ; preds = %nand_has_exec_op.exit.i105.nand_write_data_op.exit.thread_crit_edge, %lor.lhs.false.i.i102.nand_write_data_op.exit.thread_crit_edge, %if.end.i.nand_write_data_op.exit.thread_crit_edge
  %48 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %write_buf.i, align 4
  call void %49(ptr noundef %chip, ptr noundef nonnull %buf.addr.0303, i32 noundef %.fr) #14
  br label %if.end9

nand_write_data_op.exit.thread258:                ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread258_crit_edge
  %retval.0.i34.i.ph = phi i32 [ -22, %do.end.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_write_data_op.exit.thread258_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %cleanup

nand_write_data_op.exit:                          ; preds = %if.end.i.i
  %call25.i.i = call i32 %45(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool7.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool7.not, label %nand_write_data_op.exit.if.end9_crit_edge, label %nand_write_data_op.exit.cleanup_crit_edge

nand_write_data_op.exit.cleanup_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit.if.end9_crit_edge:        ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.end9:                                          ; preds = %nand_write_data_op.exit.if.end9_crit_edge, %nand_write_data_op.exit.thread
  %add.ptr = getelementptr i8, ptr %buf.addr.0303, i32 %.fr
  %50 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %prepad, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool11.not = icmp eq i32 %51, 0
  br i1 %tobool11.not, label %if.end9.if.end22_crit_edge, label %if.then12

if.end9.if.end22_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then12:                                        ; preds = %if.end9
  %tobool1.not.i110 = icmp eq ptr %oob.0305, null
  br i1 %tobool1.not.i110, label %if.then12.cleanup_crit_edge, label %if.end.i114

if.then12.cleanup_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i114:                                      ; preds = %if.then12
  %52 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i113 = icmp eq ptr %53, null
  br i1 %tobool.not.i.i113, label %if.end.i114.nand_write_data_op.exit142.thread_crit_edge, label %lor.lhs.false.i.i117

if.end.i114.nand_write_data_op.exit142.thread_crit_edge: ; preds = %if.end.i114
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit142.thread

lor.lhs.false.i.i117:                             ; preds = %if.end.i114
  %ops.i.i115 = getelementptr inbounds %struct.nand_controller, ptr %53, i32 0, i32 1
  %54 = ptrtoint ptr %ops.i.i115 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ops.i.i115, align 4
  %tobool2.not.i.i116 = icmp eq ptr %55, null
  br i1 %tobool2.not.i.i116, label %lor.lhs.false.i.i117.nand_write_data_op.exit142.thread_crit_edge, label %nand_has_exec_op.exit.i120

lor.lhs.false.i.i117.nand_write_data_op.exit142.thread_crit_edge: ; preds = %lor.lhs.false.i.i117
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit142.thread

nand_has_exec_op.exit.i120:                       ; preds = %lor.lhs.false.i.i117
  %exec_op.i.i118 = getelementptr inbounds %struct.nand_controller_ops, ptr %55, i32 0, i32 2
  %56 = ptrtoint ptr %exec_op.i.i118 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %exec_op.i.i118, align 4
  %tobool6.not.i.not.i119 = icmp eq ptr %57, null
  br i1 %tobool6.not.i.not.i119, label %nand_has_exec_op.exit.i120.nand_write_data_op.exit142.thread_crit_edge, label %nand_has_exec_op.exit.i.i130

nand_has_exec_op.exit.i120.nand_write_data_op.exit142.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i120
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit142.thread

nand_has_exec_op.exit.i.i130:                     ; preds = %nand_has_exec_op.exit.i120
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i107) #14
  %58 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 16777215, ptr %19, align 4
  %59 = ptrtoint ptr %instrs.i107 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 3, ptr %instrs.i107, align 4
  %60 = ptrtoint ptr %ctx.i121 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %51, ptr %ctx.i121, align 4
  %61 = ptrtoint ptr %buf4.i122 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %oob.0305, ptr %buf4.i122, align 4
  %62 = ptrtoint ptr %delay_ns.i124 to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 0, ptr %delay_ns.i124, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i108) #14
  %63 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %cur_cs.i, align 4
  %65 = ptrtoint ptr %op.i108 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %op.i108, align 4
  %66 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %instrs.i107, ptr %20, align 4
  %67 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 1, ptr %21, align 4
  %68 = ptrtoint ptr %exec_op.i.i118 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %exec_op.i.i118, align 4
  %tobool6.not.i.not.i.i129 = icmp eq ptr %69, null
  br i1 %tobool6.not.i.not.i.i129, label %nand_has_exec_op.exit.i.i130.nand_write_data_op.exit142.thread266_crit_edge, label %if.end.i.i133

nand_has_exec_op.exit.i.i130.nand_write_data_op.exit142.thread266_crit_edge: ; preds = %nand_has_exec_op.exit.i.i130
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit142.thread266

if.end.i.i133:                                    ; preds = %nand_has_exec_op.exit.i.i130
  %70 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %64, i32 %71)
  %cmp.not.i.i132 = icmp ult i32 %64, %71
  br i1 %cmp.not.i.i132, label %nand_write_data_op.exit142, label %do.end.i.i134, !prof !379

do.end.i.i134:                                    ; preds = %if.end.i.i133
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit142.thread266

nand_write_data_op.exit142.thread:                ; preds = %nand_has_exec_op.exit.i120.nand_write_data_op.exit142.thread_crit_edge, %lor.lhs.false.i.i117.nand_write_data_op.exit142.thread_crit_edge, %if.end.i114.nand_write_data_op.exit142.thread_crit_edge
  %72 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %write_buf.i, align 4
  call void %73(ptr noundef %chip, ptr noundef nonnull %oob.0305, i32 noundef %51) #14
  br label %if.end18

nand_write_data_op.exit142.thread266:             ; preds = %do.end.i.i134, %nand_has_exec_op.exit.i.i130.nand_write_data_op.exit142.thread266_crit_edge
  %retval.0.i34.i137.ph = phi i32 [ -22, %do.end.i.i134 ], [ -524, %nand_has_exec_op.exit.i.i130.nand_write_data_op.exit142.thread266_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i108) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i107) #14
  br label %cleanup

nand_write_data_op.exit142:                       ; preds = %if.end.i.i133
  %call25.i.i135 = call i32 %69(ptr noundef %chip, ptr noundef nonnull %op.i108, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i108) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i107) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i135)
  %tobool16.not = icmp eq i32 %call25.i.i135, 0
  br i1 %tobool16.not, label %nand_write_data_op.exit142.if.end18_crit_edge, label %nand_write_data_op.exit142.cleanup_crit_edge

nand_write_data_op.exit142.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit142
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit142.if.end18_crit_edge:    ; preds = %nand_write_data_op.exit142
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.end18:                                         ; preds = %nand_write_data_op.exit142.if.end18_crit_edge, %nand_write_data_op.exit142.thread
  %74 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %prepad, align 8
  %add.ptr21 = getelementptr i8, ptr %oob.0305, i32 %75
  br label %if.end22

if.end22:                                         ; preds = %if.end18, %if.end9.if.end22_crit_edge
  %oob.1 = phi ptr [ %add.ptr21, %if.end18 ], [ %oob.0305, %if.end9.if.end22_crit_edge ]
  %tobool1.not.i146 = icmp eq ptr %oob.1, null
  %or.cond.i147 = or i1 %tobool.not.i145, %tobool1.not.i146
  br i1 %or.cond.i147, label %if.end22.cleanup_crit_edge, label %if.end.i150

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i150:                                      ; preds = %if.end22
  %76 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i149 = icmp eq ptr %77, null
  br i1 %tobool.not.i.i149, label %if.end.i150.nand_write_data_op.exit178.thread_crit_edge, label %lor.lhs.false.i.i153

if.end.i150.nand_write_data_op.exit178.thread_crit_edge: ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit178.thread

lor.lhs.false.i.i153:                             ; preds = %if.end.i150
  %ops.i.i151 = getelementptr inbounds %struct.nand_controller, ptr %77, i32 0, i32 1
  %78 = ptrtoint ptr %ops.i.i151 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ops.i.i151, align 4
  %tobool2.not.i.i152 = icmp eq ptr %79, null
  br i1 %tobool2.not.i.i152, label %lor.lhs.false.i.i153.nand_write_data_op.exit178.thread_crit_edge, label %nand_has_exec_op.exit.i156

lor.lhs.false.i.i153.nand_write_data_op.exit178.thread_crit_edge: ; preds = %lor.lhs.false.i.i153
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit178.thread

nand_has_exec_op.exit.i156:                       ; preds = %lor.lhs.false.i.i153
  %exec_op.i.i154 = getelementptr inbounds %struct.nand_controller_ops, ptr %79, i32 0, i32 2
  %80 = ptrtoint ptr %exec_op.i.i154 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %exec_op.i.i154, align 4
  %tobool6.not.i.not.i155 = icmp eq ptr %81, null
  br i1 %tobool6.not.i.not.i155, label %nand_has_exec_op.exit.i156.nand_write_data_op.exit178.thread_crit_edge, label %nand_has_exec_op.exit.i.i166

nand_has_exec_op.exit.i156.nand_write_data_op.exit178.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i156
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit178.thread

nand_has_exec_op.exit.i.i166:                     ; preds = %nand_has_exec_op.exit.i156
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i143) #14
  %82 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 16777215, ptr %22, align 4
  %83 = ptrtoint ptr %instrs.i143 to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 3, ptr %instrs.i143, align 4
  %84 = ptrtoint ptr %ctx.i157 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %3, ptr %ctx.i157, align 4
  %85 = ptrtoint ptr %buf4.i158 to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %oob.1, ptr %buf4.i158, align 4
  %86 = ptrtoint ptr %delay_ns.i160 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 0, ptr %delay_ns.i160, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i144) #14
  %87 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %cur_cs.i, align 4
  %89 = ptrtoint ptr %op.i144 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %88, ptr %op.i144, align 4
  %90 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %instrs.i143, ptr %23, align 4
  %91 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 1, ptr %24, align 4
  %92 = ptrtoint ptr %exec_op.i.i154 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %exec_op.i.i154, align 4
  %tobool6.not.i.not.i.i165 = icmp eq ptr %93, null
  br i1 %tobool6.not.i.not.i.i165, label %nand_has_exec_op.exit.i.i166.nand_write_data_op.exit178.thread274_crit_edge, label %if.end.i.i169

nand_has_exec_op.exit.i.i166.nand_write_data_op.exit178.thread274_crit_edge: ; preds = %nand_has_exec_op.exit.i.i166
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit178.thread274

if.end.i.i169:                                    ; preds = %nand_has_exec_op.exit.i.i166
  %94 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %88, i32 %95)
  %cmp.not.i.i168 = icmp ult i32 %88, %95
  br i1 %cmp.not.i.i168, label %nand_write_data_op.exit178, label %do.end.i.i170, !prof !379

do.end.i.i170:                                    ; preds = %if.end.i.i169
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit178.thread274

nand_write_data_op.exit178.thread:                ; preds = %nand_has_exec_op.exit.i156.nand_write_data_op.exit178.thread_crit_edge, %lor.lhs.false.i.i153.nand_write_data_op.exit178.thread_crit_edge, %if.end.i150.nand_write_data_op.exit178.thread_crit_edge
  %96 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %write_buf.i, align 4
  call void %97(ptr noundef %chip, ptr noundef nonnull %oob.1, i32 noundef %3) #14
  br label %if.end26

nand_write_data_op.exit178.thread274:             ; preds = %do.end.i.i170, %nand_has_exec_op.exit.i.i166.nand_write_data_op.exit178.thread274_crit_edge
  %retval.0.i34.i173.ph = phi i32 [ -22, %do.end.i.i170 ], [ -524, %nand_has_exec_op.exit.i.i166.nand_write_data_op.exit178.thread274_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i144) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i143) #14
  br label %cleanup

nand_write_data_op.exit178:                       ; preds = %if.end.i.i169
  %call25.i.i171 = call i32 %93(ptr noundef %chip, ptr noundef nonnull %op.i144, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i144) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i143) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i171)
  %tobool24.not = icmp eq i32 %call25.i.i171, 0
  br i1 %tobool24.not, label %nand_write_data_op.exit178.if.end26_crit_edge, label %nand_write_data_op.exit178.cleanup_crit_edge

nand_write_data_op.exit178.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit178
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit178.if.end26_crit_edge:    ; preds = %nand_write_data_op.exit178
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.end26:                                         ; preds = %nand_write_data_op.exit178.if.end26_crit_edge, %nand_write_data_op.exit178.thread
  %add.ptr27 = getelementptr i8, ptr %oob.1, i32 %3
  %98 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %postpad, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool29.not = icmp eq i32 %99, 0
  br i1 %tobool29.not, label %if.end26.for.inc_crit_edge, label %if.then30

if.end26.for.inc_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then30:                                        ; preds = %if.end26
  %tobool1.not.i182 = icmp eq ptr %add.ptr27, null
  br i1 %tobool1.not.i182, label %if.then30.cleanup_crit_edge, label %if.end.i186

if.then30.cleanup_crit_edge:                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i186:                                      ; preds = %if.then30
  %100 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i185 = icmp eq ptr %101, null
  br i1 %tobool.not.i.i185, label %if.end.i186.nand_write_data_op.exit214.thread_crit_edge, label %lor.lhs.false.i.i189

if.end.i186.nand_write_data_op.exit214.thread_crit_edge: ; preds = %if.end.i186
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit214.thread

lor.lhs.false.i.i189:                             ; preds = %if.end.i186
  %ops.i.i187 = getelementptr inbounds %struct.nand_controller, ptr %101, i32 0, i32 1
  %102 = ptrtoint ptr %ops.i.i187 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %ops.i.i187, align 4
  %tobool2.not.i.i188 = icmp eq ptr %103, null
  br i1 %tobool2.not.i.i188, label %lor.lhs.false.i.i189.nand_write_data_op.exit214.thread_crit_edge, label %nand_has_exec_op.exit.i192

lor.lhs.false.i.i189.nand_write_data_op.exit214.thread_crit_edge: ; preds = %lor.lhs.false.i.i189
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit214.thread

nand_has_exec_op.exit.i192:                       ; preds = %lor.lhs.false.i.i189
  %exec_op.i.i190 = getelementptr inbounds %struct.nand_controller_ops, ptr %103, i32 0, i32 2
  %104 = ptrtoint ptr %exec_op.i.i190 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %exec_op.i.i190, align 4
  %tobool6.not.i.not.i191 = icmp eq ptr %105, null
  br i1 %tobool6.not.i.not.i191, label %nand_has_exec_op.exit.i192.nand_write_data_op.exit214.thread_crit_edge, label %nand_has_exec_op.exit.i.i202

nand_has_exec_op.exit.i192.nand_write_data_op.exit214.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i192
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit214.thread

nand_has_exec_op.exit.i.i202:                     ; preds = %nand_has_exec_op.exit.i192
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i179) #14
  %106 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 16777215, ptr %25, align 4
  %107 = ptrtoint ptr %instrs.i179 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 3, ptr %instrs.i179, align 4
  %108 = ptrtoint ptr %ctx.i193 to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 %99, ptr %ctx.i193, align 4
  %109 = ptrtoint ptr %buf4.i194 to i32
  call void @__asan_store4_noabort(i32 %109)
  store ptr %add.ptr27, ptr %buf4.i194, align 4
  %110 = ptrtoint ptr %delay_ns.i196 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 0, ptr %delay_ns.i196, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i180) #14
  %111 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %cur_cs.i, align 4
  %113 = ptrtoint ptr %op.i180 to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %112, ptr %op.i180, align 4
  %114 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %instrs.i179, ptr %26, align 4
  %115 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 1, ptr %27, align 4
  %116 = ptrtoint ptr %exec_op.i.i190 to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %exec_op.i.i190, align 4
  %tobool6.not.i.not.i.i201 = icmp eq ptr %117, null
  br i1 %tobool6.not.i.not.i.i201, label %nand_has_exec_op.exit.i.i202.nand_write_data_op.exit214.thread282_crit_edge, label %if.end.i.i205

nand_has_exec_op.exit.i.i202.nand_write_data_op.exit214.thread282_crit_edge: ; preds = %nand_has_exec_op.exit.i.i202
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit214.thread282

if.end.i.i205:                                    ; preds = %nand_has_exec_op.exit.i.i202
  %118 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %112, i32 %119)
  %cmp.not.i.i204 = icmp ult i32 %112, %119
  br i1 %cmp.not.i.i204, label %nand_write_data_op.exit214, label %do.end.i.i206, !prof !379

do.end.i.i206:                                    ; preds = %if.end.i.i205
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit214.thread282

nand_write_data_op.exit214.thread:                ; preds = %nand_has_exec_op.exit.i192.nand_write_data_op.exit214.thread_crit_edge, %lor.lhs.false.i.i189.nand_write_data_op.exit214.thread_crit_edge, %if.end.i186.nand_write_data_op.exit214.thread_crit_edge
  %120 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %write_buf.i, align 4
  call void %121(ptr noundef %chip, ptr noundef nonnull %add.ptr27, i32 noundef %99) #14
  br label %if.end36

nand_write_data_op.exit214.thread282:             ; preds = %do.end.i.i206, %nand_has_exec_op.exit.i.i202.nand_write_data_op.exit214.thread282_crit_edge
  %retval.0.i34.i209.ph = phi i32 [ -22, %do.end.i.i206 ], [ -524, %nand_has_exec_op.exit.i.i202.nand_write_data_op.exit214.thread282_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i180) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i179) #14
  br label %cleanup

nand_write_data_op.exit214:                       ; preds = %if.end.i.i205
  %call25.i.i207 = call i32 %117(ptr noundef %chip, ptr noundef nonnull %op.i180, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i180) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i179) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i207)
  %tobool34.not = icmp eq i32 %call25.i.i207, 0
  br i1 %tobool34.not, label %nand_write_data_op.exit214.if.end36_crit_edge, label %nand_write_data_op.exit214.cleanup_crit_edge

nand_write_data_op.exit214.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit214
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit214.if.end36_crit_edge:    ; preds = %nand_write_data_op.exit214
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end36

if.end36:                                         ; preds = %nand_write_data_op.exit214.if.end36_crit_edge, %nand_write_data_op.exit214.thread
  %122 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %postpad, align 4
  %add.ptr39 = getelementptr i8, ptr %add.ptr27, i32 %123
  br label %for.inc

for.inc:                                          ; preds = %if.end36, %if.end26.for.inc_crit_edge
  %oob.2 = phi ptr [ %add.ptr39, %if.end36 ], [ %add.ptr27, %if.end26.for.inc_crit_edge ]
  %dec = add nsw i32 %steps.0307, -1
  %cmp = icmp sgt i32 %steps.0307, 1
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end.for.end_crit_edge
  %oob.0.lcssa = phi ptr [ %5, %if.end.for.end_crit_edge ], [ %oob.2, %for.inc.for.end_crit_edge ]
  %124 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %oobsize.i, align 4
  %126 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %oob_poi, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %oob.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %127 to i32
  %sub.ptr.sub.neg = sub i32 %sub.ptr.rhs.cast, %sub.ptr.lhs.cast
  %sub = add i32 %sub.ptr.sub.neg, %125
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool42.not = icmp eq i32 %sub, 0
  br i1 %tobool42.not, label %for.end.if.end48_crit_edge, label %if.then43

for.end.if.end48_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.then43:                                        ; preds = %for.end
  %tobool1.not.i218 = icmp eq ptr %oob.0.lcssa, null
  br i1 %tobool1.not.i218, label %if.then43.cleanup_crit_edge, label %if.end.i222

if.then43.cleanup_crit_edge:                      ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.i222:                                      ; preds = %if.then43
  %128 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i221 = icmp eq ptr %129, null
  br i1 %tobool.not.i.i221, label %if.end.i222.nand_write_data_op.exit250.thread_crit_edge, label %lor.lhs.false.i.i225

if.end.i222.nand_write_data_op.exit250.thread_crit_edge: ; preds = %if.end.i222
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit250.thread

lor.lhs.false.i.i225:                             ; preds = %if.end.i222
  %ops.i.i223 = getelementptr inbounds %struct.nand_controller, ptr %129, i32 0, i32 1
  %130 = ptrtoint ptr %ops.i.i223 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %ops.i.i223, align 4
  %tobool2.not.i.i224 = icmp eq ptr %131, null
  br i1 %tobool2.not.i.i224, label %lor.lhs.false.i.i225.nand_write_data_op.exit250.thread_crit_edge, label %nand_has_exec_op.exit.i228

lor.lhs.false.i.i225.nand_write_data_op.exit250.thread_crit_edge: ; preds = %lor.lhs.false.i.i225
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit250.thread

nand_has_exec_op.exit.i228:                       ; preds = %lor.lhs.false.i.i225
  %exec_op.i.i226 = getelementptr inbounds %struct.nand_controller_ops, ptr %131, i32 0, i32 2
  %132 = ptrtoint ptr %exec_op.i.i226 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %exec_op.i.i226, align 4
  %tobool6.not.i.not.i227 = icmp eq ptr %133, null
  br i1 %tobool6.not.i.not.i227, label %nand_has_exec_op.exit.i228.nand_write_data_op.exit250.thread_crit_edge, label %nand_has_exec_op.exit.i.i238

nand_has_exec_op.exit.i228.nand_write_data_op.exit250.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i228
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit250.thread

nand_has_exec_op.exit.i.i238:                     ; preds = %nand_has_exec_op.exit.i228
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i215) #14
  %134 = getelementptr inbounds i8, ptr %instrs.i215, i32 12
  %135 = ptrtoint ptr %134 to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 16777215, ptr %134, align 4
  %136 = ptrtoint ptr %instrs.i215 to i32
  call void @__asan_store4_noabort(i32 %136)
  store i32 3, ptr %instrs.i215, align 4
  %ctx.i229 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i215, i32 0, i32 1
  %137 = ptrtoint ptr %ctx.i229 to i32
  call void @__asan_store4_noabort(i32 %137)
  store i32 %sub, ptr %ctx.i229, align 4
  %buf4.i230 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i215, i32 0, i32 1, i32 0, i32 1
  %138 = ptrtoint ptr %buf4.i230 to i32
  call void @__asan_store4_noabort(i32 %138)
  store ptr %oob.0.lcssa, ptr %buf4.i230, align 4
  %delay_ns.i232 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i215, i32 0, i32 2
  %139 = ptrtoint ptr %delay_ns.i232 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 0, ptr %delay_ns.i232, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i216) #14
  %140 = getelementptr inbounds %struct.nand_operation, ptr %op.i216, i32 0, i32 1
  %141 = getelementptr inbounds %struct.nand_operation, ptr %op.i216, i32 0, i32 2
  %cur_cs.i233 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %142 = ptrtoint ptr %cur_cs.i233 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %cur_cs.i233, align 4
  %144 = ptrtoint ptr %op.i216 to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %143, ptr %op.i216, align 4
  %145 = ptrtoint ptr %140 to i32
  call void @__asan_store4_noabort(i32 %145)
  store ptr %instrs.i215, ptr %140, align 4
  %146 = ptrtoint ptr %141 to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 1, ptr %141, align 4
  %147 = ptrtoint ptr %exec_op.i.i226 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %exec_op.i.i226, align 4
  %tobool6.not.i.not.i.i237 = icmp eq ptr %148, null
  br i1 %tobool6.not.i.not.i.i237, label %nand_has_exec_op.exit.i.i238.nand_write_data_op.exit250.thread290_crit_edge, label %if.end.i.i241

nand_has_exec_op.exit.i.i238.nand_write_data_op.exit250.thread290_crit_edge: ; preds = %nand_has_exec_op.exit.i.i238
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit250.thread290

if.end.i.i241:                                    ; preds = %nand_has_exec_op.exit.i.i238
  %ntargets.i.i.i239 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %149 = ptrtoint ptr %ntargets.i.i.i239 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %ntargets.i.i.i239, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %143, i32 %150)
  %cmp.not.i.i240 = icmp ult i32 %143, %150
  br i1 %cmp.not.i.i240, label %nand_write_data_op.exit250, label %do.end.i.i242, !prof !379

do.end.i.i242:                                    ; preds = %if.end.i.i241
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit250.thread290

nand_write_data_op.exit250.thread:                ; preds = %nand_has_exec_op.exit.i228.nand_write_data_op.exit250.thread_crit_edge, %lor.lhs.false.i.i225.nand_write_data_op.exit250.thread_crit_edge, %if.end.i222.nand_write_data_op.exit250.thread_crit_edge
  %write_buf.i248 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %151 = ptrtoint ptr %write_buf.i248 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %write_buf.i248, align 4
  call void %152(ptr noundef %chip, ptr noundef nonnull %oob.0.lcssa, i32 noundef %sub) #14
  br label %if.end48

nand_write_data_op.exit250.thread290:             ; preds = %do.end.i.i242, %nand_has_exec_op.exit.i.i238.nand_write_data_op.exit250.thread290_crit_edge
  %retval.0.i34.i245.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i238.nand_write_data_op.exit250.thread290_crit_edge ], [ -22, %do.end.i.i242 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i216) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i215) #14
  br label %cleanup

nand_write_data_op.exit250:                       ; preds = %if.end.i.i241
  %call25.i.i243 = call i32 %148(ptr noundef %chip, ptr noundef nonnull %op.i216, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i216) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i215) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i243)
  %tobool45.not = icmp eq i32 %call25.i.i243, 0
  br i1 %tobool45.not, label %nand_write_data_op.exit250.if.end48_crit_edge, label %nand_write_data_op.exit250.cleanup_crit_edge

nand_write_data_op.exit250.cleanup_crit_edge:     ; preds = %nand_write_data_op.exit250
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

nand_write_data_op.exit250.if.end48_crit_edge:    ; preds = %nand_write_data_op.exit250
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

if.end48:                                         ; preds = %nand_write_data_op.exit250.if.end48_crit_edge, %nand_write_data_op.exit250.thread, %for.end.if.end48_crit_edge
  %call49 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %nand_write_data_op.exit250.cleanup_crit_edge, %nand_write_data_op.exit250.thread290, %if.then43.cleanup_crit_edge, %nand_write_data_op.exit214.cleanup_crit_edge, %nand_write_data_op.exit214.thread282, %if.then30.cleanup_crit_edge, %nand_write_data_op.exit178.cleanup_crit_edge, %nand_write_data_op.exit178.thread274, %if.end22.cleanup_crit_edge, %nand_write_data_op.exit142.cleanup_crit_edge, %nand_write_data_op.exit142.thread266, %if.then12.cleanup_crit_edge, %nand_write_data_op.exit.cleanup_crit_edge, %nand_write_data_op.exit.thread258, %for.body.cleanup_crit_edge, %for.body.lr.ph.cleanup_crit_edge, %nand_prog_page_begin_op.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call49, %if.end48 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup_crit_edge ], [ %call25.i.i243, %nand_write_data_op.exit250.cleanup_crit_edge ], [ %retval.0.i34.i.ph, %nand_write_data_op.exit.thread258 ], [ %retval.0.i34.i137.ph, %nand_write_data_op.exit142.thread266 ], [ %retval.0.i34.i173.ph, %nand_write_data_op.exit178.thread274 ], [ %retval.0.i34.i209.ph, %nand_write_data_op.exit214.thread282 ], [ %retval.0.i34.i245.ph, %nand_write_data_op.exit250.thread290 ], [ -22, %if.then43.cleanup_crit_edge ], [ -22, %for.body.lr.ph.cleanup_crit_edge ], [ -22, %if.then30.cleanup_crit_edge ], [ -22, %if.end22.cleanup_crit_edge ], [ -22, %if.then12.cleanup_crit_edge ], [ -22, %for.body.cleanup_crit_edge ], [ %call25.i.i207, %nand_write_data_op.exit214.cleanup_crit_edge ], [ %call25.i.i171, %nand_write_data_op.exit178.cleanup_crit_edge ], [ %call25.i.i135, %nand_write_data_op.exit142.cleanup_crit_edge ], [ %call25.i.i, %nand_write_data_op.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_oob_syndrome(ptr noundef %chip, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %0 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %oobsize, align 4
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %4 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %prepad, align 8
  %add = add i32 %5, %3
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  %6 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %postpad, align 4
  %add3 = add i32 %add, %7
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %8 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %size, align 8
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %10 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %oob_poi, align 4
  %call7 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %9, ptr noundef null, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool.not = icmp eq i32 %call7, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup36_crit_edge

entry.cleanup36_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

for.cond.preheader:                               ; preds = %entry
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %12 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %steps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp83 = icmp sgt i32 %13, 0
  br i1 %cmp83, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %add12 = add i32 %9, %add3
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %if.end28.for.body_crit_edge, %for.body.lr.ph
  %tobool9.not88 = phi i1 [ true, %for.body.lr.ph ], [ false, %if.end28.for.body_crit_edge ]
  %i.086 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end28.for.body_crit_edge ]
  %bufpoi.085 = phi ptr [ %11, %for.body.lr.ph ], [ %add.ptr, %if.end28.for.body_crit_edge ]
  %length.084 = phi i32 [ %1, %for.body.lr.ph ], [ %sub, %if.end28.for.body_crit_edge ]
  br i1 %tobool9.not88, label %for.body.if.end23_crit_edge, label %if.then10

for.body.if.end23_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then10:                                        ; preds = %for.body
  %mul = mul i32 %i.086, %add12
  %add13 = add i32 %mul, %9
  %14 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %15)
  %cmp14 = icmp ugt i32 %15, 512
  br i1 %cmp14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  %call16 = tail call i32 @nand_change_read_column_op(ptr noundef %chip, i32 noundef %add13, ptr noundef null, i32 noundef 0, i1 noundef zeroext false)
  br label %if.end18

if.else:                                          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #16
  %call17 = tail call i32 @nand_read_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %add13, ptr noundef null, i32 noundef 0)
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  %ret11.0 = phi i32 [ %call16, %if.then15 ], [ %call17, %if.else ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret11.0)
  %tobool19.not = icmp eq i32 %ret11.0, 0
  br i1 %tobool19.not, label %if.end18.if.end23_crit_edge, label %if.end18.cleanup36_crit_edge

if.end18.cleanup36_crit_edge:                     ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.end18.if.end23_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.end23:                                         ; preds = %if.end18.if.end23_crit_edge, %for.body.if.end23_crit_edge
  %16 = tail call i32 @llvm.smin.i32(i32 %length.084, i32 %add3)
  %call25 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %bufpoi.085, i32 noundef %16, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end28, label %if.end23.cleanup36_crit_edge

if.end23.cleanup36_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.end28:                                         ; preds = %if.end23
  %add.ptr = getelementptr i8, ptr %bufpoi.085, i32 %16
  %sub = sub i32 %length.084, %16
  %inc = add nuw nsw i32 %i.086, 1
  %17 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %steps, align 4
  %cmp = icmp slt i32 %inc, %18
  br i1 %cmp, label %if.end28.for.body_crit_edge, label %if.end28.for.end_crit_edge

if.end28.for.end_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.end28.for.body_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %if.end28.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %length.0.lcssa = phi i32 [ %1, %for.cond.preheader.for.end_crit_edge ], [ %sub, %if.end28.for.end_crit_edge ]
  %bufpoi.0.lcssa = phi ptr [ %11, %for.cond.preheader.for.end_crit_edge ], [ %add.ptr, %if.end28.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %length.0.lcssa)
  %cmp29 = icmp sgt i32 %length.0.lcssa, 0
  br i1 %cmp29, label %if.then30, label %for.end.if.end35_crit_edge

for.end.if.end35_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.then30:                                        ; preds = %for.end
  %call31 = tail call i32 @nand_read_data_op(ptr noundef %chip, ptr noundef %bufpoi.0.lcssa, i32 noundef %length.0.lcssa, i1 noundef zeroext false, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then30.if.end35_crit_edge, label %if.then30.cleanup36_crit_edge

if.then30.cleanup36_crit_edge:                    ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup36

if.then30.if.end35_crit_edge:                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end35

if.end35:                                         ; preds = %if.then30.if.end35_crit_edge, %for.end.if.end35_crit_edge
  br label %cleanup36

cleanup36:                                        ; preds = %if.end35, %if.then30.cleanup36_crit_edge, %if.end23.cleanup36_crit_edge, %if.end18.cleanup36_crit_edge, %entry.cleanup36_crit_edge
  %retval.3 = phi i32 [ 0, %if.end35 ], [ %call7, %entry.cleanup36_crit_edge ], [ %call31, %if.then30.cleanup36_crit_edge ], [ %call25, %if.end23.cleanup36_crit_edge ], [ %ret11.0, %if.end18.cleanup36_crit_edge ]
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_oob_syndrome(ptr noundef %chip, i32 noundef %page) #4 align 64 {
entry:
  %instrs.i166 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i167 = alloca %struct.nand_operation, align 4
  %instrs.i132 = alloca [1 x %struct.nand_op_instr], align 4
  %op.i133 = alloca %struct.nand_operation, align 4
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  %fill = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %0 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bytes, align 4
  %prepad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 8
  %2 = ptrtoint ptr %prepad to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %prepad, align 8
  %add = add i32 %3, %1
  %postpad = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 9
  %4 = ptrtoint ptr %postpad to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %postpad, align 4
  %add3 = add i32 %add, %5
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %6 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %size, align 8
  %oobsize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %8 = ptrtoint ptr %oobsize to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %oobsize, align 4
  %steps6 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %10 = ptrtoint ptr %steps6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %steps6, align 4
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %12 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %oob_poi, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool11.not = icmp eq i32 %5, 0
  %or.cond = select i1 %tobool.not, i1 %tobool11.not, i1 false
  %add12 = add i32 %7, %add3
  %mul = mul i32 %11, %add12
  %pos.0 = select i1 %or.cond, i32 %mul, i32 %7
  %steps.0 = select i1 %or.cond, i32 0, i32 %11
  %writesize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %14 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %writesize.i, align 4
  %add2.i = add i32 %15, %9
  call void @__sanitizer_cov_trace_cmp4(i32 %pos.0, i32 %add2.i)
  %cmp.i = icmp ugt i32 %pos.0, %add2.i
  br i1 %cmp.i, label %entry.cleanup60_crit_edge, label %if.end4.i

entry.cleanup60_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

if.end4.i:                                        ; preds = %entry
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %16 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %if.end4.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %lor.lhs.false.i.i

if.end4.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

lor.lhs.false.i.i:                                ; preds = %if.end4.i
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %19, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %21, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, label %nand_prog_page_begin_op.exit

nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_prog_page_begin_op.exit.thread

nand_prog_page_begin_op.exit.thread:              ; preds = %nand_has_exec_op.exit.i.nand_prog_page_begin_op.exit.thread_crit_edge, %lor.lhs.false.i.i.nand_prog_page_begin_op.exit.thread_crit_edge, %if.end4.i.nand_prog_page_begin_op.exit.thread_crit_edge
  %cmdfunc.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 8
  %22 = ptrtoint ptr %cmdfunc.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cmdfunc.i, align 8
  tail call void %23(ptr noundef %chip, i32 noundef 128, i32 noundef %pos.0, i32 noundef %page) #14
  br label %for.cond.preheader

nand_prog_page_begin_op.exit:                     ; preds = %nand_has_exec_op.exit.i
  %call7.i = tail call fastcc i32 @nand_exec_prog_page_op(ptr noundef %chip, i32 noundef %page, i32 noundef %pos.0, ptr noundef null, i32 noundef 0, i1 noundef zeroext false) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool14.not = icmp eq i32 %call7.i, 0
  br i1 %tobool14.not, label %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, label %nand_prog_page_begin_op.exit.cleanup60_crit_edge

nand_prog_page_begin_op.exit.cleanup60_crit_edge: ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge: ; preds = %nand_prog_page_begin_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %nand_prog_page_begin_op.exit.for.cond.preheader_crit_edge, %nand_prog_page_begin_op.exit.thread
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %steps.0)
  %cmp229 = icmp sgt i32 %steps.0, 0
  br i1 %cmp229, label %for.body.lr.ph, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %24 = getelementptr inbounds i8, ptr %instrs.i, i32 12
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %buf4.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %25 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %26 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %write_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %27 = getelementptr inbounds i8, ptr %instrs.i132, i32 12
  %ctx.i144 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i132, i32 0, i32 1
  %buf4.i145 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i132, i32 0, i32 1, i32 0, i32 1
  %delay_ns.i147 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i132, i32 0, i32 2
  %28 = getelementptr inbounds %struct.nand_operation, ptr %op.i133, i32 0, i32 1
  %29 = getelementptr inbounds %struct.nand_operation, ptr %op.i133, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %if.end50.for.body_crit_edge, %for.body.lr.ph
  %bufpoi.0234 = phi ptr [ %13, %for.body.lr.ph ], [ %add.ptr, %if.end50.for.body_crit_edge ]
  %tobool17.not233 = phi i1 [ true, %for.body.lr.ph ], [ false, %if.end50.for.body_crit_edge ]
  %i.0231 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end50.for.body_crit_edge ]
  %length.0230 = phi i32 [ %9, %for.body.lr.ph ], [ %sub51, %if.end50.for.body_crit_edge ]
  br i1 %tobool17.not233, label %for.body.if.end40_crit_edge, label %if.then18

for.body.if.end40_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.then18:                                        ; preds = %for.body
  %30 = ptrtoint ptr %writesize.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %writesize.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 513, i32 %31)
  %cmp19 = icmp ult i32 %31, 513
  br i1 %cmp19, label %if.then20, label %if.else30

if.then20:                                        ; preds = %if.then18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fill) #14
  %32 = ptrtoint ptr %fill to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 -1, ptr %fill, align 4
  br label %while.cond

while.cond:                                       ; preds = %nand_write_data_op.exit.while.cond_crit_edge, %if.then20
  %len.0 = phi i32 [ %7, %if.then20 ], [ %sub, %nand_write_data_op.exit.while.cond_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.0)
  %cmp21 = icmp sgt i32 %len.0, 0
  br i1 %cmp21, label %if.end.i, label %cleanup27

if.end.i:                                         ; preds = %while.cond
  %33 = call i32 @llvm.umin.i32(i32 %len.0, i32 4)
  %34 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i124 = icmp eq ptr %35, null
  br i1 %tobool.not.i.i124, label %if.end.i.if.end12.i_crit_edge, label %lor.lhs.false.i.i127

if.end.i.if.end12.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i

lor.lhs.false.i.i127:                             ; preds = %if.end.i
  %ops.i.i125 = getelementptr inbounds %struct.nand_controller, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %ops.i.i125 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ops.i.i125, align 4
  %tobool2.not.i.i126 = icmp eq ptr %37, null
  br i1 %tobool2.not.i.i126, label %lor.lhs.false.i.i127.if.end12.i_crit_edge, label %nand_has_exec_op.exit.i130

lor.lhs.false.i.i127.if.end12.i_crit_edge:        ; preds = %lor.lhs.false.i.i127
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i

nand_has_exec_op.exit.i130:                       ; preds = %lor.lhs.false.i.i127
  %exec_op.i.i128 = getelementptr inbounds %struct.nand_controller_ops, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %exec_op.i.i128 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %exec_op.i.i128, align 4
  %tobool6.not.i.not.i129 = icmp eq ptr %39, null
  br i1 %tobool6.not.i.not.i129, label %nand_has_exec_op.exit.i130.if.end12.i_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i130.if.end12.i_crit_edge:  ; preds = %nand_has_exec_op.exit.i130
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12.i

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i130
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %40 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 16777215, ptr %24, align 4
  %41 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 3, ptr %instrs.i, align 4
  %42 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %33, ptr %ctx.i, align 4
  %43 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %fill, ptr %buf4.i, align 4
  %44 = ptrtoint ptr %delay_ns.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %delay_ns.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %45 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cur_cs.i, align 4
  %47 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %op.i, align 4
  %48 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %instrs.i, ptr %25, align 4
  %49 = ptrtoint ptr %26 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 1, ptr %26, align 4
  %50 = ptrtoint ptr %exec_op.i.i128 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %exec_op.i.i128, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %51, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_exec_op.exit.i

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %52 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %46, i32 %53)
  %cmp.not.i.i = icmp ult i32 %46, %53
  br i1 %cmp.not.i.i, label %if.end24.i.i, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_exec_op.exit.i

if.end24.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %call25.i.i = call i32 %51(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  br label %nand_exec_op.exit.i

nand_exec_op.exit.i:                              ; preds = %if.end24.i.i, %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge
  %retval.0.i34.i = phi i32 [ -22, %do.end.i.i ], [ %call25.i.i, %if.end24.i.i ], [ -524, %nand_has_exec_op.exit.i.i.nand_exec_op.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %nand_write_data_op.exit

if.end12.i:                                       ; preds = %nand_has_exec_op.exit.i130.if.end12.i_crit_edge, %lor.lhs.false.i.i127.if.end12.i_crit_edge, %if.end.i.if.end12.i_crit_edge
  %54 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %write_buf.i, align 4
  call void %55(ptr noundef %chip, ptr noundef nonnull %fill, i32 noundef %33) #14
  br label %nand_write_data_op.exit

nand_write_data_op.exit:                          ; preds = %if.end12.i, %nand_exec_op.exit.i
  %retval.0.i131 = phi i32 [ %retval.0.i34.i, %nand_exec_op.exit.i ], [ 0, %if.end12.i ]
  %tobool24.not = icmp eq i32 %retval.0.i131, 0
  %sub = sub nsw i32 %len.0, %33
  br i1 %tobool24.not, label %nand_write_data_op.exit.while.cond_crit_edge, label %cleanup27.thread

nand_write_data_op.exit.while.cond_crit_edge:     ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

cleanup27.thread:                                 ; preds = %nand_write_data_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fill) #14
  br label %cleanup60

cleanup27:                                        ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fill) #14
  br label %if.end40

if.else30:                                        ; preds = %if.then18
  %mul32 = mul i32 %i.0231, %add12
  %add33 = add i32 %mul32, %7
  %call34 = call i32 @nand_change_write_column_op(ptr noundef %chip, i32 noundef %add33, ptr noundef null, i32 noundef 0, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.else30.if.end40_crit_edge, label %if.else30.cleanup60_crit_edge

if.else30.cleanup60_crit_edge:                    ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

if.else30.if.end40_crit_edge:                     ; preds = %if.else30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end40

if.end40:                                         ; preds = %if.else30.if.end40_crit_edge, %cleanup27, %for.body.if.end40_crit_edge
  %56 = call i32 @llvm.smin.i32(i32 %length.0230, i32 %add3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %tobool.not.i134 = icmp eq i32 %56, 0
  %tobool1.not.i = icmp eq ptr %bufpoi.0234, null
  %or.cond.i = or i1 %tobool.not.i134, %tobool1.not.i
  br i1 %or.cond.i, label %if.end40.cleanup60_crit_edge, label %if.end.i137

if.end40.cleanup60_crit_edge:                     ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

if.end.i137:                                      ; preds = %if.end40
  %57 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i136 = icmp eq ptr %58, null
  br i1 %tobool.not.i.i136, label %if.end.i137.nand_write_data_op.exit165.thread_crit_edge, label %lor.lhs.false.i.i140

if.end.i137.nand_write_data_op.exit165.thread_crit_edge: ; preds = %if.end.i137
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit165.thread

lor.lhs.false.i.i140:                             ; preds = %if.end.i137
  %ops.i.i138 = getelementptr inbounds %struct.nand_controller, ptr %58, i32 0, i32 1
  %59 = ptrtoint ptr %ops.i.i138 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %ops.i.i138, align 4
  %tobool2.not.i.i139 = icmp eq ptr %60, null
  br i1 %tobool2.not.i.i139, label %lor.lhs.false.i.i140.nand_write_data_op.exit165.thread_crit_edge, label %nand_has_exec_op.exit.i143

lor.lhs.false.i.i140.nand_write_data_op.exit165.thread_crit_edge: ; preds = %lor.lhs.false.i.i140
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit165.thread

nand_has_exec_op.exit.i143:                       ; preds = %lor.lhs.false.i.i140
  %exec_op.i.i141 = getelementptr inbounds %struct.nand_controller_ops, ptr %60, i32 0, i32 2
  %61 = ptrtoint ptr %exec_op.i.i141 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %exec_op.i.i141, align 4
  %tobool6.not.i.not.i142 = icmp eq ptr %62, null
  br i1 %tobool6.not.i.not.i142, label %nand_has_exec_op.exit.i143.nand_write_data_op.exit165.thread_crit_edge, label %nand_has_exec_op.exit.i.i153

nand_has_exec_op.exit.i143.nand_write_data_op.exit165.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i143
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit165.thread

nand_has_exec_op.exit.i.i153:                     ; preds = %nand_has_exec_op.exit.i143
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i132) #14
  %63 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 16777215, ptr %27, align 4
  %64 = ptrtoint ptr %instrs.i132 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 3, ptr %instrs.i132, align 4
  %65 = ptrtoint ptr %ctx.i144 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %56, ptr %ctx.i144, align 4
  %66 = ptrtoint ptr %buf4.i145 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %bufpoi.0234, ptr %buf4.i145, align 4
  %67 = ptrtoint ptr %delay_ns.i147 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 0, ptr %delay_ns.i147, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i133) #14
  %68 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %cur_cs.i, align 4
  %70 = ptrtoint ptr %op.i133 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %69, ptr %op.i133, align 4
  %71 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %instrs.i132, ptr %28, align 4
  %72 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 1, ptr %29, align 4
  %73 = ptrtoint ptr %exec_op.i.i141 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %exec_op.i.i141, align 4
  %tobool6.not.i.not.i.i152 = icmp eq ptr %74, null
  br i1 %tobool6.not.i.not.i.i152, label %nand_has_exec_op.exit.i.i153.nand_write_data_op.exit165.thread210_crit_edge, label %if.end.i.i156

nand_has_exec_op.exit.i.i153.nand_write_data_op.exit165.thread210_crit_edge: ; preds = %nand_has_exec_op.exit.i.i153
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit165.thread210

if.end.i.i156:                                    ; preds = %nand_has_exec_op.exit.i.i153
  %75 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %69, i32 %76)
  %cmp.not.i.i155 = icmp ult i32 %69, %76
  br i1 %cmp.not.i.i155, label %nand_write_data_op.exit165, label %do.end.i.i157, !prof !379

do.end.i.i157:                                    ; preds = %if.end.i.i156
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit165.thread210

nand_write_data_op.exit165.thread:                ; preds = %nand_has_exec_op.exit.i143.nand_write_data_op.exit165.thread_crit_edge, %lor.lhs.false.i.i140.nand_write_data_op.exit165.thread_crit_edge, %if.end.i137.nand_write_data_op.exit165.thread_crit_edge
  %77 = ptrtoint ptr %write_buf.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %write_buf.i, align 4
  call void %78(ptr noundef %chip, ptr noundef nonnull %bufpoi.0234, i32 noundef %56) #14
  br label %if.end50

nand_write_data_op.exit165.thread210:             ; preds = %do.end.i.i157, %nand_has_exec_op.exit.i.i153.nand_write_data_op.exit165.thread210_crit_edge
  %retval.0.i34.i160.ph = phi i32 [ -22, %do.end.i.i157 ], [ -524, %nand_has_exec_op.exit.i.i153.nand_write_data_op.exit165.thread210_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i133) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i132) #14
  br label %cleanup60

nand_write_data_op.exit165:                       ; preds = %if.end.i.i156
  %call25.i.i158 = call i32 %74(ptr noundef %chip, ptr noundef nonnull %op.i133, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i133) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i132) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i158)
  %tobool48.not = icmp eq i32 %call25.i.i158, 0
  br i1 %tobool48.not, label %nand_write_data_op.exit165.if.end50_crit_edge, label %nand_write_data_op.exit165.cleanup60_crit_edge

nand_write_data_op.exit165.cleanup60_crit_edge:   ; preds = %nand_write_data_op.exit165
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

nand_write_data_op.exit165.if.end50_crit_edge:    ; preds = %nand_write_data_op.exit165
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50

if.end50:                                         ; preds = %nand_write_data_op.exit165.if.end50_crit_edge, %nand_write_data_op.exit165.thread
  %add.ptr = getelementptr i8, ptr %bufpoi.0234, i32 %56
  %sub51 = sub i32 %length.0230, %56
  %inc = add nuw nsw i32 %i.0231, 1
  %exitcond.not = icmp eq i32 %inc, %steps.0
  br i1 %exitcond.not, label %if.end50.for.end_crit_edge, label %if.end50.for.body_crit_edge

if.end50.for.body_crit_edge:                      ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end50.for.end_crit_edge:                       ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end50.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %length.0.lcssa = phi i32 [ %9, %for.cond.preheader.for.end_crit_edge ], [ %sub51, %if.end50.for.end_crit_edge ]
  %bufpoi.0.lcssa = phi ptr [ %13, %for.cond.preheader.for.end_crit_edge ], [ %add.ptr, %if.end50.for.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %length.0.lcssa)
  %cmp52 = icmp sgt i32 %length.0.lcssa, 0
  br i1 %cmp52, label %if.then53, label %for.end.if.end58_crit_edge

for.end.if.end58_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.then53:                                        ; preds = %for.end
  %tobool1.not.i169 = icmp eq ptr %bufpoi.0.lcssa, null
  br i1 %tobool1.not.i169, label %if.then53.cleanup60_crit_edge, label %if.end.i173

if.then53.cleanup60_crit_edge:                    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

if.end.i173:                                      ; preds = %if.then53
  %79 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i172 = icmp eq ptr %80, null
  br i1 %tobool.not.i.i172, label %if.end.i173.nand_write_data_op.exit201.thread_crit_edge, label %lor.lhs.false.i.i176

if.end.i173.nand_write_data_op.exit201.thread_crit_edge: ; preds = %if.end.i173
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit201.thread

lor.lhs.false.i.i176:                             ; preds = %if.end.i173
  %ops.i.i174 = getelementptr inbounds %struct.nand_controller, ptr %80, i32 0, i32 1
  %81 = ptrtoint ptr %ops.i.i174 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ops.i.i174, align 4
  %tobool2.not.i.i175 = icmp eq ptr %82, null
  br i1 %tobool2.not.i.i175, label %lor.lhs.false.i.i176.nand_write_data_op.exit201.thread_crit_edge, label %nand_has_exec_op.exit.i179

lor.lhs.false.i.i176.nand_write_data_op.exit201.thread_crit_edge: ; preds = %lor.lhs.false.i.i176
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit201.thread

nand_has_exec_op.exit.i179:                       ; preds = %lor.lhs.false.i.i176
  %exec_op.i.i177 = getelementptr inbounds %struct.nand_controller_ops, ptr %82, i32 0, i32 2
  %83 = ptrtoint ptr %exec_op.i.i177 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %exec_op.i.i177, align 4
  %tobool6.not.i.not.i178 = icmp eq ptr %84, null
  br i1 %tobool6.not.i.not.i178, label %nand_has_exec_op.exit.i179.nand_write_data_op.exit201.thread_crit_edge, label %nand_has_exec_op.exit.i.i189

nand_has_exec_op.exit.i179.nand_write_data_op.exit201.thread_crit_edge: ; preds = %nand_has_exec_op.exit.i179
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit201.thread

nand_has_exec_op.exit.i.i189:                     ; preds = %nand_has_exec_op.exit.i179
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i166) #14
  %85 = getelementptr inbounds i8, ptr %instrs.i166, i32 12
  %86 = ptrtoint ptr %85 to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 16777215, ptr %85, align 4
  %87 = ptrtoint ptr %instrs.i166 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 3, ptr %instrs.i166, align 4
  %ctx.i180 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i166, i32 0, i32 1
  %88 = ptrtoint ptr %ctx.i180 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %length.0.lcssa, ptr %ctx.i180, align 4
  %buf4.i181 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i166, i32 0, i32 1, i32 0, i32 1
  %89 = ptrtoint ptr %buf4.i181 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr %bufpoi.0.lcssa, ptr %buf4.i181, align 4
  %delay_ns.i183 = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i166, i32 0, i32 2
  %90 = ptrtoint ptr %delay_ns.i183 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 0, ptr %delay_ns.i183, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i167) #14
  %91 = getelementptr inbounds %struct.nand_operation, ptr %op.i167, i32 0, i32 1
  %92 = getelementptr inbounds %struct.nand_operation, ptr %op.i167, i32 0, i32 2
  %cur_cs.i184 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %93 = ptrtoint ptr %cur_cs.i184 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %cur_cs.i184, align 4
  %95 = ptrtoint ptr %op.i167 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %op.i167, align 4
  %96 = ptrtoint ptr %91 to i32
  call void @__asan_store4_noabort(i32 %96)
  store ptr %instrs.i166, ptr %91, align 4
  %97 = ptrtoint ptr %92 to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 1, ptr %92, align 4
  %98 = ptrtoint ptr %exec_op.i.i177 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %exec_op.i.i177, align 4
  %tobool6.not.i.not.i.i188 = icmp eq ptr %99, null
  br i1 %tobool6.not.i.not.i.i188, label %nand_has_exec_op.exit.i.i189.nand_write_data_op.exit201.thread218_crit_edge, label %if.end.i.i192

nand_has_exec_op.exit.i.i189.nand_write_data_op.exit201.thread218_crit_edge: ; preds = %nand_has_exec_op.exit.i.i189
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_write_data_op.exit201.thread218

if.end.i.i192:                                    ; preds = %nand_has_exec_op.exit.i.i189
  %ntargets.i.i.i190 = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %100 = ptrtoint ptr %ntargets.i.i.i190 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %ntargets.i.i.i190, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %94, i32 %101)
  %cmp.not.i.i191 = icmp ult i32 %94, %101
  br i1 %cmp.not.i.i191, label %nand_write_data_op.exit201, label %do.end.i.i193, !prof !379

do.end.i.i193:                                    ; preds = %if.end.i.i192
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_write_data_op.exit201.thread218

nand_write_data_op.exit201.thread:                ; preds = %nand_has_exec_op.exit.i179.nand_write_data_op.exit201.thread_crit_edge, %lor.lhs.false.i.i176.nand_write_data_op.exit201.thread_crit_edge, %if.end.i173.nand_write_data_op.exit201.thread_crit_edge
  %write_buf.i199 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 5
  %102 = ptrtoint ptr %write_buf.i199 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %write_buf.i199, align 4
  call void %103(ptr noundef %chip, ptr noundef nonnull %bufpoi.0.lcssa, i32 noundef %length.0.lcssa) #14
  br label %if.end58

nand_write_data_op.exit201.thread218:             ; preds = %do.end.i.i193, %nand_has_exec_op.exit.i.i189.nand_write_data_op.exit201.thread218_crit_edge
  %retval.0.i34.i196.ph = phi i32 [ -524, %nand_has_exec_op.exit.i.i189.nand_write_data_op.exit201.thread218_crit_edge ], [ -22, %do.end.i.i193 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i167) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i166) #14
  br label %cleanup60

nand_write_data_op.exit201:                       ; preds = %if.end.i.i192
  %call25.i.i194 = call i32 %99(ptr noundef %chip, ptr noundef nonnull %op.i167, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i167) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i166) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i194)
  %tobool55.not = icmp eq i32 %call25.i.i194, 0
  br i1 %tobool55.not, label %nand_write_data_op.exit201.if.end58_crit_edge, label %nand_write_data_op.exit201.cleanup60_crit_edge

nand_write_data_op.exit201.cleanup60_crit_edge:   ; preds = %nand_write_data_op.exit201
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup60

nand_write_data_op.exit201.if.end58_crit_edge:    ; preds = %nand_write_data_op.exit201
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end58

if.end58:                                         ; preds = %nand_write_data_op.exit201.if.end58_crit_edge, %nand_write_data_op.exit201.thread, %for.end.if.end58_crit_edge
  %call59 = call i32 @nand_prog_page_end_op(ptr noundef %chip)
  br label %cleanup60

cleanup60:                                        ; preds = %if.end58, %nand_write_data_op.exit201.cleanup60_crit_edge, %nand_write_data_op.exit201.thread218, %if.then53.cleanup60_crit_edge, %nand_write_data_op.exit165.cleanup60_crit_edge, %nand_write_data_op.exit165.thread210, %if.end40.cleanup60_crit_edge, %if.else30.cleanup60_crit_edge, %cleanup27.thread, %nand_prog_page_begin_op.exit.cleanup60_crit_edge, %entry.cleanup60_crit_edge
  %retval.5 = phi i32 [ %call59, %if.end58 ], [ %call7.i, %nand_prog_page_begin_op.exit.cleanup60_crit_edge ], [ %call25.i.i194, %nand_write_data_op.exit201.cleanup60_crit_edge ], [ %retval.0.i131, %cleanup27.thread ], [ %retval.0.i34.i160.ph, %nand_write_data_op.exit165.thread210 ], [ %retval.0.i34.i196.ph, %nand_write_data_op.exit201.thread218 ], [ -22, %entry.cleanup60_crit_edge ], [ -22, %if.then53.cleanup60_crit_edge ], [ -22, %if.end40.cleanup60_crit_edge ], [ %call25.i.i158, %nand_write_data_op.exit165.cleanup60_crit_edge ], [ %call34, %if.else30.cleanup60_crit_edge ]
  ret i32 %retval.5
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_set_eccbytes(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_find_eccregion(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_read_page_swecc(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %6 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %calc_buf, align 4
  %code_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 12
  %8 = ptrtoint ptr %code_buf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %code_buf, align 8
  %read_page_raw = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %10 = ptrtoint ptr %read_page_raw to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %read_page_raw, align 8
  %call6 = tail call i32 %11(ptr noundef %chip, ptr noundef %buf, i32 noundef 1, i32 noundef %page) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not78 = icmp eq i32 %5, 0
  br i1 %tobool.not78, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %p.081 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %for.body.for.body_crit_edge ]
  %eccsteps.080 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %for.body.for.body_crit_edge ]
  %i.079 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %for.body.for.body_crit_edge ]
  %12 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %calculate, align 8
  %arrayidx = getelementptr i8, ptr %7, i32 %i.079
  %call8 = tail call i32 %13(ptr noundef %chip, ptr noundef %p.081, ptr noundef %arrayidx) #14
  %dec = add i32 %eccsteps.080, -1
  %add = add i32 %i.079, %3
  %add.ptr = getelementptr i8, ptr %p.081, i32 %1
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %14 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %16 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %total, align 8
  %call10 = tail call i32 @mtd_ooblayout_get_eccbytes(ptr noundef %chip, ptr noundef %9, ptr noundef %15, i32 noundef 0, i32 noundef %17) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %if.end, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.end
  %18 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %steps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool15.not82 = icmp eq i32 %19, 0
  br i1 %tobool15.not82, label %if.end.cleanup_crit_edge, label %for.body16.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body16.lr.ph:                                 ; preds = %if.end
  %correct = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 15
  %ecc_stats22 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %failed = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  br label %for.body16

for.body16:                                       ; preds = %if.end25.for.body16_crit_edge, %for.body16.lr.ph
  %max_bitflips.086 = phi i32 [ 0, %for.body16.lr.ph ], [ %max_bitflips.1, %if.end25.for.body16_crit_edge ]
  %p.185 = phi ptr [ %buf, %for.body16.lr.ph ], [ %add.ptr29, %if.end25.for.body16_crit_edge ]
  %eccsteps.184 = phi i32 [ %19, %for.body16.lr.ph ], [ %dec27, %if.end25.for.body16_crit_edge ]
  %i.183 = phi i32 [ 0, %for.body16.lr.ph ], [ %add28, %if.end25.for.body16_crit_edge ]
  %20 = ptrtoint ptr %correct to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %correct, align 4
  %arrayidx18 = getelementptr i8, ptr %9, i32 %i.183
  %arrayidx19 = getelementptr i8, ptr %7, i32 %i.183
  %call20 = tail call i32 %21(ptr noundef %chip, ptr noundef %p.185, ptr noundef %arrayidx18, ptr noundef %arrayidx19) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %cmp = icmp slt i32 %call20, 0
  br i1 %cmp, label %if.then21, label %if.else

if.then21:                                        ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  %22 = ptrtoint ptr %failed to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %failed, align 4
  %inc = add i32 %23, 1
  store i32 %inc, ptr %failed, align 4
  br label %if.end25

if.else:                                          ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %ecc_stats22 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ecc_stats22, align 4
  %add23 = add i32 %25, %call20
  store i32 %add23, ptr %ecc_stats22, align 4
  %26 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.086, i32 %call20)
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then21
  %max_bitflips.1 = phi i32 [ %max_bitflips.086, %if.then21 ], [ %26, %if.else ]
  %dec27 = add i32 %eccsteps.184, -1
  %add28 = add i32 %i.183, %3
  %add.ptr29 = getelementptr i8, ptr %p.185, i32 %1
  %tobool15.not = icmp eq i32 %dec27, 0
  br i1 %tobool15.not, label %if.end25.cleanup_crit_edge, label %if.end25.for.body16_crit_edge

if.end25.for.body16_crit_edge:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end25.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %for.end.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %max_bitflips.1, %if.end25.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nand_write_page_swecc(ptr noundef %chip, ptr noundef %buf, i32 noundef %oob_required, i32 noundef %page) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %size = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 4
  %0 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %size, align 8
  %bytes = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 5
  %2 = ptrtoint ptr %bytes to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bytes, align 4
  %steps = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 3
  %4 = ptrtoint ptr %steps to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %steps, align 4
  %calc_buf = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 11
  %6 = ptrtoint ptr %calc_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %calc_buf, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not34 = icmp eq i32 %5, 0
  br i1 %tobool.not34, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %calculate = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 14
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %p.037 = phi ptr [ %buf, %for.body.lr.ph ], [ %add.ptr, %for.body.for.body_crit_edge ]
  %eccsteps.036 = phi i32 [ %5, %for.body.lr.ph ], [ %dec, %for.body.for.body_crit_edge ]
  %i.035 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %for.body.for.body_crit_edge ]
  %8 = ptrtoint ptr %calculate to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %calculate, align 8
  %arrayidx = getelementptr i8, ptr %7, i32 %i.035
  %call5 = tail call i32 %9(ptr noundef %chip, ptr noundef %p.037, ptr noundef %arrayidx) #14
  %dec = add i32 %eccsteps.036, -1
  %add = add i32 %i.035, %3
  %add.ptr = getelementptr i8, ptr %p.037, i32 %1
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %10 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %oob_poi, align 4
  %total = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 6
  %12 = ptrtoint ptr %total to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %total, align 8
  %call7 = tail call i32 @mtd_ooblayout_set_eccbytes(ptr noundef %chip, ptr noundef %7, ptr noundef %11, i32 noundef 0, i32 noundef %13) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %write_page_raw = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %14 = ptrtoint ptr %write_page_raw to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %write_page_raw, align 4
  %call10 = tail call i32 %15(ptr noundef %chip, ptr noundef %buf, i32 noundef 1, i32 noundef %page) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end ], [ %call7, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rawnand_sw_bch_calculate(ptr noundef %chip, ptr noundef %buf, ptr noundef %code) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nand_ecc_sw_bch_calculate(ptr noundef %chip, ptr noundef %buf, ptr noundef %code) #14
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_ecc_sw_bch_calculate(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rawnand_erase(ptr noundef %nand, ptr nocapture noundef readonly %pos) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %lun.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 1
  %0 = ptrtoint ptr %lun.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %lun.i, align 4
  %rowconv.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 3
  %2 = ptrtoint ptr %rowconv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rowconv.i, align 8
  %shl.i = shl i32 %1, %3
  %eraseblock.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 3
  %4 = ptrtoint ptr %eraseblock.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %eraseblock.i, align 4
  %eraseblock_addr_shift.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 3, i32 1
  %6 = ptrtoint ptr %eraseblock_addr_shift.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %eraseblock_addr_shift.i, align 4
  %shl2.i = shl i32 %5, %7
  %or.i = or i32 %shl2.i, %shl.i
  %page.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 4
  %8 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %page.i, align 4
  %or3.i = or i32 %or.i, %9
  %shr = lshr i32 %or3.i, %7
  %10 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pos, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 8
  %12 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %11)
  %cmp.i = icmp ult i32 %13, %11
  br i1 %cmp.i, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %entry
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 28
  %14 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %11, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 5, i32 2
  %15 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %16, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %16(ptr noundef %nand, i32 noundef %11) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %call1 = tail call i32 @nand_erase_op(ptr noundef %nand, i32 noundef %shr)
  %select_chip.i8 = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 5, i32 2
  %17 = ptrtoint ptr %select_chip.i8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %select_chip.i8, align 8
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %nand_select_target.exit.nand_deselect_target.exit_crit_edge, label %if.then.i

nand_select_target.exit.nand_deselect_target.exit_crit_edge: ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %18(ptr noundef %nand, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %nand_select_target.exit.nand_deselect_target.exit_crit_edge
  %cur_cs.i9 = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 28
  %19 = ptrtoint ptr %cur_cs.i9 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -1, ptr %cur_cs.i9, align 4
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @rawnand_markbad(ptr noundef %nand, ptr nocapture noundef readonly %pos) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %page.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 4
  %0 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %page.i, align 4
  %eraseblock.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 3
  %2 = ptrtoint ptr %eraseblock.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %eraseblock.i, align 4
  %lun.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 1
  %4 = ptrtoint ptr %lun.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lun.i, align 4
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pos, align 4
  %luns_per_target.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 7
  %8 = ptrtoint ptr %luns_per_target.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %luns_per_target.i, align 4
  %mul.i = mul i32 %9, %7
  %add.i = add i32 %mul.i, %5
  %eraseblocks_per_lun.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 4
  %10 = ptrtoint ptr %eraseblocks_per_lun.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %eraseblocks_per_lun.i, align 8
  %mul2.i = mul i32 %add.i, %11
  %add3.i = add i32 %mul2.i, %3
  %pages_per_eraseblock.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %pages_per_eraseblock.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pages_per_eraseblock.i, align 4
  %mul5.i = mul i32 %add3.i, %13
  %add6.i = add i32 %mul5.i, %1
  %conv.i = zext i32 %add6.i to i64
  %pagesize.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %pagesize.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pagesize.i, align 4
  %conv8.i = zext i32 %15 to i64
  %mul9.i = mul nuw i64 %conv.i, %conv8.i
  %call1 = tail call i32 @nand_markbad_bbm(ptr noundef %nand, i64 noundef %mul9.i)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal zeroext i1 @rawnand_isbad(ptr noundef %nand, ptr nocapture noundef readonly %pos) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pos, align 4
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 8
  %2 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %1)
  %cmp.i = icmp ult i32 %3, %1
  br i1 %cmp.i, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %entry
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 28
  %4 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %1, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 5, i32 2
  %5 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %6, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %6(ptr noundef %nand, i32 noundef %1) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %page.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 4
  %7 = ptrtoint ptr %page.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %page.i, align 4
  %eraseblock.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 3
  %9 = ptrtoint ptr %eraseblock.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %eraseblock.i, align 4
  %lun.i = getelementptr inbounds %struct.nand_pos, ptr %pos, i32 0, i32 1
  %11 = ptrtoint ptr %lun.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %lun.i, align 4
  %13 = ptrtoint ptr %pos to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pos, align 4
  %luns_per_target.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 7
  %15 = ptrtoint ptr %luns_per_target.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %luns_per_target.i, align 4
  %mul.i = mul i32 %16, %14
  %add.i = add i32 %mul.i, %12
  %eraseblocks_per_lun.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 4
  %17 = ptrtoint ptr %eraseblocks_per_lun.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %eraseblocks_per_lun.i, align 8
  %mul2.i = mul i32 %add.i, %18
  %add3.i = add i32 %mul2.i, %10
  %pages_per_eraseblock.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 3
  %19 = ptrtoint ptr %pages_per_eraseblock.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %pages_per_eraseblock.i, align 4
  %mul5.i = mul i32 %add3.i, %20
  %add6.i = add i32 %mul5.i, %8
  %conv.i = zext i32 %add6.i to i64
  %pagesize.i = getelementptr inbounds %struct.nand_device, ptr %nand, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %pagesize.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pagesize.i, align 4
  %conv8.i = zext i32 %22 to i64
  %mul9.i = mul nuw i64 %conv.i, %conv8.i
  %call1 = tail call fastcc i32 @nand_isbad_bbm(ptr noundef %nand, i64 noundef %mul9.i)
  %select_chip.i6 = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 5, i32 2
  %23 = ptrtoint ptr %select_chip.i6 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %select_chip.i6, align 8
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %nand_select_target.exit.nand_deselect_target.exit_crit_edge, label %if.then.i

nand_select_target.exit.nand_deselect_target.exit_crit_edge: ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %24(ptr noundef %nand, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %nand_select_target.exit.nand_deselect_target.exit_crit_edge
  %cur_cs.i7 = getelementptr inbounds %struct.nand_chip, ptr %nand, i32 0, i32 28
  %25 = ptrtoint ptr %cur_cs.i7 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 -1, ptr %cur_cs.i7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool = icmp ne i32 %call1, 0
  ret i1 %tobool
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_do_write_ops(ptr noundef %chip, i64 noundef %to, ptr nocapture noundef %ops) unnamed_addr #4 align 64 {
entry:
  %status.i = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 1
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  %ooblen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 3
  %2 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ooblen, align 4
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp eq i32 %5, 1
  %oobavail.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 7
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %cond.in.i = select i1 %cmp.i, ptr %oobavail.i, ptr %oobsize.i
  %6 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %oobbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 7
  %7 = ptrtoint ptr %oobbuf to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %oobbuf, align 4
  %datbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 6
  %9 = ptrtoint ptr %datbuf to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %datbuf, align 4
  %tobool.not = icmp eq ptr %8, null
  %not.tobool.not = xor i1 %tobool.not, true
  %cond = zext i1 %not.tobool.not to i32
  %retlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 2
  %11 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %retlen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool2.not = icmp eq i32 %1, 0
  br i1 %tobool2.not, label %entry.cleanup168_crit_edge, label %if.end

entry.cleanup168_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup168

if.end:                                           ; preds = %entry
  %subpagesize = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 21
  %12 = ptrtoint ptr %subpagesize to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %subpagesize, align 4
  %sub = add i32 %13, -1
  %conv = zext i32 %sub to i64
  %and = and i64 %conv, %to
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %cmp.not = icmp eq i64 %and, 0
  %and7 = and i32 %sub, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %cmp8.not = icmp eq i32 %and7, 0
  %or.cond = select i1 %cmp.not, i1 %cmp8.not, i1 false
  br i1 %or.cond, label %if.end12, label %do.end

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %call11 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.123, ptr noundef nonnull @.str.124) #19
  br label %cleanup168

if.end12:                                         ; preds = %if.end
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %14 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %15 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %cmp29.not.i = icmp eq i8 %15, 0
  br i1 %cmp29.not.i, label %if.end12.if.end16_crit_edge, label %for.body.lr.ph.i

if.end12.if.end16_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

for.body.lr.ph.i:                                 ; preds = %if.end12
  %conv13 = zext i32 %1 to i64
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %16 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %conv13, %to
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i272, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %17, i32 %i.030.i
  %18 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %19)
  %cmp3.not.i = icmp ugt i64 %add.i, %19
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %17, i32 %i.030.i, i32 1
  %20 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %21, %19
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %to)
  %cmp8.not.i = icmp ugt i64 %add7.i, %to
  br i1 %cmp8.not.i, label %do.body.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_write_ops, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %to, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup168_crit_edge, label %if.then12.i.if.end16_crit_edge

if.then12.i.if.end16_crit_edge:                   ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.then12.i.cleanup168_crit_edge:                 ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup168

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i272 = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i ], [ %cmp.i272, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup168_crit_edge, label %nand_region_is_secured.exit.if.end16_crit_edge

nand_region_is_secured.exit.if.end16_crit_edge:   ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

nand_region_is_secured.exit.cleanup168_crit_edge: ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup168

if.end16:                                         ; preds = %nand_region_is_secured.exit.if.end16_crit_edge, %if.then12.i.if.end16_crit_edge, %if.end12.if.end16_crit_edge
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %22 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %writesize, align 4
  %sub17 = add i32 %23, -1
  %24 = trunc i64 %to to i32
  %conv20 = and i32 %sub17, %24
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %25 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %chip_shift, align 4
  %sh_prom = zext i32 %26 to i64
  %shr = ashr i64 %to, %sh_prom
  %conv21 = trunc i64 %shr to i32
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %27 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %conv21)
  %cmp.i273 = icmp ult i32 %28, %conv21
  br i1 %cmp.i273, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end16
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %29 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %conv21, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %30 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %31, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %31(ptr noundef %chip, i32 noundef %conv21) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %status.i) #14
  %32 = ptrtoint ptr %status.i to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 -1, ptr %status.i, align 1, !annotation !380
  %options.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %33 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %options.i, align 8
  %and.i = and i32 %34, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %nand_check_wp.exit.thread

nand_check_wp.exit.thread:                        ; preds = %nand_select_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %if.end25

if.end.i:                                         ; preds = %nand_select_target.exit
  %call.i = call i32 @nand_status_op(ptr noundef %chip, ptr noundef nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool1.not.i, label %nand_check_wp.exit, label %nand_check_wp.exit.thread304

nand_check_wp.exit.thread304:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  br label %err_out

nand_check_wp.exit:                               ; preds = %if.end.i
  %35 = ptrtoint ptr %status.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %status.i, align 1
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %status.i) #14
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %36)
  %tobool23.not = icmp slt i8 %36, 0
  br i1 %tobool23.not, label %nand_check_wp.exit.if.end25_crit_edge, label %nand_check_wp.exit.err_out_crit_edge

nand_check_wp.exit.err_out_crit_edge:             ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_out

nand_check_wp.exit.if.end25_crit_edge:            ; preds = %nand_check_wp.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25

if.end25:                                         ; preds = %nand_check_wp.exit.if.end25_crit_edge, %nand_check_wp.exit.thread
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %37 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %page_shift, align 4
  %sh_prom26 = zext i32 %38 to i64
  %shr27 = ashr i64 %to, %sh_prom26
  %conv28 = trunc i64 %shr27 to i32
  %pagemask = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %39 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %pagemask, align 8
  %and29 = and i32 %40, %conv28
  %page30 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %41 = ptrtoint ptr %page30 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %page30, align 4
  %conv31 = sext i32 %42 to i64
  %shl = shl i64 %conv31, %sh_prom26
  call void @__sanitizer_cov_trace_cmp8(i64 %shl, i64 %to)
  %cmp34.not = icmp slt i64 %shl, %to
  br i1 %cmp34.not, label %if.end25.if.end49_crit_edge, label %land.lhs.true

if.end25.if.end49_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

land.lhs.true:                                    ; preds = %if.end25
  %43 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %len, align 4
  %conv43 = zext i32 %44 to i64
  %add = add i64 %conv43, %to
  call void @__sanitizer_cov_trace_cmp8(i64 %shl, i64 %add)
  %cmp44 = icmp slt i64 %shl, %add
  br i1 %cmp44, label %if.then46, label %land.lhs.true.if.end49_crit_edge

land.lhs.true.if.end49_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then46:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %page30 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -1, ptr %page30, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then46, %land.lhs.true.if.end49_crit_edge, %if.end25.if.end49_crit_edge
  br i1 %tobool.not, label %if.end49.if.end60_crit_edge, label %land.lhs.true51

if.end49.if.end60_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

land.lhs.true51:                                  ; preds = %if.end49
  %ooboffs = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %46 = ptrtoint ptr %ooboffs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ooboffs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool52.not = icmp eq i32 %47, 0
  br i1 %tobool52.not, label %land.lhs.true51.if.end60_crit_edge, label %land.lhs.true53

land.lhs.true51.if.end60_crit_edge:               ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

land.lhs.true53:                                  ; preds = %land.lhs.true51
  %48 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %ooblen, align 4
  %add56 = add i32 %49, %47
  call void @__sanitizer_cov_trace_cmp4(i32 %add56, i32 %cond.i)
  %cmp57 = icmp ugt i32 %add56, %cond.i
  br i1 %cmp57, label %land.lhs.true53.err_out_crit_edge, label %land.lhs.true53.if.end60_crit_edge

land.lhs.true53.if.end60_crit_edge:               ; preds = %land.lhs.true53
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

land.lhs.true53.err_out_crit_edge:                ; preds = %land.lhs.true53
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_out

if.end60:                                         ; preds = %land.lhs.true53.if.end60_crit_edge, %land.lhs.true51.if.end60_crit_edge, %if.end49.if.end60_crit_edge
  %buf_align = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 25
  %data_buf.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %oob_poi = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %write_subpage.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 20
  %write_page.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 21
  %write_page_raw.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 17
  %select_chip.i281 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %cur_cs.i284 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %if.end60
  %column.0.ph = phi i32 [ %conv20, %if.end60 ], [ 0, %while.cond.outer.backedge ]
  %writelen.0.ph = phi i32 [ %1, %if.end60 ], [ %sub142, %while.cond.outer.backedge ]
  %oobwritelen.0.ph = phi i32 [ %3, %if.end60 ], [ %oobwritelen.1, %while.cond.outer.backedge ]
  %oob.0.ph = phi ptr [ %8, %if.end60 ], [ %oob.1, %while.cond.outer.backedge ]
  %buf.0.ph = phi ptr [ %10, %if.end60 ], [ %add.ptr, %while.cond.outer.backedge ]
  %page.0.ph = phi i32 [ %and29, %if.end60 ], [ %and147, %while.cond.outer.backedge ]
  %realpage.0.ph = phi i32 [ %conv28, %if.end60 ], [ %inc, %while.cond.outer.backedge ]
  %chipnr.0.ph = phi i32 [ %conv21, %if.end60 ], [ %inc150, %while.cond.outer.backedge ]
  br label %while.cond

while.cond:                                       ; preds = %if.end145.while.cond_crit_edge, %while.cond.outer
  %column.0 = phi i32 [ 0, %if.end145.while.cond_crit_edge ], [ %column.0.ph, %while.cond.outer ]
  %writelen.0 = phi i32 [ %sub142, %if.end145.while.cond_crit_edge ], [ %writelen.0.ph, %while.cond.outer ]
  %oobwritelen.0 = phi i32 [ %oobwritelen.1, %if.end145.while.cond_crit_edge ], [ %oobwritelen.0.ph, %while.cond.outer ]
  %oob.0 = phi ptr [ %oob.1, %if.end145.while.cond_crit_edge ], [ %oob.0.ph, %while.cond.outer ]
  %buf.0 = phi ptr [ %add.ptr, %if.end145.while.cond_crit_edge ], [ %buf.0.ph, %while.cond.outer ]
  %page.0 = phi i32 [ %and147, %if.end145.while.cond_crit_edge ], [ %page.0.ph, %while.cond.outer ]
  %realpage.0 = phi i32 [ %inc, %if.end145.while.cond_crit_edge ], [ %realpage.0.ph, %while.cond.outer ]
  %50 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %column.0)
  %tobool62.not = icmp eq i32 %column.0, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %writelen.0, i32 %51)
  %cmp64 = icmp ult i32 %writelen.0, %51
  %not.tobool62.not = xor i1 %tobool62.not, true
  %spec.select = select i1 %not.tobool62.not, i1 true, i1 %cmp64
  br i1 %spec.select, label %while.cond.do.body94_crit_edge, label %if.else

while.cond.do.body94_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

if.else:                                          ; preds = %while.cond
  %52 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %options.i, align 8
  %and68 = and i32 %53, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68)
  %tobool69.not = icmp eq i32 %and68, 0
  br i1 %tobool69.not, label %if.else.if.end115_crit_edge, label %if.then70

if.else.if.end115_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end115

if.then70:                                        ; preds = %if.else
  %54 = ptrtoint ptr %buf.0 to i32
  %cmp71 = icmp ugt ptr %buf.0, inttoptr (i32 -1073741825 to ptr)
  br i1 %cmp71, label %land.lhs.true73, label %if.then70.do.body94_crit_edge

if.then70.do.body94_crit_edge:                    ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

land.lhs.true73:                                  ; preds = %if.then70
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %55 = load ptr, ptr @high_memory, align 4
  %cmp74 = icmp ult ptr %buf.0, %55
  br i1 %cmp74, label %land.lhs.true76, label %land.lhs.true73.do.body94_crit_edge

land.lhs.true73.do.body94_crit_edge:              ; preds = %land.lhs.true73
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %sub77 = add i32 %54, 1073741824
  %shr78 = lshr i32 %sub77, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %56 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add79 = add i32 %56, %shr78
  %call80 = call i32 @pfn_valid(i32 noundef %add79) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80)
  %tobool81.not = icmp eq i32 %call80, 0
  br i1 %tobool81.not, label %land.lhs.true76.do.body94_crit_edge, label %if.end91

land.lhs.true76.do.body94_crit_edge:              ; preds = %land.lhs.true76
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

if.end91:                                         ; preds = %land.lhs.true76
  %57 = ptrtoint ptr %buf_align to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %buf_align, align 8
  %sub83 = add i32 %58, -1
  %and84 = and i32 %sub83, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %cmp85.not = icmp eq i32 %and84, 0
  br i1 %cmp85.not, label %if.end91.if.end115_crit_edge, label %if.end91.do.body94_crit_edge

if.end91.do.body94_crit_edge:                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body94

if.end91.if.end115_crit_edge:                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end115

do.body94:                                        ; preds = %if.end91.do.body94_crit_edge, %land.lhs.true76.do.body94_crit_edge, %land.lhs.true73.do.body94_crit_edge, %if.then70.do.body94_crit_edge, %while.cond.do.body94_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_do_write_ops.__UNIQUE_ID_ddebug295, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_write_ops, %if.then101)) #14
          to label %do.end104 [label %if.then101], !srcloc !385

if.then101:                                       ; preds = %do.body94
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_do_write_ops.__UNIQUE_ID_ddebug295, ptr noundef nonnull @.str.126, ptr noundef nonnull @.str.124, ptr noundef %buf.0) #14
  br label %do.end104

do.end104:                                        ; preds = %if.then101, %do.body94
  %sub107 = sub i32 %51, %column.0
  %59 = call i32 @llvm.smin.i32(i32 %sub107, i32 %writelen.0)
  %bytes.0 = select i1 %spec.select, i32 %59, i32 %51
  %60 = ptrtoint ptr %page30 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 -1, ptr %page30, align 4
  %61 = ptrtoint ptr %data_buf.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %data_buf.i, align 8
  %63 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %writesize, align 4
  %65 = call ptr @memset(ptr %62, i32 255, i32 %64)
  %arrayidx = getelementptr i8, ptr %62, i32 %column.0
  %66 = call ptr @memcpy(ptr %arrayidx, ptr %buf.0, i32 %bytes.0)
  br label %if.end115

if.end115:                                        ; preds = %do.end104, %if.end91.if.end115_crit_edge, %if.else.if.end115_crit_edge
  %bytes.1 = phi i32 [ %bytes.0, %do.end104 ], [ %51, %if.end91.if.end115_crit_edge ], [ %51, %if.else.if.end115_crit_edge ]
  %wbuf.0 = phi ptr [ %62, %do.end104 ], [ %buf.0, %if.end91.if.end115_crit_edge ], [ %buf.0, %if.else.if.end115_crit_edge ]
  %tobool116.not = icmp eq ptr %oob.0, null
  br i1 %tobool116.not, label %if.else134, label %if.then123, !prof !379

if.then123:                                       ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #16
  %67 = call i32 @llvm.umin.i32(i32 %oobwritelen.0, i32 %cond.i)
  %call132 = call fastcc ptr @nand_fill_oob(ptr noundef %chip, ptr noundef nonnull %oob.0, i32 noundef %67, ptr noundef %ops)
  %sub133 = sub i32 %oobwritelen.0, %67
  br label %if.end135

if.else134:                                       ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #16
  %68 = ptrtoint ptr %oob_poi to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %oob_poi, align 4
  %70 = ptrtoint ptr %oobsize.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %oobsize.i, align 4
  %72 = call ptr @memset(ptr %69, i32 255, i32 %71)
  br label %if.end135

if.end135:                                        ; preds = %if.else134, %if.then123
  %oobwritelen.1 = phi i32 [ %sub133, %if.then123 ], [ %oobwritelen.0, %if.else134 ]
  %oob.1 = phi ptr [ %call132, %if.then123 ], [ null, %if.else134 ]
  %73 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %74)
  %cmp136 = icmp eq i32 %74, 2
  %75 = ptrtoint ptr %options.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %options.i, align 8
  %and.i276 = and i32 %76, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i276)
  %tobool.not.i277 = icmp eq i32 %and.i276, 0
  br i1 %tobool.not.i277, label %land.lhs.true.i, label %if.end135.if.end.i280_crit_edge

if.end135.if.end.i280_crit_edge:                  ; preds = %if.end135
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i280

land.lhs.true.i:                                  ; preds = %if.end135
  %77 = ptrtoint ptr %write_subpage.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %write_subpage.i, align 8
  %tobool1.not.i278 = icmp eq ptr %78, null
  br i1 %tobool1.not.i278, label %land.lhs.true.i.if.end.i280_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i280_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i280

if.then.i:                                        ; preds = %land.lhs.true.i
  br i1 %tobool62.not, label %lor.rhs.i, label %if.end.thread.i

lor.rhs.i:                                        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %79 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %writesize, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %80, i32 %bytes.1)
  %cmp.i279 = icmp ugt i32 %80, %bytes.1
  %phi.cast.i = zext i1 %cmp.i279 to i32
  br label %if.end.i280

if.end.i280:                                      ; preds = %lor.rhs.i, %land.lhs.true.i.if.end.i280_crit_edge, %if.end135.if.end.i280_crit_edge
  %subpage.0.i = phi i32 [ %phi.cast.i, %lor.rhs.i ], [ 0, %land.lhs.true.i.if.end.i280_crit_edge ], [ 0, %if.end135.if.end.i280_crit_edge ]
  br i1 %cmp136, label %if.end.i280.if.then6.i_crit_edge, label %if.else9.i, !prof !378

if.end.i280.if.then6.i_crit_edge:                 ; preds = %if.end.i280
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6.i

if.end.thread.i:                                  ; preds = %if.then.i
  br i1 %cmp136, label %if.end.thread.i.if.then6.i_crit_edge, label %if.end.thread.i.if.then11.i_crit_edge, !prof !378

if.end.thread.i.if.then11.i_crit_edge:            ; preds = %if.end.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

if.end.thread.i.if.then6.i_crit_edge:             ; preds = %if.end.thread.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6.i

if.then6.i:                                       ; preds = %if.end.thread.i.if.then6.i_crit_edge, %if.end.i280.if.then6.i_crit_edge
  %81 = ptrtoint ptr %write_page_raw.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %write_page_raw.i, align 4
  %call8.i = call i32 %82(ptr noundef %chip, ptr noundef %wbuf.0, i32 noundef %cond, i32 noundef %page.0) #14
  br label %nand_write_page.exit

if.else9.i:                                       ; preds = %if.end.i280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %subpage.0.i)
  %tobool10.not.i = icmp eq i32 %subpage.0.i, 0
  br i1 %tobool10.not.i, label %if.else15.i, label %if.else9.i.if.then11.i_crit_edge

if.else9.i.if.then11.i_crit_edge:                 ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then11.i

if.then11.i:                                      ; preds = %if.else9.i.if.then11.i_crit_edge, %if.end.thread.i.if.then11.i_crit_edge
  %83 = ptrtoint ptr %write_subpage.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %write_subpage.i, align 8
  %call14.i = call i32 %84(ptr noundef %chip, i32 noundef %column.0, i32 noundef %bytes.1, ptr noundef %wbuf.0, i32 noundef %cond, i32 noundef %page.0) #14
  br label %nand_write_page.exit

if.else15.i:                                      ; preds = %if.else9.i
  call void @__sanitizer_cov_trace_pc() #16
  %85 = ptrtoint ptr %write_page.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %write_page.i, align 4
  %call17.i = call i32 %86(ptr noundef %chip, ptr noundef %wbuf.0, i32 noundef %cond, i32 noundef %page.0) #14
  br label %nand_write_page.exit

nand_write_page.exit:                             ; preds = %if.else15.i, %if.then11.i, %if.then6.i
  %status.0.i = phi i32 [ %call8.i, %if.then6.i ], [ %call14.i, %if.then11.i ], [ %call17.i, %if.else15.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %status.0.i)
  %tobool139.not = icmp sgt i32 %status.0.i, -1
  br i1 %tobool139.not, label %if.end141, label %nand_write_page.exit.while.end_crit_edge

nand_write_page.exit.while.end_crit_edge:         ; preds = %nand_write_page.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end141:                                        ; preds = %nand_write_page.exit
  %sub142 = sub i32 %writelen.0, %bytes.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub142)
  %tobool143.not = icmp eq i32 %sub142, 0
  br i1 %tobool143.not, label %if.end141.while.end_crit_edge, label %if.end145

if.end141.while.end_crit_edge:                    ; preds = %if.end141
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end145:                                        ; preds = %if.end141
  %add.ptr = getelementptr i8, ptr %buf.0, i32 %bytes.1
  %inc = add i32 %realpage.0, 1
  %87 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %pagemask, align 8
  %and147 = and i32 %88, %inc
  %tobool148.not = icmp eq i32 %and147, 0
  br i1 %tobool148.not, label %if.then149, label %if.end145.while.cond_crit_edge

if.end145.while.cond_crit_edge:                   ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then149:                                       ; preds = %if.end145
  %inc150 = add i32 %chipnr.0.ph, 1
  %89 = ptrtoint ptr %select_chip.i281 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %select_chip.i281, align 8
  %tobool.not.i282 = icmp eq ptr %90, null
  br i1 %tobool.not.i282, label %if.then149.nand_deselect_target.exit_crit_edge, label %if.then.i283

if.then149.nand_deselect_target.exit_crit_edge:   ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i283:                                     ; preds = %if.then149
  call void @__sanitizer_cov_trace_pc() #16
  call void %90(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i283, %if.then149.nand_deselect_target.exit_crit_edge
  %91 = ptrtoint ptr %cur_cs.i284 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 -1, ptr %cur_cs.i284, align 4
  %92 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %93, i32 %inc150)
  %cmp.i287 = icmp ult i32 %93, %inc150
  br i1 %cmp.i287, label %do.end.i288, label %if.end21.critedge.i292, !prof !378

do.end.i288:                                      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %while.cond.outer.backedge

if.end21.critedge.i292:                           ; preds = %nand_deselect_target.exit
  %94 = ptrtoint ptr %cur_cs.i284 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %inc150, ptr %cur_cs.i284, align 4
  %95 = ptrtoint ptr %select_chip.i281 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %select_chip.i281, align 8
  %tobool22.not.i291 = icmp eq ptr %96, null
  br i1 %tobool22.not.i291, label %if.end21.critedge.i292.while.cond.outer.backedge_crit_edge, label %if.then23.i293

if.end21.critedge.i292.while.cond.outer.backedge_crit_edge: ; preds = %if.end21.critedge.i292
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.outer.backedge

if.then23.i293:                                   ; preds = %if.end21.critedge.i292
  call void @__sanitizer_cov_trace_pc() #16
  call void %96(ptr noundef %chip, i32 noundef %inc150) #14
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.then23.i293, %if.end21.critedge.i292.while.cond.outer.backedge_crit_edge, %do.end.i288
  br label %while.cond.outer

while.end:                                        ; preds = %if.end141.while.end_crit_edge, %nand_write_page.exit.while.end_crit_edge
  %writelen.1.ph = phi i32 [ 0, %if.end141.while.end_crit_edge ], [ %writelen.0, %nand_write_page.exit.while.end_crit_edge ]
  %97 = call i32 @llvm.smin.i32(i32 %status.0.i, i32 0) #14
  %98 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %len, align 4
  %sub156 = sub i32 %99, %writelen.1.ph
  %100 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %sub156, ptr %retlen, align 4
  %tobool158.not = icmp eq ptr %oob.1, null
  br i1 %tobool158.not, label %while.end.err_out_crit_edge, label %if.then165, !prof !379

while.end.err_out_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %err_out

if.then165:                                       ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  %101 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %ooblen, align 4
  %oobretlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 4
  %103 = ptrtoint ptr %oobretlen to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %102, ptr %oobretlen, align 4
  br label %err_out

err_out:                                          ; preds = %if.then165, %while.end.err_out_crit_edge, %land.lhs.true53.err_out_crit_edge, %nand_check_wp.exit.err_out_crit_edge, %nand_check_wp.exit.thread304
  %ret.0 = phi i32 [ %97, %if.then165 ], [ %97, %while.end.err_out_crit_edge ], [ -5, %nand_check_wp.exit.err_out_crit_edge ], [ -22, %land.lhs.true53.err_out_crit_edge ], [ -5, %nand_check_wp.exit.thread304 ]
  %select_chip.i295 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %104 = ptrtoint ptr %select_chip.i295 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %select_chip.i295, align 8
  %tobool.not.i296 = icmp eq ptr %105, null
  br i1 %tobool.not.i296, label %err_out.nand_deselect_target.exit300_crit_edge, label %if.then.i297

err_out.nand_deselect_target.exit300_crit_edge:   ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit300

if.then.i297:                                     ; preds = %err_out
  call void @__sanitizer_cov_trace_pc() #16
  call void %105(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit300

nand_deselect_target.exit300:                     ; preds = %if.then.i297, %err_out.nand_deselect_target.exit300_crit_edge
  %cur_cs.i298 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %106 = ptrtoint ptr %cur_cs.i298 to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 -1, ptr %cur_cs.i298, align 4
  br label %cleanup168

cleanup168:                                       ; preds = %nand_deselect_target.exit300, %nand_region_is_secured.exit.cleanup168_crit_edge, %if.then12.i.cleanup168_crit_edge, %do.end, %entry.cleanup168_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ %ret.0, %nand_deselect_target.exit300 ], [ 0, %entry.cleanup168_crit_edge ], [ -5, %nand_region_is_secured.exit.cleanup168_crit_edge ], [ -5, %if.then12.i.cleanup168_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pfn_valid(i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_do_read_oob(ptr noundef %chip, i64 noundef %from, ptr nocapture noundef %ops) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %ooblen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 3
  %0 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ooblen, align 4
  %oobbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 7
  %2 = ptrtoint ptr %oobbuf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %oobbuf, align 4
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_do_read_oob.__UNIQUE_ID_ddebug290, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_oob, %if.then)) #14
          to label %do.end [label %if.then], !srcloc !385

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_do_read_oob.__UNIQUE_ID_ddebug290, ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.127, i64 noundef %from, i32 noundef %1) #14
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %4 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %5 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp29.not.i = icmp eq i8 %5, 0
  br i1 %cmp29.not.i, label %do.end.if.end6_crit_edge, label %for.body.lr.ph.i

do.end.if.end6_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

for.body.lr.ph.i:                                 ; preds = %do.end
  %conv = sext i32 %1 to i64
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %6 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %conv, %from
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %7, i32 %i.030.i
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %9)
  %cmp3.not.i = icmp ugt i64 %add.i, %9
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %7, i32 %i.030.i, i32 1
  %10 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %11, %9
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %from)
  %cmp8.not.i = icmp ugt i64 %add7.i, %from
  br i1 %cmp8.not.i, label %do.body.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_oob, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %from, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup_crit_edge, label %if.then12.i.if.end6_crit_edge

if.then12.i.if.end6_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then12.i.cleanup_crit_edge:                    ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i ], [ %cmp.i, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup_crit_edge, label %nand_region_is_secured.exit.if.end6_crit_edge

nand_region_is_secured.exit.if.end6_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

nand_region_is_secured.exit.cleanup_crit_edge:    ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end6:                                          ; preds = %nand_region_is_secured.exit.if.end6_crit_edge, %if.then12.i.if.end6_crit_edge, %do.end.if.end6_crit_edge
  %stats.sroa.4.0.ecc_stats.sroa_idx = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  %12 = ptrtoint ptr %stats.sroa.4.0.ecc_stats.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %12)
  %stats.sroa.4.0.copyload = load i32, ptr %stats.sroa.4.0.ecc_stats.sroa_idx, align 4
  %13 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %14)
  %cmp.i110 = icmp eq i32 %14, 1
  %oobavail.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 7
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %cond.in.i = select i1 %cmp.i110, ptr %oobavail.i, ptr %oobsize.i
  %15 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %16 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %chip_shift, align 4
  %sh_prom = zext i32 %17 to i64
  %shr = ashr i64 %from, %sh_prom
  %conv8 = trunc i64 %shr to i32
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %18 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %conv8)
  %cmp.i111 = icmp ult i32 %19, %conv8
  br i1 %cmp.i111, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end6
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %20 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv8, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %21 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %22, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %22(ptr noundef %chip, i32 noundef %conv8) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %23 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %page_shift, align 4
  %sh_prom9 = zext i32 %24 to i64
  %shr10 = ashr i64 %from, %sh_prom9
  %conv11 = trunc i64 %shr10 to i32
  %pagemask = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %25 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pagemask, align 8
  %and = and i32 %26, %conv11
  %read_oob = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 24
  %read_oob_raw = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 23
  %oob_poi3.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %ooboffs4.i = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %select_chip.i113 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %cur_cs.i115 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %nand_select_target.exit
  %realpage.0.ph = phi i32 [ %conv11, %nand_select_target.exit ], [ %inc, %while.cond.outer.backedge ]
  %chipnr.0.ph = phi i32 [ %conv8, %nand_select_target.exit ], [ %inc40, %while.cond.outer.backedge ]
  %readlen.0.ph = phi i32 [ %1, %nand_select_target.exit ], [ %sub, %while.cond.outer.backedge ]
  %len.0.ph = phi i32 [ %cond.i, %nand_select_target.exit ], [ %30, %while.cond.outer.backedge ]
  %buf.0.ph = phi ptr [ %3, %nand_select_target.exit ], [ %retval.0.i112, %while.cond.outer.backedge ]
  %page.0.ph = phi i32 [ %and, %nand_select_target.exit ], [ %and37, %while.cond.outer.backedge ]
  %max_bitflips.0.ph = phi i32 [ 0, %nand_select_target.exit ], [ %43, %while.cond.outer.backedge ]
  br label %while.cond

while.cond:                                       ; preds = %if.end35.while.cond_crit_edge, %while.cond.outer
  %realpage.0 = phi i32 [ %inc, %if.end35.while.cond_crit_edge ], [ %realpage.0.ph, %while.cond.outer ]
  %readlen.0 = phi i32 [ %sub, %if.end35.while.cond_crit_edge ], [ %readlen.0.ph, %while.cond.outer ]
  %len.0 = phi i32 [ %30, %if.end35.while.cond_crit_edge ], [ %len.0.ph, %while.cond.outer ]
  %buf.0 = phi ptr [ %retval.0.i112, %if.end35.while.cond_crit_edge ], [ %buf.0.ph, %while.cond.outer ]
  %page.0 = phi i32 [ %and37, %if.end35.while.cond_crit_edge ], [ %page.0.ph, %while.cond.outer ]
  %max_bitflips.0 = phi i32 [ %43, %if.end35.while.cond_crit_edge ], [ %max_bitflips.0.ph, %while.cond.outer ]
  %27 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %28)
  %cmp = icmp eq i32 %28, 2
  %read_oob_raw.read_oob = select i1 %cmp, ptr %read_oob_raw, ptr %read_oob
  %29 = ptrtoint ptr %read_oob_raw.read_oob to i32
  call void @__asan_load4_noabort(i32 %29)
  %.sink = load ptr, ptr %read_oob_raw.read_oob, align 4
  %call16 = tail call i32 %.sink(ptr noundef %chip, i32 noundef %page.0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp18 = icmp slt i32 %call16, 0
  br i1 %cmp18, label %while.cond.while.end_crit_edge, label %if.end21

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end21:                                         ; preds = %while.cond
  %30 = tail call i32 @llvm.smin.i32(i32 %len.0, i32 %readlen.0)
  %31 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ops, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.150)
  switch i32 %32, label %do.body15.i [
    i32 0, label %if.end21.sw.bb.i_crit_edge
    i32 2, label %if.end21.sw.bb.i_crit_edge172
    i32 1, label %sw.bb2.i
  ]

if.end21.sw.bb.i_crit_edge172:                    ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.end21.sw.bb.i_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.end21.sw.bb.i_crit_edge, %if.end21.sw.bb.i_crit_edge172
  %34 = ptrtoint ptr %oob_poi3.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %oob_poi3.i, align 4
  %36 = ptrtoint ptr %ooboffs4.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ooboffs4.i, align 4
  %add.ptr.i = getelementptr i8, ptr %35, i32 %37
  %38 = call ptr @memcpy(ptr %buf.0, ptr %add.ptr.i, i32 %30)
  br label %nand_transfer_oob.exit

sw.bb2.i:                                         ; preds = %if.end21
  %39 = ptrtoint ptr %oob_poi3.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %oob_poi3.i, align 4
  %41 = ptrtoint ptr %ooboffs4.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ooboffs4.i, align 4
  %call5.i = tail call i32 @mtd_ooblayout_get_databytes(ptr noundef %chip, ptr noundef %buf.0, ptr noundef %40, i32 noundef %42, i32 noundef %30) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i, label %sw.bb2.i.nand_transfer_oob.exit_crit_edge, label %do.body8.i, !prof !379

sw.bb2.i.nand_transfer_oob.exit_crit_edge:        ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_transfer_oob.exit

do.body8.i:                                       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3348, 0\0A.popsection", ""() #14, !srcloc !389
  unreachable

do.body15.i:                                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3352, 0\0A.popsection", ""() #14, !srcloc !390
  unreachable

nand_transfer_oob.exit:                           ; preds = %sw.bb2.i.nand_transfer_oob.exit_crit_edge, %sw.bb.i
  tail call fastcc void @nand_wait_readrdy(ptr noundef %chip)
  %43 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0, i32 %call16)
  %sub = sub i32 %readlen.0, %30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool33.not = icmp eq i32 %sub, 0
  br i1 %tobool33.not, label %nand_transfer_oob.exit.while.end_crit_edge, label %if.end35

nand_transfer_oob.exit.while.end_crit_edge:       ; preds = %nand_transfer_oob.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end35:                                         ; preds = %nand_transfer_oob.exit
  %retval.0.i112 = getelementptr i8, ptr %buf.0, i32 %30
  %inc = add i32 %realpage.0, 1
  %44 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %pagemask, align 8
  %and37 = and i32 %45, %inc
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %if.then39, label %if.end35.while.cond_crit_edge

if.end35.while.cond_crit_edge:                    ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then39:                                        ; preds = %if.end35
  %inc40 = add i32 %chipnr.0.ph, 1
  %46 = ptrtoint ptr %select_chip.i113 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %select_chip.i113, align 8
  %tobool.not.i114 = icmp eq ptr %47, null
  br i1 %tobool.not.i114, label %if.then39.nand_deselect_target.exit_crit_edge, label %if.then.i

if.then39.nand_deselect_target.exit_crit_edge:    ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i:                                        ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %47(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i, %if.then39.nand_deselect_target.exit_crit_edge
  %48 = ptrtoint ptr %cur_cs.i115 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 -1, ptr %cur_cs.i115, align 4
  %49 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %50, i32 %inc40)
  %cmp.i117 = icmp ult i32 %50, %inc40
  br i1 %cmp.i117, label %do.end.i118, label %if.end21.critedge.i122, !prof !378

do.end.i118:                                      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %while.cond.outer.backedge

if.end21.critedge.i122:                           ; preds = %nand_deselect_target.exit
  %51 = ptrtoint ptr %cur_cs.i115 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %inc40, ptr %cur_cs.i115, align 4
  %52 = ptrtoint ptr %select_chip.i113 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %select_chip.i113, align 8
  %tobool22.not.i121 = icmp eq ptr %53, null
  br i1 %tobool22.not.i121, label %if.end21.critedge.i122.while.cond.outer.backedge_crit_edge, label %if.then23.i123

if.end21.critedge.i122.while.cond.outer.backedge_crit_edge: ; preds = %if.end21.critedge.i122
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.outer.backedge

if.then23.i123:                                   ; preds = %if.end21.critedge.i122
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %53(ptr noundef %chip, i32 noundef %inc40) #14
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.then23.i123, %if.end21.critedge.i122.while.cond.outer.backedge_crit_edge, %do.end.i118
  br label %while.cond.outer

while.end:                                        ; preds = %nand_transfer_oob.exit.while.end_crit_edge, %while.cond.while.end_crit_edge
  %readlen.1 = phi i32 [ %readlen.0, %while.cond.while.end_crit_edge ], [ 0, %nand_transfer_oob.exit.while.end_crit_edge ]
  %max_bitflips.1 = phi i32 [ %max_bitflips.0, %while.cond.while.end_crit_edge ], [ %43, %nand_transfer_oob.exit.while.end_crit_edge ]
  %54 = ptrtoint ptr %select_chip.i113 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %select_chip.i113, align 8
  %tobool.not.i126 = icmp eq ptr %55, null
  br i1 %tobool.not.i126, label %while.end.nand_deselect_target.exit129_crit_edge, label %if.then.i127

while.end.nand_deselect_target.exit129_crit_edge: ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit129

if.then.i127:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %55(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit129

nand_deselect_target.exit129:                     ; preds = %if.then.i127, %while.end.nand_deselect_target.exit129_crit_edge
  %56 = ptrtoint ptr %cur_cs.i115 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 -1, ptr %cur_cs.i115, align 4
  %57 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %ooblen, align 4
  %sub43 = sub i32 %58, %readlen.1
  %oobretlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 4
  %59 = ptrtoint ptr %oobretlen to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %sub43, ptr %oobretlen, align 4
  br i1 %cmp18, label %nand_deselect_target.exit129.cleanup_crit_edge, label %if.end47

nand_deselect_target.exit129.cleanup_crit_edge:   ; preds = %nand_deselect_target.exit129
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end47:                                         ; preds = %nand_deselect_target.exit129
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %stats.sroa.4.0.ecc_stats.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %stats.sroa.4.0.ecc_stats.sroa_idx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %61, i32 %stats.sroa.4.0.copyload)
  %tobool51.not = icmp eq i32 %61, %stats.sroa.4.0.copyload
  %max_bitflips.1. = select i1 %tobool51.not, i32 %max_bitflips.1, i32 -74
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %nand_deselect_target.exit129.cleanup_crit_edge, %nand_region_is_secured.exit.cleanup_crit_edge, %if.then12.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -5, %nand_region_is_secured.exit.cleanup_crit_edge ], [ %call16, %nand_deselect_target.exit129.cleanup_crit_edge ], [ %max_bitflips.1., %if.end47 ], [ -5, %if.then12.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nand_do_read_ops(ptr noundef %chip, i64 noundef %from, ptr nocapture noundef %ops) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %len = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 1
  %0 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %len, align 4
  %ooblen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 3
  %2 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ooblen, align 4
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i = icmp eq i32 %5, 1
  %oobavail.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 7
  %oobsize.i = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 6
  %cond.in.i = select i1 %cmp.i, ptr %oobavail.i, ptr %oobsize.i
  %6 = ptrtoint ptr %cond.in.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %cond.i = load i32, ptr %cond.in.i, align 4
  %nr_secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 31
  %7 = ptrtoint ptr %nr_secure_regions.i to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nr_secure_regions.i, align 8
  %conv.i = zext i8 %8 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp29.not.i = icmp eq i8 %8, 0
  br i1 %cmp29.not.i, label %entry.if.end_crit_edge, label %for.body.lr.ph.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.lr.ph.i:                                 ; preds = %entry
  %conv = zext i32 %1 to i64
  %secure_regions.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 30
  %9 = ptrtoint ptr %secure_regions.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %secure_regions.i, align 4
  %add.i = add i64 %conv, %from
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %cmp32.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.i374, %for.inc.i.for.body.i_crit_edge ]
  %i.030.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr %struct.nand_secure_region, ptr %10, i32 %i.030.i
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %arrayidx.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %12)
  %cmp3.not.i = icmp ugt i64 %add.i, %12
  br i1 %cmp3.not.i, label %lor.lhs.false.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %size6.i = getelementptr %struct.nand_secure_region, ptr %10, i32 %i.030.i, i32 1
  %13 = ptrtoint ptr %size6.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %size6.i, align 8
  %add7.i = add i64 %14, %12
  call void @__sanitizer_cov_trace_cmp8(i64 %add7.i, i64 %from)
  %cmp8.not.i = icmp ugt i64 %add7.i, %from
  br i1 %cmp8.not.i, label %do.body.i, label %lor.lhs.false.i.for.inc.i_crit_edge

lor.lhs.false.i.for.inc.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

do.body.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_ops, %if.then12.i)) #14
          to label %nand_region_is_secured.exit [label %if.then12.i], !srcloc !385

if.then12.i:                                      ; preds = %do.body.i
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_region_is_secured.__UNIQUE_ID_ddebug253, ptr noundef nonnull @.str.57, ptr noundef nonnull @.str.55, i64 noundef %from, i64 noundef %add.i) #14
  br i1 %cmp32.i, label %if.then12.i.cleanup217_crit_edge, label %if.then12.i.if.end_crit_edge

if.then12.i.if.end_crit_edge:                     ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then12.i.cleanup217_crit_edge:                 ; preds = %if.then12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup217

for.inc.i:                                        ; preds = %lor.lhs.false.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %inc.i = add nuw nsw i32 %i.030.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %conv.i)
  %cmp.i374 = icmp ult i32 %inc.i, %conv.i
  %exitcond.not.i = icmp eq i32 %inc.i, %conv.i
  br i1 %exitcond.not.i, label %for.inc.i.nand_region_is_secured.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.nand_region_is_secured.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_region_is_secured.exit

nand_region_is_secured.exit:                      ; preds = %for.inc.i.nand_region_is_secured.exit_crit_edge, %do.body.i
  %cmp28.i = phi i1 [ %cmp32.i, %do.body.i ], [ %cmp.i374, %for.inc.i.nand_region_is_secured.exit_crit_edge ]
  br i1 %cmp28.i, label %nand_region_is_secured.exit.cleanup217_crit_edge, label %nand_region_is_secured.exit.if.end_crit_edge

nand_region_is_secured.exit.if.end_crit_edge:     ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

nand_region_is_secured.exit.cleanup217_crit_edge: ; preds = %nand_region_is_secured.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup217

if.end:                                           ; preds = %nand_region_is_secured.exit.if.end_crit_edge, %if.then12.i.if.end_crit_edge, %entry.if.end_crit_edge
  %chip_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 19
  %15 = ptrtoint ptr %chip_shift to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %chip_shift, align 4
  %sh_prom = zext i32 %16 to i64
  %shr = ashr i64 %from, %sh_prom
  %conv3 = trunc i64 %shr to i32
  %ntargets.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %17 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %conv3)
  %cmp.i375 = icmp ult i32 %18, %conv3
  br i1 %cmp.i375, label %do.end.i, label %if.end21.critedge.i, !prof !378

do.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %nand_select_target.exit

if.end21.critedge.i:                              ; preds = %if.end
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %19 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %conv3, ptr %cur_cs.i, align 4
  %select_chip.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %20 = ptrtoint ptr %select_chip.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %select_chip.i, align 8
  %tobool22.not.i = icmp eq ptr %21, null
  br i1 %tobool22.not.i, label %if.end21.critedge.i.nand_select_target.exit_crit_edge, label %if.then23.i

if.end21.critedge.i.nand_select_target.exit_crit_edge: ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_select_target.exit

if.then23.i:                                      ; preds = %if.end21.critedge.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %21(ptr noundef %chip, i32 noundef %conv3) #14
  br label %nand_select_target.exit

nand_select_target.exit:                          ; preds = %if.then23.i, %if.end21.critedge.i.nand_select_target.exit_crit_edge, %do.end.i
  %page_shift = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 17
  %22 = ptrtoint ptr %page_shift to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %page_shift, align 4
  %sh_prom4 = zext i32 %23 to i64
  %shr5 = ashr i64 %from, %sh_prom4
  %conv6 = trunc i64 %shr5 to i32
  %pagemask = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 20
  %24 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %pagemask, align 8
  %and = and i32 %25, %conv6
  %writesize = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 4
  %26 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %writesize, align 4
  %sub = add i32 %27, -1
  %28 = trunc i64 %from to i32
  %conv9 = and i32 %sub, %28
  %datbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 6
  %29 = ptrtoint ptr %datbuf to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %datbuf, align 4
  %oobbuf = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 7
  %31 = ptrtoint ptr %oobbuf to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %oobbuf, align 4
  %tobool.not = icmp ne ptr %32, null
  %cond = zext i1 %tobool.not to i32
  %ecc_stats10 = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52
  %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 1
  %ecc_stats.sroa.8.0.ecc_stats10.sroa_idx = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 2
  %ecc_stats.sroa.9.0.ecc_stats10.sroa_idx = getelementptr inbounds %struct.mtd_info, ptr %chip, i32 0, i32 52, i32 3
  %pagecache410 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24
  %page39411 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 24, i32 1
  %data_buf443 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 22
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %buf_align = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 25
  %read_subpage = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 19
  %read_page = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 18
  %read_page_raw = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 33, i32 16
  %oob_poi3.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 23
  %ooboffs4.i = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 5
  %read_retries = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 29
  %setup_read_retry.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 4, i32 4
  %select_chip.i390 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 2
  %cur_cs.i393 = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %while.cond.outer.backedge, %nand_select_target.exit
  %ret.0.ph = phi i32 [ 0, %nand_select_target.exit ], [ %ret.3, %while.cond.outer.backedge ]
  %readlen.0.ph = phi i32 [ %1, %nand_select_target.exit ], [ %sub184489, %while.cond.outer.backedge ]
  %oobreadlen.0.ph = phi i32 [ %3, %nand_select_target.exit ], [ %oobreadlen.4480, %while.cond.outer.backedge ]
  %oob.0.ph = phi ptr [ %32, %nand_select_target.exit ], [ %oob.4482, %while.cond.outer.backedge ]
  %buf.0.ph = phi ptr [ %30, %nand_select_target.exit ], [ %buf.1488, %while.cond.outer.backedge ]
  %max_bitflips.0.ph = phi i32 [ 0, %nand_select_target.exit ], [ %max_bitflips.1484, %while.cond.outer.backedge ]
  %ecc_fail.0.off0.ph = phi i1 [ false, %nand_select_target.exit ], [ %ecc_fail.2.off0486, %while.cond.outer.backedge ]
  %col.0.ph = phi i32 [ %conv9, %nand_select_target.exit ], [ 0, %while.cond.outer.backedge ]
  %realpage.0.ph = phi i32 [ %conv6, %nand_select_target.exit ], [ %inc196, %while.cond.outer.backedge ]
  %page.0.ph = phi i32 [ %and, %nand_select_target.exit ], [ %and198, %while.cond.outer.backedge ]
  %chipnr.0.ph = phi i32 [ %conv3, %nand_select_target.exit ], [ %inc201, %while.cond.outer.backedge ]
  br label %while.cond

while.cond:                                       ; preds = %if.end195.while.cond_crit_edge, %while.cond.outer
  %ret.0 = phi i32 [ %ret.3, %if.end195.while.cond_crit_edge ], [ %ret.0.ph, %while.cond.outer ]
  %readlen.0 = phi i32 [ %sub184489, %if.end195.while.cond_crit_edge ], [ %readlen.0.ph, %while.cond.outer ]
  %oobreadlen.0 = phi i32 [ %oobreadlen.4480, %if.end195.while.cond_crit_edge ], [ %oobreadlen.0.ph, %while.cond.outer ]
  %oob.0 = phi ptr [ %oob.4482, %if.end195.while.cond_crit_edge ], [ %oob.0.ph, %while.cond.outer ]
  %buf.0 = phi ptr [ %buf.1488, %if.end195.while.cond_crit_edge ], [ %buf.0.ph, %while.cond.outer ]
  %max_bitflips.0 = phi i32 [ %max_bitflips.1484, %if.end195.while.cond_crit_edge ], [ %max_bitflips.0.ph, %while.cond.outer ]
  %ecc_fail.0.off0 = phi i1 [ %ecc_fail.2.off0486, %if.end195.while.cond_crit_edge ], [ %ecc_fail.0.off0.ph, %while.cond.outer ]
  %col.0 = phi i32 [ 0, %if.end195.while.cond_crit_edge ], [ %col.0.ph, %while.cond.outer ]
  %realpage.0 = phi i32 [ %inc196, %if.end195.while.cond_crit_edge ], [ %realpage.0.ph, %while.cond.outer ]
  %page.0 = phi i32 [ %and198, %if.end195.while.cond_crit_edge ], [ %page.0.ph, %while.cond.outer ]
  %33 = ptrtoint ptr %ecc_stats10 to i32
  call void @__asan_load4_noabort(i32 %33)
  %ecc_stats.sroa.0.0.copyload = load i32, ptr %ecc_stats10, align 4
  %34 = ptrtoint ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %34)
  %ecc_stats.sroa.5.0.copyload = load i32, ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx, align 4
  %35 = ptrtoint ptr %ecc_stats.sroa.8.0.ecc_stats10.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %35)
  %ecc_stats.sroa.8.0.copyload = load i32, ptr %ecc_stats.sroa.8.0.ecc_stats10.sroa_idx, align 4
  %36 = ptrtoint ptr %ecc_stats.sroa.9.0.ecc_stats10.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %36)
  %ecc_stats.sroa.9.0.copyload = load i32, ptr %ecc_stats.sroa.9.0.ecc_stats10.sroa_idx, align 4
  %37 = ptrtoint ptr %writesize to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %writesize, align 4
  %sub12 = sub i32 %38, %col.0
  %39 = tail call i32 @llvm.umin.i32(i32 %sub12, i32 %readlen.0)
  call void @__sanitizer_cov_trace_cmp4(i32 %39, i32 %38)
  %cmp16 = icmp eq i32 %39, %38
  br i1 %cmp16, label %if.else, label %if.end38.thread

if.else:                                          ; preds = %while.cond
  %40 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %options, align 8
  %and20 = and i32 %41, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.end38.thread569, label %if.then22

if.then22:                                        ; preds = %if.else
  %42 = ptrtoint ptr %buf.0 to i32
  %cmp23 = icmp ugt ptr %buf.0, inttoptr (i32 -1073741825 to ptr)
  br i1 %cmp23, label %land.lhs.true, label %if.then22.if.end38_crit_edge

if.then22.if.end38_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

land.lhs.true:                                    ; preds = %if.then22
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %43 = load ptr, ptr @high_memory, align 4
  %cmp25 = icmp ult ptr %buf.0, %43
  br i1 %cmp25, label %land.lhs.true27, label %land.lhs.true.if.end38_crit_edge

land.lhs.true.if.end38_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

land.lhs.true27:                                  ; preds = %land.lhs.true
  %sub28 = add i32 %42, 1073741824
  %shr29 = lshr i32 %sub28, 12
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @__pv_phys_pfn_offset to i32))
  %44 = load i32, ptr @__pv_phys_pfn_offset, align 4
  %add = add i32 %44, %shr29
  %call30 = tail call i32 @pfn_valid(i32 noundef %add) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %land.lhs.true27.if.end38_crit_edge, label %lor.rhs

land.lhs.true27.if.end38_crit_edge:               ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

lor.rhs:                                          ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #16
  %45 = ptrtoint ptr %buf_align to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buf_align, align 8
  %sub32 = add i32 %46, -1
  %and33 = and i32 %sub32, %42
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %cmp34 = icmp ne i32 %and33, 0
  br label %if.end38

if.end38:                                         ; preds = %lor.rhs, %land.lhs.true27.if.end38_crit_edge, %land.lhs.true.if.end38_crit_edge, %if.then22.if.end38_crit_edge
  %47 = phi i1 [ true, %land.lhs.true27.if.end38_crit_edge ], [ true, %land.lhs.true.if.end38_crit_edge ], [ true, %if.then22.if.end38_crit_edge ], [ %cmp34, %lor.rhs ]
  %48 = ptrtoint ptr %page39411 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %page39411, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %realpage.0, i32 %49)
  %cmp40.not = icmp eq i32 %realpage.0, %49
  %tobool42.not = icmp eq ptr %oob.0, null
  %or.cond = select i1 %cmp40.not, i1 %tobool42.not, i1 false
  br i1 %or.cond, label %if.end38.if.end183.thread_crit_edge, label %if.then43

if.end38.if.end183.thread_crit_edge:              ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end183.thread

if.end38.thread569:                               ; preds = %if.else
  %50 = ptrtoint ptr %page39411 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %page39411, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %realpage.0, i32 %51)
  %cmp40.not571 = icmp eq i32 %realpage.0, %51
  %tobool42.not572 = icmp eq ptr %oob.0, null
  %or.cond573 = select i1 %cmp40.not571, i1 %tobool42.not572, i1 false
  br i1 %or.cond573, label %if.end38.thread569.if.end183.thread_crit_edge, label %if.end38.thread569.if.end61_crit_edge

if.end38.thread569.if.end61_crit_edge:            ; preds = %if.end38.thread569
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

if.end38.thread569.if.end183.thread_crit_edge:    ; preds = %if.end38.thread569
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end183.thread

if.end38.thread:                                  ; preds = %while.cond
  %52 = ptrtoint ptr %page39411 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %page39411, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %realpage.0, i32 %53)
  %cmp40.not412 = icmp eq i32 %realpage.0, %53
  %tobool42.not413 = icmp eq ptr %oob.0, null
  %or.cond414 = select i1 %cmp40.not412, i1 %tobool42.not413, i1 false
  br i1 %or.cond414, label %if.end38.thread.if.end183.thread_crit_edge, label %cond.end47.thread439

if.end38.thread.if.end183.thread_crit_edge:       ; preds = %if.end38.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end183.thread

cond.end47.thread439:                             ; preds = %if.end38.thread
  call void @__sanitizer_cov_trace_pc() #16
  %54 = ptrtoint ptr %data_buf443 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %data_buf443, align 8
  br label %if.end61

if.then43:                                        ; preds = %if.end38
  br i1 %47, label %do.body, label %if.then43.if.end61_crit_edge

if.then43.if.end61_crit_edge:                     ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end61

do.body:                                          ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #16
  %56 = ptrtoint ptr %data_buf443 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %data_buf443, align 8
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_do_read_ops.__UNIQUE_ID_ddebug277, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_ops, %if.then59)) #14
          to label %if.end61 [label %if.then59], !srcloc !385

if.then59:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_do_read_ops.__UNIQUE_ID_ddebug277, ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.130, ptr noundef %buf.0) #14
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %do.body, %if.then43.if.end61_crit_edge, %cond.end47.thread439, %if.end38.thread569.if.end61_crit_edge
  %cond48438 = phi ptr [ %57, %if.then59 ], [ %55, %cond.end47.thread439 ], [ %57, %do.body ], [ %buf.0, %if.then43.if.end61_crit_edge ], [ %buf.0, %if.end38.thread569.if.end61_crit_edge ]
  %tobool44.not428435 = phi i1 [ false, %if.then59 ], [ false, %cond.end47.thread439 ], [ false, %do.body ], [ true, %if.then43.if.end61_crit_edge ], [ true, %if.end38.thread569.if.end61_crit_edge ]
  %add.ptr = getelementptr i8, ptr %cond48438, i32 %col.0
  br label %read_retry

read_retry:                                       ; preds = %if.end157, %if.end61
  %oobreadlen.1 = phi i32 [ %oobreadlen.0, %if.end61 ], [ %oobreadlen.3, %if.end157 ]
  %oob.1 = phi ptr [ %oob.0, %if.end61 ], [ %oob.3, %if.end157 ]
  %retry_mode.1 = phi i32 [ 0, %if.end61 ], [ %add149, %if.end157 ]
  %58 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %59)
  %cmp62 = icmp eq i32 %59, 2
  br i1 %cmp62, label %if.then70, label %if.else72, !prof !378

if.then70:                                        ; preds = %read_retry
  call void @__sanitizer_cov_trace_pc() #16
  %60 = ptrtoint ptr %read_page_raw to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %read_page_raw, align 8
  %call71 = tail call i32 %61(ptr noundef %chip, ptr noundef %cond48438, i32 noundef %cond, i32 noundef %page.0) #14
  br label %if.end87

if.else72:                                        ; preds = %read_retry
  br i1 %cmp16, label %if.else72.if.else83_crit_edge, label %land.lhs.true74

if.else72.if.else83_crit_edge:                    ; preds = %if.else72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else83

land.lhs.true74:                                  ; preds = %if.else72
  %62 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %options, align 8
  %and76 = and i32 %63, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp ne i32 %and76, 0
  %tobool79.not = icmp eq ptr %oob.1, null
  %or.cond372 = select i1 %tobool77.not, i1 %tobool79.not, i1 false
  br i1 %or.cond372, label %if.then80, label %land.lhs.true74.if.else83_crit_edge

land.lhs.true74.if.else83_crit_edge:              ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else83

if.then80:                                        ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  %64 = ptrtoint ptr %read_subpage to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %read_subpage, align 4
  %call82 = tail call i32 %65(ptr noundef %chip, i32 noundef %col.0, i32 noundef %39, ptr noundef %cond48438, i32 noundef %page.0) #14
  br label %if.end87

if.else83:                                        ; preds = %land.lhs.true74.if.else83_crit_edge, %if.else72.if.else83_crit_edge
  %66 = ptrtoint ptr %read_page to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %read_page, align 8
  %call85 = tail call i32 %67(ptr noundef %chip, ptr noundef %cond48438, i32 noundef %cond, i32 noundef %page.0) #14
  br label %if.end87

if.end87:                                         ; preds = %if.else83, %if.then80, %if.then70
  %ret.1 = phi i32 [ %call71, %if.then70 ], [ %call85, %if.else83 ], [ %call82, %if.then80 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %cmp88 = icmp slt i32 %ret.1, 0
  br i1 %cmp88, label %if.then90, label %if.end96

if.then90:                                        ; preds = %if.end87
  br i1 %tobool44.not428435, label %if.then90.while.end_crit_edge, label %if.then92

if.then90.while.end_crit_edge:                    ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.then92:                                        ; preds = %if.then90
  call void @__sanitizer_cov_trace_pc() #16
  %68 = ptrtoint ptr %page39411 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 -1, ptr %page39411, align 4
  br label %while.end

if.end96:                                         ; preds = %if.end87
  br i1 %tobool44.not428435, label %if.end96.if.end121_crit_edge, label %if.then98

if.end96.if.end121_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end121

if.then98:                                        ; preds = %if.end96
  %69 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %options, align 8
  %and100 = and i32 %70, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  %tobool103.not = icmp eq ptr %oob.1, null
  %or.cond373 = select i1 %tobool101.not, i1 %tobool103.not, i1 false
  br i1 %or.cond373, label %land.lhs.true104, label %if.then98.if.else117_crit_edge

if.then98.if.else117_crit_edge:                   ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else117

land.lhs.true104:                                 ; preds = %if.then98
  %71 = ptrtoint ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %ecc_stats.sroa.5.0.copyload)
  %tobool108.not = icmp eq i32 %72, %ecc_stats.sroa.5.0.copyload
  br i1 %tobool108.not, label %land.lhs.true109, label %land.lhs.true104.if.else117_crit_edge

land.lhs.true104.if.else117_crit_edge:            ; preds = %land.lhs.true104
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else117

land.lhs.true109:                                 ; preds = %land.lhs.true104
  %73 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %ops, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %74)
  %cmp111.not = icmp eq i32 %74, 2
  br i1 %cmp111.not, label %land.lhs.true109.if.else117_crit_edge, label %if.then113

land.lhs.true109.if.else117_crit_edge:            ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else117

if.then113:                                       ; preds = %land.lhs.true109
  call void @__sanitizer_cov_trace_pc() #16
  %75 = ptrtoint ptr %page39411 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %realpage.0, ptr %page39411, align 4
  %76 = ptrtoint ptr %pagecache410 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %ret.1, ptr %pagecache410, align 8
  br label %if.end120

if.else117:                                       ; preds = %land.lhs.true109.if.else117_crit_edge, %land.lhs.true104.if.else117_crit_edge, %if.then98.if.else117_crit_edge
  %77 = ptrtoint ptr %page39411 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 -1, ptr %page39411, align 4
  br label %if.end120

if.end120:                                        ; preds = %if.else117, %if.then113
  %78 = call ptr @memcpy(ptr %buf.0, ptr %add.ptr, i32 %39)
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.end96.if.end121_crit_edge
  %tobool122.not = icmp eq ptr %oob.1, null
  br i1 %tobool122.not, label %if.end121.if.end142_crit_edge, label %if.then129, !prof !379

if.end121.if.end142_crit_edge:                    ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end142

if.then129:                                       ; preds = %if.end121
  %79 = tail call i32 @llvm.umin.i32(i32 %oobreadlen.1, i32 %cond.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %79)
  %tobool137.not = icmp eq i32 %79, 0
  br i1 %tobool137.not, label %if.then129.if.end142_crit_edge, label %if.then138

if.then129.if.end142_crit_edge:                   ; preds = %if.then129
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end142

if.then138:                                       ; preds = %if.then129
  %80 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %ops, align 4
  %82 = zext i32 %81 to i64
  call void @__sanitizer_cov_trace_switch(i64 %82, ptr @__sancov_gen_cov_switch_values.151)
  switch i32 %81, label %do.body15.i [
    i32 0, label %if.then138.sw.bb.i_crit_edge
    i32 2, label %if.then138.sw.bb.i_crit_edge725
    i32 1, label %sw.bb2.i
  ]

if.then138.sw.bb.i_crit_edge725:                  ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.then138.sw.bb.i_crit_edge:                     ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

sw.bb.i:                                          ; preds = %if.then138.sw.bb.i_crit_edge, %if.then138.sw.bb.i_crit_edge725
  %83 = ptrtoint ptr %oob_poi3.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %oob_poi3.i, align 4
  %85 = ptrtoint ptr %ooboffs4.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %ooboffs4.i, align 4
  %add.ptr.i = getelementptr i8, ptr %84, i32 %86
  %87 = call ptr @memcpy(ptr %oob.1, ptr %add.ptr.i, i32 %79)
  br label %nand_transfer_oob.exit

sw.bb2.i:                                         ; preds = %if.then138
  %88 = ptrtoint ptr %oob_poi3.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %oob_poi3.i, align 4
  %90 = ptrtoint ptr %ooboffs4.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %ooboffs4.i, align 4
  %call5.i = tail call i32 @mtd_ooblayout_get_databytes(ptr noundef %chip, ptr noundef nonnull %oob.1, ptr noundef %89, i32 noundef %91, i32 noundef %79) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i, label %sw.bb2.i.nand_transfer_oob.exit_crit_edge, label %do.body8.i, !prof !379

sw.bb2.i.nand_transfer_oob.exit_crit_edge:        ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_transfer_oob.exit

do.body8.i:                                       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3348, 0\0A.popsection", ""() #14, !srcloc !389
  unreachable

do.body15.i:                                      ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22drivers/mtd/nand/raw/nand_base.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3352, 0\0A.popsection", ""() #14, !srcloc !390
  unreachable

nand_transfer_oob.exit:                           ; preds = %sw.bb2.i.nand_transfer_oob.exit_crit_edge, %sw.bb.i
  %retval.0.i376 = getelementptr i8, ptr %oob.1, i32 %79
  %sub140 = sub i32 %oobreadlen.1, %79
  br label %if.end142

if.end142:                                        ; preds = %nand_transfer_oob.exit, %if.then129.if.end142_crit_edge, %if.end121.if.end142_crit_edge
  %oobreadlen.3 = phi i32 [ %oobreadlen.1, %if.end121.if.end142_crit_edge ], [ %sub140, %nand_transfer_oob.exit ], [ %oobreadlen.1, %if.then129.if.end142_crit_edge ]
  %oob.3 = phi ptr [ null, %if.end121.if.end142_crit_edge ], [ %retval.0.i376, %nand_transfer_oob.exit ], [ %oob.1, %if.then129.if.end142_crit_edge ]
  tail call fastcc void @nand_wait_readrdy(ptr noundef %chip)
  %92 = ptrtoint ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %93, i32 %ecc_stats.sroa.5.0.copyload)
  %tobool147.not = icmp eq i32 %93, %ecc_stats.sroa.5.0.copyload
  br i1 %tobool147.not, label %if.end142.if.end183_crit_edge, label %if.then148

if.end142.if.end183_crit_edge:                    ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end183

if.then148:                                       ; preds = %if.end142
  %add149 = add nuw nsw i32 %retry_mode.1, 1
  %94 = ptrtoint ptr %read_retries to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %read_retries, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %add149, i32 %95)
  %cmp150 = icmp slt i32 %add149, %95
  br i1 %cmp150, label %if.then152, label %if.then148.if.end183_crit_edge

if.then148.if.end183_crit_edge:                   ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end183

if.then152:                                       ; preds = %if.then148
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_setup_read_retry.__UNIQUE_ID_ddebug274, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_ops, %if.then.i)) #14
          to label %do.end.i377 [label %if.then.i], !srcloc !385

if.then.i:                                        ; preds = %if.then152
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_setup_read_retry.__UNIQUE_ID_ddebug274, ptr noundef nonnull @.str.135, i32 noundef %add149) #14
  br label %do.end.i377

do.end.i377:                                      ; preds = %if.then.i, %if.then152
  %96 = ptrtoint ptr %read_retries to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %read_retries, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %97, i32 %add149)
  %cmp.not.i = icmp sgt i32 %97, %add149
  br i1 %cmp.not.i, label %if.end4.i, label %do.end.i377.while.end_crit_edge

do.end.i377.while.end_crit_edge:                  ; preds = %do.end.i377
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end4.i:                                        ; preds = %do.end.i377
  %98 = ptrtoint ptr %setup_read_retry.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %setup_read_retry.i, align 8
  %tobool5.not.i = icmp eq ptr %99, null
  br i1 %tobool5.not.i, label %if.end4.i.while.end_crit_edge, label %nand_setup_read_retry.exit

if.end4.i.while.end_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

nand_setup_read_retry.exit:                       ; preds = %if.end4.i
  %call10.i = tail call i32 %99(ptr noundef %chip, i32 noundef %add149) #14
  %cmp154 = icmp slt i32 %call10.i, 0
  br i1 %cmp154, label %nand_setup_read_retry.exit.while.end_crit_edge, label %if.end157

nand_setup_read_retry.exit.while.end_crit_edge:   ; preds = %nand_setup_read_retry.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end157:                                        ; preds = %nand_setup_read_retry.exit
  call void @__sanitizer_cov_trace_pc() #16
  %100 = ptrtoint ptr %ecc_stats10 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %ecc_stats.sroa.0.0.copyload, ptr %ecc_stats10, align 4
  %101 = ptrtoint ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %ecc_stats.sroa.5.0.copyload, ptr %ecc_stats.sroa.5.0.ecc_stats10.sroa_idx, align 4
  %102 = ptrtoint ptr %ecc_stats.sroa.8.0.ecc_stats10.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %102)
  store i32 %ecc_stats.sroa.8.0.copyload, ptr %ecc_stats.sroa.8.0.ecc_stats10.sroa_idx, align 4
  %103 = ptrtoint ptr %ecc_stats.sroa.9.0.ecc_stats10.sroa_idx to i32
  call void @__asan_store4_noabort(i32 %103)
  store i32 %ecc_stats.sroa.9.0.copyload, ptr %ecc_stats.sroa.9.0.ecc_stats10.sroa_idx, align 4
  br label %read_retry

if.end183.thread:                                 ; preds = %if.end38.thread.if.end183.thread_crit_edge, %if.end38.thread569.if.end183.thread_crit_edge, %if.end38.if.end183.thread_crit_edge
  %104 = ptrtoint ptr %data_buf443 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %data_buf443, align 8
  %add.ptr172 = getelementptr i8, ptr %105, i32 %col.0
  %106 = call ptr @memcpy(ptr %buf.0, ptr %add.ptr172, i32 %39)
  %107 = ptrtoint ptr %pagecache410 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %pagecache410, align 8
  %109 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0, i32 %108)
  %sub184478 = sub i32 %readlen.0, %39
  br label %if.end192

if.end183:                                        ; preds = %if.then148.if.end183_crit_edge, %if.end142.if.end183_crit_edge
  %ecc_fail.1.off0 = phi i1 [ %ecc_fail.0.off0, %if.end142.if.end183_crit_edge ], [ true, %if.then148.if.end183_crit_edge ]
  %110 = tail call i32 @llvm.umax.i32(i32 %max_bitflips.0, i32 %ret.1)
  %sub184 = sub i32 %readlen.0, %39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retry_mode.1)
  %tobool185.not = icmp eq i32 %retry_mode.1, 0
  br i1 %tobool185.not, label %if.end183.if.end192_crit_edge, label %if.then186

if.end183.if.end192_crit_edge:                    ; preds = %if.end183
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end192

if.then186:                                       ; preds = %if.end183
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @nand_setup_read_retry.__UNIQUE_ID_ddebug274, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@nand_do_read_ops, %if.then.i379)) #14
          to label %do.end.i382 [label %if.then.i379], !srcloc !385

if.then.i379:                                     ; preds = %if.then186
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @nand_setup_read_retry.__UNIQUE_ID_ddebug274, ptr noundef nonnull @.str.135, i32 noundef 0) #14
  br label %do.end.i382

do.end.i382:                                      ; preds = %if.then.i379, %if.then186
  %111 = ptrtoint ptr %read_retries to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %read_retries, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %112)
  %cmp.not.i381 = icmp sgt i32 %112, 0
  br i1 %cmp.not.i381, label %if.end4.i385, label %do.end.i382.while.end_crit_edge

do.end.i382.while.end_crit_edge:                  ; preds = %do.end.i382
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end4.i385:                                     ; preds = %do.end.i382
  %113 = ptrtoint ptr %setup_read_retry.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %setup_read_retry.i, align 8
  %tobool5.not.i384 = icmp eq ptr %114, null
  br i1 %tobool5.not.i384, label %if.end4.i385.while.end_crit_edge, label %nand_setup_read_retry.exit389

if.end4.i385.while.end_crit_edge:                 ; preds = %if.end4.i385
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

nand_setup_read_retry.exit389:                    ; preds = %if.end4.i385
  %call10.i386 = tail call i32 %114(ptr noundef %chip, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i386)
  %cmp188 = icmp slt i32 %call10.i386, 0
  br i1 %cmp188, label %nand_setup_read_retry.exit389.while.end_crit_edge, label %nand_setup_read_retry.exit389.if.end192_crit_edge

nand_setup_read_retry.exit389.if.end192_crit_edge: ; preds = %nand_setup_read_retry.exit389
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end192

nand_setup_read_retry.exit389.while.end_crit_edge: ; preds = %nand_setup_read_retry.exit389
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end192:                                        ; preds = %nand_setup_read_retry.exit389.if.end192_crit_edge, %if.end183.if.end192_crit_edge, %if.end183.thread
  %sub184489 = phi i32 [ %sub184, %if.end183.if.end192_crit_edge ], [ %sub184, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ %sub184478, %if.end183.thread ]
  %ecc_fail.2.off0486 = phi i1 [ %ecc_fail.1.off0, %if.end183.if.end192_crit_edge ], [ %ecc_fail.1.off0, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ %ecc_fail.0.off0, %if.end183.thread ]
  %max_bitflips.1484 = phi i32 [ %110, %if.end183.if.end192_crit_edge ], [ %110, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ %109, %if.end183.thread ]
  %oob.4482 = phi ptr [ %oob.3, %if.end183.if.end192_crit_edge ], [ %oob.3, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ null, %if.end183.thread ]
  %oobreadlen.4480 = phi i32 [ %oobreadlen.3, %if.end183.if.end192_crit_edge ], [ %oobreadlen.3, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ %oobreadlen.0, %if.end183.thread ]
  %ret.3 = phi i32 [ %ret.1, %if.end183.if.end192_crit_edge ], [ %call10.i386, %nand_setup_read_retry.exit389.if.end192_crit_edge ], [ %ret.0, %if.end183.thread ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub184489)
  %tobool193.not = icmp eq i32 %sub184489, 0
  br i1 %tobool193.not, label %if.end192.while.end_crit_edge, label %if.end195

if.end192.while.end_crit_edge:                    ; preds = %if.end192
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

if.end195:                                        ; preds = %if.end192
  %buf.1488 = getelementptr i8, ptr %buf.0, i32 %39
  %inc196 = add i32 %realpage.0, 1
  %115 = ptrtoint ptr %pagemask to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %pagemask, align 8
  %and198 = and i32 %116, %inc196
  %tobool199.not = icmp eq i32 %and198, 0
  br i1 %tobool199.not, label %if.then200, label %if.end195.while.cond_crit_edge

if.end195.while.cond_crit_edge:                   ; preds = %if.end195
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

if.then200:                                       ; preds = %if.end195
  %inc201 = add i32 %chipnr.0.ph, 1
  %117 = ptrtoint ptr %select_chip.i390 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %select_chip.i390, align 8
  %tobool.not.i391 = icmp eq ptr %118, null
  br i1 %tobool.not.i391, label %if.then200.nand_deselect_target.exit_crit_edge, label %if.then.i392

if.then200.nand_deselect_target.exit_crit_edge:   ; preds = %if.then200
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit

if.then.i392:                                     ; preds = %if.then200
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %118(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit

nand_deselect_target.exit:                        ; preds = %if.then.i392, %if.then200.nand_deselect_target.exit_crit_edge
  %119 = ptrtoint ptr %cur_cs.i393 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 -1, ptr %cur_cs.i393, align 4
  %120 = ptrtoint ptr %ntargets.i.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %ntargets.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %121, i32 %inc201)
  %cmp.i395 = icmp ult i32 %121, %inc201
  br i1 %cmp.i395, label %do.end.i396, label %if.end21.critedge.i400, !prof !378

do.end.i396:                                      ; preds = %nand_deselect_target.exit
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 178, i32 noundef 9, ptr noundef null) #14
  br label %while.cond.outer.backedge

if.end21.critedge.i400:                           ; preds = %nand_deselect_target.exit
  %122 = ptrtoint ptr %cur_cs.i393 to i32
  call void @__asan_store4_noabort(i32 %122)
  store i32 %inc201, ptr %cur_cs.i393, align 4
  %123 = ptrtoint ptr %select_chip.i390 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %select_chip.i390, align 8
  %tobool22.not.i399 = icmp eq ptr %124, null
  br i1 %tobool22.not.i399, label %if.end21.critedge.i400.while.cond.outer.backedge_crit_edge, label %if.then23.i401

if.end21.critedge.i400.while.cond.outer.backedge_crit_edge: ; preds = %if.end21.critedge.i400
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond.outer.backedge

if.then23.i401:                                   ; preds = %if.end21.critedge.i400
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %124(ptr noundef %chip, i32 noundef %inc201) #14
  br label %while.cond.outer.backedge

while.cond.outer.backedge:                        ; preds = %if.then23.i401, %if.end21.critedge.i400.while.cond.outer.backedge_crit_edge, %do.end.i396
  br label %while.cond.outer

while.end:                                        ; preds = %if.end192.while.end_crit_edge, %nand_setup_read_retry.exit389.while.end_crit_edge, %if.end4.i385.while.end_crit_edge, %do.end.i382.while.end_crit_edge, %nand_setup_read_retry.exit.while.end_crit_edge, %if.end4.i.while.end_crit_edge, %do.end.i377.while.end_crit_edge, %if.then92, %if.then90.while.end_crit_edge
  %ret.4.ph = phi i32 [ %ret.1, %if.then90.while.end_crit_edge ], [ %ret.1, %if.then92 ], [ -22, %do.end.i377.while.end_crit_edge ], [ -95, %if.end4.i.while.end_crit_edge ], [ %call10.i, %nand_setup_read_retry.exit.while.end_crit_edge ], [ -22, %do.end.i382.while.end_crit_edge ], [ -95, %if.end4.i385.while.end_crit_edge ], [ %call10.i386, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ %ret.3, %if.end192.while.end_crit_edge ]
  %readlen.1.ph = phi i32 [ %readlen.0, %if.then90.while.end_crit_edge ], [ %readlen.0, %if.then92 ], [ %readlen.0, %nand_setup_read_retry.exit.while.end_crit_edge ], [ %readlen.0, %do.end.i377.while.end_crit_edge ], [ %readlen.0, %if.end4.i.while.end_crit_edge ], [ %sub184, %do.end.i382.while.end_crit_edge ], [ %sub184, %if.end4.i385.while.end_crit_edge ], [ %sub184, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ 0, %if.end192.while.end_crit_edge ]
  %oobreadlen.5.ph = phi i32 [ %oobreadlen.1, %if.then90.while.end_crit_edge ], [ %oobreadlen.1, %if.then92 ], [ %oobreadlen.3, %nand_setup_read_retry.exit.while.end_crit_edge ], [ %oobreadlen.3, %do.end.i377.while.end_crit_edge ], [ %oobreadlen.3, %if.end4.i.while.end_crit_edge ], [ %oobreadlen.3, %do.end.i382.while.end_crit_edge ], [ %oobreadlen.3, %if.end4.i385.while.end_crit_edge ], [ %oobreadlen.3, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ %oobreadlen.4480, %if.end192.while.end_crit_edge ]
  %oob.5.ph = phi ptr [ %oob.1, %if.then90.while.end_crit_edge ], [ %oob.1, %if.then92 ], [ %oob.3, %nand_setup_read_retry.exit.while.end_crit_edge ], [ %oob.3, %do.end.i377.while.end_crit_edge ], [ %oob.3, %if.end4.i.while.end_crit_edge ], [ %oob.3, %do.end.i382.while.end_crit_edge ], [ %oob.3, %if.end4.i385.while.end_crit_edge ], [ %oob.3, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ %oob.4482, %if.end192.while.end_crit_edge ]
  %max_bitflips.2.ph = phi i32 [ %max_bitflips.0, %if.then90.while.end_crit_edge ], [ %max_bitflips.0, %if.then92 ], [ %max_bitflips.0, %nand_setup_read_retry.exit.while.end_crit_edge ], [ %max_bitflips.0, %do.end.i377.while.end_crit_edge ], [ %max_bitflips.0, %if.end4.i.while.end_crit_edge ], [ %110, %do.end.i382.while.end_crit_edge ], [ %110, %if.end4.i385.while.end_crit_edge ], [ %110, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ %max_bitflips.1484, %if.end192.while.end_crit_edge ]
  %ecc_fail.3.off0.ph = phi i1 [ %ecc_fail.0.off0, %if.then90.while.end_crit_edge ], [ %ecc_fail.0.off0, %if.then92 ], [ %ecc_fail.0.off0, %nand_setup_read_retry.exit.while.end_crit_edge ], [ %ecc_fail.0.off0, %do.end.i377.while.end_crit_edge ], [ %ecc_fail.0.off0, %if.end4.i.while.end_crit_edge ], [ %ecc_fail.1.off0, %do.end.i382.while.end_crit_edge ], [ %ecc_fail.1.off0, %if.end4.i385.while.end_crit_edge ], [ %ecc_fail.1.off0, %nand_setup_read_retry.exit389.while.end_crit_edge ], [ %ecc_fail.2.off0486, %if.end192.while.end_crit_edge ]
  %125 = ptrtoint ptr %select_chip.i390 to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %select_chip.i390, align 8
  %tobool.not.i404 = icmp eq ptr %126, null
  br i1 %tobool.not.i404, label %while.end.nand_deselect_target.exit407_crit_edge, label %if.then.i405

while.end.nand_deselect_target.exit407_crit_edge: ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_deselect_target.exit407

if.then.i405:                                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %126(ptr noundef %chip, i32 noundef -1) #14
  br label %nand_deselect_target.exit407

nand_deselect_target.exit407:                     ; preds = %if.then.i405, %while.end.nand_deselect_target.exit407_crit_edge
  %127 = ptrtoint ptr %cur_cs.i393 to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 -1, ptr %cur_cs.i393, align 4
  %128 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %len, align 4
  %sub204 = sub i32 %129, %readlen.1.ph
  %retlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 2
  %130 = ptrtoint ptr %retlen to i32
  call void @__asan_store4_noabort(i32 %130)
  store i32 %sub204, ptr %retlen, align 4
  %tobool205.not = icmp eq ptr %oob.5.ph, null
  br i1 %tobool205.not, label %nand_deselect_target.exit407.if.end209_crit_edge, label %if.then206

nand_deselect_target.exit407.if.end209_crit_edge: ; preds = %nand_deselect_target.exit407
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end209

if.then206:                                       ; preds = %nand_deselect_target.exit407
  call void @__sanitizer_cov_trace_pc() #16
  %131 = ptrtoint ptr %ooblen to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %ooblen, align 4
  %sub208 = sub i32 %132, %oobreadlen.5.ph
  %oobretlen = getelementptr inbounds %struct.mtd_oob_ops, ptr %ops, i32 0, i32 4
  %133 = ptrtoint ptr %oobretlen to i32
  call void @__asan_store4_noabort(i32 %133)
  store i32 %sub208, ptr %oobretlen, align 4
  br label %if.end209

if.end209:                                        ; preds = %if.then206, %nand_deselect_target.exit407.if.end209_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.4.ph)
  %cmp210 = icmp slt i32 %ret.4.ph, 0
  %.max_bitflips.2 = select i1 %ecc_fail.3.off0.ph, i32 -74, i32 %max_bitflips.2.ph
  %spec.select = select i1 %cmp210, i32 %ret.4.ph, i32 %.max_bitflips.2
  br label %cleanup217

cleanup217:                                       ; preds = %if.end209, %nand_region_is_secured.exit.cleanup217_crit_edge, %if.then12.i.cleanup217_crit_edge
  %retval.0 = phi i32 [ -5, %nand_region_is_secured.exit.cleanup217_crit_edge ], [ %spec.select, %if.end209 ], [ -5, %if.then12.i.cleanup217_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nand_wait_readrdy(ptr noundef %chip) unnamed_addr #4 align 64 {
entry:
  %instrs.i = alloca [1 x %struct.nand_op_instr], align 4
  %op.i = alloca %struct.nand_operation, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %options = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 6
  %0 = ptrtoint ptr %options to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %options, align 8
  %and = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %current_interface_config.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 7
  %2 = ptrtoint ptr %current_interface_config.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %current_interface_config.i, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp eq i32 %5, 0
  br i1 %cmp.i, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %tR_max = getelementptr inbounds %struct.nand_interface_config, ptr %3, i32 0, i32 1, i32 1, i32 0, i32 3
  br label %if.end194

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %5)
  %cmp.i.i313 = icmp eq i32 %5, 1
  %6 = getelementptr inbounds %struct.nand_interface_config, ptr %3, i32 0, i32 1, i32 1
  %retval.0.i314 = select i1 %cmp.i.i313, ptr %6, ptr inttoptr (i32 -22 to ptr)
  %tR_max4 = getelementptr inbounds %struct.nand_nvddr_timings, ptr %retval.0.i314, i32 0, i32 3
  br label %if.end194

if.end194:                                        ; preds = %cond.false, %cond.true
  %cond.in = phi ptr [ %tR_max, %cond.true ], [ %tR_max4, %cond.false ]
  %7 = ptrtoint ptr %cond.in to i32
  call void @__asan_load8_noabort(i32 %7)
  %cond = load i64, ptr %cond.in, align 8
  %sub = add i64 %cond, 999999999
  %8 = tail call { i64, i32 } asm "umull\09${0:Q}, ${0:R}, ${2:Q}, ${3:Q}\0A\09cmn\09${0:Q}, ${2:Q}\0A\09adcs\09${0:R}, ${0:R}, ${2:R}\0A\09adc\09${0:Q}, $1, #0", "=&r,=&{r12},r,r,1,~{cc}"(i64 -8543223759426509417, i64 %sub, i32 0) #18, !srcloc !382
  %asmresult.i = extractvalue { i64, i32 } %8, 0
  %asmresult4.i = extractvalue { i64, i32 } %8, 1
  %9 = tail call { i64, i32 } asm "umlal\09${0:R}, ${0:Q}, ${2:R}, ${3:Q}\0A\09umlal\09${0:R}, $1, ${2:Q}, ${3:R}\0A\09mov\09${0:R}, #0\0A\09adds\09${0:Q}, $1, ${0:Q}\0A\09adc\09${0:R}, ${0:R}, #0\0A\09umlal\09${0:Q}, ${0:R}, ${2:R}, ${3:R}", "=&r,=&{r12},r,r,0,1,~{cc}"(i64 -8543223759426509417, i64 %sub, i64 %asmresult.i, i32 %asmresult4.i) #18, !srcloc !383
  %asmresult10.i = extractvalue { i64, i32 } %9, 0
  %extract311 = lshr i64 %asmresult10.i, 29
  %extract.t312 = trunc i64 %extract311 to i32
  %controller.i.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 32
  %10 = ptrtoint ptr %controller.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %controller.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %if.end194.if.end.i_crit_edge, label %lor.lhs.false.i.i

if.end194.if.end.i_crit_edge:                     ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

lor.lhs.false.i.i:                                ; preds = %if.end194
  %ops.i.i = getelementptr inbounds %struct.nand_controller, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops.i.i, align 4
  %tobool2.not.i.i = icmp eq ptr %13, null
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i.if.end.i_crit_edge, label %nand_has_exec_op.exit.i

lor.lhs.false.i.i.if.end.i_crit_edge:             ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

nand_has_exec_op.exit.i:                          ; preds = %lor.lhs.false.i.i
  %exec_op.i.i = getelementptr inbounds %struct.nand_controller_ops, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i = icmp eq ptr %15, null
  br i1 %tobool6.not.i.not.i, label %nand_has_exec_op.exit.i.if.end.i_crit_edge, label %nand_has_exec_op.exit.i.i

nand_has_exec_op.exit.i.if.end.i_crit_edge:       ; preds = %nand_has_exec_op.exit.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

nand_has_exec_op.exit.i.i:                        ; preds = %nand_has_exec_op.exit.i
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %instrs.i) #14
  %16 = getelementptr inbounds i8, ptr %instrs.i, i32 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_storeN_noabort(i32 %17, i32 8)
  store i64 -1, ptr %16, align 4
  %18 = ptrtoint ptr %instrs.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 4, ptr %instrs.i, align 4
  %ctx.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 1
  %sub.i = add i32 %extract.t312, 999999999
  %div.i = udiv i32 %sub.i, 1000000000
  %19 = ptrtoint ptr %ctx.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %div.i, ptr %ctx.i, align 4
  %delay_ns3.i = getelementptr inbounds %struct.nand_op_instr, ptr %instrs.i, i32 0, i32 2
  %20 = ptrtoint ptr %delay_ns3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %delay_ns3.i, align 4
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %op.i) #14
  %21 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 1
  %22 = getelementptr inbounds %struct.nand_operation, ptr %op.i, i32 0, i32 2
  %cur_cs.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 28
  %23 = ptrtoint ptr %cur_cs.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %cur_cs.i, align 4
  %25 = ptrtoint ptr %op.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %op.i, align 4
  %26 = ptrtoint ptr %21 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %instrs.i, ptr %21, align 4
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 1, ptr %22, align 4
  %28 = ptrtoint ptr %exec_op.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %exec_op.i.i, align 4
  %tobool6.not.i.not.i.i = icmp eq ptr %29, null
  br i1 %tobool6.not.i.not.i.i, label %nand_has_exec_op.exit.i.i.nand_wait_rdy_op.exit.thread320_crit_edge, label %if.end.i.i

nand_has_exec_op.exit.i.i.nand_wait_rdy_op.exit.thread320_crit_edge: ; preds = %nand_has_exec_op.exit.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %nand_wait_rdy_op.exit.thread320

if.end.i.i:                                       ; preds = %nand_has_exec_op.exit.i.i
  %ntargets.i.i.i = getelementptr inbounds %struct.nand_device, ptr %chip, i32 0, i32 1, i32 8
  %30 = ptrtoint ptr %ntargets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ntargets.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %31)
  %cmp.not.i.i = icmp ult i32 %24, %31
  br i1 %cmp.not.i.i, label %nand_wait_rdy_op.exit, label %do.end.i.i, !prof !379

do.end.i.i:                                       ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #16
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.22, i32 noundef 139, i32 noundef 9, ptr noundef null) #14
  br label %nand_wait_rdy_op.exit.thread320

if.end.i:                                         ; preds = %nand_has_exec_op.exit.i.if.end.i_crit_edge, %lor.lhs.false.i.i.if.end.i_crit_edge, %if.end194.if.end.i_crit_edge
  %dev_ready.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 9
  %32 = ptrtoint ptr %dev_ready.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dev_ready.i, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %cond.false20.i, label %if.else.i

cond.false20.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %chip_delay.i = getelementptr inbounds %struct.nand_chip, ptr %chip, i32 0, i32 5, i32 15
  %34 = ptrtoint ptr %chip_delay.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %chip_delay.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2) to i32))
  %36 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 2), align 4
  tail call void %36(i32 noundef %35) #14
  br label %cleanup

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @nand_wait_ready(ptr noundef %chip) #14
  br label %cleanup

nand_wait_rdy_op.exit.thread320:                  ; preds = %do.end.i.i, %nand_has_exec_op.exit.i.i.nand_wait_rdy_op.exit.thread320_crit_edge
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  br label %do.end

nand_wait_rdy_op.exit:                            ; preds = %if.end.i.i
  %call25.i.i = call i32 %29(ptr noundef %chip, ptr noundef nonnull %op.i, i1 noundef zeroext false) #14
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %op.i) #14
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %instrs.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool199.not = icmp eq i32 %call25.i.i, 0
  br i1 %tobool199.not, label %nand_wait_rdy_op.exit.cleanup_crit_edge, label %nand_wait_rdy_op.exit.do.end_crit_edge, !prof !379

nand_wait_rdy_op.exit.do.end_crit_edge:           ; preds = %nand_wait_rdy_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

nand_wait_rdy_op.exit.cleanup_crit_edge:          ; preds = %nand_wait_rdy_op.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %nand_wait_rdy_op.exit.do.end_crit_edge, %nand_wait_rdy_op.exit.thread320
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3387, i32 noundef 9, ptr noundef null) #14
  br label %cleanup

cleanup:                                          ; preds = %do.end, %nand_wait_rdy_op.exit.cleanup_crit_edge, %if.else.i, %cond.false20.i, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mtd_ooblayout_get_databytes(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @nand_wait_ready(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_isreserved_bbt(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nand_markbad_bbt(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_count_elems_of_size(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_u64_index(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #8

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #8

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 147)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 147)
  ret void
}

attributes #0 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #9 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { nounwind allocsize(0) }
attributes #18 = { nounwind readnone }
attributes #19 = { cold nounwind }
attributes #20 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !38, !40, !42, !43, !44, !45, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !77, !78, !79, !81, !82, !83, !85, !86, !87, !89, !90, !91, !93, !95, !97, !98, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !126, !128, !130, !132, !134, !135, !136, !137, !139, !140, !141, !143, !145, !147, !148, !149, !150, !152, !154, !155, !156, !157, !158, !160, !161, !162, !164, !165, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !181, !183, !184, !185, !186, !187, !188, !190, !191, !192, !194, !195, !196, !197, !199, !200, !201, !203, !204, !205, !206, !208, !210, !212, !214, !215, !216, !217, !219, !220, !221, !223, !225, !227, !228, !230, !231, !232, !233, !235, !236, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !260, !262, !263, !264, !265, !267, !268, !269, !271, !272, !273, !275, !276, !277, !279, !280, !282, !283, !285, !286, !287, !288, !289, !291, !293, !295, !297, !299, !300, !301, !302, !304, !306, !307, !308, !310, !312, !314, !316, !317, !318, !320, !322, !323, !324, !325, !327, !329, !331, !333, !335, !336, !337, !338, !340, !341, !342, !344, !345, !346, !347, !349, !350, !351, !352, !354, !355, !356, !357, !359, !360, !361, !362, !364, !365, !366, !367}
!llvm.module.flags = !{!369, !370, !371, !372, !373, !374, !375, !376}
!llvm.ident = !{!377}

!0 = !{ptr @dist3_pairing_scheme, !1, !"dist3_pairing_scheme", i1 false, i1 false}
!1 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 94, i32 33}
!2 = !{ptr @__ksymtab_nand_extract_bits, !3, !"__ksymtab_nand_extract_bits", i1 false, i1 false}
!3 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 161, i32 1}
!4 = !{ptr @.str, !5, !"<string literal>", i1 false, i1 false}
!5 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 178, i32 6}
!6 = !{ptr @__ksymtab_nand_select_target, !7, !"__ksymtab_nand_select_target", i1 false, i1 false}
!7 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 186, i32 1}
!8 = !{ptr @__ksymtab_nand_deselect_target, !9, !"__ksymtab_nand_deselect_target", i1 false, i1 false}
!9 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 202, i32 1}
!10 = !{ptr @__ksymtab_nand_soft_waitrdy, !11, !"__ksymtab_nand_soft_waitrdy", i1 false, i1 false}
!11 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 704, i32 1}
!12 = !{ptr @__ksymtab_nand_gpio_waitrdy, !13, !"__ksymtab_nand_gpio_waitrdy", i1 false, i1 false}
!13 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 740, i32 1}
!14 = !{ptr @__ksymtab_nand_read_page_op, !15, !"__ksymtab_nand_read_page_op", i1 false, i1 false}
!15 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1252, i32 1}
!16 = !{ptr @__ksymtab_nand_change_read_column_op, !17, !"__ksymtab_nand_change_read_column_op", i1 false, i1 false}
!17 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1364, i32 1}
!18 = !{ptr @__ksymtab_nand_read_oob_op, !19, !"__ksymtab_nand_read_oob_op", i1 false, i1 false}
!19 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1401, i32 1}
!20 = !{ptr @__ksymtab_nand_prog_page_begin_op, !21, !"__ksymtab_nand_prog_page_begin_op", i1 false, i1 false}
!21 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1505, i32 1}
!22 = !{ptr @__ksymtab_nand_prog_page_end_op, !23, !"__ksymtab_nand_prog_page_end_op", i1 false, i1 false}
!23 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1553, i32 1}
!24 = !{ptr @__ksymtab_nand_prog_page_op, !25, !"__ksymtab_nand_prog_page_op", i1 false, i1 false}
!25 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1608, i32 1}
!26 = !{ptr @__ksymtab_nand_change_write_column_op, !27, !"__ksymtab_nand_change_write_column_op", i1 false, i1 false}
!27 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1671, i32 1}
!28 = !{ptr @__ksymtab_nand_readid_op, !29, !"__ksymtab_nand_readid_op", i1 false, i1 false}
!29 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1739, i32 1}
!30 = !{ptr @__ksymtab_nand_status_op, !31, !"__ksymtab_nand_status_op", i1 false, i1 false}
!31 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1788, i32 1}
!32 = !{ptr @__ksymtab_nand_erase_op, !33, !"__ksymtab_nand_erase_op", i1 false, i1 false}
!33 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 1875, i32 1}
!34 = !{ptr @__ksymtab_nand_reset_op, !35, !"__ksymtab_nand_reset_op", i1 false, i1 false}
!35 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2034, i32 1}
!36 = !{ptr @__ksymtab_nand_read_data_op, !37, !"__ksymtab_nand_read_data_op", i1 false, i1 false}
!37 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2119, i32 1}
!38 = !{ptr @__ksymtab_nand_write_data_op, !39, !"__ksymtab_nand_write_data_op", i1 false, i1 false}
!39 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2163, i32 1}
!40 = !{ptr @.str.1, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2419, i32 4}
!42 = !{ptr @.str.2, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @.str.3, !41, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @nand_op_parser_exec_op.__UNIQUE_ID_ddebug263, !41, !"__UNIQUE_ID_ddebug263", i1 false, i1 false}
!45 = !{ptr @.str.4, !41, !"<string literal>", i1 false, i1 false}
!46 = !{ptr @__ksymtab_nand_op_parser_exec_op, !47, !"__ksymtab_nand_op_parser_exec_op", i1 false, i1 false}
!47 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2446, i32 1}
!48 = !{ptr @__ksymtab_nand_subop_get_addr_start_off, !49, !"__ksymtab_nand_subop_get_addr_start_off", i1 false, i1 false}
!49 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2489, i32 1}
!50 = !{ptr @__ksymtab_nand_subop_get_num_addr_cyc, !51, !"__ksymtab_nand_subop_get_num_addr_cyc", i1 false, i1 false}
!51 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2521, i32 1}
!52 = !{ptr @__ksymtab_nand_subop_get_data_start_off, !53, !"__ksymtab_nand_subop_get_data_start_off", i1 false, i1 false}
!53 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2543, i32 1}
!54 = !{ptr @__ksymtab_nand_subop_get_data_len, !55, !"__ksymtab_nand_subop_get_data_len", i1 false, i1 false}
!55 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2575, i32 1}
!56 = !{ptr @__ksymtab_nand_reset, !57, !"__ksymtab_nand_reset", i1 false, i1 false}
!57 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2613, i32 1}
!58 = !{ptr @__ksymtab_nand_check_erased_ecc_chunk, !59, !"__ksymtab_nand_check_erased_ecc_chunk", i1 false, i1 false}
!59 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2786, i32 1}
!60 = !{ptr @__ksymtab_nand_read_page_raw, !61, !"__ksymtab_nand_read_page_raw", i1 false, i1 false}
!61 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2831, i32 1}
!62 = !{ptr @__ksymtab_nand_monolithic_read_page_raw, !63, !"__ksymtab_nand_monolithic_read_page_raw", i1 false, i1 false}
!63 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2872, i32 1}
!64 = !{ptr @__ksymtab_nand_read_page_hwecc_oob_first, !65, !"__ksymtab_nand_read_page_hwecc_oob_first", i1 false, i1 false}
!65 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3231, i32 1}
!66 = !{ptr @__ksymtab_nand_read_oob_std, !67, !"__ksymtab_nand_read_oob_std", i1 false, i1 false}
!67 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3583, i32 1}
!68 = !{ptr @__ksymtab_nand_write_oob_std, !69, !"__ksymtab_nand_write_oob_std", i1 false, i1 false}
!69 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3651, i32 1}
!70 = !{ptr @__ksymtab_nand_write_page_raw, !71, !"__ksymtab_nand_write_page_raw", i1 false, i1 false}
!71 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3885, i32 1}
!72 = !{ptr @__ksymtab_nand_monolithic_write_page_raw, !73, !"__ksymtab_nand_monolithic_write_page_raw", i1 false, i1 false}
!73 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3921, i32 1}
!74 = !{ptr @.str.5, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4472, i32 2}
!76 = !{ptr @.str.6, !75, !"<string literal>", i1 false, i1 false}
!77 = !{ptr @nand_erase_nand.__UNIQUE_ID_ddebug300, !75, !"__UNIQUE_ID_ddebug300", i1 false, i1 false}
!78 = !{ptr @.str.7, !75, !"<string literal>", i1 false, i1 false}
!79 = !{ptr @.str.8, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4500, i32 3}
!81 = !{ptr @nand_erase_nand.__UNIQUE_ID_ddebug301, !80, !"__UNIQUE_ID_ddebug301", i1 false, i1 false}
!82 = !{ptr @.str.9, !80, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @.str.10, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4513, i32 4}
!85 = !{ptr @nand_erase_nand._entry, !84, !"_entry", i1 false, i1 false}
!86 = !{ptr @nand_erase_nand._entry_ptr, !84, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @.str.11, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4530, i32 4}
!89 = !{ptr @nand_erase_nand.__UNIQUE_ID_ddebug302, !88, !"__UNIQUE_ID_ddebug302", i1 false, i1 false}
!90 = !{ptr @.str.12, !88, !"<string literal>", i1 false, i1 false}
!91 = !{ptr @__ksymtab_nand_decode_ext_id, !92, !"__ksymtab_nand_decode_ext_id", i1 false, i1 false}
!92 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4845, i32 1}
!93 = !{ptr @.str.13, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5343, i32 35}
!95 = !{ptr @.str.14, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5345, i32 3}
!97 = !{ptr @.str.15, !96, !"<string literal>", i1 false, i1 false}
!98 = !{ptr @rawnand_dt_parse_gpio_cs.__UNIQUE_ID_ddebug304, !96, !"__UNIQUE_ID_ddebug304", i1 false, i1 false}
!99 = !{ptr @.str.16, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5354, i32 44}
!101 = !{ptr @__ksymtab_rawnand_dt_parse_gpio_cs, !102, !"__ksymtab_rawnand_dt_parse_gpio_cs", i1 false, i1 false}
!102 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5365, i32 1}
!103 = !{ptr @__ksymtab_rawnand_sw_hamming_init, !104, !"__ksymtab_rawnand_sw_hamming_init", i1 false, i1 false}
!104 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5539, i32 1}
!105 = !{ptr @__ksymtab_rawnand_sw_hamming_calculate, !106, !"__ksymtab_rawnand_sw_hamming_calculate", i1 false, i1 false}
!106 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5549, i32 1}
!107 = !{ptr @__ksymtab_rawnand_sw_hamming_correct, !108, !"__ksymtab_rawnand_sw_hamming_correct", i1 false, i1 false}
!108 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5560, i32 1}
!109 = !{ptr @__ksymtab_rawnand_sw_hamming_cleanup, !110, !"__ksymtab_rawnand_sw_hamming_cleanup", i1 false, i1 false}
!110 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5568, i32 1}
!111 = !{ptr @__ksymtab_rawnand_sw_bch_init, !112, !"__ksymtab_rawnand_sw_bch_init", i1 false, i1 false}
!112 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5593, i32 1}
!113 = !{ptr @__ksymtab_rawnand_sw_bch_correct, !114, !"__ksymtab_rawnand_sw_bch_correct", i1 false, i1 false}
!114 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5611, i32 1}
!115 = !{ptr @__ksymtab_rawnand_sw_bch_cleanup, !116, !"__ksymtab_rawnand_sw_bch_cleanup", i1 false, i1 false}
!116 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5619, i32 1}
!117 = !{ptr @__ksymtab_nand_ecc_choose_conf, !118, !"__ksymtab_nand_ecc_choose_conf", i1 false, i1 false}
!118 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6003, i32 1}
!119 = !{ptr @__ksymtab_nand_scan_with_ids, !120, !"__ksymtab_nand_scan_with_ids", i1 false, i1 false}
!120 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6417, i32 1}
!121 = !{ptr @__ksymtab_nand_cleanup, !122, !"__ksymtab_nand_cleanup", i1 false, i1 false}
!122 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6461, i32 1}
!123 = !{ptr @__UNIQUE_ID_file305, !124, !"__UNIQUE_ID_file305", i1 false, i1 false}
!124 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6463, i32 1}
!125 = !{ptr @__UNIQUE_ID_license306, !124, !"__UNIQUE_ID_license306", i1 false, i1 false}
!126 = !{ptr @__UNIQUE_ID_author307, !127, !"__UNIQUE_ID_author307", i1 false, i1 false}
!127 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6464, i32 1}
!128 = !{ptr @__UNIQUE_ID_author308, !129, !"__UNIQUE_ID_author308", i1 false, i1 false}
!129 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6465, i32 1}
!130 = !{ptr @__UNIQUE_ID_description309, !131, !"__UNIQUE_ID_description309", i1 false, i1 false}
!131 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6466, i32 1}
!132 = !{ptr @.str.17, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 429, i32 2}
!134 = !{ptr @.str.18, !133, !"<string literal>", i1 false, i1 false}
!135 = !{ptr @nand_do_write_oob.__UNIQUE_ID_ddebug254, !133, !"__UNIQUE_ID_ddebug254", i1 false, i1 false}
!136 = !{ptr @.str.19, !133, !"<string literal>", i1 false, i1 false}
!137 = !{ptr @.str.20, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 436, i32 3}
!139 = !{ptr @nand_do_write_oob.__UNIQUE_ID_ddebug255, !138, !"__UNIQUE_ID_ddebug255", i1 false, i1 false}
!140 = !{ptr @.str.21, !138, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @.str.22, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/mtd/nand/raw/internals.h", i32 139, i32 6}
!143 = !{ptr @.str.23, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2324, i32 17}
!145 = !{ptr @.str.24, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2327, i32 2}
!147 = !{ptr @.str.25, !146, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @nand_op_parser_trace.__UNIQUE_ID_ddebug262, !146, !"__UNIQUE_ID_ddebug262", i1 false, i1 false}
!149 = !{ptr @.str.26, !146, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @.str.27, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 2333, i32 13}
!152 = !{ptr @.str.28, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../include/linux/mtd/rawnand.h", i32 1030, i32 3}
!154 = !{ptr @.str.29, !153, !"<string literal>", i1 false, i1 false}
!155 = !{ptr @.str.30, !153, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @nand_op_trace.__UNIQUE_ID_ddebug242, !153, !"__UNIQUE_ID_ddebug242", i1 false, i1 false}
!157 = !{ptr @.str.31, !153, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @.str.32, !159, !"<string literal>", i1 false, i1 false}
!159 = !{!"../include/linux/mtd/rawnand.h", i32 1034, i32 3}
!160 = !{ptr @nand_op_trace.__UNIQUE_ID_ddebug243, !159, !"__UNIQUE_ID_ddebug243", i1 false, i1 false}
!161 = !{ptr @.str.33, !159, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @.str.34, !163, !"<string literal>", i1 false, i1 false}
!163 = !{!"../include/linux/mtd/rawnand.h", i32 1041, i32 3}
!164 = !{ptr @nand_op_trace.__UNIQUE_ID_ddebug244, !163, !"__UNIQUE_ID_ddebug244", i1 false, i1 false}
!165 = !{ptr @.str.35, !163, !"<string literal>", i1 false, i1 false}
!166 = !{ptr @.str.36, !163, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @.str.37, !163, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @.str.38, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../include/linux/mtd/rawnand.h", i32 1047, i32 3}
!170 = !{ptr @nand_op_trace.__UNIQUE_ID_ddebug245, !169, !"__UNIQUE_ID_ddebug245", i1 false, i1 false}
!171 = !{ptr @.str.39, !169, !"<string literal>", i1 false, i1 false}
!172 = !{ptr @.str.40, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../include/linux/mtd/rawnand.h", i32 1053, i32 3}
!174 = !{ptr @nand_op_trace.__UNIQUE_ID_ddebug246, !173, !"__UNIQUE_ID_ddebug246", i1 false, i1 false}
!175 = !{ptr @.str.41, !173, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @.str.42, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 821, i32 3}
!178 = !{ptr @.str.43, !177, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @nand_reset_interface._entry, !177, !"_entry", i1 false, i1 false}
!180 = !{ptr @nand_reset_interface._entry_ptr, !177, !"_entry_ptr", i1 false, i1 false}
!181 = !{ptr @.str.44, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 890, i32 3}
!183 = !{ptr @.str.45, !182, !"<string literal>", i1 false, i1 false}
!184 = !{ptr @nand_setup_interface._entry, !182, !"_entry", i1 false, i1 false}
!185 = !{ptr @nand_setup_interface._entry_ptr, !182, !"_entry_ptr", i1 false, i1 false}
!186 = !{ptr @.str.46, !182, !"<string literal>", i1 false, i1 false}
!187 = !{ptr @.str.47, !182, !"<string literal>", i1 false, i1 false}
!188 = !{ptr @.str.48, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 893, i32 3}
!190 = !{ptr @nand_setup_interface.__UNIQUE_ID_ddebug256, !189, !"__UNIQUE_ID_ddebug256", i1 false, i1 false}
!191 = !{ptr @.str.49, !189, !"<string literal>", i1 false, i1 false}
!192 = !{ptr @.str.50, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 106, i32 3}
!194 = !{ptr @.str.51, !193, !"<string literal>", i1 false, i1 false}
!195 = !{ptr @check_offs_len.__UNIQUE_ID_ddebug247, !193, !"__UNIQUE_ID_ddebug247", i1 false, i1 false}
!196 = !{ptr @.str.52, !193, !"<string literal>", i1 false, i1 false}
!197 = !{ptr @.str.53, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 112, i32 3}
!199 = !{ptr @check_offs_len.__UNIQUE_ID_ddebug248, !198, !"__UNIQUE_ID_ddebug248", i1 false, i1 false}
!200 = !{ptr @.str.54, !198, !"<string literal>", i1 false, i1 false}
!201 = !{ptr @.str.55, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 304, i32 3}
!203 = !{ptr @.str.56, !202, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @nand_region_is_secured.__UNIQUE_ID_ddebug253, !202, !"__UNIQUE_ID_ddebug253", i1 false, i1 false}
!205 = !{ptr @.str.57, !202, !"<string literal>", i1 false, i1 false}
!206 = distinct !{null, !207, !"__already_done", i1 false, i1 false}
!207 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 324, i32 6}
!208 = !{ptr @.str.58, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../include/linux/of_gpio.h", i32 104, i32 50}
!210 = distinct !{null, !211, !"__already_done", i1 false, i1 false}
!211 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5790, i32 8}
!212 = !{ptr @.str.59, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5794, i32 5}
!214 = !{ptr @.str.60, !213, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @nand_check_ecc_caps._entry, !213, !"_entry", i1 false, i1 false}
!216 = !{ptr @nand_check_ecc_caps._entry_ptr, !213, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.62, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5805, i32 2}
!219 = !{ptr @nand_check_ecc_caps._entry.61, !218, !"_entry", i1 false, i1 false}
!220 = !{ptr @nand_check_ecc_caps._entry_ptr.63, !218, !"_entry_ptr", i1 false, i1 false}
!221 = distinct !{null, !222, !"__already_done", i1 false, i1 false}
!222 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5933, i32 8}
!223 = distinct !{null, !224, !"__already_done", i1 false, i1 false}
!224 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5864, i32 8}
!225 = !{ptr @nand_scan_ident.__key, !226, !"__key", i1 false, i1 false}
!226 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5439, i32 2}
!227 = !{ptr @.str.64, !226, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @.str.65, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5464, i32 4}
!230 = !{ptr @.str.66, !229, !"<string literal>", i1 false, i1 false}
!231 = !{ptr @nand_scan_ident._entry, !229, !"_entry", i1 false, i1 false}
!232 = !{ptr @nand_scan_ident._entry_ptr, !229, !"_entry_ptr", i1 false, i1 false}
!233 = !{ptr @.str.68, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5496, i32 3}
!235 = !{ptr @nand_scan_ident._entry.67, !234, !"_entry", i1 false, i1 false}
!236 = !{ptr @nand_scan_ident._entry_ptr.69, !234, !"_entry_ptr", i1 false, i1 false}
!237 = !{ptr @.str.70, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5378, i32 32}
!239 = !{ptr @.str.71, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5281, i32 31}
!241 = !{ptr @.str.72, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5295, i32 35}
!243 = !{ptr @.str.73, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5193, i32 22}
!245 = !{ptr @.str.74, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5194, i32 22}
!247 = !{ptr @.str.75, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5195, i32 25}
!249 = !{ptr @.str.76, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5196, i32 20}
!251 = !{ptr @.str.77, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5197, i32 28}
!253 = !{ptr @.str.78, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5198, i32 23}
!255 = !{ptr @.str.79, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5204, i32 36}
!257 = !{ptr @nand_controller_init.__key, !258, !"__key", i1 false, i1 false}
!258 = !{!"../include/linux/mtd/rawnand.h", i32 1105, i32 2}
!259 = !{ptr @.str.80, !258, !"<string literal>", i1 false, i1 false}
!260 = !{ptr @.str.81, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5044, i32 3}
!262 = !{ptr @.str.82, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @nand_detect._entry, !261, !"_entry", i1 false, i1 false}
!264 = !{ptr @nand_detect._entry_ptr, !261, !"_entry_ptr", i1 false, i1 false}
!265 = !{ptr @.str.84, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5130, i32 3}
!267 = !{ptr @nand_detect._entry.83, !266, !"_entry", i1 false, i1 false}
!268 = !{ptr @nand_detect._entry_ptr.85, !266, !"_entry_ptr", i1 false, i1 false}
!269 = !{ptr @.str.87, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5132, i32 3}
!271 = !{ptr @nand_detect._entry.86, !270, !"_entry", i1 false, i1 false}
!272 = !{ptr @nand_detect._entry_ptr.88, !270, !"_entry_ptr", i1 false, i1 false}
!273 = !{ptr @.str.90, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5134, i32 3}
!275 = !{ptr @nand_detect._entry.89, !274, !"_entry", i1 false, i1 false}
!276 = !{ptr @nand_detect._entry_ptr.91, !274, !"_entry_ptr", i1 false, i1 false}
!277 = !{ptr @nand_detect._entry.92, !278, !"_entry", i1 false, i1 false}
!278 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5165, i32 2}
!279 = !{ptr @nand_detect._entry_ptr.93, !278, !"_entry_ptr", i1 false, i1 false}
!280 = !{ptr @nand_detect._entry.94, !281, !"_entry", i1 false, i1 false}
!281 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5167, i32 2}
!282 = !{ptr @nand_detect._entry_ptr.95, !281, !"_entry_ptr", i1 false, i1 false}
!283 = !{ptr @.str.97, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5169, i32 2}
!285 = !{ptr @nand_detect._entry.96, !284, !"_entry", i1 false, i1 false}
!286 = !{ptr @nand_detect._entry_ptr.98, !284, !"_entry_ptr", i1 false, i1 false}
!287 = !{ptr @.str.99, !284, !"<string literal>", i1 false, i1 false}
!288 = !{ptr @.str.100, !284, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @.str.101, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4987, i32 55}
!291 = !{ptr @.str.102, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../include/linux/mtd/rawnand.h", i32 1444, i32 2}
!293 = !{ptr @.str.103, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6120, i32 4}
!295 = !{ptr @.str.104, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6140, i32 5}
!297 = !{ptr @.str.105, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6146, i32 3}
!299 = !{ptr @.str.106, !298, !"<string literal>", i1 false, i1 false}
!300 = !{ptr @nand_scan_tail._entry, !298, !"_entry", i1 false, i1 false}
!301 = !{ptr @nand_scan_tail._entry_ptr, !298, !"_entry_ptr", i1 false, i1 false}
!302 = !{ptr @.str.107, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6160, i32 4}
!304 = !{ptr @.str.109, !305, !"<string literal>", i1 false, i1 false}
!305 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6171, i32 3}
!306 = !{ptr @nand_scan_tail._entry.108, !305, !"_entry", i1 false, i1 false}
!307 = !{ptr @nand_scan_tail._entry_ptr.110, !305, !"_entry_ptr", i1 false, i1 false}
!308 = !{ptr @.str.111, !309, !"<string literal>", i1 false, i1 false}
!309 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6184, i32 3}
!310 = !{ptr @.str.112, !311, !"<string literal>", i1 false, i1 false}
!311 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6215, i32 3}
!312 = !{ptr @.str.113, !313, !"<string literal>", i1 false, i1 false}
!313 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6226, i32 3}
!314 = !{ptr @.str.115, !315, !"<string literal>", i1 false, i1 false}
!315 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6243, i32 3}
!316 = !{ptr @nand_scan_tail._entry.114, !315, !"_entry", i1 false, i1 false}
!317 = !{ptr @nand_scan_tail._entry_ptr.116, !315, !"_entry_ptr", i1 false, i1 false}
!318 = !{ptr @.str.117, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5653, i32 4}
!320 = !{ptr @.str.118, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5672, i32 3}
!322 = !{ptr @.str.119, !321, !"<string literal>", i1 false, i1 false}
!323 = !{ptr @nand_set_ecc_on_host_ops._entry, !321, !"_entry", i1 false, i1 false}
!324 = !{ptr @nand_set_ecc_on_host_ops._entry_ptr, !321, !"_entry_ptr", i1 false, i1 false}
!325 = !{ptr @.str.120, !326, !"<string literal>", i1 false, i1 false}
!326 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5713, i32 4}
!327 = !{ptr @.str.121, !328, !"<string literal>", i1 false, i1 false}
!328 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5746, i32 4}
!329 = !{ptr @.str.122, !330, !"<string literal>", i1 false, i1 false}
!330 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5752, i32 3}
!331 = !{ptr @rawnand_ops, !332, !"rawnand_ops", i1 false, i1 false}
!332 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 6043, i32 30}
!333 = !{ptr @.str.123, !334, !"<string literal>", i1 false, i1 false}
!334 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4269, i32 3}
!335 = !{ptr @.str.124, !334, !"<string literal>", i1 false, i1 false}
!336 = !{ptr @nand_do_write_ops._entry, !334, !"_entry", i1 false, i1 false}
!337 = !{ptr @nand_do_write_ops._entry_ptr, !334, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @.str.125, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4323, i32 4}
!340 = !{ptr @nand_do_write_ops.__UNIQUE_ID_ddebug295, !339, !"__UNIQUE_ID_ddebug295", i1 false, i1 false}
!341 = !{ptr @.str.126, !339, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @.str.127, !343, !"<string literal>", i1 false, i1 false}
!343 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3746, i32 2}
!344 = !{ptr @.str.128, !343, !"<string literal>", i1 false, i1 false}
!345 = !{ptr @nand_do_read_oob.__UNIQUE_ID_ddebug290, !343, !"__UNIQUE_ID_ddebug290", i1 false, i1 false}
!346 = !{ptr @.str.129, !343, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @.str.130, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3450, i32 5}
!349 = !{ptr @.str.131, !348, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @nand_do_read_ops.__UNIQUE_ID_ddebug277, !348, !"__UNIQUE_ID_ddebug277", i1 false, i1 false}
!351 = !{ptr @.str.132, !348, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @.str.133, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 3368, i32 2}
!354 = !{ptr @.str.134, !353, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @nand_setup_read_retry.__UNIQUE_ID_ddebug274, !353, !"__UNIQUE_ID_ddebug274", i1 false, i1 false}
!356 = !{ptr @.str.135, !353, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @.str.136, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4570, i32 2}
!359 = !{ptr @.str.137, !358, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @nand_sync.__UNIQUE_ID_ddebug303, !358, !"__UNIQUE_ID_ddebug303", i1 false, i1 false}
!361 = !{ptr @.str.138, !358, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @.str.139, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 4659, i32 3}
!364 = !{ptr @.str.140, !363, !"<string literal>", i1 false, i1 false}
!365 = !{ptr @nand_resume._entry, !363, !"_entry", i1 false, i1 false}
!366 = !{ptr @nand_resume._entry_ptr, !363, !"_entry_ptr", i1 false, i1 false}
!367 = !{ptr @.str.141, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../drivers/mtd/nand/raw/nand_base.c", i32 5305, i32 30}
!369 = !{i32 1, !"wchar_size", i32 2}
!370 = !{i32 1, !"min_enum_size", i32 4}
!371 = !{i32 8, !"branch-target-enforcement", i32 0}
!372 = !{i32 8, !"sign-return-address", i32 0}
!373 = !{i32 8, !"sign-return-address-all", i32 0}
!374 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!375 = !{i32 7, !"uwtable", i32 1}
!376 = !{i32 7, !"frame-pointer", i32 2}
!377 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!378 = !{!"branch_weights", i32 1, i32 2000}
!379 = !{!"branch_weights", i32 2000, i32 1}
!380 = !{!"auto-init"}
!381 = !{i32 0, i32 33}
!382 = !{i64 871151, i64 871178, i64 871200, i64 871228}
!383 = !{i64 871559, i64 871586, i64 871619, i64 871640, i64 871667, i64 871693}
!384 = !{i8 0, i8 2}
!385 = !{i64 2149123648, i64 2149123653, i64 2149123666, i64 2149123710, i64 2149123744, i64 2149123765}
!386 = !{i64 2148356695, i64 2148356975, i64 2148357309, i64 2148357643}
!387 = !{i64 2154763186, i64 2154763683, i64 2154763223, i64 2154763279, i64 2154763313, i64 2154763337, i64 2154763378, i64 2154763399, i64 2154763427, i64 2154763461}
!388 = !{i64 2154764703, i64 2154765200, i64 2154764740, i64 2154764796, i64 2154764830, i64 2154764854, i64 2154764895, i64 2154764916, i64 2154764944, i64 2154764978}
!389 = !{i64 2155230334, i64 2155230832, i64 2155230371, i64 2155230427, i64 2155230461, i64 2155230485, i64 2155230526, i64 2155230547, i64 2155230575, i64 2155230609}
!390 = !{i64 2155231854, i64 2155232352, i64 2155231891, i64 2155231947, i64 2155231981, i64 2155232005, i64 2155232046, i64 2155232067, i64 2155232095, i64 2155232129}
