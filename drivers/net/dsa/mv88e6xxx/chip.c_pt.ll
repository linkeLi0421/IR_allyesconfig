; ModuleID = '/llk/IR_all_yes/drivers/net/dsa/mv88e6xxx/chip.c_pt.bc'
source_filename = "../drivers/net/dsa/mv88e6xxx/chip.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.atomic_t = type { i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.mdio_driver = type { %struct.mdio_driver_common, ptr, ptr, ptr }
%struct.mdio_driver_common = type { %struct.device_driver, i32 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mv88e6xxx_info = type { i32, i16, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i8, i8, i32, i8, ptr, i8 }
%struct.mv88e6xxx_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mv88e6xxx_irq_ops = type { ptr, ptr, ptr }
%struct.mv88e6xxx_hw_stat = type { [32 x i8], i32, i32, i32 }
%struct.mv88e6xxx_gpio_ops = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mv88e6xxx_avb_ops = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mv88e6xxx_ptp_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.irq_domain_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.irq_chip = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.dsa_switch_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.mv88e6xxx_chip = type { ptr, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, ptr, %struct.mutex, i32, %struct.work_struct, %struct.timer_list, %struct.mutex, ptr, i32, %struct.list_head, %struct.idr, %struct.mv88e6xxx_irq, %struct.mv88e6xxx_irq, i32, [64 x i8], i32, [64 x i8], i32, [64 x i8], i32, [64 x i8], i32, [64 x i8], ptr, %struct.kthread_delayed_work, [2 x i8], %struct.cyclecounter, %struct.timecounter, %struct.delayed_work, ptr, %struct.ptp_clock_info, %struct.delayed_work, [16 x %struct.ptp_pin_desc], i16, i16, i16, i32, i32, [12 x %struct.mv88e6xxx_port_hwtstamp], [12 x %struct.mv88e6xxx_port], [5 x ptr] }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.mv88e6xxx_irq = type { i16, %struct.irq_chip, ptr, i32 }
%struct.kthread_delayed_work = type { %struct.kthread_work, %struct.timer_list }
%struct.kthread_work = type { %struct.list_head, ptr, ptr, i32 }
%struct.cyclecounter = type { ptr, i64, i32, i32 }
%struct.timecounter = type { ptr, i64, i64, i64, i64 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.mv88e6xxx_port_hwtstamp = type { i32, i32, %struct.sk_buff_head, %struct.sk_buff_head, i32, ptr, i16, %struct.hwtstamp_config }
%struct.sk_buff_head = type { %union.anon.78, i32, %struct.spinlock }
%union.anon.78 = type { %struct.anon.79 }
%struct.anon.79 = type { ptr, ptr }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.mv88e6xxx_port = type { ptr, i32, %struct.mv88e6xxx_vlan, [2 x i64], i64, i64, i64, i64, i64, i32, i8, i8, i8, i32, [64 x i8], ptr }
%struct.mv88e6xxx_vlan = type { i16, i8 }
%struct.mv88e6xxx_bus_ops = type { ptr, ptr }
%struct.mv88e6xxx_vtu_entry = type { i16, i16, i8, i8, [12 x i8], [12 x i8] }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.dsa_mv88e6xxx_pdata = type { %struct.dsa_chip_data, ptr, i32, ptr, i32, i32 }
%struct.dsa_chip_data = type { ptr, i32, [12 x ptr], i32, ptr, [12 x ptr], [12 x ptr], [4 x i8] }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.129, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.150, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.129 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.hlist_head = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.possible_net_t = type { ptr }
%union.anon.150 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.mdio_device = type { %struct.device, ptr, [32 x i8], ptr, ptr, ptr, i32, i32, ptr, ptr, i32, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.dsa_switch = type { ptr, ptr, i32, i16, %struct.notifier_block, ptr, ptr, ptr, ptr, i32, ptr, i32, i32, ptr, ptr, i32, i32, i32, i32 }
%struct.notifier_block = type { ptr, ptr, i32 }
%struct.dsa_switch_tree = type { %struct.list_head, %struct.list_head, %struct.raw_notifier_head, i32, %struct.kref, ptr, ptr, i32, i8, ptr, %struct.list_head, i32, i32 }
%struct.raw_notifier_head = type { ptr }
%struct.dsa_port = type { %union.anon.149, ptr, ptr, ptr, ptr, i32, i32, ptr, ptr, [6 x i8], i8, i8, ptr, i32, ptr, %struct.devlink_port, ptr, %struct.phylink_config, ptr, ptr, %struct.list_head, ptr, ptr, %struct.mutex, %struct.list_head, %struct.list_head }
%union.anon.149 = type { ptr }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, i32, %struct.spinlock, i32, i32, ptr, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex, ptr }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.138 }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%union.anon.138 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.phylink_config = type { ptr, i32, i8, i8, i8, i8, ptr, [1 x i32], i32 }
%struct.phylink_link_state = type { [3 x i32], [3 x i32], i32, i32, i32, i32, i8 }
%struct.irq_domain = type { %struct.list_head, ptr, ptr, ptr, i32, i32, ptr, i32, ptr, ptr, i32, i32, %struct.xarray, %struct.mutex, [0 x ptr] }
%struct.irq_data = type { i32, i32, i32, ptr, ptr, ptr, ptr, ptr }
%struct.mii_bus = type { ptr, ptr, [61 x i8], ptr, ptr, ptr, ptr, [32 x %struct.mdio_bus_stats], %struct.mutex, ptr, i32, %struct.device, [32 x ptr], i32, i32, [32 x i32], i32, i32, ptr, i32, %struct.mutex, [32 x ptr] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.mv88e6xxx_mdio_bus = type { ptr, ptr, %struct.list_head, i8 }
%struct.device_node = type { ptr, i32, ptr, %struct.fwnode_handle, ptr, ptr, ptr, ptr, ptr, %struct.kobject, i32, ptr }
%struct.fwnode_handle = type { ptr, ptr, ptr, %struct.list_head, %struct.list_head, i8 }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.switchdev_obj_port_vlan = type { %struct.switchdev_obj, i16, i16 }
%struct.switchdev_obj = type { %struct.list_head, ptr, i32, i32, ptr, ptr }
%struct.mv88e6xxx_atu_entry = type { i8, i8, i16, [6 x i8] }
%struct.switchdev_obj_port_mdb = type { %struct.switchdev_obj, [6 x i8], i16 }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.147, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.147 = type { i32 }
%struct.mv88e6xxx_policy = type { i32, i32, %struct.ethtool_rx_flow_spec, [6 x i8], i32, i16 }
%struct.ethhdr = type { [6 x i8], [6 x i8], i16 }
%struct.dsa_mall_mirror_tc_entry = type { i8, i8 }
%struct.dsa_bridge = type { ptr, i32, i8, %struct.refcount_struct }

@mv88e6xxx_read.__UNIQUE_ID_ddebug497 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, i8 0, i8 16, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mv88e6xxx\00", [22 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"mv88e6xxx_read\00", [17 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"drivers/net/dsa/mv88e6xxx/chip.c\00", [63 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"<- addr: 0x%.2x reg: 0x%.2x val: 0x%.4x\0A\00", [55 x i8] zeroinitializer }, align 32
@mv88e6xxx_write.__UNIQUE_ID_ddebug498 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.4, ptr @.str.2, ptr @.str.5, i8 0, i8 20, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.4 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mv88e6xxx_write\00", [16 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"-> addr: 0x%.2x reg: 0x%.2x val: 0x%.4x\0A\00", [55 x i8] zeroinitializer }, align 32
@mv88e6xxx_wait_mask._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.7, ptr @.str.2, i32 105, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Timeout while waiting for switch\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"mv88e6xxx_wait_mask\00", [44 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@mv88e6xxx_wait_mask._entry_ptr = internal global ptr @mv88e6xxx_wait_mask._entry, section ".printk_index", align 4
@__initcall__kmod_mv88e6xxx__499_6578_mdio_module_init6 = internal global ptr @mdio_module_init, section ".initcall6.init", align 4
@mv88e6xxx_driver = internal global { %struct.mdio_driver, [36 x i8] } { %struct.mdio_driver { %struct.mdio_driver_common { %struct.device_driver { ptr @.str.12, ptr null, ptr null, ptr null, i8 0, i32 0, ptr @mv88e6xxx_of_match, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_pm_ops, ptr null, ptr null }, i32 0 }, ptr @mv88e6xxx_probe, ptr @mv88e6xxx_remove, ptr @mv88e6xxx_shutdown }, [36 x i8] zeroinitializer }, align 32
@__exitcall_mdio_module_exit = internal global ptr @mdio_module_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_author500 = internal constant [60 x i8] c"mv88e6xxx.author=Lennert Buytenhek <buytenh@wantstofly.org>\00", section ".modinfo", align 1
@__UNIQUE_ID_description501 = internal constant [71 x i8] c"mv88e6xxx.description=Driver for Marvell 88E6XXX ethernet switch chips\00", section ".modinfo", align 1
@__UNIQUE_ID_file502 = internal constant [51 x i8] c"mv88e6xxx.file=drivers/net/dsa/mv88e6xxx/mv88e6xxx\00", section ".modinfo", align 1
@__UNIQUE_ID_license503 = internal constant [22 x i8] c"mv88e6xxx.license=GPL\00", section ".modinfo", align 1
@assert_reg_lock._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.11, ptr @.str.2, i32 49, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Switch registers lock not held!\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"assert_reg_lock\00", [16 x i8] zeroinitializer }, align 32
@assert_reg_lock._entry_ptr = internal global ptr @assert_reg_lock._entry, section ".printk_index", align 4
@.str.12 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"mv88e6085\00", [22 x i8] zeroinitializer }, align 32
@mv88e6xxx_of_match = internal constant { [4 x %struct.of_device_id], [208 x i8] } { [4 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,mv88e6085\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @mv88e6xxx_table }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,mv88e6190\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr getelementptr (i8, ptr @mv88e6xxx_table, i64 1196) }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"marvell,mv88e6250\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr getelementptr (i8, ptr @mv88e6xxx_table, i64 1840) }, %struct.of_device_id zeroinitializer], [208 x i8] zeroinitializer }, align 32
@mv88e6xxx_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @mv88e6xxx_suspend, ptr @mv88e6xxx_resume, ptr @mv88e6xxx_suspend, ptr @mv88e6xxx_resume, ptr @mv88e6xxx_suspend, ptr @mv88e6xxx_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@mv88e6xxx_table = internal constant { [31 x %struct.mv88e6xxx_info], [732 x i8] } { [31 x %struct.mv88e6xxx_info] [%struct.mv88e6xxx_info { i32 3, i16 1184, ptr @.str.13, i32 4096, i32 8192, i32 10, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 10, i8 1, i32 0, i8 1, i8 0, i32 0, i8 15, ptr @mv88e6085_ops, i8 0 }, %struct.mv88e6xxx_info { i32 2, i16 2384, ptr @.str.14, i32 256, i32 8192, i32 11, i32 0, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 0, i8 0, i32 0, i8 1, i8 0, i32 0, i8 15, ptr @mv88e6095_ops, i8 0 }, %struct.mv88e6xxx_info { i32 3, i16 2448, ptr @.str.15, i32 4096, i32 8192, i32 11, i32 8, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6097_ops, i8 0 }, %struct.mv88e6xxx_info { i32 4, i16 4624, ptr @.str.16, i32 4096, i32 1024, i32 3, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6123_ops, i8 0 }, %struct.mv88e6xxx_info { i32 5, i16 4192, ptr @.str.17, i32 256, i32 8192, i32 8, i32 0, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 0, i8 0, i32 0, i8 1, i8 0, i32 0, i8 15, ptr @mv88e6131_ops, i8 0 }, %struct.mv88e6xxx_info { i32 8, i16 13312, ptr @.str.18, i32 4096, i32 2048, i32 6, i32 5, i32 11, i32 4095, i32 16, i32 16, i32 27, i32 28, i32 3750, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 31, ptr @mv88e6141_ops, i8 0 }, %struct.mv88e6xxx_info { i32 4, i16 5648, ptr @.str.19, i32 4096, i32 1024, i32 6, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6161_ops, i8 1 }, %struct.mv88e6xxx_info { i32 4, i16 5712, ptr @.str.20, i32 4096, i32 8192, i32 6, i32 0, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 0, i8 15, ptr @mv88e6165_ops, i8 1 }, %struct.mv88e6xxx_info { i32 9, i16 5904, ptr @.str.21, i32 4096, i32 8192, i32 7, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6171_ops, i8 0 }, %struct.mv88e6xxx_info { i32 10, i16 5920, ptr @.str.22, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6172_ops, i8 0 }, %struct.mv88e6xxx_info { i32 9, i16 5968, ptr @.str.23, i32 4096, i32 8192, i32 7, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6175_ops, i8 0 }, %struct.mv88e6xxx_info { i32 10, i16 5984, ptr @.str.24, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6176_ops, i8 0 }, %struct.mv88e6xxx_info { i32 5, i16 6768, ptr @.str.25, i32 256, i32 8192, i32 10, i32 0, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 0, i8 0, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6185_ops, i8 0 }, %struct.mv88e6xxx_info { i32 11, i16 6400, ptr @.str.26, i32 4096, i32 16384, i32 11, i32 9, i32 16, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6190_ops, i8 0 }, %struct.mv88e6xxx_info { i32 11, i16 2560, ptr @.str.27, i32 4096, i32 16384, i32 11, i32 9, i32 16, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6190x_ops, i8 0 }, %struct.mv88e6xxx_info { i32 11, i16 6416, ptr @.str.28, i32 4096, i32 16384, i32 11, i32 9, i32 0, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6191_ops, i8 1 }, %struct.mv88e6xxx_info { i32 12, i16 6432, ptr @.str.29, i32 4096, i32 0, i32 11, i32 9, i32 0, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 10, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6393x_ops, i8 1 }, %struct.mv88e6xxx_info { i32 12, i16 6448, ptr @.str.30, i32 4096, i32 0, i32 11, i32 9, i32 0, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 10, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6393x_ops, i8 1 }, %struct.mv88e6xxx_info { i32 6, i16 8704, ptr @.str.31, i32 64, i32 0, i32 7, i32 2, i32 0, i32 4095, i32 8, i32 0, i32 15, i32 7, i32 15000, i32 9, i32 10, i8 0, i32 28, i8 0, i8 1, i32 0, i8 15, ptr @mv88e6250_ops, i8 1 }, %struct.mv88e6xxx_info { i32 10, i16 9216, ptr @.str.32, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6240_ops, i8 1 }, %struct.mv88e6xxx_info { i32 6, i16 9472, ptr @.str.33, i32 64, i32 0, i32 7, i32 5, i32 0, i32 4095, i32 8, i32 0, i32 15, i32 7, i32 15000, i32 9, i32 10, i8 0, i32 0, i8 0, i8 1, i32 0, i8 15, ptr @mv88e6250_ops, i8 1 }, %struct.mv88e6xxx_info { i32 11, i16 10496, ptr @.str.34, i32 4096, i32 0, i32 11, i32 9, i32 16, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6290_ops, i8 1 }, %struct.mv88e6xxx_info { i32 7, i16 4432, ptr @.str.35, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6320_ops, i8 1 }, %struct.mv88e6xxx_info { i32 7, i16 12544, ptr @.str.36, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 8, i32 10, i8 0, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6321_ops, i8 1 }, %struct.mv88e6xxx_info { i32 8, i16 13328, ptr @.str.37, i32 4096, i32 2048, i32 6, i32 5, i32 11, i32 4095, i32 16, i32 16, i32 27, i32 28, i32 3750, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 31, ptr @mv88e6341_ops, i8 1 }, %struct.mv88e6xxx_info { i32 9, i16 14096, ptr @.str.38, i32 4096, i32 8192, i32 7, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6350_ops, i8 0 }, %struct.mv88e6xxx_info { i32 9, i16 14160, ptr @.str.39, i32 4096, i32 8192, i32 7, i32 5, i32 0, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6351_ops, i8 0 }, %struct.mv88e6xxx_info { i32 10, i16 13600, ptr @.str.40, i32 4096, i32 8192, i32 7, i32 5, i32 15, i32 4095, i32 16, i32 0, i32 27, i32 28, i32 15000, i32 9, i32 10, i8 1, i32 0, i8 1, i8 0, i32 2, i8 15, ptr @mv88e6352_ops, i8 1 }, %struct.mv88e6xxx_info { i32 11, i16 14592, ptr @.str.41, i32 4096, i32 16384, i32 11, i32 9, i32 16, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 1, i8 31, ptr @mv88e6390_ops, i8 1 }, %struct.mv88e6xxx_info { i32 11, i16 2576, ptr @.str.42, i32 4096, i32 16384, i32 11, i32 9, i32 16, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 9, i32 14, i8 1, i32 0, i8 1, i8 0, i32 1, i8 31, ptr @mv88e6390x_ops, i8 1 }, %struct.mv88e6xxx_info { i32 12, i16 14640, ptr @.str.43, i32 4096, i32 0, i32 11, i32 9, i32 0, i32 8191, i32 0, i32 0, i32 27, i32 28, i32 3750, i32 10, i32 14, i8 1, i32 0, i8 1, i8 0, i32 0, i8 31, ptr @mv88e6393x_ops, i8 1 }], [732 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6085\00", [16 x i8] zeroinitializer }, align 32
@mv88e6085_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g1_set_switch_mac, ptr @mv88e6185_phy_ppu_read, ptr @mv88e6185_phy_ppu_write, ptr @mv88e6xxx_g2_pot_clear, ptr @mv88e6185_g1_ppu_enable, ptr @mv88e6185_g1_ppu_disable, ptr @mv88e6185_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr null, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr @mv88e6085_g1_rmu_disable, ptr null, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Marvell 88E6095/88E6095F\00", [39 x i8] zeroinitializer }, align 32
@mv88e6095_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr null, ptr null, ptr null, ptr @mv88e6xxx_g1_set_switch_mac, ptr @mv88e6185_phy_ppu_read, ptr @mv88e6185_phy_ppu_write, ptr null, ptr @mv88e6185_g1_ppu_enable, ptr @mv88e6185_g1_ppu_disable, ptr @mv88e6185_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6185_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr null, ptr null, ptr @mv88e6085_port_set_frame_mode, ptr @mv88e6185_port_set_forward_unknown, ptr @mv88e6185_port_set_default_forward, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr @mv88e6095_port_set_upstream_port, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g2_mgmt_rsvd2cpu, ptr @mv88e6185_serdes_power, ptr @mv88e6185_serdes_get_lane, ptr @mv88e6185_serdes_pcs_get_state, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Marvell 88E6097/88E6097F\00", [39 x i8] zeroinitializer }, align 32
@mv88e6097_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6185_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr @mv88e6095_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr null, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr @mv88e6185_serdes_power, ptr @mv88e6185_serdes_get_lane, ptr @mv88e6185_serdes_pcs_get_state, ptr null, ptr null, ptr null, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6097_serdes_irq_enable, ptr @mv88e6097_serdes_irq_status, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr @mv88e6085_g1_rmu_disable, ptr null, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6123\00", [16 x i8] zeroinitializer }, align 32
@mv88e6123_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr null, ptr null, ptr @mv88e6085_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6131\00", [16 x i8] zeroinitializer }, align 32
@mv88e6131_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr null, ptr null, ptr null, ptr @mv88e6xxx_g1_set_switch_mac, ptr @mv88e6185_phy_ppu_read, ptr @mv88e6185_phy_ppu_write, ptr null, ptr @mv88e6185_g1_ppu_enable, ptr @mv88e6185_g1_ppu_disable, ptr @mv88e6185_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr @mv88e6185_port_set_pause, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6185_port_set_forward_unknown, ptr @mv88e6185_port_set_default_forward, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr null, ptr null, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr @mv88e6095_port_set_upstream_port, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr @mv88e6185_g1_set_cascade_port, ptr @mv88e6097_watchdog_ops, ptr @mv88e6185_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6141\00", [16 x i8] zeroinitializer }, align 32
@mv88e6141_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6341_port_set_speed_duplex, ptr @mv88e6341_port_max_speed_mode, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6341_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6341_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr @mv88e6390_serdes_get_sset_count, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr null, ptr @mv88e6390_g1_rmu_disable, ptr null, ptr @mv88e6341_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6161\00", [16 x i8] zeroinitializer }, align 32
@mv88e6161_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr null, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr @mv88e6165_avb_ops, ptr null, ptr @mv88e6165_ptp_ops, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6165\00", [16 x i8] zeroinitializer }, align 32
@mv88e6165_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6165_phy_read, ptr @mv88e6165_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr null, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr @mv88e6165_avb_ops, ptr null, ptr @mv88e6165_ptp_ops, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6171\00", [16 x i8] zeroinitializer }, align 32
@mv88e6171_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6172\00", [16 x i8] zeroinitializer }, align 32
@mv88e6172_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6352_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr @mv88e6352_serdes_power, ptr @mv88e6352_serdes_get_lane, ptr @mv88e6352_serdes_pcs_get_state, ptr @mv88e6352_serdes_pcs_config, ptr @mv88e6352_serdes_pcs_an_restart, ptr @mv88e6352_serdes_pcs_link_up, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6352_serdes_get_regs_len, ptr @mv88e6352_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr null, ptr @mv88e6352_g1_rmu_disable, ptr null, ptr @mv88e6352_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6175\00", [16 x i8] zeroinitializer }, align 32
@mv88e6175_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6176\00", [16 x i8] zeroinitializer }, align 32
@mv88e6176_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6352_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr @mv88e6352_serdes_power, ptr @mv88e6352_serdes_get_lane, ptr @mv88e6352_serdes_pcs_get_state, ptr @mv88e6352_serdes_pcs_config, ptr @mv88e6352_serdes_pcs_an_restart, ptr @mv88e6352_serdes_pcs_link_up, ptr @mv88e6352_serdes_irq_mapping, ptr @mv88e6352_serdes_irq_enable, ptr @mv88e6352_serdes_irq_status, ptr null, ptr null, ptr null, ptr @mv88e6352_serdes_get_regs_len, ptr @mv88e6352_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr null, ptr @mv88e6352_g1_rmu_disable, ptr null, ptr @mv88e6352_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6185\00", [16 x i8] zeroinitializer }, align 32
@mv88e6185_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr null, ptr null, ptr null, ptr @mv88e6xxx_g1_set_switch_mac, ptr @mv88e6185_phy_ppu_read, ptr @mv88e6185_phy_ppu_write, ptr null, ptr @mv88e6185_g1_ppu_enable, ptr @mv88e6185_g1_ppu_disable, ptr @mv88e6185_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6185_port_sync_link, ptr @mv88e6185_port_set_pause, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr null, ptr null, ptr @mv88e6085_port_set_frame_mode, ptr @mv88e6185_port_set_forward_unknown, ptr @mv88e6185_port_set_default_forward, ptr null, ptr null, ptr @mv88e6095_port_egress_rate_limiting, ptr null, ptr null, ptr null, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6185_port_get_cmode, ptr @mv88e6095_port_set_upstream_port, ptr @mv88e6xxx_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr @mv88e6185_g1_set_cascade_port, ptr @mv88e6097_watchdog_ops, ptr @mv88e6185_g2_mgmt_rsvd2cpu, ptr @mv88e6185_serdes_power, ptr @mv88e6185_serdes_get_lane, ptr @mv88e6185_serdes_pcs_get_state, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr @mv88e6185_g1_set_max_frame_size }, [80 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6190\00", [16 x i8] zeroinitializer }, align 32
@mv88e6190_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390_port_set_speed_duplex, ptr @mv88e6390_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr null, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr null, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr null, ptr @mv88e6390_g1_rmu_disable, ptr null, ptr @mv88e6390_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Marvell 88E6190X\00", [47 x i8] zeroinitializer }, align 32
@mv88e6190x_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390x_port_set_speed_duplex, ptr @mv88e6390x_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr null, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390x_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390x_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr null, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr null, ptr @mv88e6390_g1_rmu_disable, ptr null, ptr @mv88e6390x_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6191\00", [16 x i8] zeroinitializer }, align 32
@mv88e6191_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390_port_set_speed_duplex, ptr @mv88e6390_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr null, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr null, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr null, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6390_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Marvell 88E6191X\00", [47 x i8] zeroinitializer }, align 32
@mv88e6393x_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6393x_serdes_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6393x_port_set_speed_duplex, ptr @mv88e6393x_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6393x_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6393x_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6393x_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr @mv88e6393x_port_set_upstream_port, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr null, ptr @mv88e6393x_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6393x_port_mgmt_rsvd2cpu, ptr @mv88e6393x_serdes_power, ptr @mv88e6393x_serdes_get_lane, ptr @mv88e6393x_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6393x_serdes_irq_enable, ptr @mv88e6393x_serdes_irq_status, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6393x_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Marvell 88E6193X\00", [47 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6220\00", [16 x i8] zeroinitializer }, align 32
@mv88e6250_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6250_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6250_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6250_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr null, ptr @mv88e6xxx_port_disable_pri_override, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6250_stats_get_sset_count, ptr @mv88e6250_stats_get_strings, ptr @mv88e6250_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6250_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr null, ptr @mv88e6352_avb_ops, ptr null, ptr @mv88e6250_ptp_ops, ptr @mv88e6065_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6240\00", [16 x i8] zeroinitializer }, align 32
@mv88e6240_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6352_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr @mv88e6352_serdes_power, ptr @mv88e6352_serdes_get_lane, ptr @mv88e6352_serdes_pcs_get_state, ptr @mv88e6352_serdes_pcs_config, ptr @mv88e6352_serdes_pcs_an_restart, ptr @mv88e6352_serdes_pcs_link_up, ptr @mv88e6352_serdes_irq_mapping, ptr @mv88e6352_serdes_irq_enable, ptr @mv88e6352_serdes_irq_status, ptr null, ptr null, ptr null, ptr @mv88e6352_serdes_get_regs_len, ptr @mv88e6352_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6352_avb_ops, ptr @mv88e6352_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6352_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6250\00", [16 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6290\00", [16 x i8] zeroinitializer }, align 32
@mv88e6290_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390_port_set_speed_duplex, ptr @mv88e6390_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr null, ptr null, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr null, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6390_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6320\00", [16 x i8] zeroinitializer }, align 32
@mv88e6320_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6320_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6352_avb_ops, ptr null, ptr @mv88e6352_ptp_ops, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6321\00", [16 x i8] zeroinitializer }, align 32
@mv88e6321_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr null, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr null, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6320_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_g1_vtu_getnext, ptr @mv88e6185_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6352_avb_ops, ptr null, ptr @mv88e6352_ptp_ops, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6341\00", [16 x i8] zeroinitializer }, align 32
@mv88e6341_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6341_port_set_speed_duplex, ptr @mv88e6341_port_max_speed_mode, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6341_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6341_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr @mv88e6390_serdes_get_sset_count, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6341_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6350\00", [16 x i8] zeroinitializer }, align 32
@mv88e6350_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6351\00", [16 x i8] zeroinitializer }, align 32
@mv88e6351_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr null, ptr null, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6185_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr null, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr null, ptr @mv88e6352_avb_ops, ptr null, ptr @mv88e6352_ptp_ops, ptr @mv88e6185_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6352\00", [16 x i8] zeroinitializer }, align 32
@mv88e6352_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr null, ptr @mv88e6085_g1_ieee_pri_map, ptr @mv88e6085_g1_ip_pri_map, ptr @mv88e6352_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom16, ptr @mv88e6xxx_g2_set_eeprom16, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6352_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6352_port_set_speed_duplex, ptr null, ptr @mv88e6095_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6097_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr null, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6320_g1_stats_snapshot, ptr @mv88e6095_g1_stats_set_histogram, ptr @mv88e6095_stats_get_sset_count, ptr @mv88e6095_stats_get_strings, ptr @mv88e6095_stats_get_stats, ptr @mv88e6095_g1_set_cpu_port, ptr @mv88e6095_g1_set_egress_port, ptr null, ptr @mv88e6097_watchdog_ops, ptr @mv88e6352_g2_mgmt_rsvd2cpu, ptr @mv88e6352_serdes_power, ptr @mv88e6352_serdes_get_lane, ptr @mv88e6352_serdes_pcs_get_state, ptr @mv88e6352_serdes_pcs_config, ptr @mv88e6352_serdes_pcs_an_restart, ptr @mv88e6352_serdes_pcs_link_up, ptr @mv88e6352_serdes_irq_mapping, ptr @mv88e6352_serdes_irq_enable, ptr @mv88e6352_serdes_irq_status, ptr @mv88e6352_serdes_get_sset_count, ptr @mv88e6352_serdes_get_strings, ptr @mv88e6352_serdes_get_stats, ptr @mv88e6352_serdes_get_regs_len, ptr @mv88e6352_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6352_g1_vtu_getnext, ptr @mv88e6352_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6352_avb_ops, ptr @mv88e6352_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6352_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Marvell 88E6390\00", [16 x i8] zeroinitializer }, align 32
@mv88e6390_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390_port_set_speed_duplex, ptr @mv88e6390_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr @mv88e6390_serdes_get_sset_count, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6390_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Marvell 88E6390X\00", [47 x i8] zeroinitializer }, align 32
@mv88e6390x_ops = internal constant { %struct.mv88e6xxx_ops, [80 x i8] } { %struct.mv88e6xxx_ops { ptr @mv88e6390_setup_errata, ptr null, ptr null, ptr @mv88e6390_g2_irl_init_all, ptr @mv88e6xxx_g2_get_eeprom8, ptr @mv88e6xxx_g2_set_eeprom8, ptr @mv88e6xxx_g2_set_switch_mac, ptr @mv88e6xxx_g2_smi_phy_read, ptr @mv88e6xxx_g2_smi_phy_write, ptr @mv88e6xxx_g2_pot_clear, ptr null, ptr null, ptr @mv88e6352_g1_reset, ptr @mv88e6390_port_set_rgmii_delay, ptr @mv88e6xxx_port_set_link, ptr @mv88e6xxx_port_sync_link, ptr null, ptr @mv88e6390x_port_set_speed_duplex, ptr @mv88e6390x_port_max_speed_mode, ptr @mv88e6390_port_tag_remap, ptr @mv88e6352_port_set_policy, ptr @mv88e6351_port_set_frame_mode, ptr @mv88e6352_port_set_ucast_flood, ptr @mv88e6352_port_set_mcast_flood, ptr @mv88e6351_port_set_ether_type, ptr @mv88e6165_port_set_jumbo_size, ptr @mv88e6097_port_egress_rate_limiting, ptr @mv88e6390_port_pause_limit, ptr @mv88e6xxx_port_disable_learn_limit, ptr @mv88e6xxx_port_disable_pri_override, ptr @mv88e6xxx_setup_message_port, ptr @mv88e6390x_port_set_cmode, ptr @mv88e6352_port_get_cmode, ptr null, ptr @mv88e6390_g1_stats_snapshot, ptr @mv88e6390_g1_stats_set_histogram, ptr @mv88e6320_stats_get_sset_count, ptr @mv88e6320_stats_get_strings, ptr @mv88e6390_stats_get_stats, ptr @mv88e6390_g1_set_cpu_port, ptr @mv88e6390_g1_set_egress_port, ptr null, ptr @mv88e6390_watchdog_ops, ptr @mv88e6390_g1_mgmt_rsvd2cpu, ptr @mv88e6390_serdes_power, ptr @mv88e6390x_serdes_get_lane, ptr @mv88e6390_serdes_pcs_get_state, ptr @mv88e6390_serdes_pcs_config, ptr @mv88e6390_serdes_pcs_an_restart, ptr @mv88e6390_serdes_pcs_link_up, ptr @mv88e6390_serdes_irq_mapping, ptr @mv88e6390_serdes_irq_enable, ptr @mv88e6390_serdes_irq_status, ptr @mv88e6390_serdes_get_sset_count, ptr @mv88e6390_serdes_get_strings, ptr @mv88e6390_serdes_get_stats, ptr @mv88e6390_serdes_get_regs_len, ptr @mv88e6390_serdes_get_regs, ptr @mv88e6165_g1_atu_get_hash, ptr @mv88e6165_g1_atu_set_hash, ptr @mv88e6390_g1_vtu_getnext, ptr @mv88e6390_g1_vtu_loadpurge, ptr @mv88e6352_gpio_ops, ptr @mv88e6390_avb_ops, ptr @mv88e6390_g1_rmu_disable, ptr @mv88e6352_ptp_ops, ptr @mv88e6390x_phylink_validate, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Marvell 88E6393X\00", [47 x i8] zeroinitializer }, align 32
@mv88e6097_watchdog_ops = external dso_local constant %struct.mv88e6xxx_irq_ops, align 4
@mv88e6xxx_hw_stats = internal constant { [59 x %struct.mv88e6xxx_hw_stat], [668 x i8] } { [59 x %struct.mv88e6xxx_hw_stat] [%struct.mv88e6xxx_hw_stat { [32 x i8] c"in_good_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 8, i32 0, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_bad_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 2, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 4, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_broadcasts\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 6, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_multicasts\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 7, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 22, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_undersize\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 24, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_fragments\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 25, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_oversize\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 26, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_jabber\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 27, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_rx_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 28, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_fcs_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 29, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 8, i32 14, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_unicast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 16, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_broadcasts\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 19, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_multicasts\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 18, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_pause\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 21, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"excessive\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 17, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 30, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"deferred\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 5, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"single\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 20, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"multiple\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 23, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_fcs_error\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 3, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"late\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 31, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_64bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 8, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_65_127bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 9, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_128_255bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 10, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_256_511bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 11, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_512_1023bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 12, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"hist_1024_max_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 13, i32 2 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"sw_in_discards\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 16, i32 1 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"sw_in_filtered\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 2, i32 18, i32 1 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"sw_out_filtered\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 2, i32 19, i32 1 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_discards\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 0, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_filtered\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 1, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_accepted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 2, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_bad_accepted\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 3, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_good_avb_class_a\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 4, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_good_avb_class_b\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 5, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_bad_avb_class_a\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 6, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_bad_avb_class_b\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 7, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"tcam_counter_0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 8, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"tcam_counter_1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 9, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"tcam_counter_2\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 10, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"tcam_counter_3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 11, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_da_unknown\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 14, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"in_management\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 15, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 16, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_1\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 17, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_2\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 18, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_3\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 19, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_4\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 20, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_5\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 21, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_6\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 22, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_queue_7\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 23, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_cut_through\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 24, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_octets_a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 26, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_octets_b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 27, i32 4 }, %struct.mv88e6xxx_hw_stat { [32 x i8] c"out_management\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 4, i32 31, i32 4 }], [668 x i8] zeroinitializer }, align 32
@mv88e6390_watchdog_ops = external dso_local constant %struct.mv88e6xxx_irq_ops, align 4
@mv88e6352_gpio_ops = external dso_local constant %struct.mv88e6xxx_gpio_ops, align 4
@mv88e6165_avb_ops = external dso_local constant %struct.mv88e6xxx_avb_ops, align 4
@mv88e6165_ptp_ops = external dso_local constant %struct.mv88e6xxx_ptp_ops, align 4
@mv88e6390_setup_errata_applied._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.44, ptr @.str.45, ptr @.str.2, i32 3132, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Error reading hidden register: %d\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"mv88e6390_setup_errata_applied\00", [33 x i8] zeroinitializer }, align 32
@mv88e6390_setup_errata_applied._entry_ptr = internal global ptr @mv88e6390_setup_errata_applied._entry, section ".printk_index", align 4
@mv88e6390_avb_ops = external dso_local constant %struct.mv88e6xxx_avb_ops, align 4
@mv88e6352_ptp_ops = external dso_local constant %struct.mv88e6xxx_ptp_ops, align 4
@mv88e6250_watchdog_ops = external dso_local constant %struct.mv88e6xxx_irq_ops, align 4
@mv88e6352_avb_ops = external dso_local constant %struct.mv88e6xxx_avb_ops, align 4
@mv88e6250_ptp_ops = external dso_local constant %struct.mv88e6xxx_ptp_ops, align 4
@.str.46 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cpu\00", [28 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"reset\00", [26 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"eeprom-length\00", [18 x i8] zeroinitializer }, align 32
@mv88e6xxx_alloc_chip.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.49 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&chip->reg_lock\00", [16 x i8] zeroinitializer }, align 32
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.50 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@mv88e6xxx_detect._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.52, ptr @.str.2, i32 5724, ptr @.str.53, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"switch 0x%x detected: %s, revision %u\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"mv88e6xxx_detect\00", [47 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@mv88e6xxx_detect._entry_ptr = internal global ptr @mv88e6xxx_detect._entry, section ".printk_index", align 4
@mv88e6xxx_g1_irq_setup.lock_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@mv88e6xxx_g1_irq_setup.request_key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.54 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mv88e6xxx-%s\00", [19 x i8] zeroinitializer }, align 32
@mv88e6xxx_g1_irq_domain_ops = internal constant { %struct.irq_domain_ops, [52 x i8] } { %struct.irq_domain_ops { ptr null, ptr null, ptr @mv88e6xxx_g1_irq_domain_map, ptr null, ptr @irq_domain_xlate_twocell, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@mv88e6xxx_g1_irq_chip = internal constant { %struct.irq_chip, [56 x i8] } { %struct.irq_chip { ptr null, ptr @.str.55, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_g1_irq_mask, ptr null, ptr @mv88e6xxx_g1_irq_unmask, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_g1_irq_bus_lock, ptr @mv88e6xxx_g1_irq_bus_sync_unlock, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0 }, [56 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mv88e6xxx-g1\00", [19 x i8] zeroinitializer }, align 32
@mv88e6xxx_irq_poll_setup.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.56 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"(&(&chip->irq_poll_work)->timer)\00", [63 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mdio\00", [27 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"marvell,mv88e6xxx-mdio-external\00", [32 x i8] zeroinitializer }, align 32
@mv88e6xxx_mdio_register.index = internal global { i32, [28 x i8] } zeroinitializer, align 32
@.str.60 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%pOF\00", [27 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"mv88e6xxx SMI\00", [18 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"mv88e6xxx-%d\00", [19 x i8] zeroinitializer }, align 32
@mv88e6xxx_mdio_register._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.63, ptr @.str.64, ptr @.str.2, i32 3439, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Cannot register MDIO bus (%d)\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mv88e6xxx_mdio_register\00", [40 x i8] zeroinitializer }, align 32
@mv88e6xxx_mdio_register._entry_ptr = internal global ptr @mv88e6xxx_mdio_register._entry, section ".printk_index", align 4
@family_prod_id_table = internal constant { [13 x i16], [38 x i8] } { [13 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 13328, i16 0, i16 0, i16 14592, i16 14640], [38 x i8] zeroinitializer }, align 32
@mv88e6xxx_switch_ops = internal constant { %struct.dsa_switch_ops, [96 x i8] } { %struct.dsa_switch_ops { ptr @mv88e6xxx_get_tag_protocol, ptr @mv88e6xxx_change_tag_protocol, ptr null, ptr @mv88e6xxx_setup, ptr @mv88e6xxx_teardown, ptr @mv88e6xxx_port_setup, ptr @mv88e6xxx_port_teardown, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_validate, ptr @mv88e6xxx_serdes_pcs_get_state, ptr @mv88e6xxx_mac_config, ptr @mv88e6xxx_serdes_pcs_an_restart, ptr @mv88e6xxx_mac_link_down, ptr @mv88e6xxx_mac_link_up, ptr null, ptr @mv88e6xxx_get_strings, ptr @mv88e6xxx_get_ethtool_stats, ptr @mv88e6xxx_get_sset_count, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_get_ts_info, ptr null, ptr null, ptr @mv88e6xxx_port_enable, ptr @mv88e6xxx_port_disable, ptr @mv88e6xxx_set_mac_eee, ptr @mv88e6xxx_get_mac_eee, ptr @mv88e6xxx_get_eeprom_len, ptr @mv88e6xxx_get_eeprom, ptr @mv88e6xxx_set_eeprom, ptr @mv88e6xxx_get_regs_len, ptr @mv88e6xxx_get_regs, ptr null, ptr @mv88e6xxx_set_ageing_time, ptr @mv88e6xxx_port_bridge_join, ptr @mv88e6xxx_port_bridge_leave, ptr @mv88e6xxx_port_stp_state_set, ptr @mv88e6xxx_port_fast_age, ptr @mv88e6xxx_port_pre_bridge_flags, ptr @mv88e6xxx_port_bridge_flags, ptr @mv88e6xxx_port_vlan_filtering, ptr @mv88e6xxx_port_vlan_add, ptr @mv88e6xxx_port_vlan_del, ptr @mv88e6xxx_port_fdb_add, ptr @mv88e6xxx_port_fdb_del, ptr @mv88e6xxx_port_fdb_dump, ptr @mv88e6xxx_port_mdb_add, ptr @mv88e6xxx_port_mdb_del, ptr @mv88e6xxx_get_rxnfc, ptr @mv88e6xxx_set_rxnfc, ptr null, ptr null, ptr null, ptr @mv88e6xxx_port_mirror_add, ptr @mv88e6xxx_port_mirror_del, ptr null, ptr null, ptr null, ptr @mv88e6xxx_crosschip_bridge_join, ptr @mv88e6xxx_crosschip_bridge_leave, ptr @mv88e6xxx_crosschip_lag_change, ptr @mv88e6xxx_crosschip_lag_join, ptr @mv88e6xxx_crosschip_lag_leave, ptr @mv88e6xxx_port_hwtstamp_get, ptr @mv88e6xxx_port_hwtstamp_set, ptr @mv88e6xxx_port_txtstamp, ptr @mv88e6xxx_port_rxtstamp, ptr @mv88e6xxx_devlink_param_get, ptr @mv88e6xxx_devlink_param_set, ptr @mv88e6xxx_devlink_info_get, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @mv88e6xxx_change_mtu, ptr @mv88e6xxx_get_max_mtu, ptr @mv88e6xxx_port_lag_change, ptr @mv88e6xxx_port_lag_join, ptr @mv88e6xxx_port_lag_leave, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [96 x i8] zeroinitializer }, align 32
@mv88e6xxx_change_tag_protocol._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str.2, i32 5768, ptr @.str.67, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Relying on undocumented EDSA tagging behavior\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"mv88e6xxx_change_tag_protocol\00", [34 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@mv88e6xxx_change_tag_protocol._entry_ptr = internal global ptr @mv88e6xxx_change_tag_protocol._entry, section ".printk_index", align 4
@mv88e6xxx_setup._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.68, ptr @.str.69, ptr @.str.2, i32 3226, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"port %d is invalid\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"mv88e6xxx_setup\00", [16 x i8] zeroinitializer }, align 32
@mv88e6xxx_setup._entry_ptr = internal global ptr @mv88e6xxx_setup._entry, section ".printk_index", align 4
@mv88e6xxx_port_setup_mac._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.71, ptr @.str.2, i32 457, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"p%d: failed to restore MAC's link\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"mv88e6xxx_port_setup_mac\00", [39 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_setup_mac._entry_ptr = internal global ptr @mv88e6xxx_port_setup_mac._entry, section ".printk_index", align 4
@mv88e6xxx_port_vlan_join._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.73, ptr @.str.2, i32 2169, ptr @.str.53, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"p%d: already a member of VLAN %d\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"mv88e6xxx_port_vlan_join\00", [39 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_vlan_join._entry_ptr = internal global ptr @mv88e6xxx_port_vlan_join._entry, section ".printk_index", align 4
@mv88e6xxx_mac_config._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.74, ptr @.str.75, ptr @.str.2, i32 751, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"p%d: failed to configure MAC/PCS\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"mv88e6xxx_mac_config\00", [43 x i8] zeroinitializer }, align 32
@mv88e6xxx_mac_config._entry_ptr = internal global ptr @mv88e6xxx_mac_config._entry, section ".printk_index", align 4
@mv88e6xxx_port_ppu_updates._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.77, ptr @.str.2, i32 484, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"p%d: %s: failed to read port status\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"mv88e6xxx_port_ppu_updates\00", [37 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_ppu_updates._entry_ptr = internal global ptr @mv88e6xxx_port_ppu_updates._entry, section ".printk_index", align 4
@mv88e6xxx_serdes_pcs_an_restart._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.79, ptr @.str.2, i32 545, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"p%d: failed to restart AN\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"mv88e6xxx_serdes_pcs_an_restart\00", [32 x i8] zeroinitializer }, align 32
@mv88e6xxx_serdes_pcs_an_restart._entry_ptr = internal global ptr @mv88e6xxx_serdes_pcs_an_restart._entry, section ".printk_index", align 4
@mv88e6xxx_mac_link_down._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.80, ptr @.str.81, ptr @.str.2, i32 779, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"p%d: failed to force MAC link down\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mv88e6xxx_mac_link_down\00", [40 x i8] zeroinitializer }, align 32
@mv88e6xxx_mac_link_down._entry_ptr = internal global ptr @mv88e6xxx_mac_link_down._entry, section ".printk_index", align 4
@mv88e6xxx_mac_link_up._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.82, ptr @.str.83, ptr @.str.2, i32 827, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"p%d: failed to configure MAC link up\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"mv88e6xxx_mac_link_up\00", [42 x i8] zeroinitializer }, align 32
@mv88e6xxx_mac_link_up._entry_ptr = internal global ptr @mv88e6xxx_mac_link_up._entry, section ".printk_index", align 4
@.str.84 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"atu_member_violation\00", [43 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"atu_miss_violation\00", [45 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"atu_full_violation\00", [45 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"vtu_member_violation\00", [43 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"vtu_miss_violation\00", [45 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mv88e6xxx-%s-serdes-%d\00", [41 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.91, ptr @.str.2, i32 3090, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"failed to power off SERDES\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"mv88e6xxx_port_disable\00", [41 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_disable._entry_ptr = internal global ptr @mv88e6xxx_port_disable._entry, section ".printk_index", align 4
@mv88e6xxx_port_bridge_leave._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.93, ptr @.str.2, i32 2518, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"failed to remap cross-chip Port VLAN\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"mv88e6xxx_port_bridge_leave\00", [36 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_bridge_leave._entry_ptr = internal global ptr @mv88e6xxx_port_bridge_leave._entry, section ".printk_index", align 4
@mv88e6xxx_port_bridge_leave._entry.94 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.93, ptr @.str.2, i32 2522, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"failed to remap in-chip Port VLAN\0A\00", [61 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_bridge_leave._entry_ptr.96 = internal global ptr @mv88e6xxx_port_bridge_leave._entry.94, section ".printk_index", align 4
@mv88e6xxx_port_bridge_leave._entry.97 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.93, ptr @.str.2, i32 2528, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"port %d failed to restore standalone pvid: %pe\0A\00", [48 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_bridge_leave._entry_ptr.99 = internal global ptr @mv88e6xxx_port_bridge_leave._entry.97, section ".printk_index", align 4
@mv88e6xxx_port_stp_state_set._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.2, i32 1319, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"p%d: failed to update state\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"mv88e6xxx_port_stp_state_set\00", [35 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_stp_state_set._entry_ptr = internal global ptr @mv88e6xxx_port_stp_state_set._entry, section ".printk_index", align 4
@mv88e6xxx_port_fast_age._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.102, ptr @.str.103, ptr @.str.2, i32 1537, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"p%d: failed to flush ATU\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mv88e6xxx_port_fast_age\00", [40 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_fast_age._entry_ptr = internal global ptr @mv88e6xxx_port_fast_age._entry, section ".printk_index", align 4
@mv88e6xxx_port_vlan_add._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.104, ptr @.str.105, ptr @.str.2, i32 2211, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"p%d: failed to add VLAN %d%c\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"mv88e6xxx_port_vlan_add\00", [40 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_vlan_add._entry_ptr = internal global ptr @mv88e6xxx_port_vlan_add._entry, section ".printk_index", align 4
@mv88e6xxx_port_check_hw_vlan._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.106, ptr @.str.107, ptr @.str.2, i32 1691, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"p%d: hw VLAN %d already used by port %d in %s\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"mv88e6xxx_port_check_hw_vlan\00", [35 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_check_hw_vlan._entry_ptr = internal global ptr @mv88e6xxx_port_check_hw_vlan._entry, section ".printk_index", align 4
@.str.108 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"(unnamed net_device)\00", [43 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_mirror_del._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.110, ptr @.str.2, i32 5871, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"p%d: failed to disable mirroring\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"mv88e6xxx_port_mirror_del\00", [38 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_mirror_del._entry_ptr = internal global ptr @mv88e6xxx_port_mirror_del._entry, section ".printk_index", align 4
@mv88e6xxx_port_mirror_del._entry.111 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.110, ptr @.str.2, i32 5882, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"failed to set egress port\0A\00", [37 x i8] zeroinitializer }, align 32
@mv88e6xxx_port_mirror_del._entry_ptr.113 = internal global ptr @mv88e6xxx_port_mirror_del._entry.111, section ".printk_index", align 4
@mv88e6xxx_crosschip_bridge_leave._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.114, ptr @.str.2, i32 2563, ptr @.str.8, ptr @.str.9 }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"mv88e6xxx_crosschip_bridge_leave\00", [63 x i8] zeroinitializer }, align 32
@mv88e6xxx_crosschip_bridge_leave._entry_ptr = internal global ptr @mv88e6xxx_crosschip_bridge_leave._entry, section ".printk_index", align 4
@mv88e6xxx_lag_mask_table = internal constant { [8 x [8 x i8]], [32 x i8] } { [8 x [8 x i8]] [[8 x i8] c"\FF\00\00\00\00\00\00\00", [8 x i8] c"\0F\F0\00\00\00\00\00\00", [8 x i8] c"\078\C0\00\00\00\00\00", [8 x i8] c"\03\0C0\C0\00\00\00\00", [8 x i8] c"\03\0C0@\80\00\00\00", [8 x i8] c"\03\0C\10 @\80\00\00", [8 x i8] c"\03\04\08\10 @\80\00", [8 x i8] c"\01\02\04\08\10 @\80"], [32 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.115 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 12]
@__sancov_gen_cov_switch_values.116 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 9, i64 10]
@__sancov_gen_cov_switch_values.117 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.118 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.119 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.120 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.121 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.122 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 2]
@__sancov_gen_cov_switch_values.123 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.124 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.125 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.126 = internal global [5 x i64] [i64 3, i64 32, i64 46, i64 47, i64 48]
@__sancov_gen_cov_switch_values.127 = internal global [4 x i64] [i64 2, i64 32, i64 49, i64 50]
@__sancov_gen_cov_switch_values.128 = internal global [4 x i64] [i64 2, i64 16, i64 0, i64 65535]
@__sancov_gen_cov_switch_values.129 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.130 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.131 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.132 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.133 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.134 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.135 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 14]
@__sancov_gen_cov_switch_values.136 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 3]
@___asan_gen_.148 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 64, i32 2 }
@___asan_gen_.154 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 80, i32 2 }
@___asan_gen_.169 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 105, i32 2 }
@___asan_gen_.170 = private unnamed_addr constant [17 x i8] c"mv88e6xxx_driver\00", align 1
@___asan_gen_.172 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6567, i32 27 }
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 49, i32 3 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6572, i32 11 }
@___asan_gen_.185 = private unnamed_addr constant [19 x i8] c"mv88e6xxx_of_match\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6549, i32 34 }
@___asan_gen_.188 = private unnamed_addr constant [17 x i8] c"mv88e6xxx_pm_ops\00", align 1
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6352, i32 8 }
@___asan_gen_.191 = private unnamed_addr constant [16 x i8] c"mv88e6xxx_table\00", align 1
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4970, i32 36 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4974, i32 11 }
@___asan_gen_.197 = private unnamed_addr constant [14 x i8] c"mv88e6085_ops\00", align 1
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3554, i32 35 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4996, i32 11 }
@___asan_gen_.203 = private unnamed_addr constant [14 x i8] c"mv88e6095_ops\00", align 1
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3596, i32 35 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5016, i32 11 }
@___asan_gen_.209 = private unnamed_addr constant [14 x i8] c"mv88e6097_ops\00", align 1
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3630, i32 35 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5039, i32 11 }
@___asan_gen_.215 = private unnamed_addr constant [14 x i8] c"mv88e6123_ops\00", align 1
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3676, i32 35 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5062, i32 11 }
@___asan_gen_.221 = private unnamed_addr constant [14 x i8] c"mv88e6131_ops\00", align 1
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3713, i32 35 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5082, i32 11 }
@___asan_gen_.227 = private unnamed_addr constant [14 x i8] c"mv88e6141_ops\00", align 1
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3753, i32 35 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5106, i32 11 }
@___asan_gen_.233 = private unnamed_addr constant [14 x i8] c"mv88e6161_ops\00", align 1
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3817, i32 35 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5130, i32 11 }
@___asan_gen_.239 = private unnamed_addr constant [14 x i8] c"mv88e6165_ops\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3860, i32 35 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5153, i32 11 }
@___asan_gen_.245 = private unnamed_addr constant [14 x i8] c"mv88e6171_ops\00", align 1
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3895, i32 35 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5176, i32 11 }
@___asan_gen_.251 = private unnamed_addr constant [14 x i8] c"mv88e6172_ops\00", align 1
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3937, i32 35 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5200, i32 11 }
@___asan_gen_.257 = private unnamed_addr constant [14 x i8] c"mv88e6175_ops\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3992, i32 35 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5223, i32 11 }
@___asan_gen_.263 = private unnamed_addr constant [14 x i8] c"mv88e6176_ops\00", align 1
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4034, i32 35 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5247, i32 11 }
@___asan_gen_.269 = private unnamed_addr constant [14 x i8] c"mv88e6185_ops\00", align 1
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4092, i32 35 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5268, i32 11 }
@___asan_gen_.275 = private unnamed_addr constant [14 x i8] c"mv88e6190_ops\00", align 1
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4132, i32 35 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5291, i32 11 }
@___asan_gen_.281 = private unnamed_addr constant [15 x i8] c"mv88e6190x_ops\00", align 1
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4193, i32 35 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5314, i32 11 }
@___asan_gen_.287 = private unnamed_addr constant [14 x i8] c"mv88e6191_ops\00", align 1
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4254, i32 35 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5337, i32 11 }
@___asan_gen_.293 = private unnamed_addr constant [15 x i8] c"mv88e6393x_ops\00", align 1
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4906, i32 35 }
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5359, i32 11 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5381, i32 11 }
@___asan_gen_.302 = private unnamed_addr constant [14 x i8] c"mv88e6250_ops\00", align 1
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4374, i32 35 }
@___asan_gen_.307 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5407, i32 11 }
@___asan_gen_.308 = private unnamed_addr constant [14 x i8] c"mv88e6240_ops\00", align 1
@___asan_gen_.310 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4314, i32 35 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5432, i32 11 }
@___asan_gen_.316 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5453, i32 11 }
@___asan_gen_.317 = private unnamed_addr constant [14 x i8] c"mv88e6290_ops\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4414, i32 35 }
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5476, i32 11 }
@___asan_gen_.323 = private unnamed_addr constant [14 x i8] c"mv88e6320_ops\00", align 1
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4476, i32 35 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5501, i32 11 }
@___asan_gen_.329 = private unnamed_addr constant [14 x i8] c"mv88e6321_ops\00", align 1
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4520, i32 35 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5525, i32 11 }
@___asan_gen_.335 = private unnamed_addr constant [14 x i8] c"mv88e6341_ops\00", align 1
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4562, i32 35 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5550, i32 11 }
@___asan_gen_.341 = private unnamed_addr constant [14 x i8] c"mv88e6350_ops\00", align 1
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4628, i32 35 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5573, i32 11 }
@___asan_gen_.347 = private unnamed_addr constant [14 x i8] c"mv88e6351_ops\00", align 1
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4670, i32 35 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5596, i32 11 }
@___asan_gen_.353 = private unnamed_addr constant [14 x i8] c"mv88e6352_ops\00", align 1
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4714, i32 35 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5620, i32 11 }
@___asan_gen_.359 = private unnamed_addr constant [14 x i8] c"mv88e6390_ops\00", align 1
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4777, i32 35 }
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5644, i32 11 }
@___asan_gen_.365 = private unnamed_addr constant [15 x i8] c"mv88e6390x_ops\00", align 1
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 4842, i32 35 }
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5669, i32 11 }
@___asan_gen_.371 = private unnamed_addr constant [19 x i8] c"mv88e6xxx_hw_stats\00", align 1
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 838, i32 33 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3131, i32 4 }
@___asan_gen_.385 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6379, i32 43 }
@___asan_gen_.388 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6401, i32 45 }
@___asan_gen_.391 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6422, i32 29 }
@___asan_gen_.397 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5739, i32 2 }
@___asan_gen_.402 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.403 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.402, i32 378, i32 2 }
@___asan_gen_.415 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5723, i32 2 }
@___asan_gen_.416 = private unnamed_addr constant [9 x i8] c"lock_key\00", align 1
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 331, i32 31 }
@___asan_gen_.419 = private unnamed_addr constant [12 x i8] c"request_key\00", align 1
@___asan_gen_.421 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 332, i32 31 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 346, i32 4 }
@___asan_gen_.425 = private unnamed_addr constant [28 x i8] c"mv88e6xxx_g1_irq_domain_ops\00", align 1
@___asan_gen_.427 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 243, i32 36 }
@___asan_gen_.428 = private unnamed_addr constant [22 x i8] c"mv88e6xxx_g1_irq_chip\00", align 1
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 222, i32 30 }
@___asan_gen_.433 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 223, i32 12 }
@___asan_gen_.434 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.439 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 379, i32 2 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 382, i32 43 }
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3483, i32 35 }
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3494, i32 15 }
@___asan_gen_.449 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3395, i32 13 }
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3421, i32 38 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3423, i32 15 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3424, i32 38 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3439, i32 3 }
@___asan_gen_.470 = private unnamed_addr constant [21 x i8] c"family_prod_id_table\00", align 1
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3343, i32 18 }
@___asan_gen_.473 = private unnamed_addr constant [21 x i8] c"mv88e6xxx_switch_ops\00", align 1
@___asan_gen_.475 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6229, i32 36 }
@___asan_gen_.487 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5768, i32 4 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3226, i32 4 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 457, i32 3 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2168, i32 3 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 751, i32 3 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 482, i32 3 }
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 545, i32 4 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 778, i32 3 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 826, i32 3 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 980, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 981, i32 2 }
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 982, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 983, i32 2 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 984, i32 2 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2740, i32 4 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 3090, i32 3 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2518, i32 3 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2522, i32 3 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2526, i32 3 }
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 1319, i32 3 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 1537, i32 3 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2210, i32 3 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 1690, i32 3 }
@___asan_gen_.645 = private unnamed_addr constant [29 x i8] c"../include/linux/netdevice.h\00", align 1
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.645, i32 4963, i32 10 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5871, i32 3 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 5882, i32 4 }
@___asan_gen_.662 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.665 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 2563, i32 3 }
@___asan_gen_.668 = private unnamed_addr constant [25 x i8] c"mv88e6xxx_lag_mask_table\00", align 1
@___asan_gen_.669 = private constant [36 x i8] c"../drivers/net/dsa/mv88e6xxx/chip.c\00", align 1
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.669, i32 6014, i32 17 }
@llvm.compiler.used = appending global [210 x ptr] [ptr @__UNIQUE_ID_author500, ptr @__UNIQUE_ID_description501, ptr @__UNIQUE_ID_file502, ptr @__UNIQUE_ID_license503, ptr @__exitcall_mdio_module_exit, ptr @__initcall__kmod_mv88e6xxx__499_6578_mdio_module_init6, ptr @assert_reg_lock._entry, ptr @assert_reg_lock._entry_ptr, ptr @mdio_module_exit, ptr @mv88e6390_setup_errata_applied._entry, ptr @mv88e6390_setup_errata_applied._entry_ptr, ptr @mv88e6xxx_change_tag_protocol._entry, ptr @mv88e6xxx_change_tag_protocol._entry_ptr, ptr @mv88e6xxx_crosschip_bridge_leave._entry, ptr @mv88e6xxx_crosschip_bridge_leave._entry_ptr, ptr @mv88e6xxx_detect._entry, ptr @mv88e6xxx_detect._entry_ptr, ptr @mv88e6xxx_mac_config._entry, ptr @mv88e6xxx_mac_config._entry_ptr, ptr @mv88e6xxx_mac_link_down._entry, ptr @mv88e6xxx_mac_link_down._entry_ptr, ptr @mv88e6xxx_mac_link_up._entry, ptr @mv88e6xxx_mac_link_up._entry_ptr, ptr @mv88e6xxx_mdio_register._entry, ptr @mv88e6xxx_mdio_register._entry_ptr, ptr @mv88e6xxx_port_bridge_leave._entry, ptr @mv88e6xxx_port_bridge_leave._entry.94, ptr @mv88e6xxx_port_bridge_leave._entry.97, ptr @mv88e6xxx_port_bridge_leave._entry_ptr, ptr @mv88e6xxx_port_bridge_leave._entry_ptr.96, ptr @mv88e6xxx_port_bridge_leave._entry_ptr.99, ptr @mv88e6xxx_port_check_hw_vlan._entry, ptr @mv88e6xxx_port_check_hw_vlan._entry_ptr, ptr @mv88e6xxx_port_disable._entry, ptr @mv88e6xxx_port_disable._entry_ptr, ptr @mv88e6xxx_port_fast_age._entry, ptr @mv88e6xxx_port_fast_age._entry_ptr, ptr @mv88e6xxx_port_mirror_del._entry, ptr @mv88e6xxx_port_mirror_del._entry.111, ptr @mv88e6xxx_port_mirror_del._entry_ptr, ptr @mv88e6xxx_port_mirror_del._entry_ptr.113, ptr @mv88e6xxx_port_ppu_updates._entry, ptr @mv88e6xxx_port_ppu_updates._entry_ptr, ptr @mv88e6xxx_port_setup_mac._entry, ptr @mv88e6xxx_port_setup_mac._entry_ptr, ptr @mv88e6xxx_port_stp_state_set._entry, ptr @mv88e6xxx_port_stp_state_set._entry_ptr, ptr @mv88e6xxx_port_vlan_add._entry, ptr @mv88e6xxx_port_vlan_add._entry_ptr, ptr @mv88e6xxx_port_vlan_join._entry, ptr @mv88e6xxx_port_vlan_join._entry_ptr, ptr @mv88e6xxx_serdes_pcs_an_restart._entry, ptr @mv88e6xxx_serdes_pcs_an_restart._entry_ptr, ptr @mv88e6xxx_setup._entry, ptr @mv88e6xxx_setup._entry_ptr, ptr @mv88e6xxx_wait_mask._entry, ptr @mv88e6xxx_wait_mask._entry_ptr, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @mv88e6xxx_driver, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @mv88e6xxx_of_match, ptr @mv88e6xxx_pm_ops, ptr @mv88e6xxx_table, ptr @.str.13, ptr @mv88e6085_ops, ptr @.str.14, ptr @mv88e6095_ops, ptr @.str.15, ptr @mv88e6097_ops, ptr @.str.16, ptr @mv88e6123_ops, ptr @.str.17, ptr @mv88e6131_ops, ptr @.str.18, ptr @mv88e6141_ops, ptr @.str.19, ptr @mv88e6161_ops, ptr @.str.20, ptr @mv88e6165_ops, ptr @.str.21, ptr @mv88e6171_ops, ptr @.str.22, ptr @mv88e6172_ops, ptr @.str.23, ptr @mv88e6175_ops, ptr @.str.24, ptr @mv88e6176_ops, ptr @.str.25, ptr @mv88e6185_ops, ptr @.str.26, ptr @mv88e6190_ops, ptr @.str.27, ptr @mv88e6190x_ops, ptr @.str.28, ptr @mv88e6191_ops, ptr @.str.29, ptr @mv88e6393x_ops, ptr @.str.30, ptr @.str.31, ptr @mv88e6250_ops, ptr @.str.32, ptr @mv88e6240_ops, ptr @.str.33, ptr @.str.34, ptr @mv88e6290_ops, ptr @.str.35, ptr @mv88e6320_ops, ptr @.str.36, ptr @mv88e6321_ops, ptr @.str.37, ptr @mv88e6341_ops, ptr @.str.38, ptr @mv88e6350_ops, ptr @.str.39, ptr @mv88e6351_ops, ptr @.str.40, ptr @mv88e6352_ops, ptr @.str.41, ptr @mv88e6390_ops, ptr @.str.42, ptr @mv88e6390x_ops, ptr @.str.43, ptr @mv88e6xxx_hw_stats, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @mv88e6xxx_alloc_chip.__key, ptr @.str.49, ptr @xa_init_flags.__key, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @mv88e6xxx_g1_irq_setup.lock_key, ptr @mv88e6xxx_g1_irq_setup.request_key, ptr @.str.54, ptr @mv88e6xxx_g1_irq_domain_ops, ptr @mv88e6xxx_g1_irq_chip, ptr @.str.55, ptr @mv88e6xxx_irq_poll_setup.__key, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @mv88e6xxx_mdio_register.index, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @family_prod_id_table, ptr @mv88e6xxx_switch_ops, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.95, ptr @.str.98, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.112, ptr @.str.114, ptr @mv88e6xxx_lag_mask_table], section "llvm.metadata"
@0 = internal global [178 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_wait_mask._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_driver to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.170 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @assert_reg_lock._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_of_match to i32), i32 784, i32 992, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.188 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_table to i32), i32 2852, i32 3584, i32 ptrtoint (ptr @___asan_gen_.191 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6085_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6095_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.203 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6097_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.209 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6123_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.215 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6131_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.221 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6141_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.227 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6161_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.233 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6165_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6171_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6172_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.251 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6175_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.257 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6176_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6185_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.269 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6190_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6190x_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6191_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6393x_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6250_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6240_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6290_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6320_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6321_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6341_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6350_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6351_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6352_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6390_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6390x_ops to i32), i32 272, i32 352, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_hw_stats to i32), i32 2596, i32 3264, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6390_setup_errata_applied._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_alloc_chip.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_detect._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_g1_irq_setup.lock_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_g1_irq_setup.request_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_g1_irq_domain_ops to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_g1_irq_chip to i32), i32 136, i32 192, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_irq_poll_setup.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_mdio_register.index to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_mdio_register._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @family_prod_id_table to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_switch_ops to i32), i32 416, i32 512, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_change_tag_protocol._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_setup._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_setup_mac._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_vlan_join._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_mac_config._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_ppu_updates._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_serdes_pcs_an_restart._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_mac_link_down._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_mac_link_up._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_bridge_leave._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_bridge_leave._entry.94 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_bridge_leave._entry.97 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_stp_state_set._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_fast_age._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_vlan_add._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_check_hw_vlan._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_mirror_del._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_port_mirror_del._entry.111 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_crosschip_bridge_leave._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.662 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.665 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mv88e6xxx_lag_mask_table to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.668 to i32), i32 ptrtoint (ptr @___asan_gen_.669 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mv88e6xxx_read(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, ptr noundef %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  %call.i = tail call zeroext i1 @mutex_is_locked(ptr noundef %reg_lock.i) #16
  br i1 %call.i, label %entry.assert_reg_lock.exit_crit_edge, label %do.end.i, !prof !348

entry.assert_reg_lock.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %assert_reg_lock.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %0 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %1, ptr noundef nonnull @.str.10) #19
  tail call void @dump_stack() #19
  br label %assert_reg_lock.exit

assert_reg_lock.exit:                             ; preds = %do.end.i, %entry.assert_reg_lock.exit_crit_edge
  %smi_ops.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 5
  %2 = ptrtoint ptr %smi_ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %smi_ops.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %assert_reg_lock.exit.cleanup_crit_edge, label %land.lhs.true.i

assert_reg_lock.exit.cleanup_crit_edge:           ; preds = %assert_reg_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %assert_reg_lock.exit
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %mv88e6xxx_smi_read.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_smi_read.exit:                          ; preds = %land.lhs.true.i
  %call.i13 = tail call i32 %5(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, ptr noundef %val) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i13)
  %tobool.not = icmp eq i32 %call.i13, 0
  br i1 %tobool.not, label %do.body, label %mv88e6xxx_smi_read.exit.cleanup_crit_edge

mv88e6xxx_smi_read.exit.cleanup_crit_edge:        ; preds = %mv88e6xxx_smi_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %mv88e6xxx_smi_read.exit
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mv88e6xxx_read.__UNIQUE_ID_ddebug497, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mv88e6xxx_read, %if.then5)) #16
          to label %cleanup [label %if.then5], !srcloc !349

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 4
  %8 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %val, align 2
  %conv = zext i16 %9 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mv88e6xxx_read.__UNIQUE_ID_ddebug497, ptr noundef %7, ptr noundef nonnull @.str.3, i32 noundef %addr, i32 noundef %reg, i32 noundef %conv) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %do.body, %mv88e6xxx_smi_read.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %assert_reg_lock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i13, %mv88e6xxx_smi_read.exit.cleanup_crit_edge ], [ 0, %if.then5 ], [ 0, %do.body ], [ -95, %land.lhs.true.i.cleanup_crit_edge ], [ -95, %assert_reg_lock.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mv88e6xxx_write(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, i16 noundef zeroext %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  %call.i = tail call zeroext i1 @mutex_is_locked(ptr noundef %reg_lock.i) #16
  br i1 %call.i, label %entry.assert_reg_lock.exit_crit_edge, label %do.end.i, !prof !348

entry.assert_reg_lock.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %assert_reg_lock.exit

do.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %0 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %1, ptr noundef nonnull @.str.10) #19
  tail call void @dump_stack() #19
  br label %assert_reg_lock.exit

assert_reg_lock.exit:                             ; preds = %do.end.i, %entry.assert_reg_lock.exit_crit_edge
  %smi_ops.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 5
  %2 = ptrtoint ptr %smi_ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %smi_ops.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %assert_reg_lock.exit.cleanup_crit_edge, label %land.lhs.true.i

assert_reg_lock.exit.cleanup_crit_edge:           ; preds = %assert_reg_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %assert_reg_lock.exit
  %write.i = getelementptr inbounds %struct.mv88e6xxx_bus_ops, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %write.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %write.i, align 4
  %tobool2.not.i = icmp eq ptr %5, null
  br i1 %tobool2.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %mv88e6xxx_smi_write.exit

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_smi_write.exit:                         ; preds = %land.lhs.true.i
  %call.i13 = tail call i32 %5(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, i16 noundef zeroext %val) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i13)
  %tobool.not = icmp eq i32 %call.i13, 0
  br i1 %tobool.not, label %do.body, label %mv88e6xxx_smi_write.exit.cleanup_crit_edge

mv88e6xxx_smi_write.exit.cleanup_crit_edge:       ; preds = %mv88e6xxx_smi_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %mv88e6xxx_smi_write.exit
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mv88e6xxx_write.__UNIQUE_ID_ddebug498, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mv88e6xxx_write, %if.then5)) #16
          to label %cleanup [label %if.then5], !srcloc !349

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %6 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev, align 4
  %conv = zext i16 %val to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mv88e6xxx_write.__UNIQUE_ID_ddebug498, ptr noundef %7, ptr noundef nonnull @.str.5, i32 noundef %addr, i32 noundef %reg, i32 noundef %conv) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %do.body, %mv88e6xxx_smi_write.exit.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %assert_reg_lock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i13, %mv88e6xxx_smi_write.exit.cleanup_crit_edge ], [ 0, %if.then5 ], [ 0, %do.body ], [ -95, %land.lhs.true.i.cleanup_crit_edge ], [ -95, %assert_reg_lock.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mv88e6xxx_wait_mask(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, i16 noundef zeroext %mask, i16 noundef zeroext %val) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %data) #16
  %0 = ptrtoint ptr %data to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %data, align 2, !annotation !350
  %reg_lock.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  %dev.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %smi_ops.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 5
  br label %for.body

for.body:                                         ; preds = %if.end6.for.body_crit_edge, %entry
  %i.015 = phi i32 [ 0, %entry ], [ %inc, %if.end6.for.body_crit_edge ]
  %call.i.i = call zeroext i1 @mutex_is_locked(ptr noundef %reg_lock.i.i) #16
  br i1 %call.i.i, label %for.body.assert_reg_lock.exit.i_crit_edge, label %do.end.i.i, !prof !348

for.body.assert_reg_lock.exit.i_crit_edge:        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %assert_reg_lock.exit.i

do.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %1 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dev.i.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %2, ptr noundef nonnull @.str.10) #19
  call void @dump_stack() #19
  br label %assert_reg_lock.exit.i

assert_reg_lock.exit.i:                           ; preds = %do.end.i.i, %for.body.assert_reg_lock.exit.i_crit_edge
  %3 = ptrtoint ptr %smi_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %smi_ops.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %4, null
  br i1 %tobool.not.i.i, label %assert_reg_lock.exit.i.cleanup_crit_edge, label %land.lhs.true.i.i

assert_reg_lock.exit.i.cleanup_crit_edge:         ; preds = %assert_reg_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i.i:                                ; preds = %assert_reg_lock.exit.i
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 4
  %tobool2.not.i.i = icmp eq ptr %6, null
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.cleanup_crit_edge, label %mv88e6xxx_smi_read.exit.i

land.lhs.true.i.i.cleanup_crit_edge:              ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_smi_read.exit.i:                        ; preds = %land.lhs.true.i.i
  %call.i13.i = call i32 %6(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, ptr noundef nonnull %data) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i13.i)
  %tobool.not.i = icmp eq i32 %call.i13.i, 0
  br i1 %tobool.not.i, label %do.body.i, label %mv88e6xxx_smi_read.exit.i.cleanup_crit_edge

mv88e6xxx_smi_read.exit.i.cleanup_crit_edge:      ; preds = %mv88e6xxx_smi_read.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body.i:                                        ; preds = %mv88e6xxx_smi_read.exit.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @mv88e6xxx_read.__UNIQUE_ID_ddebug497, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@mv88e6xxx_wait_mask, %if.then5.i)) #16
          to label %if.end [label %if.then5.i], !srcloc !349

if.then5.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev.i.i, align 4
  %9 = ptrtoint ptr %data to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %data, align 2
  %conv.i = zext i16 %10 to i32
  call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @mv88e6xxx_read.__UNIQUE_ID_ddebug497, ptr noundef %8, ptr noundef nonnull @.str.3, i32 noundef %addr, i32 noundef %reg, i32 noundef %conv.i) #16
  br label %if.end

if.end:                                           ; preds = %if.then5.i, %do.body.i
  %11 = ptrtoint ptr %data to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %data, align 2
  %and12 = and i16 %12, %mask
  call void @__sanitizer_cov_trace_cmp2(i16 %and12, i16 %val)
  %cmp3 = icmp eq i16 %and12, %val
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  %inc = add nuw nsw i32 %i.015, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %do.end, label %if.end6.for.body_crit_edge

if.end6.for.body_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

do.end:                                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %dev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.6) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %mv88e6xxx_smi_read.exit.i.cleanup_crit_edge, %land.lhs.true.i.i.cleanup_crit_edge, %assert_reg_lock.exit.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -110, %do.end ], [ %call.i13.i, %mv88e6xxx_smi_read.exit.i.cleanup_crit_edge ], [ -95, %land.lhs.true.i.i.cleanup_crit_edge ], [ -95, %assert_reg_lock.exit.i.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %data) #16
  ret i32 %retval.0
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mv88e6xxx_wait_bit(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, i32 noundef %bit, i32 noundef %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %shl = shl nuw i32 1, %bit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %val)
  %tobool.not = icmp eq i32 %val, 0
  %phi.cast = trunc i32 %shl to i16
  %spec.select = select i1 %tobool.not, i16 0, i16 %phi.cast
  %call = tail call i32 @mv88e6xxx_wait_mask(ptr noundef %chip, i32 noundef %addr, i32 noundef %reg, i16 noundef zeroext %phi.cast, i16 noundef zeroext %spec.select)
  ret i32 %call
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @mv88e6xxx_default_mdio_bus(ptr nocapture noundef readonly %chip) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdios = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16
  %0 = ptrtoint ptr %mdios to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdios, align 4
  %add.ptr = getelementptr i8, ptr %1, i32 -8
  %tobool.not = icmp eq ptr %add.ptr, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %3, %if.end ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @mv88e6xxx_fid_map(ptr noundef %chip, ptr noundef %fid_bitmap) local_unnamed_addr #0 align 64 {
entry:
  %entry1.i = alloca %struct.mv88e6xxx_vtu_entry, align 2
  %fid = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %fid) #16
  %0 = ptrtoint ptr %fid to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %fid, align 2, !annotation !350
  %1 = call ptr @memset(ptr %fid_bitmap, i32 0, i32 512)
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip, align 8
  %num_ports.i14 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %num_ports.i14 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_ports.i14, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp15.not = icmp eq i32 %5, 0
  br i1 %cmp15.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry.for.body_crit_edge
  %i.016 = phi i32 [ %inc, %if.end.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %call1 = call i32 @mv88e6xxx_port_get_fid(ptr noundef %chip, i32 noundef %i.016, ptr noundef nonnull %fid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %for.body
  %6 = ptrtoint ptr %fid to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %fid, align 2
  %conv = zext i16 %7 to i32
  call void @_set_bit(i32 noundef %conv, ptr noundef %fid_bitmap) #16
  %inc = add nuw i32 %i.016, 1
  %8 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %chip, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_ports.i, align 4
  %cmp = icmp ult i32 %inc, %11
  br i1 %cmp, label %if.end.for.body_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  %.lcssa = phi ptr [ %3, %entry.for.end_crit_edge ], [ %9, %if.end.for.end_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %entry1.i) #16
  %12 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %entry1.i, i32 0, i32 3
  %13 = getelementptr inbounds i8, ptr %entry1.i, i32 2
  %14 = call ptr @memset(ptr %13, i32 0, i32 28)
  %max_vid.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %.lcssa, i32 0, i32 8
  %15 = ptrtoint ptr %max_vid.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %max_vid.i.i, align 4
  %conv.i = trunc i32 %16 to i16
  %17 = ptrtoint ptr %entry1.i to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %conv.i, ptr %entry1.i, align 2
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %.lcssa, i32 0, i32 22
  %18 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ops.i, align 4
  %vtu_getnext.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %19, i32 0, i32 60
  %20 = ptrtoint ptr %vtu_getnext.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %vtu_getnext.i, align 4
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %for.end.mv88e6xxx_vtu_walk.exit_crit_edge, label %for.end.do.body.i_crit_edge

for.end.do.body.i_crit_edge:                      ; preds = %for.end
  br label %do.body.i

for.end.mv88e6xxx_vtu_walk.exit_crit_edge:        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %for.end.do.body.i_crit_edge
  %22 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %chip, align 8
  %ops3.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %23, i32 0, i32 22
  %24 = ptrtoint ptr %ops3.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %ops3.i, align 4
  %vtu_getnext4.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %25, i32 0, i32 60
  %26 = ptrtoint ptr %vtu_getnext4.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %vtu_getnext4.i, align 4
  %call5.i = call i32 %27(ptr noundef %chip, ptr noundef nonnull %entry1.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %do.body.i.mv88e6xxx_vtu_walk.exit_crit_edge

do.body.i.mv88e6xxx_vtu_walk.exit_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit

if.end8.i:                                        ; preds = %do.body.i
  %28 = ptrtoint ptr %12 to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %12, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %29)
  %tobool10.not.i = icmp eq i8 %29, 0
  br i1 %tobool10.not.i, label %if.end8.i.mv88e6xxx_vtu_walk.exit_crit_edge, label %do.cond.i

if.end8.i.mv88e6xxx_vtu_walk.exit_crit_edge:      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit

do.cond.i:                                        ; preds = %if.end8.i
  %30 = ptrtoint ptr %13 to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %13, align 2
  %conv.i12 = zext i16 %31 to i32
  call void @_set_bit(i32 noundef %conv.i12, ptr noundef %fid_bitmap) #16
  %32 = ptrtoint ptr %entry1.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %entry1.i, align 2
  %conv18.i = zext i16 %33 to i32
  %34 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %chip, align 8
  %max_vid.i30.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %max_vid.i30.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %max_vid.i30.i, align 4
  %cmp.i = icmp ugt i32 %37, %conv18.i
  br i1 %cmp.i, label %do.cond.i.do.body.i_crit_edge, label %do.cond.i.mv88e6xxx_vtu_walk.exit_crit_edge

do.cond.i.mv88e6xxx_vtu_walk.exit_crit_edge:      ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

mv88e6xxx_vtu_walk.exit:                          ; preds = %do.cond.i.mv88e6xxx_vtu_walk.exit_crit_edge, %if.end8.i.mv88e6xxx_vtu_walk.exit_crit_edge, %do.body.i.mv88e6xxx_vtu_walk.exit_crit_edge, %for.end.mv88e6xxx_vtu_walk.exit_crit_edge
  %retval.0.i = phi i32 [ -95, %for.end.mv88e6xxx_vtu_walk.exit_crit_edge ], [ %call5.i, %do.body.i.mv88e6xxx_vtu_walk.exit_crit_edge ], [ 0, %if.end8.i.mv88e6xxx_vtu_walk.exit_crit_edge ], [ 0, %do.cond.i.mv88e6xxx_vtu_walk.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %entry1.i) #16
  br label %cleanup

cleanup:                                          ; preds = %mv88e6xxx_vtu_walk.exit, %for.body.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %mv88e6xxx_vtu_walk.exit ], [ %call1, %for.body.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %fid) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_get_fid(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @mdio_module_init() #5 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mdio_driver_register(ptr noundef nonnull @mv88e6xxx_driver) #16
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @mdio_module_exit() #5 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mdio_driver_unregister(ptr noundef nonnull @mv88e6xxx_driver) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdio_driver_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mutex_is_locked(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @dump_stack() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mdio_driver_register(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_probe(ptr noundef %mdiodev) #0 align 64 {
entry:
  %id.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %platform_data = getelementptr inbounds %struct.device, ptr %mdiodev, i32 0, i32 7
  %0 = ptrtoint ptr %platform_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %platform_data, align 8
  %of_node = getelementptr inbounds %struct.device, ptr %mdiodev, i32 0, i32 27
  %2 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node, align 8
  %tobool.not = icmp eq ptr %3, null
  %tobool3.not = icmp eq ptr %1, null
  %or.cond = select i1 %tobool.not, i1 %tobool3.not, i1 false
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %tobool.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call ptr @of_device_get_match_data(ptr noundef %mdiodev) #16
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end.if.end6_crit_edge
  %compat_info.0 = phi ptr [ %call, %if.then5 ], [ null, %if.end.if.end6_crit_edge ]
  br i1 %tobool3.not, label %if.end6.if.end25_crit_edge, label %if.then8

if.end6.if.end25_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then8:                                         ; preds = %if.end6
  %driver.i = getelementptr inbounds %struct.device, ptr %mdiodev, i32 0, i32 6
  %4 = ptrtoint ptr %driver.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %driver.i, align 4
  %of_match_table.i = getelementptr inbounds %struct.device_driver, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %of_match_table.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %of_match_table.i, align 4
  %8 = ptrtoint ptr %platform_data to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %platform_data, align 8
  %compatible7.i = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %9, i32 0, i32 1
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.inc.i, %if.then8
  %matches.0.i = phi ptr [ %7, %if.then8 ], [ %incdec.ptr.i, %for.inc.i ]
  %10 = ptrtoint ptr %matches.0.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %matches.0.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %tobool.not.i = icmp eq i8 %11, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

lor.lhs.false.i:                                  ; preds = %for.cond.i
  %type.i = getelementptr inbounds %struct.of_device_id, ptr %matches.0.i, i32 0, i32 1
  %12 = ptrtoint ptr %type.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool3.not.i = icmp eq i8 %13, 0
  br i1 %tobool3.not.i, label %lor.rhs.i, label %lor.lhs.false.i.for.body.i_crit_edge

lor.lhs.false.i.for.body.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

lor.rhs.i:                                        ; preds = %lor.lhs.false.i
  %compatible.i = getelementptr inbounds %struct.of_device_id, ptr %matches.0.i, i32 0, i32 2
  %14 = ptrtoint ptr %compatible.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %compatible.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool6.not.i = icmp eq i8 %15, 0
  br i1 %tobool6.not.i, label %lor.rhs.i.pdata_device_get_match_data.exit_crit_edge, label %lor.rhs.i.for.body.i_crit_edge

lor.rhs.i.for.body.i_crit_edge:                   ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

lor.rhs.i.pdata_device_get_match_data.exit_crit_edge: ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pdata_device_get_match_data.exit

for.body.i:                                       ; preds = %lor.rhs.i.for.body.i_crit_edge, %lor.lhs.false.i.for.body.i_crit_edge, %for.cond.i.for.body.i_crit_edge
  %16 = ptrtoint ptr %compatible7.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %compatible7.i, align 4
  %compatible8.i = getelementptr inbounds %struct.of_device_id, ptr %matches.0.i, i32 0, i32 2
  %call.i = tail call i32 @strcmp(ptr noundef %17, ptr noundef %compatible8.i) #20
  %tobool9.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool9.not.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %data.i = getelementptr inbounds %struct.of_device_id, ptr %matches.0.i, i32 0, i32 3
  %18 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %data.i, align 4
  br label %pdata_device_get_match_data.exit

for.inc.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr %struct.of_device_id, ptr %matches.0.i, i32 1
  br label %for.cond.i

pdata_device_get_match_data.exit:                 ; preds = %if.then.i, %lor.rhs.i.pdata_device_get_match_data.exit_crit_edge
  %retval.0.i = phi ptr [ %19, %if.then.i ], [ null, %lor.rhs.i.pdata_device_get_match_data.exit_crit_edge ]
  %netdev = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %1, i32 0, i32 3
  %20 = ptrtoint ptr %netdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %netdev, align 4
  %tobool10.not = icmp eq ptr %21, null
  br i1 %tobool10.not, label %pdata_device_get_match_data.exit.cleanup_crit_edge, label %for.cond.preheader

pdata_device_get_match_data.exit.cleanup_crit_edge: ; preds = %pdata_device_get_match_data.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %pdata_device_get_match_data.exit
  %enabled_ports = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %1, i32 0, i32 2
  %22 = ptrtoint ptr %enabled_ports to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %enabled_ports, align 4
  %and = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool13.not = icmp eq i32 %and, 0
  br i1 %tobool13.not, label %for.cond.preheader.for.inc_crit_edge, label %if.end15

for.cond.preheader.for.inc_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end15:                                         ; preds = %for.cond.preheader
  %arrayidx = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 0
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 4
  %call16 = tail call i32 @strcmp(ptr noundef %25, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end15.if.end19_crit_edge, label %if.end15.for.inc_crit_edge

if.end15.for.inc_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end15.if.end19_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.end19:                                         ; preds = %if.end15.11.if.end19_crit_edge, %if.end15.10.if.end19_crit_edge, %if.end15.9.if.end19_crit_edge, %if.end15.8.if.end19_crit_edge, %if.end15.7.if.end19_crit_edge, %if.end15.6.if.end19_crit_edge, %if.end15.5.if.end19_crit_edge, %if.end15.4.if.end19_crit_edge, %if.end15.3.if.end19_crit_edge, %if.end15.2.if.end19_crit_edge, %if.end15.1.if.end19_crit_edge, %if.end15.if.end19_crit_edge
  %port.0237.lcssa = phi i32 [ 0, %if.end15.if.end19_crit_edge ], [ 1, %if.end15.1.if.end19_crit_edge ], [ 2, %if.end15.2.if.end19_crit_edge ], [ 3, %if.end15.3.if.end19_crit_edge ], [ 4, %if.end15.4.if.end19_crit_edge ], [ 5, %if.end15.5.if.end19_crit_edge ], [ 6, %if.end15.6.if.end19_crit_edge ], [ 7, %if.end15.7.if.end19_crit_edge ], [ 8, %if.end15.8.if.end19_crit_edge ], [ 9, %if.end15.9.if.end19_crit_edge ], [ 10, %if.end15.10.if.end19_crit_edge ], [ 11, %if.end15.11.if.end19_crit_edge ]
  %dev21 = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 133
  %arrayidx24 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 2, i32 %port.0237.lcssa
  %26 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %dev21, ptr %arrayidx24, align 4
  br label %if.end25

for.inc:                                          ; preds = %if.end15.for.inc_crit_edge, %for.cond.preheader.for.inc_crit_edge
  %and.1 = and i32 %23, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool13.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool13.not.1, label %for.inc.for.inc.1_crit_edge, label %if.end15.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1

if.end15.1:                                       ; preds = %for.inc
  %arrayidx.1 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 1
  %27 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx.1, align 4
  %call16.1 = tail call i32 @strcmp(ptr noundef %28, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.1)
  %tobool17.not.1 = icmp eq i32 %call16.1, 0
  br i1 %tobool17.not.1, label %if.end15.1.if.end19_crit_edge, label %if.end15.1.for.inc.1_crit_edge

if.end15.1.for.inc.1_crit_edge:                   ; preds = %if.end15.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1

if.end15.1.if.end19_crit_edge:                    ; preds = %if.end15.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.1:                                        ; preds = %if.end15.1.for.inc.1_crit_edge, %for.inc.for.inc.1_crit_edge
  %and.2 = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool13.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool13.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.end15.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2

if.end15.2:                                       ; preds = %for.inc.1
  %arrayidx.2 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 2
  %29 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.2, align 4
  %call16.2 = tail call i32 @strcmp(ptr noundef %30, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.2)
  %tobool17.not.2 = icmp eq i32 %call16.2, 0
  br i1 %tobool17.not.2, label %if.end15.2.if.end19_crit_edge, label %if.end15.2.for.inc.2_crit_edge

if.end15.2.for.inc.2_crit_edge:                   ; preds = %if.end15.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2

if.end15.2.if.end19_crit_edge:                    ; preds = %if.end15.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.2:                                        ; preds = %if.end15.2.for.inc.2_crit_edge, %for.inc.1.for.inc.2_crit_edge
  %and.3 = and i32 %23, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool13.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool13.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.end15.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3

if.end15.3:                                       ; preds = %for.inc.2
  %arrayidx.3 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 3
  %31 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx.3, align 4
  %call16.3 = tail call i32 @strcmp(ptr noundef %32, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.3)
  %tobool17.not.3 = icmp eq i32 %call16.3, 0
  br i1 %tobool17.not.3, label %if.end15.3.if.end19_crit_edge, label %if.end15.3.for.inc.3_crit_edge

if.end15.3.for.inc.3_crit_edge:                   ; preds = %if.end15.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3

if.end15.3.if.end19_crit_edge:                    ; preds = %if.end15.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.3:                                        ; preds = %if.end15.3.for.inc.3_crit_edge, %for.inc.2.for.inc.3_crit_edge
  %and.4 = and i32 %23, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool13.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool13.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.end15.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4

if.end15.4:                                       ; preds = %for.inc.3
  %arrayidx.4 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 4
  %33 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.4, align 4
  %call16.4 = tail call i32 @strcmp(ptr noundef %34, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.4)
  %tobool17.not.4 = icmp eq i32 %call16.4, 0
  br i1 %tobool17.not.4, label %if.end15.4.if.end19_crit_edge, label %if.end15.4.for.inc.4_crit_edge

if.end15.4.for.inc.4_crit_edge:                   ; preds = %if.end15.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.4

if.end15.4.if.end19_crit_edge:                    ; preds = %if.end15.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.4:                                        ; preds = %if.end15.4.for.inc.4_crit_edge, %for.inc.3.for.inc.4_crit_edge
  %and.5 = and i32 %23, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5)
  %tobool13.not.5 = icmp eq i32 %and.5, 0
  br i1 %tobool13.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.end15.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5

if.end15.5:                                       ; preds = %for.inc.4
  %arrayidx.5 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 5
  %35 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx.5, align 4
  %call16.5 = tail call i32 @strcmp(ptr noundef %36, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.5)
  %tobool17.not.5 = icmp eq i32 %call16.5, 0
  br i1 %tobool17.not.5, label %if.end15.5.if.end19_crit_edge, label %if.end15.5.for.inc.5_crit_edge

if.end15.5.for.inc.5_crit_edge:                   ; preds = %if.end15.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.5

if.end15.5.if.end19_crit_edge:                    ; preds = %if.end15.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.5:                                        ; preds = %if.end15.5.for.inc.5_crit_edge, %for.inc.4.for.inc.5_crit_edge
  %and.6 = and i32 %23, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6)
  %tobool13.not.6 = icmp eq i32 %and.6, 0
  br i1 %tobool13.not.6, label %for.inc.5.for.inc.6_crit_edge, label %if.end15.6

for.inc.5.for.inc.6_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6

if.end15.6:                                       ; preds = %for.inc.5
  %arrayidx.6 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 6
  %37 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx.6, align 4
  %call16.6 = tail call i32 @strcmp(ptr noundef %38, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.6)
  %tobool17.not.6 = icmp eq i32 %call16.6, 0
  br i1 %tobool17.not.6, label %if.end15.6.if.end19_crit_edge, label %if.end15.6.for.inc.6_crit_edge

if.end15.6.for.inc.6_crit_edge:                   ; preds = %if.end15.6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.6

if.end15.6.if.end19_crit_edge:                    ; preds = %if.end15.6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.6:                                        ; preds = %if.end15.6.for.inc.6_crit_edge, %for.inc.5.for.inc.6_crit_edge
  %and.7 = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7)
  %tobool13.not.7 = icmp eq i32 %and.7, 0
  br i1 %tobool13.not.7, label %for.inc.6.for.inc.7_crit_edge, label %if.end15.7

for.inc.6.for.inc.7_crit_edge:                    ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.7

if.end15.7:                                       ; preds = %for.inc.6
  %arrayidx.7 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 7
  %39 = ptrtoint ptr %arrayidx.7 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx.7, align 4
  %call16.7 = tail call i32 @strcmp(ptr noundef %40, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.7)
  %tobool17.not.7 = icmp eq i32 %call16.7, 0
  br i1 %tobool17.not.7, label %if.end15.7.if.end19_crit_edge, label %if.end15.7.for.inc.7_crit_edge

if.end15.7.for.inc.7_crit_edge:                   ; preds = %if.end15.7
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.7

if.end15.7.if.end19_crit_edge:                    ; preds = %if.end15.7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.7:                                        ; preds = %if.end15.7.for.inc.7_crit_edge, %for.inc.6.for.inc.7_crit_edge
  %and.8 = and i32 %23, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.8)
  %tobool13.not.8 = icmp eq i32 %and.8, 0
  br i1 %tobool13.not.8, label %for.inc.7.for.inc.8_crit_edge, label %if.end15.8

for.inc.7.for.inc.8_crit_edge:                    ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.8

if.end15.8:                                       ; preds = %for.inc.7
  %arrayidx.8 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 8
  %41 = ptrtoint ptr %arrayidx.8 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx.8, align 4
  %call16.8 = tail call i32 @strcmp(ptr noundef %42, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.8)
  %tobool17.not.8 = icmp eq i32 %call16.8, 0
  br i1 %tobool17.not.8, label %if.end15.8.if.end19_crit_edge, label %if.end15.8.for.inc.8_crit_edge

if.end15.8.for.inc.8_crit_edge:                   ; preds = %if.end15.8
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.8

if.end15.8.if.end19_crit_edge:                    ; preds = %if.end15.8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.8:                                        ; preds = %if.end15.8.for.inc.8_crit_edge, %for.inc.7.for.inc.8_crit_edge
  %and.9 = and i32 %23, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.9)
  %tobool13.not.9 = icmp eq i32 %and.9, 0
  br i1 %tobool13.not.9, label %for.inc.8.for.inc.9_crit_edge, label %if.end15.9

for.inc.8.for.inc.9_crit_edge:                    ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.9

if.end15.9:                                       ; preds = %for.inc.8
  %arrayidx.9 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 9
  %43 = ptrtoint ptr %arrayidx.9 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx.9, align 4
  %call16.9 = tail call i32 @strcmp(ptr noundef %44, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.9)
  %tobool17.not.9 = icmp eq i32 %call16.9, 0
  br i1 %tobool17.not.9, label %if.end15.9.if.end19_crit_edge, label %if.end15.9.for.inc.9_crit_edge

if.end15.9.for.inc.9_crit_edge:                   ; preds = %if.end15.9
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.9

if.end15.9.if.end19_crit_edge:                    ; preds = %if.end15.9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.9:                                        ; preds = %if.end15.9.for.inc.9_crit_edge, %for.inc.8.for.inc.9_crit_edge
  %and.10 = and i32 %23, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.10)
  %tobool13.not.10 = icmp eq i32 %and.10, 0
  br i1 %tobool13.not.10, label %for.inc.9.for.inc.10_crit_edge, label %if.end15.10

for.inc.9.for.inc.10_crit_edge:                   ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.10

if.end15.10:                                      ; preds = %for.inc.9
  %arrayidx.10 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 10
  %45 = ptrtoint ptr %arrayidx.10 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx.10, align 4
  %call16.10 = tail call i32 @strcmp(ptr noundef %46, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.10)
  %tobool17.not.10 = icmp eq i32 %call16.10, 0
  br i1 %tobool17.not.10, label %if.end15.10.if.end19_crit_edge, label %if.end15.10.for.inc.10_crit_edge

if.end15.10.for.inc.10_crit_edge:                 ; preds = %if.end15.10
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.10

if.end15.10.if.end19_crit_edge:                   ; preds = %if.end15.10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

for.inc.10:                                       ; preds = %if.end15.10.for.inc.10_crit_edge, %for.inc.9.for.inc.10_crit_edge
  %and.11 = and i32 %23, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.11)
  %tobool13.not.11 = icmp eq i32 %and.11, 0
  br i1 %tobool13.not.11, label %for.inc.10.if.end25_crit_edge, label %if.end15.11

for.inc.10.if.end25_crit_edge:                    ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.end15.11:                                      ; preds = %for.inc.10
  %arrayidx.11 = getelementptr %struct.dsa_chip_data, ptr %1, i32 0, i32 5, i32 11
  %47 = ptrtoint ptr %arrayidx.11 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx.11, align 4
  %call16.11 = tail call i32 @strcmp(ptr noundef %48, ptr noundef nonnull dereferenceable(4) @.str.46) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16.11)
  %tobool17.not.11 = icmp eq i32 %call16.11, 0
  br i1 %tobool17.not.11, label %if.end15.11.if.end19_crit_edge, label %if.end15.11.if.end25_crit_edge

if.end15.11.if.end25_crit_edge:                   ; preds = %if.end15.11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.end15.11.if.end19_crit_edge:                   ; preds = %if.end15.11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.end25:                                         ; preds = %if.end15.11.if.end25_crit_edge, %for.inc.10.if.end25_crit_edge, %if.end19, %if.end6.if.end25_crit_edge
  %compat_info.1 = phi ptr [ %retval.0.i, %if.end19 ], [ %compat_info.0, %if.end6.if.end25_crit_edge ], [ %retval.0.i, %if.end15.11.if.end25_crit_edge ], [ %retval.0.i, %for.inc.10.if.end25_crit_edge ]
  %tobool26.not = icmp eq ptr %compat_info.1, null
  br i1 %tobool26.not, label %if.end25.cleanup_crit_edge, label %if.end28

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end28:                                         ; preds = %if.end25
  %call.i.i = tail call noalias ptr @devm_kmalloc(ptr noundef %mdiodev, i32 noundef 6696, i32 noundef 3520) #16
  %tobool.not.i220 = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i220, label %if.end28.out_crit_edge, label %if.end32

if.end28.out_crit_edge:                           ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end32:                                         ; preds = %if.end28
  %dev1.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 3
  %49 = ptrtoint ptr %dev1.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %mdiodev, ptr %dev1.i, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 4
  tail call void @__mutex_init(ptr noundef %reg_lock.i, ptr noundef nonnull @.str.49, ptr noundef nonnull @mv88e6xxx_alloc_chip.__key) #16
  %mdios.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 16
  %50 = ptrtoint ptr %mdios.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %mdios.i, ptr %mdios.i, align 4
  %prev.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 16, i32 1
  %51 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %mdios.i, ptr %prev.i.i, align 4
  %policies.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 17
  tail call void @__raw_spin_lock_init(ptr noundef %policies.i, ptr noundef nonnull @.str.50, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #16
  %xa_flags.i.i.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 17, i32 0, i32 1
  %52 = ptrtoint ptr %xa_flags.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 67108868, ptr %xa_flags.i.i.i.i, align 4
  %xa_head.i.i.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 17, i32 0, i32 2
  %53 = ptrtoint ptr %xa_head.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr null, ptr %xa_head.i.i.i.i, align 4
  %idr_base.i.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 17, i32 1
  %54 = ptrtoint ptr %idr_base.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 0, ptr %idr_base.i.i.i, align 4
  %idr_next.i.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 17, i32 2
  %55 = ptrtoint ptr %idr_next.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %idr_next.i.i.i, align 4
  %56 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %compat_info.1, ptr %call.i.i, align 8
  %bus = getelementptr inbounds %struct.mdio_device, ptr %mdiodev, i32 0, i32 1
  %57 = ptrtoint ptr %bus to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %bus, align 8
  %addr = getelementptr inbounds %struct.mdio_device, ptr %mdiodev, i32 0, i32 6
  %59 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %addr, align 8
  %call33 = tail call i32 @mv88e6xxx_smi_init(ptr noundef nonnull %call.i.i, ptr noundef %58, i32 noundef %60) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %if.end36, label %if.end32.out_crit_edge

if.end32.out_crit_edge:                           ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end36:                                         ; preds = %if.end32
  %call37 = tail call ptr @devm_gpiod_get_optional(ptr noundef %mdiodev, ptr noundef nonnull @.str.47, i32 noundef 3) #16
  %reset = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 14
  %61 = ptrtoint ptr %reset to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %call37, ptr %reset, align 4
  %cmp.i = icmp ugt ptr %call37, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then40, label %if.end43

if.then40:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  %62 = ptrtoint ptr %call37 to i32
  br label %out

if.end43:                                         ; preds = %if.end36
  %tobool45.not = icmp eq ptr %call37, null
  br i1 %tobool45.not, label %if.end43.if.end47_crit_edge, label %if.then46

if.end43.if.end47_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @usleep_range_state(i32 noundef 1000, i32 noundef 2000, i32 noundef 2) #16
  br label %if.end47

if.end47:                                         ; preds = %if.then46, %if.end43.if.end47_crit_edge
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %id.i) #16
  %63 = ptrtoint ptr %id.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 -1, ptr %id.i, align 2, !annotation !350
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call.i221 = call i32 @mv88e6xxx_port_read(ptr noundef nonnull %call.i.i, i32 noundef 0, i32 noundef 3, ptr noundef nonnull %id.i) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i221)
  %tobool.not.i222 = icmp eq i32 %call.i221, 0
  br i1 %tobool.not.i222, label %if.end.i223, label %if.end47.mv88e6xxx_detect.exit.thread_crit_edge

if.end47.mv88e6xxx_detect.exit.thread_crit_edge:  ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_detect.exit.thread

if.end.i223:                                      ; preds = %if.end47
  %64 = ptrtoint ptr %id.i to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %id.i, align 2
  %conv.i = zext i16 %65 to i32
  %and.i = and i32 %conv.i, 65520
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.end.i223
  %i.09.i.i = phi i32 [ 0, %if.end.i223 ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %prod_num1.i.i = getelementptr [31 x %struct.mv88e6xxx_info], ptr @mv88e6xxx_table, i32 0, i32 %i.09.i.i, i32 1
  %66 = ptrtoint ptr %prod_num1.i.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %prod_num1.i.i, align 4
  %conv.i.i = zext i16 %67 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %conv.i.i)
  %cmp2.i.i = icmp eq i32 %and.i, %conv.i.i
  br i1 %cmp2.i.i, label %mv88e6xxx_lookup_info.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw nsw i32 %i.09.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, 31
  br i1 %exitcond.not.i.i, label %for.inc.i.i.mv88e6xxx_detect.exit.thread_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.mv88e6xxx_detect.exit.thread_crit_edge: ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_detect.exit.thread

mv88e6xxx_lookup_info.exit.i:                     ; preds = %for.body.i.i
  %arrayidx.i.i = getelementptr [31 x %struct.mv88e6xxx_info], ptr @mv88e6xxx_table, i32 0, i32 %i.09.i.i
  %tobool4.not.i = icmp eq ptr %arrayidx.i.i, null
  br i1 %tobool4.not.i, label %mv88e6xxx_lookup_info.exit.i.mv88e6xxx_detect.exit.thread_crit_edge, label %if.end51

mv88e6xxx_lookup_info.exit.i.mv88e6xxx_detect.exit.thread_crit_edge: ; preds = %mv88e6xxx_lookup_info.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_detect.exit.thread

mv88e6xxx_detect.exit.thread:                     ; preds = %mv88e6xxx_lookup_info.exit.i.mv88e6xxx_detect.exit.thread_crit_edge, %for.inc.i.i.mv88e6xxx_detect.exit.thread_crit_edge, %if.end47.mv88e6xxx_detect.exit.thread_crit_edge
  %retval.0.i224.ph = phi i32 [ -19, %mv88e6xxx_lookup_info.exit.i.mv88e6xxx_detect.exit.thread_crit_edge ], [ %call.i221, %if.end47.mv88e6xxx_detect.exit.thread_crit_edge ], [ -19, %for.inc.i.i.mv88e6xxx_detect.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id.i) #16
  br label %out

if.end51:                                         ; preds = %mv88e6xxx_lookup_info.exit.i
  %and2.i = and i32 %conv.i, 15
  %68 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %arrayidx.i.i, ptr %call.i.i, align 8
  %69 = ptrtoint ptr %dev1.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %dev1.i, align 4
  %name.i = getelementptr [31 x %struct.mv88e6xxx_info], ptr @mv88e6xxx_table, i32 0, i32 %i.09.i.i, i32 2
  %71 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %name.i, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %70, ptr noundef nonnull @.str.51, i32 noundef %and.i, ptr noundef %72, i32 noundef %and2.i) #19
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %id.i) #16
  %73 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %call.i.i, align 8
  %edsa_support = getelementptr inbounds %struct.mv88e6xxx_info, ptr %74, i32 0, i32 20
  %75 = ptrtoint ptr %edsa_support to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %edsa_support, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %76)
  %cmp53 = icmp eq i32 %76, 2
  %spec.select = select i1 %cmp53, i32 4, i32 3
  %77 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 1
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %spec.select, ptr %77, align 4
  call void @mv88e6xxx_phy_init(ptr noundef %call.i.i) #16
  %79 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %call.i.i, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %80, i32 0, i32 22
  %81 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ops, align 4
  %get_eeprom = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %82, i32 0, i32 4
  %83 = ptrtoint ptr %get_eeprom to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %get_eeprom, align 4
  %tobool58.not = icmp eq ptr %84, null
  br i1 %tobool58.not, label %if.end51.if.end67_crit_edge, label %if.then59

if.end51.if.end67_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end67

if.then59:                                        ; preds = %if.end51
  br i1 %tobool.not, label %if.else63, label %if.then61

if.then61:                                        ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #18
  %eeprom_len = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 15
  %call.i.i225 = call i32 @of_property_read_variable_u32_array(ptr noundef nonnull %3, ptr noundef nonnull @.str.48, ptr noundef %eeprom_len, i32 noundef 1, i32 noundef 0) #16
  br label %if.end67

if.else63:                                        ; preds = %if.then59
  call void @__sanitizer_cov_trace_pc() #18
  %eeprom_len64 = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %1, i32 0, i32 4
  %85 = ptrtoint ptr %eeprom_len64 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %eeprom_len64, align 4
  %eeprom_len65 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 15
  %87 = ptrtoint ptr %eeprom_len65 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %86, ptr %eeprom_len65, align 8
  br label %if.end67

if.end67:                                         ; preds = %if.else63, %if.then61, %if.end51.if.end67_crit_edge
  call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call68 = call fastcc i32 @mv88e6xxx_switch_reset(ptr noundef %call.i.i)
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %if.end67.out_crit_edge

if.end67.out_crit_edge:                           ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end71:                                         ; preds = %if.end67
  br i1 %tobool.not, label %if.end71.if.end80_crit_edge, label %if.then73

if.end71.if.end80_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end80

if.then73:                                        ; preds = %if.end71
  %call74 = call i32 @of_irq_get(ptr noundef nonnull %3, i32 noundef 0) #16
  %irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 20
  %88 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %call74, ptr %irq, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -517, i32 %call74)
  %cmp76 = icmp eq i32 %call74, -517
  br i1 %cmp76, label %if.then73.out_crit_edge, label %if.then73.if.end80_crit_edge

if.then73.if.end80_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end80

if.then73.out_crit_edge:                          ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end80:                                         ; preds = %if.then73.if.end80_crit_edge, %if.end71.if.end80_crit_edge
  br i1 %tobool3.not, label %if.end80.if.end85_crit_edge, label %if.then82

if.end80.if.end85_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end85

if.then82:                                        ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #18
  %irq83 = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %1, i32 0, i32 5
  %89 = ptrtoint ptr %irq83 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %irq83, align 4
  %irq84 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 20
  %91 = ptrtoint ptr %irq84 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %90, ptr %irq84, align 8
  br label %if.end85

if.end85:                                         ; preds = %if.then82, %if.end80.if.end85_crit_edge
  call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %irq86 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %call.i.i, i32 0, i32 20
  %92 = ptrtoint ptr %irq86 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %irq86, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %cmp87 = icmp sgt i32 %93, 0
  br i1 %cmp87, label %if.then88, label %if.else90

if.then88:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #18
  %call89 = call fastcc i32 @mv88e6xxx_g1_irq_setup(ptr noundef %call.i.i)
  br label %if.end92

if.else90:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #18
  %call91 = call fastcc i32 @mv88e6xxx_irq_poll_setup(ptr noundef %call.i.i)
  br label %if.end92

if.end92:                                         ; preds = %if.else90, %if.then88
  %err.0 = phi i32 [ %call89, %if.then88 ], [ %call91, %if.else90 ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool93.not = icmp eq i32 %err.0, 0
  br i1 %tobool93.not, label %if.end95, label %if.end92.out_crit_edge

if.end92.out_crit_edge:                           ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end95:                                         ; preds = %if.end92
  %94 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %call.i.i, align 8
  %g2_irqs = getelementptr inbounds %struct.mv88e6xxx_info, ptr %95, i32 0, i32 15
  %96 = ptrtoint ptr %g2_irqs to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %g2_irqs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %97)
  %cmp97.not = icmp eq i32 %97, 0
  br i1 %cmp97.not, label %if.end95.if.end103_crit_edge, label %if.then98

if.end95.if.end103_crit_edge:                     ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end103

if.then98:                                        ; preds = %if.end95
  %call99 = call i32 @mv88e6xxx_g2_irq_setup(ptr noundef %call.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call99)
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %if.then98.if.end103_crit_edge, label %if.then98.out_g1_irq_crit_edge

if.then98.out_g1_irq_crit_edge:                   ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_g1_irq

if.then98.if.end103_crit_edge:                    ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end103

if.end103:                                        ; preds = %if.then98.if.end103_crit_edge, %if.end95.if.end103_crit_edge
  %call104 = call i32 @mv88e6xxx_g1_atu_prob_irq_setup(ptr noundef %call.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104)
  %tobool105.not = icmp eq i32 %call104, 0
  br i1 %tobool105.not, label %if.end107, label %if.end103.out_g2_irq_crit_edge

if.end103.out_g2_irq_crit_edge:                   ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_g2_irq

if.end107:                                        ; preds = %if.end103
  %call108 = call i32 @mv88e6xxx_g1_vtu_prob_irq_setup(ptr noundef %call.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %tobool109.not = icmp eq i32 %call108, 0
  br i1 %tobool109.not, label %if.end111, label %if.end107.out_g1_atu_prob_irq_crit_edge

if.end107.out_g1_atu_prob_irq_crit_edge:          ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_g1_atu_prob_irq

if.end111:                                        ; preds = %if.end107
  %call112 = call fastcc i32 @mv88e6xxx_mdios_register(ptr noundef %call.i.i, ptr noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call112)
  %tobool113.not = icmp eq i32 %call112, 0
  br i1 %tobool113.not, label %if.end115, label %if.end111.out_g1_vtu_prob_irq_crit_edge

if.end111.out_g1_vtu_prob_irq_crit_edge:          ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_g1_vtu_prob_irq

if.end115:                                        ; preds = %if.end111
  %call116 = call fastcc i32 @mv88e6xxx_register_switch(ptr noundef %call.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116)
  %tobool117.not = icmp eq i32 %call116, 0
  br i1 %tobool117.not, label %if.end115.cleanup_crit_edge, label %out_mdio

if.end115.cleanup_crit_edge:                      ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

out_mdio:                                         ; preds = %if.end115
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @mv88e6xxx_mdios_unregister(ptr noundef %call.i.i)
  br label %out_g1_vtu_prob_irq

out_g1_vtu_prob_irq:                              ; preds = %out_mdio, %if.end111.out_g1_vtu_prob_irq_crit_edge
  %err.1 = phi i32 [ %call112, %if.end111.out_g1_vtu_prob_irq_crit_edge ], [ %call116, %out_mdio ]
  call void @mv88e6xxx_g1_vtu_prob_irq_free(ptr noundef %call.i.i) #16
  br label %out_g1_atu_prob_irq

out_g1_atu_prob_irq:                              ; preds = %out_g1_vtu_prob_irq, %if.end107.out_g1_atu_prob_irq_crit_edge
  %err.2 = phi i32 [ %call108, %if.end107.out_g1_atu_prob_irq_crit_edge ], [ %err.1, %out_g1_vtu_prob_irq ]
  call void @mv88e6xxx_g1_atu_prob_irq_free(ptr noundef %call.i.i) #16
  br label %out_g2_irq

out_g2_irq:                                       ; preds = %out_g1_atu_prob_irq, %if.end103.out_g2_irq_crit_edge
  %err.3 = phi i32 [ %call104, %if.end103.out_g2_irq_crit_edge ], [ %err.2, %out_g1_atu_prob_irq ]
  %98 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %call.i.i, align 8
  %g2_irqs121 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %99, i32 0, i32 15
  %100 = ptrtoint ptr %g2_irqs121 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %g2_irqs121, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %cmp122.not = icmp eq i32 %101, 0
  br i1 %cmp122.not, label %out_g2_irq.out_g1_irq_crit_edge, label %if.then123

out_g2_irq.out_g1_irq_crit_edge:                  ; preds = %out_g2_irq
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_g1_irq

if.then123:                                       ; preds = %out_g2_irq
  call void @__sanitizer_cov_trace_pc() #18
  call void @mv88e6xxx_g2_irq_free(ptr noundef %call.i.i) #16
  br label %out_g1_irq

out_g1_irq:                                       ; preds = %if.then123, %out_g2_irq.out_g1_irq_crit_edge, %if.then98.out_g1_irq_crit_edge
  %err.4 = phi i32 [ %call99, %if.then98.out_g1_irq_crit_edge ], [ %err.3, %if.then123 ], [ %err.3, %out_g2_irq.out_g1_irq_crit_edge ]
  %102 = ptrtoint ptr %irq86 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %irq86, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %103)
  %cmp126 = icmp sgt i32 %103, 0
  br i1 %cmp126, label %if.then127, label %if.else128

if.then127:                                       ; preds = %out_g1_irq
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @mv88e6xxx_g1_irq_free(ptr noundef %call.i.i)
  br label %out

if.else128:                                       ; preds = %out_g1_irq
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @mv88e6xxx_irq_poll_free(ptr noundef %call.i.i)
  br label %out

out:                                              ; preds = %if.else128, %if.then127, %if.end92.out_crit_edge, %if.then73.out_crit_edge, %if.end67.out_crit_edge, %mv88e6xxx_detect.exit.thread, %if.then40, %if.end32.out_crit_edge, %if.end28.out_crit_edge
  %err.5 = phi i32 [ %call33, %if.end32.out_crit_edge ], [ %62, %if.then40 ], [ %call68, %if.end67.out_crit_edge ], [ %err.0, %if.end92.out_crit_edge ], [ %err.4, %if.then127 ], [ %err.4, %if.else128 ], [ -517, %if.then73.out_crit_edge ], [ %retval.0.i224.ph, %mv88e6xxx_detect.exit.thread ], [ -12, %if.end28.out_crit_edge ]
  br i1 %tobool3.not, label %out.cleanup_crit_edge, label %if.then131

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then131:                                       ; preds = %out
  %netdev132 = getelementptr inbounds %struct.dsa_mv88e6xxx_pdata, ptr %1, i32 0, i32 3
  %104 = ptrtoint ptr %netdev132 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %netdev132, align 4
  %tobool.not.i230 = icmp eq ptr %105, null
  br i1 %tobool.not.i230, label %if.then131.cleanup_crit_edge, label %do.body1.i

if.then131.cleanup_crit_edge:                     ; preds = %if.then131
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body1.i:                                       ; preds = %if.then131
  %106 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !352
  %pcpu_refcnt.i = getelementptr inbounds %struct.net_device, ptr %105, i32 0, i32 118
  %107 = ptrtoint ptr %pcpu_refcnt.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %pcpu_refcnt.i, align 4
  %109 = ptrtoint ptr %108 to i32
  %110 = call i32 @llvm.read_register.i32(metadata !338) #16
  %and.i.i = and i32 %110, -16384
  %111 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %111, i32 0, i32 3
  %112 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %113
  %114 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %115, %109
  %116 = inttoptr i32 %add.i to ptr
  %117 = ptrtoint ptr %116 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %116, align 4
  %add13.i = add i32 %118, -1
  store i32 %add13.i, ptr %116, align 4
  %119 = call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !353
  %and.i.i.i = and i32 %119, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool24.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool24.not.i, label %if.then28.i, label %do.body1.i.do.end30.i_crit_edge, !prof !354

do.body1.i.do.end30.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end30.i

if.then28.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @warn_bogus_irq_restore() #16
  br label %do.end30.i

do.end30.i:                                       ; preds = %if.then28.i, %do.body1.i.do.end30.i_crit_edge
  call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %106) #16, !srcloc !355
  br label %cleanup

cleanup:                                          ; preds = %do.end30.i, %if.then131.cleanup_crit_edge, %out.cleanup_crit_edge, %if.end115.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %pdata_device_get_match_data.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -22, %pdata_device_get_match_data.exit.cleanup_crit_edge ], [ -22, %if.end25.cleanup_crit_edge ], [ 0, %if.end115.cleanup_crit_edge ], [ %err.5, %out.cleanup_crit_edge ], [ %err.5, %if.then131.cleanup_crit_edge ], [ %err.5, %do.end30.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_remove(ptr nocapture noundef %mdiodev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %mdiodev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %ptp_support = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 23
  %6 = ptrtoint ptr %ptp_support to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %ptp_support, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool1.not = icmp eq i8 %7, 0
  br i1 %tobool1.not, label %if.end.if.end3_crit_edge, label %if.then2

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mv88e6xxx_hwtstamp_free(ptr noundef %3) #16
  tail call void @mv88e6xxx_ptp_free(ptr noundef %3) #16
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.end.if.end3_crit_edge
  tail call void @mv88e6xxx_phy_destroy(ptr noundef %3) #16
  %ds.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 2
  %8 = ptrtoint ptr %ds.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ds.i, align 8
  tail call void @dsa_unregister_switch(ptr noundef %9) #16
  %mdios.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 16
  %10 = ptrtoint ptr %mdios.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mdios.i, align 4
  %cmp.not23.i = icmp eq ptr %11, %mdios.i
  br i1 %cmp.not23.i, label %if.end3.mv88e6xxx_mdios_unregister.exit_crit_edge, label %if.end3.for.body.i_crit_edge

if.end3.for.body.i_crit_edge:                     ; preds = %if.end3
  br label %for.body.i

if.end3.mv88e6xxx_mdios_unregister.exit_crit_edge: ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_mdios_unregister.exit

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.end3.for.body.i_crit_edge
  %.pn.in24.i = phi ptr [ %.pn25.i, %if.end.i.for.body.i_crit_edge ], [ %11, %if.end3.for.body.i_crit_edge ]
  %12 = ptrtoint ptr %.pn.in24.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn25.i = load ptr, ptr %.pn.in24.i, align 4
  %mdio_bus.0.i = getelementptr i8, ptr %.pn.in24.i, i32 -8
  %13 = ptrtoint ptr %mdio_bus.0.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %mdio_bus.0.i, align 4
  %external.i = getelementptr i8, ptr %.pn.in24.i, i32 8
  %15 = ptrtoint ptr %external.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %external.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i = icmp eq i8 %16, 0
  br i1 %tobool.not.i, label %if.then.i, label %for.body.i.if.end.i_crit_edge

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mv88e6xxx_g2_irq_mdio_free(ptr noundef %3, ptr noundef %14) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge
  tail call void @mdiobus_unregister(ptr noundef %14) #16
  tail call void @mdiobus_free(ptr noundef %14) #16
  %cmp.not.i = icmp eq ptr %.pn25.i, %mdios.i
  br i1 %cmp.not.i, label %if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_mdios_unregister.exit

mv88e6xxx_mdios_unregister.exit:                  ; preds = %if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge, %if.end3.mv88e6xxx_mdios_unregister.exit_crit_edge
  tail call void @mv88e6xxx_g1_vtu_prob_irq_free(ptr noundef %3) #16
  tail call void @mv88e6xxx_g1_atu_prob_irq_free(ptr noundef %3) #16
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %3, align 8
  %g2_irqs = getelementptr inbounds %struct.mv88e6xxx_info, ptr %18, i32 0, i32 15
  %19 = ptrtoint ptr %g2_irqs to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %g2_irqs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.not = icmp eq i32 %20, 0
  br i1 %cmp.not, label %mv88e6xxx_mdios_unregister.exit.if.end6_crit_edge, label %if.then5

mv88e6xxx_mdios_unregister.exit.if.end6_crit_edge: ; preds = %mv88e6xxx_mdios_unregister.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then5:                                         ; preds = %mv88e6xxx_mdios_unregister.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mv88e6xxx_g2_irq_free(ptr noundef %3) #16
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %mv88e6xxx_mdios_unregister.exit.if.end6_crit_edge
  %irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 20
  %21 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %irq, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp7 = icmp sgt i32 %22, 0
  br i1 %cmp7, label %if.then8, label %if.else

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call ptr @free_irq(i32 noundef %22, ptr noundef %3) #16
  br label %if.end9

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %irq_poll_work.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 31
  %call.i26 = tail call zeroext i1 @kthread_cancel_delayed_work_sync(ptr noundef %irq_poll_work.i) #16
  %kworker.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 30
  %23 = ptrtoint ptr %kworker.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %kworker.i, align 4
  tail call void @kthread_destroy_worker(ptr noundef %24) #16
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then8
  %reg_lock.i.i27 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i.i27, i32 noundef 0) #16
  tail call fastcc void @mv88e6xxx_g1_irq_free_common(ptr noundef %3) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i.i27) #16
  %25 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %driver_data.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_shutdown(ptr nocapture noundef %mdiodev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %mdiodev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @dsa_switch_shutdown(ptr noundef nonnull %1) #16
  %2 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %driver_data.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6085_g1_ieee_pri_map(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6085_g1_ip_pri_map(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g2_irl_init_all(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_set_switch_mac(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_phy_ppu_read(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_phy_ppu_write(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_pot_clear(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_ppu_enable(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_ppu_disable(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_reset(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_link(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_sync_link(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_port_tag_remap(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6351_port_set_frame_mode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_set_ucast_flood(ptr noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_set_mcast_flood(ptr noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6351_port_set_ether_type(ptr noundef, i32 noundef, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6097_port_egress_rate_limiting(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6097_port_pause_limit(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_disable_learn_limit(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_disable_pri_override(ptr noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_setup_message_port(ptr noundef %chip, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds, align 8
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %entry.dsa_is_dsa_port.exit_crit_edge, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

entry.dsa_is_dsa_port.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %entry.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %5 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %6, %1
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %7 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i.i = icmp eq i32 %8, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_is_dsa_port.exit_crit_edge:       ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_dsa_port.exit

dsa_is_dsa_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge, %entry.dsa_is_dsa_port.exit_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %entry.dsa_is_dsa_port.exit_crit_edge ], [ null, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %cmp.i = icmp eq i32 %11, 2
  %call1 = tail call i32 @mv88e6xxx_port_set_message_port(ptr noundef %chip, i32 noundef %port, i1 noundef zeroext %cmp.i) #16
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_get_cmode(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_stats_snapshot(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_g1_stats_set_histogram(ptr noundef) #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6095_stats_get_sset_count(ptr nocapture noundef readnone %chip) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry
  %j.02.i = phi i32 [ 0, %entry ], [ %spec.select.i, %for.body.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.body.i.for.body.i_crit_edge ]
  %0 = and i32 %i.01.i, 1073741823
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %0)
  %tobool.not.i = icmp ult i32 %0, 33
  %inc.i = zext i1 %tobool.not.i to i32
  %spec.select.i = add i32 %j.02.i, %inc.i
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_sset_count.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_sset_count.exit:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %spec.select.i
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6095_stats_get_strings(ptr nocapture noundef readnone %chip, ptr nocapture noundef writeonly %data) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry
  %j.03.i = phi i32 [ 0, %entry ], [ %j.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  %0 = and i32 %i.01.i, 1073741823
  %1 = add nsw i32 %0, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 26
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.01.i
  %mul.i = shl i32 %j.03.i, 5
  %add.ptr.i = getelementptr i8, ptr %data, i32 %mul.i
  %2 = call ptr @memcpy(ptr %add.ptr.i, ptr %arrayidx.i, i32 32)
  %inc.i = add i32 %j.03.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %j.1.i = phi i32 [ %inc.i, %if.then.i ], [ %j.03.i, %for.body.i.for.inc.i_crit_edge ]
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_strings.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_strings.exit:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %j.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6095_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr noundef %data, i32 noundef 3, i16 noundef zeroext 0, i16 noundef zeroext 3072)
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_g1_set_cpu_port(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_g1_set_egress_port(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g2_mgmt_rsvd2cpu(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g1_vtu_getnext(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g1_vtu_loadpurge(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6085_g1_rmu_disable(ptr noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6185_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mask, align 4
  %or.i = or i32 %1, 32
  store i32 %or.i, ptr %mask, align 4
  %add.ptr.i = getelementptr i32, ptr %mask, i32 1
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %or.i3 = or i32 %3, 512
  store i32 %or.i3, ptr %add.ptr.i, align 4
  %interface.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %4 = ptrtoint ptr %interface.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %interface.i, align 4
  %6 = add i32 %5, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %entry.mv88e6065_phylink_validate.exit_crit_edge, label %if.then.i

entry.mv88e6065_phylink_validate.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6065_phylink_validate.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i = or i32 %1, 47
  %8 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or.i6.i, ptr %mask, align 4
  br label %mv88e6065_phylink_validate.exit

mv88e6065_phylink_validate.exit:                  ; preds = %if.then.i, %entry.mv88e6065_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_set_max_frame_size(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_message_port(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef writeonly %data, i32 noundef %types, i16 noundef zeroext %bank1_select, i16 noundef zeroext %histogram) unnamed_addr #0 align 64 {
entry:
  %low.i = alloca i32, align 4
  %high.i = alloca i32, align 4
  %reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %j.015 = phi i32 [ 0, %entry ], [ %j.1, %for.inc.for.body_crit_edge ]
  %i.011 = phi i32 [ 0, %entry ], [ %inc2, %for.inc.for.body_crit_edge ]
  %type = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.011, i32 3
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  %and = and i32 %1, %types
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %low.i) #16
  %2 = ptrtoint ptr %low.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %low.i, align 4, !annotation !350
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %high.i) #16
  %3 = ptrtoint ptr %high.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %high.i, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg.i) #16
  %4 = ptrtoint ptr %reg.i to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 0, ptr %reg.i, align 2
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values)
  switch i32 %6, label %if.then._mv88e6xxx_get_ethtool_stat.exit_crit_edge [
    i32 1, label %sw.bb.i
    i32 4, label %sw.bb11.i
    i32 2, label %if.then.sw.bb12.i_crit_edge
  ]

if.then.sw.bb12.i_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb12.i

if.then._mv88e6xxx_get_ethtool_stat.exit_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %_mv88e6xxx_get_ethtool_stat.exit

sw.bb.i:                                          ; preds = %if.then
  %reg1.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.011, i32 2
  %8 = ptrtoint ptr %reg1.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %reg1.i, align 4
  %call.i = call i32 @mv88e6xxx_port_read(ptr noundef %chip, i32 noundef %port, i32 noundef %9, ptr noundef nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %sw.bb.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge

sw.bb.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge: ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_mv88e6xxx_get_ethtool_stat.exit

if.end.i:                                         ; preds = %sw.bb.i
  %10 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %reg.i, align 2
  %conv.i = zext i16 %11 to i32
  %12 = ptrtoint ptr %low.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %conv.i, ptr %low.i, align 4
  %size.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.011, i32 1
  %13 = ptrtoint ptr %size.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %14)
  %cmp.i = icmp eq i32 %14, 4
  br i1 %cmp.i, label %if.then3.i, label %if.end.i.sw.epilog.i_crit_edge

if.end.i.sw.epilog.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.then3.i:                                       ; preds = %if.end.i
  %15 = ptrtoint ptr %reg1.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %reg1.i, align 4
  %add.i = add i32 %16, 1
  %call5.i = call i32 @mv88e6xxx_port_read(ptr noundef %chip, i32 noundef %port, i32 noundef %add.i, ptr noundef nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %if.then3.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge

if.then3.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_mv88e6xxx_get_ethtool_stat.exit

if.end8.i:                                        ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %reg.i, align 2
  %conv9.i = zext i16 %18 to i32
  %shl.i = shl nuw i32 %conv9.i, 16
  %19 = ptrtoint ptr %low.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %low.i, align 4
  %or.i = or i32 %shl.i, %20
  store i32 %or.i, ptr %low.i, align 4
  br label %sw.epilog.i

sw.bb11.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %reg.i to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %bank1_select, ptr %reg.i, align 2
  br label %sw.bb12.i

sw.bb12.i:                                        ; preds = %sw.bb11.i, %if.then.sw.bb12.i_crit_edge
  %reg13.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.011, i32 2
  %22 = ptrtoint ptr %reg13.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %reg13.i, align 4
  %24 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %reg.i, align 2
  %26 = trunc i32 %23 to i16
  %27 = or i16 %26, %histogram
  %conv18.i = or i16 %27, %25
  store i16 %conv18.i, ptr %reg.i, align 2
  %conv19.i = zext i16 %conv18.i to i32
  call void @mv88e6xxx_g1_stats_read(ptr noundef %chip, i32 noundef %conv19.i, ptr noundef nonnull %low.i) #16
  %28 = and i32 %i.011, 1073741823
  %29 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.115)
  switch i32 %28, label %sw.bb12.i.sw.epilog.i_crit_edge [
    i32 12, label %sw.bb12.i.if.then23.i_crit_edge
    i32 0, label %sw.bb12.i.if.then23.i_crit_edge16
  ]

sw.bb12.i.if.then23.i_crit_edge16:                ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then23.i

sw.bb12.i.if.then23.i_crit_edge:                  ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then23.i

sw.bb12.i.sw.epilog.i_crit_edge:                  ; preds = %sw.bb12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.then23.i:                                      ; preds = %sw.bb12.i.if.then23.i_crit_edge, %sw.bb12.i.if.then23.i_crit_edge16
  %30 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %reg.i, align 2
  %conv24.i = zext i16 %31 to i32
  %add25.i = add nuw nsw i32 %conv24.i, 1
  call void @mv88e6xxx_g1_stats_read(ptr noundef %chip, i32 noundef %add25.i, ptr noundef nonnull %high.i) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then23.i, %sw.bb12.i.sw.epilog.i_crit_edge, %if.end8.i, %if.end.i.sw.epilog.i_crit_edge
  %32 = ptrtoint ptr %high.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %high.i, align 4
  %conv27.i = zext i32 %33 to i64
  %shl28.i = shl nuw i64 %conv27.i, 32
  %34 = ptrtoint ptr %low.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %low.i, align 4
  %conv29.i = zext i32 %35 to i64
  %or30.i = or i64 %shl28.i, %conv29.i
  br label %_mv88e6xxx_get_ethtool_stat.exit

_mv88e6xxx_get_ethtool_stat.exit:                 ; preds = %sw.epilog.i, %if.then3.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge, %sw.bb.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge, %if.then._mv88e6xxx_get_ethtool_stat.exit_crit_edge
  %retval.0.i = phi i64 [ %or30.i, %sw.epilog.i ], [ -1, %sw.bb.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge ], [ -1, %if.then3.i._mv88e6xxx_get_ethtool_stat.exit_crit_edge ], [ -1, %if.then._mv88e6xxx_get_ethtool_stat.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %high.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %low.i) #16
  %arrayidx1 = getelementptr i64, ptr %data, i32 %j.015
  %36 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %retval.0.i, ptr %arrayidx1, align 8
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  %inc = add i32 %j.015, 1
  br label %for.inc

for.inc:                                          ; preds = %_mv88e6xxx_get_ethtool_stat.exit, %for.body.for.inc_crit_edge
  %j.1 = phi i32 [ %inc, %_mv88e6xxx_get_ethtool_stat.exit ], [ %j.015, %for.body.for.inc_crit_edge ]
  %inc2 = add nuw nsw i32 %i.011, 1
  %exitcond.not = icmp eq i32 %inc2, 59
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %j.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_read(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g1_stats_read(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6065_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %interface = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %0 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %interface, align 4
  %2 = add i32 %1, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %3 = icmp ult i32 %2, 2
  br i1 %3, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mask, align 4
  %or.i6 = or i32 %5, 15
  store i32 %or.i6, ptr %mask, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_sync_link(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6085_port_set_frame_mode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_set_forward_unknown(ptr noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_set_default_forward(ptr noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_port_set_upstream_port(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g2_mgmt_rsvd2cpu(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_serdes_power(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_serdes_pcs_get_state(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_vtu_getnext(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_vtu_loadpurge(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_set_switch_mac(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_smi_phy_read(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_smi_phy_write(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g1_reset(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6095_port_egress_rate_limiting(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_irq_mapping(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6097_serdes_irq_enable(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6097_serdes_irq_status(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6320_g1_stats_snapshot(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6165_g1_atu_get_hash(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6165_g1_atu_set_hash(ptr noundef, i8 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_port_set_pause(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6165_port_set_jumbo_size(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6185_g1_set_cascade_port(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_get_eeprom8(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_set_eeprom8(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_set_rgmii_delay(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6341_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6341_port_max_speed_mode(i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_set_policy(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6341_port_set_cmode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_get_cmode(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_stats_snapshot(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_stats_set_histogram(ptr noundef) #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6320_stats_get_sset_count(ptr nocapture noundef readnone %chip) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry
  %j.02.i = phi i32 [ 0, %entry ], [ %spec.select.i, %for.body.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.body.i.for.body.i_crit_edge ]
  %0 = and i32 %i.01.i, 1073741823
  %1 = add nsw i32 %0, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %1)
  %tobool.not.i = icmp ult i32 %1, -3
  %inc.i = zext i1 %tobool.not.i to i32
  %spec.select.i = add i32 %j.02.i, %inc.i
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_sset_count.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_sset_count.exit:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %spec.select.i
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6320_stats_get_strings(ptr nocapture noundef readnone %chip, ptr nocapture noundef writeonly %data) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry
  %j.03.i = phi i32 [ 0, %entry ], [ %j.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  %0 = and i32 %i.01.i, 1073741823
  %1 = add nsw i32 %0, -30
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 3
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.01.i
  %mul.i = shl i32 %j.03.i, 5
  %add.ptr.i = getelementptr i8, ptr %data, i32 %mul.i
  %2 = call ptr @memcpy(ptr %add.ptr.i, ptr %arrayidx.i, i32 32)
  %inc.i = add i32 %j.03.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %j.1.i = phi i32 [ %inc.i, %if.then.i ], [ %j.03.i, %for.body.i.for.inc.i_crit_edge ]
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_strings.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_strings.exit:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %j.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6390_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr noundef %data, i32 noundef 6, i16 noundef zeroext 1024, i16 noundef zeroext 0)
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_set_cpu_port(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_set_egress_port(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_mgmt_rsvd2cpu(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_power(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6341_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_pcs_get_state(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_pcs_config(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_pcs_an_restart(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_pcs_link_up(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_irq_enable(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_irq_status(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_get_sset_count(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_get_strings(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_get_stats(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_get_regs_len(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6390_serdes_get_regs(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_rmu_disable(ptr noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6341_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %port)
  %cmp = icmp sgt i32 %port, 4
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mask, align 4
  %or.i = or i32 %1, 32768
  store i32 %or.i, ptr %mask, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %2 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mask, align 4
  %or.i5 = or i32 %3, 32
  store i32 %or.i5, ptr %mask, align 4
  %add.ptr.i = getelementptr i32, ptr %mask, i32 1
  %4 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %add.ptr.i, align 4
  %or.i6 = or i32 %5, 512
  store i32 %or.i6, ptr %add.ptr.i, align 4
  %interface.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %6 = ptrtoint ptr %interface.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %interface.i, align 4
  %8 = add i32 %7, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %8)
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %if.end.mv88e6065_phylink_validate.exit_crit_edge, label %if.then.i

if.end.mv88e6065_phylink_validate.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6065_phylink_validate.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i = or i32 %3, 47
  %10 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or.i6.i, ptr %mask, align 4
  br label %mv88e6065_phylink_validate.exit

mv88e6065_phylink_validate.exit:                  ; preds = %if.then.i, %if.end.mv88e6065_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6165_phy_read(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6165_phy_write(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_set_rgmii_delay(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_get_eeprom16(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_set_eeprom16(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_power(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_pcs_get_state(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_pcs_config(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_pcs_an_restart(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_pcs_link_up(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_get_regs_len(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6352_serdes_get_regs(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_g1_rmu_disable(ptr noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6352_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mask, align 4
  %or.i = or i32 %1, 32
  store i32 %or.i, ptr %mask, align 4
  %add.ptr.i = getelementptr i32, ptr %mask, i32 1
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %or.i3 = or i32 %3, 512
  store i32 %or.i3, ptr %add.ptr.i, align 4
  %interface.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %4 = ptrtoint ptr %interface.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %interface.i, align 4
  %6 = add i32 %5, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %6)
  %7 = icmp ult i32 %6, 2
  br i1 %7, label %entry.mv88e6065_phylink_validate.exit_crit_edge, label %if.then.i

entry.mv88e6065_phylink_validate.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6065_phylink_validate.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i = or i32 %1, 47
  %8 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or.i6.i, ptr %mask, align 4
  br label %mv88e6065_phylink_validate.exit

mv88e6065_phylink_validate.exit:                  ; preds = %if.then.i, %entry.mv88e6065_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_irq_mapping(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_irq_enable(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_irq_status(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6390_setup_errata(ptr noundef %chip) #0 align 64 {
entry:
  %val.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %val.i) #16
  %0 = ptrtoint ptr %val.i to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %val.i, align 2, !annotation !350
  %1 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %chip, align 8
  %num_ports.i15.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %2, i32 0, i32 5
  %3 = ptrtoint ptr %num_ports.i15.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_ports.i15.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp16.not.i = icmp eq i32 %4, 0
  br i1 %cmp16.not.i, label %entry.mv88e6390_setup_errata_applied.exit.thread_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.mv88e6390_setup_errata_applied.exit.thread_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6390_setup_errata_applied.exit.thread

for.cond.i:                                       ; preds = %if.end.i
  %inc.i = add nuw i32 %port.017.i, 1
  %5 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %chip, align 8
  %num_ports.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %num_ports.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_ports.i.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %8
  br i1 %cmp.i, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.mv88e6390_setup_errata_applied.exit.thread_crit_edge

for.cond.i.mv88e6390_setup_errata_applied.exit.thread_crit_edge: ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6390_setup_errata_applied.exit.thread

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %port.017.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %call1.i = call i32 @mv88e6xxx_port_hidden_read(ptr noundef %chip, i32 noundef 15, i32 noundef %port.017.i, i32 noundef 0, ptr noundef nonnull %val.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %do.end.i

do.end.i:                                         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %9 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %10, ptr noundef nonnull @.str.44, i32 noundef %call1.i) #19
  br label %mv88e6390_setup_errata_applied.exit

if.end.i:                                         ; preds = %for.body.i
  %11 = ptrtoint ptr %val.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %val.i, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 448, i16 %12)
  %cmp2.not.i = icmp eq i16 %12, 448
  br i1 %cmp2.not.i, label %for.cond.i, label %if.end.i.mv88e6390_setup_errata_applied.exit_crit_edge

if.end.i.mv88e6390_setup_errata_applied.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6390_setup_errata_applied.exit

mv88e6390_setup_errata_applied.exit.thread:       ; preds = %for.cond.i.mv88e6390_setup_errata_applied.exit.thread_crit_edge, %entry.mv88e6390_setup_errata_applied.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val.i) #16
  br label %cleanup

mv88e6390_setup_errata_applied.exit:              ; preds = %if.end.i.mv88e6390_setup_errata_applied.exit_crit_edge, %do.end.i
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val.i) #16
  %13 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %chip, align 8
  %num_ports.i38 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %14, i32 0, i32 5
  %15 = ptrtoint ptr %num_ports.i38 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_ports.i38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp39.not = icmp eq i32 %16, 0
  br i1 %cmp39.not, label %mv88e6390_setup_errata_applied.exit.for.cond5.preheader_crit_edge, label %mv88e6390_setup_errata_applied.exit.for.body_crit_edge

mv88e6390_setup_errata_applied.exit.for.body_crit_edge: ; preds = %mv88e6390_setup_errata_applied.exit
  br label %for.body

mv88e6390_setup_errata_applied.exit.for.cond5.preheader_crit_edge: ; preds = %mv88e6390_setup_errata_applied.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond5.preheader

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %port.040, 1
  %17 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %chip, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %num_ports.i, align 4
  %cmp = icmp ult i32 %inc, %20
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.for.cond5.preheader_crit_edge

for.cond.for.cond5.preheader_crit_edge:           ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond5.preheader

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond5.preheader:                              ; preds = %for.cond.for.cond5.preheader_crit_edge, %mv88e6390_setup_errata_applied.exit.for.cond5.preheader_crit_edge
  %21 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %chip, align 8
  %num_ports.i3141 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %num_ports.i3141 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_ports.i3141, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %cmp742.not = icmp eq i32 %24, 0
  br i1 %cmp742.not, label %for.cond5.preheader.for.end15_crit_edge, label %for.cond5.preheader.for.body8_crit_edge

for.cond5.preheader.for.body8_crit_edge:          ; preds = %for.cond5.preheader
  br label %for.body8

for.cond5.preheader.for.end15_crit_edge:          ; preds = %for.cond5.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end15

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %mv88e6390_setup_errata_applied.exit.for.body_crit_edge
  %port.040 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %mv88e6390_setup_errata_applied.exit.for.body_crit_edge ]
  %call2 = call i32 @mv88e6xxx_port_set_state(ptr noundef %chip, i32 noundef %port.040, i8 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %for.cond, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond5:                                        ; preds = %for.body8
  %inc14 = add nuw i32 %port.143, 1
  %25 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %chip, align 8
  %num_ports.i31 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %26, i32 0, i32 5
  %27 = ptrtoint ptr %num_ports.i31 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %num_ports.i31, align 4
  %cmp7 = icmp ult i32 %inc14, %28
  br i1 %cmp7, label %for.cond5.for.body8_crit_edge, label %for.cond5.for.end15_crit_edge

for.cond5.for.end15_crit_edge:                    ; preds = %for.cond5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end15

for.cond5.for.body8_crit_edge:                    ; preds = %for.cond5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body8

for.body8:                                        ; preds = %for.cond5.for.body8_crit_edge, %for.cond5.preheader.for.body8_crit_edge
  %port.143 = phi i32 [ %inc14, %for.cond5.for.body8_crit_edge ], [ 0, %for.cond5.preheader.for.body8_crit_edge ]
  %call9 = call i32 @mv88e6xxx_port_hidden_write(ptr noundef %chip, i32 noundef 15, i32 noundef %port.143, i32 noundef 0, i16 noundef zeroext 448) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %for.cond5, label %for.body8.cleanup_crit_edge

for.body8.cleanup_crit_edge:                      ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.end15:                                        ; preds = %for.cond5.for.end15_crit_edge, %for.cond5.preheader.for.end15_crit_edge
  %.lcssa = phi ptr [ %22, %for.cond5.preheader.for.end15_crit_edge ], [ %26, %for.cond5.for.end15_crit_edge ]
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %.lcssa, i32 0, i32 22
  %29 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops.i, align 4
  %reset.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %30, i32 0, i32 12
  %31 = ptrtoint ptr %reset.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %reset.i, align 4
  %tobool.not.i32 = icmp eq ptr %32, null
  br i1 %tobool.not.i32, label %for.end15.cleanup_crit_edge, label %if.then.i

for.end15.cleanup_crit_edge:                      ; preds = %for.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %for.end15
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = call i32 %32(ptr noundef %chip) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %for.end15.cleanup_crit_edge, %for.body8.cleanup_crit_edge, %for.body.cleanup_crit_edge, %mv88e6390_setup_errata_applied.exit.thread
  %retval.0 = phi i32 [ 0, %mv88e6390_setup_errata_applied.exit.thread ], [ %call.i, %if.then.i ], [ 0, %for.end15.cleanup_crit_edge ], [ %call9, %for.body8.cleanup_crit_edge ], [ %call2, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g2_irl_init_all(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_max_speed_mode(i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_tag_remap(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_pause_limit(ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_port_set_cmode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_vtu_getnext(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390_g1_vtu_loadpurge(ptr noundef, ptr noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6390_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %port)
  %cmp = icmp sgt i32 %port, 8
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mask, align 4
  %or.i = or i32 %1, 32768
  store i32 %or.i, ptr %mask, align 4
  %add.ptr.i = getelementptr i32, ptr %mask, i32 1
  %2 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i, align 4
  %or.i6 = or i32 %3, 32768
  store i32 %or.i6, ptr %add.ptr.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mask, align 4
  %or.i7 = or i32 %5, 32
  store i32 %or.i7, ptr %mask, align 4
  %add.ptr.i8 = getelementptr i32, ptr %mask, i32 1
  %6 = ptrtoint ptr %add.ptr.i8 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr.i8, align 4
  %or.i9 = or i32 %7, 512
  store i32 %or.i9, ptr %add.ptr.i8, align 4
  %interface.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %8 = ptrtoint ptr %interface.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %interface.i, align 4
  %10 = add i32 %9, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %if.end.mv88e6065_phylink_validate.exit_crit_edge, label %if.then.i

if.end.mv88e6065_phylink_validate.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6065_phylink_validate.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i = or i32 %5, 47
  %12 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or.i6.i, ptr %mask, align 4
  br label %mv88e6065_phylink_validate.exit

mv88e6065_phylink_validate.exit:                  ; preds = %if.then.i, %if.end.mv88e6065_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_state(ptr noundef, i32 noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_hidden_write(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_hidden_read(ptr noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390x_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390x_port_max_speed_mode(i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390x_port_set_cmode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6390x_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6390x_phylink_validate(ptr nocapture noundef readnone %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %port)
  %cmp = icmp sgt i32 %port, 8
  br i1 %cmp, label %if.then.i, label %entry.if.end.i_crit_edge

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mask, align 4
  %or.i.i = or i32 %1, 561152
  store i32 %or.i.i, ptr %mask, align 4
  %add.ptr.i.i = getelementptr i32, ptr %mask, i32 1
  %2 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %add.ptr.i.i, align 4
  %or.i6.i = or i32 %3, 32768
  store i32 %or.i6.i, ptr %add.ptr.i.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %mask, align 4
  %or.i7.i = or i32 %5, 32
  store i32 %or.i7.i, ptr %mask, align 4
  %add.ptr.i8.i = getelementptr i32, ptr %mask, i32 1
  %6 = ptrtoint ptr %add.ptr.i8.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %add.ptr.i8.i, align 4
  %or.i9.i = or i32 %7, 512
  store i32 %or.i9.i, ptr %add.ptr.i8.i, align 4
  %interface.i.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %8 = ptrtoint ptr %interface.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %interface.i.i, align 4
  %10 = add i32 %9, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %11 = icmp ult i32 %10, 2
  br i1 %11, label %if.end.i.mv88e6390_phylink_validate.exit_crit_edge, label %if.then.i.i

if.end.i.mv88e6390_phylink_validate.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6390_phylink_validate.exit

if.then.i.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i.i = or i32 %5, 47
  %12 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or.i6.i.i, ptr %mask, align 4
  br label %mv88e6390_phylink_validate.exit

mv88e6390_phylink_validate.exit:                  ; preds = %if.then.i.i, %if.end.i.mv88e6390_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_setup_errata(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_max_speed_mode(i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_set_policy(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_set_ether_type(ptr noundef, i32 noundef, i16 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_set_cmode(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_set_upstream_port(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_set_egress_port(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_port_mgmt_rsvd2cpu(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_power(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_get_lane(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_pcs_get_state(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_irq_enable(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6393x_serdes_irq_status(ptr noundef, i32 noundef, i32 noundef) #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6393x_phylink_validate(ptr nocapture noundef readonly %chip, i32 noundef %port, ptr nocapture noundef %mask, ptr nocapture noundef readonly %state) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %port to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.116)
  switch i32 %port, label %entry.if.end_crit_edge [
    i32 0, label %entry.land.lhs.true_crit_edge
    i32 9, label %entry.land.lhs.true_crit_edge43
    i32 10, label %entry.if.then_crit_edge
  ]

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

entry.land.lhs.true_crit_edge43:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

entry.land.lhs.true_crit_edge:                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry.land.lhs.true_crit_edge, %entry.land.lhs.true_crit_edge43
  %1 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %chip, align 8
  %prod_num = getelementptr inbounds %struct.mv88e6xxx_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %prod_num to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %prod_num, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 6432, i16 %4)
  %cmp.not = icmp eq i16 %4, 6432
  br i1 %cmp.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true.if.then_crit_edge, %entry.if.then_crit_edge
  %5 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %mask, align 4
  %add.ptr.i = getelementptr i32, ptr %mask, i32 1
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %add.ptr.i, align 4
  %or.i37 = or i32 %6, 561152
  store i32 %or.i37, ptr %mask, align 4
  %or.i39 = or i32 %8, 130048
  store i32 %or.i39, ptr %add.ptr.i, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %9 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mask, align 4
  %or.i40 = or i32 %10, 32
  store i32 %or.i40, ptr %mask, align 4
  %add.ptr.i41 = getelementptr i32, ptr %mask, i32 1
  %11 = ptrtoint ptr %add.ptr.i41 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %add.ptr.i41, align 4
  %or.i42 = or i32 %12, 512
  store i32 %or.i42, ptr %add.ptr.i41, align 4
  %interface.i = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %13 = ptrtoint ptr %interface.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %interface.i, align 4
  %15 = add i32 %14, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %15)
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %if.end.mv88e6065_phylink_validate.exit_crit_edge, label %if.then.i

if.end.mv88e6065_phylink_validate.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6065_phylink_validate.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %or.i6.i = or i32 %10, 47
  %17 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or.i6.i, ptr %mask, align 4
  br label %mv88e6065_phylink_validate.exit

mv88e6065_phylink_validate.exit:                  ; preds = %if.then.i, %if.end.mv88e6065_phylink_validate.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6250_g1_ieee_pri_map(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6250_g1_reset(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6250_port_set_speed_duplex(ptr noundef, i32 noundef, i32 noundef, i32 noundef) #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6250_stats_get_sset_count(ptr nocapture noundef readnone %chip) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %entry
  %j.02.i = phi i32 [ 0, %entry ], [ %spec.select.i, %for.body.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.body.i.for.body.i_crit_edge ]
  %type.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.01.i, i32 3
  %0 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type.i, align 4
  %and.i = lshr i32 %1, 1
  %and.i.lobit = and i32 %and.i, 1
  %spec.select.i = add i32 %and.i.lobit, %j.02.i
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_sset_count.exit, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_sset_count.exit:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %spec.select.i
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6250_stats_get_strings(ptr nocapture noundef readnone %chip, ptr nocapture noundef writeonly %data) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry
  %j.03.i = phi i32 [ 0, %entry ], [ %j.1.i, %for.inc.i.for.body.i_crit_edge ]
  %i.01.i = phi i32 [ 0, %entry ], [ %inc1.i, %for.inc.i.for.body.i_crit_edge ]
  %0 = and i32 %i.01.i, 1073741823
  %1 = add nsw i32 %0, -30
  call void @__sanitizer_cov_trace_const_cmp4(i32 29, i32 %1)
  %tobool.not.i = icmp ult i32 %1, 29
  br i1 %tobool.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx.i = getelementptr [59 x %struct.mv88e6xxx_hw_stat], ptr @mv88e6xxx_hw_stats, i32 0, i32 %i.01.i
  %mul.i = shl i32 %j.03.i, 5
  %add.ptr.i = getelementptr i8, ptr %data, i32 %mul.i
  %2 = call ptr @memcpy(ptr %add.ptr.i, ptr %arrayidx.i, i32 32)
  %inc.i = add i32 %j.03.i, 1
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i.for.inc.i_crit_edge
  %j.1.i = phi i32 [ %inc.i, %if.then.i ], [ %j.03.i, %for.body.i.for.inc.i_crit_edge ]
  %inc1.i = add nuw nsw i32 %i.01.i, 1
  %exitcond.not.i = icmp eq i32 %inc1.i, 59
  br i1 %exitcond.not.i, label %mv88e6xxx_stats_get_strings.exit, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

mv88e6xxx_stats_get_strings.exit:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  ret i32 %j.1.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6250_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr noundef %data, i32 noundef 2, i16 noundef zeroext 0, i16 noundef zeroext 3072)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6320_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef writeonly %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_stats_get_stats(ptr noundef %chip, i32 noundef %port, ptr noundef %data, i32 noundef 6, i16 noundef zeroext 512, i16 noundef zeroext 3072)
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_get_sset_count(ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_get_strings(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6352_serdes_get_stats(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_suspend(ptr nocapture noundef readnone %dev) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -95
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_resume(ptr nocapture noundef readnone %dev) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_device_get_match_data(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_smi_init(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_gpiod_get_optional(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_phy_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_switch_reset(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %num_ports.i7.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %num_ports.i7.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ports.i7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp8.not.i = icmp eq i32 %3, 0
  br i1 %cmp8.not.i, label %entry.if.end_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i32 %i.09.i, 1
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %chip, align 8
  %num_ports.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %num_ports.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_ports.i.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %7
  br i1 %cmp.i, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.if.end_crit_edge

for.cond.i.if.end_crit_edge:                      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %i.09.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %entry.for.body.i_crit_edge ]
  %call1.i = tail call i32 @mv88e6xxx_port_set_state(ptr noundef %chip, i32 noundef %i.09.i, i8 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %for.cond.i, label %for.body.i.cleanup_crit_edge

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %for.cond.i.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @usleep_range_state(i32 noundef 2000, i32 noundef 4000, i32 noundef 2) #16
  %reset.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 14
  %8 = ptrtoint ptr %reset.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %reset.i, align 4
  %tobool.not.i5 = icmp eq ptr %9, null
  br i1 %tobool.not.i5, label %if.end.mv88e6xxx_hardware_reset.exit_crit_edge, label %if.then.i

if.end.mv88e6xxx_hardware_reset.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_hardware_reset.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @gpiod_set_value_cansleep(ptr noundef nonnull %9, i32 noundef 1) #16
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #16
  tail call void @gpiod_set_value_cansleep(ptr noundef nonnull %9, i32 noundef 0) #16
  tail call void @usleep_range_state(i32 noundef 10000, i32 noundef 20000, i32 noundef 2) #16
  tail call void @mv88e6xxx_g1_wait_eeprom_done(ptr noundef %chip) #16
  br label %mv88e6xxx_hardware_reset.exit

mv88e6xxx_hardware_reset.exit:                    ; preds = %if.then.i, %if.end.mv88e6xxx_hardware_reset.exit_crit_edge
  %10 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops.i, align 4
  %reset.i6 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %13, i32 0, i32 12
  %14 = ptrtoint ptr %reset.i6 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %reset.i6, align 4
  %tobool.not.i7 = icmp eq ptr %15, null
  br i1 %tobool.not.i7, label %mv88e6xxx_hardware_reset.exit.cleanup_crit_edge, label %if.then.i8

mv88e6xxx_hardware_reset.exit.cleanup_crit_edge:  ; preds = %mv88e6xxx_hardware_reset.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i8:                                       ; preds = %mv88e6xxx_hardware_reset.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 %15(ptr noundef %chip) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then.i8, %mv88e6xxx_hardware_reset.exit.cleanup_crit_edge, %for.body.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.then.i8 ], [ 0, %mv88e6xxx_hardware_reset.exit.cleanup_crit_edge ], [ %call1.i, %for.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_irq_get(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_g1_irq_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_g1_irq_setup_common(ptr noundef %chip)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 20
  %0 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %irq, align 8
  tail call void @__irq_set_lockdep_class(i32 noundef %1, ptr noundef nonnull @mv88e6xxx_g1_irq_setup.lock_key, ptr noundef nonnull @mv88e6xxx_g1_irq_setup.request_key) #16
  %irq_name = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 21
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  %init_name.i = getelementptr inbounds %struct.device, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.end.i, label %if.end.dev_name.exit_crit_edge

if.end.dev_name.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %3, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %if.end.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %7, %if.end.i ], [ %5, %if.end.dev_name.exit_crit_edge ]
  %call2 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %irq_name, i32 noundef 64, ptr noundef nonnull @.str.54, ptr noundef %retval.0.i)
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  %8 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %irq, align 8
  %call6 = tail call i32 @request_threaded_irq(i32 noundef %9, ptr noundef null, ptr noundef nonnull @mv88e6xxx_g1_irq_thread_fn, i32 noundef 8320, ptr noundef %irq_name, ptr noundef %chip) #16
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %dev_name.exit.cleanup_crit_edge, label %if.then8

dev_name.exit.cleanup_crit_edge:                  ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then8:                                         ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @mv88e6xxx_g1_irq_free_common(ptr noundef %chip)
  br label %cleanup

cleanup:                                          ; preds = %if.then8, %dev_name.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call6, %if.then8 ], [ 0, %dev_name.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_irq_poll_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_g1_irq_setup_common(ptr noundef %chip)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.body1, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body1:                                         ; preds = %entry
  %irq_poll_work = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31
  %0 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31, i32 0, i32 1
  %1 = call ptr @memset(ptr %0, i32 0, i32 12)
  %2 = ptrtoint ptr %irq_poll_work to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %irq_poll_work, ptr %irq_poll_work, align 4
  %prev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31, i32 0, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %irq_poll_work, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31, i32 0, i32 1
  %4 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @mv88e6xxx_irq_poll, ptr %func, align 8
  %timer = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @kthread_delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.56, ptr noundef nonnull @mv88e6xxx_irq_poll_setup.__key) #16
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 4
  %init_name.i = getelementptr inbounds %struct.device, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %init_name.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %init_name.i, align 8
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.i, label %do.body1.dev_name.exit_crit_edge

do.body1.dev_name.exit_crit_edge:                 ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit

if.end.i:                                         ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %6, align 4
  br label %dev_name.exit

dev_name.exit:                                    ; preds = %if.end.i, %do.body1.dev_name.exit_crit_edge
  %retval.0.i = phi ptr [ %10, %if.end.i ], [ %8, %do.body1.dev_name.exit_crit_edge ]
  %call13 = tail call ptr (i32, ptr, ...) @kthread_create_worker(i32 noundef 0, ptr noundef nonnull @.str.57, ptr noundef %retval.0.i) #16
  %kworker = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 30
  %11 = ptrtoint ptr %kworker to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %call13, ptr %kworker, align 4
  %cmp.i = icmp ugt ptr %call13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then16, label %if.end19

if.then16:                                        ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %call13 to i32
  br label %cleanup

if.end19:                                         ; preds = %dev_name.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call23 = tail call zeroext i1 @kthread_queue_delayed_work(ptr noundef %call13, ptr noundef %irq_poll_work, i32 noundef 10) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %12, %if.then16 ], [ 0, %if.end19 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_irq_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_prob_irq_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_vtu_prob_irq_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_mdios_register(ptr noundef %chip, ptr noundef %np) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @of_get_child_by_name(ptr noundef %np, ptr noundef nonnull @.str.58) #16
  %call1 = tail call fastcc i32 @mv88e6xxx_mdio_register(ptr noundef %chip, ptr noundef %call, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = tail call ptr @of_get_next_available_child(ptr noundef %np, ptr noundef null) #16
  %cmp.not26 = icmp eq ptr %call2, null
  br i1 %cmp.not26, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end.for.body_crit_edge
  %child.027 = phi ptr [ %call11, %for.inc.for.body_crit_edge ], [ %call2, %if.end.for.body_crit_edge ]
  %call3 = tail call i32 @of_device_is_compatible(ptr noundef nonnull %child.027, ptr noundef nonnull @.str.59) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %for.body.for.inc_crit_edge, label %if.then5

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then5:                                         ; preds = %for.body
  %call6 = tail call fastcc i32 @mv88e6xxx_mdio_register(ptr noundef %chip, ptr noundef nonnull %child.027, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.then5.for.inc_crit_edge, label %if.then8

if.then5.for.inc_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then8:                                         ; preds = %if.then5
  %mdios.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16
  %0 = ptrtoint ptr %mdios.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdios.i, align 4
  %cmp.not23.i = icmp eq ptr %1, %mdios.i
  br i1 %cmp.not23.i, label %if.then8.mv88e6xxx_mdios_unregister.exit_crit_edge, label %if.then8.for.body.i_crit_edge

if.then8.for.body.i_crit_edge:                    ; preds = %if.then8
  br label %for.body.i

if.then8.mv88e6xxx_mdios_unregister.exit_crit_edge: ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_mdios_unregister.exit

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.then8.for.body.i_crit_edge
  %.pn.in24.i = phi ptr [ %.pn25.i, %if.end.i.for.body.i_crit_edge ], [ %1, %if.then8.for.body.i_crit_edge ]
  %2 = ptrtoint ptr %.pn.in24.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn25.i = load ptr, ptr %.pn.in24.i, align 4
  %mdio_bus.0.i = getelementptr i8, ptr %.pn.in24.i, i32 -8
  %3 = ptrtoint ptr %mdio_bus.0.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mdio_bus.0.i, align 4
  %external.i = getelementptr i8, ptr %.pn.in24.i, i32 8
  %5 = ptrtoint ptr %external.i to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %external.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not.i = icmp eq i8 %6, 0
  br i1 %tobool.not.i, label %if.then.i, label %for.body.i.if.end.i_crit_edge

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mv88e6xxx_g2_irq_mdio_free(ptr noundef %chip, ptr noundef %4) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge
  tail call void @mdiobus_unregister(ptr noundef %4) #16
  tail call void @mdiobus_free(ptr noundef %4) #16
  %cmp.not.i = icmp eq ptr %.pn25.i, %mdios.i
  br i1 %cmp.not.i, label %if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_mdios_unregister.exit

mv88e6xxx_mdios_unregister.exit:                  ; preds = %if.end.i.mv88e6xxx_mdios_unregister.exit_crit_edge, %if.then8.mv88e6xxx_mdios_unregister.exit_crit_edge
  tail call void @of_node_put(ptr noundef nonnull %child.027) #16
  br label %cleanup

for.inc:                                          ; preds = %if.then5.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %call11 = tail call ptr @of_get_next_available_child(ptr noundef %np, ptr noundef nonnull %child.027) #16
  %cmp.not = icmp eq ptr %call11, null
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %mv88e6xxx_mdios_unregister.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %mv88e6xxx_mdios_unregister.exit ], [ %call1, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_register_switch(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %dev1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %0 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev1, align 4
  %call.i = tail call noalias ptr @devm_kmalloc(ptr noundef %1, i32 noundef 84, i32 noundef 3520) #16
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_ports.i, align 4
  %num_ports = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 18
  %6 = ptrtoint ptr %num_ports to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %num_ports, align 4
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 5
  %7 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %chip, ptr %priv, align 4
  %8 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %1, ptr %call.i, align 4
  %ops = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 8
  %9 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @mv88e6xxx_switch_ops, ptr %ops, align 4
  %age_time_coeff = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 13
  %10 = ptrtoint ptr %age_time_coeff to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %age_time_coeff, align 4
  %ageing_time_min = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 11
  %12 = ptrtoint ptr %ageing_time_min to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %ageing_time_min, align 4
  %13 = load i32, ptr %age_time_coeff, align 4
  %mul = mul i32 %13, 255
  %ageing_time_max = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 12
  %14 = ptrtoint ptr %ageing_time_max to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %mul, ptr %ageing_time_max, align 4
  %global2_addr.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 12
  %15 = ptrtoint ptr %global2_addr.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %global2_addr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not = icmp eq i32 %16, 0
  %cond = select i1 %tobool.i.not, i32 0, i32 16
  %num_lag_ids = getelementptr inbounds %struct.dsa_switch, ptr %call.i, i32 0, i32 16
  %17 = ptrtoint ptr %num_lag_ids to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %cond, ptr %num_lag_ids, align 4
  %driver_data.i = getelementptr inbounds %struct.device, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %call.i, ptr %driver_data.i, align 4
  %call8 = tail call i32 @dsa_register_switch(ptr noundef nonnull %call.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mv88e6xxx_mdios_unregister(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %mdios = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16
  %0 = ptrtoint ptr %mdios to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mdios, align 4
  %cmp.not23 = icmp eq ptr %1, %mdios
  br i1 %cmp.not23, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn.in24 = phi ptr [ %.pn25, %if.end.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %.pn.in24 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn25 = load ptr, ptr %.pn.in24, align 4
  %mdio_bus.0 = getelementptr i8, ptr %.pn.in24, i32 -8
  %3 = ptrtoint ptr %mdio_bus.0 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %mdio_bus.0, align 4
  %external = getelementptr i8, ptr %.pn.in24, i32 8
  %5 = ptrtoint ptr %external to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %external, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool.not = icmp eq i8 %6, 0
  br i1 %tobool.not, label %if.then, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @mv88e6xxx_g2_irq_mdio_free(ptr noundef %chip, ptr noundef %4) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  tail call void @mdiobus_unregister(ptr noundef %4) #16
  tail call void @mdiobus_free(ptr noundef %4) #16
  %cmp.not = icmp eq ptr %.pn25, %mdios
  br i1 %cmp.not, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g1_vtu_prob_irq_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g1_atu_prob_irq_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g2_irq_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mv88e6xxx_g1_irq_free(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 20
  %0 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %irq, align 8
  %call = tail call ptr @free_irq(i32 noundef %1, ptr noundef %chip) #16
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  tail call fastcc void @mv88e6xxx_g1_irq_free_common(ptr noundef %chip)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mv88e6xxx_irq_poll_free(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %irq_poll_work = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 31
  %call = tail call zeroext i1 @kthread_cancel_delayed_work_sync(ptr noundef %irq_poll_work) #16
  %kworker = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 30
  %0 = ptrtoint ptr %kworker to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kworker, align 4
  tail call void @kthread_destroy_worker(ptr noundef %1) #16
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  tail call fastcc void @mv88e6xxx_g1_irq_free_common(ptr noundef %chip)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_property_read_variable_u32_array(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @gpiod_set_value_cansleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g1_wait_eeprom_done(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_g1_irq_setup_common(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  %irq.i = alloca i32, align 4
  %reg = alloca i16, align 2
  %mask = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg) #16
  %0 = ptrtoint ptr %reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %reg, align 2, !annotation !350
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mask) #16
  %1 = ptrtoint ptr %mask to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %mask, align 2, !annotation !350
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip, align 8
  %g1_irqs = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %g1_irqs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %g1_irqs, align 4
  %g1_irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18
  %nirqs = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 3
  %6 = ptrtoint ptr %nirqs to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %nirqs, align 8
  %call1.i = tail call ptr @irq_domain_create_simple(ptr noundef null, i32 noundef %5, i32 noundef 0, ptr noundef nonnull @mv88e6xxx_g1_irq_domain_ops, ptr noundef %chip) #16
  %domain = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 2
  %7 = ptrtoint ptr %domain to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call1.i, ptr %domain, align 4
  %tobool.not = icmp eq ptr %call1.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %8 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nirqs, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp83 = icmp sgt i32 %9, 0
  br i1 %cmp83, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.for.end_crit_edge

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %irq.084 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %10 = ptrtoint ptr %domain to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %domain, align 4
  %call.i = tail call i32 @irq_create_mapping_affinity(ptr noundef %11, i32 noundef %irq.084, ptr noundef null) #16
  %inc = add nuw nsw i32 %irq.084, 1
  %12 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nirqs, align 8
  %cmp = icmp slt i32 %inc, %13
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %chip12 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 1
  %14 = call ptr @memcpy(ptr %chip12, ptr @mv88e6xxx_g1_irq_chip, i32 136)
  %15 = ptrtoint ptr %g1_irq to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 -1, ptr %g1_irq, align 8
  %call14 = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 4, ptr noundef nonnull %mask) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %for.end.out_mapping_crit_edge

for.end.out_mapping_crit_edge:                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_mapping

if.end17:                                         ; preds = %for.end
  %16 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nirqs, align 8
  %sub = sub i32 31, %17
  %shr = lshr i32 -1, %sub
  %18 = ptrtoint ptr %mask to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %mask, align 2
  %20 = trunc i32 %shr to i16
  %21 = xor i16 %20, -1
  %conv21 = and i16 %19, %21
  store i16 %conv21, ptr %mask, align 2
  %call22 = call i32 @mv88e6xxx_g1_write(ptr noundef %chip, i32 noundef 4, i16 noundef zeroext %conv21) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end25, label %if.end17.out_disable_crit_edge

if.end17.out_disable_crit_edge:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_disable

if.end25:                                         ; preds = %if.end17
  %call26 = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 0, ptr noundef nonnull %reg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %if.end25.cleanup_crit_edge, label %if.end25.out_disable_crit_edge

if.end25.out_disable_crit_edge:                   ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_disable

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

out_disable:                                      ; preds = %if.end25.out_disable_crit_edge, %if.end17.out_disable_crit_edge
  %err.0 = phi i32 [ %call22, %if.end17.out_disable_crit_edge ], [ %call26, %if.end25.out_disable_crit_edge ]
  %22 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nirqs, align 8
  %sub32 = sub i32 31, %23
  %shr33 = lshr i32 -1, %sub32
  %24 = ptrtoint ptr %mask to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %mask, align 2
  %26 = trunc i32 %shr33 to i16
  %27 = xor i16 %26, -1
  %conv39 = and i16 %25, %27
  store i16 %conv39, ptr %mask, align 2
  %call40 = call i32 @mv88e6xxx_g1_write(ptr noundef %chip, i32 noundef 4, i16 noundef zeroext %conv39) #16
  br label %out_mapping

out_mapping:                                      ; preds = %out_disable, %for.end.out_mapping_crit_edge
  %err.1 = phi i32 [ %call14, %for.end.out_mapping_crit_edge ], [ %err.0, %out_disable ]
  br label %for.body44

for.body44:                                       ; preds = %irq_find_mapping.exit.for.body44_crit_edge, %out_mapping
  %irq.185 = phi i32 [ 0, %out_mapping ], [ %inc49, %irq_find_mapping.exit.for.body44_crit_edge ]
  %28 = ptrtoint ptr %domain to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %domain, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %irq.i) #16
  %30 = ptrtoint ptr %irq.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 -1, ptr %irq.i, align 4, !annotation !350
  %call.i82 = call ptr @__irq_resolve_mapping(ptr noundef %29, i32 noundef %irq.185, ptr noundef nonnull %irq.i) #16
  %tobool.not.i = icmp eq ptr %call.i82, null
  br i1 %tobool.not.i, label %for.body44.irq_find_mapping.exit_crit_edge, label %if.then.i

for.body44.irq_find_mapping.exit_crit_edge:       ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #18
  br label %irq_find_mapping.exit

if.then.i:                                        ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #18
  %31 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %irq.i, align 4
  br label %irq_find_mapping.exit

irq_find_mapping.exit:                            ; preds = %if.then.i, %for.body44.irq_find_mapping.exit_crit_edge
  %retval.0.i = phi i32 [ %32, %if.then.i ], [ 0, %for.body44.irq_find_mapping.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %irq.i) #16
  call void @irq_dispose_mapping(i32 noundef %retval.0.i) #16
  %inc49 = add nuw nsw i32 %irq.185, 1
  %exitcond.not = icmp eq i32 %inc49, 16
  br i1 %exitcond.not, label %for.end50, label %irq_find_mapping.exit.for.body44_crit_edge

irq_find_mapping.exit.for.body44_crit_edge:       ; preds = %irq_find_mapping.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body44

for.end50:                                        ; preds = %irq_find_mapping.exit
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %domain to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %domain, align 4
  call void @irq_domain_remove(ptr noundef %34) #16
  br label %cleanup

cleanup:                                          ; preds = %for.end50, %if.end25.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.1, %for.end50 ], [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end25.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mask) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg) #16
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @request_threaded_irq(i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_g1_irq_thread_fn(i32 noundef %irq, ptr noundef %dev_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_g1_irq_thread_work(ptr noundef %dev_id)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mv88e6xxx_g1_irq_free_common(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  %irq.i = alloca i32, align 4
  %mask = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %mask) #16
  %0 = ptrtoint ptr %mask to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %mask, align 2, !annotation !350
  %call = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 4, ptr noundef nonnull %mask) #16
  %nirqs = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 3
  %1 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %nirqs, align 8
  %sub = sub i32 31, %2
  %shr = lshr i32 -1, %sub
  %3 = ptrtoint ptr %mask to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %mask, align 2
  %5 = trunc i32 %shr to i16
  %6 = xor i16 %5, -1
  %conv2 = and i16 %4, %6
  store i16 %conv2, ptr %mask, align 2
  %call3 = call i32 @mv88e6xxx_g1_write(ptr noundef %chip, i32 noundef 4, i16 noundef zeroext %conv2) #16
  %7 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nirqs, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp18 = icmp sgt i32 %8, 0
  br i1 %cmp18, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %domain = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 2
  br label %for.body

for.body:                                         ; preds = %irq_find_mapping.exit.for.body_crit_edge, %for.body.lr.ph
  %irq.019 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %irq_find_mapping.exit.for.body_crit_edge ]
  %9 = ptrtoint ptr %domain to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %domain, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %irq.i) #16
  %11 = ptrtoint ptr %irq.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 -1, ptr %irq.i, align 4, !annotation !350
  %call.i = call ptr @__irq_resolve_mapping(ptr noundef %10, i32 noundef %irq.019, ptr noundef nonnull %irq.i) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %for.body.irq_find_mapping.exit_crit_edge, label %if.then.i

for.body.irq_find_mapping.exit_crit_edge:         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %irq_find_mapping.exit

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %irq.i, align 4
  br label %irq_find_mapping.exit

irq_find_mapping.exit:                            ; preds = %if.then.i, %for.body.irq_find_mapping.exit_crit_edge
  %retval.0.i = phi i32 [ %13, %if.then.i ], [ 0, %for.body.irq_find_mapping.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %irq.i) #16
  call void @irq_dispose_mapping(i32 noundef %retval.0.i) #16
  %inc = add nuw nsw i32 %irq.019, 1
  %14 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nirqs, align 8
  %cmp = icmp slt i32 %inc, %15
  br i1 %cmp, label %irq_find_mapping.exit.for.body_crit_edge, label %irq_find_mapping.exit.for.end_crit_edge

irq_find_mapping.exit.for.end_crit_edge:          ; preds = %irq_find_mapping.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

irq_find_mapping.exit.for.body_crit_edge:         ; preds = %irq_find_mapping.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %irq_find_mapping.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %domain10 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 2
  %16 = ptrtoint ptr %domain10 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %domain10, align 4
  call void @irq_domain_remove(ptr noundef %17) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %mask) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_read(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_write(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_dispose_mapping(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_domain_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @irq_domain_create_simple(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_g1_irq_domain_map(ptr nocapture noundef readonly %d, i32 noundef %irq, i32 noundef %hwirq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %host_data = getelementptr inbounds %struct.irq_domain, ptr %d, i32 0, i32 3
  %0 = ptrtoint ptr %host_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %host_data, align 4
  %call = tail call i32 @irq_set_chip_data(i32 noundef %irq, ptr noundef %1) #16
  %chip2 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 18, i32 1
  tail call void @irq_set_chip_and_handler_name(i32 noundef %irq, ptr noundef %chip2, ptr noundef nonnull @handle_level_irq, ptr noundef null) #16
  tail call void @irq_modify_status(i32 noundef %irq, i32 noundef 0, i32 noundef 1024) #16
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_domain_xlate_twocell(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_set_chip_data(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @handle_level_irq(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_set_chip_and_handler_name(i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @irq_modify_status(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_create_mapping_affinity(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6xxx_g1_irq_mask(ptr nocapture noundef readonly %d) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq, align 4
  %shl = shl nuw i32 1, %3
  %g1_irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 18
  %4 = ptrtoint ptr %g1_irq to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %g1_irq, align 8
  %6 = trunc i32 %shl to i16
  %conv1 = or i16 %5, %6
  store i16 %conv1, ptr %g1_irq, align 8
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @mv88e6xxx_g1_irq_unmask(ptr nocapture noundef readonly %d) #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %hwirq = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 2
  %2 = ptrtoint ptr %hwirq to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hwirq, align 4
  %shl = shl nuw i32 1, %3
  %g1_irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 18
  %4 = ptrtoint ptr %g1_irq to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %g1_irq, align 8
  %6 = trunc i32 %shl to i16
  %7 = xor i16 %6, -1
  %conv1 = and i16 %5, %7
  store i16 %conv1, ptr %g1_irq, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_g1_irq_bus_lock(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_g1_irq_bus_sync_unlock(ptr nocapture noundef readonly %d) #0 align 64 {
entry:
  %reg = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %chip_data.i = getelementptr inbounds %struct.irq_data, ptr %d, i32 0, i32 7
  %0 = ptrtoint ptr %chip_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip_data.i, align 4
  %nirqs = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 18, i32 3
  %2 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nirqs, align 8
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg) #16
  %4 = ptrtoint ptr %reg to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %reg, align 2, !annotation !350
  %call1 = call i32 @mv88e6xxx_g1_read(ptr noundef %1, i32 noundef 4, ptr noundef nonnull %reg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %sub = sub i32 31, %3
  %shr = lshr i32 -1, %sub
  %g1_irq = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 18
  %5 = ptrtoint ptr %reg to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %reg, align 2
  %7 = trunc i32 %shr to i16
  %8 = xor i16 %7, -1
  %conv5 = and i16 %6, %8
  %9 = ptrtoint ptr %g1_irq to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %g1_irq, align 8
  %conv7 = zext i16 %10 to i32
  %neg8 = xor i32 %conv7, -1
  %and10 = and i32 %shr, %neg8
  %11 = trunc i32 %and10 to i16
  %conv12 = or i16 %conv5, %11
  store i16 %conv12, ptr %reg, align 2
  %call13 = call i32 @mv88e6xxx_g1_write(ptr noundef %1, i32 noundef 4, i16 noundef zeroext %conv12) #16
  br label %out

out:                                              ; preds = %if.end, %entry.out_crit_edge
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__irq_resolve_mapping(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__irq_set_lockdep_class(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_g1_irq_thread_work(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  %irq.i = alloca i32, align 4
  %reg = alloca i16, align 2
  %ctl1 = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg) #16
  %0 = ptrtoint ptr %reg to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %reg, align 2, !annotation !350
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %ctl1) #16
  %1 = ptrtoint ptr %ctl1 to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %ctl1, align 2, !annotation !350
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 0, ptr noundef nonnull %reg) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.body.preheader, label %entry.out_crit_edge

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

do.body.preheader:                                ; preds = %entry
  %nirqs = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 3
  %domain = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 18, i32 2
  br label %do.body

do.body:                                          ; preds = %if.end14.do.body_crit_edge, %do.body.preheader
  %nhandled.0 = phi i32 [ %nhandled.1.lcssa, %if.end14.do.body_crit_edge ], [ 0, %do.body.preheader ]
  %2 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nirqs, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp49.not = icmp eq i32 %3, 0
  br i1 %cmp49.not, label %do.body.for.end_crit_edge, label %do.body.for.body_crit_edge

do.body.for.body_crit_edge:                       ; preds = %do.body
  br label %for.body

do.body.for.end_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.body.for.body_crit_edge
  %n.051 = phi i32 [ %inc6, %for.inc.for.body_crit_edge ], [ 0, %do.body.for.body_crit_edge ]
  %nhandled.150 = phi i32 [ %nhandled.2, %for.inc.for.body_crit_edge ], [ %nhandled.0, %do.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %reg to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %reg, align 2
  %conv = zext i16 %5 to i32
  %shl = shl nuw i32 1, %n.051
  %and = and i32 %shl, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %for.body.for.inc_crit_edge, label %if.then2

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then2:                                         ; preds = %for.body
  %6 = ptrtoint ptr %domain to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %domain, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %irq.i) #16
  %8 = ptrtoint ptr %irq.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 -1, ptr %irq.i, align 4, !annotation !350
  %call.i = call ptr @__irq_resolve_mapping(ptr noundef %7, i32 noundef %n.051, ptr noundef nonnull %irq.i) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then2.irq_find_mapping.exit_crit_edge, label %if.then.i

if.then2.irq_find_mapping.exit_crit_edge:         ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %irq_find_mapping.exit

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %irq.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %irq.i, align 4
  br label %irq_find_mapping.exit

irq_find_mapping.exit:                            ; preds = %if.then.i, %if.then2.irq_find_mapping.exit_crit_edge
  %retval.0.i = phi i32 [ %10, %if.then.i ], [ 0, %if.then2.irq_find_mapping.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %irq.i) #16
  call void @handle_nested_irq(i32 noundef %retval.0.i) #16
  %inc = add i32 %nhandled.150, 1
  br label %for.inc

for.inc:                                          ; preds = %irq_find_mapping.exit, %for.body.for.inc_crit_edge
  %nhandled.2 = phi i32 [ %inc, %irq_find_mapping.exit ], [ %nhandled.150, %for.body.for.inc_crit_edge ]
  %inc6 = add nuw i32 %n.051, 1
  %11 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nirqs, align 8
  %cmp = icmp ult i32 %inc6, %12
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.body.for.end_crit_edge
  %nhandled.1.lcssa = phi i32 [ %nhandled.0, %do.body.for.end_crit_edge ], [ %nhandled.2, %for.inc.for.end_crit_edge ]
  call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call7 = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 4, ptr noundef nonnull %ctl1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %unlock, label %unlock.thread

unlock.thread:                                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %out

unlock:                                           ; preds = %for.end
  %call11 = call i32 @mv88e6xxx_g1_read(ptr noundef %chip, i32 noundef 0, ptr noundef nonnull %reg) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %unlock.out_crit_edge

unlock.out_crit_edge:                             ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end14:                                         ; preds = %unlock
  %13 = ptrtoint ptr %nirqs to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nirqs, align 8
  %sub = sub i32 31, %14
  %shr = lshr i32 -1, %sub
  %15 = ptrtoint ptr %ctl1 to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %ctl1, align 2
  %17 = trunc i32 %shr to i16
  %conv20 = and i16 %16, %17
  store i16 %conv20, ptr %ctl1, align 2
  %18 = ptrtoint ptr %reg to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %reg, align 2
  %and2342 = and i16 %conv20, %19
  %tobool24.not = icmp eq i16 %and2342, 0
  br i1 %tobool24.not, label %if.end14.out_crit_edge, label %if.end14.do.body_crit_edge

if.end14.do.body_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.end14.out_crit_edge:                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

out:                                              ; preds = %if.end14.out_crit_edge, %unlock.out_crit_edge, %unlock.thread, %entry.out_crit_edge
  %nhandled.3 = phi i32 [ 0, %entry.out_crit_edge ], [ %nhandled.1.lcssa, %unlock.thread ], [ %nhandled.1.lcssa, %unlock.out_crit_edge ], [ %nhandled.1.lcssa, %if.end14.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nhandled.3)
  %cmp25.not = icmp ne i32 %nhandled.3, 0
  %cond = zext i1 %cmp25.not to i32
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %ctl1) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg) #16
  ret i32 %cond
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @handle_nested_irq(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_irq_poll(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -1120
  %call = tail call fastcc i32 @mv88e6xxx_g1_irq_thread_work(ptr noundef %add.ptr)
  %kworker = getelementptr i8, ptr %work, i32 -4
  %0 = ptrtoint ptr %kworker to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kworker, align 4
  %call2 = tail call zeroext i1 @kthread_queue_delayed_work(ptr noundef %1, ptr noundef %work, i32 noundef 10) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kthread_delayed_work_timer_fn(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kthread_create_worker(i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_queue_delayed_work(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_child_by_name(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_mdio_register(ptr noundef %chip, ptr noundef %np, i1 noundef zeroext %external) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %frombool = zext i1 %external to i8
  br i1 %external, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then:                                          ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call i32 @mv88e6xxx_g2_scratch_gpio_set_smi(ptr noundef %chip, i1 noundef zeroext true) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %if.then.if.end3_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.end3:                                          ; preds = %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %call4 = tail call ptr @mdiobus_alloc_size(i32 noundef 20) #16
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.end3.cleanup_crit_edge, label %if.end7

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %priv = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call4, ptr %1, align 4
  %chip9 = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %chip9 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %chip, ptr %chip9, align 4
  %list = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %list, ptr %list, align 4
  %prev.i = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 2, i32 1
  %5 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %list, ptr %prev.i, align 4
  %external11 = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %external11 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %frombool, ptr %external11, align 4
  %tobool13.not = icmp eq ptr %np, null
  br i1 %tobool13.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %full_name = getelementptr inbounds %struct.device_node, ptr %np, i32 0, i32 2
  %7 = ptrtoint ptr %full_name to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %full_name, align 4
  %name = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 1
  %9 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %name, align 4
  %id = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 2
  %call15 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %id, i32 noundef 61, ptr noundef nonnull @.str.60, ptr noundef nonnull %np)
  br label %if.end20

if.else:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %name16 = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 1
  %10 = ptrtoint ptr %name16 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @.str.61, ptr %name16, align 4
  %id17 = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 2
  %11 = load i32, ptr @mv88e6xxx_mdio_register.index, align 4
  %inc = add i32 %11, 1
  store i32 %inc, ptr @mv88e6xxx_mdio_register.index, align 4
  %call19 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %id17, i32 noundef 61, ptr noundef nonnull @.str.62, i32 noundef %11)
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then14
  %read = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 4
  %12 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr @mv88e6xxx_mdio_read, ptr %read, align 4
  %write = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 5
  %13 = ptrtoint ptr %write to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @mv88e6xxx_mdio_write, ptr %write, align 8
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %14 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev, align 4
  %parent = getelementptr inbounds %struct.mii_bus, ptr %call4, i32 0, i32 9
  %16 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %parent, align 4
  br i1 %external, label %if.end27, label %if.then22

if.then22:                                        ; preds = %if.end20
  %call23 = tail call i32 @mv88e6xxx_g2_irq_mdio_setup(ptr noundef %chip, ptr noundef nonnull %call4) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %if.end27.thread, label %if.then22.out_crit_edge

if.then22.out_crit_edge:                          ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end27:                                         ; preds = %if.end20
  %call28 = tail call i32 @of_mdiobus_register(ptr noundef nonnull %call4, ptr noundef %np) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.then34.critedge, label %if.end27.do.end_crit_edge

if.end27.do.end_crit_edge:                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.end27.thread:                                  ; preds = %if.then22
  %call2885 = tail call i32 @of_mdiobus_register(ptr noundef nonnull %call4, ptr noundef %np) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2885)
  %tobool29.not86 = icmp eq i32 %call2885, 0
  br i1 %tobool29.not86, label %if.else36, label %if.end27.thread.do.end_crit_edge

if.end27.thread.do.end_crit_edge:                 ; preds = %if.end27.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end:                                           ; preds = %if.end27.thread.do.end_crit_edge, %if.end27.do.end_crit_edge
  %call2887 = phi i32 [ %call2885, %if.end27.thread.do.end_crit_edge ], [ %call28, %if.end27.do.end_crit_edge ]
  %17 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %18, ptr noundef nonnull @.str.63, i32 noundef %call2887) #19
  tail call void @mv88e6xxx_g2_irq_mdio_free(ptr noundef %chip, ptr noundef nonnull %call4) #16
  br label %out

if.then34.critedge:                               ; preds = %if.end27
  %mdios = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16
  %prev.i81 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16, i32 1
  %19 = ptrtoint ptr %prev.i81 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i81, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %20, ptr noundef %mdios) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then34.critedge.cleanup_crit_edge

if.then34.critedge.cleanup_crit_edge:             ; preds = %if.then34.critedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i:                                       ; preds = %if.then34.critedge
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %prev.i81 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %list, ptr %prev.i81, align 4
  %22 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %mdios, ptr %list, align 4
  %23 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %list, ptr %20, align 4
  br label %cleanup

if.else36:                                        ; preds = %if.end27.thread
  %mdios38 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 16
  %25 = ptrtoint ptr %mdios38 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %mdios38, align 4
  %call.i.i82 = tail call zeroext i1 @__list_add_valid(ptr noundef %list, ptr noundef %mdios38, ptr noundef %26) #16
  br i1 %call.i.i82, label %if.end.i.i84, label %if.else36.cleanup_crit_edge

if.else36.cleanup_crit_edge:                      ; preds = %if.else36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i84:                                     ; preds = %if.else36
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %list, ptr %prev1.i.i, align 4
  %28 = ptrtoint ptr %list to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %26, ptr %list, align 4
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %mdios38, ptr %prev.i, align 4
  %30 = ptrtoint ptr %mdios38 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %list, ptr %mdios38, align 4
  br label %cleanup

out:                                              ; preds = %do.end, %if.then22.out_crit_edge
  %err.0 = phi i32 [ %call2887, %do.end ], [ %call23, %if.then22.out_crit_edge ]
  tail call void @mdiobus_free(ptr noundef nonnull %call4) #16
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.i.i84, %if.else36.cleanup_crit_edge, %if.end.i.i, %if.then34.critedge.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %out ], [ %call, %if.then.cleanup_crit_edge ], [ -12, %if.end3.cleanup_crit_edge ], [ 0, %if.then34.critedge.cleanup_crit_edge ], [ 0, %if.end.i.i ], [ 0, %if.else36.cleanup_crit_edge ], [ 0, %if.end.i.i84 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_next_available_child(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_device_is_compatible(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_scratch_gpio_set_smi(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mdiobus_alloc_size(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_mdio_read(ptr noundef %bus, i32 noundef %phy, i32 noundef %reg) #0 align 64 {
entry:
  %val = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.mii_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 8
  %chip1 = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %chip1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip1, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %val) #16
  %4 = ptrtoint ptr %val to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %val, align 2, !annotation !350
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %3, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %phy_read = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %8, i32 0, i32 7
  %9 = ptrtoint ptr %phy_read to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %phy_read, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %3, align 8
  %ops3 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %12, i32 0, i32 22
  %13 = ptrtoint ptr %ops3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops3, align 4
  %phy_read4 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %phy_read4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %phy_read4, align 4
  %call = call i32 %16(ptr noundef %3, ptr noundef %bus, i32 noundef %phy, i32 noundef %reg, ptr noundef nonnull %val) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %reg)
  %cmp = icmp eq i32 %reg, 3
  br i1 %cmp, label %land.lhs.true, label %if.end.if.end19_crit_edge

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end
  %17 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %val, align 2
  %19 = and i16 %18, 1008
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %19)
  %tobool5.not = icmp eq i16 %19, 0
  br i1 %tobool5.not, label %land.lhs.true6, label %land.lhs.true.if.end19_crit_edge

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

land.lhs.true6:                                   ; preds = %land.lhs.true
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %3, align 8
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %23)
  %cmp8 = icmp ult i32 %23, 13
  br i1 %cmp8, label %if.then10, label %land.lhs.true6.if.end19_crit_edge

land.lhs.true6.if.end19_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then10:                                        ; preds = %land.lhs.true6
  %24 = lshr i32 1791, %23
  %25 = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool13.not.not = icmp eq i32 %25, 0
  br i1 %tobool13.not.not, label %if.then14, label %if.then10.if.end19_crit_edge

if.then10.if.end19_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then14:                                        ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx = getelementptr [13 x i16], ptr @family_prod_id_table, i32 0, i32 %23
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %arrayidx, align 2
  %28 = lshr i16 %27, 4
  %or37 = or i16 %28, %18
  %29 = ptrtoint ptr %val to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %or37, ptr %val, align 2
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %if.then10.if.end19_crit_edge, %land.lhs.true6.if.end19_crit_edge, %land.lhs.true.if.end19_crit_edge, %if.end.if.end19_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool20.not = icmp eq i32 %call, 0
  br i1 %tobool20.not, label %cond.false, label %if.end19.cleanup_crit_edge

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.false:                                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %val to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %val, align 2
  %conv21 = zext i16 %31 to i32
  br label %cleanup

cleanup:                                          ; preds = %cond.false, %if.end19.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %entry.cleanup_crit_edge ], [ %conv21, %cond.false ], [ %call, %if.end19.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_mdio_write(ptr noundef %bus, i32 noundef %phy, i32 noundef %reg, i16 noundef zeroext %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.mii_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 8
  %chip1 = getelementptr inbounds %struct.mv88e6xxx_mdio_bus, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %chip1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip1, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops, align 4
  %phy_write = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %phy_write to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %phy_write, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %3, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 8
  %ops3 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %ops3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops3, align 4
  %phy_write4 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %phy_write4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %phy_write4, align 4
  %call = tail call i32 %15(ptr noundef %3, ptr noundef %bus, i32 noundef %phy, i32 noundef %reg, i16 noundef zeroext %val) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_irq_mdio_setup(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_mdiobus_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_g2_irq_mdio_free(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdiobus_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dsa_register_switch(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_get_tag_protocol(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %m) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %tag_protocol = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %tag_protocol to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tag_protocol, align 4
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_change_tag_protocol(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %proto) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = zext i32 %proto to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.117)
  switch i32 %proto, label %entry.cleanup_crit_edge [
    i32 4, label %sw.bb
    i32 3, label %entry.sw.epilog3_crit_edge
  ]

entry.sw.epilog3_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 8
  %edsa_support = getelementptr inbounds %struct.mv88e6xxx_info, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %edsa_support to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %edsa_support, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.118)
  switch i32 %6, label %sw.bb.sw.epilog3_crit_edge [
    i32 0, label %sw.bb.cleanup_crit_edge
    i32 1, label %do.end
  ]

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.sw.epilog3_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog3

do.end:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %9, ptr noundef nonnull @.str.65) #19
  br label %sw.epilog3

sw.epilog3:                                       ; preds = %do.end, %sw.bb.sw.epilog3_crit_edge, %entry.sw.epilog3_crit_edge
  %tag_protocol = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %tag_protocol to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tag_protocol, align 4
  store i32 %proto, ptr %tag_protocol, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_setup_port_mode(ptr noundef %1, i32 noundef %port)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %sw.epilog3.cleanup_crit_edge, label %if.then

sw.epilog3.cleanup_crit_edge:                     ; preds = %sw.epilog3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %sw.epilog3
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %tag_protocol to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %tag_protocol, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then, %sw.epilog3.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -93, %sw.bb.cleanup_crit_edge ], [ -93, %entry.cleanup_crit_edge ], [ %call, %if.then ], [ 0, %sw.epilog3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_setup(ptr noundef %ds) #0 align 64 {
entry:
  %addr.i = alloca [6 x i8], align 1
  %cmode = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %cmode) #16
  %2 = ptrtoint ptr %cmode to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %cmode, align 1, !annotation !350
  %ds1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 2
  %3 = ptrtoint ptr %ds1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %ds, ptr %ds1, align 8
  %mdios.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 16
  %4 = ptrtoint ptr %mdios.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mdios.i, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -8
  %tobool.not.i = icmp eq ptr %add.ptr.i, null
  br i1 %tobool.not.i, label %entry.mv88e6xxx_default_mdio_bus.exit_crit_edge, label %if.end.i

entry.mv88e6xxx_default_mdio_bus.exit_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_default_mdio_bus.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %add.ptr.i, align 4
  br label %mv88e6xxx_default_mdio_bus.exit

mv88e6xxx_default_mdio_bus.exit:                  ; preds = %if.end.i, %entry.mv88e6xxx_default_mdio_bus.exit_crit_edge
  %retval.0.i = phi ptr [ %7, %if.end.i ], [ null, %entry.mv88e6xxx_default_mdio_bus.exit_crit_edge ]
  %slave_mii_bus = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 10
  %8 = ptrtoint ptr %slave_mii_bus to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %retval.0.i, ptr %slave_mii_bus, align 4
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 8
  %pvt.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %10, i32 0, i32 16
  %11 = ptrtoint ptr %pvt.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %pvt.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.i.not = icmp eq i8 %12, 0
  br i1 %tobool.i.not, label %mv88e6xxx_default_mdio_bus.exit.if.end_crit_edge, label %if.then

mv88e6xxx_default_mdio_bus.exit.if.end_crit_edge: ; preds = %mv88e6xxx_default_mdio_bus.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %mv88e6xxx_default_mdio_bus.exit
  call void @__sanitizer_cov_trace_pc() #18
  %dst = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %13 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dst, align 4
  %last_switch = getelementptr inbounds %struct.dsa_switch_tree, ptr %14, i32 0, i32 12
  %15 = ptrtoint ptr %last_switch to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %last_switch, align 4
  %sub3 = sub i32 31, %16
  %max_num_bridges = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 17
  %17 = ptrtoint ptr %max_num_bridges to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %sub3, ptr %max_num_bridges, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %mv88e6xxx_default_mdio_bus.exit.if.end_crit_edge
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %19, i32 0, i32 22
  %20 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %tobool.not = icmp eq ptr %23, null
  br i1 %tobool.not, label %if.end.if.end12_crit_edge, label %if.then4

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.then4:                                         ; preds = %if.end
  %call8 = tail call i32 %23(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.then4.if.end12_crit_edge, label %if.then4.unlock.thread_crit_edge

if.then4.unlock.thread_crit_edge:                 ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then4.if.end12_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.end12:                                         ; preds = %if.then4.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %24 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %1, align 8
  %num_ports.i277 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %25, i32 0, i32 5
  %26 = ptrtoint ptr %num_ports.i277 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %num_ports.i277, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp278.not = icmp eq i32 %27, 0
  br i1 %cmp278.not, label %if.end12.for.end_crit_edge, label %if.end12.for.body_crit_edge

if.end12.for.body_crit_edge:                      ; preds = %if.end12
  br label %for.body

if.end12.for.end_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.end12.for.body_crit_edge
  %28 = phi ptr [ %37, %for.inc.for.body_crit_edge ], [ %25, %if.end12.for.body_crit_edge ]
  %i.0279 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %if.end12.for.body_crit_edge ]
  %ops15 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %ops15 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops15, align 4
  %port_get_cmode = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %30, i32 0, i32 32
  %31 = ptrtoint ptr %port_get_cmode to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %port_get_cmode, align 4
  %tobool16.not = icmp eq ptr %32, null
  br i1 %tobool16.not, label %for.body.for.inc_crit_edge, label %if.then17

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then17:                                        ; preds = %for.body
  %call21 = call i32 %32(ptr noundef %1, i32 noundef %i.0279, ptr noundef nonnull %cmode) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %if.then17.unlock.thread_crit_edge

if.then17.unlock.thread_crit_edge:                ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end24:                                         ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #18
  %33 = ptrtoint ptr %cmode to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %cmode, align 1
  %cmode25 = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %i.0279, i32 10
  %35 = ptrtoint ptr %cmode25 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %34, ptr %cmode25, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end24, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %i.0279, 1
  %36 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %1, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %37, i32 0, i32 5
  %38 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_ports.i, align 4
  %cmp = icmp ult i32 %inc, %39
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %if.end12.for.end_crit_edge
  %.lcssa275 = phi ptr [ %25, %if.end12.for.end_crit_edge ], [ %37, %for.inc.for.end_crit_edge ]
  %max_vid.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %.lcssa275, i32 0, i32 8
  %40 = ptrtoint ptr %max_vid.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %max_vid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i207 = icmp eq i32 %41, 0
  br i1 %tobool.not.i207, label %for.end.for.cond31.preheader_crit_edge, label %mv88e6xxx_vtu_setup.exit

for.end.for.cond31.preheader_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond31.preheader

mv88e6xxx_vtu_setup.exit:                         ; preds = %for.end
  %call1.i = call i32 @mv88e6xxx_g1_vtu_flush(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool28.not = icmp eq i32 %call1.i, 0
  br i1 %tobool28.not, label %mv88e6xxx_vtu_setup.exit.for.cond31.preheader_crit_edge, label %mv88e6xxx_vtu_setup.exit.unlock.thread_crit_edge

mv88e6xxx_vtu_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_vtu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_vtu_setup.exit.for.cond31.preheader_crit_edge: ; preds = %mv88e6xxx_vtu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond31.preheader

for.cond31.preheader:                             ; preds = %mv88e6xxx_vtu_setup.exit.for.cond31.preheader_crit_edge, %for.end.for.cond31.preheader_crit_edge
  %42 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %1, align 8
  %num_ports.i210281 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %43, i32 0, i32 5
  %44 = ptrtoint ptr %num_ports.i210281 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %num_ports.i210281, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp33282.not = icmp eq i32 %45, 0
  br i1 %cmp33282.not, label %for.cond31.preheader.if.end51_crit_edge, label %for.body34.lr.ph

for.cond31.preheader.if.end51_crit_edge:          ; preds = %for.cond31.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end51

for.body34.lr.ph:                                 ; preds = %for.cond31.preheader
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  br label %for.body34

for.body34:                                       ; preds = %for.inc45.for.body34_crit_edge, %for.body34.lr.ph
  %46 = phi ptr [ %43, %for.body34.lr.ph ], [ %148, %for.inc45.for.body34_crit_edge ]
  %i.1283 = phi i32 [ 0, %for.body34.lr.ph ], [ %inc46, %for.inc45.for.body34_crit_edge ]
  %47 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %for.body34.dsa_is_unused_port.exit_crit_edge, label %for.body34.for.body.i.i_crit_edge

for.body34.for.body.i.i_crit_edge:                ; preds = %for.body34
  br label %for.body.i.i

for.body34.dsa_is_unused_port.exit_crit_edge:     ; preds = %for.body34
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_unused_port.exit

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body34.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %for.body34.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %50 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %51, %ds
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %52 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %53, i32 %i.1283)
  %cmp5.i.i = icmp eq i32 %53, %i.1283
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %54 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_is_unused_port.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_is_unused_port.exit_crit_edge:    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_unused_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_unused_port.exit

dsa_is_unused_port.exit:                          ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_is_unused_port.exit_crit_edge, %for.body34.dsa_is_unused_port.exit_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.body34.dsa_is_unused_port.exit_crit_edge ], [ null, %for.inc.i.i.dsa_is_unused_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %55 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %56)
  %cmp.i = icmp eq i32 %56, 0
  br i1 %cmp.i, label %dsa_is_unused_port.exit.for.inc45_crit_edge, label %if.end37

dsa_is_unused_port.exit.for.inc45_crit_edge:      ; preds = %dsa_is_unused_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc45

if.end37:                                         ; preds = %dsa_is_unused_port.exit
  %invalid_port_mask.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %46, i32 0, i32 17
  %57 = ptrtoint ptr %invalid_port_mask.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %invalid_port_mask.i, align 4
  %shl.i = shl nuw i32 1, %i.1283
  %and.i = and i32 %58, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %cmp.i211.not = icmp eq i32 %and.i, 0
  br i1 %cmp.i211.not, label %if.end40, label %do.end

do.end:                                           ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %59 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %dev, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %60, ptr noundef nonnull @.str.68, i32 noundef %i.1283) #19
  br label %unlock.thread

if.end40:                                         ; preds = %if.end37
  %61 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ds1, align 8
  %arrayidx.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %i.1283
  %63 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %1, ptr %arrayidx.i, align 8
  %port5.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %i.1283, i32 1
  %64 = ptrtoint ptr %port5.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %i.1283, ptr %port5.i, align 4
  %dst1.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %62, i32 0, i32 1
  %65 = ptrtoint ptr %dst1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %dst1.i.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %.pn20.i.i.i = load ptr, ptr %ports.i.i.i, align 4
  %cmp.not21.i.i.i = icmp eq ptr %.pn20.i.i.i, %ports.i.i.i
  br i1 %cmp.not21.i.i.i, label %dsa_is_cpu_port.exit.thread.i, label %if.end40.for.body.i.i.i_crit_edge

if.end40.for.body.i.i.i_crit_edge:                ; preds = %if.end40
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end40.for.body.i.i.i_crit_edge
  %.pn22.i.i.i = phi ptr [ %.pn.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn20.i.i.i, %if.end40.for.body.i.i.i_crit_edge ]
  %ds3.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -432
  %68 = ptrtoint ptr %ds3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %ds3.i.i.i, align 4
  %cmp4.i.i.i = icmp eq ptr %69, %62
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %index.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -428
  %70 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %index.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %i.1283)
  %cmp5.i.i.i = icmp eq i32 %71, %i.1283
  br i1 %cmp5.i.i.i, label %cleanup.split.loop.exit18.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %72 = ptrtoint ptr %.pn22.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %.pn.i.i.i = load ptr, ptr %.pn22.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %ports.i.i.i
  br i1 %cmp.not.i.i.i, label %for.inc.i.i.i.dsa_is_cpu_port.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.inc.i.i.i.dsa_is_cpu_port.exit.i_crit_edge:   ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit.i

cleanup.split.loop.exit18.i.i.i:                  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -448
  br label %dsa_is_cpu_port.exit.i

dsa_is_cpu_port.exit.i:                           ; preds = %cleanup.split.loop.exit18.i.i.i, %for.inc.i.i.i.dsa_is_cpu_port.exit.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %dp.0.le.i.i.i, %cleanup.split.loop.exit18.i.i.i ], [ null, %for.inc.i.i.i.dsa_is_cpu_port.exit.i_crit_edge ]
  %type.i.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i.i, i32 0, i32 6
  %73 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %74)
  %cmp.i.i = icmp eq i32 %74, 1
  br i1 %cmp.i.i, label %dsa_is_cpu_port.exit.i.if.then.i_crit_edge, label %dsa_is_cpu_port.exit.i.for.body.i.i262.i_crit_edge

dsa_is_cpu_port.exit.i.for.body.i.i262.i_crit_edge: ; preds = %dsa_is_cpu_port.exit.i
  br label %for.body.i.i262.i

dsa_is_cpu_port.exit.i.if.then.i_crit_edge:       ; preds = %dsa_is_cpu_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

dsa_is_cpu_port.exit.thread.i:                    ; preds = %if.end40
  call void @__asan_load4_noabort(i32 24)
  %75 = load i32, ptr inttoptr (i32 24 to ptr), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %75)
  %cmp.i295.i = icmp eq i32 %75, 1
  br i1 %cmp.i295.i, label %dsa_is_cpu_port.exit.thread.i.if.then.i_crit_edge, label %dsa_is_cpu_port.exit.thread.i.dsa_is_dsa_port.exit.i_crit_edge

dsa_is_cpu_port.exit.thread.i.dsa_is_dsa_port.exit.i_crit_edge: ; preds = %dsa_is_cpu_port.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit.i

dsa_is_cpu_port.exit.thread.i.if.then.i_crit_edge: ; preds = %dsa_is_cpu_port.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

for.body.i.i262.i:                                ; preds = %for.inc.i.i268.i.for.body.i.i262.i_crit_edge, %dsa_is_cpu_port.exit.i.for.body.i.i262.i_crit_edge
  %.pn22.i.i259.i = phi ptr [ %.pn.i.i266.i, %for.inc.i.i268.i.for.body.i.i262.i_crit_edge ], [ %.pn20.i.i.i, %dsa_is_cpu_port.exit.i.for.body.i.i262.i_crit_edge ]
  %ds3.i.i260.i = getelementptr i8, ptr %.pn22.i.i259.i, i32 -432
  %76 = ptrtoint ptr %ds3.i.i260.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %ds3.i.i260.i, align 4
  %cmp4.i.i261.i = icmp eq ptr %77, %62
  br i1 %cmp4.i.i261.i, label %land.lhs.true.i.i265.i, label %for.body.i.i262.i.for.inc.i.i268.i_crit_edge

for.body.i.i262.i.for.inc.i.i268.i_crit_edge:     ; preds = %for.body.i.i262.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i268.i

land.lhs.true.i.i265.i:                           ; preds = %for.body.i.i262.i
  %index.i.i263.i = getelementptr i8, ptr %.pn22.i.i259.i, i32 -428
  %78 = ptrtoint ptr %index.i.i263.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %index.i.i263.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %79, i32 %i.1283)
  %cmp5.i.i264.i = icmp eq i32 %79, %i.1283
  br i1 %cmp5.i.i264.i, label %cleanup.split.loop.exit18.i.i270.i, label %land.lhs.true.i.i265.i.for.inc.i.i268.i_crit_edge

land.lhs.true.i.i265.i.for.inc.i.i268.i_crit_edge: ; preds = %land.lhs.true.i.i265.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i268.i

for.inc.i.i268.i:                                 ; preds = %land.lhs.true.i.i265.i.for.inc.i.i268.i_crit_edge, %for.body.i.i262.i.for.inc.i.i268.i_crit_edge
  %80 = ptrtoint ptr %.pn22.i.i259.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %.pn.i.i266.i = load ptr, ptr %.pn22.i.i259.i, align 4
  %cmp.not.i.i267.i = icmp eq ptr %.pn.i.i266.i, %ports.i.i.i
  br i1 %cmp.not.i.i267.i, label %for.inc.i.i268.i.dsa_is_dsa_port.exit.i_crit_edge, label %for.inc.i.i268.i.for.body.i.i262.i_crit_edge

for.inc.i.i268.i.for.body.i.i262.i_crit_edge:     ; preds = %for.inc.i.i268.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i262.i

for.inc.i.i268.i.dsa_is_dsa_port.exit.i_crit_edge: ; preds = %for.inc.i.i268.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit.i

cleanup.split.loop.exit18.i.i270.i:               ; preds = %land.lhs.true.i.i265.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i269.i = getelementptr i8, ptr %.pn22.i.i259.i, i32 -448
  br label %dsa_is_dsa_port.exit.i

dsa_is_dsa_port.exit.i:                           ; preds = %cleanup.split.loop.exit18.i.i270.i, %for.inc.i.i268.i.dsa_is_dsa_port.exit.i_crit_edge, %dsa_is_cpu_port.exit.thread.i.dsa_is_dsa_port.exit.i_crit_edge
  %retval.0.i.i271.i = phi ptr [ %dp.0.le.i.i269.i, %cleanup.split.loop.exit18.i.i270.i ], [ null, %dsa_is_cpu_port.exit.thread.i.dsa_is_dsa_port.exit.i_crit_edge ], [ null, %for.inc.i.i268.i.dsa_is_dsa_port.exit.i_crit_edge ]
  %type.i272.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i271.i, i32 0, i32 6
  %81 = ptrtoint ptr %type.i272.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %type.i272.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %82)
  %cmp.i273.i = icmp eq i32 %82, 2
  br i1 %cmp.i273.i, label %dsa_is_dsa_port.exit.i.if.then.i_crit_edge, label %if.else.i

dsa_is_dsa_port.exit.i.if.then.i_crit_edge:       ; preds = %dsa_is_dsa_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.then.i:                                        ; preds = %dsa_is_dsa_port.exit.i.if.then.i_crit_edge, %dsa_is_cpu_port.exit.thread.i.if.then.i_crit_edge, %dsa_is_cpu_port.exit.i.if.then.i_crit_edge
  %call7.i = call fastcc i32 @mv88e6xxx_port_setup_mac(ptr noundef %1, i32 noundef %i.1283, i32 noundef 1, i32 noundef 2147483647, i32 noundef 1, i32 noundef 0) #16
  br label %if.end.i213

if.else.i:                                        ; preds = %dsa_is_dsa_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %call8.i = call fastcc i32 @mv88e6xxx_port_setup_mac(ptr noundef %1, i32 noundef %i.1283, i32 noundef -2, i32 noundef -2, i32 noundef -2, i32 noundef 1) #16
  br label %if.end.i213

if.end.i213:                                      ; preds = %if.else.i, %if.then.i
  %err.0.i = phi i32 [ %call7.i, %if.then.i ], [ %call8.i, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0.i)
  %tobool.not.i212 = icmp eq i32 %err.0.i, 0
  br i1 %tobool.not.i212, label %if.end10.i, label %if.end.i213.unlock.thread_crit_edge

if.end.i213.unlock.thread_crit_edge:              ; preds = %if.end.i213
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end10.i:                                       ; preds = %if.end.i213
  %call11.i = call i32 @mv88e6xxx_port_write(ptr noundef %1, i32 noundef %i.1283, i32 noundef 4, i16 noundef zeroext 1075) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool12.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool12.not.i, label %if.end14.i, label %if.end10.i.unlock.thread_crit_edge

if.end10.i.unlock.thread_crit_edge:               ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end14.i:                                       ; preds = %if.end10.i
  %call15.i = call fastcc i32 @mv88e6xxx_setup_port_mode(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15.i)
  %tobool16.not.i = icmp eq i32 %call15.i, 0
  br i1 %tobool16.not.i, label %if.end18.i, label %if.end14.i.unlock.thread_crit_edge

if.end14.i.unlock.thread_crit_edge:               ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end18.i:                                       ; preds = %if.end14.i
  %83 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %1, align 8
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %84, i32 0, i32 22
  %85 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %ops.i.i, align 4
  %port_set_ucast_flood.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %86, i32 0, i32 22
  %87 = ptrtoint ptr %port_set_ucast_flood.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %port_set_ucast_flood.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %88, null
  br i1 %tobool.not.i.i, label %if.end18.i.if.end6.i.i_crit_edge, label %if.then.i.i

if.end18.i.if.end6.i.i_crit_edge:                 ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i.i

if.then.i.i:                                      ; preds = %if.end18.i
  %call.i.i = call i32 %88(ptr noundef %1, i32 noundef %i.1283, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool4.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool4.not.i.i, label %if.then.i.i.if.end6.i.i_crit_edge, label %if.then.i.i.unlock.thread_crit_edge

if.then.i.i.unlock.thread_crit_edge:              ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then.i.i.if.end6.i.i_crit_edge:                ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.then.i.i.if.end6.i.i_crit_edge, %if.end18.i.if.end6.i.i_crit_edge
  %89 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %1, align 8
  %ops8.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %90, i32 0, i32 22
  %91 = ptrtoint ptr %ops8.i.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %ops8.i.i, align 4
  %port_set_mcast_flood.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %92, i32 0, i32 23
  %93 = ptrtoint ptr %port_set_mcast_flood.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %port_set_mcast_flood.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %94, null
  br i1 %tobool9.not.i.i, label %if.end6.i.i.if.end22.i_crit_edge, label %if.then10.i.i

if.end6.i.i.if.end22.i_crit_edge:                 ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22.i

if.then10.i.i:                                    ; preds = %if.end6.i.i
  %call14.i.i = call i32 %94(ptr noundef %1, i32 noundef %i.1283, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14.i.i)
  %tobool15.not.i.i = icmp eq i32 %call14.i.i, 0
  br i1 %tobool15.not.i.i, label %if.then10.i.i.if.end22.i_crit_edge, label %if.then10.i.i.unlock.thread_crit_edge

if.then10.i.i.unlock.thread_crit_edge:            ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then10.i.i.if.end22.i_crit_edge:               ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then10.i.i.if.end22.i_crit_edge, %if.end6.i.i.if.end22.i_crit_edge
  %call23.i = call i32 @mv88e6xxx_port_set_map_da(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23.i)
  %tobool24.not.i = icmp eq i32 %call23.i, 0
  br i1 %tobool24.not.i, label %if.end26.i, label %if.end22.i.unlock.thread_crit_edge

if.end22.i.unlock.thread_crit_edge:               ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end26.i:                                       ; preds = %if.end22.i
  %call27.i = call fastcc i32 @mv88e6xxx_setup_upstream_port(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27.i)
  %tobool28.not.i = icmp eq i32 %call27.i, 0
  br i1 %tobool28.not.i, label %if.end30.i, label %if.end26.i.unlock.thread_crit_edge

if.end26.i.unlock.thread_crit_edge:               ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end30.i:                                       ; preds = %if.end26.i
  %call31.i = call i32 @mv88e6xxx_port_set_8021q_mode(ptr noundef %1, i32 noundef %i.1283, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %if.end34.i, label %if.end30.i.unlock.thread_crit_edge

if.end30.i.unlock.thread_crit_edge:               ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end34.i:                                       ; preds = %if.end30.i
  %call35.i = call fastcc i32 @mv88e6xxx_port_vlan_join(ptr noundef %1, i32 noundef %i.1283, i16 noundef zeroext 4095, i8 noundef zeroext 1, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35.i)
  %tobool36.not.i = icmp eq i32 %call35.i, 0
  br i1 %tobool36.not.i, label %if.end38.i, label %if.end34.i.unlock.thread_crit_edge

if.end34.i.unlock.thread_crit_edge:               ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end38.i:                                       ; preds = %if.end34.i
  %95 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %96, i32 0, i32 22
  %97 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %ops.i, align 4
  %port_set_jumbo_size.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %98, i32 0, i32 25
  %99 = ptrtoint ptr %port_set_jumbo_size.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %port_set_jumbo_size.i, align 4
  %tobool39.not.i = icmp eq ptr %100, null
  br i1 %tobool39.not.i, label %if.end38.i.if.end48.i_crit_edge, label %if.then40.i

if.end38.i.if.end48.i_crit_edge:                  ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48.i

if.then40.i:                                      ; preds = %if.end38.i
  %call44.i = call i32 %100(ptr noundef %1, i32 noundef %i.1283, i32 noundef 10218) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call44.i)
  %tobool45.not.i = icmp eq i32 %call44.i, 0
  br i1 %tobool45.not.i, label %if.then40.i.if.end48.i_crit_edge, label %if.then40.i.unlock.thread_crit_edge

if.then40.i.unlock.thread_crit_edge:              ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then40.i.if.end48.i_crit_edge:                 ; preds = %if.then40.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.then40.i.if.end48.i_crit_edge, %if.end38.i.if.end48.i_crit_edge
  %101 = ptrtoint ptr %dst1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %dst1.i.i.i, align 4
  %ports.i.i275.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %102, i32 0, i32 1
  %103 = ptrtoint ptr %ports.i.i275.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %.pn20.i.i276.i = load ptr, ptr %ports.i.i275.i, align 4
  %cmp.not21.i.i277.i = icmp eq ptr %.pn20.i.i276.i, %ports.i.i275.i
  br i1 %cmp.not21.i.i277.i, label %if.end48.i.dsa_is_user_port.exit.i_crit_edge, label %if.end48.i.for.body.i.i281.i_crit_edge

if.end48.i.for.body.i.i281.i_crit_edge:           ; preds = %if.end48.i
  br label %for.body.i.i281.i

if.end48.i.dsa_is_user_port.exit.i_crit_edge:     ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_user_port.exit.i

for.body.i.i281.i:                                ; preds = %for.inc.i.i287.i.for.body.i.i281.i_crit_edge, %if.end48.i.for.body.i.i281.i_crit_edge
  %.pn22.i.i278.i = phi ptr [ %.pn.i.i285.i, %for.inc.i.i287.i.for.body.i.i281.i_crit_edge ], [ %.pn20.i.i276.i, %if.end48.i.for.body.i.i281.i_crit_edge ]
  %ds3.i.i279.i = getelementptr i8, ptr %.pn22.i.i278.i, i32 -432
  %104 = ptrtoint ptr %ds3.i.i279.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %ds3.i.i279.i, align 4
  %cmp4.i.i280.i = icmp eq ptr %105, %62
  br i1 %cmp4.i.i280.i, label %land.lhs.true.i.i284.i, label %for.body.i.i281.i.for.inc.i.i287.i_crit_edge

for.body.i.i281.i.for.inc.i.i287.i_crit_edge:     ; preds = %for.body.i.i281.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i287.i

land.lhs.true.i.i284.i:                           ; preds = %for.body.i.i281.i
  %index.i.i282.i = getelementptr i8, ptr %.pn22.i.i278.i, i32 -428
  %106 = ptrtoint ptr %index.i.i282.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %index.i.i282.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %107, i32 %i.1283)
  %cmp5.i.i283.i = icmp eq i32 %107, %i.1283
  br i1 %cmp5.i.i283.i, label %cleanup.split.loop.exit18.i.i289.i, label %land.lhs.true.i.i284.i.for.inc.i.i287.i_crit_edge

land.lhs.true.i.i284.i.for.inc.i.i287.i_crit_edge: ; preds = %land.lhs.true.i.i284.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i287.i

for.inc.i.i287.i:                                 ; preds = %land.lhs.true.i.i284.i.for.inc.i.i287.i_crit_edge, %for.body.i.i281.i.for.inc.i.i287.i_crit_edge
  %108 = ptrtoint ptr %.pn22.i.i278.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %.pn.i.i285.i = load ptr, ptr %.pn22.i.i278.i, align 4
  %cmp.not.i.i286.i = icmp eq ptr %.pn.i.i285.i, %ports.i.i275.i
  br i1 %cmp.not.i.i286.i, label %for.inc.i.i287.i.dsa_is_user_port.exit.i_crit_edge, label %for.inc.i.i287.i.for.body.i.i281.i_crit_edge

for.inc.i.i287.i.for.body.i.i281.i_crit_edge:     ; preds = %for.inc.i.i287.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i281.i

for.inc.i.i287.i.dsa_is_user_port.exit.i_crit_edge: ; preds = %for.inc.i.i287.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_user_port.exit.i

cleanup.split.loop.exit18.i.i289.i:               ; preds = %land.lhs.true.i.i284.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i288.i = getelementptr i8, ptr %.pn22.i.i278.i, i32 -448
  br label %dsa_is_user_port.exit.i

dsa_is_user_port.exit.i:                          ; preds = %cleanup.split.loop.exit18.i.i289.i, %for.inc.i.i287.i.dsa_is_user_port.exit.i_crit_edge, %if.end48.i.dsa_is_user_port.exit.i_crit_edge
  %retval.0.i.i290.i = phi ptr [ %dp.0.le.i.i288.i, %cleanup.split.loop.exit18.i.i289.i ], [ null, %if.end48.i.dsa_is_user_port.exit.i_crit_edge ], [ null, %for.inc.i.i287.i.dsa_is_user_port.exit.i_crit_edge ]
  %type.i291.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i290.i, i32 0, i32 6
  %109 = ptrtoint ptr %type.i291.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %type.i291.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %110)
  %cmp.i292.i = icmp eq i32 %110, 3
  %conv.i = trunc i32 %shl.i to i16
  %reg.0.i = select i1 %cmp.i292.i, i16 0, i16 %conv.i
  %call53.i = call i32 @mv88e6xxx_port_write(ptr noundef %1, i32 noundef %i.1283, i32 noundef 11, i16 noundef zeroext %reg.0.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53.i)
  %tobool54.not.i = icmp eq i32 %call53.i, 0
  br i1 %tobool54.not.i, label %if.end56.i, label %dsa_is_user_port.exit.i.unlock.thread_crit_edge

dsa_is_user_port.exit.i.unlock.thread_crit_edge:  ; preds = %dsa_is_user_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end56.i:                                       ; preds = %dsa_is_user_port.exit.i
  %call57.i = call i32 @mv88e6xxx_port_write(ptr noundef %1, i32 noundef %i.1283, i32 noundef 10, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57.i)
  %tobool58.not.i = icmp eq i32 %call57.i, 0
  br i1 %tobool58.not.i, label %if.end60.i, label %if.end56.i.unlock.thread_crit_edge

if.end56.i.unlock.thread_crit_edge:               ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end60.i:                                       ; preds = %if.end56.i
  %111 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %1, align 8
  %ops62.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %112, i32 0, i32 22
  %113 = ptrtoint ptr %ops62.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %ops62.i, align 4
  %port_pause_limit.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %114, i32 0, i32 27
  %115 = ptrtoint ptr %port_pause_limit.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %port_pause_limit.i, align 4
  %tobool63.not.i = icmp eq ptr %116, null
  br i1 %tobool63.not.i, label %if.end60.i.if.end72.i_crit_edge, label %if.then64.i

if.end60.i.if.end72.i_crit_edge:                  ; preds = %if.end60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end72.i

if.then64.i:                                      ; preds = %if.end60.i
  %call68.i = call i32 %116(ptr noundef %1, i32 noundef %i.1283, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68.i)
  %tobool69.not.i = icmp eq i32 %call68.i, 0
  br i1 %tobool69.not.i, label %if.then64.i.if.end72.i_crit_edge, label %if.then64.i.unlock.thread_crit_edge

if.then64.i.unlock.thread_crit_edge:              ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then64.i.if.end72.i_crit_edge:                 ; preds = %if.then64.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end72.i

if.end72.i:                                       ; preds = %if.then64.i.if.end72.i_crit_edge, %if.end60.i.if.end72.i_crit_edge
  %117 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %1, align 8
  %ops74.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %118, i32 0, i32 22
  %119 = ptrtoint ptr %ops74.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %ops74.i, align 4
  %port_disable_learn_limit.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %120, i32 0, i32 28
  %121 = ptrtoint ptr %port_disable_learn_limit.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %port_disable_learn_limit.i, align 4
  %tobool75.not.i = icmp eq ptr %122, null
  br i1 %tobool75.not.i, label %if.end72.i.if.end84.i_crit_edge, label %if.then76.i

if.end72.i.if.end84.i_crit_edge:                  ; preds = %if.end72.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end84.i

if.then76.i:                                      ; preds = %if.end72.i
  %call80.i = call i32 %122(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call80.i)
  %tobool81.not.i = icmp eq i32 %call80.i, 0
  br i1 %tobool81.not.i, label %if.then76.i.if.end84.i_crit_edge, label %if.then76.i.unlock.thread_crit_edge

if.then76.i.unlock.thread_crit_edge:              ; preds = %if.then76.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then76.i.if.end84.i_crit_edge:                 ; preds = %if.then76.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end84.i

if.end84.i:                                       ; preds = %if.then76.i.if.end84.i_crit_edge, %if.end72.i.if.end84.i_crit_edge
  %123 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %1, align 8
  %ops86.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %124, i32 0, i32 22
  %125 = ptrtoint ptr %ops86.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %ops86.i, align 4
  %port_disable_pri_override.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %126, i32 0, i32 29
  %127 = ptrtoint ptr %port_disable_pri_override.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %port_disable_pri_override.i, align 4
  %tobool87.not.i = icmp eq ptr %128, null
  br i1 %tobool87.not.i, label %if.end84.i.if.end96.i_crit_edge, label %if.then88.i

if.end84.i.if.end96.i_crit_edge:                  ; preds = %if.end84.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96.i

if.then88.i:                                      ; preds = %if.end84.i
  %call92.i = call i32 %128(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92.i)
  %tobool93.not.i = icmp eq i32 %call92.i, 0
  br i1 %tobool93.not.i, label %if.then88.i.if.end96.i_crit_edge, label %if.then88.i.unlock.thread_crit_edge

if.then88.i.unlock.thread_crit_edge:              ; preds = %if.then88.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then88.i.if.end96.i_crit_edge:                 ; preds = %if.then88.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end96.i

if.end96.i:                                       ; preds = %if.then88.i.if.end96.i_crit_edge, %if.end84.i.if.end96.i_crit_edge
  %129 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %1, align 8
  %ops98.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %130, i32 0, i32 22
  %131 = ptrtoint ptr %ops98.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load ptr, ptr %ops98.i, align 4
  %port_tag_remap.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %132, i32 0, i32 19
  %133 = ptrtoint ptr %port_tag_remap.i to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %port_tag_remap.i, align 4
  %tobool99.not.i = icmp eq ptr %134, null
  br i1 %tobool99.not.i, label %if.end96.i.if.end108.i_crit_edge, label %if.then100.i

if.end96.i.if.end108.i_crit_edge:                 ; preds = %if.end96.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end108.i

if.then100.i:                                     ; preds = %if.end96.i
  %call104.i = call i32 %134(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call104.i)
  %tobool105.not.i = icmp eq i32 %call104.i, 0
  br i1 %tobool105.not.i, label %if.then100.i.if.end108.i_crit_edge, label %if.then100.i.unlock.thread_crit_edge

if.then100.i.unlock.thread_crit_edge:             ; preds = %if.then100.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then100.i.if.end108.i_crit_edge:               ; preds = %if.then100.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end108.i

if.end108.i:                                      ; preds = %if.then100.i.if.end108.i_crit_edge, %if.end96.i.if.end108.i_crit_edge
  %135 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %1, align 8
  %ops110.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %136, i32 0, i32 22
  %137 = ptrtoint ptr %ops110.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %ops110.i, align 4
  %port_egress_rate_limiting.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %138, i32 0, i32 26
  %139 = ptrtoint ptr %port_egress_rate_limiting.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %port_egress_rate_limiting.i, align 4
  %tobool111.not.i = icmp eq ptr %140, null
  br i1 %tobool111.not.i, label %if.end108.i.if.end120.i_crit_edge, label %if.then112.i

if.end108.i.if.end120.i_crit_edge:                ; preds = %if.end108.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end120.i

if.then112.i:                                     ; preds = %if.end108.i
  %call116.i = call i32 %140(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call116.i)
  %tobool117.not.i = icmp eq i32 %call116.i, 0
  br i1 %tobool117.not.i, label %if.then112.i.if.end120.i_crit_edge, label %if.then112.i.unlock.thread_crit_edge

if.then112.i.unlock.thread_crit_edge:             ; preds = %if.then112.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then112.i.if.end120.i_crit_edge:               ; preds = %if.then112.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end120.i

if.end120.i:                                      ; preds = %if.then112.i.if.end120.i_crit_edge, %if.end108.i.if.end120.i_crit_edge
  %141 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %1, align 8
  %ops122.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %142, i32 0, i32 22
  %143 = ptrtoint ptr %ops122.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %ops122.i, align 4
  %port_setup_message_port.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %144, i32 0, i32 30
  %145 = ptrtoint ptr %port_setup_message_port.i to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %port_setup_message_port.i, align 4
  %tobool123.not.i = icmp eq ptr %146, null
  br i1 %tobool123.not.i, label %if.end120.i.if.end132.i_crit_edge, label %if.then124.i

if.end120.i.if.end132.i_crit_edge:                ; preds = %if.end120.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end132.i

if.then124.i:                                     ; preds = %if.end120.i
  %call128.i = call i32 %146(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call128.i)
  %tobool129.not.i = icmp eq i32 %call128.i, 0
  br i1 %tobool129.not.i, label %if.then124.i.if.end132.i_crit_edge, label %if.then124.i.unlock.thread_crit_edge

if.then124.i.unlock.thread_crit_edge:             ; preds = %if.then124.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.then124.i.if.end132.i_crit_edge:               ; preds = %if.then124.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end132.i

if.end132.i:                                      ; preds = %if.then124.i.if.end132.i_crit_edge, %if.end120.i.if.end132.i_crit_edge
  %call133.i = call i32 @mv88e6xxx_port_set_fid(ptr noundef %1, i32 noundef %i.1283, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133.i)
  %tobool134.not.i = icmp eq i32 %call133.i, 0
  br i1 %tobool134.not.i, label %if.end136.i, label %if.end132.i.unlock.thread_crit_edge

if.end132.i.unlock.thread_crit_edge:              ; preds = %if.end132.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end136.i:                                      ; preds = %if.end132.i
  %call137.i = call fastcc i32 @mv88e6xxx_port_vlan_map(ptr noundef %1, i32 noundef %i.1283) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call137.i)
  %tobool138.not.i = icmp eq i32 %call137.i, 0
  br i1 %tobool138.not.i, label %mv88e6xxx_setup_port.exit, label %if.end136.i.unlock.thread_crit_edge

if.end136.i.unlock.thread_crit_edge:              ; preds = %if.end136.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_setup_port.exit:                        ; preds = %if.end136.i
  %call141.i = call i32 @mv88e6xxx_port_write(ptr noundef %1, i32 noundef %i.1283, i32 noundef 7, i16 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141.i)
  %tobool42.not = icmp eq i32 %call141.i, 0
  br i1 %tobool42.not, label %mv88e6xxx_setup_port.exit.for.inc45_crit_edge, label %mv88e6xxx_setup_port.exit.unlock.thread_crit_edge

mv88e6xxx_setup_port.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_setup_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_setup_port.exit.for.inc45_crit_edge:    ; preds = %mv88e6xxx_setup_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc45

for.inc45:                                        ; preds = %mv88e6xxx_setup_port.exit.for.inc45_crit_edge, %dsa_is_unused_port.exit.for.inc45_crit_edge
  %inc46 = add nuw i32 %i.1283, 1
  %147 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %1, align 8
  %num_ports.i210 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %148, i32 0, i32 5
  %149 = ptrtoint ptr %num_ports.i210 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %num_ports.i210, align 4
  %cmp33 = icmp ult i32 %inc46, %150
  br i1 %cmp33, label %for.inc45.for.body34_crit_edge, label %for.end47

for.inc45.for.body34_crit_edge:                   ; preds = %for.inc45
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body34

for.end47:                                        ; preds = %for.inc45
  %ops.i216 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %148, i32 0, i32 22
  %151 = ptrtoint ptr %ops.i216 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %ops.i216, align 4
  %irl_init_all.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %152, i32 0, i32 3
  %153 = ptrtoint ptr %irl_init_all.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %irl_init_all.i, align 4
  %tobool.not.i217 = icmp eq ptr %154, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %150)
  %cmp16.not.i = icmp eq i32 %150, 0
  %or.cond = select i1 %tobool.not.i217, i1 true, i1 %cmp16.not.i
  br i1 %or.cond, label %for.end47.if.end51_crit_edge, label %for.end47.for.body.i_crit_edge

for.end47.for.body.i_crit_edge:                   ; preds = %for.end47
  br label %for.body.i

for.end47.if.end51_crit_edge:                     ; preds = %for.end47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end51

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i32 %port.017.i, 1
  %155 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %1, align 8
  %num_ports.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %156, i32 0, i32 5
  %157 = ptrtoint ptr %num_ports.i.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %num_ports.i.i, align 4
  %cmp.i218 = icmp ult i32 %inc.i, %158
  br i1 %cmp.i218, label %for.cond.i.for.body.i_crit_edge, label %for.cond.i.if.end51_crit_edge

for.cond.i.if.end51_crit_edge:                    ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end51

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.end47.for.body.i_crit_edge
  %159 = phi ptr [ %156, %for.cond.i.for.body.i_crit_edge ], [ %148, %for.end47.for.body.i_crit_edge ]
  %port.017.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.end47.for.body.i_crit_edge ]
  %ops2.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %159, i32 0, i32 22
  %160 = ptrtoint ptr %ops2.i to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %ops2.i, align 4
  %irl_init_all3.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %161, i32 0, i32 3
  %162 = ptrtoint ptr %irl_init_all3.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %irl_init_all3.i, align 4
  %call4.i = call i32 %163(ptr noundef %1, i32 noundef %port.017.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %for.cond.i, label %for.body.i.unlock.thread_crit_edge

for.body.i.unlock.thread_crit_edge:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end51:                                         ; preds = %for.cond.i.if.end51_crit_edge, %for.end47.if.end51_crit_edge, %for.cond31.preheader.if.end51_crit_edge
  %164 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %1, align 8
  %ops.i220 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %165, i32 0, i32 22
  %166 = ptrtoint ptr %ops.i220 to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %ops.i220, align 4
  %set_switch_mac.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %167, i32 0, i32 6
  %168 = ptrtoint ptr %set_switch_mac.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %set_switch_mac.i, align 4
  %tobool.not.i221 = icmp eq ptr %169, null
  br i1 %tobool.not.i221, label %if.end51.if.end55_crit_edge, label %mv88e6xxx_mac_setup.exit

if.end51.if.end55_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end55

mv88e6xxx_mac_setup.exit:                         ; preds = %if.end51
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr.i) #16
  %170 = call ptr @memset(ptr %addr.i, i32 255, i32 6)
  call void @get_random_bytes(ptr noundef nonnull %addr.i, i32 noundef 6) #16
  %171 = ptrtoint ptr %addr.i to i32
  call void @__asan_load1_noabort(i32 %171)
  %172 = load i8, ptr %addr.i, align 1
  %173 = and i8 %172, -4
  %174 = or i8 %173, 2
  store i8 %174, ptr %addr.i, align 1
  %175 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %1, align 8
  %ops2.i222 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %176, i32 0, i32 22
  %177 = ptrtoint ptr %ops2.i222 to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %ops2.i222, align 4
  %set_switch_mac3.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %178, i32 0, i32 6
  %179 = ptrtoint ptr %set_switch_mac3.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %set_switch_mac3.i, align 4
  %call.i = call i32 %180(ptr noundef %1, ptr noundef nonnull %addr.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool53.not = icmp eq i32 %call.i, 0
  br i1 %tobool53.not, label %mv88e6xxx_mac_setup.exit.if.end55_crit_edge, label %mv88e6xxx_mac_setup.exit.unlock.thread_crit_edge

mv88e6xxx_mac_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_mac_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_mac_setup.exit.if.end55_crit_edge:      ; preds = %mv88e6xxx_mac_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end55

if.end55:                                         ; preds = %mv88e6xxx_mac_setup.exit.if.end55_crit_edge, %if.end51.if.end55_crit_edge
  %call56 = call i32 @mv88e6xxx_phy_setup(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.end59, label %if.end55.unlock.thread_crit_edge

if.end55.unlock.thread_crit_edge:                 ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end59:                                         ; preds = %if.end55
  %call60 = call fastcc i32 @mv88e6xxx_pvt_setup(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %if.end63, label %if.end59.unlock.thread_crit_edge

if.end59.unlock.thread_crit_edge:                 ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end63:                                         ; preds = %if.end59
  %call64 = call fastcc i32 @mv88e6xxx_atu_setup(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.end67, label %if.end63.unlock.thread_crit_edge

if.end63.unlock.thread_crit_edge:                 ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end67:                                         ; preds = %if.end63
  %call68 = call fastcc i32 @mv88e6xxx_broadcast_setup(ptr noundef %1, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call68)
  %tobool69.not = icmp eq i32 %call68, 0
  br i1 %tobool69.not, label %if.end71, label %if.end67.unlock.thread_crit_edge

if.end67.unlock.thread_crit_edge:                 ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end71:                                         ; preds = %if.end67
  %181 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %1, align 8
  %ops.i225 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %182, i32 0, i32 22
  %183 = ptrtoint ptr %ops.i225 to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load ptr, ptr %ops.i225, align 4
  %pot_clear.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %184, i32 0, i32 9
  %185 = ptrtoint ptr %pot_clear.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %pot_clear.i, align 4
  %tobool.not.i226 = icmp eq ptr %186, null
  br i1 %tobool.not.i226, label %if.end71.if.end75_crit_edge, label %mv88e6xxx_pot_setup.exit

if.end71.if.end75_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end75

mv88e6xxx_pot_setup.exit:                         ; preds = %if.end71
  %call.i227 = call i32 %186(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i227)
  %tobool73.not = icmp eq i32 %call.i227, 0
  br i1 %tobool73.not, label %mv88e6xxx_pot_setup.exit.if.end75_crit_edge, label %mv88e6xxx_pot_setup.exit.unlock.thread_crit_edge

mv88e6xxx_pot_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_pot_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_pot_setup.exit.if.end75_crit_edge:      ; preds = %mv88e6xxx_pot_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end75

if.end75:                                         ; preds = %mv88e6xxx_pot_setup.exit.if.end75_crit_edge, %if.end71.if.end75_crit_edge
  %187 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %1, align 8
  %ops.i230 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %188, i32 0, i32 22
  %189 = ptrtoint ptr %ops.i230 to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %ops.i230, align 4
  %rmu_disable.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %190, i32 0, i32 64
  %191 = ptrtoint ptr %rmu_disable.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %rmu_disable.i, align 4
  %tobool.not.i231 = icmp eq ptr %192, null
  br i1 %tobool.not.i231, label %if.end75.if.end79_crit_edge, label %mv88e6xxx_rmu_setup.exit

if.end75.if.end79_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end79

mv88e6xxx_rmu_setup.exit:                         ; preds = %if.end75
  %call.i232 = call i32 %192(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i232)
  %tobool77.not = icmp eq i32 %call.i232, 0
  br i1 %tobool77.not, label %mv88e6xxx_rmu_setup.exit.if.end79_crit_edge, label %mv88e6xxx_rmu_setup.exit.unlock.thread_crit_edge

mv88e6xxx_rmu_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_rmu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_rmu_setup.exit.if.end79_crit_edge:      ; preds = %mv88e6xxx_rmu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end79

if.end79:                                         ; preds = %mv88e6xxx_rmu_setup.exit.if.end79_crit_edge, %if.end75.if.end79_crit_edge
  %193 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %1, align 8
  %ops.i235 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %194, i32 0, i32 22
  %195 = ptrtoint ptr %ops.i235 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %ops.i235, align 4
  %mgmt_rsvd2cpu.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %196, i32 0, i32 43
  %197 = ptrtoint ptr %mgmt_rsvd2cpu.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %mgmt_rsvd2cpu.i, align 4
  %tobool.not.i236 = icmp eq ptr %198, null
  br i1 %tobool.not.i236, label %if.end79.if.end83_crit_edge, label %mv88e6xxx_rsvd2cpu_setup.exit

if.end79.if.end83_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end83

mv88e6xxx_rsvd2cpu_setup.exit:                    ; preds = %if.end79
  %call.i237 = call i32 %198(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i237)
  %tobool81.not = icmp eq i32 %call.i237, 0
  br i1 %tobool81.not, label %mv88e6xxx_rsvd2cpu_setup.exit.if.end83_crit_edge, label %mv88e6xxx_rsvd2cpu_setup.exit.unlock.thread_crit_edge

mv88e6xxx_rsvd2cpu_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_rsvd2cpu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_rsvd2cpu_setup.exit.if.end83_crit_edge: ; preds = %mv88e6xxx_rsvd2cpu_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end83

if.end83:                                         ; preds = %mv88e6xxx_rsvd2cpu_setup.exit.if.end83_crit_edge, %if.end79.if.end83_crit_edge
  %199 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load ptr, ptr %1, align 8
  %global2_addr.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %200, i32 0, i32 12
  %201 = ptrtoint ptr %global2_addr.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %global2_addr.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %202)
  %tobool.not.i240 = icmp eq i32 %202, 0
  br i1 %tobool.not.i240, label %if.end83.if.end87_crit_edge, label %mv88e6xxx_trunk_setup.exit

if.end83.if.end87_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end87

mv88e6xxx_trunk_setup.exit:                       ; preds = %if.end83
  %call.i241 = call i32 @mv88e6xxx_g2_trunk_clear(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i241)
  %tobool85.not = icmp eq i32 %call.i241, 0
  br i1 %tobool85.not, label %mv88e6xxx_trunk_setup.exit.if.end87_crit_edge, label %mv88e6xxx_trunk_setup.exit.unlock.thread_crit_edge

mv88e6xxx_trunk_setup.exit.unlock.thread_crit_edge: ; preds = %mv88e6xxx_trunk_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

mv88e6xxx_trunk_setup.exit.if.end87_crit_edge:    ; preds = %mv88e6xxx_trunk_setup.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end87

if.end87:                                         ; preds = %mv88e6xxx_trunk_setup.exit.if.end87_crit_edge, %if.end83.if.end87_crit_edge
  %call88 = call fastcc i32 @mv88e6xxx_devmap_setup(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call88)
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %if.end91, label %if.end87.unlock.thread_crit_edge

if.end87.unlock.thread_crit_edge:                 ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end91:                                         ; preds = %if.end87
  %call92 = call fastcc i32 @mv88e6xxx_pri_setup(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %if.end95, label %if.end91.unlock.thread_crit_edge

if.end91.unlock.thread_crit_edge:                 ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end95:                                         ; preds = %if.end91
  %203 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %1, align 8
  %ptp_support = getelementptr inbounds %struct.mv88e6xxx_info, ptr %204, i32 0, i32 23
  %205 = ptrtoint ptr %ptp_support to i32
  call void @__asan_load1_noabort(i32 %205)
  %206 = load i8, ptr %ptp_support, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %206)
  %tobool97.not = icmp eq i8 %206, 0
  br i1 %tobool97.not, label %if.end95.unlock_crit_edge, label %if.then98

if.end95.unlock_crit_edge:                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.then98:                                        ; preds = %if.end95
  %call99 = call i32 @mv88e6xxx_ptp_setup(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call99)
  %tobool100.not = icmp eq i32 %call99, 0
  br i1 %tobool100.not, label %if.end102, label %if.then98.unlock.thread_crit_edge

if.then98.unlock.thread_crit_edge:                ; preds = %if.then98
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end102:                                        ; preds = %if.then98
  %call103 = call i32 @mv88e6xxx_hwtstamp_setup(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call103)
  %tobool104.not = icmp eq i32 %call103, 0
  br i1 %tobool104.not, label %if.end102.unlock_crit_edge, label %if.end102.unlock.thread_crit_edge

if.end102.unlock.thread_crit_edge:                ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock.thread

if.end102.unlock_crit_edge:                       ; preds = %if.end102
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

unlock.thread:                                    ; preds = %if.end102.unlock.thread_crit_edge, %if.then98.unlock.thread_crit_edge, %if.end91.unlock.thread_crit_edge, %if.end87.unlock.thread_crit_edge, %mv88e6xxx_trunk_setup.exit.unlock.thread_crit_edge, %mv88e6xxx_rsvd2cpu_setup.exit.unlock.thread_crit_edge, %mv88e6xxx_rmu_setup.exit.unlock.thread_crit_edge, %mv88e6xxx_pot_setup.exit.unlock.thread_crit_edge, %if.end67.unlock.thread_crit_edge, %if.end63.unlock.thread_crit_edge, %if.end59.unlock.thread_crit_edge, %if.end55.unlock.thread_crit_edge, %mv88e6xxx_mac_setup.exit.unlock.thread_crit_edge, %for.body.i.unlock.thread_crit_edge, %mv88e6xxx_setup_port.exit.unlock.thread_crit_edge, %if.end136.i.unlock.thread_crit_edge, %if.end132.i.unlock.thread_crit_edge, %if.then124.i.unlock.thread_crit_edge, %if.then112.i.unlock.thread_crit_edge, %if.then100.i.unlock.thread_crit_edge, %if.then88.i.unlock.thread_crit_edge, %if.then76.i.unlock.thread_crit_edge, %if.then64.i.unlock.thread_crit_edge, %if.end56.i.unlock.thread_crit_edge, %dsa_is_user_port.exit.i.unlock.thread_crit_edge, %if.then40.i.unlock.thread_crit_edge, %if.end34.i.unlock.thread_crit_edge, %if.end30.i.unlock.thread_crit_edge, %if.end26.i.unlock.thread_crit_edge, %if.end22.i.unlock.thread_crit_edge, %if.then10.i.i.unlock.thread_crit_edge, %if.then.i.i.unlock.thread_crit_edge, %if.end14.i.unlock.thread_crit_edge, %if.end10.i.unlock.thread_crit_edge, %if.end.i213.unlock.thread_crit_edge, %do.end, %mv88e6xxx_vtu_setup.exit.unlock.thread_crit_edge, %if.then17.unlock.thread_crit_edge, %if.then4.unlock.thread_crit_edge
  %err.0.ph = phi i32 [ %call103, %if.end102.unlock.thread_crit_edge ], [ %call99, %if.then98.unlock.thread_crit_edge ], [ %call92, %if.end91.unlock.thread_crit_edge ], [ %call88, %if.end87.unlock.thread_crit_edge ], [ %call.i241, %mv88e6xxx_trunk_setup.exit.unlock.thread_crit_edge ], [ %call.i237, %mv88e6xxx_rsvd2cpu_setup.exit.unlock.thread_crit_edge ], [ %call.i232, %mv88e6xxx_rmu_setup.exit.unlock.thread_crit_edge ], [ %call.i227, %mv88e6xxx_pot_setup.exit.unlock.thread_crit_edge ], [ %call68, %if.end67.unlock.thread_crit_edge ], [ %call64, %if.end63.unlock.thread_crit_edge ], [ %call60, %if.end59.unlock.thread_crit_edge ], [ %call56, %if.end55.unlock.thread_crit_edge ], [ %call.i, %mv88e6xxx_mac_setup.exit.unlock.thread_crit_edge ], [ -22, %do.end ], [ %call1.i, %mv88e6xxx_vtu_setup.exit.unlock.thread_crit_edge ], [ %call8, %if.then4.unlock.thread_crit_edge ], [ %call4.i, %for.body.i.unlock.thread_crit_edge ], [ %err.0.i, %if.end.i213.unlock.thread_crit_edge ], [ %call11.i, %if.end10.i.unlock.thread_crit_edge ], [ %call15.i, %if.end14.i.unlock.thread_crit_edge ], [ %call23.i, %if.end22.i.unlock.thread_crit_edge ], [ %call27.i, %if.end26.i.unlock.thread_crit_edge ], [ %call31.i, %if.end30.i.unlock.thread_crit_edge ], [ %call35.i, %if.end34.i.unlock.thread_crit_edge ], [ %call44.i, %if.then40.i.unlock.thread_crit_edge ], [ %call53.i, %dsa_is_user_port.exit.i.unlock.thread_crit_edge ], [ %call57.i, %if.end56.i.unlock.thread_crit_edge ], [ %call68.i, %if.then64.i.unlock.thread_crit_edge ], [ %call80.i, %if.then76.i.unlock.thread_crit_edge ], [ %call92.i, %if.then88.i.unlock.thread_crit_edge ], [ %call104.i, %if.then100.i.unlock.thread_crit_edge ], [ %call116.i, %if.then112.i.unlock.thread_crit_edge ], [ %call128.i, %if.then124.i.unlock.thread_crit_edge ], [ %call133.i, %if.end132.i.unlock.thread_crit_edge ], [ %call137.i, %if.end136.i.unlock.thread_crit_edge ], [ %call14.i.i, %if.then10.i.i.unlock.thread_crit_edge ], [ %call.i.i, %if.then.i.i.unlock.thread_crit_edge ], [ %call141.i, %mv88e6xxx_setup_port.exit.unlock.thread_crit_edge ], [ %call21, %if.then17.unlock.thread_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

unlock:                                           ; preds = %if.end102.unlock_crit_edge, %if.end95.unlock_crit_edge
  %call108 = call fastcc i32 @mv88e6xxx_stats_setup(ptr noundef %1)
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call108)
  %tobool112.not = icmp eq i32 %call108, 0
  br i1 %tobool112.not, label %if.end114, label %unlock.cleanup_crit_edge

unlock.cleanup_crit_edge:                         ; preds = %unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end114:                                        ; preds = %unlock
  %call115 = call i32 @mv88e6xxx_setup_devlink_resources(ptr noundef %ds) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call115)
  %tobool116.not = icmp eq i32 %call115, 0
  br i1 %tobool116.not, label %if.end118, label %if.end114.cleanup_crit_edge

if.end114.cleanup_crit_edge:                      ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end118:                                        ; preds = %if.end114
  %call119 = call i32 @mv88e6xxx_setup_devlink_params(ptr noundef %ds) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call119)
  %tobool120.not = icmp eq i32 %call119, 0
  br i1 %tobool120.not, label %if.end122, label %if.end118.out_resources_crit_edge

if.end118.out_resources_crit_edge:                ; preds = %if.end118
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_resources

if.end122:                                        ; preds = %if.end118
  %call123 = call i32 @mv88e6xxx_setup_devlink_regions_global(ptr noundef %ds) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call123)
  %tobool124.not = icmp eq i32 %call123, 0
  br i1 %tobool124.not, label %if.end122.cleanup_crit_edge, label %out_params

if.end122.cleanup_crit_edge:                      ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

out_params:                                       ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  call void @mv88e6xxx_teardown_devlink_params(ptr noundef %ds) #16
  br label %out_resources

out_resources:                                    ; preds = %out_params, %if.end118.out_resources_crit_edge
  %err.1 = phi i32 [ %call119, %if.end118.out_resources_crit_edge ], [ %call123, %out_params ]
  call void @dsa_devlink_resources_unregister(ptr noundef %ds) #16
  br label %cleanup

cleanup:                                          ; preds = %out_resources, %if.end122.cleanup_crit_edge, %if.end114.cleanup_crit_edge, %unlock.cleanup_crit_edge, %unlock.thread
  %retval.0 = phi i32 [ %err.1, %out_resources ], [ %call108, %unlock.cleanup_crit_edge ], [ %call115, %if.end114.cleanup_crit_edge ], [ 0, %if.end122.cleanup_crit_edge ], [ %err.0.ph, %unlock.thread ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %cmode) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_teardown(ptr noundef %ds) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mv88e6xxx_teardown_devlink_params(ptr noundef %ds) #16
  tail call void @dsa_devlink_resources_unregister(ptr noundef %ds) #16
  tail call void @mv88e6xxx_teardown_devlink_regions_global(ptr noundef %ds) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_setup(ptr noundef %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mv88e6xxx_setup_devlink_regions_port(ptr noundef %ds, i32 noundef %port) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_teardown(ptr noundef %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mv88e6xxx_teardown_devlink_regions_port(ptr noundef %ds, i32 noundef %port) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_validate(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr noundef %supported, ptr noundef %state) #0 align 64 {
entry:
  %mask = alloca [3 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %mask) #16
  %0 = getelementptr inbounds i8, ptr %mask, i32 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_storeN_noabort(i32 %1, i32 8)
  store i64 0, ptr %0, align 4
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv, align 4
  %4 = ptrtoint ptr %mask to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 8256, ptr %mask, align 4
  call void @phylink_set_port_modes(ptr noundef nonnull %mask) #16
  %5 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %3, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 22
  %7 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ops, align 4
  %phylink_validate = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %8, i32 0, i32 66
  %9 = ptrtoint ptr %phylink_validate to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %phylink_validate, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  call void %10(ptr noundef %3, i32 noundef %port, ptr noundef nonnull %mask, ptr noundef %state) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %call.i.i = call i32 @__bitmap_and(ptr noundef %supported, ptr noundef %supported, ptr noundef nonnull %mask, i32 noundef 92) #16
  %call.i.i19 = call i32 @__bitmap_and(ptr noundef %state, ptr noundef %state, ptr noundef nonnull %mask, i32 noundef 92) #16
  call void @phylink_helper_basex_speed(ptr noundef %state) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %mask) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_serdes_pcs_get_state(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr noundef %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops.i, align 4
  %serdes_get_lane.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 45
  %6 = ptrtoint ptr %serdes_get_lane.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %serdes_get_lane.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %mv88e6xxx_serdes_get_lane.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

mv88e6xxx_serdes_get_lane.exit:                   ; preds = %entry
  %call.i = tail call i32 %7(ptr noundef %1, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp = icmp sgt i32 %call.i, -1
  br i1 %cmp, label %land.lhs.true, label %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge

mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge:  ; preds = %mv88e6xxx_serdes_get_lane.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %mv88e6xxx_serdes_get_lane.exit
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops, align 4
  %serdes_pcs_get_state = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 46
  %12 = ptrtoint ptr %serdes_pcs_get_state to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %serdes_pcs_get_state, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = tail call i32 %13(ptr noundef %1, i32 noundef %port, i32 noundef %call.i, ptr noundef %state) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %err.0 = phi i32 [ %call4, %if.then ], [ -95, %land.lhs.true.if.end_crit_edge ], [ -95, %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge ], [ -95, %entry.if.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_mac_config(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %mode, ptr noundef %state) #0 align 64 {
entry:
  %reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = zext i32 %mode to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.119)
  switch i32 %mode, label %entry.if.end_crit_edge [
    i32 0, label %lor.lhs.false
    i32 2, label %land.lhs.true
  ]

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %priv, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %num_internal_phys.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 6
  %7 = ptrtoint ptr %num_internal_phys.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_internal_phys.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp.i.not = icmp ugt i32 %8, %port
  br i1 %cmp.i.not, label %lor.lhs.false.if.end23_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false.if.end23_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23

land.lhs.true:                                    ; preds = %entry
  %interface = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 9
  %9 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %interface, align 8
  %interface2 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %11 = ptrtoint ptr %interface2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %interface2, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %12)
  %cmp3.not = icmp eq i32 %10, %12
  br i1 %cmp3.not, label %land.lhs.true.if.end_crit_edge, label %land.lhs.true4

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true4:                                   ; preds = %land.lhs.true
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %14, i32 0, i32 22
  %15 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops, align 4
  %port_set_link = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %16, i32 0, i32 14
  %17 = ptrtoint ptr %port_set_link to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %port_set_link, align 4
  %tobool5.not = icmp eq ptr %18, null
  br i1 %tobool5.not, label %land.lhs.true4.if.end_crit_edge, label %if.then6

land.lhs.true4.if.end_crit_edge:                  ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then6:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  %call10 = tail call i32 %18(ptr noundef %1, i32 noundef %port, i32 noundef 0) #16
  br label %if.end

if.end:                                           ; preds = %if.then6, %land.lhs.true4.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %lor.lhs.false.if.end_crit_edge, %entry.if.end_crit_edge
  %interface11 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %19 = ptrtoint ptr %interface11 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %interface11, align 4
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %22, i32 0, i32 22
  %23 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i, align 4
  %port_set_rgmii_delay.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %24, i32 0, i32 13
  %25 = ptrtoint ptr %port_set_rgmii_delay.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %port_set_rgmii_delay.i, align 4
  %tobool.not.i = icmp eq ptr %26, null
  br i1 %tobool.not.i, label %if.end.if.end6.i_crit_edge, label %if.then.i

if.end.if.end6.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end
  %call.i = tail call i32 %26(ptr noundef %1, i32 noundef %port, i32 noundef %20) #16
  %27 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.120)
  switch i32 %call.i, label %if.then.i.mv88e6xxx_port_config_interface.exit_crit_edge [
    i32 0, label %if.then.i.if.end6.i_crit_edge
    i32 -95, label %if.then.i.if.end6.i_crit_edge102
  ]

if.then.i.if.end6.i_crit_edge102:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i.if.end6.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i.mv88e6xxx_port_config_interface.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_config_interface.exit

if.end6.i:                                        ; preds = %if.then.i.if.end6.i_crit_edge, %if.then.i.if.end6.i_crit_edge102, %if.end.if.end6.i_crit_edge
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %1, align 8
  %ops8.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %29, i32 0, i32 22
  %30 = ptrtoint ptr %ops8.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ops8.i, align 4
  %port_set_cmode.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %31, i32 0, i32 31
  %32 = ptrtoint ptr %port_set_cmode.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %port_set_cmode.i, align 4
  %tobool9.not.i = icmp eq ptr %33, null
  br i1 %tobool9.not.i, label %if.end6.i.if.end17_crit_edge, label %if.then10.i

if.end6.i.if.end17_crit_edge:                     ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then10.i:                                      ; preds = %if.end6.i
  %call14.i = tail call i32 %33(ptr noundef %1, i32 noundef %port, i32 noundef %20) #16
  %34 = zext i32 %call14.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.121)
  switch i32 %call14.i, label %if.then10.i.mv88e6xxx_port_config_interface.exit_crit_edge [
    i32 0, label %if.then10.i.if.end17_crit_edge
    i32 -95, label %if.then10.i.if.end17_crit_edge103
  ]

if.then10.i.if.end17_crit_edge103:                ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then10.i.if.end17_crit_edge:                   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then10.i.mv88e6xxx_port_config_interface.exit_crit_edge: ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_config_interface.exit

mv88e6xxx_port_config_interface.exit:             ; preds = %if.then10.i.mv88e6xxx_port_config_interface.exit_crit_edge, %if.then.i.mv88e6xxx_port_config_interface.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i, %if.then.i.mv88e6xxx_port_config_interface.exit_crit_edge ], [ %call14.i, %if.then10.i.mv88e6xxx_port_config_interface.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cond = icmp eq i32 %retval.0.i, 0
  br i1 %cond, label %mv88e6xxx_port_config_interface.exit.if.end17_crit_edge, label %mv88e6xxx_port_config_interface.exit.err_unlock_crit_edge

mv88e6xxx_port_config_interface.exit.err_unlock_crit_edge: ; preds = %mv88e6xxx_port_config_interface.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_unlock

mv88e6xxx_port_config_interface.exit.if.end17_crit_edge: ; preds = %mv88e6xxx_port_config_interface.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.end17:                                         ; preds = %mv88e6xxx_port_config_interface.exit.if.end17_crit_edge, %if.then10.i.if.end17_crit_edge, %if.then10.i.if.end17_crit_edge103, %if.end6.i.if.end17_crit_edge
  %35 = ptrtoint ptr %interface11 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %interface11, align 4
  %37 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %1, align 8
  %ops1.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %38, i32 0, i32 22
  %39 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %ops1.i, align 4
  %serdes_pcs_config.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %40, i32 0, i32 47
  %41 = ptrtoint ptr %serdes_pcs_config.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %serdes_pcs_config.i, align 4
  %tobool.not.i87 = icmp eq ptr %42, null
  br i1 %tobool.not.i87, label %if.end17.mv88e6xxx_serdes_pcs_config.exit_crit_edge, label %if.then.i88

if.end17.mv88e6xxx_serdes_pcs_config.exit_crit_edge: ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_serdes_pcs_config.exit

if.then.i88:                                      ; preds = %if.end17
  %serdes_get_lane.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %40, i32 0, i32 45
  %43 = ptrtoint ptr %serdes_get_lane.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %serdes_get_lane.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %44, null
  br i1 %tobool.not.i.i, label %if.then.i88.mv88e6xxx_serdes_pcs_config.exit_crit_edge, label %mv88e6xxx_serdes_get_lane.exit.i

if.then.i88.mv88e6xxx_serdes_pcs_config.exit_crit_edge: ; preds = %if.then.i88
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_serdes_pcs_config.exit

mv88e6xxx_serdes_get_lane.exit.i:                 ; preds = %if.then.i88
  %call.i.i = tail call i32 %44(ptr noundef %1, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i)
  %cmp.i89 = icmp sgt i32 %call.i.i, -1
  br i1 %cmp.i89, label %if.then2.i, label %mv88e6xxx_serdes_get_lane.exit.i.mv88e6xxx_serdes_pcs_config.exit_crit_edge

mv88e6xxx_serdes_get_lane.exit.i.mv88e6xxx_serdes_pcs_config.exit_crit_edge: ; preds = %mv88e6xxx_serdes_get_lane.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_serdes_pcs_config.exit

if.then2.i:                                       ; preds = %mv88e6xxx_serdes_get_lane.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %serdes_pcs_config.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %serdes_pcs_config.i, align 4
  %call4.i = tail call i32 %46(ptr noundef %1, i32 noundef %port, i32 noundef %call.i.i, i32 noundef %mode, i32 noundef %36, ptr noundef %state) #16
  br label %mv88e6xxx_serdes_pcs_config.exit

mv88e6xxx_serdes_pcs_config.exit:                 ; preds = %if.then2.i, %mv88e6xxx_serdes_get_lane.exit.i.mv88e6xxx_serdes_pcs_config.exit_crit_edge, %if.then.i88.mv88e6xxx_serdes_pcs_config.exit_crit_edge, %if.end17.mv88e6xxx_serdes_pcs_config.exit_crit_edge
  %retval.0.i90 = phi i32 [ %call4.i, %if.then2.i ], [ 0, %mv88e6xxx_serdes_get_lane.exit.i.mv88e6xxx_serdes_pcs_config.exit_crit_edge ], [ 0, %if.end17.mv88e6xxx_serdes_pcs_config.exit_crit_edge ], [ 0, %if.then.i88.mv88e6xxx_serdes_pcs_config.exit_crit_edge ]
  %47 = tail call i32 @llvm.smin.i32(i32 %retval.0.i90, i32 0)
  br label %if.end23

if.end23:                                         ; preds = %mv88e6xxx_serdes_pcs_config.exit, %lor.lhs.false.if.end23_crit_edge
  %err.0 = phi i32 [ %47, %mv88e6xxx_serdes_pcs_config.exit ], [ 0, %lor.lhs.false.if.end23_crit_edge ]
  %48 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %1, align 8
  %ops25 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %49, i32 0, i32 22
  %50 = ptrtoint ptr %ops25 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ops25, align 4
  %port_set_link26 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %51, i32 0, i32 14
  %52 = ptrtoint ptr %port_set_link26 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %port_set_link26, align 4
  %tobool27.not = icmp eq ptr %53, null
  br i1 %tobool27.not, label %if.end23.if.end44_crit_edge, label %land.lhs.true28

if.end23.if.end44_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

land.lhs.true28:                                  ; preds = %if.end23
  %54 = zext i32 %mode to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.122)
  switch i32 %mode, label %land.lhs.true28.if.end44_crit_edge [
    i32 2, label %land.lhs.true30
    i32 0, label %land.lhs.true36
  ]

land.lhs.true28.if.end44_crit_edge:               ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

land.lhs.true30:                                  ; preds = %land.lhs.true28
  %interface31 = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 9
  %55 = ptrtoint ptr %interface31 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %interface31, align 8
  %interface32 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %57 = ptrtoint ptr %interface32 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %interface32, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %56, i32 %58)
  %cmp33.not = icmp eq i32 %56, %58
  br i1 %cmp33.not, label %land.lhs.true30.if.end44_crit_edge, label %land.lhs.true30.if.then39_crit_edge

land.lhs.true30.if.then39_crit_edge:              ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then39

land.lhs.true30.if.end44_crit_edge:               ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

land.lhs.true36:                                  ; preds = %land.lhs.true28
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg.i) #16
  %59 = ptrtoint ptr %reg.i to i32
  call void @__asan_store2_noabort(i32 %59)
  store i16 -1, ptr %reg.i, align 2, !annotation !350
  %60 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %49, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %61)
  %cmp.i91 = icmp eq i32 %61, 6
  br i1 %cmp.i91, label %if.then.i94, label %if.end.i

if.then.i94:                                      ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #18
  %num_internal_phys.i92 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %49, i32 0, i32 6
  %62 = ptrtoint ptr %num_internal_phys.i92 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %num_internal_phys.i92, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %63, i32 %port)
  %cmp2.i = icmp ugt i32 %63, %port
  %conv.i93 = zext i1 %cmp2.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

if.end.i:                                         ; preds = %land.lhs.true36
  %call.i95 = call i32 @mv88e6xxx_port_read(ptr noundef %1, i32 noundef %port, i32 noundef 0, ptr noundef nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i95)
  %tobool.not.i96 = icmp eq i32 %call.i95, 0
  br i1 %tobool.not.i96, label %if.end4.i, label %mv88e6xxx_port_ppu_updates.exit.thread

mv88e6xxx_port_ppu_updates.exit.thread:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %64 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %65, ptr noundef nonnull @.str.76, i32 noundef %port, ptr noundef nonnull @.str.77) #19
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg.i) #16
  br label %if.then39

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %66 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %reg.i, align 2
  %68 = lshr i16 %67, 12
  %.lobit.i = and i16 %68, 1
  %69 = zext i16 %.lobit.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

mv88e6xxx_port_ppu_updates.exit:                  ; preds = %if.end4.i, %if.then.i94
  %retval.0.i97 = phi i32 [ %conv.i93, %if.then.i94 ], [ %69, %if.end4.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i97)
  %tobool38.not = icmp eq i32 %retval.0.i97, 0
  br i1 %tobool38.not, label %mv88e6xxx_port_ppu_updates.exit.if.end44_crit_edge, label %mv88e6xxx_port_ppu_updates.exit.if.then39_crit_edge

mv88e6xxx_port_ppu_updates.exit.if.then39_crit_edge: ; preds = %mv88e6xxx_port_ppu_updates.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then39

mv88e6xxx_port_ppu_updates.exit.if.end44_crit_edge: ; preds = %mv88e6xxx_port_ppu_updates.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

if.then39:                                        ; preds = %mv88e6xxx_port_ppu_updates.exit.if.then39_crit_edge, %mv88e6xxx_port_ppu_updates.exit.thread, %land.lhs.true30.if.then39_crit_edge
  %70 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %1, align 8
  %ops41 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %71, i32 0, i32 22
  %72 = ptrtoint ptr %ops41 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %ops41, align 4
  %port_set_link42 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %73, i32 0, i32 14
  %74 = ptrtoint ptr %port_set_link42 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %port_set_link42, align 4
  %call43 = call i32 %75(ptr noundef %1, i32 noundef %port, i32 noundef -2) #16
  br label %if.end44

if.end44:                                         ; preds = %if.then39, %mv88e6xxx_port_ppu_updates.exit.if.end44_crit_edge, %land.lhs.true30.if.end44_crit_edge, %land.lhs.true28.if.end44_crit_edge, %if.end23.if.end44_crit_edge
  %interface45 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %76 = ptrtoint ptr %interface45 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %interface45, align 4
  %interface46 = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 9
  %78 = ptrtoint ptr %interface46 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %77, ptr %interface46, align 8
  br label %err_unlock

err_unlock:                                       ; preds = %if.end44, %mv88e6xxx_port_config_interface.exit.err_unlock_crit_edge
  %err.1 = phi i32 [ %err.0, %if.end44 ], [ %retval.0.i, %mv88e6xxx_port_config_interface.exit.err_unlock_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  %79 = zext i32 %err.1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %79, ptr @__sancov_gen_cov_switch_values.123)
  switch i32 %err.1, label %do.end [
    i32 0, label %err_unlock.if.end51_crit_edge
    i32 -95, label %err_unlock.if.end51_crit_edge104
  ]

err_unlock.if.end51_crit_edge104:                 ; preds = %err_unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end51

err_unlock.if.end51_crit_edge:                    ; preds = %err_unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end51

do.end:                                           ; preds = %err_unlock
  call void @__sanitizer_cov_trace_pc() #18
  %80 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ds, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %81, ptr noundef nonnull @.str.74, i32 noundef %port) #19
  br label %if.end51

if.end51:                                         ; preds = %do.end, %err_unlock.if.end51_crit_edge, %err_unlock.if.end51_crit_edge104
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_serdes_pcs_an_restart(ptr nocapture noundef readonly %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops1 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops1, align 4
  %serdes_pcs_an_restart = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 48
  %6 = ptrtoint ptr %serdes_pcs_an_restart to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %serdes_pcs_an_restart, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.if.end8_crit_edge, label %if.then

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then:                                          ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i, align 4
  %serdes_get_lane.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 45
  %12 = ptrtoint ptr %serdes_get_lane.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %serdes_get_lane.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.then.if.end8.critedge_crit_edge, label %mv88e6xxx_serdes_get_lane.exit

if.then.if.end8.critedge_crit_edge:               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.critedge

mv88e6xxx_serdes_get_lane.exit:                   ; preds = %if.then
  %call.i = tail call i32 %13(ptr noundef %1, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp = icmp sgt i32 %call.i, -1
  br i1 %cmp, label %if.then2, label %mv88e6xxx_serdes_get_lane.exit.if.end8.critedge_crit_edge

mv88e6xxx_serdes_get_lane.exit.if.end8.critedge_crit_edge: ; preds = %mv88e6xxx_serdes_get_lane.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.critedge

if.then2:                                         ; preds = %mv88e6xxx_serdes_get_lane.exit
  %14 = ptrtoint ptr %serdes_pcs_an_restart to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %serdes_pcs_an_restart, align 4
  %call4 = tail call i32 %15(ptr noundef %1, i32 noundef %port, i32 noundef %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %phi.cmp = icmp eq i32 %call4, 0
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br i1 %phi.cmp, label %if.then2.if.end8_crit_edge, label %do.end

if.then2.if.end8_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

do.end:                                           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %17, ptr noundef nonnull @.str.78, i32 noundef %port) #19
  br label %if.end8

if.end8.critedge:                                 ; preds = %mv88e6xxx_serdes_get_lane.exit.if.end8.critedge_crit_edge, %if.then.if.end8.critedge_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %if.end8

if.end8:                                          ; preds = %if.end8.critedge, %do.end, %if.then2.if.end8_crit_edge, %entry.if.end8_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_mac_link_down(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %mode, i32 noundef %interface) #0 align 64 {
entry:
  %reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops1 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops1, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg.i) #16
  %6 = ptrtoint ptr %reg.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %reg.i, align 2, !annotation !350
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %10)
  %cmp.i = icmp eq i32 %10, 6
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %num_internal_phys.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %8, i32 0, i32 6
  %11 = ptrtoint ptr %num_internal_phys.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_internal_phys.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %port)
  %cmp2.i = icmp ugt i32 %12, %port
  %conv.i = zext i1 %cmp2.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

if.end.i:                                         ; preds = %entry
  %call.i = call i32 @mv88e6xxx_port_read(ptr noundef %1, i32 noundef %port, i32 noundef 0, ptr noundef nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end4.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %13 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.76, i32 noundef %port, ptr noundef nonnull @.str.77) #19
  br label %mv88e6xxx_port_ppu_updates.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %reg.i, align 2
  %17 = lshr i16 %16, 12
  %.lobit.i = and i16 %17, 1
  %18 = zext i16 %.lobit.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

mv88e6xxx_port_ppu_updates.exit:                  ; preds = %if.end4.i, %do.end.i, %if.then.i
  %retval.0.i = phi i32 [ %conv.i, %if.then.i ], [ 1, %do.end.i ], [ %18, %if.end4.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mode)
  %cmp = icmp eq i32 %mode, 1
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %land.lhs.true, label %mv88e6xxx_port_ppu_updates.exit.land.lhs.true6_crit_edge

mv88e6xxx_port_ppu_updates.exit.land.lhs.true6_crit_edge: ; preds = %mv88e6xxx_port_ppu_updates.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true6

land.lhs.true:                                    ; preds = %mv88e6xxx_port_ppu_updates.exit
  %port_sync_link = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 15
  %19 = ptrtoint ptr %port_sync_link to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %port_sync_link, align 4
  %tobool2.not = icmp eq ptr %20, null
  br i1 %tobool2.not, label %land.lhs.true.land.lhs.true6_crit_edge, label %if.end

land.lhs.true.land.lhs.true6_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true6

if.end:                                           ; preds = %land.lhs.true
  %call4 = call i32 %20(ptr noundef %1, i32 noundef %port, i32 noundef %mode, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.end.land.lhs.true6_crit_edge, label %if.end11.thread35

if.end.land.lhs.true6_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true6

if.end11.thread35:                                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %do.end

land.lhs.true6:                                   ; preds = %if.end.land.lhs.true6_crit_edge, %land.lhs.true.land.lhs.true6_crit_edge, %mv88e6xxx_port_ppu_updates.exit.land.lhs.true6_crit_edge
  %port_set_speed_duplex = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 17
  %21 = ptrtoint ptr %port_set_speed_duplex to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %port_set_speed_duplex, align 4
  %tobool7.not = icmp eq ptr %22, null
  br i1 %tobool7.not, label %if.end11.thread, label %if.end11

if.end11.thread:                                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #18
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %if.end14

if.end11:                                         ; preds = %land.lhs.true6
  %call10 = call i32 %22(ptr noundef %1, i32 noundef %port, i32 noundef -2, i32 noundef -2) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool12.not = icmp eq i32 %call10, 0
  br i1 %tobool12.not, label %if.end11.if.end14_crit_edge, label %if.end11.do.end_crit_edge

if.end11.do.end_crit_edge:                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.end11.if.end14_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

do.end:                                           ; preds = %if.end11.do.end_crit_edge, %if.end11.thread35
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %23 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %24, ptr noundef nonnull @.str.80, i32 noundef %port) #19
  br label %if.end14

if.end14:                                         ; preds = %do.end, %if.end11.if.end14_crit_edge, %if.end11.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_mac_link_up(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %mode, i32 noundef %interface, ptr nocapture noundef readnone %phydev, i32 noundef %speed, i32 noundef %duplex, i1 noundef zeroext %tx_pause, i1 noundef zeroext %rx_pause) #0 align 64 {
entry:
  %reg.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops2 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops2, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg.i) #16
  %6 = ptrtoint ptr %reg.i to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 -1, ptr %reg.i, align 2, !annotation !350
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 8
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %10)
  %cmp.i = icmp eq i32 %10, 6
  br i1 %cmp.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %num_internal_phys.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %8, i32 0, i32 6
  %11 = ptrtoint ptr %num_internal_phys.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_internal_phys.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %port)
  %cmp2.i = icmp ugt i32 %12, %port
  %conv.i = zext i1 %cmp2.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

if.end.i:                                         ; preds = %entry
  %call.i = call i32 @mv88e6xxx_port_read(ptr noundef %1, i32 noundef %port, i32 noundef 0, ptr noundef nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end4.i, label %do.end.i

do.end.i:                                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %13 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %14, ptr noundef nonnull @.str.76, i32 noundef %port, ptr noundef nonnull @.str.77) #19
  br label %mv88e6xxx_port_ppu_updates.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %reg.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %reg.i, align 2
  %17 = lshr i16 %16, 12
  %.lobit.i = and i16 %17, 1
  %18 = zext i16 %.lobit.i to i32
  br label %mv88e6xxx_port_ppu_updates.exit

mv88e6xxx_port_ppu_updates.exit:                  ; preds = %if.end4.i, %do.end.i, %if.then.i
  %retval.0.i = phi i32 [ %conv.i, %if.then.i ], [ 1, %do.end.i ], [ %18, %if.end4.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mode)
  %cmp = icmp eq i32 %mode, 1
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %if.then, label %error.thread

error.thread:                                     ; preds = %mv88e6xxx_port_ppu_updates.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %if.end25

if.then:                                          ; preds = %mv88e6xxx_port_ppu_updates.exit
  %19 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %1, align 8
  %ops1.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %20, i32 0, i32 22
  %21 = ptrtoint ptr %ops1.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops1.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %mode)
  %cmp.i.i = icmp eq i32 %mode, 2
  br i1 %cmp.i.i, label %if.then.if.end_crit_edge, label %land.lhs.true.i

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.then
  %serdes_pcs_link_up.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %22, i32 0, i32 49
  %23 = ptrtoint ptr %serdes_pcs_link_up.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %serdes_pcs_link_up.i, align 4
  %tobool.not.i49 = icmp eq ptr %24, null
  br i1 %tobool.not.i49, label %land.lhs.true.i.if.end_crit_edge, label %if.then.i50

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i50:                                      ; preds = %land.lhs.true.i
  %serdes_get_lane.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %22, i32 0, i32 45
  %25 = ptrtoint ptr %serdes_get_lane.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %serdes_get_lane.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %26, null
  br i1 %tobool.not.i.i, label %if.then.i50.if.end_crit_edge, label %mv88e6xxx_serdes_get_lane.exit.i

if.then.i50.if.end_crit_edge:                     ; preds = %if.then.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

mv88e6xxx_serdes_get_lane.exit.i:                 ; preds = %if.then.i50
  %call.i.i = call i32 %26(ptr noundef %1, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i.i)
  %cmp.i51 = icmp sgt i32 %call.i.i, -1
  br i1 %cmp.i51, label %mv88e6xxx_serdes_pcs_link_up.exit, label %mv88e6xxx_serdes_get_lane.exit.i.if.end_crit_edge

mv88e6xxx_serdes_get_lane.exit.i.if.end_crit_edge: ; preds = %mv88e6xxx_serdes_get_lane.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

mv88e6xxx_serdes_pcs_link_up.exit:                ; preds = %mv88e6xxx_serdes_get_lane.exit.i
  %27 = ptrtoint ptr %serdes_pcs_link_up.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %serdes_pcs_link_up.i, align 4
  %call5.i = call i32 %28(ptr noundef %1, i32 noundef %port, i32 noundef %call.i.i, i32 noundef %speed, i32 noundef %duplex) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool4.not = icmp eq i32 %call5.i, 0
  br i1 %tobool4.not, label %mv88e6xxx_serdes_pcs_link_up.exit.if.end_crit_edge, label %mv88e6xxx_serdes_pcs_link_up.exit.error_crit_edge

mv88e6xxx_serdes_pcs_link_up.exit.error_crit_edge: ; preds = %mv88e6xxx_serdes_pcs_link_up.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %error

mv88e6xxx_serdes_pcs_link_up.exit.if.end_crit_edge: ; preds = %mv88e6xxx_serdes_pcs_link_up.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %mv88e6xxx_serdes_pcs_link_up.exit.if.end_crit_edge, %mv88e6xxx_serdes_get_lane.exit.i.if.end_crit_edge, %if.then.i50.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge, %if.then.if.end_crit_edge
  %port_set_speed_duplex = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 17
  %29 = ptrtoint ptr %port_set_speed_duplex to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %port_set_speed_duplex, align 4
  %tobool6.not = icmp eq ptr %30, null
  br i1 %tobool6.not, label %if.end.if.end14_crit_edge, label %if.then7

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then7:                                         ; preds = %if.end
  %call9 = call i32 %30(ptr noundef %1, i32 noundef %port, i32 noundef %speed, i32 noundef %duplex) #16
  %31 = zext i32 %call9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.124)
  switch i32 %call9, label %if.then7.error_crit_edge [
    i32 0, label %if.then7.if.end14_crit_edge
    i32 -95, label %if.end14.fold.split
  ]

if.then7.if.end14_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then7.error_crit_edge:                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %error

if.end14.fold.split:                              ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.end14:                                         ; preds = %if.end14.fold.split, %if.then7.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %err.0 = phi i32 [ %call9, %if.then7.if.end14_crit_edge ], [ 0, %if.end.if.end14_crit_edge ], [ -95, %if.end14.fold.split ]
  %port_sync_link = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 15
  %32 = ptrtoint ptr %port_sync_link to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %port_sync_link, align 4
  %tobool15.not = icmp eq ptr %33, null
  br i1 %tobool15.not, label %if.end14.error_crit_edge, label %if.then16

if.end14.error_crit_edge:                         ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %error

if.then16:                                        ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  %call18 = call i32 %33(ptr noundef %1, i32 noundef %port, i32 noundef %mode, i1 noundef zeroext true) #16
  br label %error

error:                                            ; preds = %if.then16, %if.end14.error_crit_edge, %if.then7.error_crit_edge, %mv88e6xxx_serdes_pcs_link_up.exit.error_crit_edge
  %err.1 = phi i32 [ %call5.i, %mv88e6xxx_serdes_pcs_link_up.exit.error_crit_edge ], [ %call18, %if.then16 ], [ %err.0, %if.end14.error_crit_edge ], [ %call9, %if.then7.error_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  %34 = zext i32 %err.1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.125)
  switch i32 %err.1, label %do.end [
    i32 0, label %error.if.end25_crit_edge
    i32 -95, label %error.if.end25_crit_edge57
  ]

error.if.end25_crit_edge57:                       ; preds = %error
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

error.if.end25_crit_edge:                         ; preds = %error
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

do.end:                                           ; preds = %error
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ds, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %36, ptr noundef nonnull @.str.82, i32 noundef %port) #19
  br label %if.end25

if.end25:                                         ; preds = %do.end, %error.if.end25_crit_edge, %error.if.end25_crit_edge57, %error.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_get_strings(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %stringset, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %stringset)
  %cmp.not = icmp eq i32 %stringset, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %stats_get_strings = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 37
  %6 = ptrtoint ptr %stats_get_strings to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stats_get_strings, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end.if.end5_crit_edge, label %if.then1

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then1:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 %7(ptr noundef %1, ptr noundef %data) #16
  br label %if.end5

if.end5:                                          ; preds = %if.then1, %if.end.if.end5_crit_edge
  %count.0 = phi i32 [ %call, %if.then1 ], [ 0, %if.end.if.end5_crit_edge ]
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops7 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops7, align 4
  %serdes_get_strings = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 54
  %12 = ptrtoint ptr %serdes_get_strings to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %serdes_get_strings, align 4
  %tobool8.not = icmp eq ptr %13, null
  br i1 %tobool8.not, label %if.end5.if.end14_crit_edge, label %if.then9

if.end5.if.end14_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then9:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %mul = shl i32 %count.0, 5
  %add.ptr = getelementptr i8, ptr %data, i32 %mul
  %call13 = tail call i32 %13(ptr noundef %1, i32 noundef %port, ptr noundef %add.ptr) #16
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end5.if.end14_crit_edge
  %data.addr.0 = phi ptr [ %add.ptr, %if.then9 ], [ %data, %if.end5.if.end14_crit_edge ]
  %count.1 = phi i32 [ %call13, %if.then9 ], [ %count.0, %if.end5.if.end14_crit_edge ]
  %mul15 = shl i32 %count.1, 5
  %add.ptr16 = getelementptr i8, ptr %data.addr.0, i32 %mul15
  %call.i = tail call i32 @strlcpy(ptr noundef %add.ptr16, ptr noundef nonnull @.str.84, i32 noundef 32) #16
  %add.ptr.1.i = getelementptr i8, ptr %add.ptr16, i32 32
  %call.1.i = tail call i32 @strlcpy(ptr noundef %add.ptr.1.i, ptr noundef nonnull @.str.85, i32 noundef 32) #16
  %add.ptr.2.i = getelementptr i8, ptr %add.ptr16, i32 64
  %call.2.i = tail call i32 @strlcpy(ptr noundef %add.ptr.2.i, ptr noundef nonnull @.str.86, i32 noundef 32) #16
  %add.ptr.3.i = getelementptr i8, ptr %add.ptr16, i32 96
  %call.3.i = tail call i32 @strlcpy(ptr noundef %add.ptr.3.i, ptr noundef nonnull @.str.87, i32 noundef 32) #16
  %add.ptr.4.i = getelementptr i8, ptr %add.ptr16, i32 128
  %call.4.i = tail call i32 @strlcpy(ptr noundef %add.ptr.4.i, ptr noundef nonnull @.str.88, i32 noundef 32) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_get_ethtool_stats(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops.i, align 4
  %stats_snapshot.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 34
  %6 = ptrtoint ptr %stats_snapshot.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stats_snapshot.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.cleanup.sink.split_crit_edge, label %mv88e6xxx_stats_snapshot.exit

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

mv88e6xxx_stats_snapshot.exit:                    ; preds = %entry
  %call.i = tail call i32 %7(ptr noundef %1, i32 noundef %port) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %mv88e6xxx_stats_snapshot.exit.cleanup_crit_edge, label %if.end

mv88e6xxx_stats_snapshot.exit.cleanup_crit_edge:  ; preds = %mv88e6xxx_stats_snapshot.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_stats_snapshot.exit
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops.i7 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops.i7 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i7, align 4
  %stats_get_stats.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 38
  %12 = ptrtoint ptr %stats_get_stats.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %stats_get_stats.i, align 4
  %tobool.not.i8 = icmp eq ptr %13, null
  br i1 %tobool.not.i8, label %if.end.if.end.i10_crit_edge, label %if.then.i

if.end.if.end.i10_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i10

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call.i9 = tail call i32 %13(ptr noundef %1, i32 noundef %port, ptr noundef %data) #16
  br label %if.end.i10

if.end.i10:                                       ; preds = %if.then.i, %if.end.if.end.i10_crit_edge
  %count.0.i = phi i32 [ %call.i9, %if.then.i ], [ 0, %if.end.if.end.i10_crit_edge ]
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 8
  %ops5.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %15, i32 0, i32 22
  %16 = ptrtoint ptr %ops5.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ops5.i, align 4
  %serdes_get_stats.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %17, i32 0, i32 55
  %18 = ptrtoint ptr %serdes_get_stats.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %serdes_get_stats.i, align 4
  %tobool6.not.i = icmp eq ptr %19, null
  br i1 %tobool6.not.i, label %if.end.i10.mv88e6xxx_get_stats.exit_crit_edge, label %if.then7.i

if.end.i10.mv88e6xxx_get_stats.exit_crit_edge:    ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_get_stats.exit

if.then7.i:                                       ; preds = %if.end.i10
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr.i = getelementptr i64, ptr %data, i32 %count.0.i
  %call11.i = tail call i32 %19(ptr noundef %1, i32 noundef %port, ptr noundef %add.ptr.i) #16
  br label %mv88e6xxx_get_stats.exit

mv88e6xxx_get_stats.exit:                         ; preds = %if.then7.i, %if.end.i10.mv88e6xxx_get_stats.exit_crit_edge
  %data.addr.0.i = phi ptr [ %add.ptr.i, %if.then7.i ], [ %data, %if.end.i10.mv88e6xxx_get_stats.exit_crit_edge ]
  %count.1.i = phi i32 [ %call11.i, %if.then7.i ], [ %count.0.i, %if.end.i10.mv88e6xxx_get_stats.exit_crit_edge ]
  %add.ptr13.i = getelementptr i64, ptr %data.addr.0.i, i32 %count.1.i
  %atu_member_violation.i.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 4
  %20 = ptrtoint ptr %atu_member_violation.i.i to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %atu_member_violation.i.i, align 8
  %incdec.ptr.i.i = getelementptr i64, ptr %add.ptr13.i, i32 1
  %22 = ptrtoint ptr %add.ptr13.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %add.ptr13.i, align 8
  %atu_miss_violation.i.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 5
  %23 = ptrtoint ptr %atu_miss_violation.i.i to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %atu_miss_violation.i.i, align 8
  %incdec.ptr3.i.i = getelementptr i64, ptr %add.ptr13.i, i32 2
  %25 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %incdec.ptr.i.i, align 8
  %atu_full_violation.i.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 6
  %26 = ptrtoint ptr %atu_full_violation.i.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %atu_full_violation.i.i, align 8
  %incdec.ptr6.i.i = getelementptr i64, ptr %add.ptr13.i, i32 3
  %28 = ptrtoint ptr %incdec.ptr3.i.i to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %27, ptr %incdec.ptr3.i.i, align 8
  %vtu_member_violation.i.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 7
  %29 = ptrtoint ptr %vtu_member_violation.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %vtu_member_violation.i.i, align 8
  %incdec.ptr9.i.i = getelementptr i64, ptr %add.ptr13.i, i32 4
  %31 = ptrtoint ptr %incdec.ptr6.i.i to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %30, ptr %incdec.ptr6.i.i, align 8
  %vtu_miss_violation.i.i = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 8
  %32 = ptrtoint ptr %vtu_miss_violation.i.i to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %vtu_miss_violation.i.i, align 8
  %34 = ptrtoint ptr %incdec.ptr9.i.i to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %incdec.ptr9.i.i, align 8
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %mv88e6xxx_get_stats.exit, %entry.cleanup.sink.split_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %mv88e6xxx_stats_snapshot.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_get_sset_count(ptr nocapture noundef readonly %ds, i32 noundef %port, i32 noundef %sset) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sset)
  %cmp.not = icmp eq i32 %sset, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %stats_get_sset_count = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 36
  %6 = ptrtoint ptr %stats_get_sset_count to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %stats_get_sset_count, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end.if.end8_crit_edge, label %if.end5

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end5:                                          ; preds = %if.end
  %call = tail call i32 %7(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp6 = icmp slt i32 %call, 0
  br i1 %cmp6, label %if.end5.out_crit_edge, label %if.end5.if.end8_crit_edge

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end5.out_crit_edge:                            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end8:                                          ; preds = %if.end5.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %count.040 = phi i32 [ %call, %if.end5.if.end8_crit_edge ], [ 0, %if.end.if.end8_crit_edge ]
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops10 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops10 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops10, align 4
  %serdes_get_sset_count = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 53
  %12 = ptrtoint ptr %serdes_get_sset_count to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %serdes_get_sset_count, align 4
  %tobool11.not = icmp eq ptr %13, null
  br i1 %tobool11.not, label %if.end8.if.end20_crit_edge, label %if.end17

if.end8.if.end20_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.end17:                                         ; preds = %if.end8
  %call16 = tail call i32 %13(ptr noundef %1, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %cmp18 = icmp slt i32 %call16, 0
  br i1 %cmp18, label %if.end17.out_crit_edge, label %if.end17.if.end20_crit_edge

if.end17.if.end20_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.end17.out_crit_edge:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end20:                                         ; preds = %if.end17.if.end20_crit_edge, %if.end8.if.end20_crit_edge
  %serdes_count.043 = phi i32 [ %call16, %if.end17.if.end20_crit_edge ], [ 0, %if.end8.if.end20_crit_edge ]
  %add = add nuw i32 %count.040, 5
  %add21 = add i32 %add, %serdes_count.043
  br label %out

out:                                              ; preds = %if.end20, %if.end17.out_crit_edge, %if.end5.out_crit_edge
  %count.1 = phi i32 [ %call, %if.end5.out_crit_edge ], [ %add21, %if.end20 ], [ %call16, %if.end17.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %count.1, %out ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_get_ts_info(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_enable(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readnone %phydev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_serdes_power(ptr noundef %1, i32 noundef %port, i1 noundef zeroext true)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_disable(ptr nocapture noundef readonly %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_serdes_power(ptr noundef %1, i32 noundef %port, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.90) #19
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_set_mac_eee(ptr nocapture noundef readnone %ds, i32 noundef %port, ptr nocapture noundef readnone %e) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_get_mac_eee(ptr nocapture noundef readnone %ds, i32 noundef %port, ptr nocapture noundef readnone %e) #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_get_eeprom_len(ptr nocapture noundef readonly %ds) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %eeprom_len = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %eeprom_len to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %eeprom_len, align 8
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_get_eeprom(ptr nocapture noundef readonly %ds, ptr noundef %eeprom, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %get_eeprom = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %get_eeprom to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %get_eeprom, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops2 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops2, align 4
  %get_eeprom3 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %get_eeprom3 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %get_eeprom3, align 4
  %call = tail call i32 %13(ptr noundef %1, ptr noundef %eeprom, ptr noundef %data) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %magic = getelementptr inbounds %struct.ethtool_eeprom, ptr %eeprom, i32 0, i32 1
  %14 = ptrtoint ptr %magic to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -1007924911, ptr %magic, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -95, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_set_eeprom(ptr nocapture noundef readonly %ds, ptr noundef %eeprom, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %set_eeprom = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %set_eeprom to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %set_eeprom, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %magic = getelementptr inbounds %struct.ethtool_eeprom, ptr %eeprom, i32 0, i32 1
  %8 = ptrtoint ptr %magic to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %magic, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1007924911, i32 %9)
  %cmp.not = icmp eq i32 %9, -1007924911
  br i1 %cmp.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %ops4 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %ops4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops4, align 4
  %set_eeprom5 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %13, i32 0, i32 5
  %14 = ptrtoint ptr %set_eeprom5 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %set_eeprom5, align 4
  %call = tail call i32 %15(ptr noundef %1, ptr noundef %eeprom, ptr noundef %data) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end2, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.end2 ], [ -95, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_get_regs_len(ptr nocapture noundef readonly %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %serdes_get_regs_len = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 56
  %6 = ptrtoint ptr %serdes_get_regs_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %serdes_get_regs_len, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 %7(ptr noundef %1, i32 noundef %port) #16
  %add = add i32 %call, 64
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %len.0 = phi i32 [ %add, %if.then ], [ 64, %entry.if.end_crit_edge ]
  ret i32 %len.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_get_regs(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef writeonly %regs, ptr noundef %_p) #0 align 64 {
entry:
  %reg = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %reg) #16
  %2 = ptrtoint ptr %reg to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %reg, align 2, !annotation !350
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 8
  %prod_num = getelementptr inbounds %struct.mv88e6xxx_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prod_num to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %prod_num, align 4
  %conv = zext i16 %6 to i32
  %version = getelementptr inbounds %struct.ethtool_regs, ptr %regs, i32 0, i32 1
  %7 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %conv, ptr %version, align 4
  %8 = call ptr @memset(ptr %_p, i32 255, i32 64)
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.024 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %call = call i32 @mv88e6xxx_port_read(ptr noundef %1, i32 noundef %port, i32 noundef %i.024, ptr noundef nonnull %reg) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %reg to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %reg, align 2
  %arrayidx = getelementptr i16, ptr %_p, i32 %i.024
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %10, ptr %arrayidx, align 2
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.024, 1
  %exitcond.not = icmp eq i32 %inc, 32
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops, align 4
  %serdes_get_regs = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %15, i32 0, i32 57
  %16 = ptrtoint ptr %serdes_get_regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %serdes_get_regs, align 4
  %tobool3.not = icmp eq ptr %17, null
  br i1 %tobool3.not, label %for.end.if.end9_crit_edge, label %if.then4

for.end.if.end9_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then4:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx8 = getelementptr i16, ptr %_p, i32 32
  call void %17(ptr noundef %1, i32 noundef %port, ptr noundef %arrayidx8) #16
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %for.end.if.end9_crit_edge
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %reg) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_set_ageing_time(ptr nocapture noundef readonly %ds, i32 noundef %ageing_time) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call i32 @mv88e6xxx_g1_atu_set_age_time(ptr noundef %1, i32 noundef %ageing_time) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_bridge_join(ptr nocapture noundef readonly %ds, i32 noundef %port, [4 x i32] %bridge.coerce, ptr nocapture noundef writeonly %tx_fwd_offload) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bridge.coerce.fca.1.extract = extractvalue [4 x i32] %bridge.coerce, 1
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_bridge_map(ptr noundef %1, [4 x i32] %bridge.coerce)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.unlock_crit_edge

entry.unlock_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end4:                                          ; preds = %if.end
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %pvt.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %pvt.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pvt.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.i.not = icmp eq i8 %5, 0
  br i1 %tobool.i.not, label %if.end4.unlock_crit_edge, label %if.then6

if.end4.unlock_crit_edge:                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.then6:                                         ; preds = %if.end4
  %dst.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %6 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst.i, align 4
  %last_switch.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %last_switch.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %last_switch.i, align 4
  %add.i = add i32 %9, %bridge.coerce.fca.1.extract
  %10 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv, align 4
  %conv1.i = and i32 %add.i, 255
  %call.i = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %11, i32 noundef %conv1.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool8.not = icmp eq i32 %call.i, 0
  br i1 %tobool8.not, label %if.end10, label %if.then6.unlock_crit_edge

if.then6.unlock_crit_edge:                        ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end10:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %tx_fwd_offload to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 1, ptr %tx_fwd_offload, align 1
  br label %unlock

unlock:                                           ; preds = %if.end10, %if.then6.unlock_crit_edge, %if.end4.unlock_crit_edge, %if.end.unlock_crit_edge, %entry.unlock_crit_edge
  %err.0 = phi i32 [ %call, %entry.unlock_crit_edge ], [ %call1, %if.end.unlock_crit_edge ], [ %call.i, %if.then6.unlock_crit_edge ], [ 0, %if.end10 ], [ 0, %if.end4.unlock_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_bridge_leave(ptr nocapture noundef readonly %ds, i32 noundef %port, [4 x i32] %bridge.coerce) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bridge.coerce.fca.2.extract = extractvalue [4 x i32] %bridge.coerce, 2
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = and i32 %bridge.coerce.fca.2.extract, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %bridge.coerce.fca.1.extract = extractvalue [4 x i32] %bridge.coerce, 1
  %dst.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %3 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dst.i, align 4
  %last_switch.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %4, i32 0, i32 12
  %5 = ptrtoint ptr %last_switch.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %last_switch.i, align 4
  %add.i = add i32 %6, %bridge.coerce.fca.1.extract
  %7 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %priv, align 4
  %conv1.i = and i32 %add.i, 255
  %call.i = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %8, i32 noundef %conv1.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool1.not = icmp eq i32 %call.i, 0
  br i1 %tobool1.not, label %land.lhs.true.if.end_crit_edge, label %do.end

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %10, ptr noundef nonnull @.str.92) #19
  br label %if.end

if.end:                                           ; preds = %do.end, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call2 = tail call fastcc i32 @mv88e6xxx_bridge_map(ptr noundef %1, [4 x i32] %bridge.coerce)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %lor.lhs.false, label %if.end.do.end9_crit_edge

if.end.do.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9

lor.lhs.false:                                    ; preds = %if.end
  %ds.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 2
  %11 = ptrtoint ptr %ds.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ds.i, align 8
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %12, i32 0, i32 2
  %13 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %index.i, align 4
  %call.i33 = tail call fastcc zeroext i16 @mv88e6xxx_port_vlan(ptr noundef %1, i32 noundef %14, i32 noundef %port) #16
  %shl.i = shl nuw i32 1, %port
  %15 = trunc i32 %shl.i to i16
  %16 = xor i16 %15, -1
  %conv1.i34 = and i16 %call.i33, %16
  %call2.i = tail call i32 @mv88e6xxx_port_set_vlan_map(ptr noundef %1, i32 noundef %port, i16 noundef zeroext %conv1.i34) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool5.not = icmp eq i32 %call2.i, 0
  br i1 %tobool5.not, label %lor.lhs.false.if.end11_crit_edge, label %lor.lhs.false.do.end9_crit_edge

lor.lhs.false.do.end9_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9

lor.lhs.false.if.end11_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

do.end9:                                          ; preds = %lor.lhs.false.do.end9_crit_edge, %if.end.do.end9_crit_edge
  %17 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %18, ptr noundef nonnull @.str.95) #19
  br label %if.end11

if.end11:                                         ; preds = %do.end9, %lor.lhs.false.if.end11_crit_edge
  %call12 = tail call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end11.if.end20_crit_edge, label %do.end17

if.end11.if.end20_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

do.end17:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ds, align 4
  %21 = inttoptr i32 %call12 to ptr
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %20, ptr noundef nonnull @.str.98, i32 noundef %port, ptr noundef nonnull %21) #19
  br label %if.end20

if.end20:                                         ; preds = %do.end17, %if.end11.if.end20_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_stp_state_set(ptr nocapture noundef readonly %ds, i32 noundef %port, i8 noundef zeroext %state) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call i32 @mv88e6xxx_port_set_state(ptr noundef %1, i32 noundef %port, i8 noundef zeroext %state) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.100, i32 noundef %port) #19
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_fast_age(ptr noundef readonly %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %dst1.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i, align 4
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i = load ptr, ptr %ports.i, align 4
  %cmp.not21.i = icmp eq ptr %.pn20.i, %ports.i
  br i1 %cmp.not21.i, label %entry.dsa_to_port.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.dsa_to_port.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %.pn22.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn20.i, %entry.for.body.i_crit_edge ]
  %ds3.i = getelementptr i8, ptr %.pn22.i, i32 -432
  %5 = ptrtoint ptr %ds3.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i, align 4
  %cmp4.i = icmp eq ptr %6, %ds
  br i1 %cmp4.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %index.i = getelementptr i8, ptr %.pn22.i, i32 -428
  %7 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i = icmp eq i32 %8, %port
  br i1 %cmp5.i, label %cleanup.split.loop.exit18.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i = load ptr, ptr %.pn22.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp.not.i, label %for.inc.i.dsa_to_port.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.dsa_to_port.exit_crit_edge:             ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit

cleanup.split.loop.exit18.i:                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i = getelementptr i8, ptr %.pn22.i, i32 -448
  br label %dsa_to_port.exit

dsa_to_port.exit:                                 ; preds = %cleanup.split.loop.exit18.i, %for.inc.i.dsa_to_port.exit_crit_edge, %entry.dsa_to_port.exit_crit_edge
  %retval.0.i = phi ptr [ %dp.0.le.i, %cleanup.split.loop.exit18.i ], [ null, %entry.dsa_to_port.exit_crit_edge ], [ null, %for.inc.i.dsa_to_port.exit_crit_edge ]
  %lag_dev = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i, i32 0, i32 18
  %10 = ptrtoint ptr %lag_dev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %lag_dev, align 4
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %if.end, label %dsa_to_port.exit.cleanup_crit_edge

dsa_to_port.exit.cleanup_crit_edge:               ; preds = %dsa_to_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %dsa_to_port.exit
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call1 = tail call i32 @mv88e6xxx_g1_atu_remove(ptr noundef %1, i16 noundef zeroext 0, i32 noundef %port, i1 noundef zeroext false) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %do.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.102, i32 noundef %port) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.cleanup_crit_edge, %dsa_to_port.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_port_pre_bridge_flags(ptr nocapture noundef readonly %ds, i32 noundef %port, [2 x i32] %flags.coerce, ptr nocapture noundef readnone %extack) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.coerce.fca.1.extract = extractvalue [2 x i32] %flags.coerce, 1
  %and = and i32 %flags.coerce.fca.1.extract, -18529
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops1 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops1, align 4
  %and3 = and i32 %flags.coerce.fca.1.extract, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.if.end7_crit_edge, label %land.lhs.true

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end
  %port_set_ucast_flood = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %port_set_ucast_flood to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %port_set_ucast_flood, align 4
  %tobool5.not = icmp eq ptr %7, null
  br i1 %tobool5.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end7_crit_edge

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %and9 = and i32 %flags.coerce.fca.1.extract, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end7.if.end14_crit_edge, label %land.lhs.true11

if.end7.if.end14_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

land.lhs.true11:                                  ; preds = %if.end7
  %port_set_mcast_flood = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 23
  %8 = ptrtoint ptr %port_set_mcast_flood to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %port_set_mcast_flood, align 4
  %tobool12.not = icmp eq ptr %9, null
  br i1 %tobool12.not, label %land.lhs.true11.cleanup_crit_edge, label %land.lhs.true11.if.end14_crit_edge

land.lhs.true11.if.end14_crit_edge:               ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

land.lhs.true11.cleanup_crit_edge:                ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %land.lhs.true11.if.end14_crit_edge, %if.end7.if.end14_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %land.lhs.true11.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end14 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %land.lhs.true11.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_bridge_flags(ptr nocapture noundef readonly %ds, i32 noundef %port, [2 x i32] %flags.coerce, ptr nocapture noundef readnone %extack) #0 align 64 {
entry:
  %broadcast.i11.i = alloca [6 x i8], align 1
  %entry1.i.i = alloca %struct.mv88e6xxx_vtu_entry, align 2
  %broadcast.i.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.coerce.fca.0.extract = extractvalue [2 x i32] %flags.coerce, 0
  %flags.coerce.fca.1.extract = extractvalue [2 x i32] %flags.coerce, 1
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %and = and i32 %flags.coerce.fca.1.extract, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end8_crit_edge, label %if.then

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then:                                          ; preds = %entry
  %and1 = and i32 %flags.coerce.fca.0.extract, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  %shl = shl nuw i32 1, %port
  %phi.cast = trunc i32 %shl to i16
  %cond = select i1 %tobool2.not, i16 0, i16 %phi.cast
  %call = tail call i32 @mv88e6xxx_port_set_assoc_vector(ptr noundef %1, i32 noundef %port, i16 noundef zeroext %cond) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool5.not = icmp eq i32 %call, 0
  br i1 %tobool5.not, label %if.then.if.end8_crit_edge, label %if.then.out_crit_edge

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end8:                                          ; preds = %if.then.if.end8_crit_edge, %entry.if.end8_crit_edge
  %err.0 = phi i32 [ 0, %if.then.if.end8_crit_edge ], [ -95, %entry.if.end8_crit_edge ]
  %and10 = and i32 %flags.coerce.fca.1.extract, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end8.if.end27_crit_edge, label %if.then12

if.end8.if.end27_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.then12:                                        ; preds = %if.end8
  %and14 = and i32 %flags.coerce.fca.0.extract, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15 = icmp ne i32 %and14, 0
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %port_set_ucast_flood = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %port_set_ucast_flood to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %port_set_ucast_flood, align 4
  %call20 = tail call i32 %7(ptr noundef %1, i32 noundef %port, i1 noundef zeroext %tobool15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.then12.if.end27_crit_edge, label %if.then12.out_crit_edge

if.then12.out_crit_edge:                          ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then12.if.end27_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.end27:                                         ; preds = %if.then12.if.end27_crit_edge, %if.end8.if.end27_crit_edge
  %err.1 = phi i32 [ 0, %if.then12.if.end27_crit_edge ], [ %err.0, %if.end8.if.end27_crit_edge ]
  %and29 = and i32 %flags.coerce.fca.1.extract, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.end27.if.end48_crit_edge, label %if.then31

if.end27.if.end48_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

if.then31:                                        ; preds = %if.end27
  %and33 = and i32 %flags.coerce.fca.0.extract, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34 = icmp ne i32 %and33, 0
  %8 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %1, align 8
  %ops39 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %10 = ptrtoint ptr %ops39 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops39, align 4
  %port_set_mcast_flood = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 23
  %12 = ptrtoint ptr %port_set_mcast_flood to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %port_set_mcast_flood, align 4
  %call41 = tail call i32 %13(ptr noundef %1, i32 noundef %port, i1 noundef zeroext %tobool34) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.then31.if.end48_crit_edge, label %if.then31.out_crit_edge

if.then31.out_crit_edge:                          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then31.if.end48_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

if.end48:                                         ; preds = %if.then31.if.end48_crit_edge, %if.end27.if.end48_crit_edge
  %err.2 = phi i32 [ 0, %if.then31.if.end48_crit_edge ], [ %err.1, %if.end27.if.end48_crit_edge ]
  %and50 = and i32 %flags.coerce.fca.1.extract, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50)
  %tobool51.not = icmp eq i32 %and50, 0
  br i1 %tobool51.not, label %if.end48.out_crit_edge, label %if.then52

if.end48.out_crit_edge:                           ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then52:                                        ; preds = %if.end48
  %and54 = and i32 %flags.coerce.fca.0.extract, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and54)
  %tobool55.not = icmp eq i32 %and54, 0
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %broadcast.i.i) #16
  %..i.i = select i1 %tobool55.not, i8 0, i8 7
  %14 = call ptr @memset(ptr %broadcast.i.i, i32 255, i32 6)
  %call.i.i = call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %broadcast.i.i, i16 noundef zeroext 0, i8 noundef zeroext %..i.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %broadcast.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool4.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool4.not.i, label %if.end.i, label %if.then52.out_crit_edge

if.then52.out_crit_edge:                          ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end.i:                                         ; preds = %if.then52
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %entry1.i.i) #16
  %15 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %entry1.i.i, i32 0, i32 3
  %16 = getelementptr inbounds i8, ptr %entry1.i.i, i32 2
  %17 = call ptr @memset(ptr %16, i32 0, i32 28)
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 8
  %max_vid.i.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %max_vid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %max_vid.i.i.i, align 4
  %conv.i.i = trunc i32 %21 to i16
  %22 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %conv.i.i, ptr %entry1.i.i, align 2
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %19, i32 0, i32 22
  %23 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops.i.i, align 4
  %vtu_getnext.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %24, i32 0, i32 60
  %25 = ptrtoint ptr %vtu_getnext.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %vtu_getnext.i.i, align 4
  %tobool.not.i10.i = icmp eq ptr %26, null
  br i1 %tobool.not.i10.i, label %if.end.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, label %if.end.i.do.body.i.i_crit_edge

if.end.i.do.body.i.i_crit_edge:                   ; preds = %if.end.i
  br label %do.body.i.i

if.end.i.mv88e6xxx_vtu_walk.exit.i_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %if.end.i.do.body.i.i_crit_edge
  %27 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %1, align 8
  %ops3.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %28, i32 0, i32 22
  %29 = ptrtoint ptr %ops3.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ops3.i.i, align 4
  %vtu_getnext4.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %30, i32 0, i32 60
  %31 = ptrtoint ptr %vtu_getnext4.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %vtu_getnext4.i.i, align 4
  %call5.i.i = call i32 %32(ptr noundef %1, ptr noundef nonnull %entry1.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end8.i.i, label %do.body.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge

do.body.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge:  ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

if.end8.i.i:                                      ; preds = %do.body.i.i
  %33 = ptrtoint ptr %15 to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %15, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool10.not.i.i = icmp eq i8 %34, 0
  br i1 %tobool10.not.i.i, label %if.end8.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, label %if.end12.i.i

if.end8.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge:  ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

if.end12.i.i:                                     ; preds = %if.end8.i.i
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %broadcast.i11.i) #16
  %35 = call ptr @memset(ptr %broadcast.i11.i, i32 255, i32 6)
  %36 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %entry1.i.i, align 2
  %call.i15.i = call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %broadcast.i11.i, i16 noundef zeroext %37, i8 noundef zeroext %..i.i) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %broadcast.i11.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i15.i)
  %tobool14.not.i.i = icmp eq i32 %call.i15.i, 0
  br i1 %tobool14.not.i.i, label %do.cond.i.i, label %if.end12.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge

if.end12.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge: ; preds = %if.end12.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

do.cond.i.i:                                      ; preds = %if.end12.i.i
  %38 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %entry1.i.i, align 2
  %conv18.i.i = zext i16 %39 to i32
  %40 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %1, align 8
  %max_vid.i30.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %41, i32 0, i32 8
  %42 = ptrtoint ptr %max_vid.i30.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %max_vid.i30.i.i, align 4
  %cmp.i.i = icmp ugt i32 %43, %conv18.i.i
  br i1 %cmp.i.i, label %do.cond.i.i.do.body.i.i_crit_edge, label %do.cond.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge

do.cond.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge:  ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i

mv88e6xxx_vtu_walk.exit.i:                        ; preds = %do.cond.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %if.end12.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %if.end8.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %do.body.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %if.end.i.mv88e6xxx_vtu_walk.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ -95, %if.end.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ 0, %do.cond.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ 0, %if.end8.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ %call.i15.i, %if.end12.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ %call5.i.i, %do.body.i.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %entry1.i.i) #16
  br label %out

out:                                              ; preds = %mv88e6xxx_vtu_walk.exit.i, %if.then52.out_crit_edge, %if.end48.out_crit_edge, %if.then31.out_crit_edge, %if.then12.out_crit_edge, %if.then.out_crit_edge
  %err.3 = phi i32 [ %call, %if.then.out_crit_edge ], [ %call20, %if.then12.out_crit_edge ], [ %call41, %if.then31.out_crit_edge ], [ %err.2, %if.end48.out_crit_edge ], [ %retval.0.i.i, %mv88e6xxx_vtu_walk.exit.i ], [ %call.i.i, %if.then52.out_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %err.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_vlan_filtering(ptr nocapture noundef readonly %ds, i32 noundef %port, i1 noundef zeroext %vlan_filtering, ptr nocapture noundef readnone %extack) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %max_vid.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %max_vid.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %max_vid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1.not = icmp eq i32 %5, 0
  br i1 %tobool1.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %conv = select i1 %vlan_filtering, i16 3072, i16 0
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call2 = tail call i32 @mv88e6xxx_port_set_8021q_mode(ptr noundef %1, i32 noundef %port, i16 noundef zeroext %conv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  br label %unlock

unlock:                                           ; preds = %if.end5, %if.end.unlock_crit_edge
  %err.0 = phi i32 [ %call2, %if.end.unlock_crit_edge ], [ %call6, %if.end5 ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %unlock, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %unlock ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_vlan_add(ptr noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %vlan, ptr nocapture noundef readnone %extack) #0 align 64 {
entry:
  %vlan.i.i = alloca %struct.mv88e6xxx_vtu_entry, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %flags = getelementptr inbounds %struct.switchdev_obj_port_vlan, ptr %vlan, i32 0, i32 1
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %flags, align 4
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %and3 = and i32 %conv, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  %vid = getelementptr inbounds %struct.switchdev_obj_port_vlan, ptr %vlan, i32 0, i32 2
  %4 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vid, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %tobool6.not = icmp eq i16 %5, 0
  br i1 %tobool6.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 8
  %max_vid.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %max_vid.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %max_vid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end.i

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  %reg_lock.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i.i, i32 noundef 0) #16
  %10 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %vid, align 2
  %dst1.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %12 = ptrtoint ptr %dst1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dst1.i.i.i, align 4
  %ports.i.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %ports.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn20.i.i.i = load ptr, ptr %ports.i.i.i, align 4
  %cmp.not21.i.i.i = icmp eq ptr %.pn20.i.i.i, %ports.i.i.i
  br i1 %cmp.not21.i.i.i, label %if.end.i.dsa_to_port.exit.i.i_crit_edge, label %if.end.i.for.body.i.i.i_crit_edge

if.end.i.for.body.i.i.i_crit_edge:                ; preds = %if.end.i
  br label %for.body.i.i.i

if.end.i.dsa_to_port.exit.i.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.end.i.for.body.i.i.i_crit_edge
  %.pn22.i.i.i = phi ptr [ %.pn.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn20.i.i.i, %if.end.i.for.body.i.i.i_crit_edge ]
  %ds3.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -432
  %15 = ptrtoint ptr %ds3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ds3.i.i.i, align 4
  %cmp4.i.i.i = icmp eq ptr %16, %ds
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %index.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -428
  %17 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %index.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %port)
  %cmp5.i.i.i = icmp eq i32 %18, %port
  br i1 %cmp5.i.i.i, label %cleanup.split.loop.exit18.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %19 = ptrtoint ptr %.pn22.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i.i.i = load ptr, ptr %.pn22.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %ports.i.i.i
  br i1 %cmp.not.i.i.i, label %for.inc.i.i.i.dsa_to_port.exit.i.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.inc.i.i.i.dsa_to_port.exit.i.i_crit_edge:     ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i.i

cleanup.split.loop.exit18.i.i.i:                  ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i.i = getelementptr i8, ptr %.pn22.i.i.i, i32 -448
  br label %dsa_to_port.exit.i.i

dsa_to_port.exit.i.i:                             ; preds = %cleanup.split.loop.exit18.i.i.i, %for.inc.i.i.i.dsa_to_port.exit.i.i_crit_edge, %if.end.i.dsa_to_port.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %dp.0.le.i.i.i, %cleanup.split.loop.exit18.i.i.i ], [ null, %if.end.i.dsa_to_port.exit.i.i_crit_edge ], [ null, %for.inc.i.i.i.dsa_to_port.exit.i.i_crit_edge ]
  %20 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %vlan.i.i) #16
  %22 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan.i.i, i32 0, i32 3
  %type.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i.i, i32 0, i32 6
  %23 = call ptr @memset(ptr %vlan.i.i, i32 255, i32 30)
  %24 = ptrtoint ptr %type.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %type.i.i.i, align 4
  %.off.i.i = add i32 %25, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i.i)
  %switch.i.i = icmp ult i32 %.off.i.i, 2
  br i1 %switch.i.i, label %dsa_to_port.exit.i.i.if.end9_crit_edge, label %if.end.i.i

dsa_to_port.exit.i.i.if.end9_crit_edge:           ; preds = %dsa_to_port.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end.i.i:                                       ; preds = %dsa_to_port.exit.i.i
  %26 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %21, align 8
  %ops.i.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %27, i32 0, i32 22
  %28 = ptrtoint ptr %ops.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops.i.i.i, align 4
  %vtu_getnext.i.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %29, i32 0, i32 60
  %30 = ptrtoint ptr %vtu_getnext.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %vtu_getnext.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i.i, label %if.end.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge, label %if.end.i.i.i

if.end.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_prepare.exit

if.end.i.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %11)
  %tobool2.not.i.i.i = icmp eq i16 %11, 0
  br i1 %tobool2.not.i.i.i, label %cond.false.i.i.i, label %cond.true.i.i.i

cond.true.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i.i.i = zext i16 %11 to i32
  %sub.i.i.i = add nsw i32 %conv.i.i.i, -1
  br label %cond.end.i.i.i

cond.false.i.i.i:                                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %max_vid.i.i.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %27, i32 0, i32 8
  %32 = ptrtoint ptr %max_vid.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %max_vid.i.i.i.i, align 4
  br label %cond.end.i.i.i

cond.end.i.i.i:                                   ; preds = %cond.false.i.i.i, %cond.true.i.i.i
  %cond.i.i.i = phi i32 [ %sub.i.i.i, %cond.true.i.i.i ], [ %33, %cond.false.i.i.i ]
  %conv4.i.i.i = trunc i32 %cond.i.i.i to i16
  %34 = ptrtoint ptr %vlan.i.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv4.i.i.i, ptr %vlan.i.i, align 2
  %35 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 0, ptr %22, align 1
  %36 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %21, align 8
  %ops7.i.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %37, i32 0, i32 22
  %38 = ptrtoint ptr %ops7.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ops7.i.i.i, align 4
  %vtu_getnext8.i.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %39, i32 0, i32 60
  %40 = ptrtoint ptr %vtu_getnext8.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %vtu_getnext8.i.i.i, align 4
  %call9.i.i.i = call i32 %41(ptr noundef %21, ptr noundef nonnull %vlan.i.i) #16
  %42 = ptrtoint ptr %vlan.i.i to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %vlan.i.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %43, i16 %11)
  %cmp.not.i62.i.i = icmp eq i16 %43, %11
  br i1 %cmp.not.i62.i.i, label %cond.end.i.i.i.mv88e6xxx_vtu_get.exit.i.i_crit_edge, label %if.then14.i.i.i

cond.end.i.i.i.mv88e6xxx_vtu_get.exit.i.i_crit_edge: ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_get.exit.i.i

if.then14.i.i.i:                                  ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %22 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 0, ptr %22, align 1
  br label %mv88e6xxx_vtu_get.exit.i.i

mv88e6xxx_vtu_get.exit.i.i:                       ; preds = %if.then14.i.i.i, %cond.end.i.i.i.mv88e6xxx_vtu_get.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call9.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.end5.i.i, label %mv88e6xxx_vtu_get.exit.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge

mv88e6xxx_vtu_get.exit.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge: ; preds = %mv88e6xxx_vtu_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_prepare.exit

if.end5.i.i:                                      ; preds = %mv88e6xxx_vtu_get.exit.i.i
  %45 = ptrtoint ptr %22 to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %22, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %46)
  %tobool6.not.i.i = icmp eq i8 %46, 0
  br i1 %tobool6.not.i.i, label %if.end5.i.i.if.end9_crit_edge, label %if.end8.i.i

if.end5.i.i.if.end9_crit_edge:                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end8.i.i:                                      ; preds = %if.end5.i.i
  %47 = ptrtoint ptr %dst1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dst1.i.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %.pn92.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not93.i.i = icmp eq ptr %.pn92.i.i, %ports.i.i
  br i1 %cmp.not93.i.i, label %if.end8.i.i.if.end9_crit_edge, label %for.body.lr.ph.i.i

if.end8.i.i.if.end9_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

for.body.lr.ph.i.i:                               ; preds = %if.end8.i.i
  %bridge.i.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i.i, i32 0, i32 14
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %.pn94.i.i = phi ptr [ %.pn92.i.i, %for.body.lr.ph.i.i ], [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %ds11.i.i = getelementptr i8, ptr %.pn94.i.i, i32 -432
  %50 = ptrtoint ptr %ds11.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ds11.i.i, align 4
  %cmp12.i.i = icmp eq ptr %51, %ds
  br i1 %cmp12.i.i, label %if.then13.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.then13.i.i:                                    ; preds = %for.body.i.i
  %type.i64.i.i = getelementptr i8, ptr %.pn94.i.i, i32 -424
  %52 = ptrtoint ptr %type.i64.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %type.i64.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %53)
  %cmp.i65.i.i = icmp eq i32 %53, 3
  br i1 %cmp.i65.i.i, label %if.then15.i.i, label %if.then13.i.i.for.inc.i.i_crit_edge

if.then13.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.then15.i.i:                                    ; preds = %if.then13.i.i
  %index.i.i = getelementptr i8, ptr %.pn94.i.i, i32 -428
  %54 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %index.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.mv88e6xxx_vtu_entry, ptr %vlan.i.i, i32 0, i32 4, i32 %55
  %56 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %arrayidx.i.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %57)
  %cmp16.i.i = icmp eq i8 %57, 3
  br i1 %cmp16.i.i, label %if.then15.i.i.for.inc.i.i_crit_edge, label %if.end19.i.i

if.then15.i.i.for.inc.i.i_crit_edge:              ; preds = %if.then15.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.end19.i.i:                                     ; preds = %if.then15.i.i
  %58 = ptrtoint ptr %bridge.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %bridge.i.i.i.i, align 4
  %tobool.not.i.i.i.i = icmp eq ptr %59, null
  br i1 %tobool.not.i.i.i.i, label %if.end19.i.i.dsa_port_bridge_dev_get.exit.i.i.i_crit_edge, label %cond.true.i.i.i.i

if.end19.i.i.dsa_port_bridge_dev_get.exit.i.i.i_crit_edge: ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_port_bridge_dev_get.exit.i.i.i

cond.true.i.i.i.i:                                ; preds = %if.end19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %60 = ptrtoint ptr %59 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %59, align 4
  br label %dsa_port_bridge_dev_get.exit.i.i.i

dsa_port_bridge_dev_get.exit.i.i.i:               ; preds = %cond.true.i.i.i.i, %if.end19.i.i.dsa_port_bridge_dev_get.exit.i.i.i_crit_edge
  %cond.i.i.i.i = phi ptr [ %61, %cond.true.i.i.i.i ], [ null, %if.end19.i.i.dsa_port_bridge_dev_get.exit.i.i.i_crit_edge ]
  %bridge.i6.i.i.i = getelementptr i8, ptr %.pn94.i.i, i32 -396
  %62 = ptrtoint ptr %bridge.i6.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %bridge.i6.i.i.i, align 4
  %tobool.not.i7.i.i.i = icmp eq ptr %63, null
  br i1 %tobool.not.i7.i.i.i, label %dsa_port_bridge_dev_get.exit.i.i.i.for.inc.i.i_crit_edge, label %dsa_port_bridge_same.exit.i.i

dsa_port_bridge_dev_get.exit.i.i.i.for.inc.i.i_crit_edge: ; preds = %dsa_port_bridge_dev_get.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

dsa_port_bridge_same.exit.i.i:                    ; preds = %dsa_port_bridge_dev_get.exit.i.i.i
  %64 = ptrtoint ptr %63 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %63, align 4
  %tobool.not.i66.i.i = icmp ne ptr %cond.i.i.i.i, null
  %tobool2.not.i67.i.i = icmp ne ptr %65, null
  %or.cond.i.i.i = select i1 %tobool.not.i66.i.i, i1 %tobool2.not.i67.i.i, i1 false
  %cmp.i68.i.i = icmp eq ptr %cond.i.i.i.i, %65
  %spec.select.i.i.i = select i1 %or.cond.i.i.i, i1 %cmp.i68.i.i, i1 false
  br i1 %spec.select.i.i.i, label %dsa_port_bridge_same.exit.i.i.if.end9_crit_edge, label %dsa_port_bridge_dev_get.exit.i.i

dsa_port_bridge_same.exit.i.i.if.end9_crit_edge:  ; preds = %dsa_port_bridge_same.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

dsa_port_bridge_dev_get.exit.i.i:                 ; preds = %dsa_port_bridge_same.exit.i.i
  %tobool24.not.i.i = icmp eq ptr %65, null
  br i1 %tobool24.not.i.i, label %dsa_port_bridge_dev_get.exit.i.i.for.inc.i.i_crit_edge, label %do.end.i.i

dsa_port_bridge_dev_get.exit.i.i.for.inc.i.i_crit_edge: ; preds = %dsa_port_bridge_dev_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

do.end.i.i:                                       ; preds = %dsa_port_bridge_dev_get.exit.i.i
  %66 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %ds, align 4
  %conv28.i.i = zext i16 %43 to i32
  %68 = ptrtoint ptr %65 to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %65, align 128
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %69)
  %tobool.not.i73.i.i = icmp eq i8 %69, 0
  br i1 %tobool.not.i73.i.i, label %do.end.i.i.cleanup.thread88.i.i_crit_edge, label %lor.lhs.false.i.i.i

do.end.i.i.cleanup.thread88.i.i_crit_edge:        ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.thread88.i.i

lor.lhs.false.i.i.i:                              ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i = call ptr @strchr(ptr noundef nonnull %65, i32 noundef 37) #16
  %tobool2.not.i74.i.i = icmp eq ptr %call.i.i.i, null
  %spec.select.i75.i.i = select i1 %tobool2.not.i74.i.i, ptr %65, ptr @.str.108
  br label %cleanup.thread88.i.i

cleanup.thread88.i.i:                             ; preds = %lor.lhs.false.i.i.i, %do.end.i.i.cleanup.thread88.i.i_crit_edge
  %retval.0.i76.i.i = phi ptr [ @.str.108, %do.end.i.i.cleanup.thread88.i.i_crit_edge ], [ %spec.select.i75.i.i, %lor.lhs.false.i.i.i ]
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %67, ptr noundef nonnull @.str.106, i32 noundef %port, i32 noundef %conv28.i.i, i32 noundef %55, ptr noundef %retval.0.i76.i.i) #19
  br label %mv88e6xxx_port_vlan_prepare.exit

for.inc.i.i:                                      ; preds = %dsa_port_bridge_dev_get.exit.i.i.for.inc.i.i_crit_edge, %dsa_port_bridge_dev_get.exit.i.i.i.for.inc.i.i_crit_edge, %if.then15.i.i.for.inc.i.i_crit_edge, %if.then13.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %70 = ptrtoint ptr %.pn94.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pn.i.i = load ptr, ptr %.pn94.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.if.end9_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.if.end9_crit_edge:                    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

mv88e6xxx_port_vlan_prepare.exit:                 ; preds = %cleanup.thread88.i.i, %mv88e6xxx_vtu_get.exit.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge, %if.end.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge
  %retval.3.i.i = phi i32 [ %call9.i.i.i, %mv88e6xxx_vtu_get.exit.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge ], [ -95, %cleanup.thread88.i.i ], [ -95, %if.end.i.i.mv88e6xxx_port_vlan_prepare.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan.i.i) #16
  br label %cleanup.sink.split

if.end9:                                          ; preds = %for.inc.i.i.if.end9_crit_edge, %dsa_port_bridge_same.exit.i.i.if.end9_crit_edge, %if.end8.i.i.if.end9_crit_edge, %if.end5.i.i.if.end9_crit_edge, %dsa_to_port.exit.i.i.if.end9_crit_edge
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan.i.i) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i.i) #16
  %71 = ptrtoint ptr %dst1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %dst1.i.i.i, align 4
  %ports.i.i102 = getelementptr inbounds %struct.dsa_switch_tree, ptr %72, i32 0, i32 1
  %73 = ptrtoint ptr %ports.i.i102 to i32
  call void @__asan_load4_noabort(i32 %73)
  %.pn20.i.i = load ptr, ptr %ports.i.i102, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i102
  br i1 %cmp.not21.i.i, label %dsa_is_dsa_port.exit.thread, label %if.end9.for.body.i.i103_crit_edge

if.end9.for.body.i.i103_crit_edge:                ; preds = %if.end9
  br label %for.body.i.i103

for.body.i.i103:                                  ; preds = %for.inc.i.i107.for.body.i.i103_crit_edge, %if.end9.for.body.i.i103_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i105, %for.inc.i.i107.for.body.i.i103_crit_edge ], [ %.pn20.i.i, %if.end9.for.body.i.i103_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %74 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %75, %ds
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i103.for.inc.i.i107_crit_edge

for.body.i.i103.for.inc.i.i107_crit_edge:         ; preds = %for.body.i.i103
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i107

land.lhs.true.i.i:                                ; preds = %for.body.i.i103
  %index.i.i104 = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %76 = ptrtoint ptr %index.i.i104 to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %index.i.i104, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %77, i32 %port)
  %cmp5.i.i = icmp eq i32 %77, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i107_crit_edge

land.lhs.true.i.i.for.inc.i.i107_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i107

for.inc.i.i107:                                   ; preds = %land.lhs.true.i.i.for.inc.i.i107_crit_edge, %for.body.i.i103.for.inc.i.i107_crit_edge
  %78 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %.pn.i.i105 = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i106 = icmp eq ptr %.pn.i.i105, %ports.i.i102
  br i1 %cmp.not.i.i106, label %for.inc.i.i107.dsa_is_dsa_port.exit_crit_edge, label %for.inc.i.i107.for.body.i.i103_crit_edge

for.inc.i.i107.for.body.i.i103_crit_edge:         ; preds = %for.inc.i.i107
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i103

for.inc.i.i107.dsa_is_dsa_port.exit_crit_edge:    ; preds = %for.inc.i.i107
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_dsa_port.exit

dsa_is_dsa_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i107.dsa_is_dsa_port.exit_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.inc.i.i107.dsa_is_dsa_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %79 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %80)
  %cmp.i = icmp eq i32 %80, 2
  br i1 %cmp.i, label %dsa_is_dsa_port.exit.if.end19_crit_edge, label %dsa_is_dsa_port.exit.for.body.i.i115_crit_edge

dsa_is_dsa_port.exit.for.body.i.i115_crit_edge:   ; preds = %dsa_is_dsa_port.exit
  br label %for.body.i.i115

dsa_is_dsa_port.exit.if.end19_crit_edge:          ; preds = %dsa_is_dsa_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

dsa_is_dsa_port.exit.thread:                      ; preds = %if.end9
  call void @__asan_load4_noabort(i32 24)
  %81 = load i32, ptr inttoptr (i32 24 to ptr), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %81)
  %cmp.i175 = icmp eq i32 %81, 2
  br i1 %cmp.i175, label %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit146_crit_edge, label %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge

dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge: ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit

dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit146_crit_edge: ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit146

for.body.i.i115:                                  ; preds = %for.inc.i.i121.for.body.i.i115_crit_edge, %dsa_is_dsa_port.exit.for.body.i.i115_crit_edge
  %.pn22.i.i112 = phi ptr [ %.pn.i.i119, %for.inc.i.i121.for.body.i.i115_crit_edge ], [ %.pn20.i.i, %dsa_is_dsa_port.exit.for.body.i.i115_crit_edge ]
  %ds3.i.i113 = getelementptr i8, ptr %.pn22.i.i112, i32 -432
  %82 = ptrtoint ptr %ds3.i.i113 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %ds3.i.i113, align 4
  %cmp4.i.i114 = icmp eq ptr %83, %ds
  br i1 %cmp4.i.i114, label %land.lhs.true.i.i118, label %for.body.i.i115.for.inc.i.i121_crit_edge

for.body.i.i115.for.inc.i.i121_crit_edge:         ; preds = %for.body.i.i115
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i121

land.lhs.true.i.i118:                             ; preds = %for.body.i.i115
  %index.i.i116 = getelementptr i8, ptr %.pn22.i.i112, i32 -428
  %84 = ptrtoint ptr %index.i.i116 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %index.i.i116, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %85, i32 %port)
  %cmp5.i.i117 = icmp eq i32 %85, %port
  br i1 %cmp5.i.i117, label %cleanup.split.loop.exit18.i.i123, label %land.lhs.true.i.i118.for.inc.i.i121_crit_edge

land.lhs.true.i.i118.for.inc.i.i121_crit_edge:    ; preds = %land.lhs.true.i.i118
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i121

for.inc.i.i121:                                   ; preds = %land.lhs.true.i.i118.for.inc.i.i121_crit_edge, %for.body.i.i115.for.inc.i.i121_crit_edge
  %86 = ptrtoint ptr %.pn22.i.i112 to i32
  call void @__asan_load4_noabort(i32 %86)
  %.pn.i.i119 = load ptr, ptr %.pn22.i.i112, align 4
  %cmp.not.i.i120 = icmp eq ptr %.pn.i.i119, %ports.i.i102
  br i1 %cmp.not.i.i120, label %for.inc.i.i121.dsa_is_cpu_port.exit_crit_edge, label %for.inc.i.i121.for.body.i.i115_crit_edge

for.inc.i.i121.for.body.i.i115_crit_edge:         ; preds = %for.inc.i.i121
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i115

for.inc.i.i121.dsa_is_cpu_port.exit_crit_edge:    ; preds = %for.inc.i.i121
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit

cleanup.split.loop.exit18.i.i123:                 ; preds = %land.lhs.true.i.i118
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i122 = getelementptr i8, ptr %.pn22.i.i112, i32 -448
  br label %dsa_is_cpu_port.exit

dsa_is_cpu_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i123, %for.inc.i.i121.dsa_is_cpu_port.exit_crit_edge, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge
  %retval.0.i.i124 = phi ptr [ %dp.0.le.i.i122, %cleanup.split.loop.exit18.i.i123 ], [ null, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge ], [ null, %for.inc.i.i121.dsa_is_cpu_port.exit_crit_edge ]
  %type.i125 = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i124, i32 0, i32 6
  %87 = ptrtoint ptr %type.i125 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %type.i125, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %88)
  %cmp.i126 = icmp eq i32 %88, 1
  %. = select i1 %tobool.not, i8 2, i8 1
  %spec.select = select i1 %cmp.i126, i8 0, i8 %.
  br label %if.end19

if.end19:                                         ; preds = %dsa_is_cpu_port.exit, %dsa_is_dsa_port.exit.if.end19_crit_edge
  %member.0 = phi i8 [ 0, %dsa_is_dsa_port.exit.if.end19_crit_edge ], [ %spec.select, %dsa_is_cpu_port.exit ]
  br i1 %cmp.not21.i.i, label %if.end19.dsa_is_cpu_port.exit146_crit_edge, label %if.end19.for.body.i.i134_crit_edge

if.end19.for.body.i.i134_crit_edge:               ; preds = %if.end19
  br label %for.body.i.i134

if.end19.dsa_is_cpu_port.exit146_crit_edge:       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit146

for.body.i.i134:                                  ; preds = %for.inc.i.i140.for.body.i.i134_crit_edge, %if.end19.for.body.i.i134_crit_edge
  %.pn22.i.i131 = phi ptr [ %.pn.i.i138, %for.inc.i.i140.for.body.i.i134_crit_edge ], [ %.pn20.i.i, %if.end19.for.body.i.i134_crit_edge ]
  %ds3.i.i132 = getelementptr i8, ptr %.pn22.i.i131, i32 -432
  %89 = ptrtoint ptr %ds3.i.i132 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %ds3.i.i132, align 4
  %cmp4.i.i133 = icmp eq ptr %90, %ds
  br i1 %cmp4.i.i133, label %land.lhs.true.i.i137, label %for.body.i.i134.for.inc.i.i140_crit_edge

for.body.i.i134.for.inc.i.i140_crit_edge:         ; preds = %for.body.i.i134
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i140

land.lhs.true.i.i137:                             ; preds = %for.body.i.i134
  %index.i.i135 = getelementptr i8, ptr %.pn22.i.i131, i32 -428
  %91 = ptrtoint ptr %index.i.i135 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %index.i.i135, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %92, i32 %port)
  %cmp5.i.i136 = icmp eq i32 %92, %port
  br i1 %cmp5.i.i136, label %cleanup.split.loop.exit18.i.i142, label %land.lhs.true.i.i137.for.inc.i.i140_crit_edge

land.lhs.true.i.i137.for.inc.i.i140_crit_edge:    ; preds = %land.lhs.true.i.i137
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i140

for.inc.i.i140:                                   ; preds = %land.lhs.true.i.i137.for.inc.i.i140_crit_edge, %for.body.i.i134.for.inc.i.i140_crit_edge
  %93 = ptrtoint ptr %.pn22.i.i131 to i32
  call void @__asan_load4_noabort(i32 %93)
  %.pn.i.i138 = load ptr, ptr %.pn22.i.i131, align 4
  %cmp.not.i.i139 = icmp eq ptr %.pn.i.i138, %ports.i.i102
  br i1 %cmp.not.i.i139, label %for.inc.i.i140.dsa_is_cpu_port.exit146_crit_edge, label %for.inc.i.i140.for.body.i.i134_crit_edge

for.inc.i.i140.for.body.i.i134_crit_edge:         ; preds = %for.inc.i.i140
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i134

for.inc.i.i140.dsa_is_cpu_port.exit146_crit_edge: ; preds = %for.inc.i.i140
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit146

cleanup.split.loop.exit18.i.i142:                 ; preds = %land.lhs.true.i.i137
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i141 = getelementptr i8, ptr %.pn22.i.i131, i32 -448
  br label %dsa_is_cpu_port.exit146

dsa_is_cpu_port.exit146:                          ; preds = %cleanup.split.loop.exit18.i.i142, %for.inc.i.i140.dsa_is_cpu_port.exit146_crit_edge, %if.end19.dsa_is_cpu_port.exit146_crit_edge, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit146_crit_edge
  %member.0177 = phi i8 [ %member.0, %cleanup.split.loop.exit18.i.i142 ], [ %member.0, %if.end19.dsa_is_cpu_port.exit146_crit_edge ], [ 0, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit146_crit_edge ], [ %member.0, %for.inc.i.i140.dsa_is_cpu_port.exit146_crit_edge ]
  %retval.0.i.i143 = phi ptr [ %dp.0.le.i.i141, %cleanup.split.loop.exit18.i.i142 ], [ null, %if.end19.dsa_is_cpu_port.exit146_crit_edge ], [ null, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit146_crit_edge ], [ null, %for.inc.i.i140.dsa_is_cpu_port.exit146_crit_edge ]
  %type.i144 = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i143, i32 0, i32 6
  %94 = ptrtoint ptr %type.i144 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %type.i144, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %95)
  %cmp.i145 = icmp eq i32 %95, 1
  br i1 %cmp.i145, label %dsa_is_cpu_port.exit146.land.end_crit_edge, label %land.rhs

dsa_is_cpu_port.exit146.land.end_crit_edge:       ; preds = %dsa_is_cpu_port.exit146
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.end

land.rhs:                                         ; preds = %dsa_is_cpu_port.exit146
  br i1 %cmp.not21.i.i, label %land.rhs.dsa_is_dsa_port.exit166_crit_edge, label %land.rhs.for.body.i.i154_crit_edge

land.rhs.for.body.i.i154_crit_edge:               ; preds = %land.rhs
  br label %for.body.i.i154

land.rhs.dsa_is_dsa_port.exit166_crit_edge:       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit166

for.body.i.i154:                                  ; preds = %for.inc.i.i160.for.body.i.i154_crit_edge, %land.rhs.for.body.i.i154_crit_edge
  %.pn22.i.i151 = phi ptr [ %.pn.i.i158, %for.inc.i.i160.for.body.i.i154_crit_edge ], [ %.pn20.i.i, %land.rhs.for.body.i.i154_crit_edge ]
  %ds3.i.i152 = getelementptr i8, ptr %.pn22.i.i151, i32 -432
  %96 = ptrtoint ptr %ds3.i.i152 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %ds3.i.i152, align 4
  %cmp4.i.i153 = icmp eq ptr %97, %ds
  br i1 %cmp4.i.i153, label %land.lhs.true.i.i157, label %for.body.i.i154.for.inc.i.i160_crit_edge

for.body.i.i154.for.inc.i.i160_crit_edge:         ; preds = %for.body.i.i154
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i160

land.lhs.true.i.i157:                             ; preds = %for.body.i.i154
  %index.i.i155 = getelementptr i8, ptr %.pn22.i.i151, i32 -428
  %98 = ptrtoint ptr %index.i.i155 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %index.i.i155, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %99, i32 %port)
  %cmp5.i.i156 = icmp eq i32 %99, %port
  br i1 %cmp5.i.i156, label %cleanup.split.loop.exit18.i.i162, label %land.lhs.true.i.i157.for.inc.i.i160_crit_edge

land.lhs.true.i.i157.for.inc.i.i160_crit_edge:    ; preds = %land.lhs.true.i.i157
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i160

for.inc.i.i160:                                   ; preds = %land.lhs.true.i.i157.for.inc.i.i160_crit_edge, %for.body.i.i154.for.inc.i.i160_crit_edge
  %100 = ptrtoint ptr %.pn22.i.i151 to i32
  call void @__asan_load4_noabort(i32 %100)
  %.pn.i.i158 = load ptr, ptr %.pn22.i.i151, align 4
  %cmp.not.i.i159 = icmp eq ptr %.pn.i.i158, %ports.i.i102
  br i1 %cmp.not.i.i159, label %for.inc.i.i160.dsa_is_dsa_port.exit166_crit_edge, label %for.inc.i.i160.for.body.i.i154_crit_edge

for.inc.i.i160.for.body.i.i154_crit_edge:         ; preds = %for.inc.i.i160
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i154

for.inc.i.i160.dsa_is_dsa_port.exit166_crit_edge: ; preds = %for.inc.i.i160
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit166

cleanup.split.loop.exit18.i.i162:                 ; preds = %land.lhs.true.i.i157
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i161 = getelementptr i8, ptr %.pn22.i.i151, i32 -448
  br label %dsa_is_dsa_port.exit166

dsa_is_dsa_port.exit166:                          ; preds = %cleanup.split.loop.exit18.i.i162, %for.inc.i.i160.dsa_is_dsa_port.exit166_crit_edge, %land.rhs.dsa_is_dsa_port.exit166_crit_edge
  %retval.0.i.i163 = phi ptr [ %dp.0.le.i.i161, %cleanup.split.loop.exit18.i.i162 ], [ null, %land.rhs.dsa_is_dsa_port.exit166_crit_edge ], [ null, %for.inc.i.i160.dsa_is_dsa_port.exit166_crit_edge ]
  %type.i164 = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i163, i32 0, i32 6
  %101 = ptrtoint ptr %type.i164 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %type.i164, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %102)
  %cmp.i165 = icmp ne i32 %102, 2
  br label %land.end

land.end:                                         ; preds = %dsa_is_dsa_port.exit166, %dsa_is_cpu_port.exit146.land.end_crit_edge
  %103 = phi i1 [ false, %dsa_is_cpu_port.exit146.land.end_crit_edge ], [ %cmp.i165, %dsa_is_dsa_port.exit166 ]
  call void @mutex_lock_nested(ptr noundef %reg_lock.i.i, i32 noundef 0) #16
  %104 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %104)
  %105 = load i16, ptr %vid, align 2
  %call25 = call fastcc i32 @mv88e6xxx_port_vlan_join(ptr noundef %1, i32 noundef %port, i16 noundef zeroext %105, i8 noundef zeroext %member.0177, i1 noundef zeroext %103)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %tobool26.not = icmp eq i32 %call25, 0
  br i1 %tobool26.not, label %if.end32, label %do.end

do.end:                                           ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  %106 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %ds, align 4
  %108 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %108)
  %109 = load i16, ptr %vid, align 2
  %conv29 = zext i16 %109 to i32
  %cond = select i1 %tobool.not, i32 116, i32 117
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %107, ptr noundef nonnull @.str.104, i32 noundef %port, i32 noundef %conv29, i32 noundef %cond) #19
  br label %cleanup.sink.split

if.end32:                                         ; preds = %land.end
  %110 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %110)
  %111 = load i16, ptr %vid, align 2
  br i1 %tobool4.not, label %if.else42, label %if.then34

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  %bridge_pvid = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 2
  %112 = ptrtoint ptr %bridge_pvid to i32
  call void @__asan_store2_noabort(i32 %112)
  store i16 %111, ptr %bridge_pvid, align 8
  %valid = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 2, i32 1
  %113 = ptrtoint ptr %valid to i32
  call void @__asan_store1_noabort(i32 %113)
  store i8 1, ptr %valid, align 2
  %call38 = call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  br label %cleanup.sink.split

if.else42:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %111)
  %tobool45.not = icmp eq i16 %111, 0
  br i1 %tobool45.not, label %if.else42.cleanup.sink.split_crit_edge, label %land.lhs.true

if.else42.cleanup.sink.split_crit_edge:           ; preds = %if.else42
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

land.lhs.true:                                    ; preds = %if.else42
  %bridge_pvid46 = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 2
  %114 = ptrtoint ptr %bridge_pvid46 to i32
  call void @__asan_load2_noabort(i32 %114)
  %115 = load i16, ptr %bridge_pvid46, align 8
  call void @__sanitizer_cov_trace_cmp2(i16 %115, i16 %111)
  %cmp = icmp eq i16 %115, %111
  br i1 %cmp, label %if.then52, label %land.lhs.true.cleanup.sink.split_crit_edge

land.lhs.true.cleanup.sink.split_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then52:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %valid54 = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 2, i32 1
  %116 = ptrtoint ptr %valid54 to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 0, ptr %valid54, align 2
  %call55 = call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then52, %land.lhs.true.cleanup.sink.split_crit_edge, %if.else42.cleanup.sink.split_crit_edge, %if.then34, %do.end, %mv88e6xxx_port_vlan_prepare.exit
  %retval.0.ph = phi i32 [ %retval.3.i.i, %mv88e6xxx_port_vlan_prepare.exit ], [ %call25, %do.end ], [ %call38, %if.then34 ], [ %call55, %if.then52 ], [ 0, %land.lhs.true.cleanup.sink.split_crit_edge ], [ 0, %if.else42.cleanup.sink.split_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i.i) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_vlan_del(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %vlan) #0 align 64 {
entry:
  %vlan.i = alloca %struct.mv88e6xxx_vtu_entry, align 2
  %pvid = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %pvid) #16
  %2 = ptrtoint ptr %pvid to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %pvid, align 2, !annotation !350
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %1, align 8
  %max_vid.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %max_vid.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_vid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @dsa_flush_workqueue() #16
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call1 = call i32 @mv88e6xxx_port_get_pvid(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %pvid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end4, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end4:                                          ; preds = %if.end
  %vid = getelementptr inbounds %struct.switchdev_obj_port_vlan, ptr %vlan, i32 0, i32 2
  %7 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %vid, align 2
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %vlan.i) #16
  %9 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan.i, i32 0, i32 1
  %10 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan.i, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool.not.i = icmp eq i16 %8, 0
  %11 = call ptr @memset(ptr %9, i32 255, i32 28)
  br i1 %tobool.not.i, label %mv88e6xxx_port_vlan_leave.exit.thread36, label %if.end.i

mv88e6xxx_port_vlan_leave.exit.thread36:          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan.i) #16
  br label %if.end8

if.end.i:                                         ; preds = %if.end4
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 8
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops.i.i, align 4
  %vtu_getnext.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %15, i32 0, i32 60
  %16 = ptrtoint ptr %vtu_getnext.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %vtu_getnext.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %if.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, label %cond.end.i.i

if.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

cond.end.i.i:                                     ; preds = %if.end.i
  %sub.i.i = add i16 %8, -1
  %18 = ptrtoint ptr %vlan.i to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %sub.i.i, ptr %vlan.i, align 2
  %19 = ptrtoint ptr %10 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 0, ptr %10, align 1
  %call9.i.i = call i32 %17(ptr noundef %1, ptr noundef nonnull %vlan.i) #16
  %20 = ptrtoint ptr %vlan.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %vlan.i, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %8)
  %cmp.not.i.i = icmp eq i16 %21, %8
  br i1 %cmp.not.i.i, label %cond.end.i.i.mv88e6xxx_vtu_get.exit.i_crit_edge, label %if.then14.i.i

cond.end.i.i.mv88e6xxx_vtu_get.exit.i_crit_edge:  ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_get.exit.i

if.then14.i.i:                                    ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %10 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 0, ptr %10, align 1
  br label %mv88e6xxx_vtu_get.exit.i

mv88e6xxx_vtu_get.exit.i:                         ; preds = %if.then14.i.i, %cond.end.i.i.mv88e6xxx_vtu_get.exit.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool1.not.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool1.not.i, label %if.end3.i, label %mv88e6xxx_vtu_get.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge

mv88e6xxx_vtu_get.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %mv88e6xxx_vtu_get.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

if.end3.i:                                        ; preds = %mv88e6xxx_vtu_get.exit.i
  %23 = ptrtoint ptr %10 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %10, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool4.not.i = icmp eq i8 %24, 0
  br i1 %tobool4.not.i, label %if.end3.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, label %lor.lhs.false.i

if.end3.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

lor.lhs.false.i:                                  ; preds = %if.end3.i
  %arrayidx.i = getelementptr %struct.mv88e6xxx_vtu_entry, ptr %vlan.i, i32 0, i32 4, i32 %port
  %25 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %26)
  %cmp.i = icmp eq i8 %26, 3
  br i1 %cmp.i, label %lor.lhs.false.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, label %if.end7.i

lor.lhs.false.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

if.end7.i:                                        ; preds = %lor.lhs.false.i
  %27 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 3, ptr %arrayidx.i, align 1
  %28 = ptrtoint ptr %10 to i32
  call void @__asan_store1_noabort(i32 %28)
  store i8 0, ptr %10, align 1
  %29 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %1, align 8
  %num_ports.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %30, i32 0, i32 5
  %31 = ptrtoint ptr %num_ports.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %num_ports.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp1249.not.i = icmp eq i32 %32, 0
  br i1 %cmp1249.not.i, label %if.end7.i.for.end.i_crit_edge, label %if.end7.i.for.body.i_crit_edge

if.end7.i.for.body.i_crit_edge:                   ; preds = %if.end7.i
  br label %for.body.i

if.end7.i.for.end.i_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i32 %i.050.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %32
  br i1 %exitcond.not.i, label %for.cond.i.for.end.i_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.cond.i.for.end.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %if.end7.i.for.body.i_crit_edge
  %i.050.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %if.end7.i.for.body.i_crit_edge ]
  %arrayidx15.i = getelementptr %struct.mv88e6xxx_vtu_entry, ptr %vlan.i, i32 0, i32 4, i32 %i.050.i
  %33 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %arrayidx15.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %34)
  %cmp17.not.i = icmp eq i8 %34, 3
  br i1 %cmp17.not.i, label %for.cond.i, label %if.then19.i

if.then19.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %10 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %10, align 1
  br label %for.end.i

for.end.i:                                        ; preds = %if.then19.i, %for.cond.i.for.end.i_crit_edge, %if.end7.i.for.end.i_crit_edge
  %ops.i40.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %30, i32 0, i32 22
  %36 = ptrtoint ptr %ops.i40.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ops.i40.i, align 4
  %vtu_loadpurge.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %37, i32 0, i32 61
  %38 = ptrtoint ptr %vtu_loadpurge.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vtu_loadpurge.i.i, align 4
  %tobool.not.i41.i = icmp eq ptr %39, null
  br i1 %tobool.not.i41.i, label %for.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, label %mv88e6xxx_vtu_loadpurge.exit.i

for.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

mv88e6xxx_vtu_loadpurge.exit.i:                   ; preds = %for.end.i
  %call.i.i = call i32 %39(ptr noundef %1, ptr noundef nonnull %vlan.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool23.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool23.not.i, label %mv88e6xxx_port_vlan_leave.exit, label %mv88e6xxx_vtu_loadpurge.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge

mv88e6xxx_vtu_loadpurge.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge: ; preds = %mv88e6xxx_vtu_loadpurge.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_vlan_leave.exit.thread

mv88e6xxx_port_vlan_leave.exit.thread:            ; preds = %mv88e6xxx_vtu_loadpurge.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, %for.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, %lor.lhs.false.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, %if.end3.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, %mv88e6xxx_vtu_get.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge, %if.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge
  %retval.0.i.ph = phi i32 [ -95, %for.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ], [ -95, %if.end.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ], [ %call.i.i, %mv88e6xxx_vtu_loadpurge.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ], [ -95, %if.end3.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ], [ -95, %lor.lhs.false.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ], [ %call9.i.i, %mv88e6xxx_vtu_get.exit.i.mv88e6xxx_port_vlan_leave.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan.i) #16
  br label %unlock

mv88e6xxx_port_vlan_leave.exit:                   ; preds = %mv88e6xxx_vtu_loadpurge.exit.i
  %40 = ptrtoint ptr %9 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %9, align 2
  %call26.i = call i32 @mv88e6xxx_g1_atu_remove(ptr noundef %1, i16 noundef zeroext %41, i32 noundef %port, i1 noundef zeroext false) #16
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26.i)
  %tobool6.not = icmp eq i32 %call26.i, 0
  br i1 %tobool6.not, label %mv88e6xxx_port_vlan_leave.exit.if.end8_crit_edge, label %mv88e6xxx_port_vlan_leave.exit.unlock_crit_edge

mv88e6xxx_port_vlan_leave.exit.unlock_crit_edge:  ; preds = %mv88e6xxx_port_vlan_leave.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

mv88e6xxx_port_vlan_leave.exit.if.end8_crit_edge: ; preds = %mv88e6xxx_port_vlan_leave.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end8:                                          ; preds = %mv88e6xxx_port_vlan_leave.exit.if.end8_crit_edge, %mv88e6xxx_port_vlan_leave.exit.thread36
  %42 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %42)
  %43 = load i16, ptr %vid, align 2
  %44 = ptrtoint ptr %pvid to i32
  call void @__asan_load2_noabort(i32 %44)
  %45 = load i16, ptr %pvid, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %43, i16 %45)
  %cmp = icmp eq i16 %43, %45
  br i1 %cmp, label %if.then12, label %if.end8.unlock_crit_edge

if.end8.unlock_crit_edge:                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.then12:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %valid = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %port, i32 2, i32 1
  %46 = ptrtoint ptr %valid to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 0, ptr %valid, align 2
  %call13 = call fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %1, i32 noundef %port)
  br label %unlock

unlock:                                           ; preds = %if.then12, %if.end8.unlock_crit_edge, %mv88e6xxx_port_vlan_leave.exit.unlock_crit_edge, %mv88e6xxx_port_vlan_leave.exit.thread, %if.end.unlock_crit_edge
  %err.0 = phi i32 [ %call1, %if.end.unlock_crit_edge ], [ %call26.i, %mv88e6xxx_port_vlan_leave.exit.unlock_crit_edge ], [ %call13, %if.then12 ], [ 0, %if.end8.unlock_crit_edge ], [ %retval.0.i.ph, %mv88e6xxx_port_vlan_leave.exit.thread ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %unlock, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %unlock ], [ -95, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %pvid) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_fdb_add(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef %addr, i16 noundef zeroext %vid, i8 noundef zeroext 14)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_fdb_del(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef %addr, i16 noundef zeroext %vid, i8 noundef zeroext 0)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_fdb_dump(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %cb, ptr noundef %data) #0 align 64 {
entry:
  %addr.i.i.i = alloca %struct.mv88e6xxx_atu_entry, align 4
  %entry1.i.i = alloca %struct.mv88e6xxx_vtu_entry, align 2
  %addr.i.i = alloca %struct.mv88e6xxx_atu_entry, align 4
  %fid.i = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %fid.i) #16
  %2 = ptrtoint ptr %fid.i to i32
  call void @__asan_store2_noabort(i32 %2)
  store i16 -1, ptr %fid.i, align 2, !annotation !350
  %call.i = call i32 @mv88e6xxx_port_get_fid(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %fid.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.mv88e6xxx_port_db_dump.exit_crit_edge

entry.mv88e6xxx_port_db_dump.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_db_dump.exit

if.end.i:                                         ; preds = %entry
  %3 = ptrtoint ptr %fid.i to i32
  call void @__asan_load2_noabort(i32 %3)
  %4 = load i16, ptr %fid.i, align 2
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %addr.i.i) #16
  %5 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i, i32 0, i32 1
  %6 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i, i32 0, i32 2
  %7 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i, i32 0, i32 3
  %8 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i, i32 0, i32 3, i32 2
  %9 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i, i32 0, i32 3, i32 4
  %10 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 16777215, ptr %addr.i.i, align 4
  %11 = call ptr @memset(ptr %7, i32 255, i32 6)
  %shl.i.i = shl nuw i32 1, %port
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %if.end.i
  %call.i.i = call i32 @mv88e6xxx_g1_atu_getnext(ptr noundef %1, i16 noundef zeroext %4, ptr noundef nonnull %addr.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.body.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge

do.body.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge: ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_db_dump_fid.exit.i

if.end.i.i:                                       ; preds = %do.body.i.i
  %12 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %addr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool2.not.i.i = icmp eq i8 %13, 0
  br i1 %tobool2.not.i.i, label %if.end.i.i.if.end7.i_crit_edge, label %if.end4.i.i

if.end.i.i.if.end7.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i

if.end4.i.i:                                      ; preds = %if.end.i.i
  %14 = ptrtoint ptr %5 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %5, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool5.not.i.i = icmp eq i8 %15, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false.i.i, label %if.end4.i.i.do.cond.i.i_crit_edge

if.end4.i.i.do.cond.i.i_crit_edge:                ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

lor.lhs.false.i.i:                                ; preds = %if.end4.i.i
  %16 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %6, align 2
  %conv.i.i = zext i16 %17 to i32
  %and.i.i = and i32 %shl.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %cmp.i.i = icmp eq i32 %and.i.i, 0
  br i1 %cmp.i.i, label %lor.lhs.false.i.i.do.cond.i.i_crit_edge, label %if.end8.i.i

lor.lhs.false.i.i.do.cond.i.i_crit_edge:          ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

if.end8.i.i:                                      ; preds = %lor.lhs.false.i.i
  %18 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %7, align 4
  %20 = and i32 %19, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not.i.i.i = icmp eq i32 %20, 0
  br i1 %tobool.i.not.i.i.i, label %if.end13.i.i, label %if.end8.i.i.do.cond.i.i_crit_edge

if.end8.i.i.do.cond.i.i_crit_edge:                ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

if.end13.i.i:                                     ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 14, i8 %13)
  %cmp16.i.i = icmp eq i8 %13, 14
  %call21.i.i = call i32 %cb(ptr noundef %7, i16 noundef zeroext 0, i1 noundef zeroext %cmp16.i.i, ptr noundef %data) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i.i)
  %tobool22.not.i.i = icmp eq i32 %call21.i.i, 0
  br i1 %tobool22.not.i.i, label %if.end13.i.i.do.cond.i.i_crit_edge, label %if.end13.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge

if.end13.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge: ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_db_dump_fid.exit.i

if.end13.i.i.do.cond.i.i_crit_edge:               ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

do.cond.i.i:                                      ; preds = %if.end13.i.i.do.cond.i.i_crit_edge, %if.end8.i.i.do.cond.i.i_crit_edge, %lor.lhs.false.i.i.do.cond.i.i_crit_edge, %if.end4.i.i.do.cond.i.i_crit_edge
  %21 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %21)
  %22 = load i16, ptr %7, align 4
  %23 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %23)
  %24 = load i16, ptr %8, align 2
  %and9.i.i.i = and i16 %24, %22
  %25 = ptrtoint ptr %9 to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %9, align 4
  %and510.i.i.i = and i16 %and9.i.i.i, %26
  %cmp.i.i.i = icmp eq i16 %and510.i.i.i, -1
  br i1 %cmp.i.i.i, label %do.cond.i.i.if.end7.i_crit_edge, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i

do.cond.i.i.if.end7.i_crit_edge:                  ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i

mv88e6xxx_port_db_dump_fid.exit.i:                ; preds = %if.end13.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge, %do.body.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %call.i.i, %do.body.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge ], [ %call21.i.i, %if.end13.i.i.mv88e6xxx_port_db_dump_fid.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %addr.i.i) #16
  br label %mv88e6xxx_port_db_dump.exit

if.end7.i:                                        ; preds = %do.cond.i.i.if.end7.i_crit_edge, %if.end.i.i.if.end7.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %addr.i.i) #16
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %entry1.i.i) #16
  %27 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %entry1.i.i, i32 0, i32 3
  %28 = getelementptr inbounds i8, ptr %entry1.i.i, i32 2
  %29 = call ptr @memset(ptr %28, i32 0, i32 28)
  %30 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %1, align 8
  %max_vid.i.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %31, i32 0, i32 8
  %32 = ptrtoint ptr %max_vid.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %max_vid.i.i.i, align 4
  %conv.i20.i = trunc i32 %33 to i16
  %34 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %conv.i20.i, ptr %entry1.i.i, align 2
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %31, i32 0, i32 22
  %35 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ops.i.i, align 4
  %vtu_getnext.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %36, i32 0, i32 60
  %37 = ptrtoint ptr %vtu_getnext.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %vtu_getnext.i.i, align 4
  %tobool.not.i21.i = icmp eq ptr %38, null
  br i1 %tobool.not.i21.i, label %if.end7.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, label %do.body.i22.preheader.i

if.end7.i.mv88e6xxx_vtu_walk.exit.i_crit_edge:    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

do.body.i22.preheader.i:                          ; preds = %if.end7.i
  %39 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i.i, i32 0, i32 1
  %40 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i.i, i32 0, i32 2
  %41 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i.i, i32 0, i32 3
  %42 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i.i, i32 0, i32 3, i32 2
  %43 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %addr.i.i.i, i32 0, i32 3, i32 4
  br label %do.body.i22.i

do.body.i22.i:                                    ; preds = %do.cond.i25.i.do.body.i22.i_crit_edge, %do.body.i22.preheader.i
  %44 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %1, align 8
  %ops3.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %45, i32 0, i32 22
  %46 = ptrtoint ptr %ops3.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ops3.i.i, align 4
  %vtu_getnext4.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %47, i32 0, i32 60
  %48 = ptrtoint ptr %vtu_getnext4.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %vtu_getnext4.i.i, align 4
  %call5.i.i = call i32 %49(ptr noundef %1, ptr noundef nonnull %entry1.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %if.end8.i23.i, label %do.body.i22.i.mv88e6xxx_vtu_walk.exit.i_crit_edge

do.body.i22.i.mv88e6xxx_vtu_walk.exit.i_crit_edge: ; preds = %do.body.i22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

if.end8.i23.i:                                    ; preds = %do.body.i22.i
  %50 = ptrtoint ptr %27 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %27, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool10.not.i.i = icmp eq i8 %51, 0
  br i1 %tobool10.not.i.i, label %if.end8.i23.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, label %if.end12.i.i

if.end8.i23.i.mv88e6xxx_vtu_walk.exit.i_crit_edge: ; preds = %if.end8.i23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

if.end12.i.i:                                     ; preds = %if.end8.i23.i
  %52 = ptrtoint ptr %28 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %28, align 2
  %54 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %entry1.i.i, align 2
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %addr.i.i.i) #16
  %56 = ptrtoint ptr %addr.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 16777215, ptr %addr.i.i.i, align 4
  %57 = call ptr @memset(ptr %41, i32 255, i32 6)
  br label %do.body.i.i.i

do.body.i.i.i:                                    ; preds = %do.cond.i.i.i.do.body.i.i.i_crit_edge, %if.end12.i.i
  %call.i.i.i = call i32 @mv88e6xxx_g1_atu_getnext(ptr noundef %1, i16 noundef zeroext %53, ptr noundef nonnull %addr.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.i.i.i, label %do.body.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge

do.body.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge: ; preds = %do.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_db_dump_vlan.exit.i

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %58 = ptrtoint ptr %addr.i.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %addr.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %59)
  %tobool2.not.i.i.i = icmp eq i8 %59, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i.do.cond.i25.i_crit_edge, label %if.end4.i.i.i

if.end.i.i.i.do.cond.i25.i_crit_edge:             ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i25.i

if.end4.i.i.i:                                    ; preds = %if.end.i.i.i
  %60 = ptrtoint ptr %39 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %39, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %61)
  %tobool5.not.i.i.i = icmp eq i8 %61, 0
  br i1 %tobool5.not.i.i.i, label %lor.lhs.false.i.i.i, label %if.end4.i.i.i.do.cond.i.i.i_crit_edge

if.end4.i.i.i.do.cond.i.i.i_crit_edge:            ; preds = %if.end4.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end4.i.i.i
  %62 = ptrtoint ptr %40 to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %40, align 2
  %conv.i.i.i = zext i16 %63 to i32
  %and.i.i.i = and i32 %shl.i.i, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i.i27.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i.i27.i, label %lor.lhs.false.i.i.i.do.cond.i.i.i_crit_edge, label %if.end8.i.i.i

lor.lhs.false.i.i.i.do.cond.i.i.i_crit_edge:      ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i.i

if.end8.i.i.i:                                    ; preds = %lor.lhs.false.i.i.i
  %64 = ptrtoint ptr %41 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %41, align 4
  %66 = and i32 %65, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.i.not.i.i.i.i = icmp eq i32 %66, 0
  br i1 %tobool.i.not.i.i.i.i, label %if.end13.i.i.i, label %if.end8.i.i.i.do.cond.i.i.i_crit_edge

if.end8.i.i.i.do.cond.i.i.i_crit_edge:            ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i.i

if.end13.i.i.i:                                   ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_const_cmp1(i8 14, i8 %59)
  %cmp16.i.i.i = icmp eq i8 %59, 14
  %call21.i.i.i = call i32 %cb(ptr noundef %41, i16 noundef zeroext %55, i1 noundef zeroext %cmp16.i.i.i, ptr noundef %data) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21.i.i.i)
  %tobool22.not.i.i.i = icmp eq i32 %call21.i.i.i, 0
  br i1 %tobool22.not.i.i.i, label %if.end13.i.i.i.do.cond.i.i.i_crit_edge, label %if.end13.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge

if.end13.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge: ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_port_db_dump_vlan.exit.i

if.end13.i.i.i.do.cond.i.i.i_crit_edge:           ; preds = %if.end13.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i.i

do.cond.i.i.i:                                    ; preds = %if.end13.i.i.i.do.cond.i.i.i_crit_edge, %if.end8.i.i.i.do.cond.i.i.i_crit_edge, %lor.lhs.false.i.i.i.do.cond.i.i.i_crit_edge, %if.end4.i.i.i.do.cond.i.i.i_crit_edge
  %67 = ptrtoint ptr %41 to i32
  call void @__asan_load2_noabort(i32 %67)
  %68 = load i16, ptr %41, align 4
  %69 = ptrtoint ptr %42 to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %42, align 2
  %and9.i.i.i.i = and i16 %70, %68
  %71 = ptrtoint ptr %43 to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %43, align 4
  %and510.i.i.i.i = and i16 %and9.i.i.i.i, %72
  %cmp.i.i.i.i = icmp eq i16 %and510.i.i.i.i, -1
  br i1 %cmp.i.i.i.i, label %do.cond.i.i.i.do.cond.i25.i_crit_edge, label %do.cond.i.i.i.do.body.i.i.i_crit_edge

do.cond.i.i.i.do.body.i.i.i_crit_edge:            ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i.i

do.cond.i.i.i.do.cond.i25.i_crit_edge:            ; preds = %do.cond.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i25.i

mv88e6xxx_port_db_dump_vlan.exit.i:               ; preds = %if.end13.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge, %do.body.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge
  %retval.0.i.i.i = phi i32 [ %call.i.i.i, %do.body.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge ], [ %call21.i.i.i, %if.end13.i.i.i.mv88e6xxx_port_db_dump_vlan.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %addr.i.i.i) #16
  br label %mv88e6xxx_vtu_walk.exit.i

do.cond.i25.i:                                    ; preds = %do.cond.i.i.i.do.cond.i25.i_crit_edge, %if.end.i.i.i.do.cond.i25.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %addr.i.i.i) #16
  %73 = ptrtoint ptr %entry1.i.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %entry1.i.i, align 2
  %conv18.i.i = zext i16 %74 to i32
  %75 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %1, align 8
  %max_vid.i30.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %76, i32 0, i32 8
  %77 = ptrtoint ptr %max_vid.i30.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %max_vid.i30.i.i, align 4
  %cmp.i24.i = icmp ugt i32 %78, %conv18.i.i
  br i1 %cmp.i24.i, label %do.cond.i25.i.do.body.i22.i_crit_edge, label %do.cond.i25.i.mv88e6xxx_vtu_walk.exit.i_crit_edge

do.cond.i25.i.mv88e6xxx_vtu_walk.exit.i_crit_edge: ; preds = %do.cond.i25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_walk.exit.i

do.cond.i25.i.do.body.i22.i_crit_edge:            ; preds = %do.cond.i25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i22.i

mv88e6xxx_vtu_walk.exit.i:                        ; preds = %do.cond.i25.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %mv88e6xxx_port_db_dump_vlan.exit.i, %if.end8.i23.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %do.body.i22.i.mv88e6xxx_vtu_walk.exit.i_crit_edge, %if.end7.i.mv88e6xxx_vtu_walk.exit.i_crit_edge
  %retval.0.i26.i = phi i32 [ -95, %if.end7.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ %retval.0.i.i.i, %mv88e6xxx_port_db_dump_vlan.exit.i ], [ 0, %do.cond.i25.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ 0, %if.end8.i23.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ], [ %call5.i.i, %do.body.i22.i.mv88e6xxx_vtu_walk.exit.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %entry1.i.i) #16
  br label %mv88e6xxx_port_db_dump.exit

mv88e6xxx_port_db_dump.exit:                      ; preds = %mv88e6xxx_vtu_walk.exit.i, %mv88e6xxx_port_db_dump_fid.exit.i, %entry.mv88e6xxx_port_db_dump.exit_crit_edge
  %retval.0.i = phi i32 [ %retval.0.i26.i, %mv88e6xxx_vtu_walk.exit.i ], [ %call.i, %entry.mv88e6xxx_port_db_dump.exit_crit_edge ], [ %retval.0.i.i, %mv88e6xxx_port_db_dump_fid.exit.i ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %fid.i) #16
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_mdb_add(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %mdb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %addr = getelementptr inbounds %struct.switchdev_obj_port_mdb, ptr %mdb, i32 0, i32 1
  %vid = getelementptr inbounds %struct.switchdev_obj_port_mdb, ptr %mdb, i32 0, i32 2
  %2 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vid, align 2
  %call = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef %addr, i16 noundef zeroext %3, i8 noundef zeroext 7)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_mdb_del(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %mdb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %addr = getelementptr inbounds %struct.switchdev_obj_port_mdb, ptr %mdb, i32 0, i32 1
  %vid = getelementptr inbounds %struct.switchdev_obj_port_mdb, ptr %mdb, i32 0, i32 2
  %2 = ptrtoint ptr %vid to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %vid, align 2
  %call = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %1, i32 noundef %port, ptr noundef %addr, i16 noundef zeroext %3, i8 noundef zeroext 0)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_get_rxnfc(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef %rxnfc, ptr nocapture noundef writeonly %rule_locs) #0 align 64 {
entry:
  %id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %fs1 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %id) #16
  %2 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %id, align 4, !annotation !350
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %3 = ptrtoint ptr %rxnfc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rxnfc, align 8
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.126)
  switch i32 %4, label %entry.sw.epilog_crit_edge [
    i32 46, label %sw.bb
    i32 47, label %sw.bb5
    i32 48, label %sw.bb11
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 2
  %6 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 2147483648, ptr %data, align 8
  %7 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 4
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %7, align 8
  %policies = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 17
  %9 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %id, align 4
  %call49 = call ptr @idr_get_next(ptr noundef %policies, ptr noundef nonnull %id) #16
  %cmp.not50 = icmp eq ptr %call49, null
  br i1 %cmp.not50, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.for.body_crit_edge

sw.bb.for.body_crit_edge:                         ; preds = %sw.bb
  br label %for.body

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %sw.bb.for.body_crit_edge
  %call51 = phi ptr [ %call, %for.inc.for.body_crit_edge ], [ %call49, %sw.bb.for.body_crit_edge ]
  %port3 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call51, i32 0, i32 4
  %10 = ptrtoint ptr %port3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %port3, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %port)
  %cmp4 = icmp eq i32 %11, %port
  br i1 %cmp4, label %if.then, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %7, align 8
  %inc = add i32 %13, 1
  store i32 %inc, ptr %7, align 8
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %14 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %id, align 4
  %add = add i32 %15, 1
  store i32 %add, ptr %id, align 4
  %call = call ptr @idr_get_next(ptr noundef %policies, ptr noundef nonnull %id) #16
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %for.inc.sw.epilog_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.sw.epilog_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %policies6 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 17
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 6
  %16 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %location, align 8
  %call7 = tail call ptr @idr_find(ptr noundef %policies6, i32 noundef %17) #16
  %tobool.not = icmp eq ptr %call7, null
  br i1 %tobool.not, label %sw.bb5.sw.epilog_crit_edge, label %if.then8

sw.bb5.sw.epilog_crit_edge:                       ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.then8:                                         ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #18
  %fs9 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call7, i32 0, i32 2
  %18 = call ptr @memcpy(ptr %fs1, ptr %fs9, i32 168)
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %data12 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 2
  %19 = ptrtoint ptr %data12 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 0, ptr %data12, align 8
  %20 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 4
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %20, align 8
  %policies14 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 17
  %22 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %id, align 4
  %call1546 = call ptr @idr_get_next(ptr noundef %policies14, ptr noundef nonnull %id) #16
  %cmp16.not47 = icmp eq ptr %call1546, null
  br i1 %cmp16.not47, label %sw.bb11.sw.epilog_crit_edge, label %sw.bb11.for.body17_crit_edge

sw.bb11.for.body17_crit_edge:                     ; preds = %sw.bb11
  br label %for.body17

sw.bb11.sw.epilog_crit_edge:                      ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

for.body17:                                       ; preds = %for.inc23.for.body17_crit_edge, %sw.bb11.for.body17_crit_edge
  %call1548 = phi ptr [ %call15, %for.inc23.for.body17_crit_edge ], [ %call1546, %sw.bb11.for.body17_crit_edge ]
  %port18 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call1548, i32 0, i32 4
  %23 = ptrtoint ptr %port18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %port18, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %24, i32 %port)
  %cmp19 = icmp eq i32 %24, %port
  br i1 %cmp19, label %if.then20, label %for.body17.for.inc23_crit_edge

for.body17.for.inc23_crit_edge:                   ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc23

if.then20:                                        ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %id, align 4
  %27 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %20, align 8
  %inc21 = add i32 %28, 1
  store i32 %inc21, ptr %20, align 8
  %arrayidx = getelementptr i32, ptr %rule_locs, i32 %28
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %26, ptr %arrayidx, align 4
  br label %for.inc23

for.inc23:                                        ; preds = %if.then20, %for.body17.for.inc23_crit_edge
  %30 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %id, align 4
  %add24 = add i32 %31, 1
  store i32 %add24, ptr %id, align 4
  %call15 = call ptr @idr_get_next(ptr noundef %policies14, ptr noundef nonnull %id) #16
  %cmp16.not = icmp eq ptr %call15, null
  br i1 %cmp16.not, label %for.inc23.sw.epilog_crit_edge, label %for.inc23.for.body17_crit_edge

for.inc23.for.body17_crit_edge:                   ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body17

for.inc23.sw.epilog_crit_edge:                    ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.epilog:                                        ; preds = %for.inc23.sw.epilog_crit_edge, %sw.bb11.sw.epilog_crit_edge, %if.then8, %sw.bb5.sw.epilog_crit_edge, %for.inc.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  %err.0 = phi i32 [ 0, %if.then8 ], [ -2, %sw.bb5.sw.epilog_crit_edge ], [ -95, %entry.sw.epilog_crit_edge ], [ 0, %sw.bb.sw.epilog_crit_edge ], [ 0, %sw.bb11.sw.epilog_crit_edge ], [ 0, %for.inc.sw.epilog_crit_edge ], [ 0, %for.inc23.sw.epilog_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %id) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_set_rxnfc(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr noundef %rxnfc) #0 align 64 {
entry:
  %id.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %2 = ptrtoint ptr %rxnfc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rxnfc, align 8
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.127)
  switch i32 %3, label %entry.sw.epilog_crit_edge [
    i32 50, label %sw.bb
    i32 49, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  %fs1 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3
  %h_u.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 1
  %m_u.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %id.i) #16
  %location.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 6
  %5 = ptrtoint ptr %location.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %location.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.not.i = icmp eq i32 %6, -1
  br i1 %cmp.not.i, label %if.end.i, label %sw.bb.mv88e6xxx_policy_insert.exit_crit_edge

sw.bb.mv88e6xxx_policy_insert.exit_crit_edge:     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.end.i:                                         ; preds = %sw.bb
  %ring_cookie.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 5
  %7 = ptrtoint ptr %ring_cookie.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %ring_cookie.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %8)
  %cmp1.i = icmp eq i64 %8, -1
  br i1 %cmp1.i, label %if.then2.i, label %if.end.i.mv88e6xxx_policy_insert.exit_crit_edge

if.end.i.mv88e6xxx_policy_insert.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.then2.i:                                       ; preds = %if.end.i
  %9 = ptrtoint ptr %fs1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %fs1, align 8
  %and.i = and i32 %10, 2147483647
  call void @__sanitizer_cov_trace_const_cmp4(i32 18, i32 %and.i)
  %cond.i = icmp eq i32 %and.i, 18
  br i1 %cond.i, label %sw.bb.i, label %if.then2.i.mv88e6xxx_policy_insert.exit_crit_edge

if.then2.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

sw.bb.i:                                          ; preds = %if.then2.i
  %11 = ptrtoint ptr %m_u.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %m_u.i, align 4
  %add.ptr.i.i = getelementptr %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 3, i32 0, i32 0, i32 1
  %13 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %add.ptr.i.i, align 2
  %conv.i.i = zext i16 %14 to i32
  %or.i.i = or i32 %12, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i)
  %cmp.i.i = icmp eq i32 %or.i.i, 0
  %h_source14.i = getelementptr inbounds %struct.ethhdr, ptr %m_u.i, i32 0, i32 1
  %15 = ptrtoint ptr %h_source14.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %h_source14.i, align 4
  %add.ptr.i156.i = getelementptr %struct.ethhdr, ptr %m_u.i, i32 0, i32 1, i32 4
  %17 = ptrtoint ptr %add.ptr.i156.i to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %add.ptr.i156.i, align 2
  %conv.i157.i = zext i16 %18 to i32
  %or.i158.i = or i32 %16, %conv.i157.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i158.i)
  %cmp.i159.i = icmp eq i32 %or.i158.i, 0
  br i1 %cmp.i.i, label %land.lhs.true13.i, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %sw.bb.i
  br i1 %cmp.i159.i, label %land.lhs.true.i.sw.epilog.i_crit_edge, label %land.lhs.true.i.mv88e6xxx_policy_insert.exit_crit_edge

land.lhs.true.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

land.lhs.true.i.sw.epilog.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

land.lhs.true13.i:                                ; preds = %sw.bb.i
  br i1 %cmp.i159.i, label %land.lhs.true13.i.mv88e6xxx_policy_insert.exit_crit_edge, label %if.then17.i

land.lhs.true13.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.then17.i:                                      ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #18
  %h_source18.i = getelementptr inbounds %struct.ethhdr, ptr %h_u.i, i32 0, i32 1
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %if.then17.i, %land.lhs.true.i.sw.epilog.i_crit_edge
  %mapping.0.i = phi i32 [ 1, %if.then17.i ], [ 0, %land.lhs.true.i.sw.epilog.i_crit_edge ]
  %addr.0.i = phi ptr [ %h_source18.i, %if.then17.i ], [ %h_u.i, %land.lhs.true.i.sw.epilog.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %tobool.not.i = icmp sgt i32 %10, -1
  br i1 %tobool.not.i, label %sw.epilog.i.if.end39.i_crit_edge, label %land.lhs.true25.i

sw.epilog.i.if.end39.i_crit_edge:                 ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39.i

land.lhs.true25.i:                                ; preds = %sw.epilog.i
  %vlan_tci.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 4, i32 3
  %19 = ptrtoint ptr %vlan_tci.i to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vlan_tci.i, align 2
  %21 = zext i16 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.128)
  switch i16 %20, label %land.lhs.true25.i.mv88e6xxx_policy_insert.exit_crit_edge [
    i16 0, label %land.lhs.true25.i.if.end39.i_crit_edge
    i16 -1, label %if.end34.i
  ]

land.lhs.true25.i.if.end39.i_crit_edge:           ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39.i

land.lhs.true25.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.end34.i:                                       ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #18
  %vlan_tci35.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 2, i32 3
  %22 = ptrtoint ptr %vlan_tci35.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vlan_tci35.i, align 2
  %24 = and i16 %23, 4095
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.end34.i, %land.lhs.true25.i.if.end39.i_crit_edge, %sw.epilog.i.if.end39.i_crit_edge
  %vid.0.i = phi i16 [ %24, %if.end34.i ], [ %20, %land.lhs.true25.i.if.end39.i_crit_edge ], [ 0, %sw.epilog.i.if.end39.i_crit_edge ]
  %policies.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 17
  %25 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %id.i, align 4
  %call40166.i = call ptr @idr_get_next(ptr noundef %policies.i, ptr noundef nonnull %id.i) #16
  %cmp41.not167.i = icmp eq ptr %call40166.i, null
  br i1 %cmp41.not167.i, label %if.end39.i.for.end.i_crit_edge, label %for.body.lr.ph.i

if.end39.i.for.end.i_crit_edge:                   ; preds = %if.end39.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.end39.i
  %add.ptr1.i.i = getelementptr i8, ptr %addr.0.i, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %call40168.i = phi ptr [ %call40166.i, %for.body.lr.ph.i ], [ %call40.i, %for.inc.i.for.body.i_crit_edge ]
  %port43.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call40168.i, i32 0, i32 4
  %26 = ptrtoint ptr %port43.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %port43.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %port)
  %cmp44.i = icmp eq i32 %27, %port
  br i1 %cmp44.i, label %land.lhs.true46.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true46.i:                                ; preds = %for.body.i
  %28 = ptrtoint ptr %call40168.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %call40168.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %mapping.0.i)
  %cmp48.i = icmp eq i32 %29, %mapping.0.i
  br i1 %cmp48.i, label %land.lhs.true50.i, label %land.lhs.true46.i.for.inc.i_crit_edge

land.lhs.true46.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true46.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true50.i:                                ; preds = %land.lhs.true46.i
  %action51.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call40168.i, i32 0, i32 1
  %30 = ptrtoint ptr %action51.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %action51.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %31)
  %cmp52.i = icmp eq i32 %31, 3
  br i1 %cmp52.i, label %land.lhs.true54.i, label %land.lhs.true50.i.for.inc.i_crit_edge

land.lhs.true50.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true50.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true54.i:                                ; preds = %land.lhs.true50.i
  %vid55.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call40168.i, i32 0, i32 5
  %32 = ptrtoint ptr %vid55.i to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %vid55.i, align 4
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %vid.0.i)
  %cmp58.i = icmp eq i16 %33, %vid.0.i
  br i1 %cmp58.i, label %land.lhs.true60.i, label %land.lhs.true54.i.for.inc.i_crit_edge

land.lhs.true54.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true60.i:                                ; preds = %land.lhs.true54.i
  %addr61.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call40168.i, i32 0, i32 3
  %34 = ptrtoint ptr %addr61.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %addr61.i, align 4
  %36 = ptrtoint ptr %addr.0.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %addr.0.i, align 4
  %xor.i.i = xor i32 %37, %35
  %add.ptr.i160.i = getelementptr %struct.mv88e6xxx_policy, ptr %call40168.i, i32 0, i32 3, i32 4
  %38 = ptrtoint ptr %add.ptr.i160.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %add.ptr.i160.i, align 2
  %40 = ptrtoint ptr %add.ptr1.i.i to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %add.ptr1.i.i, align 2
  %xor37.i.i = xor i16 %41, %39
  %xor3.i.i = zext i16 %xor37.i.i to i32
  %or.i161.i = or i32 %xor.i.i, %xor3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i161.i)
  %cmp.i162.i = icmp eq i32 %or.i161.i, 0
  br i1 %cmp.i162.i, label %land.lhs.true60.i.mv88e6xxx_policy_insert.exit_crit_edge, label %land.lhs.true60.i.for.inc.i_crit_edge

land.lhs.true60.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true60.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %land.lhs.true60.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

for.inc.i:                                        ; preds = %land.lhs.true60.i.for.inc.i_crit_edge, %land.lhs.true54.i.for.inc.i_crit_edge, %land.lhs.true50.i.for.inc.i_crit_edge, %land.lhs.true46.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %42 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %id.i, align 4
  %add.i = add i32 %43, 1
  store i32 %add.i, ptr %id.i, align 4
  %call40.i = call ptr @idr_get_next(ptr noundef %policies.i, ptr noundef nonnull %id.i) #16
  %cmp41.not.i = icmp eq ptr %call40.i, null
  br i1 %cmp41.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end39.i.for.end.i_crit_edge
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %44 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %dev.i, align 4
  %call.i.i = call noalias ptr @devm_kmalloc(ptr noundef %45, i32 noundef 192, i32 noundef 3520) #16
  %tobool68.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool68.not.i, label %for.end.i.mv88e6xxx_policy_insert.exit_crit_edge, label %if.end70.i

for.end.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.end70.i:                                       ; preds = %for.end.i
  %46 = ptrtoint ptr %location.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %location.i, align 8
  %call74.i = call i32 @idr_alloc_u32(ptr noundef %policies.i, ptr noundef nonnull %call.i.i, ptr noundef %location.i, i32 noundef -1, i32 noundef 3264) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74.i)
  %tobool75.not.i = icmp eq i32 %call74.i, 0
  br i1 %tobool75.not.i, label %if.end78.i, label %if.end70.i.cleanup.sink.split.i_crit_edge

if.end70.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.end70.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split.i

if.end78.i:                                       ; preds = %if.end70.i
  %fs79.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 2
  %47 = call ptr @memcpy(ptr %fs79.i, ptr %fs1, i32 168)
  %addr80.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 3
  %48 = ptrtoint ptr %addr.0.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %addr.0.i, align 4
  %50 = ptrtoint ptr %addr80.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %addr80.i, align 4
  %add.ptr.i163.i = getelementptr i8, ptr %addr.0.i, i32 4
  %51 = ptrtoint ptr %add.ptr.i163.i to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %add.ptr.i163.i, align 2
  %add.ptr1.i164.i = getelementptr %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 3, i32 4
  %53 = ptrtoint ptr %add.ptr1.i164.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %52, ptr %add.ptr1.i164.i, align 2
  %54 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %mapping.0.i, ptr %call.i.i, align 8
  %action83.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 1
  %55 = ptrtoint ptr %action83.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 3, ptr %action83.i, align 4
  %port84.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 4
  %56 = ptrtoint ptr %port84.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %port, ptr %port84.i, align 8
  %vid85.i = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call.i.i, i32 0, i32 5
  %57 = ptrtoint ptr %vid85.i to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %vid.0.i, ptr %vid85.i, align 4
  %call86.i = call fastcc i32 @mv88e6xxx_policy_apply(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %call.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86.i)
  %tobool87.not.i = icmp eq i32 %call86.i, 0
  br i1 %tobool87.not.i, label %if.end78.i.mv88e6xxx_policy_insert.exit_crit_edge, label %if.then88.i

if.end78.i.mv88e6xxx_policy_insert.exit_crit_edge: ; preds = %if.end78.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_policy_insert.exit

if.then88.i:                                      ; preds = %if.end78.i
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %location.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %location.i, align 8
  %call91.i = call ptr @idr_remove(ptr noundef %policies.i, i32 noundef %59) #16
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.then88.i, %if.end70.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi i32 [ %call86.i, %if.then88.i ], [ %call74.i, %if.end70.i.cleanup.sink.split.i_crit_edge ]
  %60 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dev.i, align 4
  call void @devm_kfree(ptr noundef %61, ptr noundef nonnull %call.i.i) #16
  br label %mv88e6xxx_policy_insert.exit

mv88e6xxx_policy_insert.exit:                     ; preds = %cleanup.sink.split.i, %if.end78.i.mv88e6xxx_policy_insert.exit_crit_edge, %for.end.i.mv88e6xxx_policy_insert.exit_crit_edge, %land.lhs.true60.i.mv88e6xxx_policy_insert.exit_crit_edge, %land.lhs.true25.i.mv88e6xxx_policy_insert.exit_crit_edge, %land.lhs.true13.i.mv88e6xxx_policy_insert.exit_crit_edge, %land.lhs.true.i.mv88e6xxx_policy_insert.exit_crit_edge, %if.then2.i.mv88e6xxx_policy_insert.exit_crit_edge, %if.end.i.mv88e6xxx_policy_insert.exit_crit_edge, %sw.bb.mv88e6xxx_policy_insert.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %sw.bb.mv88e6xxx_policy_insert.exit_crit_edge ], [ -95, %if.end.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ -95, %land.lhs.true13.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ -95, %if.then2.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ -95, %land.lhs.true25.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ -12, %for.end.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ 0, %if.end78.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ -95, %land.lhs.true.i.mv88e6xxx_policy_insert.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ], [ -17, %land.lhs.true60.i.mv88e6xxx_policy_insert.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %id.i) #16
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %policies = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 17
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %rxnfc, i32 0, i32 3, i32 6
  %62 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %location, align 8
  %call3 = tail call ptr @idr_remove(ptr noundef %policies, i32 noundef %63) #16
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %sw.bb2.sw.epilog_crit_edge, label %if.then

sw.bb2.sw.epilog_crit_edge:                       ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.then:                                          ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  %action = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call3, i32 0, i32 1
  %64 = ptrtoint ptr %action to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 0, ptr %action, align 4
  %call4 = tail call fastcc i32 @mv88e6xxx_policy_apply(ptr noundef %1, i32 noundef %port, ptr noundef nonnull %call3)
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 3
  %65 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %dev, align 4
  tail call void @devm_kfree(ptr noundef %66, ptr noundef nonnull %call3) #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then, %sw.bb2.sw.epilog_crit_edge, %mv88e6xxx_policy_insert.exit, %entry.sw.epilog_crit_edge
  %err.0 = phi i32 [ %call4, %if.then ], [ -2, %sw.bb2.sw.epilog_crit_edge ], [ %retval.0.i, %mv88e6xxx_policy_insert.exit ], [ -95, %entry.sw.epilog_crit_edge ]
  call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_mirror_add(ptr nocapture noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %mirror, i1 noundef zeroext %ingress) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %not.ingress = xor i1 %ingress, true
  %cond = zext i1 %not.ingress to i32
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock, i32 noundef 0) #16
  %ingress_dest_port = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 44
  %egress_dest_port = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 43
  %cond2.in = select i1 %ingress, ptr %ingress_dest_port, ptr %egress_dest_port
  %2 = ptrtoint ptr %cond2.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %cond2 = load i32, ptr %cond2.in, align 4
  %3 = ptrtoint ptr %mirror to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %mirror, align 1
  %conv = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond2, i32 %conv)
  %cmp.not = icmp eq i32 %cond2, %conv
  br i1 %cmp.not, label %entry.if.end30_crit_edge, label %for.cond.preheader

entry.if.end30_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30

for.cond.preheader:                               ; preds = %entry
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 5
  %7 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp452.not = icmp eq i32 %8, 0
  br i1 %cmp452.not, label %for.cond.preheader.if.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end_crit_edge:              ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.054 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %other_mirrors.0.off053 = phi i1 [ %tobool20, %for.body.for.body_crit_edge ], [ false, %for.cond.preheader.for.body_crit_edge ]
  %mirror_ingress = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %i.054, i32 11
  %mirror_egress = getelementptr %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 46, i32 %i.054, i32 12
  %cond17.in.in = select i1 %ingress, ptr %mirror_ingress, ptr %mirror_egress
  %9 = ptrtoint ptr %cond17.in.in to i32
  call void @__asan_load1_noabort(i32 %9)
  %cond17.in = load i8, ptr %cond17.in.in, align 1, !range !351
  %cond17 = zext i8 %cond17.in to i32
  %conv19 = zext i1 %other_mirrors.0.off053 to i32
  %or = or i32 %cond17, %conv19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or)
  %tobool20 = icmp ne i32 %or, 0
  %inc = add nuw i32 %i.054, 1
  %exitcond.not = icmp eq i32 %inc, %8
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body
  br i1 %tobool20, label %for.end.out_crit_edge, label %for.end.if.end_crit_edge

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.end.out_crit_edge:                            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end:                                           ; preds = %for.end.if.end_crit_edge, %for.cond.preheader.if.end_crit_edge
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %6, i32 0, i32 22
  %10 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops.i, align 4
  %set_egress_port.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %11, i32 0, i32 40
  %12 = ptrtoint ptr %set_egress_port.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %set_egress_port.i, align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end.out_crit_edge, label %if.end.i

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end.i:                                         ; preds = %if.end
  %call.i = tail call i32 %13(ptr noundef %1, i32 noundef %cond, i32 noundef %conv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i.out_crit_edge

if.end.i.out_crit_edge:                           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end6.i:                                        ; preds = %if.end.i
  br i1 %ingress, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %ingress_dest_port to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv, ptr %ingress_dest_port, align 4
  br label %if.end30

if.else.i:                                        ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %egress_dest_port to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %conv, ptr %egress_dest_port, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.else.i, %if.then7.i, %entry.if.end30_crit_edge
  %call31 = tail call i32 @mv88e6xxx_port_set_mirror(ptr noundef %1, i32 noundef %port, i32 noundef %cond, i1 noundef zeroext true) #16
  br label %out

out:                                              ; preds = %if.end30, %if.end.i.out_crit_edge, %if.end.out_crit_edge, %for.end.out_crit_edge
  %err.0 = phi i32 [ %call31, %if.end30 ], [ -16, %for.end.out_crit_edge ], [ -95, %if.end.out_crit_edge ], [ %call.i, %if.end.i.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock) #16
  ret i32 %err.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_port_mirror_del(ptr noundef readonly %ds, i32 noundef %port, ptr nocapture noundef readonly %mirror) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ingress = getelementptr inbounds %struct.dsa_mall_mirror_tc_entry, ptr %mirror, i32 0, i32 1
  %0 = ptrtoint ptr %ingress to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %ingress, align 1, !range !351
  %2 = xor i8 %1, 1
  %3 = zext i8 %2 to i32
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %4 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv, align 4
  %reg_lock = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock, i32 noundef 0) #16
  %call = tail call i32 @mv88e6xxx_port_set_mirror(ptr noundef %5, i32 noundef %port, i32 noundef %3, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool1.not = icmp eq i32 %call, 0
  br i1 %tobool1.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %7, ptr noundef nonnull @.str.109, i32 noundef %port) #19
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp52.not = icmp eq i32 %11, 0
  br i1 %cmp52.not, label %if.end.if.then15_crit_edge, label %for.body.lr.ph

if.end.if.then15_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then15

for.body.lr.ph:                                   ; preds = %if.end
  %12 = ptrtoint ptr %ingress to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %ingress, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool4.not = icmp eq i8 %13, 0
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %i.054 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %other_mirrors.0.off053 = phi i1 [ false, %for.body.lr.ph ], [ %tobool13, %for.body.for.body_crit_edge ]
  %mirror_ingress = getelementptr %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 46, i32 %i.054, i32 11
  %mirror_egress = getelementptr %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 46, i32 %i.054, i32 12
  %cond10.in.in = select i1 %tobool4.not, ptr %mirror_egress, ptr %mirror_ingress
  %14 = ptrtoint ptr %cond10.in.in to i32
  call void @__asan_load1_noabort(i32 %14)
  %cond10.in = load i8, ptr %cond10.in.in, align 1, !range !351
  %cond10 = zext i8 %cond10.in to i32
  %conv12 = zext i1 %other_mirrors.0.off053 to i32
  %or = or i32 %cond10, %conv12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or)
  %tobool13 = icmp ne i32 %or, 0
  %inc = add nuw i32 %i.054, 1
  %exitcond.not = icmp eq i32 %inc, %11
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body
  br i1 %tobool13, label %for.end.if.end25_crit_edge, label %for.end.if.then15_crit_edge

for.end.if.then15_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then15

for.end.if.end25_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then15:                                        ; preds = %for.end.if.then15_crit_edge, %if.end.if.then15_crit_edge
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %15 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %if.then15.dsa_to_port.exit.i_crit_edge, label %if.then15.for.body.i.i_crit_edge

if.then15.for.body.i.i_crit_edge:                 ; preds = %if.then15
  br label %for.body.i.i

if.then15.dsa_to_port.exit.i_crit_edge:           ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %if.then15.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %if.then15.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %18 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %19, %ds
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %20 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %port)
  %cmp5.i.i = icmp eq i32 %21, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %22 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_to_port.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_to_port.exit.i_crit_edge:         ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_to_port.exit.i

dsa_to_port.exit.i:                               ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_to_port.exit.i_crit_edge, %if.then15.dsa_to_port.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %if.then15.dsa_to_port.exit.i_crit_edge ], [ null, %for.inc.i.i.dsa_to_port.exit.i_crit_edge ]
  %cpu_dp1.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 8
  %23 = ptrtoint ptr %cpu_dp1.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %cpu_dp1.i, align 4
  %tobool.not.i = icmp eq ptr %24, null
  br i1 %tobool.not.i, label %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge, label %if.end.i

dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge: ; preds = %dsa_to_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_upstream_port.exit

if.end.i:                                         ; preds = %dsa_to_port.exit.i
  %ds2.i = getelementptr inbounds %struct.dsa_port, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %ds2.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ds2.i, align 4
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %26, i32 0, i32 2
  %27 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %index.i, align 4
  %index3.i = getelementptr inbounds %struct.dsa_port, ptr %24, i32 0, i32 5
  %29 = ptrtoint ptr %index3.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %index3.i, align 4
  %index.i10.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 2
  %31 = ptrtoint ptr %index.i10.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %index.i10.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %28)
  %cmp.i.i = icmp eq i32 %32, %28
  br i1 %cmp.i.i, label %if.end.i.dsa_upstream_port.exit_crit_edge, label %if.else.i.i

if.end.i.dsa_upstream_port.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_upstream_port.exit

if.else.i.i:                                      ; preds = %if.end.i
  %rtable.i.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %16, i32 0, i32 10
  %33 = ptrtoint ptr %rtable.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn22.i.i.i = load ptr, ptr %rtable.i.i.i, align 4
  %cmp.not23.i.i.i = icmp eq ptr %.pn22.i.i.i, %rtable.i.i.i
  br i1 %cmp.not23.i.i.i, label %if.else.i.i.for.end.i.i.i_crit_edge, label %if.else.i.i.for.body.i.i.i_crit_edge

if.else.i.i.for.body.i.i.i_crit_edge:             ; preds = %if.else.i.i
  br label %for.body.i.i.i

if.else.i.i.for.end.i.i.i_crit_edge:              ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.else.i.i.for.body.i.i.i_crit_edge
  %.pn24.i.i.i = phi ptr [ %.pn.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn22.i.i.i, %if.else.i.i.for.body.i.i.i_crit_edge ]
  %dl.0.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -8
  %34 = ptrtoint ptr %dl.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dl.0.i.i.i, align 4
  %ds3.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %35, i32 0, i32 4
  %36 = ptrtoint ptr %ds3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ds3.i.i.i, align 4
  %cmp4.i.i.i = icmp eq ptr %37, %ds
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %link_dp.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -4
  %38 = ptrtoint ptr %link_dp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %link_dp.i.i.i, align 4
  %ds5.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %39, i32 0, i32 4
  %40 = ptrtoint ptr %ds5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ds5.i.i.i, align 4
  %index.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %41, i32 0, i32 2
  %42 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %index.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %28)
  %cmp6.i.i.i = icmp eq i32 %43, %28
  br i1 %cmp6.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %index8.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %35, i32 0, i32 5
  br label %dsa_routing_port.exit.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %44 = ptrtoint ptr %.pn24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %.pn.i.i.i = load ptr, ptr %.pn24.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %rtable.i.i.i
  br i1 %cmp.not.i.i.i, label %for.inc.i.i.i.for.end.i.i.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.inc.i.i.i.for.end.i.i.i_crit_edge:            ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i.for.end.i.i.i_crit_edge, %if.else.i.i.for.end.i.i.i_crit_edge
  %num_ports.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 18
  br label %dsa_routing_port.exit.i.i

dsa_routing_port.exit.i.i:                        ; preds = %for.end.i.i.i, %if.then.i.i.i
  %retval.0.in.i.i.i = phi ptr [ %index8.i.i.i, %if.then.i.i.i ], [ %num_ports.i.i.i, %for.end.i.i.i ]
  %45 = ptrtoint ptr %retval.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %retval.0.i.i.i = load i32, ptr %retval.0.in.i.i.i, align 4
  br label %dsa_upstream_port.exit

dsa_upstream_port.exit:                           ; preds = %dsa_routing_port.exit.i.i, %if.end.i.dsa_upstream_port.exit_crit_edge, %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge
  %retval.0.i = phi i32 [ %port, %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge ], [ %retval.0.i.i.i, %dsa_routing_port.exit.i.i ], [ %30, %if.end.i.dsa_upstream_port.exit_crit_edge ]
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %9, i32 0, i32 22
  %46 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ops.i, align 4
  %set_egress_port.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %47, i32 0, i32 40
  %48 = ptrtoint ptr %set_egress_port.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %set_egress_port.i, align 4
  %tobool.not.i44 = icmp eq ptr %49, null
  br i1 %tobool.not.i44, label %dsa_upstream_port.exit.do.end22_crit_edge, label %if.end.i45

dsa_upstream_port.exit.do.end22_crit_edge:        ; preds = %dsa_upstream_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end22

if.end.i45:                                       ; preds = %dsa_upstream_port.exit
  %call.i = tail call i32 %49(ptr noundef %5, i32 noundef %3, i32 noundef %retval.0.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i45.do.end22_crit_edge

if.end.i45.do.end22_crit_edge:                    ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end22

if.end6.i:                                        ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp.i = icmp eq i8 %2, 0
  br i1 %cmp.i, label %if.then7.i, label %if.else.i

if.then7.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %ingress_dest_port.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 44
  %50 = ptrtoint ptr %ingress_dest_port.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %retval.0.i, ptr %ingress_dest_port.i, align 4
  br label %if.end25

if.else.i:                                        ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %egress_dest_port.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 43
  %51 = ptrtoint ptr %egress_dest_port.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %retval.0.i, ptr %egress_dest_port.i, align 8
  br label %if.end25

do.end22:                                         ; preds = %if.end.i45.do.end22_crit_edge, %dsa_upstream_port.exit.do.end22_crit_edge
  %52 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %53, ptr noundef nonnull @.str.112) #19
  br label %if.end25

if.end25:                                         ; preds = %do.end22, %if.else.i, %if.then7.i, %for.end.if.end25_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_crosschip_bridge_join(ptr nocapture noundef readonly %ds, i32 noundef %tree_index, i32 noundef %sw_index, i32 noundef %port, [4 x i32] %bridge.coerce) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bridge.coerce.fca.1.extract = extractvalue [4 x i32] %bridge.coerce, 1
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %dst = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %0 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dst, align 4
  %index = getelementptr inbounds %struct.dsa_switch_tree, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %tree_index)
  %cmp.not = icmp eq i32 %3, %tree_index
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %5, i32 noundef %sw_index, i32 noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %cond.false, label %if.end.cond.end_crit_edge

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst, align 4
  %last_switch.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %last_switch.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %last_switch.i, align 4
  %add.i = add i32 %9, %bridge.coerce.fca.1.extract
  %10 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv, align 4
  %conv1.i = and i32 %add.i, 255
  %call.i = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %11, i32 noundef %conv1.i, i32 noundef 0) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.cond.end_crit_edge
  %cond = phi i32 [ %call.i, %cond.false ], [ %call, %if.end.cond.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %cond.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @mv88e6xxx_crosschip_bridge_leave(ptr nocapture noundef readonly %ds, i32 noundef %tree_index, i32 noundef %sw_index, i32 noundef %port, [4 x i32] %bridge.coerce) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bridge.coerce.fca.1.extract = extractvalue [4 x i32] %bridge.coerce, 1
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %dst = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %0 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dst, align 4
  %index = getelementptr inbounds %struct.dsa_switch_tree, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %tree_index)
  %cmp.not = icmp eq i32 %3, %tree_index
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %5, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %5, i32 noundef %sw_index, i32 noundef %port)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %lor.lhs.false, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

lor.lhs.false:                                    ; preds = %if.end
  %6 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst, align 4
  %last_switch.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %last_switch.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %last_switch.i, align 4
  %add.i = add i32 %9, %bridge.coerce.fca.1.extract
  %10 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %priv, align 4
  %conv1.i = and i32 %add.i, 255
  %call.i = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %11, i32 noundef %conv1.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %lor.lhs.false.if.end4_crit_edge, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

lor.lhs.false.if.end4_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

do.end:                                           ; preds = %lor.lhs.false.do.end_crit_edge, %if.end.do.end_crit_edge
  %12 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ds, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.92) #19
  br label %if.end4

if.end4:                                          ; preds = %do.end, %lor.lhs.false.if.end4_crit_edge
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_crosschip_lag_change(ptr noundef %ds, i32 noundef %sw_index, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_lag_sync_masks(ptr noundef %ds)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_crosschip_lag_join(ptr noundef %ds, i32 noundef %sw_index, i32 noundef %port, ptr noundef %lag, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %global2_addr.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %global2_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %global2_addr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %dst.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %6 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst.i, align 4
  %lags_len.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %lags_len.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lags_len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp10.not.i.i = icmp eq i32 %9, 0
  br i1 %cmp10.not.i.i, label %if.end.i.cleanup_crit_edge, label %for.body.lr.ph.i.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %lags.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 5
  %10 = ptrtoint ptr %lags.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %lags.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %id.011.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %11, i32 %id.011.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %13, null
  %cmp1.i.i = icmp eq ptr %13, %lag
  %or.cond.i.i = and i1 %tobool.not.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %dsa_lag_id.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw i32 %id.011.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %9
  br i1 %exitcond.not.i.i, label %for.inc.i.i.cleanup_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.cleanup_crit_edge:                    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

dsa_lag_id.exit.i:                                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %id.011.i.i)
  %cmp.i = icmp slt i32 %id.011.i.i, 0
  br i1 %cmp.i, label %dsa_lag_id.exit.i.cleanup_crit_edge, label %lor.lhs.false.i

dsa_lag_id.exit.i.cleanup_crit_edge:              ; preds = %dsa_lag_id.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %dsa_lag_id.exit.i
  %num_lag_ids.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 16
  %14 = ptrtoint ptr %num_lag_ids.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_lag_ids.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %id.011.i.i, i32 %15)
  %cmp2.not.i = icmp ult i32 %id.011.i.i, %15
  br i1 %cmp2.not.i, label %if.end4.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %lor.lhs.false.i
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 1
  %16 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn38.i = load ptr, ptr %ports.i, align 4
  %cmp8.not39.i = icmp eq ptr %.pn38.i, %ports.i
  br i1 %cmp8.not39.i, label %if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge, label %if.end4.i.for.body.i_crit_edge

if.end4.i.for.body.i_crit_edge:                   ; preds = %if.end4.i
  br label %for.body.i

if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_can_offload.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end4.i.for.body.i_crit_edge
  %.pn41.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn38.i, %if.end4.i.for.body.i_crit_edge ]
  %members.040.i = phi i32 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end4.i.for.body.i_crit_edge ]
  %lag_dev.i = getelementptr i8, ptr %.pn41.i, i32 -8
  %17 = ptrtoint ptr %lag_dev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %lag_dev.i, align 4
  %cmp9.i = icmp eq ptr %18, %lag
  %inc.i = zext i1 %cmp9.i to i32
  %spec.select.i = add i32 %members.040.i, %inc.i
  %19 = ptrtoint ptr %.pn41.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn41.i, align 4
  %cmp8.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp8.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %spec.select.i)
  %phi.cmp.i = icmp sgt i32 %spec.select.i, 8
  br i1 %phi.cmp.i, label %for.end.i.cleanup_crit_edge, label %for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge

for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_can_offload.exit

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_lag_can_offload.exit:                   ; preds = %for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge, %if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge
  %20 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %info, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %21)
  %cmp20.not.i = icmp eq i32 %21, 5
  br i1 %cmp20.not.i, label %if.end, label %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge

mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge: ; preds = %mv88e6xxx_lag_can_offload.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_lag_can_offload.exit
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call1 = tail call fastcc i32 @mv88e6xxx_lag_sync_masks_map(ptr noundef %ds, ptr noundef %lag)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end3, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %unlock

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %1, i32 noundef %sw_index, i32 noundef %port)
  br label %unlock

unlock:                                           ; preds = %if.end3, %if.end.unlock_crit_edge
  %err.0 = phi i32 [ %call1, %if.end.unlock_crit_edge ], [ %call4, %if.end3 ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %unlock, %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %dsa_lag_id.exit.i.cleanup_crit_edge, %for.inc.i.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %unlock ], [ -95, %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge ], [ -95, %entry.cleanup_crit_edge ], [ -95, %lor.lhs.false.i.cleanup_crit_edge ], [ -95, %dsa_lag_id.exit.i.cleanup_crit_edge ], [ -95, %for.end.i.cleanup_crit_edge ], [ -95, %if.end.i.cleanup_crit_edge ], [ -95, %for.inc.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_crosschip_lag_leave(ptr noundef %ds, i32 noundef %sw_index, i32 noundef %port, ptr noundef %lag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_lag_sync_masks_map(ptr noundef %ds, ptr noundef %lag)
  %call1 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %1, i32 noundef %sw_index, i32 noundef %port)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool.not, i32 %call1, i32 %call
  ret i32 %spec.select
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_hwtstamp_get(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_hwtstamp_set(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_port_txtstamp(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @mv88e6xxx_port_rxtstamp(ptr noundef, i32 noundef, ptr noundef, i32 noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_devlink_param_get(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_devlink_param_set(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_devlink_info_get(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_change_mtu(ptr noundef readonly %ds, i32 noundef %port, i32 noundef %new_mtu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %dsa_is_dsa_port.exit.thread, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %entry.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %5 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %6, %ds
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %7 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i.i = icmp eq i32 %8, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_is_dsa_port.exit_crit_edge:       ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_dsa_port.exit

dsa_is_dsa_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %cmp.i = icmp eq i32 %11, 2
  br i1 %cmp.i, label %dsa_is_dsa_port.exit.if.then_crit_edge, label %dsa_is_dsa_port.exit.for.body.i.i42_crit_edge

dsa_is_dsa_port.exit.for.body.i.i42_crit_edge:    ; preds = %dsa_is_dsa_port.exit
  br label %for.body.i.i42

dsa_is_dsa_port.exit.if.then_crit_edge:           ; preds = %dsa_is_dsa_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

dsa_is_dsa_port.exit.thread:                      ; preds = %entry
  call void @__asan_load4_noabort(i32 24)
  %12 = load i32, ptr inttoptr (i32 24 to ptr), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %cmp.i57 = icmp eq i32 %12, 2
  br i1 %cmp.i57, label %dsa_is_dsa_port.exit.thread.if.then_crit_edge, label %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge

dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge: ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit

dsa_is_dsa_port.exit.thread.if.then_crit_edge:    ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

for.body.i.i42:                                   ; preds = %for.inc.i.i48.for.body.i.i42_crit_edge, %dsa_is_dsa_port.exit.for.body.i.i42_crit_edge
  %.pn22.i.i39 = phi ptr [ %.pn.i.i46, %for.inc.i.i48.for.body.i.i42_crit_edge ], [ %.pn20.i.i, %dsa_is_dsa_port.exit.for.body.i.i42_crit_edge ]
  %ds3.i.i40 = getelementptr i8, ptr %.pn22.i.i39, i32 -432
  %13 = ptrtoint ptr %ds3.i.i40 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ds3.i.i40, align 4
  %cmp4.i.i41 = icmp eq ptr %14, %ds
  br i1 %cmp4.i.i41, label %land.lhs.true.i.i45, label %for.body.i.i42.for.inc.i.i48_crit_edge

for.body.i.i42.for.inc.i.i48_crit_edge:           ; preds = %for.body.i.i42
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i48

land.lhs.true.i.i45:                              ; preds = %for.body.i.i42
  %index.i.i43 = getelementptr i8, ptr %.pn22.i.i39, i32 -428
  %15 = ptrtoint ptr %index.i.i43 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %index.i.i43, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %port)
  %cmp5.i.i44 = icmp eq i32 %16, %port
  br i1 %cmp5.i.i44, label %cleanup.split.loop.exit18.i.i50, label %land.lhs.true.i.i45.for.inc.i.i48_crit_edge

land.lhs.true.i.i45.for.inc.i.i48_crit_edge:      ; preds = %land.lhs.true.i.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i48

for.inc.i.i48:                                    ; preds = %land.lhs.true.i.i45.for.inc.i.i48_crit_edge, %for.body.i.i42.for.inc.i.i48_crit_edge
  %17 = ptrtoint ptr %.pn22.i.i39 to i32
  call void @__asan_load4_noabort(i32 %17)
  %.pn.i.i46 = load ptr, ptr %.pn22.i.i39, align 4
  %cmp.not.i.i47 = icmp eq ptr %.pn.i.i46, %ports.i.i
  br i1 %cmp.not.i.i47, label %for.inc.i.i48.dsa_is_cpu_port.exit_crit_edge, label %for.inc.i.i48.for.body.i.i42_crit_edge

for.inc.i.i48.for.body.i.i42_crit_edge:           ; preds = %for.inc.i.i48
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i42

for.inc.i.i48.dsa_is_cpu_port.exit_crit_edge:     ; preds = %for.inc.i.i48
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_cpu_port.exit

cleanup.split.loop.exit18.i.i50:                  ; preds = %land.lhs.true.i.i45
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i49 = getelementptr i8, ptr %.pn22.i.i39, i32 -448
  br label %dsa_is_cpu_port.exit

dsa_is_cpu_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i50, %for.inc.i.i48.dsa_is_cpu_port.exit_crit_edge, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge
  %retval.0.i.i51 = phi ptr [ %dp.0.le.i.i49, %cleanup.split.loop.exit18.i.i50 ], [ null, %dsa_is_dsa_port.exit.thread.dsa_is_cpu_port.exit_crit_edge ], [ null, %for.inc.i.i48.dsa_is_cpu_port.exit_crit_edge ]
  %type.i52 = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i51, i32 0, i32 6
  %18 = ptrtoint ptr %type.i52 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %type.i52, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %19)
  %cmp.i53 = icmp eq i32 %19, 1
  br i1 %cmp.i53, label %dsa_is_cpu_port.exit.if.then_crit_edge, label %dsa_is_cpu_port.exit.if.end_crit_edge

dsa_is_cpu_port.exit.if.end_crit_edge:            ; preds = %dsa_is_cpu_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

dsa_is_cpu_port.exit.if.then_crit_edge:           ; preds = %dsa_is_cpu_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %dsa_is_cpu_port.exit.if.then_crit_edge, %dsa_is_dsa_port.exit.thread.if.then_crit_edge, %dsa_is_dsa_port.exit.if.then_crit_edge
  %add = add i32 %new_mtu, 8
  br label %if.end

if.end:                                           ; preds = %if.then, %dsa_is_cpu_port.exit.if.end_crit_edge
  %new_mtu.addr.0 = phi i32 [ %add, %if.then ], [ %new_mtu, %dsa_is_cpu_port.exit.if.end_crit_edge ]
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %21, i32 0, i32 22
  %22 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ops, align 4
  %port_set_jumbo_size = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %23, i32 0, i32 25
  %24 = ptrtoint ptr %port_set_jumbo_size to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %port_set_jumbo_size, align 4
  %tobool.not = icmp eq ptr %25, null
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 %25(ptr noundef %1, i32 noundef %port, i32 noundef %new_mtu.addr.0) #16
  br label %if.end19

if.else:                                          ; preds = %if.end
  %set_max_frame_size = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %23, i32 0, i32 67
  %26 = ptrtoint ptr %set_max_frame_size to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %set_max_frame_size, align 4
  %tobool9.not = icmp eq ptr %27, null
  br i1 %tobool9.not, label %if.else15, label %if.then10

if.then10:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call14 = tail call i32 %27(ptr noundef %1, i32 noundef %new_mtu.addr.0) #16
  br label %if.end19

if.else15:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 1522, i32 %new_mtu.addr.0)
  %cmp = icmp sgt i32 %new_mtu.addr.0, 1522
  %spec.select = select i1 %cmp, i32 -22, i32 0
  br label %if.end19

if.end19:                                         ; preds = %if.else15, %if.then10, %if.then2
  %ret.0 = phi i32 [ %call6, %if.then2 ], [ %call14, %if.then10 ], [ %spec.select, %if.else15 ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %ret.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @mv88e6xxx_get_max_mtu(ptr nocapture noundef readonly %ds, i32 noundef %port) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops, align 4
  %port_set_jumbo_size = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 25
  %6 = ptrtoint ptr %port_set_jumbo_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %port_set_jumbo_size, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.else, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %set_max_frame_size = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %5, i32 0, i32 67
  %8 = ptrtoint ptr %set_max_frame_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %set_max_frame_size, align 4
  %tobool3.not = icmp eq ptr %9, null
  %. = select i1 %tobool3.not, i32 1492, i32 1602
  br label %cleanup

cleanup:                                          ; preds = %if.else, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10210, %entry.cleanup_crit_edge ], [ %., %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_lag_change(ptr noundef %ds, i32 noundef %port) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_lag_sync_masks(ptr noundef %ds)
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_lag_join(ptr noundef %ds, i32 noundef %port, ptr noundef %lag, ptr nocapture noundef readonly %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %global2_addr.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %global2_addr.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %global2_addr.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not.i = icmp eq i32 %5, 0
  br i1 %tobool.i.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %dst.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %6 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst.i, align 4
  %lags_len.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %lags_len.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lags_len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp10.not.i.i = icmp eq i32 %9, 0
  br i1 %cmp10.not.i.i, label %if.end.i.cleanup_crit_edge, label %for.body.lr.ph.i.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph.i.i:                               ; preds = %if.end.i
  %lags.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 5
  %10 = ptrtoint ptr %lags.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %lags.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %id.011.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %11, i32 %id.011.i.i
  %12 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %13, null
  %cmp1.i.i = icmp eq ptr %13, %lag
  %or.cond.i.i = and i1 %tobool.not.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %dsa_lag_id.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw i32 %id.011.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %9
  br i1 %exitcond.not.i.i, label %for.inc.i.i.cleanup_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.cleanup_crit_edge:                    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

dsa_lag_id.exit.i:                                ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %id.011.i.i)
  %cmp.i = icmp slt i32 %id.011.i.i, 0
  br i1 %cmp.i, label %dsa_lag_id.exit.i.cleanup_crit_edge, label %lor.lhs.false.i

dsa_lag_id.exit.i.cleanup_crit_edge:              ; preds = %dsa_lag_id.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %dsa_lag_id.exit.i
  %num_lag_ids.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 16
  %14 = ptrtoint ptr %num_lag_ids.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_lag_ids.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %id.011.i.i, i32 %15)
  %cmp2.not.i = icmp ult i32 %id.011.i.i, %15
  br i1 %cmp2.not.i, label %if.end4.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %lor.lhs.false.i
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 1
  %16 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn38.i = load ptr, ptr %ports.i, align 4
  %cmp8.not39.i = icmp eq ptr %.pn38.i, %ports.i
  br i1 %cmp8.not39.i, label %if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge, label %if.end4.i.for.body.i_crit_edge

if.end4.i.for.body.i_crit_edge:                   ; preds = %if.end4.i
  br label %for.body.i

if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge: ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_can_offload.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end4.i.for.body.i_crit_edge
  %.pn41.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn38.i, %if.end4.i.for.body.i_crit_edge ]
  %members.040.i = phi i32 [ %spec.select.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end4.i.for.body.i_crit_edge ]
  %lag_dev.i = getelementptr i8, ptr %.pn41.i, i32 -8
  %17 = ptrtoint ptr %lag_dev.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %lag_dev.i, align 4
  %cmp9.i = icmp eq ptr %18, %lag
  %inc.i = zext i1 %cmp9.i to i32
  %spec.select.i = add i32 %members.040.i, %inc.i
  %19 = ptrtoint ptr %.pn41.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn41.i, align 4
  %cmp8.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp8.not.i, label %for.end.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %spec.select.i)
  %phi.cmp.i = icmp sgt i32 %spec.select.i, 8
  br i1 %phi.cmp.i, label %for.end.i.cleanup_crit_edge, label %for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge

for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_can_offload.exit

for.end.i.cleanup_crit_edge:                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_lag_can_offload.exit:                   ; preds = %for.end.i.mv88e6xxx_lag_can_offload.exit_crit_edge, %if.end4.i.mv88e6xxx_lag_can_offload.exit_crit_edge
  %20 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %info, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %21)
  %cmp20.not.i = icmp eq i32 %21, 5
  br i1 %cmp20.not.i, label %if.end, label %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge

mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge: ; preds = %mv88e6xxx_lag_can_offload.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_lag_can_offload.exit
  %22 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dst.i, align 4
  %lags_len.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %23, i32 0, i32 11
  %24 = ptrtoint ptr %lags_len.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %lags_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp10.not.i = icmp eq i32 %25, 0
  br i1 %cmp10.not.i, label %if.end.dsa_lag_id.exit_crit_edge, label %for.body.lr.ph.i

if.end.dsa_lag_id.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit

for.body.lr.ph.i:                                 ; preds = %if.end
  %lags.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %23, i32 0, i32 5
  %26 = ptrtoint ptr %lags.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %lags.i, align 4
  br label %for.body.i24

for.body.i24:                                     ; preds = %for.inc.i.for.body.i24_crit_edge, %for.body.lr.ph.i
  %id.011.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i25, %for.inc.i.for.body.i24_crit_edge ]
  %arrayidx.i = getelementptr ptr, ptr %27, i32 %id.011.i
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp ne ptr %29, null
  %cmp1.i = icmp eq ptr %29, %lag
  %or.cond.i = and i1 %tobool.not.i, %cmp1.i
  br i1 %or.cond.i, label %for.body.i24.dsa_lag_id.exit_crit_edge, label %for.inc.i

for.body.i24.dsa_lag_id.exit_crit_edge:           ; preds = %for.body.i24
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit

for.inc.i:                                        ; preds = %for.body.i24
  %inc.i25 = add nuw i32 %id.011.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i25, %25
  br i1 %exitcond.not.i, label %for.inc.i.dsa_lag_id.exit_crit_edge, label %for.inc.i.for.body.i24_crit_edge

for.inc.i.for.body.i24_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i24

for.inc.i.dsa_lag_id.exit_crit_edge:              ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit

dsa_lag_id.exit:                                  ; preds = %for.inc.i.dsa_lag_id.exit_crit_edge, %for.body.i24.dsa_lag_id.exit_crit_edge, %if.end.dsa_lag_id.exit_crit_edge
  %retval.0.i26 = phi i32 [ -19, %if.end.dsa_lag_id.exit_crit_edge ], [ -19, %for.inc.i.dsa_lag_id.exit_crit_edge ], [ %id.011.i, %for.body.i24.dsa_lag_id.exit_crit_edge ]
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %conv = trunc i32 %retval.0.i26 to i8
  %call2 = tail call i32 @mv88e6xxx_port_set_trunk(ptr noundef %1, i32 noundef %port, i1 noundef zeroext true, i8 noundef zeroext %conv) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %if.end4, label %dsa_lag_id.exit.cleanup.sink.split_crit_edge

dsa_lag_id.exit.cleanup.sink.split_crit_edge:     ; preds = %dsa_lag_id.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.end4:                                          ; preds = %dsa_lag_id.exit
  %call5 = tail call fastcc i32 @mv88e6xxx_lag_sync_masks_map(ptr noundef %ds, ptr noundef %lag)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end4.cleanup.sink.split_crit_edge, label %err_clear_trunk

if.end4.cleanup.sink.split_crit_edge:             ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

err_clear_trunk:                                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %call9 = tail call i32 @mv88e6xxx_port_set_trunk(ptr noundef %1, i32 noundef %port, i1 noundef zeroext false, i8 noundef zeroext 0) #16
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %err_clear_trunk, %if.end4.cleanup.sink.split_crit_edge, %dsa_lag_id.exit.cleanup.sink.split_crit_edge
  %retval.0.ph = phi i32 [ 0, %if.end4.cleanup.sink.split_crit_edge ], [ %call2, %dsa_lag_id.exit.cleanup.sink.split_crit_edge ], [ %call5, %err_clear_trunk ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge, %for.end.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %dsa_lag_id.exit.i.cleanup_crit_edge, %for.inc.i.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -95, %mv88e6xxx_lag_can_offload.exit.cleanup_crit_edge ], [ -95, %entry.cleanup_crit_edge ], [ -95, %lor.lhs.false.i.cleanup_crit_edge ], [ -95, %dsa_lag_id.exit.i.cleanup_crit_edge ], [ -95, %for.end.i.cleanup_crit_edge ], [ -95, %if.end.i.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ], [ -95, %for.inc.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_port_lag_leave(ptr noundef %ds, i32 noundef %port, ptr noundef %lag) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %call = tail call fastcc i32 @mv88e6xxx_lag_sync_masks_map(ptr noundef %ds, ptr noundef %lag)
  %call1 = tail call i32 @mv88e6xxx_port_set_trunk(ptr noundef %1, i32 noundef %port, i1 noundef zeroext false, i8 noundef zeroext 0) #16
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool.not, i32 %call1, i32 %call
  ret i32 %spec.select
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_setup_port_mode(ptr noundef %chip, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds, align 8
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %dsa_is_dsa_port.exit.thread, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %entry.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %5 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %6, %1
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %7 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i.i = icmp eq i32 %8, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_is_dsa_port.exit_crit_edge:       ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_dsa_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_dsa_port.exit

dsa_is_dsa_port.exit:                             ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.inc.i.i.dsa_is_dsa_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %10 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %11)
  %cmp.i = icmp eq i32 %11, 2
  br i1 %cmp.i, label %dsa_is_dsa_port.exit.if.then_crit_edge, label %dsa_is_dsa_port.exit.for.body.i.i35_crit_edge

dsa_is_dsa_port.exit.for.body.i.i35_crit_edge:    ; preds = %dsa_is_dsa_port.exit
  br label %for.body.i.i35

dsa_is_dsa_port.exit.if.then_crit_edge:           ; preds = %dsa_is_dsa_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

dsa_is_dsa_port.exit.thread:                      ; preds = %entry
  call void @__asan_load4_noabort(i32 24)
  %12 = load i32, ptr inttoptr (i32 24 to ptr), align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %12)
  %cmp.i104 = icmp eq i32 %12, 2
  br i1 %cmp.i104, label %dsa_is_dsa_port.exit.thread.if.then_crit_edge, label %dsa_is_dsa_port.exit.thread.dsa_is_user_port.exit_crit_edge

dsa_is_dsa_port.exit.thread.dsa_is_user_port.exit_crit_edge: ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_user_port.exit

dsa_is_dsa_port.exit.thread.if.then_crit_edge:    ; preds = %dsa_is_dsa_port.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %dsa_is_dsa_port.exit.thread.if.then_crit_edge, %dsa_is_dsa_port.exit.if.then_crit_edge
  %13 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %chip, align 8
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %14, i32 0, i32 22
  %15 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops.i.i, align 4
  %port_set_frame_mode.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %16, i32 0, i32 21
  %17 = ptrtoint ptr %port_set_frame_mode.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %port_set_frame_mode.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i.i, label %if.then.return_crit_edge, label %if.end.i.i

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i:                                       ; preds = %if.then
  %call.i.i = tail call i32 @mv88e6xxx_port_set_egress_mode(ptr noundef %chip, i32 noundef %port, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool1.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool1.not.i.i, label %if.end3.i.i, label %if.end.i.i.return_crit_edge

if.end.i.i.return_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3.i.i:                                      ; preds = %if.end.i.i
  %19 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %chip, align 8
  %ops5.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %20, i32 0, i32 22
  %21 = ptrtoint ptr %ops5.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops5.i.i, align 4
  %port_set_frame_mode6.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %22, i32 0, i32 21
  %23 = ptrtoint ptr %port_set_frame_mode6.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %port_set_frame_mode6.i.i, align 4
  %call7.i.i = tail call i32 %24(ptr noundef %chip, i32 noundef %port, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %if.end10.i.i, label %if.end3.i.i.return_crit_edge

if.end3.i.i.return_crit_edge:                     ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10.i.i:                                     ; preds = %if.end3.i.i
  %25 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %chip, align 8
  %ops12.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %26, i32 0, i32 22
  %27 = ptrtoint ptr %ops12.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops12.i.i, align 4
  %port_set_ether_type.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %28, i32 0, i32 24
  %29 = ptrtoint ptr %port_set_ether_type.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %port_set_ether_type.i.i, align 4
  %tobool13.not.i.i = icmp eq ptr %30, null
  br i1 %tobool13.not.i.i, label %if.end10.i.i.return_crit_edge, label %if.then14.i.i

if.end10.i.i.return_crit_edge:                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then14.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call18.i.i = tail call i32 %30(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext -28416) #16
  br label %return

for.body.i.i35:                                   ; preds = %for.inc.i.i41.for.body.i.i35_crit_edge, %dsa_is_dsa_port.exit.for.body.i.i35_crit_edge
  %.pn22.i.i32 = phi ptr [ %.pn.i.i39, %for.inc.i.i41.for.body.i.i35_crit_edge ], [ %.pn20.i.i, %dsa_is_dsa_port.exit.for.body.i.i35_crit_edge ]
  %ds3.i.i33 = getelementptr i8, ptr %.pn22.i.i32, i32 -432
  %31 = ptrtoint ptr %ds3.i.i33 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ds3.i.i33, align 4
  %cmp4.i.i34 = icmp eq ptr %32, %1
  br i1 %cmp4.i.i34, label %land.lhs.true.i.i38, label %for.body.i.i35.for.inc.i.i41_crit_edge

for.body.i.i35.for.inc.i.i41_crit_edge:           ; preds = %for.body.i.i35
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i41

land.lhs.true.i.i38:                              ; preds = %for.body.i.i35
  %index.i.i36 = getelementptr i8, ptr %.pn22.i.i32, i32 -428
  %33 = ptrtoint ptr %index.i.i36 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %index.i.i36, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %34, i32 %port)
  %cmp5.i.i37 = icmp eq i32 %34, %port
  br i1 %cmp5.i.i37, label %cleanup.split.loop.exit18.i.i43, label %land.lhs.true.i.i38.for.inc.i.i41_crit_edge

land.lhs.true.i.i38.for.inc.i.i41_crit_edge:      ; preds = %land.lhs.true.i.i38
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i41

for.inc.i.i41:                                    ; preds = %land.lhs.true.i.i38.for.inc.i.i41_crit_edge, %for.body.i.i35.for.inc.i.i41_crit_edge
  %35 = ptrtoint ptr %.pn22.i.i32 to i32
  call void @__asan_load4_noabort(i32 %35)
  %.pn.i.i39 = load ptr, ptr %.pn22.i.i32, align 4
  %cmp.not.i.i40 = icmp eq ptr %.pn.i.i39, %ports.i.i
  br i1 %cmp.not.i.i40, label %for.inc.i.i41.dsa_is_user_port.exit_crit_edge, label %for.inc.i.i41.for.body.i.i35_crit_edge

for.inc.i.i41.for.body.i.i35_crit_edge:           ; preds = %for.inc.i.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i35

for.inc.i.i41.dsa_is_user_port.exit_crit_edge:    ; preds = %for.inc.i.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_user_port.exit

cleanup.split.loop.exit18.i.i43:                  ; preds = %land.lhs.true.i.i38
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i42 = getelementptr i8, ptr %.pn22.i.i32, i32 -448
  br label %dsa_is_user_port.exit

dsa_is_user_port.exit:                            ; preds = %cleanup.split.loop.exit18.i.i43, %for.inc.i.i41.dsa_is_user_port.exit_crit_edge, %dsa_is_dsa_port.exit.thread.dsa_is_user_port.exit_crit_edge
  %retval.0.i.i44 = phi ptr [ %dp.0.le.i.i42, %cleanup.split.loop.exit18.i.i43 ], [ null, %dsa_is_dsa_port.exit.thread.dsa_is_user_port.exit_crit_edge ], [ null, %for.inc.i.i41.dsa_is_user_port.exit_crit_edge ]
  %type.i45 = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i44, i32 0, i32 6
  %36 = ptrtoint ptr %type.i45 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %type.i45, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %37)
  %cmp.i46 = icmp eq i32 %37, 3
  br i1 %cmp.i46, label %if.then4, label %if.end6

if.then4:                                         ; preds = %dsa_is_user_port.exit
  %38 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %chip, align 8
  %ops.i.i47 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %39, i32 0, i32 22
  %40 = ptrtoint ptr %ops.i.i47 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ops.i.i47, align 4
  %port_set_frame_mode.i.i48 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %41, i32 0, i32 21
  %42 = ptrtoint ptr %port_set_frame_mode.i.i48 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %port_set_frame_mode.i.i48, align 4
  %tobool.not.i.i49 = icmp eq ptr %43, null
  br i1 %tobool.not.i.i49, label %if.then4.return_crit_edge, label %if.end.i.i52

if.then4.return_crit_edge:                        ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i52:                                     ; preds = %if.then4
  %call.i.i50 = tail call i32 @mv88e6xxx_port_set_egress_mode(ptr noundef %chip, i32 noundef %port, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i50)
  %tobool1.not.i.i51 = icmp eq i32 %call.i.i50, 0
  br i1 %tobool1.not.i.i51, label %if.end3.i.i57, label %if.end.i.i52.return_crit_edge

if.end.i.i52.return_crit_edge:                    ; preds = %if.end.i.i52
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3.i.i57:                                    ; preds = %if.end.i.i52
  %44 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %chip, align 8
  %ops5.i.i53 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %45, i32 0, i32 22
  %46 = ptrtoint ptr %ops5.i.i53 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ops5.i.i53, align 4
  %port_set_frame_mode6.i.i54 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %47, i32 0, i32 21
  %48 = ptrtoint ptr %port_set_frame_mode6.i.i54 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %port_set_frame_mode6.i.i54, align 4
  %call7.i.i55 = tail call i32 %49(ptr noundef %chip, i32 noundef %port, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i55)
  %tobool8.not.i.i56 = icmp eq i32 %call7.i.i55, 0
  br i1 %tobool8.not.i.i56, label %if.end10.i.i61, label %if.end3.i.i57.return_crit_edge

if.end3.i.i57.return_crit_edge:                   ; preds = %if.end3.i.i57
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10.i.i61:                                   ; preds = %if.end3.i.i57
  %50 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %chip, align 8
  %ops12.i.i58 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %51, i32 0, i32 22
  %52 = ptrtoint ptr %ops12.i.i58 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %ops12.i.i58, align 4
  %port_set_ether_type.i.i59 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %53, i32 0, i32 24
  %54 = ptrtoint ptr %port_set_ether_type.i.i59 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %port_set_ether_type.i.i59, align 4
  %tobool13.not.i.i60 = icmp eq ptr %55, null
  br i1 %tobool13.not.i.i60, label %if.end10.i.i61.return_crit_edge, label %if.then14.i.i63

if.end10.i.i61.return_crit_edge:                  ; preds = %if.end10.i.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then14.i.i63:                                  ; preds = %if.end10.i.i61
  call void @__sanitizer_cov_trace_pc() #18
  %call18.i.i62 = tail call i32 %55(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext -28416) #16
  br label %return

if.end6:                                          ; preds = %dsa_is_user_port.exit
  %tag_protocol = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 1
  %56 = ptrtoint ptr %tag_protocol to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %tag_protocol, align 4
  %58 = zext i32 %57 to i64
  call void @__sanitizer_cov_trace_switch(i64 %58, ptr @__sancov_gen_cov_switch_values.129)
  switch i32 %57, label %if.end6.return_crit_edge [
    i32 3, label %if.then7
    i32 4, label %if.then12
  ]

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then7:                                         ; preds = %if.end6
  %59 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %chip, align 8
  %ops.i.i65 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %60, i32 0, i32 22
  %61 = ptrtoint ptr %ops.i.i65 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ops.i.i65, align 4
  %port_set_frame_mode.i.i66 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %62, i32 0, i32 21
  %63 = ptrtoint ptr %port_set_frame_mode.i.i66 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %port_set_frame_mode.i.i66, align 4
  %tobool.not.i.i67 = icmp eq ptr %64, null
  br i1 %tobool.not.i.i67, label %if.then7.return_crit_edge, label %if.end.i.i70

if.then7.return_crit_edge:                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i70:                                     ; preds = %if.then7
  %call.i.i68 = tail call i32 @mv88e6xxx_port_set_egress_mode(ptr noundef %chip, i32 noundef %port, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i68)
  %tobool1.not.i.i69 = icmp eq i32 %call.i.i68, 0
  br i1 %tobool1.not.i.i69, label %if.end3.i.i75, label %if.end.i.i70.return_crit_edge

if.end.i.i70.return_crit_edge:                    ; preds = %if.end.i.i70
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3.i.i75:                                    ; preds = %if.end.i.i70
  %65 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %chip, align 8
  %ops5.i.i71 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %66, i32 0, i32 22
  %67 = ptrtoint ptr %ops5.i.i71 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %ops5.i.i71, align 4
  %port_set_frame_mode6.i.i72 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %68, i32 0, i32 21
  %69 = ptrtoint ptr %port_set_frame_mode6.i.i72 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %port_set_frame_mode6.i.i72, align 4
  %call7.i.i73 = tail call i32 %70(ptr noundef %chip, i32 noundef %port, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i73)
  %tobool8.not.i.i74 = icmp eq i32 %call7.i.i73, 0
  br i1 %tobool8.not.i.i74, label %if.end10.i.i79, label %if.end3.i.i75.return_crit_edge

if.end3.i.i75.return_crit_edge:                   ; preds = %if.end3.i.i75
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10.i.i79:                                   ; preds = %if.end3.i.i75
  %71 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %chip, align 8
  %ops12.i.i76 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %72, i32 0, i32 22
  %73 = ptrtoint ptr %ops12.i.i76 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %ops12.i.i76, align 4
  %port_set_ether_type.i.i77 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %74, i32 0, i32 24
  %75 = ptrtoint ptr %port_set_ether_type.i.i77 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %port_set_ether_type.i.i77, align 4
  %tobool13.not.i.i78 = icmp eq ptr %76, null
  br i1 %tobool13.not.i.i78, label %if.end10.i.i79.return_crit_edge, label %if.then14.i.i81

if.end10.i.i79.return_crit_edge:                  ; preds = %if.end10.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then14.i.i81:                                  ; preds = %if.end10.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  %call18.i.i80 = tail call i32 %76(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext -28416) #16
  br label %return

if.then12:                                        ; preds = %if.end6
  %77 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %chip, align 8
  %ops.i.i84 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %78, i32 0, i32 22
  %79 = ptrtoint ptr %ops.i.i84 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ops.i.i84, align 4
  %port_set_frame_mode.i.i85 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %80, i32 0, i32 21
  %81 = ptrtoint ptr %port_set_frame_mode.i.i85 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %port_set_frame_mode.i.i85, align 4
  %tobool.not.i.i86 = icmp eq ptr %82, null
  br i1 %tobool.not.i.i86, label %if.then12.return_crit_edge, label %if.end.i.i89

if.then12.return_crit_edge:                       ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i89:                                     ; preds = %if.then12
  %call.i.i87 = tail call i32 @mv88e6xxx_port_set_egress_mode(ptr noundef %chip, i32 noundef %port, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i87)
  %tobool1.not.i.i88 = icmp eq i32 %call.i.i87, 0
  br i1 %tobool1.not.i.i88, label %if.end3.i.i94, label %if.end.i.i89.return_crit_edge

if.end.i.i89.return_crit_edge:                    ; preds = %if.end.i.i89
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3.i.i94:                                    ; preds = %if.end.i.i89
  %83 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %chip, align 8
  %ops5.i.i90 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %84, i32 0, i32 22
  %85 = ptrtoint ptr %ops5.i.i90 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %ops5.i.i90, align 4
  %port_set_frame_mode6.i.i91 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %86, i32 0, i32 21
  %87 = ptrtoint ptr %port_set_frame_mode6.i.i91 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %port_set_frame_mode6.i.i91, align 4
  %call7.i.i92 = tail call i32 %88(ptr noundef %chip, i32 noundef %port, i32 noundef 3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i92)
  %tobool8.not.i.i93 = icmp eq i32 %call7.i.i92, 0
  br i1 %tobool8.not.i.i93, label %if.end10.i.i98, label %if.end3.i.i94.return_crit_edge

if.end3.i.i94.return_crit_edge:                   ; preds = %if.end3.i.i94
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10.i.i98:                                   ; preds = %if.end3.i.i94
  %89 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %chip, align 8
  %ops12.i.i95 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %90, i32 0, i32 22
  %91 = ptrtoint ptr %ops12.i.i95 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %ops12.i.i95, align 4
  %port_set_ether_type.i.i96 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %92, i32 0, i32 24
  %93 = ptrtoint ptr %port_set_ether_type.i.i96 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %port_set_ether_type.i.i96, align 4
  %tobool13.not.i.i97 = icmp eq ptr %94, null
  br i1 %tobool13.not.i.i97, label %if.end10.i.i98.return_crit_edge, label %if.then14.i.i100

if.end10.i.i98.return_crit_edge:                  ; preds = %if.end10.i.i98
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then14.i.i100:                                 ; preds = %if.end10.i.i98
  call void @__sanitizer_cov_trace_pc() #18
  %call18.i.i99 = tail call i32 %94(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext -9510) #16
  br label %return

return:                                           ; preds = %if.then14.i.i100, %if.end10.i.i98.return_crit_edge, %if.end3.i.i94.return_crit_edge, %if.end.i.i89.return_crit_edge, %if.then12.return_crit_edge, %if.then14.i.i81, %if.end10.i.i79.return_crit_edge, %if.end3.i.i75.return_crit_edge, %if.end.i.i70.return_crit_edge, %if.then7.return_crit_edge, %if.end6.return_crit_edge, %if.then14.i.i63, %if.end10.i.i61.return_crit_edge, %if.end3.i.i57.return_crit_edge, %if.end.i.i52.return_crit_edge, %if.then4.return_crit_edge, %if.then14.i.i, %if.end10.i.i.return_crit_edge, %if.end3.i.i.return_crit_edge, %if.end.i.i.return_crit_edge, %if.then.return_crit_edge
  %retval.0 = phi i32 [ -22, %if.end6.return_crit_edge ], [ %call18.i.i, %if.then14.i.i ], [ -95, %if.then.return_crit_edge ], [ %call.i.i, %if.end.i.i.return_crit_edge ], [ %call7.i.i, %if.end3.i.i.return_crit_edge ], [ 0, %if.end10.i.i.return_crit_edge ], [ %call18.i.i62, %if.then14.i.i63 ], [ -95, %if.then4.return_crit_edge ], [ %call.i.i50, %if.end.i.i52.return_crit_edge ], [ %call7.i.i55, %if.end3.i.i57.return_crit_edge ], [ 0, %if.end10.i.i61.return_crit_edge ], [ %call18.i.i80, %if.then14.i.i81 ], [ -95, %if.then7.return_crit_edge ], [ %call.i.i68, %if.end.i.i70.return_crit_edge ], [ %call7.i.i73, %if.end3.i.i75.return_crit_edge ], [ 0, %if.end10.i.i79.return_crit_edge ], [ %call18.i.i99, %if.then14.i.i100 ], [ -95, %if.then12.return_crit_edge ], [ %call.i.i87, %if.end.i.i89.return_crit_edge ], [ %call7.i.i92, %if.end3.i.i94.return_crit_edge ], [ 0, %if.end10.i.i98.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_egress_mode(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_phy_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_pvt_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %pvt.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %pvt.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %pvt.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.i.not = icmp eq i8 %3, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @mv88e6xxx_g2_misc_4_bit_port(ptr noundef %chip) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end.for.cond4.preheader_crit_edge, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.for.cond4.preheader_crit_edge:             ; preds = %if.end
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.15.for.cond4.preheader_crit_edge, %if.end.for.cond4.preheader_crit_edge
  %dev.027 = phi i32 [ %inc12, %for.cond4.15.for.cond4.preheader_crit_edge ], [ 0, %if.end.for.cond4.preheader_crit_edge ]
  %call7 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %for.cond4, label %for.cond4.preheader.cleanup_crit_edge

for.cond4.preheader.cleanup_crit_edge:            ; preds = %for.cond4.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4:                                        ; preds = %for.cond4.preheader
  %call7.1 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.1)
  %tobool8.not.1 = icmp eq i32 %call7.1, 0
  br i1 %tobool8.not.1, label %for.cond4.1, label %for.cond4.cleanup_crit_edge

for.cond4.cleanup_crit_edge:                      ; preds = %for.cond4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.1:                                      ; preds = %for.cond4
  %call7.2 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.2)
  %tobool8.not.2 = icmp eq i32 %call7.2, 0
  br i1 %tobool8.not.2, label %for.cond4.2, label %for.cond4.1.cleanup_crit_edge

for.cond4.1.cleanup_crit_edge:                    ; preds = %for.cond4.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.2:                                      ; preds = %for.cond4.1
  %call7.3 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.3)
  %tobool8.not.3 = icmp eq i32 %call7.3, 0
  br i1 %tobool8.not.3, label %for.cond4.3, label %for.cond4.2.cleanup_crit_edge

for.cond4.2.cleanup_crit_edge:                    ; preds = %for.cond4.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.3:                                      ; preds = %for.cond4.2
  %call7.4 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.4)
  %tobool8.not.4 = icmp eq i32 %call7.4, 0
  br i1 %tobool8.not.4, label %for.cond4.4, label %for.cond4.3.cleanup_crit_edge

for.cond4.3.cleanup_crit_edge:                    ; preds = %for.cond4.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.4:                                      ; preds = %for.cond4.3
  %call7.5 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.5)
  %tobool8.not.5 = icmp eq i32 %call7.5, 0
  br i1 %tobool8.not.5, label %for.cond4.5, label %for.cond4.4.cleanup_crit_edge

for.cond4.4.cleanup_crit_edge:                    ; preds = %for.cond4.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.5:                                      ; preds = %for.cond4.4
  %call7.6 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.6)
  %tobool8.not.6 = icmp eq i32 %call7.6, 0
  br i1 %tobool8.not.6, label %for.cond4.6, label %for.cond4.5.cleanup_crit_edge

for.cond4.5.cleanup_crit_edge:                    ; preds = %for.cond4.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.6:                                      ; preds = %for.cond4.5
  %call7.7 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 7)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.7)
  %tobool8.not.7 = icmp eq i32 %call7.7, 0
  br i1 %tobool8.not.7, label %for.cond4.7, label %for.cond4.6.cleanup_crit_edge

for.cond4.6.cleanup_crit_edge:                    ; preds = %for.cond4.6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.7:                                      ; preds = %for.cond4.6
  %call7.8 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.8)
  %tobool8.not.8 = icmp eq i32 %call7.8, 0
  br i1 %tobool8.not.8, label %for.cond4.8, label %for.cond4.7.cleanup_crit_edge

for.cond4.7.cleanup_crit_edge:                    ; preds = %for.cond4.7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.8:                                      ; preds = %for.cond4.7
  %call7.9 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 9)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.9)
  %tobool8.not.9 = icmp eq i32 %call7.9, 0
  br i1 %tobool8.not.9, label %for.cond4.9, label %for.cond4.8.cleanup_crit_edge

for.cond4.8.cleanup_crit_edge:                    ; preds = %for.cond4.8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.9:                                      ; preds = %for.cond4.8
  %call7.10 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 10)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.10)
  %tobool8.not.10 = icmp eq i32 %call7.10, 0
  br i1 %tobool8.not.10, label %for.cond4.10, label %for.cond4.9.cleanup_crit_edge

for.cond4.9.cleanup_crit_edge:                    ; preds = %for.cond4.9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.10:                                     ; preds = %for.cond4.9
  %call7.11 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 11)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.11)
  %tobool8.not.11 = icmp eq i32 %call7.11, 0
  br i1 %tobool8.not.11, label %for.cond4.11, label %for.cond4.10.cleanup_crit_edge

for.cond4.10.cleanup_crit_edge:                   ; preds = %for.cond4.10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.11:                                     ; preds = %for.cond4.10
  %call7.12 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 12)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.12)
  %tobool8.not.12 = icmp eq i32 %call7.12, 0
  br i1 %tobool8.not.12, label %for.cond4.12, label %for.cond4.11.cleanup_crit_edge

for.cond4.11.cleanup_crit_edge:                   ; preds = %for.cond4.11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.12:                                     ; preds = %for.cond4.11
  %call7.13 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 13)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.13)
  %tobool8.not.13 = icmp eq i32 %call7.13, 0
  br i1 %tobool8.not.13, label %for.cond4.13, label %for.cond4.12.cleanup_crit_edge

for.cond4.12.cleanup_crit_edge:                   ; preds = %for.cond4.12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.13:                                     ; preds = %for.cond4.12
  %call7.14 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 14)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.14)
  %tobool8.not.14 = icmp eq i32 %call7.14, 0
  br i1 %tobool8.not.14, label %for.cond4.14, label %for.cond4.13.cleanup_crit_edge

for.cond4.13.cleanup_crit_edge:                   ; preds = %for.cond4.13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.14:                                     ; preds = %for.cond4.13
  %call7.15 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev.027, i32 noundef 15)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.15)
  %tobool8.not.15 = icmp eq i32 %call7.15, 0
  br i1 %tobool8.not.15, label %for.cond4.15, label %for.cond4.14.cleanup_crit_edge

for.cond4.14.cleanup_crit_edge:                   ; preds = %for.cond4.14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond4.15:                                     ; preds = %for.cond4.14
  %inc12 = add nuw nsw i32 %dev.027, 1
  %exitcond.not = icmp eq i32 %inc12, 32
  br i1 %exitcond.not, label %for.cond4.15.cleanup_crit_edge, label %for.cond4.15.for.cond4.preheader_crit_edge

for.cond4.15.for.cond4.preheader_crit_edge:       ; preds = %for.cond4.15
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond4.preheader

for.cond4.15.cleanup_crit_edge:                   ; preds = %for.cond4.15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.cond4.15.cleanup_crit_edge, %for.cond4.14.cleanup_crit_edge, %for.cond4.13.cleanup_crit_edge, %for.cond4.12.cleanup_crit_edge, %for.cond4.11.cleanup_crit_edge, %for.cond4.10.cleanup_crit_edge, %for.cond4.9.cleanup_crit_edge, %for.cond4.8.cleanup_crit_edge, %for.cond4.7.cleanup_crit_edge, %for.cond4.6.cleanup_crit_edge, %for.cond4.5.cleanup_crit_edge, %for.cond4.4.cleanup_crit_edge, %for.cond4.3.cleanup_crit_edge, %for.cond4.2.cleanup_crit_edge, %for.cond4.1.cleanup_crit_edge, %for.cond4.cleanup_crit_edge, %for.cond4.preheader.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call1, %if.end.cleanup_crit_edge ], [ 0, %for.cond4.15.cleanup_crit_edge ], [ %call7.15, %for.cond4.14.cleanup_crit_edge ], [ %call7.14, %for.cond4.13.cleanup_crit_edge ], [ %call7.13, %for.cond4.12.cleanup_crit_edge ], [ %call7.12, %for.cond4.11.cleanup_crit_edge ], [ %call7.11, %for.cond4.10.cleanup_crit_edge ], [ %call7.10, %for.cond4.9.cleanup_crit_edge ], [ %call7.9, %for.cond4.8.cleanup_crit_edge ], [ %call7.8, %for.cond4.7.cleanup_crit_edge ], [ %call7.7, %for.cond4.6.cleanup_crit_edge ], [ %call7.6, %for.cond4.5.cleanup_crit_edge ], [ %call7.5, %for.cond4.4.cleanup_crit_edge ], [ %call7.4, %for.cond4.3.cleanup_crit_edge ], [ %call7.3, %for.cond4.2.cleanup_crit_edge ], [ %call7.2, %for.cond4.1.cleanup_crit_edge ], [ %call7.1, %for.cond4.cleanup_crit_edge ], [ %call7, %for.cond4.preheader.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_atu_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @mv88e6xxx_g1_atu_flush(ptr noundef %chip, i16 noundef zeroext 0, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %port_setup_message_port = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %3, i32 0, i32 30
  %4 = ptrtoint ptr %port_setup_message_port to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %port_setup_message_port, align 4
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %if.end.if.end7_crit_edge, label %if.then2

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then2:                                         ; preds = %if.end
  %call3 = tail call i32 @mv88e6xxx_g1_atu_set_learn2all(ptr noundef %chip, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then2.if.end7_crit_edge, label %if.then2.cleanup_crit_edge

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then2.if.end7_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end7:                                          ; preds = %if.then2.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %call8 = tail call i32 @mv88e6xxx_g1_atu_set_age_time(ptr noundef %chip, i32 noundef 300000) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end7 ], [ %call, %entry.cleanup_crit_edge ], [ %call3, %if.then2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_broadcast_setup(ptr noundef %chip, i16 noundef zeroext %vid) unnamed_addr #0 align 64 {
entry:
  %broadcast.i = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %num_ports.i38 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %num_ports.i38 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_ports.i38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp39.not = icmp eq i32 %3, 0
  br i1 %cmp39.not, label %entry.cleanup13_crit_edge, label %for.body.lr.ph

entry.cleanup13_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup13

for.body.lr.ph:                                   ; preds = %entry
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %port.040 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ds, align 8
  %dst1.i = getelementptr inbounds %struct.dsa_switch, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %dst1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst1.i, align 4
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn20.i = load ptr, ptr %ports.i, align 4
  %cmp.not21.i = icmp eq ptr %.pn20.i, %ports.i
  br i1 %cmp.not21.i, label %for.body.dsa_is_unused_port.exit_crit_edge, label %for.body.for.body.i_crit_edge

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.dsa_is_unused_port.exit_crit_edge:       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_unused_port.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %.pn22.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn20.i, %for.body.for.body.i_crit_edge ]
  %ds3.i = getelementptr i8, ptr %.pn22.i, i32 -432
  %9 = ptrtoint ptr %ds3.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ds3.i, align 4
  %cmp4.i = icmp eq ptr %10, %5
  br i1 %cmp4.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %index.i = getelementptr i8, ptr %.pn22.i, i32 -428
  %11 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %port.040)
  %cmp5.i = icmp eq i32 %12, %port.040
  br i1 %cmp5.i, label %cleanup.split.loop.exit18.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %13 = ptrtoint ptr %.pn22.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn.i = load ptr, ptr %.pn22.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp.not.i, label %for.inc.i.for.body.i.i.preheader_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.for.body.i.i.preheader_crit_edge:       ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.preheader

cleanup.split.loop.exit18.i:                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i = getelementptr i8, ptr %.pn22.i, i32 -448
  br label %for.body.i.i.preheader

for.body.i.i.preheader:                           ; preds = %cleanup.split.loop.exit18.i, %for.inc.i.for.body.i.i.preheader_crit_edge
  %retval.0.i = phi ptr [ %dp.0.le.i, %cleanup.split.loop.exit18.i ], [ null, %for.inc.i.for.body.i.i.preheader_crit_edge ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.i.i.preheader
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i, %for.body.i.i.preheader ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %14 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %15, %5
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %16 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %port.040)
  %cmp5.i.i = icmp eq i32 %17, %port.040
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %18 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_is_unused_port.exit_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_is_unused_port.exit_crit_edge:    ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_is_unused_port.exit

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_is_unused_port.exit

dsa_is_unused_port.exit:                          ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_is_unused_port.exit_crit_edge, %for.body.dsa_is_unused_port.exit_crit_edge
  %retval.0.i26 = phi ptr [ %retval.0.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.body.dsa_is_unused_port.exit_crit_edge ], [ %retval.0.i, %for.inc.i.i.dsa_is_unused_port.exit_crit_edge ]
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %for.body.dsa_is_unused_port.exit_crit_edge ], [ null, %for.inc.i.i.dsa_is_unused_port.exit_crit_edge ]
  %type.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 6
  %19 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i = icmp eq i32 %20, 0
  br i1 %cmp.i, label %dsa_is_unused_port.exit.for.inc_crit_edge, label %if.end

dsa_is_unused_port.exit.for.inc_crit_edge:        ; preds = %dsa_is_unused_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %dsa_is_unused_port.exit
  %bridge.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i26, i32 0, i32 14
  %21 = ptrtoint ptr %bridge.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bridge.i, align 4
  %tobool.not.i = icmp eq ptr %22, null
  br i1 %tobool.not.i, label %if.end.if.end7_crit_edge, label %if.end.i

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end.i:                                         ; preds = %if.end
  %lag_dev.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i26, i32 0, i32 18
  %23 = ptrtoint ptr %lag_dev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %lag_dev.i, align 4
  %tobool1.not.i = icmp eq ptr %24, null
  br i1 %tobool1.not.i, label %if.else.i, label %if.end.i.land.lhs.true_crit_edge

if.end.i.land.lhs.true_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

if.else.i:                                        ; preds = %if.end.i
  %hsr_dev.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i26, i32 0, i32 19
  %25 = ptrtoint ptr %hsr_dev.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %hsr_dev.i, align 4
  %tobool4.not.i = icmp eq ptr %26, null
  br i1 %tobool4.not.i, label %dsa_port_to_bridge_port.exit, label %if.else.i.land.lhs.true_crit_edge

if.else.i.land.lhs.true_crit_edge:                ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

dsa_port_to_bridge_port.exit:                     ; preds = %if.else.i
  %27 = ptrtoint ptr %retval.0.i26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %retval.0.i26, align 4
  %tobool.not = icmp eq ptr %28, null
  br i1 %tobool.not, label %dsa_port_to_bridge_port.exit.if.end7_crit_edge, label %dsa_port_to_bridge_port.exit.land.lhs.true_crit_edge

dsa_port_to_bridge_port.exit.land.lhs.true_crit_edge: ; preds = %dsa_port_to_bridge_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

dsa_port_to_bridge_port.exit.if.end7_crit_edge:   ; preds = %dsa_port_to_bridge_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

land.lhs.true:                                    ; preds = %dsa_port_to_bridge_port.exit.land.lhs.true_crit_edge, %if.else.i.land.lhs.true_crit_edge, %if.end.i.land.lhs.true_crit_edge
  %retval.0.i2429 = phi ptr [ %28, %dsa_port_to_bridge_port.exit.land.lhs.true_crit_edge ], [ %26, %if.else.i.land.lhs.true_crit_edge ], [ %24, %if.end.i.land.lhs.true_crit_edge ]
  %call5 = tail call zeroext i1 @br_port_flag_is_set(ptr noundef nonnull %retval.0.i2429, i32 noundef 16384) #16
  br i1 %call5, label %land.lhs.true.if.end7_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %dsa_port_to_bridge_port.exit.if.end7_crit_edge, %if.end.if.end7_crit_edge
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %broadcast.i) #16
  %29 = call ptr @memset(ptr %broadcast.i, i32 255, i32 6)
  %call.i = call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %chip, i32 noundef %port.040, ptr noundef nonnull %broadcast.i, i16 noundef zeroext %vid, i8 noundef zeroext 7) #16
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %broadcast.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool9.not = icmp eq i32 %call.i, 0
  br i1 %tobool9.not, label %if.end7.for.inc_crit_edge, label %if.end7.cleanup13_crit_edge

if.end7.cleanup13_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup13

if.end7.for.inc_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %if.end7.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge, %dsa_is_unused_port.exit.for.inc_crit_edge
  %inc = add nuw i32 %port.040, 1
  %30 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %chip, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %31, i32 0, i32 5
  %32 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_ports.i, align 4
  %cmp = icmp ult i32 %inc, %33
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup13_crit_edge

for.inc.cleanup13_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup13

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup13:                                        ; preds = %for.inc.cleanup13_crit_edge, %if.end7.cleanup13_crit_edge, %entry.cleanup13_crit_edge
  %retval.2 = phi i32 [ 0, %entry.cleanup13_crit_edge ], [ %call.i, %if.end7.cleanup13_crit_edge ], [ 0, %for.inc.cleanup13_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_devmap_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds1, align 8
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %chip, align 8
  %global2_addr = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %global2_addr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %global2_addr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %dst1.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %num_ports = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 18
  br label %for.body

for.cond:                                         ; preds = %dsa_routing_port.exit
  %inc = add nuw nsw i32 %target.047, 1
  %exitcond.not = icmp eq i32 %inc, 32
  br i1 %exitcond.not, label %for.end, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader
  %target.047 = phi i32 [ 0, %for.cond.preheader ], [ %inc, %for.cond.for.body_crit_edge ]
  %6 = ptrtoint ptr %dst1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dst1.i, align 4
  %rtable.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %7, i32 0, i32 10
  %8 = ptrtoint ptr %rtable.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn22.i = load ptr, ptr %rtable.i, align 4
  %cmp.not23.i = icmp eq ptr %.pn22.i, %rtable.i
  br i1 %cmp.not23.i, label %for.body.dsa_routing_port.exit_crit_edge, label %for.body.for.body.i_crit_edge

for.body.for.body.i_crit_edge:                    ; preds = %for.body
  br label %for.body.i

for.body.dsa_routing_port.exit_crit_edge:         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_routing_port.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.for.body.i_crit_edge
  %.pn24.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn22.i, %for.body.for.body.i_crit_edge ]
  %dl.0.i = getelementptr i8, ptr %.pn24.i, i32 -8
  %9 = ptrtoint ptr %dl.0.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dl.0.i, align 4
  %ds3.i = getelementptr inbounds %struct.dsa_port, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %ds3.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ds3.i, align 4
  %cmp4.i = icmp eq ptr %12, %1
  br i1 %cmp4.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %link_dp.i = getelementptr i8, ptr %.pn24.i, i32 -4
  %13 = ptrtoint ptr %link_dp.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %link_dp.i, align 4
  %ds5.i = getelementptr inbounds %struct.dsa_port, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %ds5.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ds5.i, align 4
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %16, i32 0, i32 2
  %17 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %target.047)
  %cmp6.i = icmp eq i32 %18, %target.047
  br i1 %cmp6.i, label %if.then.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %index8.i = getelementptr inbounds %struct.dsa_port, ptr %10, i32 0, i32 5
  br label %dsa_routing_port.exit

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %19 = ptrtoint ptr %.pn24.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn24.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %rtable.i
  br i1 %cmp.not.i, label %for.inc.i.dsa_routing_port.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.dsa_routing_port.exit_crit_edge:        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_routing_port.exit

dsa_routing_port.exit:                            ; preds = %for.inc.i.dsa_routing_port.exit_crit_edge, %if.then.i, %for.body.dsa_routing_port.exit_crit_edge
  %retval.0.in.i = phi ptr [ %index8.i, %if.then.i ], [ %num_ports, %for.body.dsa_routing_port.exit_crit_edge ], [ %num_ports, %for.inc.i.dsa_routing_port.exit_crit_edge ]
  %20 = ptrtoint ptr %retval.0.in.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %retval.0.i = load i32, ptr %retval.0.in.i, align 4
  %21 = ptrtoint ptr %num_ports to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %num_ports, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %22)
  %cmp2 = icmp eq i32 %retval.0.i, %22
  %spec.store.select = select i1 %cmp2, i32 31, i32 %retval.0.i
  %call5 = tail call i32 @mv88e6xxx_g2_device_mapping_write(ptr noundef %chip, i32 noundef %target.047, i32 noundef %spec.store.select) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %for.cond, label %dsa_routing_port.exit.cleanup_crit_edge

dsa_routing_port.exit.cleanup_crit_edge:          ; preds = %dsa_routing_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.end:                                          ; preds = %for.cond
  %23 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %24, i32 0, i32 22
  %25 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ops, align 4
  %set_cascade_port = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %26, i32 0, i32 41
  %27 = ptrtoint ptr %set_cascade_port to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %set_cascade_port, align 4
  %tobool10.not = icmp eq ptr %28, null
  br i1 %tobool10.not, label %for.end.if.end19_crit_edge, label %if.then11

for.end.if.end19_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then11:                                        ; preds = %for.end
  %call15 = tail call i32 %28(ptr noundef %chip, i32 noundef 15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.then11.if.end19_crit_edge, label %if.then11.cleanup_crit_edge

if.then11.cleanup_crit_edge:                      ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then11.if.end19_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.end19:                                         ; preds = %if.then11.if.end19_crit_edge, %for.end.if.end19_crit_edge
  %29 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ds1, align 8
  %index = getelementptr inbounds %struct.dsa_switch, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %index, align 4
  %call21 = tail call i32 @mv88e6xxx_g1_set_device_number(ptr noundef %chip, i32 noundef %32) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then11.cleanup_crit_edge, %dsa_routing_port.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call15, %if.then11.cleanup_crit_edge ], [ %call21, %if.end19 ], [ %call5, %dsa_routing_port.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_pri_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %ieee_pri_map = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ieee_pri_map to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ieee_pri_map, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call i32 %5(ptr noundef %chip) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.then.if.end6_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.end6:                                          ; preds = %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  %6 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %chip, align 8
  %ops8 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %7, i32 0, i32 22
  %8 = ptrtoint ptr %ops8 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops8, align 4
  %ip_pri_map = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %ip_pri_map to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ip_pri_map, align 4
  %tobool9.not = icmp eq ptr %11, null
  br i1 %tobool9.not, label %if.end6.if.end18_crit_edge, label %if.then10

if.end6.if.end18_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.then10:                                        ; preds = %if.end6
  %call14 = tail call i32 %11(ptr noundef %chip) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.then10.if.end18_crit_edge, label %if.then10.cleanup_crit_edge

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then10.if.end18_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.end18:                                         ; preds = %if.then10.if.end18_crit_edge, %if.end6.if.end18_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %if.then10.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end18 ], [ %call, %if.then.cleanup_crit_edge ], [ %call14, %if.then10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_ptp_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_hwtstamp_setup(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_stats_setup(ptr noundef %chip) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %stats_set_histogram = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %3, i32 0, i32 35
  %4 = ptrtoint ptr %stats_set_histogram to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %stats_set_histogram, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call i32 %5(ptr noundef %chip) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.then.if.end6_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.end6:                                          ; preds = %if.then.if.end6_crit_edge, %entry.if.end6_crit_edge
  %call7 = tail call i32 @mv88e6xxx_g1_stats_clear(ptr noundef %chip) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end6 ], [ %call, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_setup_devlink_resources(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_setup_devlink_params(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_setup_devlink_regions_global(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_teardown_devlink_params(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dsa_devlink_resources_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_vtu_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_port_setup_mac(ptr noundef %chip, i32 noundef %port, i32 noundef %link, i32 noundef %speed, i32 noundef %duplex, i32 noundef %pause) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %port_set_link = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %3, i32 0, i32 14
  %4 = ptrtoint ptr %port_set_link to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %port_set_link, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call i32 %5(ptr noundef %chip, i32 noundef %port, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %if.end6, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %6 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %chip, align 8
  %ops8 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %7, i32 0, i32 22
  %8 = ptrtoint ptr %ops8 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops8, align 4
  %port_set_speed_duplex = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %9, i32 0, i32 17
  %10 = ptrtoint ptr %port_set_speed_duplex to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %port_set_speed_duplex, align 4
  %tobool9.not = icmp eq ptr %11, null
  br i1 %tobool9.not, label %if.end6.if.end18_crit_edge, label %if.then10

if.end6.if.end18_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.then10:                                        ; preds = %if.end6
  %call14 = tail call i32 %11(ptr noundef %chip, i32 noundef %port, i32 noundef %speed, i32 noundef %duplex) #16
  %12 = zext i32 %call14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.130)
  switch i32 %call14, label %if.then10.restore_link_crit_edge [
    i32 0, label %if.then10.if.end18_crit_edge
    i32 -95, label %if.then10.if.end18_crit_edge1
  ]

if.then10.if.end18_crit_edge1:                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.then10.if.end18_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end18

if.then10.restore_link_crit_edge:                 ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %restore_link

if.end18:                                         ; preds = %if.then10.if.end18_crit_edge, %if.then10.if.end18_crit_edge1, %if.end6.if.end18_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %speed)
  %cmp19 = icmp eq i32 %speed, 2147483647
  br i1 %cmp19, label %land.lhs.true20, label %if.end18.if.end29_crit_edge

if.end18.if.end29_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

land.lhs.true20:                                  ; preds = %if.end18
  %13 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %chip, align 8
  %ops22 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %14, i32 0, i32 22
  %15 = ptrtoint ptr %ops22 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops22, align 4
  %port_max_speed_mode = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %16, i32 0, i32 18
  %17 = ptrtoint ptr %port_max_speed_mode to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %port_max_speed_mode, align 4
  %tobool23.not = icmp eq ptr %18, null
  br i1 %tobool23.not, label %land.lhs.true20.if.end29_crit_edge, label %if.then24

land.lhs.true20.if.end29_crit_edge:               ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then24:                                        ; preds = %land.lhs.true20
  call void @__sanitizer_cov_trace_pc() #18
  %call28 = tail call i32 %18(i32 noundef %port) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then24, %land.lhs.true20.if.end29_crit_edge, %if.end18.if.end29_crit_edge
  %mode.addr.0 = phi i32 [ %call28, %if.then24 ], [ 0, %land.lhs.true20.if.end29_crit_edge ], [ 0, %if.end18.if.end29_crit_edge ]
  %19 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %chip, align 8
  %ops31 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %20, i32 0, i32 22
  %21 = ptrtoint ptr %ops31 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ops31, align 4
  %port_set_pause = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %22, i32 0, i32 16
  %23 = ptrtoint ptr %port_set_pause to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %port_set_pause, align 4
  %tobool32.not = icmp eq ptr %24, null
  br i1 %tobool32.not, label %if.end29.if.end41_crit_edge, label %if.then33

if.end29.if.end41_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end41

if.then33:                                        ; preds = %if.end29
  %call37 = tail call i32 %24(ptr noundef %chip, i32 noundef %port, i32 noundef %pause) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.then33.if.end41_crit_edge, label %if.then33.restore_link_crit_edge

if.then33.restore_link_crit_edge:                 ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %restore_link

if.then33.if.end41_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end41

if.end41:                                         ; preds = %if.then33.if.end41_crit_edge, %if.end29.if.end41_crit_edge
  %25 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %26, i32 0, i32 22
  %27 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i, align 4
  %port_set_rgmii_delay.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %28, i32 0, i32 13
  %29 = ptrtoint ptr %port_set_rgmii_delay.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %port_set_rgmii_delay.i, align 4
  %tobool.not.i = icmp eq ptr %30, null
  br i1 %tobool.not.i, label %if.end41.if.end6.i_crit_edge, label %if.then.i

if.end41.if.end6.i_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i:                                        ; preds = %if.end41
  %call.i = tail call i32 %30(ptr noundef %chip, i32 noundef %port, i32 noundef %mode.addr.0) #16
  %31 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %call.i, label %if.then.i.restore_link_crit_edge [
    i32 0, label %if.then.i.if.end6.i_crit_edge
    i32 -95, label %if.then.i.if.end6.i_crit_edge2
  ]

if.then.i.if.end6.i_crit_edge2:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i.if.end6.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then.i.restore_link_crit_edge:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %restore_link

if.end6.i:                                        ; preds = %if.then.i.if.end6.i_crit_edge, %if.then.i.if.end6.i_crit_edge2, %if.end41.if.end6.i_crit_edge
  %32 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %chip, align 8
  %ops8.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %33, i32 0, i32 22
  %34 = ptrtoint ptr %ops8.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %ops8.i, align 4
  %port_set_cmode.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %35, i32 0, i32 31
  %36 = ptrtoint ptr %port_set_cmode.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %port_set_cmode.i, align 4
  %tobool9.not.i = icmp eq ptr %37, null
  br i1 %tobool9.not.i, label %if.end6.i.if.end20.i_crit_edge, label %if.then10.i

if.end6.i.if.end20.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i

if.then10.i:                                      ; preds = %if.end6.i
  %call14.i = tail call i32 %37(ptr noundef %chip, i32 noundef %port, i32 noundef %mode.addr.0) #16
  %38 = zext i32 %call14.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.132)
  switch i32 %call14.i, label %if.then10.i.restore_link_crit_edge [
    i32 0, label %if.then10.i.if.end20.i_crit_edge
    i32 -95, label %if.then10.i.if.end20.i_crit_edge3
  ]

if.then10.i.if.end20.i_crit_edge3:                ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i

if.then10.i.if.end20.i_crit_edge:                 ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20.i

if.then10.i.restore_link_crit_edge:               ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %restore_link

if.end20.i:                                       ; preds = %if.then10.i.if.end20.i_crit_edge, %if.then10.i.if.end20.i_crit_edge3, %if.end6.i.if.end20.i_crit_edge
  br label %restore_link

restore_link:                                     ; preds = %if.end20.i, %if.then10.i.restore_link_crit_edge, %if.then.i.restore_link_crit_edge, %if.then33.restore_link_crit_edge, %if.then10.restore_link_crit_edge
  %err.0 = phi i32 [ %call37, %if.then33.restore_link_crit_edge ], [ %call14, %if.then10.restore_link_crit_edge ], [ 0, %if.end20.i ], [ %call.i, %if.then.i.restore_link_crit_edge ], [ %call14.i, %if.then10.i.restore_link_crit_edge ]
  %39 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %chip, align 8
  %ops44 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %40, i32 0, i32 22
  %41 = ptrtoint ptr %ops44 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ops44, align 4
  %port_set_link45 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %42, i32 0, i32 14
  %43 = ptrtoint ptr %port_set_link45 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %port_set_link45, align 4
  %call46 = tail call i32 %44(ptr noundef %chip, i32 noundef %port, i32 noundef %link) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call46)
  %tobool47.not = icmp eq i32 %call46, 0
  br i1 %tobool47.not, label %restore_link.cleanup_crit_edge, label %do.end

restore_link.cleanup_crit_edge:                   ; preds = %restore_link
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %restore_link
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %46, ptr noundef nonnull @.str.70, i32 noundef %port) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end, %restore_link.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %err.0, %do.end ], [ %err.0, %restore_link.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_write(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_map_da(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_setup_upstream_port(ptr noundef %chip, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds1, align 8
  %dst1.i.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i.i, align 4
  %ports.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i.i = load ptr, ptr %ports.i.i, align 4
  %cmp.not21.i.i = icmp eq ptr %.pn20.i.i, %ports.i.i
  br i1 %cmp.not21.i.i, label %entry.dsa_to_port.exit.i_crit_edge, label %entry.for.body.i.i_crit_edge

entry.for.body.i.i_crit_edge:                     ; preds = %entry
  br label %for.body.i.i

entry.dsa_to_port.exit.i_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %entry.for.body.i.i_crit_edge
  %.pn22.i.i = phi ptr [ %.pn.i.i, %for.inc.i.i.for.body.i.i_crit_edge ], [ %.pn20.i.i, %entry.for.body.i.i_crit_edge ]
  %ds3.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -432
  %5 = ptrtoint ptr %ds3.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i.i, align 4
  %cmp4.i.i = icmp eq ptr %6, %1
  br i1 %cmp4.i.i, label %land.lhs.true.i.i, label %for.body.i.i.for.inc.i.i_crit_edge

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %index.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -428
  %7 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i.i = icmp eq i32 %8, %port
  br i1 %cmp5.i.i, label %cleanup.split.loop.exit18.i.i, label %land.lhs.true.i.i.for.inc.i.i_crit_edge

land.lhs.true.i.i.for.inc.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %land.lhs.true.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i.i = load ptr, ptr %.pn22.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %ports.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.dsa_to_port.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_to_port.exit.i_crit_edge:         ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit.i

cleanup.split.loop.exit18.i.i:                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i.i = getelementptr i8, ptr %.pn22.i.i, i32 -448
  br label %dsa_to_port.exit.i

dsa_to_port.exit.i:                               ; preds = %cleanup.split.loop.exit18.i.i, %for.inc.i.i.dsa_to_port.exit.i_crit_edge, %entry.dsa_to_port.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %dp.0.le.i.i, %cleanup.split.loop.exit18.i.i ], [ null, %entry.dsa_to_port.exit.i_crit_edge ], [ null, %for.inc.i.i.dsa_to_port.exit.i_crit_edge ]
  %cpu_dp1.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i.i, i32 0, i32 8
  %10 = ptrtoint ptr %cpu_dp1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cpu_dp1.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge, label %if.end.i

dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge: ; preds = %dsa_to_port.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_upstream_port.exit

if.end.i:                                         ; preds = %dsa_to_port.exit.i
  %ds2.i = getelementptr inbounds %struct.dsa_port, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %ds2.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ds2.i, align 4
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %index.i, align 4
  %index3.i = getelementptr inbounds %struct.dsa_port, ptr %11, i32 0, i32 5
  %16 = ptrtoint ptr %index3.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index3.i, align 4
  %index.i10.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 2
  %18 = ptrtoint ptr %index.i10.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %index.i10.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %15)
  %cmp.i.i = icmp eq i32 %19, %15
  br i1 %cmp.i.i, label %if.end.i.dsa_upstream_port.exit_crit_edge, label %if.else.i.i

if.end.i.dsa_upstream_port.exit_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_upstream_port.exit

if.else.i.i:                                      ; preds = %if.end.i
  %rtable.i.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 10
  %20 = ptrtoint ptr %rtable.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn22.i.i.i = load ptr, ptr %rtable.i.i.i, align 4
  %cmp.not23.i.i.i = icmp eq ptr %.pn22.i.i.i, %rtable.i.i.i
  br i1 %cmp.not23.i.i.i, label %if.else.i.i.for.end.i.i.i_crit_edge, label %if.else.i.i.for.body.i.i.i_crit_edge

if.else.i.i.for.body.i.i.i_crit_edge:             ; preds = %if.else.i.i
  br label %for.body.i.i.i

if.else.i.i.for.end.i.i.i_crit_edge:              ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.else.i.i.for.body.i.i.i_crit_edge
  %.pn24.i.i.i = phi ptr [ %.pn.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn22.i.i.i, %if.else.i.i.for.body.i.i.i_crit_edge ]
  %dl.0.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -8
  %21 = ptrtoint ptr %dl.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dl.0.i.i.i, align 4
  %ds3.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %22, i32 0, i32 4
  %23 = ptrtoint ptr %ds3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ds3.i.i.i, align 4
  %cmp4.i.i.i = icmp eq ptr %24, %1
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %link_dp.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -4
  %25 = ptrtoint ptr %link_dp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %link_dp.i.i.i, align 4
  %ds5.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %ds5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ds5.i.i.i, align 4
  %index.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %28, i32 0, i32 2
  %29 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %index.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %15)
  %cmp6.i.i.i = icmp eq i32 %30, %15
  br i1 %cmp6.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %index8.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %22, i32 0, i32 5
  br label %dsa_routing_port.exit.i.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %31 = ptrtoint ptr %.pn24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn.i.i.i = load ptr, ptr %.pn24.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %rtable.i.i.i
  br i1 %cmp.not.i.i.i, label %for.inc.i.i.i.for.end.i.i.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.inc.i.i.i.for.end.i.i.i_crit_edge:            ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i.i

for.end.i.i.i:                                    ; preds = %for.inc.i.i.i.for.end.i.i.i_crit_edge, %if.else.i.i.for.end.i.i.i_crit_edge
  %num_ports.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 18
  br label %dsa_routing_port.exit.i.i

dsa_routing_port.exit.i.i:                        ; preds = %for.end.i.i.i, %if.then.i.i.i
  %retval.0.in.i.i.i = phi ptr [ %index8.i.i.i, %if.then.i.i.i ], [ %num_ports.i.i.i, %for.end.i.i.i ]
  %32 = ptrtoint ptr %retval.0.in.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %retval.0.i.i.i = load i32, ptr %retval.0.in.i.i.i, align 4
  br label %dsa_upstream_port.exit

dsa_upstream_port.exit:                           ; preds = %dsa_routing_port.exit.i.i, %if.end.i.dsa_upstream_port.exit_crit_edge, %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge
  %retval.0.i = phi i32 [ %port, %dsa_to_port.exit.i.dsa_upstream_port.exit_crit_edge ], [ %retval.0.i.i.i, %dsa_routing_port.exit.i.i ], [ %17, %if.end.i.dsa_upstream_port.exit_crit_edge ]
  %33 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %34, i32 0, i32 22
  %35 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ops, align 4
  %port_set_upstream_port = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %36, i32 0, i32 33
  %37 = ptrtoint ptr %port_set_upstream_port to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %port_set_upstream_port, align 4
  %tobool.not = icmp eq ptr %38, null
  br i1 %tobool.not, label %dsa_upstream_port.exit.if.end8_crit_edge, label %if.then

dsa_upstream_port.exit.if.end8_crit_edge:         ; preds = %dsa_upstream_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then:                                          ; preds = %dsa_upstream_port.exit
  %call5 = tail call i32 %38(ptr noundef %chip, i32 noundef %port, i32 noundef %retval.0.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.then.if.end8_crit_edge, label %if.then.cleanup_crit_edge

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.if.end8_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end8:                                          ; preds = %if.then.if.end8_crit_edge, %dsa_upstream_port.exit.if.end8_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %port)
  %cmp = icmp eq i32 %retval.0.i, %port
  br i1 %cmp, label %if.then9, label %if.end8.if.end33_crit_edge

if.end8.if.end33_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.then9:                                         ; preds = %if.end8
  %39 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %chip, align 8
  %ops11 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %40, i32 0, i32 22
  %41 = ptrtoint ptr %ops11 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ops11, align 4
  %set_cpu_port = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %42, i32 0, i32 39
  %43 = ptrtoint ptr %set_cpu_port to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %set_cpu_port, align 4
  %tobool12.not = icmp eq ptr %44, null
  br i1 %tobool12.not, label %if.then9.if.end21_crit_edge, label %if.then13

if.then9.if.end21_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21

if.then13:                                        ; preds = %if.then9
  %call17 = tail call i32 %44(ptr noundef %chip, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %if.then13.if.end21_crit_edge, label %if.then13.cleanup_crit_edge

if.then13.cleanup_crit_edge:                      ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then13.if.end21_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21

if.end21:                                         ; preds = %if.then13.if.end21_crit_edge, %if.then9.if.end21_crit_edge
  %45 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %46, i32 0, i32 22
  %47 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ops.i, align 4
  %set_egress_port.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %48, i32 0, i32 40
  %49 = ptrtoint ptr %set_egress_port.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %set_egress_port.i, align 4
  %tobool.not.i60 = icmp eq ptr %50, null
  br i1 %tobool.not.i60, label %if.end21.if.end26_crit_edge, label %if.end.i61

if.end21.if.end26_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.end.i61:                                       ; preds = %if.end21
  %call.i = tail call i32 %50(ptr noundef %chip, i32 noundef 0, i32 noundef %port) #16
  %51 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %51, ptr @__sancov_gen_cov_switch_values.133)
  switch i32 %call.i, label %if.end.i61.cleanup_crit_edge [
    i32 0, label %if.end6.i
    i32 -95, label %if.end.i61.if.end26_crit_edge
  ]

if.end.i61.if.end26_crit_edge:                    ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.end.i61.cleanup_crit_edge:                     ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6.i:                                        ; preds = %if.end.i61
  call void @__sanitizer_cov_trace_pc() #18
  %ingress_dest_port.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 44
  %52 = ptrtoint ptr %ingress_dest_port.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %port, ptr %ingress_dest_port.i, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.end6.i, %if.end.i61.if.end26_crit_edge, %if.end21.if.end26_crit_edge
  %53 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %chip, align 8
  %ops.i63 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %54, i32 0, i32 22
  %55 = ptrtoint ptr %ops.i63 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %ops.i63, align 4
  %set_egress_port.i64 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %56, i32 0, i32 40
  %57 = ptrtoint ptr %set_egress_port.i64 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %set_egress_port.i64, align 4
  %tobool.not.i65 = icmp eq ptr %58, null
  br i1 %tobool.not.i65, label %if.end26.if.end33_crit_edge, label %if.end.i68

if.end26.if.end33_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.end.i68:                                       ; preds = %if.end26
  %call.i66 = tail call i32 %58(ptr noundef %chip, i32 noundef 1, i32 noundef %port) #16
  %59 = zext i32 %call.i66 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.134)
  switch i32 %call.i66, label %if.end.i68.cleanup_crit_edge [
    i32 0, label %if.end6.i69
    i32 -95, label %if.end.i68.if.end33_crit_edge
  ]

if.end.i68.if.end33_crit_edge:                    ; preds = %if.end.i68
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.end.i68.cleanup_crit_edge:                     ; preds = %if.end.i68
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6.i69:                                      ; preds = %if.end.i68
  call void @__sanitizer_cov_trace_pc() #18
  %egress_dest_port.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 43
  %60 = ptrtoint ptr %egress_dest_port.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %port, ptr %egress_dest_port.i, align 8
  br label %if.end33

if.end33:                                         ; preds = %if.end6.i69, %if.end.i68.if.end33_crit_edge, %if.end26.if.end33_crit_edge, %if.end8.if.end33_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %if.end.i68.cleanup_crit_edge, %if.end.i61.cleanup_crit_edge, %if.then13.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end33 ], [ %call5, %if.then.cleanup_crit_edge ], [ %call17, %if.then13.cleanup_crit_edge ], [ %call.i, %if.end.i61.cleanup_crit_edge ], [ %call.i66, %if.end.i68.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_8021q_mode(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_port_vlan_join(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext %vid, i8 noundef zeroext %member, i1 noundef zeroext %warn) unnamed_addr #0 align 64 {
entry:
  %fid_bitmap.i = alloca [128 x i32], align 4
  %vlan = alloca %struct.mv88e6xxx_vtu_entry, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %vlan) #16
  %0 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 1
  %1 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 3
  %2 = getelementptr inbounds i8, ptr %vlan, i32 2
  %3 = call ptr @memset(ptr %2, i32 255, i32 28)
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 4
  %vtu_getnext.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %7, i32 0, i32 60
  %8 = ptrtoint ptr %vtu_getnext.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %vtu_getnext.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vid)
  %tobool2.not.i = icmp eq i16 %vid, 0
  br i1 %tobool2.not.i, label %cond.false.i, label %cond.true.i

cond.true.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %conv.i = zext i16 %vid to i32
  %sub.i = add nsw i32 %conv.i, -1
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %max_vid.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 8
  %10 = ptrtoint ptr %max_vid.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %max_vid.i.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.true.i
  %cond.i = phi i32 [ %sub.i, %cond.true.i ], [ %11, %cond.false.i ]
  %conv4.i = trunc i32 %cond.i to i16
  %12 = ptrtoint ptr %vlan to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv4.i, ptr %vlan, align 2
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %1, align 1
  %call9.i = call i32 %9(ptr noundef %chip, ptr noundef nonnull %vlan) #16
  %14 = ptrtoint ptr %vlan to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %vlan, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %15, i16 %vid)
  %cmp.not.i = icmp eq i16 %15, %vid
  br i1 %cmp.not.i, label %cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge, label %if.then14.i

cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge:      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_get.exit

if.then14.i:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 0, ptr %1, align 1
  br label %mv88e6xxx_vtu_get.exit

mv88e6xxx_vtu_get.exit:                           ; preds = %if.then14.i, %cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool.not = icmp eq i32 %call9.i, 0
  br i1 %tobool.not, label %if.end, label %mv88e6xxx_vtu_get.exit.cleanup_crit_edge

mv88e6xxx_vtu_get.exit.cleanup_crit_edge:         ; preds = %mv88e6xxx_vtu_get.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_vtu_get.exit
  %17 = ptrtoint ptr %1 to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %1, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %18)
  %tobool1.not = icmp eq i8 %18, 0
  br i1 %tobool1.not, label %if.then2, label %if.else25

if.then2:                                         ; preds = %if.end
  %19 = call ptr @memset(ptr %vlan, i32 0, i32 30)
  call void @llvm.lifetime.start.p0(i64 512, ptr nonnull %fid_bitmap.i) #16
  %20 = call ptr @memset(ptr %fid_bitmap.i, i32 255, i32 512)
  %call.i = call i32 @mv88e6xxx_fid_map(ptr noundef %chip, ptr noundef nonnull %fid_bitmap.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i74 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i74, label %if.end.i77, label %if.then2.mv88e6xxx_atu_new.exit.thread_crit_edge

if.then2.mv88e6xxx_atu_new.exit.thread_crit_edge: ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_atu_new.exit.thread

if.end.i77:                                       ; preds = %if.then2
  %call2.i = call i32 @_find_next_zero_bit_be(ptr noundef nonnull %fid_bitmap.i, i32 noundef 4096, i32 noundef 1) #16
  %conv.i75 = trunc i32 %call2.i to i16
  %21 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 %conv.i75, ptr %0, align 2
  %conv3.i = and i32 %call2.i, 65535
  %22 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %chip, align 8
  %num_databases.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %num_databases.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_databases.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %conv3.i, i32 %25)
  %cmp.not.i76 = icmp ult i32 %conv3.i, %25
  br i1 %cmp.not.i76, label %mv88e6xxx_atu_new.exit, label %if.end.i77.mv88e6xxx_atu_new.exit.thread_crit_edge, !prof !348

if.end.i77.mv88e6xxx_atu_new.exit.thread_crit_edge: ; preds = %if.end.i77
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_atu_new.exit.thread

mv88e6xxx_atu_new.exit.thread:                    ; preds = %if.end.i77.mv88e6xxx_atu_new.exit.thread_crit_edge, %if.then2.mv88e6xxx_atu_new.exit.thread_crit_edge
  %retval.0.i78.ph = phi i32 [ -28, %if.end.i77.mv88e6xxx_atu_new.exit.thread_crit_edge ], [ %call.i, %if.then2.mv88e6xxx_atu_new.exit.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %fid_bitmap.i) #16
  br label %cleanup

mv88e6xxx_atu_new.exit:                           ; preds = %if.end.i77
  %call10.i = call i32 @mv88e6xxx_g1_atu_flush(ptr noundef %chip, i16 noundef zeroext %conv.i75, i1 noundef zeroext true) #16
  call void @llvm.lifetime.end.p0(i64 512, ptr nonnull %fid_bitmap.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool4.not = icmp eq i32 %call10.i, 0
  br i1 %tobool4.not, label %for.cond.preheader, label %mv88e6xxx_atu_new.exit.cleanup_crit_edge

mv88e6xxx_atu_new.exit.cleanup_crit_edge:         ; preds = %mv88e6xxx_atu_new.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %mv88e6xxx_atu_new.exit
  %26 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %chip, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %27, i32 0, i32 5
  %28 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_ports.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp99.not = icmp eq i32 %29, 0
  br i1 %cmp99.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0100 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.0100, i32 %port)
  %cmp8 = icmp eq i32 %i.0100, %port
  %spec.select = select i1 %cmp8, i8 %member, i8 3
  %30 = getelementptr %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 4, i32 %i.0100
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store1_noabort(i32 %31)
  store i8 %spec.select, ptr %30, align 1
  %inc = add nuw i32 %i.0100, 1
  %32 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_ports.i, align 4
  %cmp = icmp ult i32 %inc, %33
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  %34 = ptrtoint ptr %vlan to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %vid, ptr %vlan, align 2
  %35 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 1, ptr %1, align 1
  %ops.i79 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %27, i32 0, i32 22
  %36 = ptrtoint ptr %ops.i79 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ops.i79, align 4
  %vtu_loadpurge.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %37, i32 0, i32 61
  %38 = ptrtoint ptr %vtu_loadpurge.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %vtu_loadpurge.i, align 4
  %tobool.not.i80 = icmp eq ptr %39, null
  br i1 %tobool.not.i80, label %for.end.cleanup_crit_edge, label %mv88e6xxx_vtu_loadpurge.exit

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_vtu_loadpurge.exit:                     ; preds = %for.end
  %call.i81 = call i32 %39(ptr noundef %chip, ptr noundef nonnull %vlan) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i81)
  %tobool17.not = icmp eq i32 %call.i81, 0
  br i1 %tobool17.not, label %if.end19, label %mv88e6xxx_vtu_loadpurge.exit.cleanup_crit_edge

mv88e6xxx_vtu_loadpurge.exit.cleanup_crit_edge:   ; preds = %mv88e6xxx_vtu_loadpurge.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %mv88e6xxx_vtu_loadpurge.exit
  %40 = ptrtoint ptr %vlan to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %vlan, align 2
  %call21 = call fastcc i32 @mv88e6xxx_broadcast_setup(ptr noundef %chip, i16 noundef zeroext %41)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end19.if.end44_crit_edge, label %if.end19.cleanup_crit_edge

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.if.end44_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

if.else25:                                        ; preds = %if.end
  %arrayidx27 = getelementptr %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 4, i32 %port
  %42 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %arrayidx27, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %43, i8 %member)
  %cmp29.not = icmp eq i8 %43, %member
  br i1 %cmp29.not, label %if.else38, label %if.then31

if.then31:                                        ; preds = %if.else25
  %44 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %member, ptr %arrayidx27, align 1
  %45 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %chip, align 8
  %ops.i84 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %46, i32 0, i32 22
  %47 = ptrtoint ptr %ops.i84 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ops.i84, align 4
  %vtu_loadpurge.i85 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %48, i32 0, i32 61
  %49 = ptrtoint ptr %vtu_loadpurge.i85 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %vtu_loadpurge.i85, align 4
  %tobool.not.i86 = icmp eq ptr %50, null
  br i1 %tobool.not.i86, label %if.then31.cleanup_crit_edge, label %mv88e6xxx_vtu_loadpurge.exit90

if.then31.cleanup_crit_edge:                      ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_vtu_loadpurge.exit90:                   ; preds = %if.then31
  %call.i87 = call i32 %50(ptr noundef %chip, ptr noundef nonnull %vlan) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i87)
  %tobool35.not = icmp eq i32 %call.i87, 0
  br i1 %tobool35.not, label %mv88e6xxx_vtu_loadpurge.exit90.if.end44_crit_edge, label %mv88e6xxx_vtu_loadpurge.exit90.cleanup_crit_edge

mv88e6xxx_vtu_loadpurge.exit90.cleanup_crit_edge: ; preds = %mv88e6xxx_vtu_loadpurge.exit90
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_vtu_loadpurge.exit90.if.end44_crit_edge: ; preds = %mv88e6xxx_vtu_loadpurge.exit90
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

if.else38:                                        ; preds = %if.else25
  br i1 %warn, label %do.end, label %if.else38.if.end44_crit_edge

if.else38.if.end44_crit_edge:                     ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end44

do.end:                                           ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #18
  %dev = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %51 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dev, align 4
  %conv41 = zext i16 %vid to i32
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %52, ptr noundef nonnull @.str.72, i32 noundef %port, i32 noundef %conv41) #19
  br label %if.end44

if.end44:                                         ; preds = %do.end, %if.else38.if.end44_crit_edge, %mv88e6xxx_vtu_loadpurge.exit90.if.end44_crit_edge, %if.end19.if.end44_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end44, %mv88e6xxx_vtu_loadpurge.exit90.cleanup_crit_edge, %if.then31.cleanup_crit_edge, %if.end19.cleanup_crit_edge, %mv88e6xxx_vtu_loadpurge.exit.cleanup_crit_edge, %for.end.cleanup_crit_edge, %mv88e6xxx_atu_new.exit.cleanup_crit_edge, %mv88e6xxx_atu_new.exit.thread, %mv88e6xxx_vtu_get.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end44 ], [ %call9.i, %mv88e6xxx_vtu_get.exit.cleanup_crit_edge ], [ %call10.i, %mv88e6xxx_atu_new.exit.cleanup_crit_edge ], [ %call.i81, %mv88e6xxx_vtu_loadpurge.exit.cleanup_crit_edge ], [ %call21, %if.end19.cleanup_crit_edge ], [ %call.i87, %mv88e6xxx_vtu_loadpurge.exit90.cleanup_crit_edge ], [ %retval.0.i78.ph, %mv88e6xxx_atu_new.exit.thread ], [ -95, %entry.cleanup_crit_edge ], [ -95, %for.end.cleanup_crit_edge ], [ -95, %if.then31.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_fid(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_port_vlan_map(ptr noundef %chip, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds, align 8
  %index = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %index, align 4
  %call = tail call fastcc zeroext i16 @mv88e6xxx_port_vlan(ptr noundef %chip, i32 noundef %3, i32 noundef %port)
  %shl = shl nuw i32 1, %port
  %4 = trunc i32 %shl to i16
  %5 = xor i16 %4, -1
  %conv1 = and i16 %call, %5
  %call2 = tail call i32 @mv88e6xxx_port_set_vlan_map(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext %conv1) #16
  ret i32 %call2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_zero_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_flush(ptr noundef, i16 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i16 @mv88e6xxx_port_vlan(ptr nocapture noundef readonly %chip, i32 noundef %dev, i32 noundef %port) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds1, align 8
  %dst2 = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst2, align 4
  %last_switch = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 12
  %4 = ptrtoint ptr %last_switch to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %last_switch, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %dev)
  %cmp.not = icmp ult i32 %5, %dev
  %ports16 = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %ports16 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn165 = load ptr, ptr %ports16, align 4
  %cmp23.not166 = icmp eq ptr %.pn165, %ports16
  br i1 %cmp.not, label %for.cond20.preheader, label %if.then

for.cond20.preheader:                             ; preds = %entry
  br i1 %cmp23.not166, label %for.cond20.preheader.cleanup84_crit_edge, label %for.cond20.preheader.for.body25_crit_edge

for.cond20.preheader.for.body25_crit_edge:        ; preds = %for.cond20.preheader
  br label %for.body25

for.cond20.preheader.cleanup84_crit_edge:         ; preds = %for.cond20.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

if.then:                                          ; preds = %entry
  br i1 %cmp23.not166, label %if.then.cleanup84_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.cleanup84_crit_edge:                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %if.then.for.body_crit_edge
  %.pn124147 = phi ptr [ %.pn124, %for.inc.for.body_crit_edge ], [ %.pn165, %if.then.for.body_crit_edge ]
  %ds5 = getelementptr i8, ptr %.pn124147, i32 -432
  %7 = ptrtoint ptr %ds5 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ds5, align 4
  %index = getelementptr inbounds %struct.dsa_switch, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %dev)
  %cmp6 = icmp eq i32 %10, %dev
  br i1 %cmp6, label %land.lhs.true, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %index7 = getelementptr i8, ptr %.pn124147, i32 -428
  %11 = ptrtoint ptr %index7 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %index7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %port)
  %cmp8 = icmp eq i32 %12, %port
  br i1 %cmp8, label %land.lhs.true.if.end42_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.if.end42_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

for.inc:                                          ; preds = %land.lhs.true.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %13 = ptrtoint ptr %.pn124147 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn124 = load ptr, ptr %.pn124147, align 4
  %cmp4.not = icmp eq ptr %.pn124, %ports16
  br i1 %cmp4.not, label %for.inc.cleanup84_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup84_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

for.body25:                                       ; preds = %cleanup.for.body25_crit_edge, %for.cond20.preheader.for.body25_crit_edge
  %.pn167 = phi ptr [ %.pn, %cleanup.for.body25_crit_edge ], [ %.pn165, %for.cond20.preheader.for.body25_crit_edge ]
  %bridge.i = getelementptr i8, ptr %.pn167, i32 -396
  %14 = ptrtoint ptr %bridge.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %bridge.i, align 4
  %tobool.not.i = icmp eq ptr %15, null
  br i1 %tobool.not.i, label %for.body25.cleanup_crit_edge, label %dsa_port_bridge_num_get.exit

for.body25.cleanup_crit_edge:                     ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

dsa_port_bridge_num_get.exit:                     ; preds = %for.body25
  %num.i = getelementptr inbounds %struct.dsa_bridge, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %num.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not = icmp ne i32 %17, 0
  %add = add i32 %17, %5
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %dev)
  %cmp29.not = icmp eq i32 %add, %dev
  %or.cond = select i1 %tobool.not, i1 %cmp29.not, i1 false
  br i1 %or.cond, label %dsa_port_bridge_num_get.exit.if.end42_crit_edge, label %dsa_port_bridge_num_get.exit.cleanup_crit_edge

dsa_port_bridge_num_get.exit.cleanup_crit_edge:   ; preds = %dsa_port_bridge_num_get.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

dsa_port_bridge_num_get.exit.if.end42_crit_edge:  ; preds = %dsa_port_bridge_num_get.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

cleanup:                                          ; preds = %dsa_port_bridge_num_get.exit.cleanup_crit_edge, %for.body25.cleanup_crit_edge
  %18 = ptrtoint ptr %.pn167 to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn = load ptr, ptr %.pn167, align 4
  %cmp23.not = icmp eq ptr %.pn, %ports16
  br i1 %cmp23.not, label %cleanup.cleanup84_crit_edge, label %cleanup.for.body25_crit_edge

cleanup.for.body25_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body25

cleanup.cleanup84_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

if.end42:                                         ; preds = %dsa_port_bridge_num_get.exit.if.end42_crit_edge, %land.lhs.true.if.end42_crit_edge
  %.pn.pn = phi ptr [ %.pn167, %dsa_port_bridge_num_get.exit.if.end42_crit_edge ], [ %.pn124147, %land.lhs.true.if.end42_crit_edge ]
  %type = getelementptr i8, ptr %.pn.pn, i32 -424
  %19 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %type, align 4
  %.off = add i32 %20, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch125 = icmp ult i32 %.off, 2
  br i1 %switch125, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %chip, align 8
  %num_ports.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %22, i32 0, i32 5
  %23 = ptrtoint ptr %num_ports.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_ports.i.i, align 4
  %sub1.i = sub i32 32, %24
  %shr.i = lshr i32 -1, %sub1.i
  %conv.i = trunc i32 %shr.i to i16
  br label %cleanup84

if.end48:                                         ; preds = %if.end42
  %ports51 = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %25 = ptrtoint ptr %ports51 to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn123148 = load ptr, ptr %ports51, align 4
  %cmp59.not149 = icmp eq ptr %.pn123148, %ports51
  br i1 %cmp59.not149, label %if.end48.cleanup84_crit_edge, label %for.body61.lr.ph

if.end48.cleanup84_crit_edge:                     ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

for.body61.lr.ph:                                 ; preds = %if.end48
  %bridge.i.i = getelementptr i8, ptr %.pn.pn, i32 -396
  br label %for.body61

for.body61:                                       ; preds = %for.inc77.for.body61_crit_edge, %for.body61.lr.ph
  %.pn123152 = phi ptr [ %.pn123148, %for.body61.lr.ph ], [ %.pn123, %for.inc77.for.body61_crit_edge ]
  %pvlan.0150 = phi i16 [ 0, %for.body61.lr.ph ], [ %pvlan.1, %for.inc77.for.body61_crit_edge ]
  %ds62 = getelementptr i8, ptr %.pn123152, i32 -432
  %26 = ptrtoint ptr %ds62 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ds62, align 4
  %cmp63 = icmp eq ptr %27, %1
  br i1 %cmp63, label %if.then64, label %for.body61.for.inc77_crit_edge

for.body61.for.inc77_crit_edge:                   ; preds = %for.body61
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc77

if.then64:                                        ; preds = %for.body61
  %type65 = getelementptr i8, ptr %.pn123152, i32 -424
  %28 = ptrtoint ptr %type65 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %type65, align 4
  %.off126 = add i32 %29, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off126)
  %switch127 = icmp ult i32 %.off126, 2
  br i1 %switch127, label %if.then64.if.then72_crit_edge, label %lor.lhs.false70

if.then64.if.then72_crit_edge:                    ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then72

lor.lhs.false70:                                  ; preds = %if.then64
  %30 = ptrtoint ptr %bridge.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bridge.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %31, null
  br i1 %tobool.not.i.i, label %lor.lhs.false70.dsa_port_bridge_dev_get.exit.i_crit_edge, label %cond.true.i.i

lor.lhs.false70.dsa_port_bridge_dev_get.exit.i_crit_edge: ; preds = %lor.lhs.false70
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_port_bridge_dev_get.exit.i

cond.true.i.i:                                    ; preds = %lor.lhs.false70
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  br label %dsa_port_bridge_dev_get.exit.i

dsa_port_bridge_dev_get.exit.i:                   ; preds = %cond.true.i.i, %lor.lhs.false70.dsa_port_bridge_dev_get.exit.i_crit_edge
  %cond.i.i = phi ptr [ %33, %cond.true.i.i ], [ null, %lor.lhs.false70.dsa_port_bridge_dev_get.exit.i_crit_edge ]
  %bridge.i6.i = getelementptr i8, ptr %.pn123152, i32 -396
  %34 = ptrtoint ptr %bridge.i6.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %bridge.i6.i, align 4
  %tobool.not.i7.i = icmp eq ptr %35, null
  br i1 %tobool.not.i7.i, label %dsa_port_bridge_dev_get.exit.i.for.inc77_crit_edge, label %dsa_port_bridge_same.exit

dsa_port_bridge_dev_get.exit.i.for.inc77_crit_edge: ; preds = %dsa_port_bridge_dev_get.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc77

dsa_port_bridge_same.exit:                        ; preds = %dsa_port_bridge_dev_get.exit.i
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 4
  %tobool.not.i128 = icmp ne ptr %cond.i.i, null
  %tobool2.not.i = icmp ne ptr %37, null
  %or.cond.i = select i1 %tobool.not.i128, i1 %tobool2.not.i, i1 false
  %cmp.i = icmp eq ptr %cond.i.i, %37
  %spec.select.i = select i1 %or.cond.i, i1 %cmp.i, i1 false
  br i1 %spec.select.i, label %dsa_port_bridge_same.exit.if.then72_crit_edge, label %dsa_port_bridge_same.exit.for.inc77_crit_edge

dsa_port_bridge_same.exit.for.inc77_crit_edge:    ; preds = %dsa_port_bridge_same.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc77

dsa_port_bridge_same.exit.if.then72_crit_edge:    ; preds = %dsa_port_bridge_same.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then72

if.then72:                                        ; preds = %dsa_port_bridge_same.exit.if.then72_crit_edge, %if.then64.if.then72_crit_edge
  %index73 = getelementptr i8, ptr %.pn123152, i32 -428
  %38 = ptrtoint ptr %index73 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %index73, align 4
  %shl = shl nuw i32 1, %39
  %40 = trunc i32 %shl to i16
  %conv74 = or i16 %pvlan.0150, %40
  br label %for.inc77

for.inc77:                                        ; preds = %if.then72, %dsa_port_bridge_same.exit.for.inc77_crit_edge, %dsa_port_bridge_dev_get.exit.i.for.inc77_crit_edge, %for.body61.for.inc77_crit_edge
  %pvlan.1 = phi i16 [ %conv74, %if.then72 ], [ %pvlan.0150, %dsa_port_bridge_same.exit.for.inc77_crit_edge ], [ %pvlan.0150, %for.body61.for.inc77_crit_edge ], [ %pvlan.0150, %dsa_port_bridge_dev_get.exit.i.for.inc77_crit_edge ]
  %41 = ptrtoint ptr %.pn123152 to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn123 = load ptr, ptr %.pn123152, align 4
  %cmp59.not = icmp eq ptr %.pn123, %ports51
  br i1 %cmp59.not, label %for.inc77.cleanup84_crit_edge, label %for.inc77.for.body61_crit_edge

for.inc77.for.body61_crit_edge:                   ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body61

for.inc77.cleanup84_crit_edge:                    ; preds = %for.inc77
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup84

cleanup84:                                        ; preds = %for.inc77.cleanup84_crit_edge, %if.end48.cleanup84_crit_edge, %if.then46, %cleanup.cleanup84_crit_edge, %for.inc.cleanup84_crit_edge, %if.then.cleanup84_crit_edge, %for.cond20.preheader.cleanup84_crit_edge
  %retval.0 = phi i16 [ %conv.i, %if.then46 ], [ 0, %if.end48.cleanup84_crit_edge ], [ 0, %if.then.cleanup84_crit_edge ], [ 0, %for.cond20.preheader.cleanup84_crit_edge ], [ %pvlan.1, %for.inc77.cleanup84_crit_edge ], [ 0, %cleanup.cleanup84_crit_edge ], [ 0, %for.inc.cleanup84_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_vlan_map(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_misc_4_bit_port(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %dev, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds, align 8
  %dst1 = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1, align 4
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %chip, align 8
  %pvt.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 16
  %6 = ptrtoint ptr %pvt.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %pvt.i, align 4, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %index = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %index, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %dev)
  %cmp.not = icmp eq i32 %9, %dev
  br i1 %cmp.not, label %if.end.if.end15_crit_edge, label %if.then4

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.then4:                                         ; preds = %if.end
  %call5 = tail call fastcc zeroext i16 @mv88e6xxx_port_vlan(ptr noundef %chip, i32 noundef %dev, i32 noundef %port)
  %index6 = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 3
  %10 = ptrtoint ptr %index6 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %index6, align 4
  %call7 = tail call ptr @dsa_switch_find(i32 noundef %11, i32 noundef %dev) #16
  %tobool.not = icmp eq ptr %call7, null
  br i1 %tobool.not, label %if.then4.if.end15_crit_edge, label %cond.true

if.then4.if.end15_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

cond.true:                                        ; preds = %if.then4
  %dst1.i = getelementptr inbounds %struct.dsa_switch, ptr %call7, i32 0, i32 1
  %12 = ptrtoint ptr %dst1.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dst1.i, align 4
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn20.i = load ptr, ptr %ports.i, align 4
  %cmp.not21.i = icmp eq ptr %.pn20.i, %ports.i
  br i1 %cmp.not21.i, label %cond.true.if.end15_crit_edge, label %cond.true.for.body.i_crit_edge

cond.true.for.body.i_crit_edge:                   ; preds = %cond.true
  br label %for.body.i

cond.true.if.end15_crit_edge:                     ; preds = %cond.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %cond.true.for.body.i_crit_edge
  %.pn22.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn20.i, %cond.true.for.body.i_crit_edge ]
  %ds3.i = getelementptr i8, ptr %.pn22.i, i32 -432
  %15 = ptrtoint ptr %ds3.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ds3.i, align 4
  %cmp4.i = icmp eq ptr %16, %call7
  br i1 %cmp4.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %index.i = getelementptr i8, ptr %.pn22.i, i32 -428
  %17 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %port)
  %cmp5.i = icmp eq i32 %18, %port
  br i1 %cmp5.i, label %cond.end, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %19 = ptrtoint ptr %.pn22.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn.i = load ptr, ptr %.pn22.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp.not.i, label %for.inc.i.if.end15_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.if.end15_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

cond.end:                                         ; preds = %land.lhs.true.i
  %dp.0.le.i = getelementptr i8, ptr %.pn22.i, i32 -448
  %tobool9.not = icmp eq ptr %dp.0.le.i, null
  br i1 %tobool9.not, label %cond.end.if.end15_crit_edge, label %land.lhs.true

cond.end.if.end15_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

land.lhs.true:                                    ; preds = %cond.end
  %lag_dev = getelementptr i8, ptr %.pn22.i, i32 -8
  %20 = ptrtoint ptr %lag_dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %lag_dev, align 4
  %tobool10.not = icmp eq ptr %21, null
  br i1 %tobool10.not, label %land.lhs.true.if.end15_crit_edge, label %if.then11

land.lhs.true.if.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.then11:                                        ; preds = %land.lhs.true
  %lags_len.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 11
  %22 = ptrtoint ptr %lags_len.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %lags_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp10.not.i = icmp eq i32 %23, 0
  br i1 %cmp10.not.i, label %if.then11.if.end15_crit_edge, label %for.body.lr.ph.i

if.then11.if.end15_crit_edge:                     ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

for.body.lr.ph.i:                                 ; preds = %if.then11
  %lags.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 5
  %24 = ptrtoint ptr %lags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %lags.i, align 4
  br label %for.body.i33

for.body.i33:                                     ; preds = %for.inc.i34.for.body.i33_crit_edge, %for.body.lr.ph.i
  %id.011.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i34.for.body.i33_crit_edge ]
  %arrayidx.i = getelementptr ptr, ptr %25, i32 %id.011.i
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i = icmp ne ptr %27, null
  %cmp1.i = icmp eq ptr %27, %21
  %or.cond.i = and i1 %tobool.not.i, %cmp1.i
  br i1 %or.cond.i, label %for.body.i33.if.end15_crit_edge, label %for.inc.i34

for.body.i33.if.end15_crit_edge:                  ; preds = %for.body.i33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

for.inc.i34:                                      ; preds = %for.body.i33
  %inc.i = add nuw i32 %id.011.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %23
  br i1 %exitcond.not.i, label %for.inc.i34.if.end15_crit_edge, label %for.inc.i34.for.body.i33_crit_edge

for.inc.i34.for.body.i33_crit_edge:               ; preds = %for.inc.i34
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i33

for.inc.i34.if.end15_crit_edge:                   ; preds = %for.inc.i34
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end15:                                         ; preds = %for.inc.i34.if.end15_crit_edge, %for.body.i33.if.end15_crit_edge, %if.then11.if.end15_crit_edge, %land.lhs.true.if.end15_crit_edge, %cond.end.if.end15_crit_edge, %for.inc.i.if.end15_crit_edge, %cond.true.if.end15_crit_edge, %if.then4.if.end15_crit_edge, %if.end.if.end15_crit_edge
  %dev.addr.0 = phi i32 [ %dev, %land.lhs.true.if.end15_crit_edge ], [ %dev, %cond.end.if.end15_crit_edge ], [ %dev, %if.end.if.end15_crit_edge ], [ 31, %if.then11.if.end15_crit_edge ], [ %dev, %if.then4.if.end15_crit_edge ], [ %dev, %cond.true.if.end15_crit_edge ], [ 31, %for.body.i33.if.end15_crit_edge ], [ 31, %for.inc.i34.if.end15_crit_edge ], [ %dev, %for.inc.i.if.end15_crit_edge ]
  %port.addr.0 = phi i32 [ %port, %land.lhs.true.if.end15_crit_edge ], [ %port, %cond.end.if.end15_crit_edge ], [ %port, %if.end.if.end15_crit_edge ], [ -19, %if.then11.if.end15_crit_edge ], [ %port, %if.then4.if.end15_crit_edge ], [ %port, %cond.true.if.end15_crit_edge ], [ -19, %for.inc.i34.if.end15_crit_edge ], [ %id.011.i, %for.body.i33.if.end15_crit_edge ], [ %port, %for.inc.i.if.end15_crit_edge ]
  %pvlan.0 = phi i16 [ %call5, %land.lhs.true.if.end15_crit_edge ], [ %call5, %cond.end.if.end15_crit_edge ], [ 0, %if.end.if.end15_crit_edge ], [ %call5, %if.then11.if.end15_crit_edge ], [ %call5, %if.then4.if.end15_crit_edge ], [ %call5, %cond.true.if.end15_crit_edge ], [ %call5, %for.body.i33.if.end15_crit_edge ], [ %call5, %for.inc.i34.if.end15_crit_edge ], [ %call5, %for.inc.i.if.end15_crit_edge ]
  %call16 = tail call i32 @mv88e6xxx_g2_pvt_write(ptr noundef %chip, i32 noundef %dev.addr.0, i32 noundef %port.addr.0, i16 noundef zeroext %pvlan.0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %if.end15 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dsa_switch_find(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_pvt_write(ptr noundef, i32 noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_set_learn2all(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_set_age_time(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @br_port_flag_is_set(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef readonly %addr, i16 noundef zeroext %vid, i8 noundef zeroext %state) unnamed_addr #0 align 64 {
entry:
  %entry1 = alloca %struct.mv88e6xxx_atu_entry, align 4
  %vlan = alloca %struct.mv88e6xxx_vtu_entry, align 2
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 10, ptr nonnull %entry1) #16
  %0 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 2
  %1 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3
  %2 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3, i32 1
  %3 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3, i32 2
  %4 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3, i32 3
  %5 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3, i32 4
  %6 = getelementptr inbounds %struct.mv88e6xxx_atu_entry, ptr %entry1, i32 0, i32 3, i32 5
  %7 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %entry1, align 4
  call void @llvm.lifetime.start.p0(i64 30, ptr nonnull %vlan) #16
  %8 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 1
  %9 = getelementptr inbounds %struct.mv88e6xxx_vtu_entry, ptr %vlan, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vid)
  %cmp = icmp eq i16 %vid, 0
  %10 = call ptr @memset(ptr %vlan, i32 255, i32 30)
  br i1 %cmp, label %entry.if.end8_crit_edge, label %if.else

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.else:                                          ; preds = %entry
  %11 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %12, i32 0, i32 22
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 4
  %vtu_getnext.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %14, i32 0, i32 60
  %15 = ptrtoint ptr %vtu_getnext.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %vtu_getnext.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.else.cleanup_crit_edge, label %cond.end.i

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.end.i:                                       ; preds = %if.else
  %sub.i = add i16 %vid, -1
  %17 = ptrtoint ptr %vlan to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %sub.i, ptr %vlan, align 2
  %18 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %9, align 1
  %call9.i = call i32 %16(ptr noundef %chip, ptr noundef nonnull %vlan) #16
  %19 = ptrtoint ptr %vlan to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %vlan, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %20, i16 %vid)
  %cmp.not.i = icmp eq i16 %20, %vid
  br i1 %cmp.not.i, label %cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge, label %if.then14.i

cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge:      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_vtu_get.exit

if.then14.i:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %9 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 0, ptr %9, align 1
  br label %mv88e6xxx_vtu_get.exit

mv88e6xxx_vtu_get.exit:                           ; preds = %if.then14.i, %cond.end.i.mv88e6xxx_vtu_get.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool.not = icmp eq i32 %call9.i, 0
  br i1 %tobool.not, label %if.end, label %mv88e6xxx_vtu_get.exit.cleanup_crit_edge

mv88e6xxx_vtu_get.exit.cleanup_crit_edge:         ; preds = %mv88e6xxx_vtu_get.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_vtu_get.exit
  %22 = ptrtoint ptr %9 to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %9, align 1, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool4.not = icmp eq i8 %23, 0
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %8 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %8, align 2
  br label %if.end8

if.end8:                                          ; preds = %if.end6, %entry.if.end8_crit_edge
  %fid.0 = phi i16 [ %25, %if.end6 ], [ 1, %entry.if.end8_crit_edge ]
  %26 = ptrtoint ptr %entry1 to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %entry1, align 4
  %27 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %addr, align 4
  %add.ptr.i = getelementptr i8, ptr %addr, i32 4
  %29 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %29)
  %30 = load i16, ptr %add.ptr.i, align 2
  %31 = lshr i32 %28, 8
  %32 = and i32 %31, 16711680
  %33 = lshr i32 %28, 8
  %34 = and i32 %33, 65280
  %shl.2.i.i73 = or i32 %34, %32
  %35 = lshr i32 %28, 8
  %.mask = and i32 %35, 255
  %or.2.i.i74 = or i32 %shl.2.i.i73, %.mask
  %or.2.i.i = zext i32 %or.2.i.i74 to i64
  %36 = and i16 %30, -256
  %37 = shl nuw nsw i64 %or.2.i.i, 24
  %.mask75 = shl i32 %28, 16
  %38 = and i32 %.mask75, 16711680
  %39 = zext i32 %38 to i64
  %40 = zext i16 %36 to i64
  %41 = or i64 %40, %39
  %shl.5.i.i = or i64 %41, %37
  %.mask77 = and i16 %30, 255
  %conv.5.i.i = zext i16 %.mask77 to i64
  %or.5.i.i = or i64 %shl.5.i.i, %conv.5.i.i
  %dec.i = add nsw i64 %or.5.i.i, -1
  %conv.i3.i = trunc i64 %dec.i to i8
  %42 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 %conv.i3.i, ptr %6, align 1
  %shr.i.i = lshr i64 %dec.i, 8
  %conv.1.i4.i = trunc i64 %shr.i.i to i8
  %43 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %43)
  store i8 %conv.1.i4.i, ptr %5, align 4
  %shr.1.i.i = lshr i64 %dec.i, 16
  %conv.2.i6.i = trunc i64 %shr.1.i.i to i8
  %44 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %44)
  store i8 %conv.2.i6.i, ptr %4, align 1
  %shr.2.i.i = lshr i64 %dec.i, 24
  %conv.3.i8.i = trunc i64 %shr.2.i.i to i8
  %45 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 %conv.3.i8.i, ptr %3, align 2
  %shr.3.i.i = lshr i64 %dec.i, 32
  %conv.4.i10.i = trunc i64 %shr.3.i.i to i8
  %46 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 %conv.4.i10.i, ptr %2, align 1
  %shr.4.i.i = lshr i64 %dec.i, 40
  %conv.5.i12.i = trunc i64 %shr.4.i.i to i8
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %conv.5.i12.i, ptr %1, align 4
  %call12 = call i32 @mv88e6xxx_g1_atu_getnext(ptr noundef %chip, i16 noundef zeroext %fid.0, ptr noundef nonnull %entry1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15:                                         ; preds = %if.end8
  %48 = ptrtoint ptr %entry1 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %entry1, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool17.not = icmp eq i8 %49, 0
  br i1 %tobool17.not, label %if.end15.if.then21_crit_edge, label %lor.lhs.false

if.end15.if.then21_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then21

lor.lhs.false:                                    ; preds = %if.end15
  %50 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %1, align 4
  %52 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %addr, align 4
  %xor.i = xor i32 %53, %51
  %54 = ptrtoint ptr %5 to i32
  call void @__asan_load2_noabort(i32 %54)
  %55 = load i16, ptr %5, align 4
  %56 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %56)
  %57 = load i16, ptr %add.ptr.i, align 2
  %xor37.i = xor i16 %57, %55
  %xor3.i = zext i16 %xor37.i to i32
  %or.i = or i32 %xor.i, %xor3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i)
  %cmp.i = icmp eq i32 %or.i, 0
  br i1 %cmp.i, label %lor.lhs.false.if.end24_crit_edge, label %lor.lhs.false.if.then21_crit_edge

lor.lhs.false.if.then21_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then21

lor.lhs.false.if.end24_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24

if.then21:                                        ; preds = %lor.lhs.false.if.then21_crit_edge, %if.end15.if.then21_crit_edge
  %58 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 0, ptr %entry1, align 4
  %59 = ptrtoint ptr %addr to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %addr, align 4
  %61 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %1, align 4
  %62 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %62)
  %63 = load i16, ptr %add.ptr.i, align 2
  %64 = ptrtoint ptr %5 to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 %63, ptr %5, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %lor.lhs.false.if.end24_crit_edge
  %65 = zext i8 %state to i64
  call void @__sanitizer_cov_trace_switch(i64 %65, ptr @__sancov_gen_cov_switch_values.135)
  switch i8 %state, label %if.else42 [
    i8 0, label %if.then26
    i8 14, label %if.then38
  ]

if.then26:                                        ; preds = %if.end24
  %shl = shl nuw i32 1, %port
  %66 = ptrtoint ptr %0 to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %0, align 2
  %68 = trunc i32 %shl to i16
  %69 = xor i16 %68, -1
  %conv28 = and i16 %67, %69
  store i16 %conv28, ptr %0, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %conv28)
  %tobool30.not = icmp eq i16 %conv28, 0
  br i1 %tobool30.not, label %if.then31, label %if.then26.if.end49_crit_edge

if.then26.if.end49_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end49

if.then31:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #18
  %70 = ptrtoint ptr %entry1 to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 0, ptr %entry1, align 4
  br label %if.end49

if.then38:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %shl39 = shl nuw i32 1, %port
  %conv40 = trunc i32 %shl39 to i16
  br label %if.end47

if.else42:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %shl43 = shl nuw i32 1, %port
  %71 = ptrtoint ptr %0 to i32
  call void @__asan_load2_noabort(i32 %71)
  %72 = load i16, ptr %0, align 2
  %73 = trunc i32 %shl43 to i16
  %conv46 = or i16 %72, %73
  br label %if.end47

if.end47:                                         ; preds = %if.else42, %if.then38
  %storemerge = phi i16 [ %conv46, %if.else42 ], [ %conv40, %if.then38 ]
  %74 = ptrtoint ptr %0 to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 %storemerge, ptr %0, align 2
  %75 = ptrtoint ptr %entry1 to i32
  call void @__asan_store1_noabort(i32 %75)
  store i8 %state, ptr %entry1, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end47, %if.then31, %if.then26.if.end49_crit_edge
  %call50 = call i32 @mv88e6xxx_g1_atu_loadpurge(ptr noundef %chip, i16 noundef zeroext %fid.0, ptr noundef nonnull %entry1) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %mv88e6xxx_vtu_get.exit.cleanup_crit_edge, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ %call50, %if.end49 ], [ %call9.i, %mv88e6xxx_vtu_get.exit.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ], [ %call12, %if.end8.cleanup_crit_edge ], [ -95, %if.else.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 30, ptr nonnull %vlan) #16
  call void @llvm.lifetime.end.p0(i64 10, ptr nonnull %entry1) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_getnext(ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_loadpurge(ptr noundef, i16 noundef zeroext, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_trunk_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_device_mapping_write(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_set_device_number(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_stats_clear(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_teardown_devlink_regions_global(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_setup_devlink_regions_port(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_teardown_devlink_regions_port(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_set_port_modes(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_helper_basex_speed(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_and(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_serdes_power(ptr noundef %chip, i32 noundef %port, i1 noundef zeroext %on) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %chip, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops.i, align 4
  %serdes_get_lane.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %3, i32 0, i32 45
  %4 = ptrtoint ptr %serdes_get_lane.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %serdes_get_lane.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %mv88e6xxx_serdes_get_lane.exit

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_serdes_get_lane.exit:                   ; preds = %entry
  %call.i = tail call i32 %5(ptr noundef %chip, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %mv88e6xxx_serdes_get_lane.exit.cleanup_crit_edge, label %if.end

mv88e6xxx_serdes_get_lane.exit.cleanup_crit_edge: ; preds = %mv88e6xxx_serdes_get_lane.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %mv88e6xxx_serdes_get_lane.exit
  br i1 %on, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.end
  %6 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %chip, align 8
  %ops.i30 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %7, i32 0, i32 22
  %8 = ptrtoint ptr %ops.i30 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops.i30, align 4
  %serdes_power.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %9, i32 0, i32 44
  %10 = ptrtoint ptr %serdes_power.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %serdes_power.i, align 4
  %tobool.not.i31 = icmp eq ptr %11, null
  br i1 %tobool.not.i31, label %if.then1.cleanup_crit_edge, label %mv88e6xxx_serdes_power_up.exit

if.then1.cleanup_crit_edge:                       ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_serdes_power_up.exit:                   ; preds = %if.then1
  %call.i32 = tail call i32 %11(ptr noundef %chip, i32 noundef %port, i32 noundef %call.i, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i32)
  %tobool3.not = icmp eq i32 %call.i32, 0
  br i1 %tobool3.not, label %if.end5, label %mv88e6xxx_serdes_power_up.exit.cleanup_crit_edge

mv88e6xxx_serdes_power_up.exit.cleanup_crit_edge: ; preds = %mv88e6xxx_serdes_power_up.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %mv88e6xxx_serdes_power_up.exit
  %12 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %chip, align 8
  %ops.i.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %13, i32 0, i32 22
  %14 = ptrtoint ptr %ops.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ops.i.i, align 4
  %serdes_irq_mapping.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %15, i32 0, i32 50
  %16 = ptrtoint ptr %serdes_irq_mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %serdes_irq_mapping.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.i, label %if.end5.cleanup_crit_edge, label %mv88e6xxx_serdes_irq_mapping.exit.i

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_serdes_irq_mapping.exit.i:              ; preds = %if.end5
  %call.i.i = tail call i32 %17(ptr noundef %chip, i32 noundef %port) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i35 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i35, label %mv88e6xxx_serdes_irq_mapping.exit.i.cleanup_crit_edge, label %if.end.i36

mv88e6xxx_serdes_irq_mapping.exit.i.cleanup_crit_edge: ; preds = %mv88e6xxx_serdes_irq_mapping.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i36:                                       ; preds = %mv88e6xxx_serdes_irq_mapping.exit.i
  %arrayidx.i = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port
  %serdes_irq_name.i = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port, i32 14
  %dev.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 3
  %18 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev.i, align 4
  %init_name.i.i = getelementptr inbounds %struct.device, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i26.i = icmp eq ptr %21, null
  br i1 %tobool.not.i26.i, label %if.end.i27.i, label %if.end.i36.dev_name.exit.i_crit_edge

if.end.i36.dev_name.exit.i_crit_edge:             ; preds = %if.end.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %dev_name.exit.i

if.end.i27.i:                                     ; preds = %if.end.i36
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %19, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i27.i, %if.end.i36.dev_name.exit.i_crit_edge
  %retval.0.i28.i = phi ptr [ %23, %if.end.i27.i ], [ %21, %if.end.i36.dev_name.exit.i_crit_edge ]
  %call2.i = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %serdes_irq_name.i, i32 noundef 64, ptr noundef nonnull @.str.89, ptr noundef %retval.0.i28.i, i32 noundef %port) #16
  %reg_lock.i.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_unlock(ptr noundef %reg_lock.i.i) #16
  %call5.i = tail call i32 @request_threaded_irq(i32 noundef %call.i.i, ptr noundef null, ptr noundef nonnull @mv88e6xxx_serdes_irq_thread_fn, i32 noundef 8192, ptr noundef %serdes_irq_name.i, ptr noundef %arrayidx.i) #16
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i.i, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end8.i, label %dev_name.exit.i.cleanup_crit_edge

dev_name.exit.i.cleanup_crit_edge:                ; preds = %dev_name.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %dev_name.exit.i
  %serdes_irq.i = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port, i32 13
  %24 = ptrtoint ptr %serdes_irq.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %call.i.i, ptr %serdes_irq.i, align 8
  %25 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %chip, align 8
  %ops.i30.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %26, i32 0, i32 22
  %27 = ptrtoint ptr %ops.i30.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ops.i30.i, align 4
  %serdes_irq_enable.i.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %28, i32 0, i32 51
  %29 = ptrtoint ptr %serdes_irq_enable.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %serdes_irq_enable.i.i, align 4
  %tobool.not.i31.i = icmp eq ptr %30, null
  br i1 %tobool.not.i31.i, label %if.end8.i.cleanup_crit_edge, label %if.end.i33.i

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i33.i:                                     ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i32.i = tail call i32 %30(ptr noundef %chip, i32 noundef %port, i32 noundef %call.i, i1 noundef zeroext true) #16
  br label %cleanup

if.else:                                          ; preds = %if.end
  %serdes_irq.i38 = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port, i32 13
  %31 = ptrtoint ptr %serdes_irq.i38 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %serdes_irq.i38, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i39 = icmp eq i32 %32, 0
  br i1 %tobool.not.i39, label %if.else.if.end10_crit_edge, label %if.end.i44

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

if.end.i44:                                       ; preds = %if.else
  %arrayidx.i40 = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port
  %33 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %chip, align 8
  %ops.i.i41 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %34, i32 0, i32 22
  %35 = ptrtoint ptr %ops.i.i41 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ops.i.i41, align 4
  %serdes_irq_enable.i.i42 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %36, i32 0, i32 51
  %37 = ptrtoint ptr %serdes_irq_enable.i.i42 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %serdes_irq_enable.i.i42, align 4
  %tobool.not.i.i43 = icmp eq ptr %38, null
  br i1 %tobool.not.i.i43, label %if.end.i44.mv88e6xxx_serdes_irq_free.exit_crit_edge, label %if.end.i.i

if.end.i44.mv88e6xxx_serdes_irq_free.exit_crit_edge: ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_serdes_irq_free.exit

if.end.i.i:                                       ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i45 = tail call i32 %38(ptr noundef %chip, i32 noundef %port, i32 noundef %call.i, i1 noundef zeroext false) #16
  br label %mv88e6xxx_serdes_irq_free.exit

mv88e6xxx_serdes_irq_free.exit:                   ; preds = %if.end.i.i, %if.end.i44.mv88e6xxx_serdes_irq_free.exit_crit_edge
  %retval.0.i.i = phi i32 [ %call.i.i45, %if.end.i.i ], [ -95, %if.end.i44.mv88e6xxx_serdes_irq_free.exit_crit_edge ]
  %reg_lock.i.i46 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 4
  tail call void @mutex_unlock(ptr noundef %reg_lock.i.i46) #16
  %call1.i = tail call ptr @free_irq(i32 noundef %32, ptr noundef %arrayidx.i40) #16
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i.i46, i32 noundef 0) #16
  %39 = ptrtoint ptr %serdes_irq.i38 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %serdes_irq.i38, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i.i)
  %tobool8.not = icmp eq i32 %retval.0.i.i, 0
  br i1 %tobool8.not, label %mv88e6xxx_serdes_irq_free.exit.if.end10_crit_edge, label %mv88e6xxx_serdes_irq_free.exit.cleanup_crit_edge

mv88e6xxx_serdes_irq_free.exit.cleanup_crit_edge: ; preds = %mv88e6xxx_serdes_irq_free.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

mv88e6xxx_serdes_irq_free.exit.if.end10_crit_edge: ; preds = %mv88e6xxx_serdes_irq_free.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

if.end10:                                         ; preds = %mv88e6xxx_serdes_irq_free.exit.if.end10_crit_edge, %if.else.if.end10_crit_edge
  %40 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %chip, align 8
  %ops.i48 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %41, i32 0, i32 22
  %42 = ptrtoint ptr %ops.i48 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ops.i48, align 4
  %serdes_power.i49 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %43, i32 0, i32 44
  %44 = ptrtoint ptr %serdes_power.i49 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %serdes_power.i49, align 4
  %tobool.not.i50 = icmp eq ptr %45, null
  br i1 %tobool.not.i50, label %if.end10.cleanup_crit_edge, label %if.end.i52

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i52:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  %call.i51 = tail call i32 %45(ptr noundef %chip, i32 noundef %port, i32 noundef %call.i, i1 noundef zeroext false) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i52, %if.end10.cleanup_crit_edge, %mv88e6xxx_serdes_irq_free.exit.cleanup_crit_edge, %if.end.i33.i, %if.end8.i.cleanup_crit_edge, %dev_name.exit.i.cleanup_crit_edge, %mv88e6xxx_serdes_irq_mapping.exit.i.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %mv88e6xxx_serdes_power_up.exit.cleanup_crit_edge, %if.then1.cleanup_crit_edge, %mv88e6xxx_serdes_get_lane.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %mv88e6xxx_serdes_get_lane.exit.cleanup_crit_edge ], [ %call.i32, %mv88e6xxx_serdes_power_up.exit.cleanup_crit_edge ], [ %retval.0.i.i, %mv88e6xxx_serdes_irq_free.exit.cleanup_crit_edge ], [ 0, %mv88e6xxx_serdes_irq_mapping.exit.i.cleanup_crit_edge ], [ %call5.i, %dev_name.exit.i.cleanup_crit_edge ], [ %call.i32.i, %if.end.i33.i ], [ -95, %if.end8.i.cleanup_crit_edge ], [ 0, %if.end5.cleanup_crit_edge ], [ %call.i51, %if.end.i52 ], [ -95, %if.end10.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ -95, %if.then1.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @mv88e6xxx_serdes_irq_thread_fn(i32 noundef %irq, ptr nocapture noundef readonly %dev_id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_id, align 8
  %port2 = getelementptr inbounds %struct.mv88e6xxx_port, ptr %dev_id, i32 0, i32 1
  %2 = ptrtoint ptr %port2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %port2, align 4
  %reg_lock.i = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %1, i32 0, i32 4
  tail call void @mutex_lock_nested(ptr noundef %reg_lock.i, i32 noundef 0) #16
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %1, align 8
  %ops.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ops.i, align 4
  %serdes_get_lane.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %7, i32 0, i32 45
  %8 = ptrtoint ptr %serdes_get_lane.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %serdes_get_lane.i, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %mv88e6xxx_serdes_get_lane.exit

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

mv88e6xxx_serdes_get_lane.exit:                   ; preds = %entry
  %call.i = tail call i32 %9(ptr noundef %1, i32 noundef %3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call.i)
  %cmp = icmp sgt i32 %call.i, -1
  br i1 %cmp, label %if.then, label %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge

mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge:  ; preds = %mv88e6xxx_serdes_get_lane.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %mv88e6xxx_serdes_get_lane.exit
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 8
  %ops.i10 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %11, i32 0, i32 22
  %12 = ptrtoint ptr %ops.i10 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ops.i10, align 4
  %serdes_irq_status.i = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %13, i32 0, i32 52
  %14 = ptrtoint ptr %serdes_irq_status.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %serdes_irq_status.i, align 4
  %tobool.not.i11 = icmp eq ptr %15, null
  br i1 %tobool.not.i11, label %if.then.if.end_crit_edge, label %if.end.i13

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i13:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call.i12 = tail call i32 %15(ptr noundef %1, i32 noundef %3, i32 noundef %call.i) #16
  br label %if.end

if.end:                                           ; preds = %if.end.i13, %if.then.if.end_crit_edge, %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ 0, %mv88e6xxx_serdes_get_lane.exit.if.end_crit_edge ], [ %call.i12, %if.end.i13 ], [ 0, %if.then.if.end_crit_edge ], [ 0, %entry.if.end_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %reg_lock.i) #16
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @free_irq(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_bridge_map(ptr noundef %chip, [4 x i32] %bridge.coerce) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bridge.coerce.fca.0.extract = extractvalue [4 x i32] %bridge.coerce, 0
  %0 = inttoptr i32 %bridge.coerce.fca.0.extract to ptr
  %ds1 = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %1 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ds1, align 8
  %dst2 = getelementptr inbounds %struct.dsa_switch, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %dst2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dst2, align 4
  %ports = getelementptr inbounds %struct.dsa_switch_tree, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn39 = load ptr, ptr %ports, align 4
  %cmp.not40 = icmp eq ptr %.pn39, %ports
  br i1 %cmp.not40, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn41 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn39, %entry.for.body_crit_edge ]
  %bridge.i.i = getelementptr i8, ptr %.pn41, i32 -396
  %6 = ptrtoint ptr %bridge.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bridge.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i.i, label %for.body.dsa_port_offloads_bridge.exit_crit_edge, label %cond.true.i.i

for.body.dsa_port_offloads_bridge.exit_crit_edge: ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_port_offloads_bridge.exit

cond.true.i.i:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  br label %dsa_port_offloads_bridge.exit

dsa_port_offloads_bridge.exit:                    ; preds = %cond.true.i.i, %for.body.dsa_port_offloads_bridge.exit_crit_edge
  %cond.i.i = phi ptr [ %9, %cond.true.i.i ], [ null, %for.body.dsa_port_offloads_bridge.exit_crit_edge ]
  %cmp.i = icmp eq ptr %cond.i.i, %0
  br i1 %cmp.i, label %if.then, label %dsa_port_offloads_bridge.exit.for.inc_crit_edge

dsa_port_offloads_bridge.exit.for.inc_crit_edge:  ; preds = %dsa_port_offloads_bridge.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then:                                          ; preds = %dsa_port_offloads_bridge.exit
  %ds4 = getelementptr i8, ptr %.pn41, i32 -432
  %10 = ptrtoint ptr %ds4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ds4, align 4
  %cmp5 = icmp eq ptr %11, %2
  br i1 %cmp5, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.then
  %index = getelementptr i8, ptr %.pn41, i32 -428
  %12 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %index, align 4
  %14 = ptrtoint ptr %ds1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ds1, align 8
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %15, i32 0, i32 2
  %16 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index.i, align 4
  %call.i = tail call fastcc zeroext i16 @mv88e6xxx_port_vlan(ptr noundef %chip, i32 noundef %17, i32 noundef %13) #16
  %shl.i = shl nuw i32 1, %13
  %18 = trunc i32 %shl.i to i16
  %19 = xor i16 %18, -1
  %conv1.i = and i16 %call.i, %19
  %call2.i = tail call i32 @mv88e6xxx_port_set_vlan_map(ptr noundef %chip, i32 noundef %13, i16 noundef zeroext %conv1.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not = icmp eq i32 %call2.i, 0
  br i1 %tobool.not, label %if.then6.for.inc_crit_edge, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then6.for.inc_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.else:                                          ; preds = %if.then
  %index10 = getelementptr inbounds %struct.dsa_switch, ptr %11, i32 0, i32 2
  %20 = ptrtoint ptr %index10 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %index10, align 4
  %index11 = getelementptr i8, ptr %.pn41, i32 -428
  %22 = ptrtoint ptr %index11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %index11, align 4
  %call12 = tail call fastcc i32 @mv88e6xxx_pvt_map(ptr noundef %chip, i32 noundef %21, i32 noundef %23)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.else.for.inc_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.else.for.inc_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %if.else.for.inc_crit_edge, %if.then6.for.inc_crit_edge, %dsa_port_offloads_bridge.exit.for.inc_crit_edge
  %24 = ptrtoint ptr %.pn41 to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn = load ptr, ptr %.pn41, align 4
  %cmp.not = icmp eq ptr %.pn, %ports
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ %call12, %if.else.cleanup_crit_edge ], [ %call2.i, %if.then6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_port_commit_pvid(ptr noundef %chip, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ds = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 2
  %0 = ptrtoint ptr %ds to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ds, align 8
  %dst1.i = getelementptr inbounds %struct.dsa_switch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst1.i, align 4
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn20.i = load ptr, ptr %ports.i, align 4
  %cmp.not21.i = icmp eq ptr %.pn20.i, %ports.i
  br i1 %cmp.not21.i, label %entry.dsa_to_port.exit_crit_edge, label %entry.for.body.i_crit_edge

entry.for.body.i_crit_edge:                       ; preds = %entry
  br label %for.body.i

entry.dsa_to_port.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %entry.for.body.i_crit_edge
  %.pn22.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn20.i, %entry.for.body.i_crit_edge ]
  %ds3.i = getelementptr i8, ptr %.pn22.i, i32 -432
  %5 = ptrtoint ptr %ds3.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ds3.i, align 4
  %cmp4.i = icmp eq ptr %6, %1
  br i1 %cmp4.i, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %index.i = getelementptr i8, ptr %.pn22.i, i32 -428
  %7 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %index.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %port)
  %cmp5.i = icmp eq i32 %8, %port
  br i1 %cmp5.i, label %cleanup.split.loop.exit18.i, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

for.inc.i:                                        ; preds = %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %9 = ptrtoint ptr %.pn22.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn.i = load ptr, ptr %.pn22.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp.not.i, label %for.inc.i.dsa_to_port.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.dsa_to_port.exit_crit_edge:             ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_to_port.exit

cleanup.split.loop.exit18.i:                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %dp.0.le.i = getelementptr i8, ptr %.pn22.i, i32 -448
  br label %dsa_to_port.exit

dsa_to_port.exit:                                 ; preds = %cleanup.split.loop.exit18.i, %for.inc.i.dsa_to_port.exit_crit_edge, %entry.dsa_to_port.exit_crit_edge
  %retval.0.i = phi ptr [ %dp.0.le.i, %cleanup.split.loop.exit18.i ], [ null, %entry.dsa_to_port.exit_crit_edge ], [ null, %for.inc.i.dsa_to_port.exit_crit_edge ]
  %bridge.i = getelementptr inbounds %struct.dsa_port, ptr %retval.0.i, i32 0, i32 14
  %10 = ptrtoint ptr %bridge.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bridge.i, align 4
  %tobool.not.i = icmp eq ptr %11, null
  br i1 %tobool.not.i, label %dsa_to_port.exit.if.end6_crit_edge, label %dsa_port_bridge_dev_get.exit

dsa_to_port.exit.if.end6_crit_edge:               ; preds = %dsa_to_port.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

dsa_port_bridge_dev_get.exit:                     ; preds = %dsa_to_port.exit
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %dsa_port_bridge_dev_get.exit.if.end6_crit_edge, label %if.then

dsa_port_bridge_dev_get.exit.if.end6_crit_edge:   ; preds = %dsa_port_bridge_dev_get.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then:                                          ; preds = %dsa_port_bridge_dev_get.exit
  %call2 = tail call zeroext i1 @br_vlan_enabled(ptr noundef nonnull %13) #16
  br i1 %call2, label %if.then3, label %if.then.if.end6_crit_edge

if.then.if.end6_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %bridge_pvid = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port, i32 2
  %14 = ptrtoint ptr %bridge_pvid to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %bridge_pvid, align 8
  %valid = getelementptr %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 46, i32 %port, i32 2, i32 1
  %16 = ptrtoint ptr %valid to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %valid, align 2, !range !351
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool5.not = icmp eq i8 %17, 0
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.then.if.end6_crit_edge, %dsa_port_bridge_dev_get.exit.if.end6_crit_edge, %dsa_to_port.exit.if.end6_crit_edge
  %pvid.0 = phi i16 [ %15, %if.then3 ], [ 0, %dsa_port_bridge_dev_get.exit.if.end6_crit_edge ], [ 4095, %if.then.if.end6_crit_edge ], [ 0, %dsa_to_port.exit.if.end6_crit_edge ]
  %drop_untagged.0.off0 = phi i1 [ %tobool5.not, %if.then3 ], [ false, %dsa_port_bridge_dev_get.exit.if.end6_crit_edge ], [ false, %if.then.if.end6_crit_edge ], [ false, %dsa_to_port.exit.if.end6_crit_edge ]
  %call7 = tail call i32 @mv88e6xxx_port_set_pvid(ptr noundef %chip, i32 noundef %port, i16 noundef zeroext %pvid.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %if.end6.cleanup_crit_edge

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  %call12 = tail call i32 @mv88e6xxx_port_drop_untagged(ptr noundef %chip, i32 noundef %port, i1 noundef zeroext %drop_untagged.0.off0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end6.cleanup_crit_edge
  %retval.0 = phi i32 [ %call12, %if.end10 ], [ %call7, %if.end6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @br_vlan_enabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_pvid(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_drop_untagged(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g1_atu_remove(ptr noundef, i16 noundef zeroext, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_assoc_vector(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @dsa_flush_workqueue() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_get_pvid(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_get_next(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_policy_apply(ptr noundef %chip, i32 noundef %port, ptr nocapture noundef readonly %policy) unnamed_addr #0 align 64 {
entry:
  %id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %policy to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %policy, align 8
  %action2 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %policy, i32 0, i32 1
  %2 = ptrtoint ptr %action2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %action2, align 4
  %addr3 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %policy, i32 0, i32 3
  %vid4 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %policy, i32 0, i32 5
  %4 = ptrtoint ptr %vid4 to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %vid4, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %id) #16
  %6 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -1, ptr %id, align 4, !annotation !350
  %7 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %chip, align 8
  %ops = getelementptr inbounds %struct.mv88e6xxx_info, ptr %8, i32 0, i32 22
  %9 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ops, align 4
  %port_set_policy = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %10, i32 0, i32 20
  %11 = ptrtoint ptr %port_set_policy to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %port_set_policy, align 4
  %tobool.not = icmp ne ptr %12, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %switch = icmp ult i32 %1, 2
  %or.cond = select i1 %tobool.not, i1 %switch, i1 false
  br i1 %or.cond, label %sw.bb, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %entry
  %13 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.136)
  switch i32 %3, label %sw.bb.cleanup_crit_edge [
    i32 0, label %if.end16
    i32 3, label %if.end16.thread
  ]

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %sw.bb
  %call17 = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %chip, i32 noundef %port, ptr noundef %addr3, i16 noundef zeroext %5, i8 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp eq i32 %call17, 0
  br i1 %tobool18.not, label %for.cond.preheader, label %if.end16.cleanup_crit_edge

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16.thread:                                  ; preds = %sw.bb
  %14 = ptrtoint ptr %addr3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %addr3, align 4
  %16 = and i32 %15, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.i.not = icmp eq i32 %16, 0
  %spec.select = select i1 %tobool.i.not, i8 8, i8 4
  %call1772 = tail call fastcc i32 @mv88e6xxx_port_db_load_purge(ptr noundef %chip, i32 noundef %port, ptr noundef %addr3, i16 noundef zeroext %5, i8 noundef zeroext %spec.select)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1772)
  %tobool18.not73 = icmp eq i32 %call1772, 0
  br i1 %tobool18.not73, label %if.end16.thread.if.end35_crit_edge, label %if.end16.thread.cleanup_crit_edge

if.end16.thread.cleanup_crit_edge:                ; preds = %if.end16.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16.thread.if.end35_crit_edge:               ; preds = %if.end16.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

for.cond.preheader:                               ; preds = %if.end16
  %policies = getelementptr inbounds %struct.mv88e6xxx_chip, ptr %chip, i32 0, i32 17
  %17 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %id, align 4
  %call2368 = call ptr @idr_get_next(ptr noundef %policies, ptr noundef nonnull %id) #16
  %cmp24.not69 = icmp eq ptr %call2368, null
  br i1 %cmp24.not69, label %for.cond.preheader.if.end35_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.if.end35_crit_edge:            ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %call2370 = phi ptr [ %call23, %for.inc.for.body_crit_edge ], [ %call2368, %for.cond.preheader.for.body_crit_edge ]
  %port25 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call2370, i32 0, i32 4
  %18 = ptrtoint ptr %port25 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %port25, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %19, i32 %port)
  %cmp26 = icmp eq i32 %19, %port
  br i1 %cmp26, label %land.lhs.true27, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true27:                                  ; preds = %for.body
  %20 = ptrtoint ptr %call2370 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %call2370, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %1)
  %cmp29 = icmp eq i32 %21, %1
  br i1 %cmp29, label %land.lhs.true30, label %land.lhs.true27.for.inc_crit_edge

land.lhs.true27.for.inc_crit_edge:                ; preds = %land.lhs.true27
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true30:                                  ; preds = %land.lhs.true27
  %action31 = getelementptr inbounds %struct.mv88e6xxx_policy, ptr %call2370, i32 0, i32 1
  %22 = ptrtoint ptr %action31 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %action31, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp32.not = icmp eq i32 %23, 0
  br i1 %cmp32.not, label %land.lhs.true30.for.inc_crit_edge, label %land.lhs.true30.cleanup_crit_edge

land.lhs.true30.cleanup_crit_edge:                ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true30.for.inc_crit_edge:                ; preds = %land.lhs.true30
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true30.for.inc_crit_edge, %land.lhs.true27.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %24 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %id, align 4
  %add = add i32 %25, 1
  store i32 %add, ptr %id, align 4
  %call23 = call ptr @idr_get_next(ptr noundef %policies, ptr noundef nonnull %id) #16
  %cmp24.not = icmp eq ptr %call23, null
  br i1 %cmp24.not, label %for.inc.if.end35_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.if.end35_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end35

if.end35:                                         ; preds = %for.inc.if.end35_crit_edge, %for.cond.preheader.if.end35_crit_edge, %if.end16.thread.if.end35_crit_edge
  %26 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %chip, align 8
  %ops37 = getelementptr inbounds %struct.mv88e6xxx_info, ptr %27, i32 0, i32 22
  %28 = ptrtoint ptr %ops37 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ops37, align 4
  %port_set_policy38 = getelementptr inbounds %struct.mv88e6xxx_ops, ptr %29, i32 0, i32 20
  %30 = ptrtoint ptr %port_set_policy38 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %port_set_policy38, align 4
  %call39 = call i32 %31(ptr noundef %chip, i32 noundef %port, i32 noundef %1, i32 noundef %3) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %land.lhs.true30.cleanup_crit_edge, %if.end16.thread.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call39, %if.end35 ], [ -95, %entry.cleanup_crit_edge ], [ %call17, %if.end16.cleanup_crit_edge ], [ %call1772, %if.end16.thread.cleanup_crit_edge ], [ -95, %sw.bb.cleanup_crit_edge ], [ 0, %land.lhs.true30.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %id) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devm_kfree(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc_u32(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_mirror(ptr noundef, i32 noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_lag_sync_masks(ptr noundef readonly %ds) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 8
  %num_ports.i = getelementptr inbounds %struct.mv88e6xxx_info, ptr %3, i32 0, i32 5
  %4 = ptrtoint ptr %num_ports.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_ports.i, align 4
  %notmask = shl nsw i32 -1, %5
  %6 = trunc i32 %notmask to i16
  %conv = xor i16 %6, -1
  %dst = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %7 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dst, align 4
  %ports = getelementptr inbounds %struct.dsa_switch_tree, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn177 = load ptr, ptr %ports, align 4
  %cmp.not178 = icmp eq ptr %.pn177, %ports
  br i1 %cmp.not178, label %entry.for.cond15.preheader_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.cond15.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond15.preheader

for.cond15.preheader:                             ; preds = %for.inc.for.cond15.preheader_crit_edge, %entry.for.cond15.preheader_crit_edge
  %ivec.0.lcssa = phi i16 [ %conv, %entry.for.cond15.preheader_crit_edge ], [ %ivec.1, %for.inc.for.cond15.preheader_crit_edge ]
  %lags_len = getelementptr inbounds %struct.dsa_switch_tree, ptr %8, i32 0, i32 11
  %10 = ptrtoint ptr %lags_len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %lags_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp23192.not = icmp eq i32 %11, 0
  br i1 %cmp23192.not, label %for.cond15.preheader.for.cond112.preheader_crit_edge, label %for.body25.lr.ph

for.cond15.preheader.for.cond112.preheader_crit_edge: ; preds = %for.cond15.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond112.preheader

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn180 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn177, %entry.for.body_crit_edge ]
  %ivec.0179 = phi i16 [ %ivec.1, %for.inc.for.body_crit_edge ], [ %conv, %entry.for.body_crit_edge ]
  %lag_dev = getelementptr i8, ptr %.pn180, i32 -8
  %12 = ptrtoint ptr %lag_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %lag_dev, align 4
  %tobool.not = icmp eq ptr %13, null
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %lor.lhs.false

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %ds4 = getelementptr i8, ptr %.pn180, i32 -432
  %14 = ptrtoint ptr %ds4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ds4, align 4
  %cmp5.not = icmp eq ptr %15, %ds
  br i1 %cmp5.not, label %if.end, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  %index = getelementptr i8, ptr %.pn180, i32 -428
  %16 = ptrtoint ptr %index to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %index, align 4
  %shl7 = shl nuw i32 1, %17
  %18 = trunc i32 %shl7 to i16
  %19 = xor i16 %18, -1
  %conv9 = and i16 %ivec.0179, %19
  br label %for.inc

for.inc:                                          ; preds = %if.end, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %ivec.1 = phi i16 [ %ivec.0179, %lor.lhs.false.for.inc_crit_edge ], [ %conv9, %if.end ], [ %ivec.0179, %for.body.for.inc_crit_edge ]
  %20 = ptrtoint ptr %.pn180 to i32
  call void @__asan_load4_noabort(i32 %20)
  %.pn = load ptr, ptr %.pn180, align 4
  %cmp.not = icmp eq ptr %.pn, %ports
  br i1 %cmp.not, label %for.inc.for.cond15.preheader_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.cond15.preheader_crit_edge:           ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond15.preheader

for.body25.lr.ph:                                 ; preds = %for.cond15.preheader
  %lags = getelementptr inbounds %struct.dsa_switch_tree, ptr %8, i32 0, i32 5
  %21 = ptrtoint ptr %lags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %lags, align 4
  %23 = ptrtoint ptr %lags_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %lags_len, align 4
  br label %for.body25

for.cond112.preheader:                            ; preds = %for.inc109.for.cond112.preheader_crit_edge, %for.cond15.preheader.for.cond112.preheader_crit_edge
  %mask.sroa.37.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.37.5, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.32.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.32.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.27.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.27.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.22.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.22.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.17.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.17.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.12.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.12.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.7.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.7.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %mask.sroa.0.0 = phi i16 [ %ivec.0.lcssa, %for.cond15.preheader.for.cond112.preheader_crit_edge ], [ %mask.sroa.0.6, %for.inc109.for.cond112.preheader_crit_edge ]
  %call117 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 0, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.0.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117)
  %tobool118.not = icmp eq i32 %call117, 0
  br i1 %tobool118.not, label %for.cond112, label %for.cond112.preheader.cleanup_crit_edge

for.cond112.preheader.cleanup_crit_edge:          ; preds = %for.cond112.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body25:                                       ; preds = %for.inc109.for.body25_crit_edge, %for.body25.lr.ph
  %mask.sroa.37.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.37.5, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.32.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.32.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.27.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.27.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.22.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.22.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.17.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.17.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.12.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.12.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.7.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.7.6, %for.inc109.for.body25_crit_edge ]
  %mask.sroa.0.1 = phi i16 [ %ivec.0.lcssa, %for.body25.lr.ph ], [ %mask.sroa.0.6, %for.inc109.for.body25_crit_edge ]
  %id.0193 = phi i32 [ 0, %for.body25.lr.ph ], [ %inc110, %for.inc109.for.body25_crit_edge ]
  %arrayidx27 = getelementptr ptr, ptr %22, i32 %id.0193
  %25 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx27, align 4
  %tobool28.not = icmp eq ptr %26, null
  br i1 %tobool28.not, label %for.body25.for.inc109_crit_edge, label %for.cond41.preheader

for.body25.for.inc109_crit_edge:                  ; preds = %for.body25
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc109

for.cond41.preheader:                             ; preds = %for.body25
  %27 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn175182 = load ptr, ptr %ports, align 4
  %cmp45.not183 = icmp eq ptr %.pn175182, %ports
  br i1 %cmp45.not183, label %for.cond41.preheader.for.inc109_crit_edge, label %for.cond41.preheader.for.body48_crit_edge

for.cond41.preheader.for.body48_crit_edge:        ; preds = %for.cond41.preheader
  br label %for.body48

for.cond41.preheader.for.inc109_crit_edge:        ; preds = %for.cond41.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc109

for.body48:                                       ; preds = %for.inc58.for.body48_crit_edge, %for.cond41.preheader.for.body48_crit_edge
  %.pn175185 = phi ptr [ %.pn175, %for.inc58.for.body48_crit_edge ], [ %.pn175182, %for.cond41.preheader.for.body48_crit_edge ]
  %num_tx.0184 = phi i32 [ %num_tx.1, %for.inc58.for.body48_crit_edge ], [ 0, %for.cond41.preheader.for.body48_crit_edge ]
  %lag_dev49 = getelementptr i8, ptr %.pn175185, i32 -8
  %28 = ptrtoint ptr %lag_dev49 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %lag_dev49, align 4
  %cmp50 = icmp eq ptr %29, %26
  br i1 %cmp50, label %if.then52, label %for.body48.for.inc58_crit_edge

for.body48.for.inc58_crit_edge:                   ; preds = %for.body48
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc58

if.then52:                                        ; preds = %for.body48
  call void @__sanitizer_cov_trace_pc() #18
  %lag_tx_enabled = getelementptr i8, ptr %.pn175185, i32 -405
  %30 = ptrtoint ptr %lag_tx_enabled to i32
  call void @__asan_load1_noabort(i32 %30)
  %bf.load = load i8, ptr %lag_tx_enabled, align 1
  %31 = lshr i8 %bf.load, 5
  %.lobit = and i8 %31, 1
  %32 = zext i8 %.lobit to i32
  %spec.select = add i32 %num_tx.0184, %32
  br label %for.inc58

for.inc58:                                        ; preds = %if.then52, %for.body48.for.inc58_crit_edge
  %num_tx.1 = phi i32 [ %num_tx.0184, %for.body48.for.inc58_crit_edge ], [ %spec.select, %if.then52 ]
  %33 = ptrtoint ptr %.pn175185 to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn175 = load ptr, ptr %.pn175185, align 4
  %cmp45.not = icmp eq ptr %.pn175, %ports
  br i1 %cmp45.not, label %for.end64, label %for.inc58.for.body48_crit_edge

for.inc58.for.body48_crit_edge:                   ; preds = %for.inc58
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body48

for.end64:                                        ; preds = %for.inc58
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_tx.1)
  %tobool65.not = icmp eq i32 %num_tx.1, 0
  br i1 %tobool65.not, label %for.end64.for.inc109_crit_edge, label %for.cond74.preheader

for.end64.for.inc109_crit_edge:                   ; preds = %for.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc109

for.cond74.preheader:                             ; preds = %for.end64
  %34 = ptrtoint ptr %ports to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn176187 = load ptr, ptr %ports, align 4
  %cmp78.not188 = icmp eq ptr %.pn176187, %ports
  br i1 %cmp78.not188, label %for.cond74.preheader.for.inc109_crit_edge, label %for.body81.lr.ph

for.cond74.preheader.for.inc109_crit_edge:        ; preds = %for.cond74.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc109

for.body81.lr.ph:                                 ; preds = %for.cond74.preheader
  %35 = tail call i32 @llvm.smin.i32(i32 %num_tx.1, i32 8) #16
  %sub.i = add nsw i32 %35, -1
  br label %for.body81

for.body81:                                       ; preds = %for.inc101.for.body81_crit_edge, %for.body81.lr.ph
  %mask.sroa.37.2 = phi i16 [ %mask.sroa.37.1, %for.body81.lr.ph ], [ %mask.sroa.37.4, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.32.2 = phi i16 [ %mask.sroa.32.1, %for.body81.lr.ph ], [ %mask.sroa.32.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.27.2 = phi i16 [ %mask.sroa.27.1, %for.body81.lr.ph ], [ %mask.sroa.27.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.22.2 = phi i16 [ %mask.sroa.22.1, %for.body81.lr.ph ], [ %mask.sroa.22.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.17.2 = phi i16 [ %mask.sroa.17.1, %for.body81.lr.ph ], [ %mask.sroa.17.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.12.2 = phi i16 [ %mask.sroa.12.1, %for.body81.lr.ph ], [ %mask.sroa.12.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.7.2 = phi i16 [ %mask.sroa.7.1, %for.body81.lr.ph ], [ %mask.sroa.7.5, %for.inc101.for.body81_crit_edge ]
  %mask.sroa.0.2 = phi i16 [ %mask.sroa.0.1, %for.body81.lr.ph ], [ %mask.sroa.0.5, %for.inc101.for.body81_crit_edge ]
  %.pn176191 = phi ptr [ %.pn176187, %for.body81.lr.ph ], [ %.pn176, %for.inc101.for.body81_crit_edge ]
  %nth.0189 = phi i32 [ 0, %for.body81.lr.ph ], [ %nth.1, %for.inc101.for.body81_crit_edge ]
  %lag_dev82 = getelementptr i8, ptr %.pn176191, i32 -8
  %36 = ptrtoint ptr %lag_dev82 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %lag_dev82, align 4
  %cmp83 = icmp eq ptr %37, %26
  br i1 %cmp83, label %if.then85, label %for.body81.for.inc101_crit_edge

for.body81.for.inc101_crit_edge:                  ; preds = %for.body81
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc101

if.then85:                                        ; preds = %for.body81
  %lag_tx_enabled86 = getelementptr i8, ptr %.pn176191, i32 -405
  %38 = ptrtoint ptr %lag_tx_enabled86 to i32
  call void @__asan_load1_noabort(i32 %38)
  %bf.load87 = load i8, ptr %lag_tx_enabled86, align 1
  %39 = and i8 %bf.load87, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %39)
  %tobool90.not = icmp eq i8 %39, 0
  br i1 %tobool90.not, label %if.then85.for.inc101_crit_edge, label %if.end92

if.then85.for.inc101_crit_edge:                   ; preds = %if.then85
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc101

if.end92:                                         ; preds = %if.then85
  %ds93 = getelementptr i8, ptr %.pn176191, i32 -432
  %40 = ptrtoint ptr %ds93 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ds93, align 4
  %cmp94 = icmp eq ptr %41, %ds
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %nth.0189)
  %cmp1.i = icmp sgt i32 %35, %nth.0189
  %or.cond = select i1 %cmp94, i1 %cmp1.i, i1 false
  br i1 %or.cond, label %if.end.i, label %if.end92.if.end98_crit_edge

if.end92.if.end98_crit_edge:                      ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end98

if.end.i:                                         ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #18
  %index97 = getelementptr i8, ptr %.pn176191, i32 -428
  %42 = ptrtoint ptr %index97 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %index97, align 4
  %arrayidx2.i = getelementptr [8 x [8 x i8]], ptr @mv88e6xxx_lag_mask_table, i32 0, i32 %sub.i, i32 %nth.0189
  %44 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx2.i, align 1
  %phi.cast.i = zext i8 %45 to i32
  %shl5.i = shl nuw i32 1, %43
  %46 = trunc i32 %shl5.i to i16
  %and.i = and i32 %phi.cast.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %conv8.i = select i1 %tobool.not.i, i16 0, i16 %46
  %spec.select205 = or i16 %mask.sroa.0.2, %conv8.i
  %and.1.i = and i32 %phi.cast.i, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1.i)
  %tobool.not.1.i = icmp eq i32 %and.1.i, 0
  %conv8.1.i = select i1 %tobool.not.1.i, i16 0, i16 %46
  %mask.sroa.7.3 = or i16 %mask.sroa.7.2, %conv8.1.i
  %and.2.i = and i32 %phi.cast.i, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2.i)
  %tobool.not.2.i = icmp eq i32 %and.2.i, 0
  %conv8.2.i = select i1 %tobool.not.2.i, i16 0, i16 %46
  %mask.sroa.12.3 = or i16 %mask.sroa.12.2, %conv8.2.i
  %and.3.i = and i32 %phi.cast.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3.i)
  %tobool.not.3.i = icmp eq i32 %and.3.i, 0
  %conv8.3.i = select i1 %tobool.not.3.i, i16 0, i16 %46
  %mask.sroa.17.3 = or i16 %mask.sroa.17.2, %conv8.3.i
  %and.4.i = and i32 %phi.cast.i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4.i)
  %tobool.not.4.i = icmp eq i32 %and.4.i, 0
  %conv8.4.i = select i1 %tobool.not.4.i, i16 0, i16 %46
  %mask.sroa.22.3 = or i16 %mask.sroa.22.2, %conv8.4.i
  %and.5.i = and i32 %phi.cast.i, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.5.i)
  %tobool.not.5.i = icmp eq i32 %and.5.i, 0
  %conv8.5.i = select i1 %tobool.not.5.i, i16 0, i16 %46
  %mask.sroa.27.3 = or i16 %mask.sroa.27.2, %conv8.5.i
  %and.6.i = and i32 %phi.cast.i, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.6.i)
  %tobool.not.6.i = icmp eq i32 %and.6.i, 0
  %conv8.6.i = select i1 %tobool.not.6.i, i16 0, i16 %46
  %mask.sroa.32.3 = or i16 %mask.sroa.32.2, %conv8.6.i
  %and.7.i = and i32 %phi.cast.i, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.7.i)
  %tobool.not.7.i = icmp eq i32 %and.7.i, 0
  %conv8.7.i = select i1 %tobool.not.7.i, i16 0, i16 %46
  %spec.select207 = or i16 %mask.sroa.37.2, %conv8.7.i
  br label %if.end98

if.end98:                                         ; preds = %if.end.i, %if.end92.if.end98_crit_edge
  %mask.sroa.37.3 = phi i16 [ %mask.sroa.37.2, %if.end92.if.end98_crit_edge ], [ %spec.select207, %if.end.i ]
  %mask.sroa.32.4 = phi i16 [ %mask.sroa.32.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.32.3, %if.end.i ]
  %mask.sroa.27.4 = phi i16 [ %mask.sroa.27.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.27.3, %if.end.i ]
  %mask.sroa.22.4 = phi i16 [ %mask.sroa.22.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.22.3, %if.end.i ]
  %mask.sroa.17.4 = phi i16 [ %mask.sroa.17.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.17.3, %if.end.i ]
  %mask.sroa.12.4 = phi i16 [ %mask.sroa.12.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.12.3, %if.end.i ]
  %mask.sroa.7.4 = phi i16 [ %mask.sroa.7.2, %if.end92.if.end98_crit_edge ], [ %mask.sroa.7.3, %if.end.i ]
  %mask.sroa.0.4 = phi i16 [ %mask.sroa.0.2, %if.end92.if.end98_crit_edge ], [ %spec.select205, %if.end.i ]
  %inc99 = add i32 %nth.0189, 1
  br label %for.inc101

for.inc101:                                       ; preds = %if.end98, %if.then85.for.inc101_crit_edge, %for.body81.for.inc101_crit_edge
  %mask.sroa.37.4 = phi i16 [ %mask.sroa.37.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.37.3, %if.end98 ], [ %mask.sroa.37.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.32.5 = phi i16 [ %mask.sroa.32.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.32.4, %if.end98 ], [ %mask.sroa.32.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.27.5 = phi i16 [ %mask.sroa.27.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.27.4, %if.end98 ], [ %mask.sroa.27.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.22.5 = phi i16 [ %mask.sroa.22.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.22.4, %if.end98 ], [ %mask.sroa.22.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.17.5 = phi i16 [ %mask.sroa.17.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.17.4, %if.end98 ], [ %mask.sroa.17.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.12.5 = phi i16 [ %mask.sroa.12.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.12.4, %if.end98 ], [ %mask.sroa.12.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.7.5 = phi i16 [ %mask.sroa.7.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.7.4, %if.end98 ], [ %mask.sroa.7.2, %for.body81.for.inc101_crit_edge ]
  %mask.sroa.0.5 = phi i16 [ %mask.sroa.0.2, %if.then85.for.inc101_crit_edge ], [ %mask.sroa.0.4, %if.end98 ], [ %mask.sroa.0.2, %for.body81.for.inc101_crit_edge ]
  %nth.1 = phi i32 [ %nth.0189, %if.then85.for.inc101_crit_edge ], [ %inc99, %if.end98 ], [ %nth.0189, %for.body81.for.inc101_crit_edge ]
  %47 = ptrtoint ptr %.pn176191 to i32
  call void @__asan_load4_noabort(i32 %47)
  %.pn176 = load ptr, ptr %.pn176191, align 4
  %cmp78.not = icmp eq ptr %.pn176, %ports
  br i1 %cmp78.not, label %for.inc101.for.inc109_crit_edge, label %for.inc101.for.body81_crit_edge

for.inc101.for.body81_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body81

for.inc101.for.inc109_crit_edge:                  ; preds = %for.inc101
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc109

for.inc109:                                       ; preds = %for.inc101.for.inc109_crit_edge, %for.cond74.preheader.for.inc109_crit_edge, %for.end64.for.inc109_crit_edge, %for.cond41.preheader.for.inc109_crit_edge, %for.body25.for.inc109_crit_edge
  %mask.sroa.37.5 = phi i16 [ %mask.sroa.37.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.37.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.37.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.37.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.37.4, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.32.6 = phi i16 [ %mask.sroa.32.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.32.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.32.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.32.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.32.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.27.6 = phi i16 [ %mask.sroa.27.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.27.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.27.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.27.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.27.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.22.6 = phi i16 [ %mask.sroa.22.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.22.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.22.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.22.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.22.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.17.6 = phi i16 [ %mask.sroa.17.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.17.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.17.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.17.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.17.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.12.6 = phi i16 [ %mask.sroa.12.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.12.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.12.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.12.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.12.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.7.6 = phi i16 [ %mask.sroa.7.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.7.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.7.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.7.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.7.5, %for.inc101.for.inc109_crit_edge ]
  %mask.sroa.0.6 = phi i16 [ %mask.sroa.0.1, %for.body25.for.inc109_crit_edge ], [ %mask.sroa.0.1, %for.end64.for.inc109_crit_edge ], [ %mask.sroa.0.1, %for.cond74.preheader.for.inc109_crit_edge ], [ %mask.sroa.0.1, %for.cond41.preheader.for.inc109_crit_edge ], [ %mask.sroa.0.5, %for.inc101.for.inc109_crit_edge ]
  %inc110 = add nuw i32 %id.0193, 1
  %cmp23 = icmp ult i32 %inc110, %24
  br i1 %cmp23, label %for.inc109.for.body25_crit_edge, label %for.inc109.for.cond112.preheader_crit_edge

for.inc109.for.cond112.preheader_crit_edge:       ; preds = %for.inc109
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond112.preheader

for.inc109.for.body25_crit_edge:                  ; preds = %for.inc109
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body25

for.cond112:                                      ; preds = %for.cond112.preheader
  %call117.1 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 1, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.7.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.1)
  %tobool118.not.1 = icmp eq i32 %call117.1, 0
  br i1 %tobool118.not.1, label %for.cond112.1, label %for.cond112.cleanup_crit_edge

for.cond112.cleanup_crit_edge:                    ; preds = %for.cond112
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.1:                                    ; preds = %for.cond112
  %call117.2 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 2, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.12.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.2)
  %tobool118.not.2 = icmp eq i32 %call117.2, 0
  br i1 %tobool118.not.2, label %for.cond112.2, label %for.cond112.1.cleanup_crit_edge

for.cond112.1.cleanup_crit_edge:                  ; preds = %for.cond112.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.2:                                    ; preds = %for.cond112.1
  %call117.3 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 3, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.17.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.3)
  %tobool118.not.3 = icmp eq i32 %call117.3, 0
  br i1 %tobool118.not.3, label %for.cond112.3, label %for.cond112.2.cleanup_crit_edge

for.cond112.2.cleanup_crit_edge:                  ; preds = %for.cond112.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.3:                                    ; preds = %for.cond112.2
  %call117.4 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 4, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.22.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.4)
  %tobool118.not.4 = icmp eq i32 %call117.4, 0
  br i1 %tobool118.not.4, label %for.cond112.4, label %for.cond112.3.cleanup_crit_edge

for.cond112.3.cleanup_crit_edge:                  ; preds = %for.cond112.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.4:                                    ; preds = %for.cond112.3
  %call117.5 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 5, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.27.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.5)
  %tobool118.not.5 = icmp eq i32 %call117.5, 0
  br i1 %tobool118.not.5, label %for.cond112.5, label %for.cond112.4.cleanup_crit_edge

for.cond112.4.cleanup_crit_edge:                  ; preds = %for.cond112.4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.5:                                    ; preds = %for.cond112.4
  %call117.6 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 6, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.32.0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call117.6)
  %tobool118.not.6 = icmp eq i32 %call117.6, 0
  br i1 %tobool118.not.6, label %for.cond112.6, label %for.cond112.5.cleanup_crit_edge

for.cond112.5.cleanup_crit_edge:                  ; preds = %for.cond112.5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond112.6:                                    ; preds = %for.cond112.5
  call void @__sanitizer_cov_trace_pc() #18
  %call117.7 = tail call i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef %1, i32 noundef 7, i1 noundef zeroext true, i16 noundef zeroext %mask.sroa.37.0) #16
  br label %cleanup

cleanup:                                          ; preds = %for.cond112.6, %for.cond112.5.cleanup_crit_edge, %for.cond112.4.cleanup_crit_edge, %for.cond112.3.cleanup_crit_edge, %for.cond112.2.cleanup_crit_edge, %for.cond112.1.cleanup_crit_edge, %for.cond112.cleanup_crit_edge, %for.cond112.preheader.cleanup_crit_edge
  %retval.0 = phi i32 [ %call117, %for.cond112.preheader.cleanup_crit_edge ], [ %call117.1, %for.cond112.cleanup_crit_edge ], [ %call117.2, %for.cond112.1.cleanup_crit_edge ], [ %call117.3, %for.cond112.2.cleanup_crit_edge ], [ %call117.4, %for.cond112.3.cleanup_crit_edge ], [ %call117.5, %for.cond112.4.cleanup_crit_edge ], [ %call117.6, %for.cond112.5.cleanup_crit_edge ], [ %call117.7, %for.cond112.6 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_trunk_mask_write(ptr noundef, i32 noundef, i1 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @mv88e6xxx_lag_sync_masks_map(ptr noundef %ds, ptr noundef readnone %lag) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @mv88e6xxx_lag_sync_masks(ptr noundef %ds)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %priv.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 5
  %0 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv.i, align 4
  %dst.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 1
  %2 = ptrtoint ptr %dst.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dst.i, align 4
  %lags_len.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 11
  %4 = ptrtoint ptr %lags_len.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lags_len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp10.not.i.i = icmp eq i32 %5, 0
  br i1 %cmp10.not.i.i, label %if.then.dsa_lag_id.exit.i_crit_edge, label %for.body.lr.ph.i.i

if.then.dsa_lag_id.exit.i_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then
  %lags.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 5
  %6 = ptrtoint ptr %lags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lags.i.i, align 4
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %id.011.i.i = phi i32 [ 0, %for.body.lr.ph.i.i ], [ %inc.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %7, i32 %id.011.i.i
  %8 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %9, null
  %cmp1.i.i = icmp eq ptr %9, %lag
  %or.cond.i.i = and i1 %tobool.not.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %for.body.i.i.dsa_lag_id.exit.i_crit_edge, label %for.inc.i.i

for.body.i.i.dsa_lag_id.exit.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %inc.i.i = add nuw i32 %id.011.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %5
  br i1 %exitcond.not.i.i, label %for.inc.i.i.dsa_lag_id.exit.i_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.dsa_lag_id.exit.i_crit_edge:          ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_lag_id.exit.i

dsa_lag_id.exit.i:                                ; preds = %for.inc.i.i.dsa_lag_id.exit.i_crit_edge, %for.body.i.i.dsa_lag_id.exit.i_crit_edge, %if.then.dsa_lag_id.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ -19, %if.then.dsa_lag_id.exit.i_crit_edge ], [ %id.011.i.i, %for.body.i.i.dsa_lag_id.exit.i_crit_edge ], [ -19, %for.inc.i.i.dsa_lag_id.exit.i_crit_edge ]
  %ports.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 1
  %10 = ptrtoint ptr %ports.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn27.i = load ptr, ptr %ports.i, align 4
  %cmp.not28.i = icmp eq ptr %.pn27.i, %ports.i
  br i1 %cmp.not28.i, label %dsa_lag_id.exit.i.mv88e6xxx_lag_sync_map.exit_crit_edge, label %for.body.lr.ph.i

dsa_lag_id.exit.i.mv88e6xxx_lag_sync_map.exit_crit_edge: ; preds = %dsa_lag_id.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_sync_map.exit

for.body.lr.ph.i:                                 ; preds = %dsa_lag_id.exit.i
  %index.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 2
  %rtable.i.i.i = getelementptr inbounds %struct.dsa_switch_tree, ptr %3, i32 0, i32 10
  %num_ports.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %ds, i32 0, i32 18
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn30.i = phi ptr [ %.pn27.i, %for.body.lr.ph.i ], [ %.pn.i, %for.inc.i.for.body.i_crit_edge ]
  %map.029.i = phi i16 [ 0, %for.body.lr.ph.i ], [ %map.1.i, %for.inc.i.for.body.i_crit_edge ]
  %lag_dev.i = getelementptr i8, ptr %.pn30.i, i32 -8
  %11 = ptrtoint ptr %lag_dev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %lag_dev.i, align 4
  %cmp4.i = icmp eq ptr %12, %lag
  br i1 %cmp4.i, label %if.then.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  %ds5.i = getelementptr i8, ptr %.pn30.i, i32 -432
  %13 = ptrtoint ptr %ds5.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ds5.i, align 4
  %index.i = getelementptr inbounds %struct.dsa_switch, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %index.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %index.i, align 4
  %index6.i = getelementptr i8, ptr %.pn30.i, i32 -428
  %17 = ptrtoint ptr %index.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %index.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %16)
  %cmp.i.i = icmp eq i32 %18, %16
  br i1 %cmp.i.i, label %if.then.i.dsa_towards_port.exit.i_crit_edge, label %if.else.i.i

if.then.i.dsa_towards_port.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_towards_port.exit.i

if.else.i.i:                                      ; preds = %if.then.i
  %19 = ptrtoint ptr %rtable.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pn22.i.i.i = load ptr, ptr %rtable.i.i.i, align 4
  %cmp.not23.i.i.i = icmp eq ptr %.pn22.i.i.i, %rtable.i.i.i
  br i1 %cmp.not23.i.i.i, label %if.else.i.i.dsa_towards_port.exit.i_crit_edge, label %if.else.i.i.for.body.i.i.i_crit_edge

if.else.i.i.for.body.i.i.i_crit_edge:             ; preds = %if.else.i.i
  br label %for.body.i.i.i

if.else.i.i.dsa_towards_port.exit.i_crit_edge:    ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_towards_port.exit.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i.for.body.i.i.i_crit_edge, %if.else.i.i.for.body.i.i.i_crit_edge
  %.pn24.i.i.i = phi ptr [ %.pn.i.i.i, %for.inc.i.i.i.for.body.i.i.i_crit_edge ], [ %.pn22.i.i.i, %if.else.i.i.for.body.i.i.i_crit_edge ]
  %dl.0.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -8
  %20 = ptrtoint ptr %dl.0.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dl.0.i.i.i, align 4
  %ds3.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %21, i32 0, i32 4
  %22 = ptrtoint ptr %ds3.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ds3.i.i.i, align 4
  %cmp4.i.i.i = icmp eq ptr %23, %ds
  br i1 %cmp4.i.i.i, label %land.lhs.true.i.i.i, label %for.body.i.i.i.for.inc.i.i.i_crit_edge

for.body.i.i.i.for.inc.i.i.i_crit_edge:           ; preds = %for.body.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

land.lhs.true.i.i.i:                              ; preds = %for.body.i.i.i
  %link_dp.i.i.i = getelementptr i8, ptr %.pn24.i.i.i, i32 -4
  %24 = ptrtoint ptr %link_dp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %link_dp.i.i.i, align 4
  %ds5.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %25, i32 0, i32 4
  %26 = ptrtoint ptr %ds5.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ds5.i.i.i, align 4
  %index.i.i.i = getelementptr inbounds %struct.dsa_switch, ptr %27, i32 0, i32 2
  %28 = ptrtoint ptr %index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %index.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %29, i32 %16)
  %cmp6.i.i.i = icmp eq i32 %29, %16
  br i1 %cmp6.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge

land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge:      ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %index8.i.i.i = getelementptr inbounds %struct.dsa_port, ptr %21, i32 0, i32 5
  br label %dsa_towards_port.exit.i

for.inc.i.i.i:                                    ; preds = %land.lhs.true.i.i.i.for.inc.i.i.i_crit_edge, %for.body.i.i.i.for.inc.i.i.i_crit_edge
  %30 = ptrtoint ptr %.pn24.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %.pn.i.i.i = load ptr, ptr %.pn24.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %.pn.i.i.i, %rtable.i.i.i
  br i1 %cmp.not.i.i.i, label %for.inc.i.i.i.dsa_towards_port.exit.i_crit_edge, label %for.inc.i.i.i.for.body.i.i.i_crit_edge

for.inc.i.i.i.for.body.i.i.i_crit_edge:           ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i.i

for.inc.i.i.i.dsa_towards_port.exit.i_crit_edge:  ; preds = %for.inc.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %dsa_towards_port.exit.i

dsa_towards_port.exit.i:                          ; preds = %for.inc.i.i.i.dsa_towards_port.exit.i_crit_edge, %if.then.i.i.i, %if.else.i.i.dsa_towards_port.exit.i_crit_edge, %if.then.i.dsa_towards_port.exit.i_crit_edge
  %retval.0.i25.in.i = phi ptr [ %index6.i, %if.then.i.dsa_towards_port.exit.i_crit_edge ], [ %index8.i.i.i, %if.then.i.i.i ], [ %num_ports.i.i.i, %if.else.i.i.dsa_towards_port.exit.i_crit_edge ], [ %num_ports.i.i.i, %for.inc.i.i.i.dsa_towards_port.exit.i_crit_edge ]
  %31 = ptrtoint ptr %retval.0.i25.in.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %retval.0.i25.i = load i32, ptr %retval.0.i25.in.i, align 4
  %shl.i = shl nuw i32 1, %retval.0.i25.i
  %32 = trunc i32 %shl.i to i16
  %conv8.i = or i16 %map.029.i, %32
  br label %for.inc.i

for.inc.i:                                        ; preds = %dsa_towards_port.exit.i, %for.body.i.for.inc.i_crit_edge
  %map.1.i = phi i16 [ %conv8.i, %dsa_towards_port.exit.i ], [ %map.029.i, %for.body.i.for.inc.i_crit_edge ]
  %33 = ptrtoint ptr %.pn30.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn.i = load ptr, ptr %.pn30.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %ports.i
  br i1 %cmp.not.i, label %for.inc.i.mv88e6xxx_lag_sync_map.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.mv88e6xxx_lag_sync_map.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mv88e6xxx_lag_sync_map.exit

mv88e6xxx_lag_sync_map.exit:                      ; preds = %for.inc.i.mv88e6xxx_lag_sync_map.exit_crit_edge, %dsa_lag_id.exit.i.mv88e6xxx_lag_sync_map.exit_crit_edge
  %map.0.lcssa.i = phi i16 [ 0, %dsa_lag_id.exit.i.mv88e6xxx_lag_sync_map.exit_crit_edge ], [ %map.1.i, %for.inc.i.mv88e6xxx_lag_sync_map.exit_crit_edge ]
  %call14.i = tail call i32 @mv88e6xxx_g2_trunk_mapping_write(ptr noundef %1, i32 noundef %retval.0.i.i, i16 noundef zeroext %map.0.lcssa.i) #16
  br label %if.end

if.end:                                           ; preds = %mv88e6xxx_lag_sync_map.exit, %entry.if.end_crit_edge
  %err.0 = phi i32 [ %call, %entry.if.end_crit_edge ], [ %call14.i, %mv88e6xxx_lag_sync_map.exit ]
  ret i32 %err.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_g2_trunk_mapping_write(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @mv88e6xxx_port_set_trunk(ptr noundef, i32 noundef, i1 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdiobus_unregister(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kthread_cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kthread_destroy_worker(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_hwtstamp_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_ptp_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @mv88e6xxx_phy_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dsa_unregister_switch(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dsa_switch_shutdown(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 178)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 178)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nounwind readonly }
attributes #15 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { cold nounwind }
attributes #20 = { nobuiltin nounwind }
attributes #21 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !8, !9, !10, !12, !13, !14, !15, !16, !17, !19, !20, !22, !24, !26, !27, !29, !30, !31, !32, !34, !36, !38, !40, !42, !44, !46, !48, !50, !52, !54, !56, !58, !60, !62, !64, !66, !68, !70, !72, !74, !76, !78, !80, !82, !84, !86, !88, !90, !92, !94, !96, !98, !100, !102, !104, !106, !108, !110, !112, !114, !116, !118, !120, !122, !124, !126, !128, !130, !132, !134, !135, !136, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !176, !178, !179, !181, !182, !183, !184, !185, !187, !189, !191, !193, !195, !197, !199, !200, !202, !204, !206, !208, !210, !212, !214, !216, !217, !218, !219, !221, !223, !225, !226, !227, !228, !229, !231, !232, !233, !234, !236, !237, !238, !239, !241, !242, !243, !244, !246, !247, !248, !249, !251, !252, !253, !254, !256, !257, !258, !259, !261, !262, !263, !264, !266, !267, !268, !269, !271, !273, !275, !277, !279, !281, !283, !285, !286, !287, !288, !290, !291, !292, !293, !295, !296, !297, !299, !300, !301, !303, !304, !305, !306, !308, !309, !310, !311, !313, !314, !315, !316, !318, !319, !320, !321, !323, !325, !326, !327, !328, !330, !331, !332, !334, !335, !336}
!llvm.named.register.sp = !{!338}
!llvm.module.flags = !{!339, !340, !341, !342, !343, !344, !345, !346}
!llvm.ident = !{!347}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 64, i32 2}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @.str.3, !1, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @mv88e6xxx_read.__UNIQUE_ID_ddebug497, !1, !"__UNIQUE_ID_ddebug497", i1 false, i1 false}
!6 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 80, i32 2}
!8 = !{ptr @.str.5, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @mv88e6xxx_write.__UNIQUE_ID_ddebug498, !7, !"__UNIQUE_ID_ddebug498", i1 false, i1 false}
!10 = !{ptr @.str.6, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 105, i32 2}
!12 = !{ptr @.str.7, !11, !"<string literal>", i1 false, i1 false}
!13 = !{ptr @.str.8, !11, !"<string literal>", i1 false, i1 false}
!14 = !{ptr @.str.9, !11, !"<string literal>", i1 false, i1 false}
!15 = !{ptr @mv88e6xxx_wait_mask._entry, !11, !"_entry", i1 false, i1 false}
!16 = !{ptr @mv88e6xxx_wait_mask._entry_ptr, !11, !"_entry_ptr", i1 false, i1 false}
!17 = !{ptr @__initcall__kmod_mv88e6xxx__499_6578_mdio_module_init6, !18, !"__initcall__kmod_mv88e6xxx__499_6578_mdio_module_init6", i1 false, i1 false}
!18 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6578, i32 1}
!19 = !{ptr @__exitcall_mdio_module_exit, !18, !"__exitcall_mdio_module_exit", i1 false, i1 false}
!20 = !{ptr @__UNIQUE_ID_author500, !21, !"__UNIQUE_ID_author500", i1 false, i1 false}
!21 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6580, i32 1}
!22 = !{ptr @__UNIQUE_ID_description501, !23, !"__UNIQUE_ID_description501", i1 false, i1 false}
!23 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6581, i32 1}
!24 = !{ptr @__UNIQUE_ID_file502, !25, !"__UNIQUE_ID_file502", i1 false, i1 false}
!25 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6582, i32 1}
!26 = !{ptr @__UNIQUE_ID_license503, !25, !"__UNIQUE_ID_license503", i1 false, i1 false}
!27 = !{ptr @.str.10, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 49, i32 3}
!29 = !{ptr @.str.11, !28, !"<string literal>", i1 false, i1 false}
!30 = !{ptr @assert_reg_lock._entry, !28, !"_entry", i1 false, i1 false}
!31 = !{ptr @assert_reg_lock._entry_ptr, !28, !"_entry_ptr", i1 false, i1 false}
!32 = !{ptr @.str.12, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6572, i32 11}
!34 = !{ptr @mv88e6xxx_driver, !35, !"mv88e6xxx_driver", i1 false, i1 false}
!35 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6567, i32 27}
!36 = !{ptr @mv88e6xxx_of_match, !37, !"mv88e6xxx_of_match", i1 false, i1 false}
!37 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6549, i32 34}
!38 = !{ptr @.str.13, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4974, i32 11}
!40 = !{ptr @.str.14, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4996, i32 11}
!42 = !{ptr @.str.15, !43, !"<string literal>", i1 false, i1 false}
!43 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5016, i32 11}
!44 = !{ptr @.str.16, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5039, i32 11}
!46 = !{ptr @.str.17, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5062, i32 11}
!48 = !{ptr @.str.18, !49, !"<string literal>", i1 false, i1 false}
!49 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5082, i32 11}
!50 = !{ptr @.str.19, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5106, i32 11}
!52 = !{ptr @.str.20, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5130, i32 11}
!54 = !{ptr @.str.21, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5153, i32 11}
!56 = !{ptr @.str.22, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5176, i32 11}
!58 = !{ptr @.str.23, !59, !"<string literal>", i1 false, i1 false}
!59 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5200, i32 11}
!60 = !{ptr @.str.24, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5223, i32 11}
!62 = !{ptr @.str.25, !63, !"<string literal>", i1 false, i1 false}
!63 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5247, i32 11}
!64 = !{ptr @.str.26, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5268, i32 11}
!66 = !{ptr @.str.27, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5291, i32 11}
!68 = !{ptr @.str.28, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5314, i32 11}
!70 = !{ptr @.str.29, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5337, i32 11}
!72 = !{ptr @.str.30, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5359, i32 11}
!74 = !{ptr @.str.31, !75, !"<string literal>", i1 false, i1 false}
!75 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5381, i32 11}
!76 = !{ptr @.str.32, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5407, i32 11}
!78 = !{ptr @.str.33, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5432, i32 11}
!80 = !{ptr @.str.34, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5453, i32 11}
!82 = !{ptr @.str.35, !83, !"<string literal>", i1 false, i1 false}
!83 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5476, i32 11}
!84 = !{ptr @.str.36, !85, !"<string literal>", i1 false, i1 false}
!85 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5501, i32 11}
!86 = !{ptr @.str.37, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5525, i32 11}
!88 = !{ptr @.str.38, !89, !"<string literal>", i1 false, i1 false}
!89 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5550, i32 11}
!90 = !{ptr @.str.39, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5573, i32 11}
!92 = !{ptr @.str.40, !93, !"<string literal>", i1 false, i1 false}
!93 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5596, i32 11}
!94 = !{ptr @.str.41, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5620, i32 11}
!96 = !{ptr @.str.42, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5644, i32 11}
!98 = !{ptr @.str.43, !99, !"<string literal>", i1 false, i1 false}
!99 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5669, i32 11}
!100 = !{ptr @mv88e6xxx_table, !101, !"mv88e6xxx_table", i1 false, i1 false}
!101 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4970, i32 36}
!102 = !{ptr @mv88e6085_ops, !103, !"mv88e6085_ops", i1 false, i1 false}
!103 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3554, i32 35}
!104 = !{ptr @mv88e6xxx_hw_stats, !105, !"mv88e6xxx_hw_stats", i1 false, i1 false}
!105 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 838, i32 33}
!106 = !{ptr @mv88e6095_ops, !107, !"mv88e6095_ops", i1 false, i1 false}
!107 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3596, i32 35}
!108 = !{ptr @mv88e6097_ops, !109, !"mv88e6097_ops", i1 false, i1 false}
!109 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3630, i32 35}
!110 = !{ptr @mv88e6123_ops, !111, !"mv88e6123_ops", i1 false, i1 false}
!111 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3676, i32 35}
!112 = !{ptr @mv88e6131_ops, !113, !"mv88e6131_ops", i1 false, i1 false}
!113 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3713, i32 35}
!114 = !{ptr @mv88e6141_ops, !115, !"mv88e6141_ops", i1 false, i1 false}
!115 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3753, i32 35}
!116 = !{ptr @mv88e6161_ops, !117, !"mv88e6161_ops", i1 false, i1 false}
!117 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3817, i32 35}
!118 = !{ptr @mv88e6165_ops, !119, !"mv88e6165_ops", i1 false, i1 false}
!119 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3860, i32 35}
!120 = !{ptr @mv88e6171_ops, !121, !"mv88e6171_ops", i1 false, i1 false}
!121 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3895, i32 35}
!122 = !{ptr @mv88e6172_ops, !123, !"mv88e6172_ops", i1 false, i1 false}
!123 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3937, i32 35}
!124 = !{ptr @mv88e6175_ops, !125, !"mv88e6175_ops", i1 false, i1 false}
!125 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3992, i32 35}
!126 = !{ptr @mv88e6176_ops, !127, !"mv88e6176_ops", i1 false, i1 false}
!127 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4034, i32 35}
!128 = !{ptr @mv88e6185_ops, !129, !"mv88e6185_ops", i1 false, i1 false}
!129 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4092, i32 35}
!130 = !{ptr @mv88e6190_ops, !131, !"mv88e6190_ops", i1 false, i1 false}
!131 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4132, i32 35}
!132 = !{ptr @.str.44, !133, !"<string literal>", i1 false, i1 false}
!133 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3131, i32 4}
!134 = !{ptr @.str.45, !133, !"<string literal>", i1 false, i1 false}
!135 = !{ptr @mv88e6390_setup_errata_applied._entry, !133, !"_entry", i1 false, i1 false}
!136 = !{ptr @mv88e6390_setup_errata_applied._entry_ptr, !133, !"_entry_ptr", i1 false, i1 false}
!137 = !{ptr @mv88e6190x_ops, !138, !"mv88e6190x_ops", i1 false, i1 false}
!138 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4193, i32 35}
!139 = !{ptr @mv88e6191_ops, !140, !"mv88e6191_ops", i1 false, i1 false}
!140 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4254, i32 35}
!141 = !{ptr @mv88e6393x_ops, !142, !"mv88e6393x_ops", i1 false, i1 false}
!142 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4906, i32 35}
!143 = !{ptr @mv88e6250_ops, !144, !"mv88e6250_ops", i1 false, i1 false}
!144 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4374, i32 35}
!145 = !{ptr @mv88e6240_ops, !146, !"mv88e6240_ops", i1 false, i1 false}
!146 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4314, i32 35}
!147 = !{ptr @mv88e6290_ops, !148, !"mv88e6290_ops", i1 false, i1 false}
!148 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4414, i32 35}
!149 = !{ptr @mv88e6320_ops, !150, !"mv88e6320_ops", i1 false, i1 false}
!150 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4476, i32 35}
!151 = !{ptr @mv88e6321_ops, !152, !"mv88e6321_ops", i1 false, i1 false}
!152 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4520, i32 35}
!153 = !{ptr @mv88e6341_ops, !154, !"mv88e6341_ops", i1 false, i1 false}
!154 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4562, i32 35}
!155 = !{ptr @mv88e6350_ops, !156, !"mv88e6350_ops", i1 false, i1 false}
!156 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4628, i32 35}
!157 = !{ptr @mv88e6351_ops, !158, !"mv88e6351_ops", i1 false, i1 false}
!158 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4670, i32 35}
!159 = !{ptr @mv88e6352_ops, !160, !"mv88e6352_ops", i1 false, i1 false}
!160 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4714, i32 35}
!161 = !{ptr @mv88e6390_ops, !162, !"mv88e6390_ops", i1 false, i1 false}
!162 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4777, i32 35}
!163 = !{ptr @mv88e6390x_ops, !164, !"mv88e6390x_ops", i1 false, i1 false}
!164 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 4842, i32 35}
!165 = !{ptr @mv88e6xxx_pm_ops, !166, !"mv88e6xxx_pm_ops", i1 false, i1 false}
!166 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6352, i32 8}
!167 = !{ptr @.str.46, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6379, i32 43}
!169 = !{ptr @.str.47, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6401, i32 45}
!171 = !{ptr @.str.48, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6422, i32 29}
!173 = !{ptr @mv88e6xxx_alloc_chip.__key, !174, !"__key", i1 false, i1 false}
!174 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5739, i32 2}
!175 = !{ptr @.str.49, !174, !"<string literal>", i1 false, i1 false}
!176 = !{ptr @xa_init_flags.__key, !177, !"__key", i1 false, i1 false}
!177 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!178 = !{ptr @.str.50, !177, !"<string literal>", i1 false, i1 false}
!179 = !{ptr @.str.51, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5723, i32 2}
!181 = !{ptr @.str.52, !180, !"<string literal>", i1 false, i1 false}
!182 = !{ptr @.str.53, !180, !"<string literal>", i1 false, i1 false}
!183 = !{ptr @mv88e6xxx_detect._entry, !180, !"_entry", i1 false, i1 false}
!184 = !{ptr @mv88e6xxx_detect._entry_ptr, !180, !"_entry_ptr", i1 false, i1 false}
!185 = !{ptr @mv88e6xxx_g1_irq_setup.lock_key, !186, !"lock_key", i1 false, i1 false}
!186 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 331, i32 31}
!187 = !{ptr @mv88e6xxx_g1_irq_setup.request_key, !188, !"request_key", i1 false, i1 false}
!188 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 332, i32 31}
!189 = !{ptr @.str.54, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 346, i32 4}
!191 = !{ptr @mv88e6xxx_g1_irq_domain_ops, !192, !"mv88e6xxx_g1_irq_domain_ops", i1 false, i1 false}
!192 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 243, i32 36}
!193 = !{ptr @.str.55, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 223, i32 12}
!195 = !{ptr @mv88e6xxx_g1_irq_chip, !196, !"mv88e6xxx_g1_irq_chip", i1 false, i1 false}
!196 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 222, i32 30}
!197 = !{ptr @mv88e6xxx_irq_poll_setup.__key, !198, !"__key", i1 false, i1 false}
!198 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 379, i32 2}
!199 = !{ptr @.str.56, !198, !"<string literal>", i1 false, i1 false}
!200 = !{ptr @.str.57, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 382, i32 43}
!202 = !{ptr @.str.58, !203, !"<string literal>", i1 false, i1 false}
!203 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3483, i32 35}
!204 = !{ptr @.str.59, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3494, i32 15}
!206 = !{ptr @mv88e6xxx_mdio_register.index, !207, !"index", i1 false, i1 false}
!207 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3395, i32 13}
!208 = !{ptr @.str.60, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3421, i32 38}
!210 = !{ptr @.str.61, !211, !"<string literal>", i1 false, i1 false}
!211 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3423, i32 15}
!212 = !{ptr @.str.62, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3424, i32 38}
!214 = !{ptr @.str.63, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3439, i32 3}
!216 = !{ptr @.str.64, !215, !"<string literal>", i1 false, i1 false}
!217 = !{ptr @mv88e6xxx_mdio_register._entry, !215, !"_entry", i1 false, i1 false}
!218 = !{ptr @mv88e6xxx_mdio_register._entry_ptr, !215, !"_entry_ptr", i1 false, i1 false}
!219 = !{ptr @family_prod_id_table, !220, !"family_prod_id_table", i1 false, i1 false}
!220 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3343, i32 18}
!221 = !{ptr @mv88e6xxx_switch_ops, !222, !"mv88e6xxx_switch_ops", i1 false, i1 false}
!222 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6229, i32 36}
!223 = !{ptr @.str.65, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5768, i32 4}
!225 = !{ptr @.str.66, !224, !"<string literal>", i1 false, i1 false}
!226 = !{ptr @.str.67, !224, !"<string literal>", i1 false, i1 false}
!227 = !{ptr @mv88e6xxx_change_tag_protocol._entry, !224, !"_entry", i1 false, i1 false}
!228 = !{ptr @mv88e6xxx_change_tag_protocol._entry_ptr, !224, !"_entry_ptr", i1 false, i1 false}
!229 = !{ptr @.str.68, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3226, i32 4}
!231 = !{ptr @.str.69, !230, !"<string literal>", i1 false, i1 false}
!232 = !{ptr @mv88e6xxx_setup._entry, !230, !"_entry", i1 false, i1 false}
!233 = !{ptr @mv88e6xxx_setup._entry_ptr, !230, !"_entry_ptr", i1 false, i1 false}
!234 = !{ptr @.str.70, !235, !"<string literal>", i1 false, i1 false}
!235 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 457, i32 3}
!236 = !{ptr @.str.71, !235, !"<string literal>", i1 false, i1 false}
!237 = !{ptr @mv88e6xxx_port_setup_mac._entry, !235, !"_entry", i1 false, i1 false}
!238 = !{ptr @mv88e6xxx_port_setup_mac._entry_ptr, !235, !"_entry_ptr", i1 false, i1 false}
!239 = !{ptr @.str.72, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2168, i32 3}
!241 = !{ptr @.str.73, !240, !"<string literal>", i1 false, i1 false}
!242 = !{ptr @mv88e6xxx_port_vlan_join._entry, !240, !"_entry", i1 false, i1 false}
!243 = !{ptr @mv88e6xxx_port_vlan_join._entry_ptr, !240, !"_entry_ptr", i1 false, i1 false}
!244 = !{ptr @.str.74, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 751, i32 3}
!246 = !{ptr @.str.75, !245, !"<string literal>", i1 false, i1 false}
!247 = !{ptr @mv88e6xxx_mac_config._entry, !245, !"_entry", i1 false, i1 false}
!248 = !{ptr @mv88e6xxx_mac_config._entry_ptr, !245, !"_entry_ptr", i1 false, i1 false}
!249 = !{ptr @.str.76, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 482, i32 3}
!251 = !{ptr @.str.77, !250, !"<string literal>", i1 false, i1 false}
!252 = !{ptr @mv88e6xxx_port_ppu_updates._entry, !250, !"_entry", i1 false, i1 false}
!253 = !{ptr @mv88e6xxx_port_ppu_updates._entry_ptr, !250, !"_entry_ptr", i1 false, i1 false}
!254 = !{ptr @.str.78, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 545, i32 4}
!256 = !{ptr @.str.79, !255, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @mv88e6xxx_serdes_pcs_an_restart._entry, !255, !"_entry", i1 false, i1 false}
!258 = !{ptr @mv88e6xxx_serdes_pcs_an_restart._entry_ptr, !255, !"_entry_ptr", i1 false, i1 false}
!259 = !{ptr @.str.80, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 778, i32 3}
!261 = !{ptr @.str.81, !260, !"<string literal>", i1 false, i1 false}
!262 = !{ptr @mv88e6xxx_mac_link_down._entry, !260, !"_entry", i1 false, i1 false}
!263 = !{ptr @mv88e6xxx_mac_link_down._entry_ptr, !260, !"_entry_ptr", i1 false, i1 false}
!264 = !{ptr @.str.82, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 826, i32 3}
!266 = !{ptr @.str.83, !265, !"<string literal>", i1 false, i1 false}
!267 = !{ptr @mv88e6xxx_mac_link_up._entry, !265, !"_entry", i1 false, i1 false}
!268 = !{ptr @mv88e6xxx_mac_link_up._entry_ptr, !265, !"_entry_ptr", i1 false, i1 false}
!269 = !{ptr @.str.84, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 980, i32 2}
!271 = !{ptr @.str.85, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 981, i32 2}
!273 = !{ptr @.str.86, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 982, i32 2}
!275 = !{ptr @.str.87, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 983, i32 2}
!277 = !{ptr @.str.88, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 984, i32 2}
!279 = distinct !{null, !280, !"mv88e6xxx_atu_vtu_stats_strings", i1 false, i1 false}
!280 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 979, i32 23}
!281 = !{ptr @.str.89, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2740, i32 4}
!283 = !{ptr @.str.90, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 3090, i32 3}
!285 = !{ptr @.str.91, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @mv88e6xxx_port_disable._entry, !284, !"_entry", i1 false, i1 false}
!287 = !{ptr @mv88e6xxx_port_disable._entry_ptr, !284, !"_entry_ptr", i1 false, i1 false}
!288 = !{ptr @.str.92, !289, !"<string literal>", i1 false, i1 false}
!289 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2518, i32 3}
!290 = !{ptr @.str.93, !289, !"<string literal>", i1 false, i1 false}
!291 = !{ptr @mv88e6xxx_port_bridge_leave._entry, !289, !"_entry", i1 false, i1 false}
!292 = !{ptr @mv88e6xxx_port_bridge_leave._entry_ptr, !289, !"_entry_ptr", i1 false, i1 false}
!293 = !{ptr @.str.95, !294, !"<string literal>", i1 false, i1 false}
!294 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2522, i32 3}
!295 = !{ptr @mv88e6xxx_port_bridge_leave._entry.94, !294, !"_entry", i1 false, i1 false}
!296 = !{ptr @mv88e6xxx_port_bridge_leave._entry_ptr.96, !294, !"_entry_ptr", i1 false, i1 false}
!297 = !{ptr @.str.98, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2526, i32 3}
!299 = !{ptr @mv88e6xxx_port_bridge_leave._entry.97, !298, !"_entry", i1 false, i1 false}
!300 = !{ptr @mv88e6xxx_port_bridge_leave._entry_ptr.99, !298, !"_entry_ptr", i1 false, i1 false}
!301 = !{ptr @.str.100, !302, !"<string literal>", i1 false, i1 false}
!302 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 1319, i32 3}
!303 = !{ptr @.str.101, !302, !"<string literal>", i1 false, i1 false}
!304 = !{ptr @mv88e6xxx_port_stp_state_set._entry, !302, !"_entry", i1 false, i1 false}
!305 = !{ptr @mv88e6xxx_port_stp_state_set._entry_ptr, !302, !"_entry_ptr", i1 false, i1 false}
!306 = !{ptr @.str.102, !307, !"<string literal>", i1 false, i1 false}
!307 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 1537, i32 3}
!308 = !{ptr @.str.103, !307, !"<string literal>", i1 false, i1 false}
!309 = !{ptr @mv88e6xxx_port_fast_age._entry, !307, !"_entry", i1 false, i1 false}
!310 = !{ptr @mv88e6xxx_port_fast_age._entry_ptr, !307, !"_entry_ptr", i1 false, i1 false}
!311 = !{ptr @.str.104, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2210, i32 3}
!313 = !{ptr @.str.105, !312, !"<string literal>", i1 false, i1 false}
!314 = !{ptr @mv88e6xxx_port_vlan_add._entry, !312, !"_entry", i1 false, i1 false}
!315 = !{ptr @mv88e6xxx_port_vlan_add._entry_ptr, !312, !"_entry_ptr", i1 false, i1 false}
!316 = !{ptr @.str.106, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 1690, i32 3}
!318 = !{ptr @.str.107, !317, !"<string literal>", i1 false, i1 false}
!319 = !{ptr @mv88e6xxx_port_check_hw_vlan._entry, !317, !"_entry", i1 false, i1 false}
!320 = !{ptr @mv88e6xxx_port_check_hw_vlan._entry_ptr, !317, !"_entry_ptr", i1 false, i1 false}
!321 = !{ptr @.str.108, !322, !"<string literal>", i1 false, i1 false}
!322 = !{!"../include/linux/netdevice.h", i32 4963, i32 10}
!323 = !{ptr @.str.109, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5871, i32 3}
!325 = !{ptr @.str.110, !324, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @mv88e6xxx_port_mirror_del._entry, !324, !"_entry", i1 false, i1 false}
!327 = !{ptr @mv88e6xxx_port_mirror_del._entry_ptr, !324, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.112, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 5882, i32 4}
!330 = !{ptr @mv88e6xxx_port_mirror_del._entry.111, !329, !"_entry", i1 false, i1 false}
!331 = !{ptr @mv88e6xxx_port_mirror_del._entry_ptr.113, !329, !"_entry_ptr", i1 false, i1 false}
!332 = !{ptr @.str.114, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 2563, i32 3}
!334 = !{ptr @mv88e6xxx_crosschip_bridge_leave._entry, !333, !"_entry", i1 false, i1 false}
!335 = !{ptr @mv88e6xxx_crosschip_bridge_leave._entry_ptr, !333, !"_entry_ptr", i1 false, i1 false}
!336 = !{ptr @mv88e6xxx_lag_mask_table, !337, !"mv88e6xxx_lag_mask_table", i1 false, i1 false}
!337 = !{!"../drivers/net/dsa/mv88e6xxx/chip.c", i32 6014, i32 17}
!338 = !{!"sp"}
!339 = !{i32 1, !"wchar_size", i32 2}
!340 = !{i32 1, !"min_enum_size", i32 4}
!341 = !{i32 8, !"branch-target-enforcement", i32 0}
!342 = !{i32 8, !"sign-return-address", i32 0}
!343 = !{i32 8, !"sign-return-address-all", i32 0}
!344 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!345 = !{i32 7, !"uwtable", i32 1}
!346 = !{i32 7, !"frame-pointer", i32 2}
!347 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!348 = !{!"branch_weights", i32 2000, i32 1}
!349 = !{i64 2148978492, i64 2148978497, i64 2148978510, i64 2148978554, i64 2148978588, i64 2148978609}
!350 = !{!"auto-init"}
!351 = !{i8 0, i8 2}
!352 = !{i64 830638, i64 830699}
!353 = !{i64 833370}
!354 = !{!"branch_weights", i32 1, i32 2000}
!355 = !{i64 833655}
