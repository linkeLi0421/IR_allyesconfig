; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/cadence/macb_main.c_pt.bc'
source_filename = "../drivers/net/ethernet/cadence/macb_main.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.platform_driver = type { ptr, ptr, ptr, ptr, ptr, %struct.device_driver, ptr, i8 }
%struct.device_driver = type { ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], ptr }
%struct.dev_pm_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.macb_config = type { i32, i32, ptr, ptr, i32, ptr }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.macb_usrio_config = type { i32, i32, i32, i32, i32 }
%struct.net_device_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.ethtool_ops = type { i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.atomic_t = type { i32 }
%struct.gem_statistic = type { [32 x i8], i32, i32 }
%struct.macb_ptp_info = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.phylink_pcs_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.phylink_mac_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.clk_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.clk_bulk_data = type { ptr, ptr }
%struct.platform_device = type { ptr, i32, i8, %struct.device, i64, %struct.device_dma_parameters, i32, ptr, ptr, ptr, ptr, %struct.pdev_archdata }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.list_head = type { ptr, ptr }
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.pdev_archdata = type { ptr }
%struct.net_device = type { [16 x i8], ptr, ptr, i32, i32, i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.130, i32, i64, ptr, i32, i16, i16, i32, i16, i16, i64, i64, i64, i64, i64, i64, i64, i32, i32, i16, i8, i8, i32, %struct.net_device_stats, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, [32 x i8], i8, i8, i8, i8, i16, i16, i16, i16, %struct.spinlock, i32, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, ptr, %struct.list_head, i32, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, [32 x i8], ptr, %struct.hlist_node, [96 x i8], ptr, i32, i32, ptr, i32, %struct.spinlock, ptr, [2 x ptr], ptr, ptr, [16 x %struct.hlist_head], %struct.timer_list, i32, i32, %struct.list_head, ptr, %struct.ref_tracker_dir, %struct.list_head, i8, i8, i16, i8, ptr, ptr, %struct.possible_net_t, ptr, i32, %union.anon.147, ptr, ptr, %struct.device, [4 x ptr], ptr, ptr, i32, i16, ptr, i16, [16 x %struct.netdev_tc_txq], [16 x i8], i32, ptr, ptr, ptr, ptr, i8, i8, %struct.list_head, ptr, ptr, ptr, [3 x %struct.bpf_xdp_entity], [32 x i8], ptr, ptr, [44 x i8] }
%struct.anon.130 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32, %struct.rb_root }
%struct.rb_root = type { ptr }
%struct.hlist_head = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.possible_net_t = type { ptr }
%union.anon.147 = type { ptr }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.bpf_xdp_entity = type { ptr, ptr }
%struct.macb = type { ptr, i8, ptr, ptr, i32, i32, i32, i32, i32, [8 x %struct.macb_queue], %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.149, %struct.macb_or_gem_ops, ptr, ptr, %struct.phylink_config, %struct.phylink_pcs, %struct.phylink_pcs, i32, i32, i32, [2 x %struct.macb_tx_skb], i32, [91 x i64], i32, i32, i32, ptr, i8, %struct.spinlock, i32, ptr, %struct.ptp_clock_info, %struct.tsu_incr, %struct.hwtstamp_config, %struct.ethtool_rx_fs_list, %struct.spinlock, i32, %struct.tasklet_struct, i32, i32, i32, %struct.macb_pm_data, ptr }
%struct.macb_queue = type { ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, %struct.work_struct, i32, i32, i32, i32, ptr, ptr, ptr, %struct.napi_struct, %struct.queue_stats, %struct.work_struct, i32, i32, [128 x %struct.gem_tx_ts] }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.queue_stats = type { %union.anon.148, i32, i32, i32, i32, i32 }
%union.anon.148 = type { i32 }
%struct.gem_tx_ts = type { ptr, %struct.macb_dma_desc_ptp }
%struct.macb_dma_desc_ptp = type { i32, i32 }
%union.anon.149 = type { %struct.gem_stats }
%struct.gem_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.macb_or_gem_ops = type { ptr, ptr, ptr, ptr }
%struct.phylink_config = type { ptr, i32, i8, i8, i8, i8, ptr, [1 x i32], i32 }
%struct.phylink_pcs = type { ptr, i8 }
%struct.macb_tx_skb = type { ptr, i32, i32, i8 }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.tsu_incr = type { i32, i32 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ethtool_rx_fs_list = type { %struct.list_head, i32 }
%struct.tasklet_struct = type { ptr, i32, %struct.atomic_t, i8, %union.anon.153, i32 }
%union.anon.153 = type { ptr }
%struct.macb_pm_data = type { i32, i32 }
%struct.mii_bus = type { ptr, ptr, [61 x i8], ptr, ptr, ptr, ptr, [32 x %struct.mdio_bus_stats], %struct.mutex, ptr, i32, %struct.device, [32 x ptr], i32, i32, [32 x i32], i32, i32, ptr, i32, %struct.mutex, [32 x ptr] }
%struct.mdio_bus_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.netdev_queue = type { ptr, ptr, ptr, ptr, %struct.kobject, i32, %struct.atomic_t, ptr, ptr, [88 x i8], %struct.spinlock, i32, i32, i32, [72 x i8], %struct.dql }
%struct.dql = type { i32, i32, i32, [116 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [88 x i8] }
%struct.macb_platform_data = type { ptr, ptr }
%struct.macb_dma_desc = type { i32, i32 }
%struct.sk_buff = type { %union.anon.50, %union.anon.53, %union.anon.54, [48 x i8], %union.anon.55, i32, i32, i32, i16, i16, i16, [0 x i8], i8, i8, [4 x i8], %union.anon.57, ptr, ptr, ptr, ptr, i32, %struct.refcount_struct, ptr }
%union.anon.50 = type { %struct.anon.51 }
%struct.anon.51 = type { ptr, ptr, %union.anon.52 }
%union.anon.52 = type { ptr }
%union.anon.53 = type { ptr }
%union.anon.54 = type { i64 }
%union.anon.55 = type { %struct.anon.56 }
%struct.anon.56 = type { i32, ptr }
%union.anon.57 = type { %struct.anon.58 }
%struct.anon.58 = type <{ [0 x i8], i16, [0 x i8], i24, i16, %union.anon.59, i32, i32, i32, i16, i16, %union.anon.61, i32, %union.anon.62, %union.anon.63, i16, i16, i16, i16, i16, i16, i16, i64 }>
%union.anon.59 = type { i32 }
%union.anon.61 = type { i32 }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i16 }
%struct.skb_shared_info = type { i8, i8, i8, i8, i16, i16, ptr, %struct.skb_shared_hwtstamps, i32, i32, %struct.atomic_t, ptr, [17 x %struct.bio_vec] }
%struct.skb_shared_hwtstamps = type { i64 }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.anon.60 = type { i16, i16 }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.tcphdr = type { i16, i16, i32, i32, i16, i16, i16, i16 }
%struct.page = type { i32, %union.anon.2, %union.anon.123, %struct.atomic_t, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.123 = type { %struct.atomic_t }
%struct.netdev_hw_addr = type { %struct.list_head, %struct.rb_node, [32 x i8], i8, i8, i32, i32, i32, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.of_phandle_args = type { ptr, i32, [16 x i32] }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.145, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.145 = type { i32 }
%struct.ethtool_tcpip4_spec = type { i32, i32, i16, i16, i8 }
%struct.ethtool_rx_fs_item = type { %struct.ethtool_rx_flow_spec, %struct.list_head }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.phylink_link_state = type { [3 x i32], [3 x i32], i32, i32, i32, i32, i8 }
%struct.clk_init_data = type { ptr, ptr, ptr, ptr, ptr, i8, i32 }
%struct.sifive_fu540_macb_mgmt = type { ptr, i32, %struct.clk_hw }
%struct.clk_hw = type { ptr, ptr, ptr }

@__initcall__kmod_macb__513_5066_macb_driver_init6 = internal global ptr @macb_driver_init, section ".initcall6.init", align 4
@macb_driver = internal global { %struct.platform_driver, [56 x i8] } { %struct.platform_driver { ptr @macb_probe, ptr @macb_remove, ptr null, ptr null, ptr null, %struct.device_driver { ptr @.str, ptr null, ptr null, ptr null, i8 0, i32 0, ptr @macb_dt_ids, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_pm_ops, ptr null, ptr null }, ptr null, i8 0 }, [56 x i8] zeroinitializer }, align 32
@__exitcall_macb_driver_exit = internal global ptr @macb_driver_exit, section ".exitcall.exit", align 4
@__UNIQUE_ID_file514 = internal constant [44 x i8] c"macb.file=drivers/net/ethernet/cadence/macb\00", section ".modinfo", align 1
@__UNIQUE_ID_license515 = internal constant [17 x i8] c"macb.license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_description516 = internal constant [50 x i8] c"macb.description=Cadence MACB/GEM Ethernet driver\00", section ".modinfo", align 1
@__UNIQUE_ID_author517 = internal constant [39 x i8] c"macb.author=Haavard Skinnemoen (Atmel)\00", section ".modinfo", align 1
@__UNIQUE_ID_alias518 = internal constant [25 x i8] c"macb.alias=platform:macb\00", section ".modinfo", align 1
@.str = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"macb\00", [27 x i8] zeroinitializer }, align 32
@macb_dt_ids = internal constant { [20 x %struct.of_device_id], [976 x i8] } { [20 x %struct.of_device_id] [%struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at32ap7000-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at91sam9260-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @at91sam9260_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr null }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,np4-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @np4_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,pc302-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @pc302gem_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @pc302gem_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,sam9x60-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @at91sam9260_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d2-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama5d2_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d29-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama5d29_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d3-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama5d3_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d3-macb\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama5d3macb_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"atmel,sama5d4-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama5d4_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,at91rm9200-emac\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @emac_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,emac\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @emac_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,zynqmp-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @zynqmp_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"cdns,zynq-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @zynq_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"sifive,fu540-c000-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @fu540_c000_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"microchip,sama7g5-gem\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama7g5_gem_config }, %struct.of_device_id { [32 x i8] zeroinitializer, [32 x i8] zeroinitializer, [128 x i8] c"microchip,sama7g5-emac\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", ptr @sama7g5_emac_config }, %struct.of_device_id zeroinitializer], [976 x i8] zeroinitializer }, align 32
@macb_pm_ops = internal constant { %struct.dev_pm_ops, [36 x i8] } { %struct.dev_pm_ops { ptr null, ptr null, ptr @macb_suspend, ptr @macb_resume, ptr @macb_suspend, ptr @macb_resume, ptr @macb_suspend, ptr @macb_resume, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_runtime_suspend, ptr @macb_runtime_resume, ptr null }, [36 x i8] zeroinitializer }, align 32
@default_gem_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 536871008, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 10240, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"magic-packet\00", [19 x i8] zeroinitializer }, align 32
@macb_probe.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.2 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"&bp->lock\00", [22 x i8] zeroinitializer }, align 32
@macb_probe._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.3, ptr @.str.4, ptr @.str.5, i32 4799, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Cannot register net device, aborting.\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"macb_probe\00", [21 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"drivers/net/ethernet/cadence/macb_main.c\00", [55 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@macb_probe._entry_ptr = internal global ptr @macb_probe._entry, section ".printk_index", align 4
@.str.8 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"Cadence %s rev 0x%08x at 0x%08lx irq %d (%pM)\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"GEM\00", [28 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"MACB\00", [27 x i8] zeroinitializer }, align 32
@macb_default_usrio = internal constant { %struct.macb_usrio_config, [44 x i8] } { %struct.macb_usrio_config { i32 1, i32 1, i32 1, i32 2, i32 0 }, [44 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pclk\00", [27 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hclk\00", [27 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"failed to get pclk\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"failed to get hclk\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"tx_clk\00", [25 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rx_clk\00", [25 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"tsu_clk\00", [24 x i8] zeroinitializer }, align 32
@macb_clk_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str.5, i32 3789, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"failed to enable pclk (%d)\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"macb_clk_init\00", [18 x i8] zeroinitializer }, align 32
@macb_clk_init._entry_ptr = internal global ptr @macb_clk_init._entry, section ".printk_index", align 4
@macb_clk_init._entry.20 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.21, ptr @.str.19, ptr @.str.5, i32 3795, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"failed to enable hclk (%d)\0A\00", [36 x i8] zeroinitializer }, align 32
@macb_clk_init._entry_ptr.22 = internal global ptr @macb_clk_init._entry.20, section ".printk_index", align 4
@macb_clk_init._entry.23 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.19, ptr @.str.5, i32 3801, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"failed to enable tx_clk (%d)\0A\00", [34 x i8] zeroinitializer }, align 32
@macb_clk_init._entry_ptr.25 = internal global ptr @macb_clk_init._entry.23, section ".printk_index", align 4
@macb_clk_init._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.19, ptr @.str.5, i32 3807, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"failed to enable rx_clk (%d)\0A\00", [34 x i8] zeroinitializer }, align 32
@macb_clk_init._entry_ptr.28 = internal global ptr @macb_clk_init._entry.26, section ".printk_index", align 4
@macb_clk_init._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.19, ptr @.str.5, i32 3813, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"failed to enable tsu_clk (%d)\0A\00", [33 x i8] zeroinitializer }, align 32
@macb_clk_init._entry_ptr.31 = internal global ptr @macb_clk_init._entry.29, section ".printk_index", align 4
@macb_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.33, ptr @.str.5, i32 3898, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"Unable to request IRQ %d (error %d)\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"macb_init\00", [22 x i8] zeroinitializer }, align 32
@macb_init._entry_ptr = internal global ptr @macb_init._entry, section ".printk_index", align 4
@macb_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.34 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"(work_completion)(&queue->tx_error_task)\00", [55 x i8] zeroinitializer }, align 32
@macb_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @macb_open, ptr @macb_close, ptr @macb_start_xmit, ptr @macb_features_check, ptr null, ptr null, ptr @macb_set_rx_mode, ptr @eth_mac_addr, ptr @eth_validate_addr, ptr null, ptr @macb_ioctl, ptr null, ptr null, ptr null, ptr null, ptr @macb_change_mtu, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_stats, ptr null, ptr null, ptr @macb_poll_controller, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_set_features, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@gem_ethtool_ops = internal constant { %struct.ethtool_ops, [68 x i8] } { %struct.ethtool_ops { i8 0, i32 0, i32 0, ptr null, ptr @macb_get_regs_len, ptr @macb_get_regs, ptr @macb_get_wol, ptr @macb_set_wol, ptr null, ptr null, ptr null, ptr @ethtool_op_get_link, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_ringparam, ptr @macb_set_ringparam, ptr null, ptr null, ptr null, ptr null, ptr @gem_get_ethtool_strings, ptr null, ptr @gem_get_ethtool_stats, ptr null, ptr null, ptr null, ptr null, ptr @gem_get_sset_count, ptr @gem_get_rxnfc, ptr @gem_set_rxnfc, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_ts_info, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_link_ksettings, ptr @macb_set_link_ksettings, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [68 x i8] zeroinitializer }, align 32
@macb_ethtool_ops = internal constant { %struct.ethtool_ops, [68 x i8] } { %struct.ethtool_ops { i8 0, i32 0, i32 0, ptr null, ptr @macb_get_regs_len, ptr @macb_get_regs, ptr @macb_get_wol, ptr @macb_set_wol, ptr null, ptr null, ptr null, ptr @ethtool_op_get_link, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_ringparam, ptr @macb_set_ringparam, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @ethtool_op_get_ts_info, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_link_ksettings, ptr @macb_set_link_ksettings, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [68 x i8] zeroinitializer }, align 32
@macb_init.__key.35 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.36 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"&bp->rx_fs_lock\00", [16 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"DMA bus error: HRESP not OK\0A\00", [35 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@.str.38 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"BUG: halt tx timed out\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"BUG: TX buffers exhausted mid-frame\0A\00", [59 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@macb_open.__UNIQUE_ID_ddebug499 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.40, ptr @.str.5, ptr @.str.41, i8 2, i8 -82, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.40 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"macb_open\00", [22 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"open\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Unable to allocate DMA memory (error %d)\0A\00", [54 x i8] zeroinitializer }, align 32
@macb_init_rx_buffer_size.__UNIQUE_ID_ddebug492 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.43, ptr @.str.5, ptr @.str.44, i8 2, i8 48, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.43 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"macb_init_rx_buffer_size\00", [39 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"RX buffer must be multiple of %d bytes, expanding\0A\00", [45 x i8] zeroinitializer }, align 32
@macb_init_rx_buffer_size.__UNIQUE_ID_ddebug493 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.43, ptr @.str.5, ptr @.str.45, i8 2, i8 50, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.45 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"mtu [%u] rx_buffer_size [%zu]\0A\00", [33 x i8] zeroinitializer }, align 32
@macb_alloc_consistent.__UNIQUE_ID_ddebug496 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.46, ptr @.str.5, ptr @.str.47, i8 2, i8 81, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.46 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"macb_alloc_consistent\00", [42 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"Allocated TX ring for queue %u of %d bytes at %08lx (mapped %p)\0A\00", [63 x i8] zeroinitializer }, align 32
@macb_alloc_consistent.__UNIQUE_ID_ddebug497 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.46, ptr @.str.5, ptr @.str.48, i8 2, i8 85, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.48 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Allocated RX ring of %d bytes at %08lx (mapped %p)\0A\00", [44 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@macb_configure_dma.__UNIQUE_ID_ddebug498 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.49, ptr @.str.5, ptr @.str.50, i8 2, i8 -123, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.49 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"macb_configure_dma\00", [45 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Cadence configure DMA with 0x%08x\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"no PHY found\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Could not attach PHY (%d)\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"phy-handle\00", [21 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Error - LSO headers fragmented!!!\0A\00", [61 x i8] zeroinitializer }, align 32
@macb_start_xmit.__UNIQUE_ID_ddebug491 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.55, ptr @.str.5, ptr @.str.56, i8 2, i8 39, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.55 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macb_start_xmit\00", [16 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"tx_head = %u, tx_tail = %u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"BUG! empty skb!\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TX DMA map failed\0A\00", [45 x i8] zeroinitializer }, align 32
@dma_map_single_attrs.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.59 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/dma-mapping.h\00", [36 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s %s: rejecting DMA map of vmalloc memory\0A\00", [52 x i8] zeroinitializer }, align 32
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@gem_statistics = internal constant { [43 x %struct.gem_statistic], [424 x i8] } { [43 x %struct.gem_statistic] [%struct.gem_statistic { [32 x i8] c"tx_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 256, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 264, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_broadcast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 268, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_multicast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 272, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_pause_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 276, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_64_byte_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 280, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_65_127_byte_frames\00\00\00\00\00\00\00\00\00\00\00", i32 284, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_128_255_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 288, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_256_511_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 292, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_512_1023_byte_frames\00\00\00\00\00\00\00\00\00", i32 296, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_1024_1518_byte_frames\00\00\00\00\00\00\00\00", i32 300, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_greater_than_1518_byte_frames", i32 304, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_underrun\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 308, i32 576 }, %struct.gem_statistic { [32 x i8] c"tx_single_collision_frames\00\00\00\00\00\00", i32 312, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_multiple_collision_frames\00\00\00\00", i32 316, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_excessive_collisions\00\00\00\00\00\00\00\00\00", i32 320, i32 1216 }, %struct.gem_statistic { [32 x i8] c"tx_late_collisions\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 324, i32 1088 }, %struct.gem_statistic { [32 x i8] c"tx_deferred_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 328, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_carrier_sense_errors\00\00\00\00\00\00\00\00\00", i32 332, i32 1088 }, %struct.gem_statistic { [32 x i8] c"rx_octets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 336, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 344, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_broadcast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 348, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_multicast_frames\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 352, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_pause_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 356, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_64_byte_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 360, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_65_127_byte_frames\00\00\00\00\00\00\00\00\00\00\00", i32 364, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_128_255_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 368, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_256_511_byte_frames\00\00\00\00\00\00\00\00\00\00", i32 372, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_512_1023_byte_frames\00\00\00\00\00\00\00\00\00", i32 376, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_1024_1518_byte_frames\00\00\00\00\00\00\00\00", i32 380, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_greater_than_1518_byte_frames", i32 384, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_undersized_frames\00\00\00\00\00\00\00\00\00\00\00\00", i32 388, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_oversize_frames\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 392, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_jabbers\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 396, i32 3 }, %struct.gem_statistic { [32 x i8] c"rx_frame_check_sequence_errors\00\00", i32 400, i32 9 }, %struct.gem_statistic { [32 x i8] c"rx_length_field_frame_errors\00\00\00\00", i32 404, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_symbol_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 408, i32 17 }, %struct.gem_statistic { [32 x i8] c"rx_alignment_errors\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 412, i32 5 }, %struct.gem_statistic { [32 x i8] c"rx_resource_errors\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 416, i32 5 }, %struct.gem_statistic { [32 x i8] c"rx_overruns\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 420, i32 33 }, %struct.gem_statistic { [32 x i8] c"rx_ip_header_checksum_errors\00\00\00\00", i32 424, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_tcp_checksum_errors\00\00\00\00\00\00\00\00\00\00", i32 428, i32 1 }, %struct.gem_statistic { [32 x i8] c"rx_udp_checksum_errors\00\00\00\00\00\00\00\00\00\00", i32 432, i32 1 }], [424 x i8] zeroinitializer }, align 32
@gem_alloc_rx_buffers.__UNIQUE_ID_ddebug494 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.61, ptr @.str.5, ptr @.str.62, i8 2, i8 72, i8 0, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"gem_alloc_rx_buffers\00", [43 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"Allocated %d RX struct sk_buff entries at %p\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Unable to allocate sk_buff\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"not whole frame pointed by descriptor\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"inconsistent Rx descriptor chain\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"q%d_%s\00", [25 x i8] zeroinitializer }, align 32
@queue_statistics = internal constant { [6 x %struct.gem_statistic], [48 x i8] } { [6 x %struct.gem_statistic] [%struct.gem_statistic { [32 x i8] c"rx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"rx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_packets\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_bytes\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.gem_statistic { [32 x i8] c"tx_dropped\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }], [48 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Command parameter %d is not supported\0A\00", [57 x i8] zeroinitializer }, align 32
@gem_add_flow_filter.__UNIQUE_ID_ddebug508 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.68, ptr @.str.5, ptr @.str.69, i8 3, i8 72, i8 -64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.68 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"gem_add_flow_filter\00", [44 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"Adding flow filter entry,type=%u,queue=%u,loc=%u,src=%08X,dst=%08X,ps=%u,pd=%u\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"Rule not added: location %d not free!\0A\00", [57 x i8] zeroinitializer }, align 32
@gem_del_flow_filter.__UNIQUE_ID_ddebug509 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.71, ptr @.str.5, ptr @.str.72, i8 3, i8 86, i8 64, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.71 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"gem_del_flow_filter\00", [44 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [82 x i8], [46 x i8] } { [82 x i8] c"Deleting flow filter entry,type=%u,queue=%u,loc=%u,src=%08X,dst=%08X,ps=%u,pd=%u\0A\00", [46 x i8] zeroinitializer }, align 32
@macb_alloc_rx_buffers.__UNIQUE_ID_ddebug495 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.73, ptr @.str.5, ptr @.str.74, i8 2, i8 76, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.73 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"macb_alloc_rx_buffers\00", [42 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"Allocated RX buffers of %d bytes at %08lx (mapped %p)\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"RX queue corruption: reset it\0A\00", [33 x i8] zeroinitializer }, align 32
@macb_configure_caps._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.76, ptr @.str.77, ptr @.str.5, i32 3701, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"GEM doesn't support hardware ptp.\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"macb_configure_caps\00", [44 x i8] zeroinitializer }, align 32
@macb_configure_caps._entry_ptr = internal global ptr @macb_configure_caps._entry, section ".printk_index", align 4
@gem_ptp_info = internal global { %struct.macb_ptp_info, [36 x i8] } { %struct.macb_ptp_info { ptr @gem_ptp_init, ptr @gem_ptp_remove, ptr @gem_get_ptp_max_adj, ptr @gem_get_tsu_rate, ptr @gem_get_ts_info, ptr @gem_get_hwtst, ptr @gem_set_hwtst }, [36 x i8] zeroinitializer }, align 32
@macb_configure_caps.__UNIQUE_ID_ddebug510 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str, ptr @.str.77, ptr @.str.5, ptr @.str.78, i8 3, i8 -97, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.78 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Cadence caps 0x%08x\0A\00", [43 x i8] zeroinitializer }, align 32
@macb_get_hwaddr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.79, ptr @.str.80, ptr @.str.5, i32 321, ptr @.str.81, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"invalid hw address, using random\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"macb_get_hwaddr\00", [16 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@macb_get_hwaddr._entry_ptr = internal global ptr @macb_get_hwaddr._entry, section ".printk_index", align 4
@.str.82 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"MACB_mii_bus\00", [19 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s-%x\00", [26 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mdio\00", [27 x i8] zeroinitializer }, align 32
@macb_phylink_pcs_ops = internal constant { %struct.phylink_pcs_ops, [44 x i8] } { %struct.phylink_pcs_ops { ptr null, ptr @macb_pcs_get_state, ptr @macb_pcs_config, ptr @macb_pcs_an_restart, ptr null }, [44 x i8] zeroinitializer }, align 32
@macb_phylink_usx_pcs_ops = internal constant { %struct.phylink_pcs_ops, [44 x i8] } { %struct.phylink_pcs_ops { ptr null, ptr @macb_usx_pcs_get_state, ptr @macb_usx_pcs_config, ptr null, ptr @macb_usx_pcs_link_up }, [44 x i8] zeroinitializer }, align 32
@macb_phylink_ops = internal constant { %struct.phylink_mac_ops, [60 x i8] } { %struct.phylink_mac_ops { ptr @phylink_generic_validate, ptr @macb_mac_select_pcs, ptr null, ptr null, ptr @macb_mac_config, ptr null, ptr null, ptr @macb_mac_link_down, ptr @macb_mac_link_up }, [60 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Could not create a phylink instance (%ld)\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"unable to generate target frequency: %ld Hz\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"adjusting tx_clk failed.\0A\00", [38 x i8] zeroinitializer }, align 32
@at91sam9260_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 6, i32 0, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@np4_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 16, i32 0, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@pc302gem_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 1610612736, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama5d2_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 4, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama5d29_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 68, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama5d3_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 1610612772, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 10240, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama5d3macb_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 1073741830, i32 0, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama5d4_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 4, i32 4, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@emac_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 134217984, i32 0, ptr @at91ether_clk_init, ptr @at91ether_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@zynqmp_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 536871136, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 10240, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@zynq_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 536871176, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@fu540_c000_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 536871008, i32 16, ptr @fu540_c000_clk_init, ptr @fu540_c000_init, i32 10240, ptr @macb_default_usrio }, [40 x i8] zeroinitializer }, align 32
@sama7g5_gem_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 603980288, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @sama7g5_usrio }, [40 x i8] zeroinitializer }, align 32
@sama7g5_emac_config = internal constant { %struct.macb_config, [40 x i8] } { %struct.macb_config { i32 518, i32 16, ptr @macb_clk_init, ptr @macb_init, i32 0, ptr @sama7g5_usrio }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"ether_clk\00", [22 x i8] zeroinitializer }, align 32
@at91ether_clk_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.89, ptr @.str.5, i32 4344, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"at91ether_clk_init\00", [45 x i8] zeroinitializer }, align 32
@at91ether_clk_init._entry_ptr = internal global ptr @at91ether_clk_init._entry, section ".printk_index", align 4
@at91ether_netdev_ops = internal constant { %struct.net_device_ops, [80 x i8] } { %struct.net_device_ops { ptr null, ptr null, ptr @at91ether_open, ptr @at91ether_close, ptr @at91ether_start_xmit, ptr null, ptr null, ptr null, ptr @macb_set_rx_mode, ptr @eth_mac_addr, ptr @eth_validate_addr, ptr null, ptr @macb_ioctl, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @macb_get_stats, ptr null, ptr null, ptr @at91ether_poll_controller, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [80 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: DMA mapping error\0A\00", [41 x i8] zeroinitializer }, align 32
@__func__.at91ether_start_xmit = private unnamed_addr constant [21 x i8] c"at91ether_start_xmit\00", align 1
@.str.91 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"%s called, but device is busy!\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"ROVR error\0A\00", [20 x i8] zeroinitializer }, align 32
@mgmt = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.93 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"sifive-gemgxl-mgmt\00", [45 x i8] zeroinitializer }, align 32
@fu540_c000_ops = internal constant { %struct.clk_ops, [60 x i8] } { %struct.clk_ops { ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @fu540_macb_tx_recalc_rate, ptr @fu540_macb_tx_round_rate, ptr null, ptr null, ptr null, ptr @fu540_macb_tx_set_rate, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [60 x i8] zeroinitializer }, align 32
@fu540_c000_clk_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.95, ptr @.str.5, i32 4457, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"failed to enable tx_clk (%u)\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"fu540_c000_clk_init\00", [44 x i8] zeroinitializer }, align 32
@fu540_c000_clk_init._entry_ptr = internal global ptr @fu540_c000_clk_init._entry, section ".printk_index", align 4
@fu540_c000_clk_init._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.95, ptr @.str.5, i32 4461, ptr @.str.81, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Registered clk switch '%s'\0A\00", [36 x i8] zeroinitializer }, align 32
@fu540_c000_clk_init._entry_ptr.98 = internal global ptr @fu540_c000_clk_init._entry.96, section ".printk_index", align 4
@sama7g5_usrio = internal constant { %struct.macb_usrio_config, [44 x i8] } { %struct.macb_usrio_config { i32 0, i32 1, i32 2, i32 4, i32 64 }, [44 x i8] zeroinitializer }, align 32
@macb_suspend._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.99, ptr @.str.5, i32 4893, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"macb_suspend\00", [19 x i8] zeroinitializer }, align 32
@macb_suspend._entry_ptr = internal global ptr @macb_suspend._entry, section ".printk_index", align 4
@macb_suspend._entry.100 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.99, ptr @.str.5, i32 4905, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@macb_suspend._entry_ptr.101 = internal global ptr @macb_suspend._entry.100, section ".printk_index", align 4
@macb_resume._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.32, ptr @.str.102, ptr @.str.5, i32 4981, ptr @.str.6, ptr @.str.7 }, [40 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"macb_resume\00", [20 x i8] zeroinitializer }, align 32
@macb_resume._entry_ptr = internal global ptr @macb_resume._entry, section ".printk_index", align 4
@switch.table.macb_probe = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_probe.103 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_alloc_consistent = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_alloc_consistent.104 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_free_consistent = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_free_consistent.105 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_get_regs = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.macb_get_regs.106 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16, i32 16, i32 24], [20 x i8] zeroinitializer }, align 32
@switch.table.at91ether_open = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 144, i32 144, i32 216], [20 x i8] zeroinitializer }, align 32
@switch.table.at91ether_open.107 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 144, i32 144, i32 216], [20 x i8] zeroinitializer }, align 32
@switch.table.at91ether_stop = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 144, i32 144, i32 216], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294966779]
@__sancov_gen_cov_switch_values.108 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.109 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.110 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.111 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.112 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.113 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.114 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.115 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.116 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.117 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.118 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.119 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.120 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.121 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.122 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.123 = internal global [4 x i64] [i64 2, i64 32, i64 35248, i64 35249]
@__sancov_gen_cov_switch_values.124 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 19]
@__sancov_gen_cov_switch_values.125 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.126 = internal global [6 x i64] [i64 4, i64 32, i64 45, i64 46, i64 47, i64 48]
@__sancov_gen_cov_switch_values.127 = internal global [4 x i64] [i64 2, i64 32, i64 49, i64 50]
@__sancov_gen_cov_switch_values.128 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.129 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 26]
@__sancov_gen_cov_switch_values.130 = internal global [4 x i64] [i64 2, i64 32, i64 4, i64 26]
@__sancov_gen_cov_switch_values.131 = internal global [5 x i64] [i64 3, i64 32, i64 10, i64 100, i64 1000]
@__sancov_gen_cov_switch_values.132 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.133 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.134 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.135 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.136 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.137 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.138 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.139 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.140 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.141 = internal global [5 x i64] [i64 3, i64 8, i64 1, i64 2, i64 3]
@___asan_gen_.142 = private unnamed_addr constant [12 x i8] c"macb_driver\00", align 1
@___asan_gen_.144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 5056, i32 31 }
@___asan_gen_.147 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 5060, i32 12 }
@___asan_gen_.148 = private unnamed_addr constant [12 x i8] c"macb_dt_ids\00", align 1
@___asan_gen_.150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4608, i32 34 }
@___asan_gen_.151 = private unnamed_addr constant [12 x i8] c"macb_pm_ops\00", align 1
@___asan_gen_.153 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 5051, i32 32 }
@___asan_gen_.154 = private unnamed_addr constant [19 x i8] c"default_gem_config\00", align 1
@___asan_gen_.156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4633, i32 33 }
@___asan_gen_.159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4725, i32 26 }
@___asan_gen_.165 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4731, i32 2 }
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4799, i32 3 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4805, i32 19 }
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4806, i32 25 }
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4806, i32 33 }
@___asan_gen_.193 = private unnamed_addr constant [19 x i8] c"macb_default_usrio\00", align 1
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3989, i32 39 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3761, i32 36 }
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3762, i32 36 }
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3768, i32 10 }
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3773, i32 10 }
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3775, i32 46 }
@___asan_gen_.213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3779, i32 46 }
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3783, i32 47 }
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3789, i32 3 }
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3795, i32 3 }
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3801, i32 3 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3807, i32 3 }
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3813, i32 3 }
@___asan_gen_.258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3896, i32 4 }
@___asan_gen_.264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3902, i32 3 }
@___asan_gen_.265 = private unnamed_addr constant [16 x i8] c"macb_netdev_ops\00", align 1
@___asan_gen_.267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3655, i32 36 }
@___asan_gen_.268 = private unnamed_addr constant [16 x i8] c"gem_ethtool_ops\00", align 1
@___asan_gen_.270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3534, i32 33 }
@___asan_gen_.271 = private unnamed_addr constant [17 x i8] c"macb_ethtool_ops\00", align 1
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3521, i32 33 }
@___asan_gen_.274 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3958, i32 4 }
@___asan_gen_.282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1821, i32 20 }
@___asan_gen_.285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1047, i32 23 }
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1088, i32 9 }
@___asan_gen_.294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2744, i32 2 }
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2755, i32 19 }
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2239, i32 4 }
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2247, i32 2 }
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2371, i32 3 }
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2386, i32 3 }
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2580, i32 3 }
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 772, i32 20 }
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 781, i32 19 }
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 754, i32 28 }
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2167, i32 24 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2205, i32 3 }
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1938, i32 23 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2014, i32 22 }
@___asan_gen_.350 = private unnamed_addr constant [31 x i8] c"../include/linux/dma-mapping.h\00", align 1
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.350, i32 326, i32 6 }
@___asan_gen_.352 = private unnamed_addr constant [15 x i8] c"gem_statistics\00", align 1
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.374, i32 1042, i32 35 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2334, i32 4 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1228, i32 9 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1326, i32 8 }
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1334, i32 8 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2935, i32 44 }
@___asan_gen_.373 = private unnamed_addr constant [17 x i8] c"queue_statistics\00", align 1
@___asan_gen_.374 = private unnamed_addr constant [39 x i8] c"../drivers/net/ethernet/cadence/macb.h\00", align 1
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.374, i32 1127, i32 35 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3488, i32 6 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3358, i32 2 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3374, i32 23 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3411, i32 4 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 2352, i32 2 }
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 1535, i32 23 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3700, i32 5 }
@___asan_gen_.412 = private unnamed_addr constant [13 x i8] c"gem_ptp_info\00", align 1
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3192, i32 29 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 3710, i32 2 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 321, i32 2 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 904, i32 22 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 907, i32 45 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 862, i32 35 }
@___asan_gen_.439 = private unnamed_addr constant [21 x i8] c"macb_phylink_pcs_ops\00", align 1
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 581, i32 37 }
@___asan_gen_.442 = private unnamed_addr constant [25 x i8] c"macb_phylink_usx_pcs_ops\00", align 1
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 575, i32 37 }
@___asan_gen_.445 = private unnamed_addr constant [17 x i8] c"macb_phylink_ops\00", align 1
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 744, i32 37 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 847, i32 19 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 502, i32 8 }
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 506, i32 23 }
@___asan_gen_.457 = private unnamed_addr constant [19 x i8] c"at91sam9260_config\00", align 1
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4499, i32 33 }
@___asan_gen_.460 = private unnamed_addr constant [11 x i8] c"np4_config\00", align 1
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4563, i32 33 }
@___asan_gen_.463 = private unnamed_addr constant [16 x i8] c"pc302gem_config\00", align 1
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4514, i32 33 }
@___asan_gen_.466 = private unnamed_addr constant [15 x i8] c"sama5d2_config\00", align 1
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4522, i32 33 }
@___asan_gen_.469 = private unnamed_addr constant [16 x i8] c"sama5d29_config\00", align 1
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4530, i32 33 }
@___asan_gen_.472 = private unnamed_addr constant [15 x i8] c"sama5d3_config\00", align 1
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4538, i32 33 }
@___asan_gen_.475 = private unnamed_addr constant [19 x i8] c"sama5d3macb_config\00", align 1
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4506, i32 33 }
@___asan_gen_.478 = private unnamed_addr constant [15 x i8] c"sama5d4_config\00", align 1
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4548, i32 33 }
@___asan_gen_.481 = private unnamed_addr constant [12 x i8] c"emac_config\00", align 1
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4556, i32 33 }
@___asan_gen_.484 = private unnamed_addr constant [14 x i8] c"zynqmp_config\00", align 1
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4570, i32 33 }
@___asan_gen_.487 = private unnamed_addr constant [12 x i8] c"zynq_config\00", align 1
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4581, i32 33 }
@___asan_gen_.490 = private unnamed_addr constant [18 x i8] c"fu540_c000_config\00", align 1
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4489, i32 33 }
@___asan_gen_.493 = private unnamed_addr constant [19 x i8] c"sama7g5_gem_config\00", align 1
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4590, i32 33 }
@___asan_gen_.496 = private unnamed_addr constant [20 x i8] c"sama7g5_emac_config\00", align 1
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4599, i32 33 }
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4338, i32 35 }
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4344, i32 3 }
@___asan_gen_.508 = private unnamed_addr constant [21 x i8] c"at91ether_netdev_ops\00", align 1
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4313, i32 36 }
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4191, i32 20 }
@___asan_gen_.516 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4201, i32 19 }
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4297, i32 19 }
@___asan_gen_.520 = private unnamed_addr constant [5 x i8] c"mgmt\00", align 1
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4002, i32 39 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4441, i32 14 }
@___asan_gen_.526 = private unnamed_addr constant [15 x i8] c"fu540_c000_ops\00", align 1
@___asan_gen_.528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4418, i32 29 }
@___asan_gen_.537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4457, i32 3 }
@___asan_gen_.543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4461, i32 3 }
@___asan_gen_.544 = private unnamed_addr constant [14 x i8] c"sama7g5_usrio\00", align 1
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4481, i32 39 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4891, i32 5 }
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4903, i32 5 }
@___asan_gen_.556 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.559 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.560 = private constant [44 x i8] c"../drivers/net/ethernet/cadence/macb_main.c\00", align 1
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.560, i32 4979, i32 4 }
@___asan_gen_.562 = private unnamed_addr constant [24 x i8] c"switch.table.macb_probe\00", align 1
@___asan_gen_.563 = private unnamed_addr constant [28 x i8] c"switch.table.macb_probe.103\00", align 1
@___asan_gen_.564 = private unnamed_addr constant [35 x i8] c"switch.table.macb_alloc_consistent\00", align 1
@___asan_gen_.565 = private unnamed_addr constant [39 x i8] c"switch.table.macb_alloc_consistent.104\00", align 1
@___asan_gen_.566 = private unnamed_addr constant [34 x i8] c"switch.table.macb_free_consistent\00", align 1
@___asan_gen_.567 = private unnamed_addr constant [38 x i8] c"switch.table.macb_free_consistent.105\00", align 1
@___asan_gen_.568 = private unnamed_addr constant [27 x i8] c"switch.table.macb_get_regs\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [31 x i8] c"switch.table.macb_get_regs.106\00", align 1
@___asan_gen_.570 = private unnamed_addr constant [28 x i8] c"switch.table.at91ether_open\00", align 1
@___asan_gen_.571 = private unnamed_addr constant [32 x i8] c"switch.table.at91ether_open.107\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [28 x i8] c"switch.table.at91ether_stop\00", align 1
@llvm.compiler.used = appending global [174 x ptr] [ptr @__UNIQUE_ID_alias518, ptr @__UNIQUE_ID_author517, ptr @__UNIQUE_ID_description516, ptr @__UNIQUE_ID_file514, ptr @__UNIQUE_ID_license515, ptr @__exitcall_macb_driver_exit, ptr @__initcall__kmod_macb__513_5066_macb_driver_init6, ptr @at91ether_clk_init._entry, ptr @at91ether_clk_init._entry_ptr, ptr @fu540_c000_clk_init._entry, ptr @fu540_c000_clk_init._entry.96, ptr @fu540_c000_clk_init._entry_ptr, ptr @fu540_c000_clk_init._entry_ptr.98, ptr @macb_clk_init._entry, ptr @macb_clk_init._entry.20, ptr @macb_clk_init._entry.23, ptr @macb_clk_init._entry.26, ptr @macb_clk_init._entry.29, ptr @macb_clk_init._entry_ptr, ptr @macb_clk_init._entry_ptr.22, ptr @macb_clk_init._entry_ptr.25, ptr @macb_clk_init._entry_ptr.28, ptr @macb_clk_init._entry_ptr.31, ptr @macb_configure_caps._entry, ptr @macb_configure_caps._entry_ptr, ptr @macb_driver_exit, ptr @macb_get_hwaddr._entry, ptr @macb_get_hwaddr._entry_ptr, ptr @macb_init._entry, ptr @macb_init._entry_ptr, ptr @macb_probe._entry, ptr @macb_probe._entry_ptr, ptr @macb_resume._entry, ptr @macb_resume._entry_ptr, ptr @macb_suspend._entry, ptr @macb_suspend._entry.100, ptr @macb_suspend._entry_ptr, ptr @macb_suspend._entry_ptr.101, ptr @macb_driver, ptr @.str, ptr @macb_dt_ids, ptr @macb_pm_ops, ptr @default_gem_config, ptr @.str.1, ptr @macb_probe.__key, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @macb_default_usrio, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.21, ptr @.str.24, ptr @.str.27, ptr @.str.30, ptr @.str.32, ptr @.str.33, ptr @macb_init.__key, ptr @.str.34, ptr @macb_netdev_ops, ptr @gem_ethtool_ops, ptr @macb_ethtool_ops, ptr @macb_init.__key.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @gem_statistics, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @queue_statistics, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @gem_ptp_info, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @macb_phylink_pcs_ops, ptr @macb_phylink_usx_pcs_ops, ptr @macb_phylink_ops, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @at91sam9260_config, ptr @np4_config, ptr @pc302gem_config, ptr @sama5d2_config, ptr @sama5d29_config, ptr @sama5d3_config, ptr @sama5d3macb_config, ptr @sama5d4_config, ptr @emac_config, ptr @zynqmp_config, ptr @zynq_config, ptr @fu540_c000_config, ptr @sama7g5_gem_config, ptr @sama7g5_emac_config, ptr @.str.88, ptr @.str.89, ptr @at91ether_netdev_ops, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @mgmt, ptr @.str.93, ptr @fu540_c000_ops, ptr @.str.94, ptr @.str.95, ptr @.str.97, ptr @sama7g5_usrio, ptr @.str.99, ptr @.str.102, ptr @switch.table.macb_probe, ptr @switch.table.macb_probe.103, ptr @switch.table.macb_alloc_consistent, ptr @switch.table.macb_alloc_consistent.104, ptr @switch.table.macb_free_consistent, ptr @switch.table.macb_free_consistent.105, ptr @switch.table.macb_get_regs, ptr @switch.table.macb_get_regs.106, ptr @switch.table.at91ether_open, ptr @switch.table.at91ether_open.107, ptr @switch.table.at91ether_stop], section "llvm.metadata"
@0 = internal global [151 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_driver to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.147 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_dt_ids to i32), i32 3920, i32 4896, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_pm_ops to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.153 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @default_gem_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_probe.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_probe._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_default_usrio to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_clk_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_clk_init._entry.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_clk_init._entry.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_clk_init._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_clk_init._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gem_ethtool_ops to i32), i32 284, i32 352, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_ethtool_ops to i32), i32 284, i32 352, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_init.__key.35 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gem_statistics to i32), i32 1720, i32 2144, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @queue_statistics to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 82, i32 128, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_configure_caps._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @gem_ptp_info to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_get_hwaddr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_phylink_pcs_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_phylink_usx_pcs_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_phylink_ops to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @at91sam9260_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @np4_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pc302gem_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama5d2_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama5d29_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama5d3_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama5d3macb_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama5d4_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @emac_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @zynqmp_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @zynq_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fu540_c000_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama7g5_gem_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama7g5_emac_config to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @at91ether_clk_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @at91ether_netdev_ops to i32), i32 336, i32 416, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.516 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mgmt to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fu540_c000_ops to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fu540_c000_clk_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fu540_c000_clk_init._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sama7g5_usrio to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_suspend._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_suspend._entry.100 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @macb_resume._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_probe to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_probe.103 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_alloc_consistent to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_alloc_consistent.104 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_free_consistent to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_free_consistent.105 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_get_regs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.macb_get_regs.106 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.at91ether_open to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.at91ether_open.107 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.at91ether_stop to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_driver_init() #0 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @__platform_driver_register(ptr noundef nonnull @macb_driver, ptr noundef null) #21
  ret i32 %call
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal void @macb_driver_exit() #0 section ".exit.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @platform_driver_unregister(ptr noundef nonnull @macb_driver) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @platform_driver_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__platform_driver_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_probe(ptr noundef %pdev) #2 align 64 {
entry:
  %clks.i = alloca [5 x %struct.clk_bulk_data], align 4
  %addr.i.i = alloca [6 x i8], align 1
  %addr.i = alloca [6 x i8], align 4
  %pclk = alloca ptr, align 4
  %hclk = alloca ptr, align 4
  %tx_clk = alloca ptr, align 4
  %rx_clk = alloca ptr, align 4
  %tsu_clk = alloca ptr, align 4
  %interface = alloca i32, align 4
  %regs = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %of_node = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 27
  %0 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of_node, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pclk) #21
  %2 = ptrtoint ptr %pclk to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %pclk, align 4, !annotation !294
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hclk) #21
  %3 = ptrtoint ptr %hclk to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %hclk, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tx_clk) #21
  %4 = ptrtoint ptr %tx_clk to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %tx_clk, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rx_clk) #21
  %5 = ptrtoint ptr %rx_clk to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %rx_clk, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tsu_clk) #21
  %6 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %tsu_clk, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %interface) #21
  %7 = ptrtoint ptr %interface to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -1, ptr %interface, align 4, !annotation !294
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %regs) #21
  %8 = ptrtoint ptr %regs to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 -1 to ptr), ptr %regs, align 4, !annotation !294
  %call = call ptr @devm_platform_get_and_ioremap_resource(ptr noundef %pdev, i32 noundef 0, ptr noundef nonnull %regs) #21
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %9 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end.if.end15_crit_edge, label %if.then6

if.end.if.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

if.then6:                                         ; preds = %if.end
  %call7 = call ptr @of_match_node(ptr noundef nonnull @macb_dt_ids, ptr noundef nonnull %1) #21
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.then6.if.end15_crit_edge, label %land.lhs.true

if.then6.if.end15_crit_edge:                      ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

land.lhs.true:                                    ; preds = %if.then6
  %data = getelementptr inbounds %struct.of_device_id, ptr %call7, i32 0, i32 3
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data, align 4
  %tobool9.not = icmp eq ptr %11, null
  br i1 %tobool9.not, label %land.lhs.true.if.end15_crit_edge, label %if.then10

land.lhs.true.if.end15_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end15

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %clk_init12 = getelementptr inbounds %struct.macb_config, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %clk_init12 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %clk_init12, align 4
  %init13 = getelementptr inbounds %struct.macb_config, ptr %11, i32 0, i32 3
  %14 = ptrtoint ptr %init13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %init13, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then10, %land.lhs.true.if.end15_crit_edge, %if.then6.if.end15_crit_edge, %if.end.if.end15_crit_edge
  %macb_config.1 = phi ptr [ @default_gem_config, %if.end.if.end15_crit_edge ], [ %11, %if.then10 ], [ @default_gem_config, %land.lhs.true.if.end15_crit_edge ], [ @default_gem_config, %if.then6.if.end15_crit_edge ]
  %clk_init.1 = phi ptr [ @macb_clk_init, %if.end.if.end15_crit_edge ], [ %13, %if.then10 ], [ @macb_clk_init, %land.lhs.true.if.end15_crit_edge ], [ @macb_clk_init, %if.then6.if.end15_crit_edge ]
  %init.1 = phi ptr [ @macb_init, %if.end.if.end15_crit_edge ], [ %15, %if.then10 ], [ @macb_init, %land.lhs.true.if.end15_crit_edge ], [ @macb_init, %if.then6.if.end15_crit_edge ]
  %call16 = call i32 %clk_init.1(ptr noundef %pdev, ptr noundef nonnull %pclk, ptr noundef nonnull %hclk, ptr noundef nonnull %tx_clk, ptr noundef nonnull %rx_clk, ptr noundef nonnull %tsu_clk) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end19:                                         ; preds = %if.end15
  call void @pm_runtime_set_autosuspend_delay(ptr noundef %dev, i32 noundef 100) #21
  call void @__pm_runtime_use_autosuspend(ptr noundef %dev, i1 noundef zeroext true) #21
  %usage_count.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 12, i32 13
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %16 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !295
  %call.i = call i32 @__pm_runtime_set_status(ptr noundef %dev, i32 noundef 0) #21
  call void @pm_runtime_enable(ptr noundef %dev) #21
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %call, i32 2) #21, !srcloc !296
  %17 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %call) #21, !srcloc !297
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %call, i32 0) #21, !srcloc !296
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %17)
  %cmp.i298 = icmp eq i32 %17, 2
  %add.ptr.i.i = getelementptr i8, ptr %call, i32 252
  %18 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #21
  %19 = call i32 @llvm.bswap.i32(i32 %18) #21
  %id.0.i.i = select i1 %cmp.i298, i32 %18, i32 %19
  %20 = and i32 %id.0.i.i, 268304384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp.i.not.i = icmp eq i32 %20, 0
  br i1 %cmp.i.not.i, label %if.end19.macb_probe_queues.exit_crit_edge, label %if.end.i

if.end19.macb_probe_queues.exit_crit_edge:        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_probe_queues.exit

if.end.i:                                         ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  %add.ptr.i = getelementptr i8, ptr %call, i32 660
  %21 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #21, !srcloc !297
  %22 = lshr i32 %21, 24
  %or.i = or i32 %22, 1
  %call.i.i = call i32 @__sw_hweight32(i32 noundef %or.i) #21
  br label %macb_probe_queues.exit

macb_probe_queues.exit:                           ; preds = %if.end.i, %if.end19.macb_probe_queues.exit_crit_edge
  %queue_mask.0 = phi i32 [ 1, %if.end19.macb_probe_queues.exit_crit_edge ], [ %or.i, %if.end.i ]
  %num_queues.0 = phi i32 [ 1, %if.end19.macb_probe_queues.exit_crit_edge ], [ %call.i.i, %if.end.i ]
  %call28 = call ptr @alloc_etherdev_mqs(i32 noundef 17256, i32 noundef %num_queues.0, i32 noundef %num_queues.0) #21
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %macb_probe_queues.exit.err_disable_clocks_crit_edge, label %if.end31

macb_probe_queues.exit.err_disable_clocks_crit_edge: ; preds = %macb_probe_queues.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_disable_clocks

if.end31:                                         ; preds = %macb_probe_queues.exit
  %frombool = zext i1 %cmp.i298 to i8
  %23 = ptrtoint ptr %regs to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %regs, align 4
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %24, align 4
  %base_addr = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 5
  %27 = ptrtoint ptr %base_addr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %base_addr, align 32
  %parent = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 133, i32 1
  %28 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %dev, ptr %parent, align 8
  %add.ptr.i299 = getelementptr i8, ptr %call28, i32 2304
  %pdev35 = getelementptr i8, ptr %call28, i32 18196
  %29 = ptrtoint ptr %pdev35 to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %pdev, ptr %pdev35, align 4
  %dev36 = getelementptr i8, ptr %call28, i32 18220
  %30 = ptrtoint ptr %dev36 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %call28, ptr %dev36, align 4
  %31 = ptrtoint ptr %add.ptr.i299 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %call, ptr %add.ptr.i299, align 8
  %native_io39 = getelementptr i8, ptr %call28, i32 2308
  %32 = ptrtoint ptr %native_io39 to i32
  call void @__asan_store1_noabort(i32 %32)
  store i8 %frombool, ptr %native_io39, align 4
  %spec.select = select i1 %cmp.i298, ptr @hw_readl_native, ptr @hw_readl
  %spec.select311 = select i1 %cmp.i298, ptr @hw_writel_native, ptr @hw_writel
  %33 = getelementptr i8, ptr %call28, i32 2312
  %34 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %spec.select, ptr %33, align 8
  %35 = getelementptr i8, ptr %call28, i32 2316
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %spec.select311, ptr %35, align 4
  %num_queues46 = getelementptr i8, ptr %call28, i32 2332
  %37 = ptrtoint ptr %num_queues46 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %num_queues.0, ptr %num_queues46, align 4
  %queue_mask47 = getelementptr i8, ptr %call28, i32 2336
  %38 = ptrtoint ptr %queue_mask47 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %queue_mask.0, ptr %queue_mask47, align 8
  %dma_burst_length = getelementptr inbounds %struct.macb_config, ptr %macb_config.1, i32 0, i32 1
  %39 = ptrtoint ptr %dma_burst_length to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %dma_burst_length, align 4
  %dma_burst_length50 = getelementptr i8, ptr %call28, i32 18472
  %41 = ptrtoint ptr %dma_burst_length50 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %dma_burst_length50, align 8
  %42 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pclk, align 4
  %pclk52 = getelementptr i8, ptr %call28, i32 18200
  %44 = ptrtoint ptr %pclk52 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %pclk52, align 8
  %45 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %hclk, align 4
  %hclk53 = getelementptr i8, ptr %call28, i32 18204
  %47 = ptrtoint ptr %hclk53 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %46, ptr %hclk53, align 4
  %48 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %tx_clk, align 4
  %tx_clk54 = getelementptr i8, ptr %call28, i32 18208
  %50 = ptrtoint ptr %tx_clk54 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %49, ptr %tx_clk54, align 8
  %51 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rx_clk, align 4
  %rx_clk55 = getelementptr i8, ptr %call28, i32 18212
  %53 = ptrtoint ptr %rx_clk55 to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %52, ptr %rx_clk55, align 4
  %54 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %tsu_clk, align 4
  %tsu_clk56 = getelementptr i8, ptr %call28, i32 18216
  %56 = ptrtoint ptr %tsu_clk56 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %55, ptr %tsu_clk56, align 8
  %jumbo_max_len = getelementptr inbounds %struct.macb_config, ptr %macb_config.1, i32 0, i32 4
  %57 = ptrtoint ptr %jumbo_max_len to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %jumbo_max_len, align 4
  %jumbo_max_len59 = getelementptr i8, ptr %call28, i32 19252
  %59 = ptrtoint ptr %jumbo_max_len59 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %jumbo_max_len59, align 4
  %wol = getelementptr i8, ptr %call28, i32 19256
  %60 = ptrtoint ptr %wol to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 0, ptr %wol, align 8
  %call61 = call ptr @of_get_property(ptr noundef %1, ptr noundef nonnull @.str.1, ptr noundef null) #21
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %if.end31.if.end65_crit_edge, label %if.then63

if.end31.if.end65_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end65

if.then63:                                        ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #23
  %61 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %wol, align 8
  %or = or i32 %62, 1
  store i32 %or, ptr %wol, align 8
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %if.end31.if.end65_crit_edge
  %63 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %wol, align 8
  %and = and i32 %64, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool68 = icmp ne i32 %and, 0
  call void @device_set_wakeup_capable(ptr noundef %dev, i1 noundef zeroext %tobool68) #21
  %usrio = getelementptr inbounds %struct.macb_config, ptr %macb_config.1, i32 0, i32 5
  %65 = ptrtoint ptr %usrio to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %usrio, align 4
  %usrio69 = getelementptr i8, ptr %call28, i32 19552
  %67 = ptrtoint ptr %usrio69 to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %66, ptr %usrio69, align 8
  %lock = getelementptr i8, ptr %call28, i32 18152
  call void @__raw_spin_lock_init(ptr noundef %lock, ptr noundef nonnull @.str.2, ptr noundef nonnull @macb_probe.__key, i16 noundef signext 3) #21
  call fastcc void @macb_configure_caps(ptr noundef %add.ptr.i299, ptr noundef nonnull %macb_config.1)
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %68 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call28, ptr %driver_data.i.i, align 4
  %call71 = call i32 @platform_get_irq(ptr noundef %pdev, i32 noundef 0) #21
  %irq = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 64
  %69 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %call71, ptr %irq, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %cmp = icmp slt i32 %call71, 0
  br i1 %cmp, label %if.end65.err_out_free_netdev_crit_edge, label %if.end75

if.end65.err_out_free_netdev_crit_edge:           ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_out_free_netdev

if.end75:                                         ; preds = %if.end65
  %min_mtu = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 30
  %70 = ptrtoint ptr %min_mtu to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 68, ptr %min_mtu, align 8
  %caps = getelementptr i8, ptr %call28, i32 18468
  %71 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %caps, align 4
  %and76 = and i32 %72, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp eq i32 %and76, 0
  br i1 %tobool77.not, label %if.end75.if.end84_crit_edge, label %if.then78

if.end75.if.end84_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end84

if.then78:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  %73 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %33, align 8
  %call80 = call i32 %74(ptr noundef %add.ptr.i299, i32 noundef 72) #21
  %sub81 = add i32 %call80, -18
  br label %if.end84

if.end84:                                         ; preds = %if.then78, %if.end75.if.end84_crit_edge
  %sub81.sink = phi i32 [ %sub81, %if.then78 ], [ 1500, %if.end75.if.end84_crit_edge ]
  %75 = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 31
  %76 = ptrtoint ptr %75 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %sub81.sink, ptr %75, align 4
  %77 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %caps, align 4
  %and86 = and i32 %78, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.end84.if.end108_crit_edge, label %if.then88

if.end84.if.end108_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end108

if.then88:                                        ; preds = %if.end84
  %79 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %33, align 8
  %call90 = call i32 %80(ptr noundef %add.ptr.i299, i32 noundef 676) #21
  %shr = lshr i32 %call90, 8
  %and91 = and i32 %shr, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and91)
  %tobool92.not = icmp eq i32 %and91, 0
  br i1 %tobool92.not, label %if.then88.if.end96_crit_edge, label %if.then93

if.then88.if.end96_crit_edge:                     ; preds = %if.then88
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end96

if.then93:                                        ; preds = %if.then88
  %hw_dma_cap.i = getelementptr i8, ptr %call28, i32 19264
  %81 = ptrtoint ptr %hw_dma_cap.i to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %hw_dma_cap.i, align 8
  %switch.tableidx = add i8 %82, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %83 = icmp ult i8 %switch.tableidx, 3
  br i1 %83, label %switch.lookup, label %if.then93.macb_dma_desc_get_size.exit_crit_edge

if.then93.macb_dma_desc_get_size.exit_crit_edge:  ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit

switch.lookup:                                    ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #23
  %84 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.macb_probe, i32 0, i32 %84
  %85 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %85)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_dma_desc_get_size.exit

macb_dma_desc_get_size.exit:                      ; preds = %switch.lookup, %if.then93.macb_dma_desc_get_size.exit_crit_edge
  %desc_size.0.i = phi i32 [ %switch.load, %switch.lookup ], [ 8, %if.then93.macb_dma_desc_get_size.exit_crit_edge ]
  %mul = shl nuw nsw i32 %desc_size.0.i, %and91
  %rx_bd_rd_prefetch = getelementptr i8, ptr %call28, i32 19532
  %86 = ptrtoint ptr %rx_bd_rd_prefetch to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %mul, ptr %rx_bd_rd_prefetch, align 4
  br label %if.end96

if.end96:                                         ; preds = %macb_dma_desc_get_size.exit, %if.then88.if.end96_crit_edge
  %87 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %33, align 8
  %call98 = call i32 %88(ptr noundef %add.ptr.i299, i32 noundef 676) #21
  %shr99 = lshr i32 %call98, 12
  %and100 = and i32 %shr99, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and100)
  %tobool101.not = icmp eq i32 %and100, 0
  br i1 %tobool101.not, label %if.end96.if.end108_crit_edge, label %if.then102

if.end96.if.end108_crit_edge:                     ; preds = %if.end96
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end108

if.then102:                                       ; preds = %if.end96
  %hw_dma_cap.i300 = getelementptr i8, ptr %call28, i32 19264
  %89 = ptrtoint ptr %hw_dma_cap.i300 to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %hw_dma_cap.i300, align 8
  %switch.tableidx313 = add i8 %90, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx313)
  %91 = icmp ult i8 %switch.tableidx313, 3
  br i1 %91, label %switch.lookup312, label %if.then102.macb_dma_desc_get_size.exit304_crit_edge

if.then102.macb_dma_desc_get_size.exit304_crit_edge: ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit304

switch.lookup312:                                 ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #23
  %92 = sext i8 %switch.tableidx313 to i32
  %switch.gep314 = getelementptr inbounds [3 x i32], ptr @switch.table.macb_probe.103, i32 0, i32 %92
  %93 = ptrtoint ptr %switch.gep314 to i32
  call void @__asan_load4_noabort(i32 %93)
  %switch.load315 = load i32, ptr %switch.gep314, align 4
  br label %macb_dma_desc_get_size.exit304

macb_dma_desc_get_size.exit304:                   ; preds = %switch.lookup312, %if.then102.macb_dma_desc_get_size.exit304_crit_edge
  %desc_size.0.i303 = phi i32 [ %switch.load315, %switch.lookup312 ], [ 8, %if.then102.macb_dma_desc_get_size.exit304_crit_edge ]
  %mul106 = shl nuw nsw i32 %desc_size.0.i303, %and100
  %tx_bd_rd_prefetch = getelementptr i8, ptr %call28, i32 19536
  %94 = ptrtoint ptr %tx_bd_rd_prefetch to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %mul106, ptr %tx_bd_rd_prefetch, align 8
  br label %if.end108

if.end108:                                        ; preds = %macb_dma_desc_get_size.exit304, %if.end96.if.end108_crit_edge, %if.end84.if.end108_crit_edge
  %rx_intr_mask = getelementptr i8, ptr %call28, i32 19540
  %95 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %caps, align 4
  %and110 = and i32 %96, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and110)
  %tobool111.not = icmp eq i32 %and110, 0
  %spec.store.select = select i1 %tobool111.not, i32 1026, i32 1030
  %97 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %spec.store.select, ptr %rx_intr_mask, align 4
  %98 = ptrtoint ptr %dev36 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %dev36, align 4
  %call117 = call i32 @of_get_ethdev_address(ptr noundef %1, ptr noundef %99) #21
  %100 = zext i32 %call117 to i64
  call void @__sanitizer_cov_trace_switch(i64 %100, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call117, label %if.then122 [
    i32 -517, label %if.end108.err_out_free_netdev_crit_edge
    i32 0, label %if.end108.if.end124_crit_edge
  ]

if.end108.if.end124_crit_edge:                    ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end124

if.end108.err_out_free_netdev_crit_edge:          ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_out_free_netdev

if.then122:                                       ; preds = %if.end108
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr.i) #21
  %101 = getelementptr inbounds [6 x i8], ptr %addr.i, i32 0, i32 1
  %102 = getelementptr inbounds [6 x i8], ptr %addr.i, i32 0, i32 2
  %103 = getelementptr inbounds [6 x i8], ptr %addr.i, i32 0, i32 3
  %104 = getelementptr inbounds [6 x i8], ptr %addr.i, i32 0, i32 4
  %105 = getelementptr inbounds [6 x i8], ptr %addr.i, i32 0, i32 5
  %106 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %107)
  %tobool.i.i = icmp slt i32 %107, 0
  %108 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %33, align 8
  %..i = select i1 %tobool.i.i, i32 136, i32 152
  %call5.i = call i32 %109(ptr noundef %add.ptr.i299, i32 noundef %..i) #21
  %110 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %tobool.i72.i = icmp slt i32 %111, 0
  %.sink76.i = select i1 %tobool.i72.i, i32 140, i32 156
  %112 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %33, align 8
  %call17.i = call i32 %113(ptr noundef %add.ptr.i299, i32 noundef %.sink76.i) #21
  %conv20.i = trunc i32 %call5.i to i8
  %114 = ptrtoint ptr %addr.i to i32
  call void @__asan_store1_noabort(i32 %114)
  store i8 %conv20.i, ptr %addr.i, align 4
  %shr.i305 = lshr i32 %call5.i, 8
  %conv22.i = trunc i32 %shr.i305 to i8
  %115 = ptrtoint ptr %101 to i32
  call void @__asan_store1_noabort(i32 %115)
  store i8 %conv22.i, ptr %101, align 1
  %shr24.i = lshr i32 %call5.i, 16
  %conv26.i = trunc i32 %shr24.i to i8
  %116 = ptrtoint ptr %102 to i32
  call void @__asan_store1_noabort(i32 %116)
  store i8 %conv26.i, ptr %102, align 2
  %shr28.i = lshr i32 %call5.i, 24
  %conv30.i = trunc i32 %shr28.i to i8
  %117 = ptrtoint ptr %103 to i32
  call void @__asan_store1_noabort(i32 %117)
  store i8 %conv30.i, ptr %103, align 1
  %conv34.i = trunc i32 %call17.i to i8
  %118 = ptrtoint ptr %104 to i32
  call void @__asan_store1_noabort(i32 %118)
  store i8 %conv34.i, ptr %104, align 4
  %conv32.i = lshr i32 %call17.i, 8
  %conv39.i = trunc i32 %conv32.i to i8
  %119 = ptrtoint ptr %105 to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 %conv39.i, ptr %105, align 1
  %120 = load i32, ptr %addr.i, align 4
  %121 = and i32 %120, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %121)
  %tobool.i.not.i.i = icmp eq i32 %121, 0
  br i1 %tobool.i.not.i.i, label %is_valid_ether_addr.exit.i, label %if.then122.for.inc.i_crit_edge

if.then122.for.inc.i_crit_edge:                   ; preds = %if.then122
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

is_valid_ether_addr.exit.i:                       ; preds = %if.then122
  %122 = ptrtoint ptr %104 to i32
  call void @__asan_load2_noabort(i32 %122)
  %123 = load i16, ptr %104, align 4
  %conv.i.i.i = zext i16 %123 to i32
  %or.i.i.i = or i32 %120, %conv.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.i)
  %cmp.i.i.not.i = icmp eq i32 %or.i.i.i, 0
  br i1 %cmp.i.i.not.i, label %is_valid_ether_addr.exit.i.for.inc.i_crit_edge, label %is_valid_ether_addr.exit.i.if.then42.i_crit_edge

is_valid_ether_addr.exit.i.if.then42.i_crit_edge: ; preds = %is_valid_ether_addr.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then42.i

is_valid_ether_addr.exit.i.for.inc.i_crit_edge:   ; preds = %is_valid_ether_addr.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

if.then42.i:                                      ; preds = %is_valid_ether_addr.exit.3.i.if.then42.i_crit_edge, %is_valid_ether_addr.exit.2.i.if.then42.i_crit_edge, %is_valid_ether_addr.exit.1.i.if.then42.i_crit_edge, %is_valid_ether_addr.exit.i.if.then42.i_crit_edge
  %124 = ptrtoint ptr %dev36 to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %dev36, align 4
  call void @dev_addr_mod(ptr noundef %125, i32 noundef 0, ptr noundef nonnull %addr.i, i32 noundef 6) #21
  br label %macb_get_hwaddr.exit

for.inc.i:                                        ; preds = %is_valid_ether_addr.exit.i.for.inc.i_crit_edge, %if.then122.for.inc.i_crit_edge
  %126 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %127)
  %tobool.i.1.i = icmp slt i32 %127, 0
  %128 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %33, align 8
  %add4.1.i = select i1 %tobool.i.1.i, i32 144, i32 160
  %call5.1.i = call i32 %129(ptr noundef %add.ptr.i299, i32 noundef %add4.1.i) #21
  %130 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %131)
  %tobool.i72.1.i = icmp slt i32 %131, 0
  %132 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %33, align 8
  %add16.1.i = select i1 %tobool.i72.1.i, i32 148, i32 164
  %call17.1.i = call i32 %133(ptr noundef %add.ptr.i299, i32 noundef %add16.1.i) #21
  %conv20.1.i = trunc i32 %call5.1.i to i8
  %134 = ptrtoint ptr %addr.i to i32
  call void @__asan_store1_noabort(i32 %134)
  store i8 %conv20.1.i, ptr %addr.i, align 4
  %shr.1.i = lshr i32 %call5.1.i, 8
  %conv22.1.i = trunc i32 %shr.1.i to i8
  %135 = ptrtoint ptr %101 to i32
  call void @__asan_store1_noabort(i32 %135)
  store i8 %conv22.1.i, ptr %101, align 1
  %shr24.1.i = lshr i32 %call5.1.i, 16
  %conv26.1.i = trunc i32 %shr24.1.i to i8
  %136 = ptrtoint ptr %102 to i32
  call void @__asan_store1_noabort(i32 %136)
  store i8 %conv26.1.i, ptr %102, align 2
  %shr28.1.i = lshr i32 %call5.1.i, 24
  %conv30.1.i = trunc i32 %shr28.1.i to i8
  %137 = ptrtoint ptr %103 to i32
  call void @__asan_store1_noabort(i32 %137)
  store i8 %conv30.1.i, ptr %103, align 1
  %conv34.1.i = trunc i32 %call17.1.i to i8
  %138 = ptrtoint ptr %104 to i32
  call void @__asan_store1_noabort(i32 %138)
  store i8 %conv34.1.i, ptr %104, align 4
  %conv32.1.i = lshr i32 %call17.1.i, 8
  %conv39.1.i = trunc i32 %conv32.1.i to i8
  %139 = ptrtoint ptr %105 to i32
  call void @__asan_store1_noabort(i32 %139)
  store i8 %conv39.1.i, ptr %105, align 1
  %140 = load i32, ptr %addr.i, align 4
  %141 = and i32 %140, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %tobool.i.not.i.1.i = icmp eq i32 %141, 0
  br i1 %tobool.i.not.i.1.i, label %is_valid_ether_addr.exit.1.i, label %for.inc.i.for.inc.1.i_crit_edge

for.inc.i.for.inc.1.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1.i

is_valid_ether_addr.exit.1.i:                     ; preds = %for.inc.i
  %142 = ptrtoint ptr %104 to i32
  call void @__asan_load2_noabort(i32 %142)
  %143 = load i16, ptr %104, align 4
  %conv.i.i.1.i = zext i16 %143 to i32
  %or.i.i.1.i = or i32 %140, %conv.i.i.1.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.1.i)
  %cmp.i.i.not.1.i = icmp eq i32 %or.i.i.1.i, 0
  br i1 %cmp.i.i.not.1.i, label %is_valid_ether_addr.exit.1.i.for.inc.1.i_crit_edge, label %is_valid_ether_addr.exit.1.i.if.then42.i_crit_edge

is_valid_ether_addr.exit.1.i.if.then42.i_crit_edge: ; preds = %is_valid_ether_addr.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then42.i

is_valid_ether_addr.exit.1.i.for.inc.1.i_crit_edge: ; preds = %is_valid_ether_addr.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.1.i

for.inc.1.i:                                      ; preds = %is_valid_ether_addr.exit.1.i.for.inc.1.i_crit_edge, %for.inc.i.for.inc.1.i_crit_edge
  %144 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool.i.2.i = icmp slt i32 %145, 0
  %146 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %33, align 8
  %add4.2.i = select i1 %tobool.i.2.i, i32 152, i32 168
  %call5.2.i = call i32 %147(ptr noundef %add.ptr.i299, i32 noundef %add4.2.i) #21
  %148 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %149)
  %tobool.i72.2.i = icmp slt i32 %149, 0
  %150 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %33, align 8
  %add16.2.i = select i1 %tobool.i72.2.i, i32 156, i32 172
  %call17.2.i = call i32 %151(ptr noundef %add.ptr.i299, i32 noundef %add16.2.i) #21
  %conv20.2.i = trunc i32 %call5.2.i to i8
  %152 = ptrtoint ptr %addr.i to i32
  call void @__asan_store1_noabort(i32 %152)
  store i8 %conv20.2.i, ptr %addr.i, align 4
  %shr.2.i = lshr i32 %call5.2.i, 8
  %conv22.2.i = trunc i32 %shr.2.i to i8
  %153 = ptrtoint ptr %101 to i32
  call void @__asan_store1_noabort(i32 %153)
  store i8 %conv22.2.i, ptr %101, align 1
  %shr24.2.i = lshr i32 %call5.2.i, 16
  %conv26.2.i = trunc i32 %shr24.2.i to i8
  %154 = ptrtoint ptr %102 to i32
  call void @__asan_store1_noabort(i32 %154)
  store i8 %conv26.2.i, ptr %102, align 2
  %shr28.2.i = lshr i32 %call5.2.i, 24
  %conv30.2.i = trunc i32 %shr28.2.i to i8
  %155 = ptrtoint ptr %103 to i32
  call void @__asan_store1_noabort(i32 %155)
  store i8 %conv30.2.i, ptr %103, align 1
  %conv34.2.i = trunc i32 %call17.2.i to i8
  %156 = ptrtoint ptr %104 to i32
  call void @__asan_store1_noabort(i32 %156)
  store i8 %conv34.2.i, ptr %104, align 4
  %conv32.2.i = lshr i32 %call17.2.i, 8
  %conv39.2.i = trunc i32 %conv32.2.i to i8
  %157 = ptrtoint ptr %105 to i32
  call void @__asan_store1_noabort(i32 %157)
  store i8 %conv39.2.i, ptr %105, align 1
  %158 = load i32, ptr %addr.i, align 4
  %159 = and i32 %158, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %159)
  %tobool.i.not.i.2.i = icmp eq i32 %159, 0
  br i1 %tobool.i.not.i.2.i, label %is_valid_ether_addr.exit.2.i, label %for.inc.1.i.for.inc.2.i_crit_edge

for.inc.1.i.for.inc.2.i_crit_edge:                ; preds = %for.inc.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.2.i

is_valid_ether_addr.exit.2.i:                     ; preds = %for.inc.1.i
  %160 = ptrtoint ptr %104 to i32
  call void @__asan_load2_noabort(i32 %160)
  %161 = load i16, ptr %104, align 4
  %conv.i.i.2.i = zext i16 %161 to i32
  %or.i.i.2.i = or i32 %158, %conv.i.i.2.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.2.i)
  %cmp.i.i.not.2.i = icmp eq i32 %or.i.i.2.i, 0
  br i1 %cmp.i.i.not.2.i, label %is_valid_ether_addr.exit.2.i.for.inc.2.i_crit_edge, label %is_valid_ether_addr.exit.2.i.if.then42.i_crit_edge

is_valid_ether_addr.exit.2.i.if.then42.i_crit_edge: ; preds = %is_valid_ether_addr.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then42.i

is_valid_ether_addr.exit.2.i.for.inc.2.i_crit_edge: ; preds = %is_valid_ether_addr.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.2.i

for.inc.2.i:                                      ; preds = %is_valid_ether_addr.exit.2.i.for.inc.2.i_crit_edge, %for.inc.1.i.for.inc.2.i_crit_edge
  %162 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %163)
  %tobool.i.3.i = icmp slt i32 %163, 0
  %164 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %33, align 8
  %add4.3.i = select i1 %tobool.i.3.i, i32 160, i32 176
  %call5.3.i = call i32 %165(ptr noundef %add.ptr.i299, i32 noundef %add4.3.i) #21
  %166 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %167)
  %tobool.i72.3.i = icmp slt i32 %167, 0
  %168 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %33, align 8
  %add16.3.i = select i1 %tobool.i72.3.i, i32 164, i32 180
  %call17.3.i = call i32 %169(ptr noundef %add.ptr.i299, i32 noundef %add16.3.i) #21
  %conv20.3.i = trunc i32 %call5.3.i to i8
  %170 = ptrtoint ptr %addr.i to i32
  call void @__asan_store1_noabort(i32 %170)
  store i8 %conv20.3.i, ptr %addr.i, align 4
  %shr.3.i = lshr i32 %call5.3.i, 8
  %conv22.3.i = trunc i32 %shr.3.i to i8
  %171 = ptrtoint ptr %101 to i32
  call void @__asan_store1_noabort(i32 %171)
  store i8 %conv22.3.i, ptr %101, align 1
  %shr24.3.i = lshr i32 %call5.3.i, 16
  %conv26.3.i = trunc i32 %shr24.3.i to i8
  %172 = ptrtoint ptr %102 to i32
  call void @__asan_store1_noabort(i32 %172)
  store i8 %conv26.3.i, ptr %102, align 2
  %shr28.3.i = lshr i32 %call5.3.i, 24
  %conv30.3.i = trunc i32 %shr28.3.i to i8
  %173 = ptrtoint ptr %103 to i32
  call void @__asan_store1_noabort(i32 %173)
  store i8 %conv30.3.i, ptr %103, align 1
  %conv34.3.i = trunc i32 %call17.3.i to i8
  %174 = ptrtoint ptr %104 to i32
  call void @__asan_store1_noabort(i32 %174)
  store i8 %conv34.3.i, ptr %104, align 4
  %conv32.3.i = lshr i32 %call17.3.i, 8
  %conv39.3.i = trunc i32 %conv32.3.i to i8
  %175 = ptrtoint ptr %105 to i32
  call void @__asan_store1_noabort(i32 %175)
  store i8 %conv39.3.i, ptr %105, align 1
  %176 = load i32, ptr %addr.i, align 4
  %177 = and i32 %176, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %177)
  %tobool.i.not.i.3.i = icmp eq i32 %177, 0
  br i1 %tobool.i.not.i.3.i, label %is_valid_ether_addr.exit.3.i, label %for.inc.2.i.for.inc.3.i_crit_edge

for.inc.2.i.for.inc.3.i_crit_edge:                ; preds = %for.inc.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3.i

is_valid_ether_addr.exit.3.i:                     ; preds = %for.inc.2.i
  %178 = ptrtoint ptr %104 to i32
  call void @__asan_load2_noabort(i32 %178)
  %179 = load i16, ptr %104, align 4
  %conv.i.i.3.i = zext i16 %179 to i32
  %or.i.i.3.i = or i32 %176, %conv.i.i.3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or.i.i.3.i)
  %cmp.i.i.not.3.i = icmp eq i32 %or.i.i.3.i, 0
  br i1 %cmp.i.i.not.3.i, label %is_valid_ether_addr.exit.3.i.for.inc.3.i_crit_edge, label %is_valid_ether_addr.exit.3.i.if.then42.i_crit_edge

is_valid_ether_addr.exit.3.i.if.then42.i_crit_edge: ; preds = %is_valid_ether_addr.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then42.i

is_valid_ether_addr.exit.3.i.for.inc.3.i_crit_edge: ; preds = %is_valid_ether_addr.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.3.i

for.inc.3.i:                                      ; preds = %is_valid_ether_addr.exit.3.i.for.inc.3.i_crit_edge, %for.inc.2.i.for.inc.3.i_crit_edge
  %180 = ptrtoint ptr %pdev35 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %pdev35, align 4
  %dev45.i = getelementptr inbounds %struct.platform_device, ptr %181, i32 0, i32 3
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev45.i, ptr noundef nonnull @.str.79) #24
  %182 = ptrtoint ptr %dev36 to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %dev36, align 4
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr.i.i) #21
  %184 = call ptr @memset(ptr %addr.i.i, i32 255, i32 6)
  call void @get_random_bytes(ptr noundef nonnull %addr.i.i, i32 noundef 6) #21
  %185 = ptrtoint ptr %addr.i.i to i32
  call void @__asan_load1_noabort(i32 %185)
  %186 = load i8, ptr %addr.i.i, align 1
  %187 = and i8 %186, -4
  %188 = or i8 %187, 2
  store i8 %188, ptr %addr.i.i, align 1
  call void @dev_addr_mod(ptr noundef %183, i32 noundef 0, ptr noundef nonnull %addr.i.i, i32 noundef 6) #21
  %addr_assign_type.i.i = getelementptr inbounds %struct.net_device, ptr %183, i32 0, i32 55
  %189 = ptrtoint ptr %addr_assign_type.i.i to i32
  call void @__asan_store1_noabort(i32 %189)
  store i8 1, ptr %addr_assign_type.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr.i.i) #21
  br label %macb_get_hwaddr.exit

macb_get_hwaddr.exit:                             ; preds = %for.inc.3.i, %if.then42.i
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr.i) #21
  br label %if.end124

if.end124:                                        ; preds = %macb_get_hwaddr.exit, %if.end108.if.end124_crit_edge
  %call125 = call i32 @of_get_phy_mode(ptr noundef %1, ptr noundef nonnull %interface) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call125)
  %tobool126.not = icmp eq i32 %call125, 0
  br i1 %tobool126.not, label %if.else128, label %if.end124.if.end130_crit_edge

if.end124.if.end130_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end130

if.else128:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #23
  %190 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load i32, ptr %interface, align 4
  br label %if.end130

if.end130:                                        ; preds = %if.else128, %if.end124.if.end130_crit_edge
  %.sink = phi i32 [ %191, %if.else128 ], [ 2, %if.end124.if.end130_crit_edge ]
  %192 = getelementptr i8, ptr %call28, i32 18476
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_store4_noabort(i32 %193)
  store i32 %.sink, ptr %192, align 4
  %call131 = call i32 %init.1(ptr noundef %pdev) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call131)
  %tobool132.not = icmp eq i32 %call131, 0
  br i1 %tobool132.not, label %if.end134, label %if.end130.err_out_free_netdev_crit_edge

if.end130.err_out_free_netdev_crit_edge:          ; preds = %if.end130
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_out_free_netdev

if.end134:                                        ; preds = %if.end130
  %call135 = call fastcc i32 @macb_mii_init(ptr noundef %add.ptr.i299)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call135)
  %tobool136.not = icmp eq i32 %call135, 0
  br i1 %tobool136.not, label %if.end138, label %if.end134.err_out_free_netdev_crit_edge

if.end134.err_out_free_netdev_crit_edge:          ; preds = %if.end134
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_out_free_netdev

if.end138:                                        ; preds = %if.end134
  call void @netif_carrier_off(ptr noundef nonnull %call28) #21
  %call139 = call i32 @register_netdev(ptr noundef nonnull %call28) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call139)
  %tobool140.not = icmp eq i32 %call139, 0
  br i1 %tobool140.not, label %if.end146, label %do.end144

do.end144:                                        ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.3) #24
  %mii_bus = getelementptr i8, ptr %call28, i32 18420
  %194 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load ptr, ptr %mii_bus, align 4
  call void @mdiobus_unregister(ptr noundef %195) #21
  %196 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %mii_bus, align 4
  call void @mdiobus_free(ptr noundef %197) #21
  br label %err_out_free_netdev

if.end146:                                        ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  %hresp_err_tasklet = getelementptr i8, ptr %call28, i32 19508
  call void @tasklet_setup(ptr noundef %hresp_err_tasklet, ptr noundef nonnull @macb_hresp_error_task) #21
  %198 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %caps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %199)
  %tobool.i = icmp slt i32 %199, 0
  %cond = select i1 %tobool.i, ptr @.str.9, ptr @.str.10
  %200 = ptrtoint ptr %33 to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load ptr, ptr %33, align 8
  %call149 = call i32 %201(ptr noundef %add.ptr.i299, i32 noundef 252) #21
  %202 = ptrtoint ptr %base_addr to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load i32, ptr %base_addr, align 32
  %204 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %irq, align 4
  %dev_addr = getelementptr inbounds %struct.net_device, ptr %call28, i32 0, i32 86
  %206 = ptrtoint ptr %dev_addr to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %dev_addr, align 64
  call void (ptr, ptr, ...) @netdev_info(ptr noundef nonnull %call28, ptr noundef nonnull @.str.8, ptr noundef nonnull %cond, i32 noundef %call149, i32 noundef %203, i32 noundef %205, ptr noundef %207) #24
  %208 = ptrtoint ptr %pdev35 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %pdev35, align 4
  %call.i306 = call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.platform_device, ptr %209, i32 0, i32 3, i32 12, i32 22
  %210 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %210)
  store volatile i64 %call.i306, ptr %last_busy.i, align 8
  %211 = ptrtoint ptr %pdev35 to i32
  call void @__asan_load4_noabort(i32 %211)
  %212 = load ptr, ptr %pdev35, align 4
  %dev155 = getelementptr inbounds %struct.platform_device, ptr %212, i32 0, i32 3
  %call.i307 = call i32 @__pm_runtime_suspend(ptr noundef %dev155, i32 noundef 13) #21
  br label %cleanup

err_out_free_netdev:                              ; preds = %do.end144, %if.end134.err_out_free_netdev_crit_edge, %if.end130.err_out_free_netdev_crit_edge, %if.end108.err_out_free_netdev_crit_edge, %if.end65.err_out_free_netdev_crit_edge
  %err.0 = phi i32 [ %call117, %if.end108.err_out_free_netdev_crit_edge ], [ %call131, %if.end130.err_out_free_netdev_crit_edge ], [ %call135, %if.end134.err_out_free_netdev_crit_edge ], [ %call139, %do.end144 ], [ %call71, %if.end65.err_out_free_netdev_crit_edge ]
  call void @free_netdev(ptr noundef nonnull %call28) #21
  br label %err_disable_clocks

err_disable_clocks:                               ; preds = %err_out_free_netdev, %macb_probe_queues.exit.err_disable_clocks_crit_edge
  %err.1 = phi i32 [ %err.0, %err_out_free_netdev ], [ -12, %macb_probe_queues.exit.err_disable_clocks_crit_edge ]
  %213 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %213)
  %214 = load ptr, ptr %pclk, align 4
  %215 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %hclk, align 4
  %217 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %217)
  %218 = load ptr, ptr %tx_clk, align 4
  %219 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %219)
  %220 = load ptr, ptr %rx_clk, align 4
  %221 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %221)
  %222 = load ptr, ptr %tsu_clk, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %clks.i) #21
  %223 = ptrtoint ptr %clks.i to i32
  call void @__asan_store4_noabort(i32 %223)
  store ptr null, ptr %clks.i, align 4
  %clk.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 0, i32 1
  %224 = ptrtoint ptr %clk.i to i32
  call void @__asan_store4_noabort(i32 %224)
  store ptr %222, ptr %clk.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1
  %225 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %225)
  store ptr null, ptr %arrayinit.element.i, align 4
  %clk2.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1, i32 1
  %226 = ptrtoint ptr %clk2.i to i32
  call void @__asan_store4_noabort(i32 %226)
  store ptr %220, ptr %clk2.i, align 4
  %arrayinit.element3.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2
  %227 = ptrtoint ptr %arrayinit.element3.i to i32
  call void @__asan_store4_noabort(i32 %227)
  store ptr null, ptr %arrayinit.element3.i, align 4
  %clk5.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2, i32 1
  %228 = ptrtoint ptr %clk5.i to i32
  call void @__asan_store4_noabort(i32 %228)
  store ptr %214, ptr %clk5.i, align 4
  %arrayinit.element6.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3
  %229 = ptrtoint ptr %arrayinit.element6.i to i32
  call void @__asan_store4_noabort(i32 %229)
  store ptr null, ptr %arrayinit.element6.i, align 4
  %clk8.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3, i32 1
  %230 = ptrtoint ptr %clk8.i to i32
  call void @__asan_store4_noabort(i32 %230)
  store ptr %216, ptr %clk8.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4
  %231 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %231)
  store ptr null, ptr %arrayinit.element9.i, align 4
  %clk11.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4, i32 1
  %232 = ptrtoint ptr %clk11.i to i32
  call void @__asan_store4_noabort(i32 %232)
  store ptr %218, ptr %clk11.i, align 4
  call void @clk_bulk_disable(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @clk_bulk_unprepare(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %clks.i) #21
  call void @__pm_runtime_disable(ptr noundef %dev, i1 noundef zeroext true) #21
  %call.i308 = call i32 @__pm_runtime_set_status(ptr noundef %dev, i32 noundef 2) #21
  call void @__pm_runtime_use_autosuspend(ptr noundef %dev, i1 noundef zeroext false) #21
  br label %cleanup

cleanup:                                          ; preds = %err_disable_clocks, %if.end146, %if.end15.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %9, %if.then ], [ %err.1, %err_disable_clocks ], [ 0, %if.end146 ], [ %call16, %if.end15.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %regs) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %interface) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tsu_clk) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rx_clk) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tx_clk) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hclk) #21
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pclk) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_remove(ptr noundef %pdev) #2 align 64 {
entry:
  %clks.i = alloca [5 x %struct.clk_bulk_data], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %if.then

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end10

if.then:                                          ; preds = %entry
  %mii_bus = getelementptr i8, ptr %1, i32 18420
  %2 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mii_bus, align 4
  tail call void @mdiobus_unregister(ptr noundef %3) #21
  %4 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mii_bus, align 4
  tail call void @mdiobus_free(ptr noundef %5) #21
  tail call void @unregister_netdev(ptr noundef nonnull %1) #21
  %hresp_err_tasklet = getelementptr i8, ptr %1, i32 19508
  tail call void @tasklet_kill(ptr noundef %hresp_err_tasklet) #21
  %dev3 = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  tail call void @__pm_runtime_disable(ptr noundef %dev3, i1 noundef zeroext true) #21
  tail call void @__pm_runtime_use_autosuspend(ptr noundef %dev3, i1 noundef zeroext false) #21
  %runtime_status.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 12, i32 18
  %6 = ptrtoint ptr %runtime_status.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %runtime_status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %7)
  %cmp.i = icmp eq i32 %7, 2
  br i1 %cmp.i, label %pm_runtime_suspended.exit, label %if.then.if.then7_crit_edge

if.then.if.then7_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

pm_runtime_suspended.exit:                        ; preds = %if.then
  %disable_depth.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 12, i32 15
  %8 = ptrtoint ptr %disable_depth.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load.i = load i16, ptr %disable_depth.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 8192, i16 %bf.load.i)
  %tobool.not.i = icmp ult i16 %bf.load.i, 8192
  br i1 %tobool.not.i, label %pm_runtime_suspended.exit.if.end_crit_edge, label %pm_runtime_suspended.exit.if.then7_crit_edge

pm_runtime_suspended.exit.if.then7_crit_edge:     ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then7

pm_runtime_suspended.exit.if.end_crit_edge:       ; preds = %pm_runtime_suspended.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then7:                                         ; preds = %pm_runtime_suspended.exit.if.then7_crit_edge, %if.then.if.then7_crit_edge
  %pclk = getelementptr i8, ptr %1, i32 18200
  %9 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pclk, align 8
  %hclk = getelementptr i8, ptr %1, i32 18204
  %11 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %hclk, align 4
  %tx_clk = getelementptr i8, ptr %1, i32 18208
  %13 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tx_clk, align 8
  %rx_clk = getelementptr i8, ptr %1, i32 18212
  %15 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rx_clk, align 4
  %tsu_clk = getelementptr i8, ptr %1, i32 18216
  %17 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %tsu_clk, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %clks.i) #21
  %19 = ptrtoint ptr %clks.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %clks.i, align 4
  %clk.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 0, i32 1
  %20 = ptrtoint ptr %clk.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %18, ptr %clk.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1
  %21 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %arrayinit.element.i, align 4
  %clk2.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1, i32 1
  %22 = ptrtoint ptr %clk2.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %16, ptr %clk2.i, align 4
  %arrayinit.element3.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2
  %23 = ptrtoint ptr %arrayinit.element3.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %arrayinit.element3.i, align 4
  %clk5.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2, i32 1
  %24 = ptrtoint ptr %clk5.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %10, ptr %clk5.i, align 4
  %arrayinit.element6.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3
  %25 = ptrtoint ptr %arrayinit.element6.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %arrayinit.element6.i, align 4
  %clk8.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3, i32 1
  %26 = ptrtoint ptr %clk8.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %12, ptr %clk8.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4
  %27 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %arrayinit.element9.i, align 4
  %clk11.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4, i32 1
  %28 = ptrtoint ptr %clk11.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %14, ptr %clk11.i, align 4
  call void @clk_bulk_disable(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @clk_bulk_unprepare(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %clks.i) #21
  %call.i = call i32 @__pm_runtime_set_status(ptr noundef %dev3, i32 noundef 2) #21
  br label %if.end

if.end:                                           ; preds = %if.then7, %pm_runtime_suspended.exit.if.end_crit_edge
  %phylink = getelementptr i8, ptr %1, i32 18424
  %29 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %phylink, align 8
  call void @phylink_destroy(ptr noundef %30) #21
  call void @free_netdev(ptr noundef nonnull %1) #21
  br label %if.end10

if.end10:                                         ; preds = %if.end, %entry.if.end10_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_platform_get_and_ioremap_resource(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_match_node(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_set_autosuspend_delay(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_runtime_enable(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_etherdev_mqs(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hw_readl_native(ptr nocapture noundef readonly %bp, i32 noundef %offset) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bp, align 8
  %add.ptr = getelementptr i8, ptr %1, i32 %offset
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #21, !srcloc !297
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hw_writel_native(ptr nocapture noundef readonly %bp, i32 noundef %offset, i32 noundef %value) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bp, align 8
  %add.ptr = getelementptr i8, ptr %1, i32 %offset
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %value) #21, !srcloc !296
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @hw_readl(ptr nocapture noundef readonly %bp, i32 noundef %offset) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bp, align 8
  %add.ptr = getelementptr i8, ptr %1, i32 %offset
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #21, !srcloc !297
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  ret i32 %3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @hw_writel(ptr nocapture noundef readonly %bp, i32 noundef %offset, i32 noundef %value) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.bswap.i32(i32 %value)
  %1 = ptrtoint ptr %bp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %bp, align 8
  %add.ptr = getelementptr i8, ptr %2, i32 %offset
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr, i32 %0) #21, !srcloc !296
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_property(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @device_set_wakeup_capable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_configure_caps(ptr noundef %bp, ptr noundef readonly %dt_conf) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %dt_conf, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %dt_conf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %dt_conf, align 4
  %caps1 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %2 = ptrtoint ptr %caps1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %caps1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %3 = ptrtoint ptr %bp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %bp, align 8
  %native_io = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 1
  %5 = ptrtoint ptr %native_io to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %native_io, align 4, !range !298
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %tobool2.not = icmp eq i8 %6, 0
  %add.ptr.i = getelementptr i8, ptr %4, i32 252
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #21
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #21
  %id.0.i = select i1 %tobool2.not, i32 %8, i32 %7
  %9 = and i32 %id.0.i, 268304384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.i.not = icmp eq i32 %9, 0
  br i1 %cmp.i.not, label %if.end.do.body47_crit_edge, label %if.then3

if.end.do.body47_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body47

if.then3:                                         ; preds = %if.end
  %caps4 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %10 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %caps4, align 4
  %or = or i32 %11, -2147483648
  store i32 %or, ptr %caps4, align 4
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %12 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_readl, align 8
  %call5 = tail call i32 %13(ptr noundef %bp, i32 noundef 640) #21
  %14 = and i32 %call5, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp = icmp eq i32 %14, 0
  br i1 %cmp, label %if.then6, label %if.then3.if.end9_crit_edge

if.then3.if.end9_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then6:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %caps4, align 4
  %or8 = or i32 %16, 1
  store i32 %or8, ptr %caps4, align 4
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %if.then3.if.end9_crit_edge
  %and11 = and i32 %call5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %cmp12 = icmp eq i32 %and11, 0
  br i1 %cmp12, label %if.then13, label %if.end9.if.end16_crit_edge

if.end9.if.end16_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then13:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  %17 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %caps4, align 4
  %or15 = or i32 %18, 16777216
  store i32 %or15, ptr %caps4, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then13, %if.end9.if.end16_crit_edge
  %19 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macb_reg_readl, align 8
  %call18 = tail call i32 %20(ptr noundef %bp, i32 noundef 684) #21
  %21 = and i32 %call18, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp21.not = icmp eq i32 %21, 0
  br i1 %cmp21.not, label %if.end16.if.end25_crit_edge, label %if.then22

if.end16.if.end25_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end25

if.then22:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  %22 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %caps4, align 4
  %or24 = or i32 %23, 33554432
  store i32 %or24, ptr %caps4, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end16.if.end25_crit_edge
  %24 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_readl, align 8
  %call27 = tail call i32 %25(ptr noundef %bp, i32 noundef 644) #21
  %and28 = and i32 %call27, 3145728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.then30, label %if.end25.if.end33_crit_edge

if.end25.if.end33_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end33

if.then30:                                        ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %caps4, align 4
  %or32 = or i32 %27, 268435456
  store i32 %or32, ptr %caps4, align 4
  br label %if.end33

if.end33:                                         ; preds = %if.then30, %if.end25.if.end33_crit_edge
  %28 = ptrtoint ptr %caps4 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %caps4, align 4
  %and.i = and i32 %29, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.end33.do.body47_crit_edge, label %if.then35

if.end33.do.body47_crit_edge:                     ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body47

if.then35:                                        ; preds = %if.end33
  %30 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %macb_reg_readl, align 8
  %call37 = tail call i32 %31(ptr noundef %bp, i32 noundef 656) #21
  %32 = and i32 %call37, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool40.not = icmp eq i32 %32, 0
  br i1 %tobool40.not, label %do.end, label %if.else

do.end:                                           ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %33 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %34, i32 0, i32 3
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.76) #24
  br label %do.body47

if.else:                                          ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #23
  %hw_dma_cap = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 35
  %35 = ptrtoint ptr %hw_dma_cap to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %hw_dma_cap, align 8
  %37 = or i8 %36, 2
  store i8 %37, ptr %hw_dma_cap, align 8
  %ptp_info = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 34
  %38 = ptrtoint ptr %ptp_info to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @gem_ptp_info, ptr %ptp_info, align 4
  br label %do.body47

do.body47:                                        ; preds = %if.else, %do.end, %if.end33.do.body47_crit_edge, %if.end.do.body47_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_configure_caps.__UNIQUE_ID_ddebug510, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_configure_caps, %if.then52)) #21
          to label %do.end58 [label %if.then52], !srcloc !299

if.then52:                                        ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #23
  %pdev53 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %39 = ptrtoint ptr %pdev53 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pdev53, align 4
  %dev54 = getelementptr inbounds %struct.platform_device, ptr %40, i32 0, i32 3
  %caps55 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %41 = ptrtoint ptr %caps55 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %caps55, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_dev_dbg(ptr noundef nonnull @macb_configure_caps.__UNIQUE_ID_ddebug510, ptr noundef %dev54, ptr noundef nonnull @.str.78, i32 noundef %42) #21
  br label %do.end58

do.end58:                                         ; preds = %if.then52, %do.body47
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @platform_get_irq(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_ethdev_address(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_get_phy_mode(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macb_mii_init(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %0 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %1(ptr noundef %bp, i32 noundef 0, i32 noundef 16) #21
  %call.i = tail call ptr @mdiobus_alloc_size(i32 noundef 0) #21
  %mii_bus = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 20
  %2 = ptrtoint ptr %mii_bus to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %call.i, ptr %mii_bus, align 4
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.mii_bus, ptr %call.i, i32 0, i32 1
  %3 = ptrtoint ptr %name to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @.str.82, ptr %name, align 4
  %4 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mii_bus, align 4
  %read = getelementptr inbounds %struct.mii_bus, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr @macb_mdio_read, ptr %read, align 4
  %7 = load ptr, ptr %mii_bus, align 4
  %write = getelementptr inbounds %struct.mii_bus, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %write to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @macb_mdio_write, ptr %write, align 8
  %9 = load ptr, ptr %mii_bus, align 4
  %id = getelementptr inbounds %struct.mii_bus, ptr %9, i32 0, i32 2
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %10 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 8
  %id8 = getelementptr inbounds %struct.platform_device, ptr %11, i32 0, i32 1
  %14 = ptrtoint ptr %id8 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %id8, align 4
  %call9 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %id, i32 noundef 61, ptr noundef nonnull @.str.83, ptr noundef %13, i32 noundef %15)
  %16 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %mii_bus, align 4
  %priv = getelementptr inbounds %struct.mii_bus, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %bp, ptr %priv, align 8
  %19 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %20, i32 0, i32 3
  %21 = load ptr, ptr %mii_bus, align 4
  %parent = getelementptr inbounds %struct.mii_bus, ptr %21, i32 0, i32 9
  %22 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %dev, ptr %parent, align 4
  %dev13 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %23 = ptrtoint ptr %dev13 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dev13, align 4
  %25 = load ptr, ptr %mii_bus, align 4
  %driver_data.i = getelementptr inbounds %struct.net_device, ptr %24, i32 0, i32 133, i32 8
  %26 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %25, ptr %driver_data.i, align 4
  %27 = load ptr, ptr %pdev, align 4
  %of_node.i = getelementptr inbounds %struct.platform_device, ptr %27, i32 0, i32 3, i32 27
  %28 = ptrtoint ptr %of_node.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %of_node.i, align 8
  %call.i48 = tail call ptr @of_get_child_by_name(ptr noundef %29, ptr noundef nonnull @.str.84) #21
  %tobool.not.i = icmp eq ptr %call.i48, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %30 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %mii_bus, align 4
  %call1.i = tail call i32 @of_mdiobus_register(ptr noundef %31, ptr noundef nonnull %call.i48) #21
  tail call void @of_node_put(ptr noundef nonnull %call.i48) #21
  br label %macb_mdiobus_register.exit

if.end.i:                                         ; preds = %if.end
  %call2.i = tail call zeroext i1 @of_phy_is_fixed_link(ptr noundef %29) #21
  br i1 %call2.i, label %if.then3.i, label %if.end6.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %32 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %mii_bus, align 4
  %call5.i = tail call i32 @__mdiobus_register(ptr noundef %33, ptr noundef null) #21
  br label %macb_mdiobus_register.exit

if.end6.i:                                        ; preds = %if.end.i
  %call7.i = tail call ptr @of_get_next_available_child(ptr noundef %29, ptr noundef null) #21
  %cmp.not32.i = icmp eq ptr %call7.i, null
  br i1 %cmp.not32.i, label %if.end6.i.for.end.i_crit_edge, label %if.end6.i.for.body.i_crit_edge

if.end6.i.for.body.i_crit_edge:                   ; preds = %if.end6.i
  br label %for.body.i

if.end6.i.for.end.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end6.i.for.body.i_crit_edge
  %child.033.i = phi ptr [ %call13.i, %for.inc.i.for.body.i_crit_edge ], [ %call7.i, %if.end6.i.for.body.i_crit_edge ]
  %call8.i = tail call zeroext i1 @of_mdiobus_child_is_phy(ptr noundef nonnull %child.033.i) #21
  br i1 %call8.i, label %if.then9.i, label %for.inc.i

if.then9.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @of_node_put(ptr noundef nonnull %child.033.i) #21
  %34 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %mii_bus, align 4
  %call11.i = tail call i32 @of_mdiobus_register(ptr noundef %35, ptr noundef %29) #21
  br label %macb_mdiobus_register.exit

for.inc.i:                                        ; preds = %for.body.i
  %call13.i = tail call ptr @of_get_next_available_child(ptr noundef %29, ptr noundef nonnull %child.033.i) #21
  %cmp.not.i = icmp eq ptr %call13.i, null
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %if.end6.i.for.end.i_crit_edge
  %36 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %mii_bus, align 4
  %call15.i = tail call i32 @__mdiobus_register(ptr noundef %37, ptr noundef null) #21
  br label %macb_mdiobus_register.exit

macb_mdiobus_register.exit:                       ; preds = %for.end.i, %if.then9.i, %if.then3.i, %if.then.i
  %retval.0.i = phi i32 [ %call1.i, %if.then.i ], [ %call5.i, %if.then3.i ], [ %call11.i, %if.then9.i ], [ %call15.i, %for.end.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool17.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool17.not, label %if.end19, label %macb_mdiobus_register.exit.err_out_free_mdiobus_crit_edge

macb_mdiobus_register.exit.err_out_free_mdiobus_crit_edge: ; preds = %macb_mdiobus_register.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_out_free_mdiobus

if.end19:                                         ; preds = %macb_mdiobus_register.exit
  %38 = ptrtoint ptr %dev13 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev13, align 4
  %phylink_sgmii_pcs.i = getelementptr i8, ptr %39, i32 18460
  %40 = ptrtoint ptr %phylink_sgmii_pcs.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr @macb_phylink_pcs_ops, ptr %phylink_sgmii_pcs.i, align 4
  %phylink_usx_pcs.i = getelementptr i8, ptr %39, i32 18452
  %41 = ptrtoint ptr %phylink_usx_pcs.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr @macb_phylink_usx_pcs_ops, ptr %phylink_usx_pcs.i, align 4
  %dev2.i = getelementptr inbounds %struct.net_device, ptr %39, i32 0, i32 133
  %phylink_config.i = getelementptr i8, ptr %39, i32 18428
  %42 = ptrtoint ptr %phylink_config.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %dev2.i, ptr %phylink_config.i, align 4
  %type.i = getelementptr i8, ptr %39, i32 18432
  %43 = ptrtoint ptr %type.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %type.i, align 4
  %phy_interface.i = getelementptr i8, ptr %39, i32 18476
  %44 = ptrtoint ptr %phy_interface.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %phy_interface.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %45)
  %cmp.i = icmp eq i32 %45, 4
  br i1 %cmp.i, label %if.then.i49, label %if.end19.if.end.i50_crit_edge

if.end19.if.end.i50_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i50

if.then.i49:                                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  %poll_fixed_state.i = getelementptr i8, ptr %39, i32 18438
  %46 = ptrtoint ptr %poll_fixed_state.i to i32
  call void @__asan_store1_noabort(i32 %46)
  store i8 1, ptr %poll_fixed_state.i, align 2
  %get_fixed_state.i = getelementptr i8, ptr %39, i32 18440
  %47 = ptrtoint ptr %get_fixed_state.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr @macb_get_pcs_fixed_state, ptr %get_fixed_state.i, align 4
  br label %if.end.i50

if.end.i50:                                       ; preds = %if.then.i49, %if.end19.if.end.i50_crit_edge
  %mac_capabilities.i = getelementptr i8, ptr %39, i32 18448
  %48 = ptrtoint ptr %mac_capabilities.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 62, ptr %mac_capabilities.i, align 4
  %supported_interfaces.i = getelementptr i8, ptr %39, i32 18444
  %49 = ptrtoint ptr %supported_interfaces.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %supported_interfaces.i, align 4
  %or.i92.i = or i32 %50, 132
  store i32 %or.i92.i, ptr %supported_interfaces.i, align 4
  %caps.i.i = getelementptr i8, ptr %39, i32 18468
  %51 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %caps.i.i, align 4
  %53 = and i32 %52, -1610612736
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1610612736, i32 %53)
  %.not.i = icmp eq i32 %53, -1610612736
  br i1 %.not.i, label %if.then13.i, label %if.end.i50.if.end49.i_crit_edge

if.end.i50.if.end49.i_crit_edge:                  ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49.i

if.then13.i:                                      ; preds = %if.end.i50
  %and17.i = and i32 %52, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  %spec.store.select.i = select i1 %tobool18.not.i, i32 254, i32 190
  %54 = ptrtoint ptr %mac_capabilities.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %spec.store.select.i, ptr %mac_capabilities.i, align 4
  %and31.i = and i32 %52, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31.i)
  %tobool32.not.i = icmp eq i32 %and31.i, 0
  %spec.select.v = select i1 %tobool32.not.i, i32 7820, i32 7836
  %spec.select = or i32 %50, %spec.select.v
  %55 = ptrtoint ptr %supported_interfaces.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %spec.select, ptr %supported_interfaces.i, align 4
  %56 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %caps.i.i, align 4
  %and39.i = and i32 %57, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39.i)
  %tobool40.not.i = icmp eq i32 %and39.i, 0
  br i1 %tobool40.not.i, label %if.then13.i.if.end49.i_crit_edge, label %if.then41.i

if.then13.i.if.end49.i_crit_edge:                 ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end49.i

if.then41.i:                                      ; preds = %if.then13.i
  call void @__sanitizer_cov_trace_pc() #23
  %58 = ptrtoint ptr %supported_interfaces.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %supported_interfaces.i, align 4
  %or.i95.i = or i32 %59, 67108864
  store i32 %or.i95.i, ptr %supported_interfaces.i, align 4
  %60 = ptrtoint ptr %mac_capabilities.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %mac_capabilities.i, align 4
  %or47.i = or i32 %61, 1024
  store i32 %or47.i, ptr %mac_capabilities.i, align 4
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.then41.i, %if.then13.i.if.end49.i_crit_edge, %if.end.i50.if.end49.i_crit_edge
  %pdev.i51 = getelementptr i8, ptr %39, i32 18196
  %62 = ptrtoint ptr %pdev.i51 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %pdev.i51, align 4
  %fwnode.i = getelementptr inbounds %struct.platform_device, ptr %63, i32 0, i32 3, i32 28
  %64 = ptrtoint ptr %fwnode.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %fwnode.i, align 4
  %call53.i = tail call ptr @phylink_create(ptr noundef %phylink_config.i, ptr noundef %65, i32 noundef %45, ptr noundef nonnull @macb_phylink_ops) #21
  %phylink.i = getelementptr i8, ptr %39, i32 18424
  %66 = ptrtoint ptr %phylink.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %call53.i, ptr %phylink.i, align 8
  %cmp.i.i = icmp ugt ptr %call53.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %macb_mii_probe.exit, label %if.end49.i.cleanup_crit_edge

if.end49.i.cleanup_crit_edge:                     ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

macb_mii_probe.exit:                              ; preds = %if.end49.i
  %67 = ptrtoint ptr %call53.i to i32
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %39, ptr noundef nonnull @.str.85, i32 noundef %67) #24
  %68 = ptrtoint ptr %phylink.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %phylink.i, align 8
  %tobool22.not = icmp eq ptr %69, null
  br i1 %tobool22.not, label %macb_mii_probe.exit.cleanup_crit_edge, label %err_out_unregister_bus

macb_mii_probe.exit.cleanup_crit_edge:            ; preds = %macb_mii_probe.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

err_out_unregister_bus:                           ; preds = %macb_mii_probe.exit
  call void @__sanitizer_cov_trace_pc() #23
  %70 = ptrtoint ptr %69 to i32
  %71 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %mii_bus, align 4
  tail call void @mdiobus_unregister(ptr noundef %72) #21
  br label %err_out_free_mdiobus

err_out_free_mdiobus:                             ; preds = %err_out_unregister_bus, %macb_mdiobus_register.exit.err_out_free_mdiobus_crit_edge
  %err.0 = phi i32 [ %retval.0.i, %macb_mdiobus_register.exit.err_out_free_mdiobus_crit_edge ], [ %70, %err_out_unregister_bus ]
  %73 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %mii_bus, align 4
  tail call void @mdiobus_free(ptr noundef %74) #21
  br label %cleanup

cleanup:                                          ; preds = %err_out_free_mdiobus, %macb_mii_probe.exit.cleanup_crit_edge, %if.end49.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %macb_mii_probe.exit.cleanup_crit_edge ], [ %err.0, %err_out_free_mdiobus ], [ -12, %entry.cleanup_crit_edge ], [ 0, %if.end49.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_off(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_netdev(ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_setup(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_hresp_error_task(ptr noundef %t) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %t, i32 -17204
  %dev1 = getelementptr i8, ptr %t, i32 -1288
  %0 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev1, align 4
  %queues = getelementptr i8, ptr %t, i32 -17164
  %num_queues = getelementptr i8, ptr %t, i32 -17176
  %2 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp58.not = icmp eq i32 %3, 0
  br i1 %cmp58.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %rx_intr_mask = getelementptr i8, ptr %t, i32 32
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %q.060 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %queue.059 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %queue.059 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queue.059, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %macb_reg_writel, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %queue.059, i32 0, i32 4
  %8 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %IDR, align 8
  %10 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rx_intr_mask, align 4
  %or4 = or i32 %11, 2296
  tail call void %7(ptr noundef %5, i32 noundef %9, i32 noundef %or4) #21
  %inc = add nuw i32 %q.060, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.059, i32 1
  %12 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %13
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %macb_reg_readl = getelementptr i8, ptr %t, i32 -17196
  %14 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %15(ptr noundef %add.ptr, i32 noundef 0) #21
  %and = and i32 %call, -13
  %macb_reg_writel5 = getelementptr i8, ptr %t, i32 -17192
  %16 = ptrtoint ptr %macb_reg_writel5 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %macb_reg_writel5, align 4
  tail call void %17(ptr noundef %add.ptr, i32 noundef 0, i32 noundef %and) #21
  tail call void @netif_tx_stop_all_queues(ptr noundef %1) #21
  tail call void @netif_carrier_off(ptr noundef %1) #21
  %mog_init_rings = getelementptr i8, ptr %t, i32 -1096
  %18 = ptrtoint ptr %mog_init_rings to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mog_init_rings, align 4
  tail call void %19(ptr noundef %add.ptr) #21
  %20 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp17.not.i = icmp eq i32 %21, 0
  br i1 %cmp17.not.i, label %for.end.for.end21_crit_edge, label %for.end.for.body.i_crit_edge

for.end.for.body.i_crit_edge:                     ; preds = %for.end
  br label %for.body.i

for.end.for.end21_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end21

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.end.for.body.i_crit_edge
  %q.019.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.end.for.body.i_crit_edge ]
  %queue.018.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %queues, %for.end.for.body.i_crit_edge ]
  %22 = ptrtoint ptr %queue.018.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %queue.018.i, align 8
  %macb_reg_writel.i = getelementptr inbounds %struct.macb, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_writel.i, align 4
  %RBQP.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 9
  %26 = ptrtoint ptr %RBQP.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %RBQP.i, align 4
  %rx_ring_dma.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 17
  %28 = ptrtoint ptr %rx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rx_ring_dma.i, align 4
  tail call void %25(ptr noundef %23, i32 noundef %27, i32 noundef %29) #21
  %30 = ptrtoint ptr %queue.018.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %queue.018.i, align 8
  %macb_reg_writel4.i = getelementptr inbounds %struct.macb, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %macb_reg_writel4.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %macb_reg_writel4.i, align 4
  %TBQP.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 6
  %34 = ptrtoint ptr %TBQP.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %TBQP.i, align 8
  %tx_ring_dma.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 15
  %36 = ptrtoint ptr %tx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tx_ring_dma.i, align 4
  tail call void %33(ptr noundef %31, i32 noundef %35, i32 noundef %37) #21
  %inc.i = add nuw i32 %q.019.i, 1
  %incdec.ptr.i = getelementptr %struct.macb_queue, ptr %queue.018.i, i32 1
  %38 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_queues, align 4
  %cmp.i = icmp ult i32 %inc.i, %39
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %macb_init_buffers.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

macb_init_buffers.exit:                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp1061.not = icmp eq i32 %39, 0
  br i1 %cmp1061.not, label %macb_init_buffers.exit.for.end21_crit_edge, label %for.body11.lr.ph

macb_init_buffers.exit.for.end21_crit_edge:       ; preds = %macb_init_buffers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end21

for.body11.lr.ph:                                 ; preds = %macb_init_buffers.exit
  %rx_intr_mask15 = getelementptr i8, ptr %t, i32 32
  br label %for.body11

for.body11:                                       ; preds = %for.body11.for.body11_crit_edge, %for.body11.lr.ph
  %q.163 = phi i32 [ 0, %for.body11.lr.ph ], [ %inc19, %for.body11.for.body11_crit_edge ]
  %queue.162 = phi ptr [ %queues, %for.body11.lr.ph ], [ %incdec.ptr20, %for.body11.for.body11_crit_edge ]
  %40 = ptrtoint ptr %queue.162 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %queue.162, align 8
  %macb_reg_writel13 = getelementptr inbounds %struct.macb, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %macb_reg_writel13 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %macb_reg_writel13, align 4
  %IER = getelementptr inbounds %struct.macb_queue, ptr %queue.162, i32 0, i32 3
  %44 = ptrtoint ptr %IER to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %IER, align 4
  %46 = ptrtoint ptr %rx_intr_mask15 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rx_intr_mask15, align 4
  %or17 = or i32 %47, 2296
  tail call void %43(ptr noundef %41, i32 noundef %45, i32 noundef %or17) #21
  %inc19 = add nuw i32 %q.163, 1
  %incdec.ptr20 = getelementptr %struct.macb_queue, ptr %queue.162, i32 1
  %48 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_queues, align 4
  %cmp10 = icmp ult i32 %inc19, %49
  br i1 %cmp10, label %for.body11.for.body11_crit_edge, label %for.body11.for.end21_crit_edge

for.body11.for.end21_crit_edge:                   ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end21

for.body11.for.body11_crit_edge:                  ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body11

for.end21:                                        ; preds = %for.body11.for.end21_crit_edge, %macb_init_buffers.exit.for.end21_crit_edge, %for.end.for.end21_crit_edge
  %or22 = or i32 %call, 12
  %50 = ptrtoint ptr %macb_reg_writel5 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %macb_reg_writel5, align 4
  tail call void %51(ptr noundef %add.ptr, i32 noundef 0, i32 noundef %or22) #21
  tail call void @netif_carrier_on(ptr noundef %1) #21
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 104
  %52 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp4.not.i = icmp eq i32 %53, 0
  br i1 %cmp4.not.i, label %for.end21.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i

for.end21.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %for.end21
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 103
  br label %for.body.i57

for.body.i57:                                     ; preds = %for.body.i57.for.body.i57_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i55, %for.body.i57.for.body.i57_crit_edge ]
  %54 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %55, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  %inc.i55 = add nuw i32 %i.05.i, 1
  %56 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i56 = icmp ult i32 %inc.i55, %57
  br i1 %cmp.i56, label %for.body.i57.for.body.i57_crit_edge, label %for.body.i57.netif_tx_start_all_queues.exit_crit_edge

for.body.i57.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i57
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.i57.for.body.i57_crit_edge:              ; preds = %for.body.i57
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i57

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i57.netif_tx_start_all_queues.exit_crit_edge, %for.end21.netif_tx_start_all_queues.exit_crit_edge
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdiobus_unregister(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @mdiobus_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_netdev(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_clk_init(ptr noundef %pdev, ptr nocapture noundef %pclk, ptr nocapture noundef %hclk, ptr nocapture noundef %tx_clk, ptr nocapture noundef %rx_clk, ptr nocapture noundef %tsu_clk) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %platform_data.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 7
  %0 = ptrtoint ptr %platform_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %platform_data.i, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %4 = ptrtoint ptr %pclk to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %3, ptr %pclk, align 4
  %hclk2 = getelementptr inbounds %struct.macb_platform_data, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %hclk2 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %hclk2, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call4 = tail call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.11) #21
  %7 = ptrtoint ptr %pclk to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call4, ptr %pclk, align 4
  %call6 = tail call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.12) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi ptr [ %call6, %if.else ], [ %6, %if.then ]
  %8 = ptrtoint ptr %hclk to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %storemerge, ptr %hclk, align 4
  %9 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pclk, align 4
  %tobool.not.i = icmp eq ptr %10, null
  %cmp.i = icmp ugt ptr %10, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i
  br i1 %spec.select.i, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %11 = ptrtoint ptr %10 to i32
  %spec.select = select i1 %cmp.i, i32 %11, i32 -19
  %call12 = tail call i32 (ptr, i32, ptr, ...) @dev_err_probe(ptr noundef %dev, i32 noundef %spec.select, ptr noundef nonnull @.str.13) #21
  br label %cleanup

if.end13:                                         ; preds = %if.end
  %tobool.not.i130 = icmp eq ptr %storemerge, null
  %cmp.i131 = icmp ugt ptr %storemerge, inttoptr (i32 -4096 to ptr)
  %spec.select.i132 = or i1 %tobool.not.i130, %cmp.i131
  br i1 %spec.select.i132, label %if.then15, label %if.end24

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %storemerge to i32
  %spec.select185 = select i1 %cmp.i131, i32 %12, i32 -19
  %call23 = tail call i32 (ptr, i32, ptr, ...) @dev_err_probe(ptr noundef %dev, i32 noundef %spec.select185, ptr noundef nonnull @.str.14) #21
  br label %cleanup

if.end24:                                         ; preds = %if.end13
  %call26 = tail call ptr @devm_clk_get_optional(ptr noundef %dev, ptr noundef nonnull @.str.15) #21
  %13 = ptrtoint ptr %tx_clk to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call26, ptr %tx_clk, align 4
  %cmp.i134 = icmp ugt ptr %call26, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i134, label %if.then28, label %if.end30

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %call26 to i32
  br label %cleanup

if.end30:                                         ; preds = %if.end24
  %call32 = tail call ptr @devm_clk_get_optional(ptr noundef %dev, ptr noundef nonnull @.str.16) #21
  %15 = ptrtoint ptr %rx_clk to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call32, ptr %rx_clk, align 4
  %cmp.i135 = icmp ugt ptr %call32, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i135, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %call32 to i32
  br label %cleanup

if.end36:                                         ; preds = %if.end30
  %call38 = tail call ptr @devm_clk_get_optional(ptr noundef %dev, ptr noundef nonnull @.str.17) #21
  %17 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call38, ptr %tsu_clk, align 4
  %cmp.i136 = icmp ugt ptr %call38, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i136, label %if.then40, label %if.end42

if.then40:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %call38 to i32
  br label %cleanup

if.end42:                                         ; preds = %if.end36
  %19 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pclk, align 4
  %call.i = tail call i32 @clk_prepare(ptr noundef %20) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i137 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i137, label %if.end.i, label %if.end42.do.end_crit_edge

if.end42.do.end_crit_edge:                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.end.i:                                         ; preds = %if.end42
  %call1.i = tail call i32 @clk_enable(ptr noundef %20) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end47, label %if.then3.i

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %20) #21
  br label %do.end

do.end:                                           ; preds = %if.then3.i, %if.end42.do.end_crit_edge
  %retval.0.i.ph = phi i32 [ %call1.i, %if.then3.i ], [ %call.i, %if.end42.do.end_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.18, i32 noundef %retval.0.i.ph) #24
  br label %cleanup

if.end47:                                         ; preds = %if.end.i
  %21 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %hclk, align 4
  %call.i138 = tail call i32 @clk_prepare(ptr noundef %22) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i138)
  %tobool.not.i139 = icmp eq i32 %call.i138, 0
  br i1 %tobool.not.i139, label %if.end.i142, label %if.end47.do.end53_crit_edge

if.end47.do.end53_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end53

if.end.i142:                                      ; preds = %if.end47
  %call1.i140 = tail call i32 @clk_enable(ptr noundef %22) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i140)
  %tobool2.not.i141 = icmp eq i32 %call1.i140, 0
  br i1 %tobool2.not.i141, label %if.end55, label %if.then3.i143

if.then3.i143:                                    ; preds = %if.end.i142
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %22) #21
  br label %do.end53

do.end53:                                         ; preds = %if.then3.i143, %if.end47.do.end53_crit_edge
  %retval.0.i144.ph = phi i32 [ %call1.i140, %if.then3.i143 ], [ %call.i138, %if.end47.do.end53_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.21, i32 noundef %retval.0.i144.ph) #24
  br label %err_disable_pclk

if.end55:                                         ; preds = %if.end.i142
  %23 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tx_clk, align 4
  %call.i146 = tail call i32 @clk_prepare(ptr noundef %24) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i146)
  %tobool.not.i147 = icmp eq i32 %call.i146, 0
  br i1 %tobool.not.i147, label %if.end.i150, label %if.end55.do.end61_crit_edge

if.end55.do.end61_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end61

if.end.i150:                                      ; preds = %if.end55
  %call1.i148 = tail call i32 @clk_enable(ptr noundef %24) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i148)
  %tobool2.not.i149 = icmp eq i32 %call1.i148, 0
  br i1 %tobool2.not.i149, label %if.end63, label %if.then3.i151

if.then3.i151:                                    ; preds = %if.end.i150
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %24) #21
  br label %do.end61

do.end61:                                         ; preds = %if.then3.i151, %if.end55.do.end61_crit_edge
  %retval.0.i152.ph = phi i32 [ %call1.i148, %if.then3.i151 ], [ %call.i146, %if.end55.do.end61_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.24, i32 noundef %retval.0.i152.ph) #24
  br label %err_disable_hclk

if.end63:                                         ; preds = %if.end.i150
  %25 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rx_clk, align 4
  %call.i154 = tail call i32 @clk_prepare(ptr noundef %26) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i154)
  %tobool.not.i155 = icmp eq i32 %call.i154, 0
  br i1 %tobool.not.i155, label %if.end.i158, label %if.end63.do.end69_crit_edge

if.end63.do.end69_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end69

if.end.i158:                                      ; preds = %if.end63
  %call1.i156 = tail call i32 @clk_enable(ptr noundef %26) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i156)
  %tobool2.not.i157 = icmp eq i32 %call1.i156, 0
  br i1 %tobool2.not.i157, label %if.end71, label %if.then3.i159

if.then3.i159:                                    ; preds = %if.end.i158
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %26) #21
  br label %do.end69

do.end69:                                         ; preds = %if.then3.i159, %if.end63.do.end69_crit_edge
  %retval.0.i160.ph = phi i32 [ %call1.i156, %if.then3.i159 ], [ %call.i154, %if.end63.do.end69_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.27, i32 noundef %retval.0.i160.ph) #24
  br label %err_disable_txclk

if.end71:                                         ; preds = %if.end.i158
  %27 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tsu_clk, align 4
  %call.i162 = tail call i32 @clk_prepare(ptr noundef %28) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i162)
  %tobool.not.i163 = icmp eq i32 %call.i162, 0
  br i1 %tobool.not.i163, label %if.end.i166, label %if.end71.do.end77_crit_edge

if.end71.do.end77_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end77

if.end.i166:                                      ; preds = %if.end71
  %call1.i164 = tail call i32 @clk_enable(ptr noundef %28) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i164)
  %tobool2.not.i165 = icmp eq i32 %call1.i164, 0
  br i1 %tobool2.not.i165, label %if.end.i166.cleanup_crit_edge, label %if.then3.i167

if.end.i166.cleanup_crit_edge:                    ; preds = %if.end.i166
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then3.i167:                                    ; preds = %if.end.i166
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %28) #21
  br label %do.end77

do.end77:                                         ; preds = %if.then3.i167, %if.end71.do.end77_crit_edge
  %retval.0.i168.ph = phi i32 [ %call1.i164, %if.then3.i167 ], [ %call.i162, %if.end71.do.end77_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.30, i32 noundef %retval.0.i168.ph) #24
  %29 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %rx_clk, align 4
  tail call void @clk_disable(ptr noundef %30) #21
  tail call void @clk_unprepare(ptr noundef %30) #21
  br label %err_disable_txclk

err_disable_txclk:                                ; preds = %do.end77, %do.end69
  %err.0 = phi i32 [ %retval.0.i160.ph, %do.end69 ], [ %retval.0.i168.ph, %do.end77 ]
  %31 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %tx_clk, align 4
  tail call void @clk_disable(ptr noundef %32) #21
  tail call void @clk_unprepare(ptr noundef %32) #21
  br label %err_disable_hclk

err_disable_hclk:                                 ; preds = %err_disable_txclk, %do.end61
  %err.1 = phi i32 [ %retval.0.i152.ph, %do.end61 ], [ %err.0, %err_disable_txclk ]
  %33 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %hclk, align 4
  tail call void @clk_disable(ptr noundef %34) #21
  tail call void @clk_unprepare(ptr noundef %34) #21
  br label %err_disable_pclk

err_disable_pclk:                                 ; preds = %err_disable_hclk, %do.end53
  %err.2 = phi i32 [ %retval.0.i144.ph, %do.end53 ], [ %err.1, %err_disable_hclk ]
  %35 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pclk, align 4
  tail call void @clk_disable(ptr noundef %36) #21
  tail call void @clk_unprepare(ptr noundef %36) #21
  br label %cleanup

cleanup:                                          ; preds = %err_disable_pclk, %if.end.i166.cleanup_crit_edge, %do.end, %if.then40, %if.then34, %if.then28, %if.then15, %if.then8
  %retval.0 = phi i32 [ %call12, %if.then8 ], [ %call23, %if.then15 ], [ %14, %if.then28 ], [ %16, %if.then34 ], [ %18, %if.then40 ], [ %retval.0.i.ph, %do.end ], [ %err.2, %err_disable_pclk ], [ 0, %if.end.i166.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_init(ptr noundef %pdev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %tx_ring_size = getelementptr i8, ptr %1, i32 2328
  %2 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 512, ptr %tx_ring_size, align 8
  %rx_ring_size = getelementptr i8, ptr %1, i32 2324
  %3 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 512, ptr %rx_ring_size, align 4
  %queue_mask = getelementptr i8, ptr %1, i32 2336
  %dev32 = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %q.0295 = phi i32 [ 0, %entry ], [ %q.1, %for.inc.for.body_crit_edge ]
  %hw_q.0292 = phi i32 [ 0, %entry ], [ %inc48, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %queue_mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %queue_mask, align 8
  %shl = shl nuw nsw i32 1, %hw_q.0292
  %and = and i32 %5, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end:                                           ; preds = %for.body
  %arrayidx = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %add.ptr.i, ptr %arrayidx, align 8
  %napi = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 24
  tail call void @netif_napi_add(ptr noundef %1, ptr noundef %napi, ptr noundef nonnull @macb_poll, i32 noundef 64) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %hw_q.0292)
  %tobool3.not = icmp eq i32 %hw_q.0292, 0
  br i1 %tobool3.not, label %if.end.if.end30_crit_edge, label %if.then4

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end30

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %sub = shl nuw nsw i32 %hw_q.0292, 2
  %add = add nuw nsw i32 %sub, 1020
  %add8 = add nuw nsw i32 %sub, 1532
  %add11 = add nuw nsw i32 %sub, 1564
  %add14 = add nuw nsw i32 %sub, 1596
  %add17 = add nuw nsw i32 %sub, 1084
  %add20 = add nuw nsw i32 %sub, 1148
  %add23 = add nuw nsw i32 %sub, 1180
  %RBQS = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 8
  %7 = ptrtoint ptr %RBQS to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %add23, ptr %RBQS, align 8
  br label %if.end30

if.end30:                                         ; preds = %if.then4, %if.end.if.end30_crit_edge
  %add.sink = phi i32 [ %add, %if.then4 ], [ 36, %if.end.if.end30_crit_edge ]
  %add8.sink = phi i32 [ %add8, %if.then4 ], [ 40, %if.end.if.end30_crit_edge ]
  %add11.sink = phi i32 [ %add11, %if.then4 ], [ 44, %if.end.if.end30_crit_edge ]
  %add14.sink = phi i32 [ %add14, %if.then4 ], [ 48, %if.end.if.end30_crit_edge ]
  %add17.sink = phi i32 [ %add17, %if.then4 ], [ 28, %if.end.if.end30_crit_edge ]
  %add20.sink = phi i32 [ %add20, %if.then4 ], [ 24, %if.end.if.end30_crit_edge ]
  %8 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 2
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add.sink, ptr %8, align 8
  %10 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 3
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %add8.sink, ptr %10, align 4
  %12 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %add11.sink, ptr %12, align 8
  %14 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 5
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add14.sink, ptr %14, align 4
  %16 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 6
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %add17.sink, ptr %16, align 8
  %18 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 9
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %add20.sink, ptr %18, align 4
  %call31 = tail call i32 @platform_get_irq(ptr noundef %pdev, i32 noundef %q.0295) #21
  %irq = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 1
  %20 = ptrtoint ptr %irq to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call31, ptr %irq, align 4
  %call.i = tail call i32 @devm_request_threaded_irq(ptr noundef %dev32, i32 noundef %call31, ptr noundef nonnull @macb_interrupt, ptr noundef null, i32 noundef 128, ptr noundef %1, ptr noundef %arrayidx) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool35.not = icmp eq i32 %call.i, 0
  br i1 %tobool35.not, label %do.body40, label %do.end

do.end:                                           ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %21 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %irq, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev32, ptr noundef nonnull @.str.32, i32 noundef %22, i32 noundef %call.i) #24
  br label %cleanup

do.body40:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #23
  %tx_error_task = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 16
  tail call void @__init_work(ptr noundef %tx_error_task, i32 noundef 0) #21
  %23 = ptrtoint ptr %tx_error_task to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 -64, ptr %tx_error_task, align 8
  %lockdep_map = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 16, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.34, ptr noundef nonnull @macb_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #21
  %entry44 = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 16, i32 1
  %24 = ptrtoint ptr %entry44 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %entry44, ptr %entry44, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %entry44, i32 0, i32 1
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %entry44, ptr %prev.i, align 4
  %func = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %q.0295, i32 16, i32 2
  %26 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr @macb_tx_error_task, ptr %func, align 4
  %inc = add i32 %q.0295, 1
  br label %for.inc

for.inc:                                          ; preds = %do.body40, %for.body.for.inc_crit_edge
  %q.1 = phi i32 [ %inc, %do.body40 ], [ %q.0295, %for.body.for.inc_crit_edge ]
  %inc48 = add nuw nsw i32 %hw_q.0292, 1
  %exitcond.not = icmp eq i32 %inc48, 8
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %27 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr @macb_netdev_ops, ptr %netdev_ops, align 8
  %caps.i = getelementptr i8, ptr %1, i32 18468
  %28 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i = icmp slt i32 %29, 0
  br i1 %tobool.i, label %for.end.if.end65_crit_edge, label %if.else54

for.end.if.end65_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end65

if.else54:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end65

if.end65:                                         ; preds = %if.else54, %for.end.if.end65_crit_edge
  %.sink = phi i32 [ 2040, %if.else54 ], [ 16320, %for.end.if.end65_crit_edge ]
  %macb_alloc_rx_buffers.sink = phi ptr [ @macb_alloc_rx_buffers, %if.else54 ], [ @gem_alloc_rx_buffers, %for.end.if.end65_crit_edge ]
  %macb_free_rx_buffers.sink = phi ptr [ @macb_free_rx_buffers, %if.else54 ], [ @gem_free_rx_buffers, %for.end.if.end65_crit_edge ]
  %macb_init_rings.sink = phi ptr [ @macb_init_rings, %if.else54 ], [ @gem_init_rings, %for.end.if.end65_crit_edge ]
  %macb_rx.sink = phi ptr [ @macb_rx, %if.else54 ], [ @gem_rx, %for.end.if.end65_crit_edge ]
  %macb_ethtool_ops.sink = phi ptr [ @macb_ethtool_ops, %if.else54 ], [ @gem_ethtool_ops, %for.end.if.end65_crit_edge ]
  %30 = getelementptr i8, ptr %1, i32 18512
  %31 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %.sink, ptr %30, align 8
  %32 = getelementptr i8, ptr %1, i32 18404
  %33 = ptrtoint ptr %32 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %macb_alloc_rx_buffers.sink, ptr %32, align 4
  %34 = getelementptr i8, ptr %1, i32 18408
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %macb_free_rx_buffers.sink, ptr %34, align 4
  %36 = getelementptr i8, ptr %1, i32 18412
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %macb_init_rings.sink, ptr %36, align 4
  %38 = getelementptr i8, ptr %1, i32 18416
  %39 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %macb_rx.sink, ptr %38, align 4
  %40 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 44
  %41 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %macb_ethtool_ops.sink, ptr %40, align 16
  %hw_features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 24
  %42 = ptrtoint ptr %hw_features to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 1, ptr %hw_features, align 8
  %macb_reg_readl = getelementptr i8, ptr %1, i32 2312
  %43 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %macb_reg_readl, align 8
  %call66 = tail call i32 %44(ptr noundef %add.ptr.i, i32 noundef 660) #21
  %45 = and i32 %call66, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool68.not = icmp eq i32 %45, 0
  br i1 %tobool68.not, label %if.end65.if.end71_crit_edge, label %if.then69

if.end65.if.end71_crit_edge:                      ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end71

if.then69:                                        ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #23
  %46 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %hw_features, align 8
  %or = or i64 %47, 65536
  store i64 %or, ptr %hw_features, align 8
  br label %if.end71

if.end71:                                         ; preds = %if.then69, %if.end65.if.end71_crit_edge
  %48 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %caps.i, align 4
  %50 = and i32 %49, -1879048192
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %50)
  %51 = icmp eq i32 %50, -2147483648
  br i1 %51, label %if.then75, label %if.end71.if.end78_crit_edge

if.end71.if.end78_crit_edge:                      ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end78

if.then75:                                        ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #23
  %52 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %hw_features, align 8
  %or77 = or i64 %53, 1099511627784
  store i64 %or77, ptr %hw_features, align 8
  br label %if.end78

if.end78:                                         ; preds = %if.then75, %if.end71.if.end78_crit_edge
  %54 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %caps.i, align 4
  %and80 = and i32 %55, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and80)
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %if.end78.if.end85_crit_edge, label %if.then82

if.end78.if.end85_crit_edge:                      ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end85

if.then82:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #23
  %56 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %hw_features, align 8
  %and84 = and i64 %57, -2
  store i64 %and84, ptr %hw_features, align 8
  br label %if.end85

if.end85:                                         ; preds = %if.then82, %if.end78.if.end85_crit_edge
  %58 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %hw_features, align 8
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %60 = ptrtoint ptr %features to i32
  call void @__asan_store8_noabort(i32 %60)
  store i64 %59, ptr %features, align 16
  %61 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %macb_reg_readl, align 8
  %call88 = tail call i32 %62(ptr noundef %add.ptr.i, i32 noundef 668) #21
  %div.lhs.trunc = trunc i32 %call88 to i8
  %div290 = udiv i8 %div.lhs.trunc, 3
  %div.zext = zext i8 %div290 to i32
  %shr91 = lshr i32 %call88, 16
  %and92 = and i32 %shr91, 255
  %63 = tail call i32 @llvm.umin.i32(i32 %and92, i32 %div.zext)
  %max_tuples = getelementptr i8, ptr %1, i32 19504
  %64 = ptrtoint ptr %max_tuples to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %63, ptr %max_tuples, align 8
  %rx_fs_list = getelementptr i8, ptr %1, i32 19448
  %65 = ptrtoint ptr %rx_fs_list to i32
  call void @__asan_store4_noabort(i32 %65)
  store volatile ptr %rx_fs_list, ptr %rx_fs_list, align 4
  %prev.i283 = getelementptr i8, ptr %1, i32 19452
  %66 = ptrtoint ptr %prev.i283 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %rx_fs_list, ptr %prev.i283, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp95.not = icmp eq i32 %63, 0
  br i1 %cmp95.not, label %if.end85.if.end113_crit_edge, label %if.then96

if.end85.if.end113_crit_edge:                     ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end113

if.then96:                                        ; preds = %if.end85
  %67 = and i32 %call88, 65280
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %67)
  %cmp99.not = icmp eq i32 %67, 0
  br i1 %cmp99.not, label %if.else110, label %if.then100

if.then100:                                       ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel = getelementptr i8, ptr %1, i32 2316
  %68 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %69(ptr noundef %add.ptr.i, i32 noundef 1760, i32 noundef 2048) #21
  %70 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %hw_features, align 8
  %or104 = or i64 %71, 274877906944
  store i64 %or104, ptr %hw_features, align 8
  %count = getelementptr i8, ptr %1, i32 19456
  %72 = ptrtoint ptr %count to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 0, ptr %count, align 8
  %rx_fs_lock = getelementptr i8, ptr %1, i32 19460
  tail call void @__raw_spin_lock_init(ptr noundef %rx_fs_lock, ptr noundef nonnull @.str.36, ptr noundef nonnull @macb_init.__key.35, i16 noundef signext 3) #21
  br label %if.end113

if.else110:                                       ; preds = %if.then96
  call void @__sanitizer_cov_trace_pc() #23
  %73 = ptrtoint ptr %max_tuples to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 0, ptr %max_tuples, align 8
  br label %if.end113

if.end113:                                        ; preds = %if.else110, %if.then100, %if.end85.if.end113_crit_edge
  %74 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %caps.i, align 4
  %and115 = and i32 %75, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and115)
  %tobool116.not = icmp eq i32 %and115, 0
  br i1 %tobool116.not, label %if.then117, label %if.end113.if.end151_crit_edge

if.end113.if.end151_crit_edge:                    ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end151

if.then117:                                       ; preds = %if.end113
  %phy_interface = getelementptr i8, ptr %1, i32 18476
  %76 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %phy_interface, align 4
  %78 = add i32 %77, -9
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %78)
  %79 = icmp ult i32 %78, 4
  br i1 %79, label %if.then119, label %if.else120

if.then119:                                       ; preds = %if.then117
  call void @__sanitizer_cov_trace_pc() #23
  %usrio = getelementptr i8, ptr %1, i32 19552
  %80 = ptrtoint ptr %usrio to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %usrio, align 8
  %rgmii = getelementptr inbounds %struct.macb_usrio_config, ptr %81, i32 0, i32 2
  br label %if.end137.sink.split

if.else120:                                       ; preds = %if.then117
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %77)
  %cmp122 = icmp ne i32 %77, 7
  %and125 = and i32 %75, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  %or.cond291 = select i1 %cmp122, i1 true, i1 %tobool126.not
  br i1 %or.cond291, label %if.else129, label %if.then127

if.then127:                                       ; preds = %if.else120
  call void @__sanitizer_cov_trace_pc() #23
  %usrio128 = getelementptr i8, ptr %1, i32 19552
  %82 = ptrtoint ptr %usrio128 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %usrio128, align 8
  %rmii = getelementptr inbounds %struct.macb_usrio_config, ptr %83, i32 0, i32 1
  br label %if.end137.sink.split

if.else129:                                       ; preds = %if.else120
  br i1 %tobool126.not, label %if.then133, label %if.else129.if.end137_crit_edge

if.else129.if.end137_crit_edge:                   ; preds = %if.else129
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end137

if.then133:                                       ; preds = %if.else129
  call void @__sanitizer_cov_trace_pc() #23
  %usrio134 = getelementptr i8, ptr %1, i32 19552
  %84 = ptrtoint ptr %usrio134 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %usrio134, align 8
  br label %if.end137.sink.split

if.end137.sink.split:                             ; preds = %if.then133, %if.then127, %if.then119
  %rmii.sink = phi ptr [ %rmii, %if.then127 ], [ %85, %if.then133 ], [ %rgmii, %if.then119 ]
  %86 = ptrtoint ptr %rmii.sink to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %rmii.sink, align 4
  br label %if.end137

if.end137:                                        ; preds = %if.end137.sink.split, %if.else129.if.end137_crit_edge
  %val.0 = phi i32 [ 0, %if.else129.if.end137_crit_edge ], [ %87, %if.end137.sink.split ]
  %and139 = and i32 %75, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and139)
  %tobool140.not = icmp eq i32 %and139, 0
  br i1 %tobool140.not, label %if.end137.if.end144_crit_edge, label %if.then141

if.end137.if.end144_crit_edge:                    ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end144

if.then141:                                       ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #23
  %usrio142 = getelementptr i8, ptr %1, i32 19552
  %88 = ptrtoint ptr %usrio142 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %usrio142, align 8
  %refclk = getelementptr inbounds %struct.macb_usrio_config, ptr %89, i32 0, i32 3
  %90 = ptrtoint ptr %refclk to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %refclk, align 4
  %or143 = or i32 %91, %val.0
  br label %if.end144

if.end144:                                        ; preds = %if.then141, %if.end137.if.end144_crit_edge
  %val.1 = phi i32 [ %or143, %if.then141 ], [ %val.0, %if.end137.if.end144_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.i285 = icmp slt i32 %75, 0
  %macb_reg_writel147 = getelementptr i8, ptr %1, i32 2316
  %92 = ptrtoint ptr %macb_reg_writel147 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %macb_reg_writel147, align 4
  %. = select i1 %tobool.i285, i32 12, i32 192
  tail call void %93(ptr noundef %add.ptr.i, i32 noundef %., i32 noundef %val.1) #21
  %94 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %.pr = load i32, ptr %caps.i, align 4
  br label %if.end151

if.end151:                                        ; preds = %if.end144, %if.end113.if.end151_crit_edge
  %95 = phi i32 [ %.pr, %if.end144 ], [ %75, %if.end113.if.end151_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool.i.i = icmp slt i32 %95, 0
  %pclk.i.i = getelementptr i8, ptr %1, i32 18200
  %96 = ptrtoint ptr %pclk.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %pclk.i.i, align 8
  %call.i.i = tail call i32 @clk_get_rate(ptr noundef %97) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 20000001, i32 %call.i.i)
  %cmp.i.i = icmp ult i32 %call.i.i, 20000001
  br i1 %tobool.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end151
  br i1 %cmp.i.i, label %if.then.i.macb_mdc_clk_div.exit_crit_edge, label %if.else.i.i

if.then.i.macb_mdc_clk_div.exit_crit_edge:        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 40000001, i32 %call.i.i)
  %cmp1.i.i = icmp ult i32 %call.i.i, 40000001
  br i1 %cmp1.i.i, label %if.else.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else3.i.i

if.else.i.i.macb_mdc_clk_div.exit_crit_edge:      ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else3.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 80000001, i32 %call.i.i)
  %cmp4.i.i = icmp ult i32 %call.i.i, 80000001
  br i1 %cmp4.i.i, label %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else6.i.i

if.else3.i.i.macb_mdc_clk_div.exit_crit_edge:     ; preds = %if.else3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else6.i.i:                                     ; preds = %if.else3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 120000001, i32 %call.i.i)
  %cmp7.i.i = icmp ult i32 %call.i.i, 120000001
  br i1 %cmp7.i.i, label %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else9.i.i

if.else6.i.i.macb_mdc_clk_div.exit_crit_edge:     ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else9.i.i:                                     ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 160000001, i32 %call.i.i)
  %cmp10.i.i = icmp ult i32 %call.i.i, 160000001
  %..i.i = select i1 %cmp10.i.i, i32 1048576, i32 1310720
  br label %macb_mdc_clk_div.exit

if.end.i:                                         ; preds = %if.end151
  br i1 %cmp.i.i, label %if.end.i.macb_mdc_clk_div.exit_crit_edge, label %if.else.i

if.end.i.macb_mdc_clk_div.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 40000001, i32 %call.i.i)
  %cmp4.i = icmp ult i32 %call.i.i, 40000001
  br i1 %cmp4.i, label %if.else.i.macb_mdc_clk_div.exit_crit_edge, label %if.else6.i

if.else.i.macb_mdc_clk_div.exit_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else6.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 80000001, i32 %call.i.i)
  %cmp7.i = icmp ult i32 %call.i.i, 80000001
  %..i = select i1 %cmp7.i, i32 2048, i32 3072
  br label %macb_mdc_clk_div.exit

macb_mdc_clk_div.exit:                            ; preds = %if.else6.i, %if.else.i.macb_mdc_clk_div.exit_crit_edge, %if.end.i.macb_mdc_clk_div.exit_crit_edge, %if.else9.i.i, %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge, %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge, %if.else.i.i.macb_mdc_clk_div.exit_crit_edge, %if.then.i.macb_mdc_clk_div.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i.macb_mdc_clk_div.exit_crit_edge ], [ 1024, %if.else.i.macb_mdc_clk_div.exit_crit_edge ], [ %..i, %if.else6.i ], [ 0, %if.then.i.macb_mdc_clk_div.exit_crit_edge ], [ 262144, %if.else.i.i.macb_mdc_clk_div.exit_crit_edge ], [ 524288, %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge ], [ 786432, %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge ], [ %..i.i, %if.else9.i.i ]
  %98 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool.i.i287 = icmp slt i32 %99, 0
  br i1 %tobool.i.i287, label %if.end.i288, label %macb_mdc_clk_div.exit.macb_dbw.exit_crit_edge

macb_mdc_clk_div.exit.macb_dbw.exit_crit_edge:    ; preds = %macb_mdc_clk_div.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dbw.exit

if.end.i288:                                      ; preds = %macb_mdc_clk_div.exit
  call void @__sanitizer_cov_trace_pc() #23
  %100 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %macb_reg_readl, align 8
  %call1.i = tail call i32 %101(ptr noundef %add.ptr.i, i32 noundef 640) #21
  %shr.i = lshr i32 %call1.i, 25
  %and.i = and i32 %shr.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i)
  %switch.selectcmp.i = icmp eq i32 %and.i, 2
  %switch.select.i = select i1 %switch.selectcmp.i, i32 2097152, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %and.i)
  %switch.selectcmp6.i = icmp eq i32 %and.i, 4
  %switch.select7.i = select i1 %switch.selectcmp6.i, i32 4194304, i32 %switch.select.i
  br label %macb_dbw.exit

macb_dbw.exit:                                    ; preds = %if.end.i288, %macb_mdc_clk_div.exit.macb_dbw.exit_crit_edge
  %retval.0.i289 = phi i32 [ 0, %macb_mdc_clk_div.exit.macb_dbw.exit_crit_edge ], [ %switch.select7.i, %if.end.i288 ]
  %or154 = or i32 %retval.0.i289, %retval.0.i
  %phy_interface155 = getelementptr i8, ptr %1, i32 18476
  %102 = ptrtoint ptr %phy_interface155 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %phy_interface155, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %103)
  %cmp156 = icmp eq i32 %103, 4
  %or158 = or i32 %or154, 134219776
  %spec.select = select i1 %cmp156, i32 %or158, i32 %or154
  %macb_reg_writel160 = getelementptr i8, ptr %1, i32 2316
  %104 = ptrtoint ptr %macb_reg_writel160 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %macb_reg_writel160, align 4
  tail call void %105(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %spec.select) #21
  br label %cleanup

cleanup:                                          ; preds = %macb_dbw.exit, %do.end
  %retval.0 = phi i32 [ %call.i, %do.end ], [ 0, %macb_dbw.exit ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_clk_get(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dev_err_probe(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_clk_get_optional(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @clk_prepare_enable(ptr noundef %clk) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %call = tail call i32 @clk_prepare(ptr noundef %clk) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @clk_enable(ptr noundef %clk) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.then3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %clk) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then3, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call1, %if.then3 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_prepare(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_enable(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_unprepare(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_disable(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_napi_add(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_poll(ptr noundef %napi, i32 noundef %budget) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %napi, i32 -136
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %3(ptr noundef %1, i32 noundef 32) #21
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %5(ptr noundef %1, i32 noundef 32, i32 noundef %call) #21
  %mog_rx = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 19, i32 3
  %6 = ptrtoint ptr %mog_rx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mog_rx, align 4
  %call3 = tail call i32 %7(ptr noundef %add.ptr, ptr noundef %napi, i32 noundef %budget) #21
  call void @__sanitizer_cov_trace_cmp4(i32 %call3, i32 %budget)
  %cmp = icmp slt i32 %call3, %budget
  br i1 %cmp, label %if.then, label %entry.if.end38_crit_edge

entry.if.end38_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.then:                                          ; preds = %entry
  %call4 = tail call zeroext i1 @napi_complete_done(ptr noundef %napi, i32 noundef %call3) #21
  %8 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_readl, align 8
  %call6 = tail call i32 %9(ptr noundef %1, i32 noundef 32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.then
  %caps = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 25
  %10 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %caps, align 4
  %and = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool8.not = icmp eq i32 %and, 0
  br i1 %tobool8.not, label %if.then7.if.end_crit_edge, label %if.then9

if.then7.if.end_crit_edge:                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then9:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %12 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %macb_reg_writel11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %macb_reg_writel11, align 4
  %ISR = getelementptr i8, ptr %napi, i32 -128
  %16 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ISR, align 8
  tail call void %15(ptr noundef %13, i32 noundef %17, i32 noundef 2) #21
  br label %if.end

if.end:                                           ; preds = %if.then9, %if.then7.if.end_crit_edge
  %call.i = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #21
  br i1 %call.i, label %if.end.if.end38.sink.split_crit_edge, label %if.end.if.end38_crit_edge

if.end.if.end38_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.end.if.end38.sink.split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38.sink.split

if.else:                                          ; preds = %if.then
  %18 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel15 = getelementptr inbounds %struct.macb, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %macb_reg_writel15 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %macb_reg_writel15, align 4
  %IER = getelementptr i8, ptr %napi, i32 -124
  %22 = ptrtoint ptr %IER to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %IER, align 4
  %rx_intr_mask = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 48
  %24 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rx_intr_mask, align 4
  tail call void %21(ptr noundef %19, i32 noundef %23, i32 noundef %25) #21
  %26 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %macb_reg_readl, align 8
  %call18 = tail call i32 %27(ptr noundef %1, i32 noundef 32) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.else.if.end38_crit_edge, label %if.then22, !prof !300

if.else.if.end38_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.then22:                                        ; preds = %if.else
  %28 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel24 = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 3
  %30 = ptrtoint ptr %macb_reg_writel24 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %macb_reg_writel24, align 4
  %IDR = getelementptr i8, ptr %napi, i32 -120
  %32 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %IDR, align 8
  %34 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rx_intr_mask, align 4
  tail call void %31(ptr noundef %29, i32 noundef %33, i32 noundef %35) #21
  %caps27 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 25
  %36 = ptrtoint ptr %caps27 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %caps27, align 4
  %and28 = and i32 %37, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.then22.if.end35_crit_edge, label %if.then30

if.then22.if.end35_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end35

if.then30:                                        ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel32 = getelementptr inbounds %struct.macb, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %macb_reg_writel32 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %macb_reg_writel32, align 4
  %ISR34 = getelementptr i8, ptr %napi, i32 -128
  %42 = ptrtoint ptr %ISR34 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %ISR34, align 8
  tail call void %41(ptr noundef %39, i32 noundef %43, i32 noundef 2) #21
  br label %if.end35

if.end35:                                         ; preds = %if.then30, %if.then22.if.end35_crit_edge
  %call.i73 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #21
  br i1 %call.i73, label %if.end35.if.end38.sink.split_crit_edge, label %if.end35.if.end38_crit_edge

if.end35.if.end38_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38

if.end35.if.end38.sink.split_crit_edge:           ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end38.sink.split

if.end38.sink.split:                              ; preds = %if.end35.if.end38.sink.split_crit_edge, %if.end.if.end38.sink.split_crit_edge
  tail call void @__napi_schedule(ptr noundef %napi) #21
  br label %if.end38

if.end38:                                         ; preds = %if.end38.sink.split, %if.end35.if.end38_crit_edge, %if.else.if.end38_crit_edge, %if.end.if.end38_crit_edge, %entry.if.end38_crit_edge
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_interrupt(i32 noundef %irq, ptr noundef %dev_id) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_id, align 8
  %dev2 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %dev2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev2, align 4
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl, align 8
  %ISR = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 2
  %6 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ISR, align 8
  %call = tail call i32 %5(ptr noundef %1, i32 noundef %7) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !301

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 10
  tail call void @_raw_spin_lock(ptr noundef %lock) #21
  %state.i = getelementptr inbounds %struct.net_device, ptr %3, i32 0, i32 6
  %rx_intr_mask = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 48
  %IDR35 = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 4
  %caps37 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 25
  %napi = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 24
  %sub.ptr.lhs.cast.i = ptrtoint ptr %dev_id to i32
  %tx_head.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 11
  %tx_tail.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 12
  %tx_ring.i.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 13
  %tx_skb.i.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 14
  %tx_packets31.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 25, i32 3
  %tx_bytes37.i = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 25, i32 4
  %macb_reg_writel89 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %rx_overruns108 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 18, i32 0, i32 13
  %rx_overruns = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 18, i32 0, i32 41
  %state.i226 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 45, i32 1
  %hresp_err_tasklet = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 45
  br label %while.body

while.body:                                       ; preds = %if.end133.while.body_crit_edge, %if.end
  %status.0234 = phi i32 [ %call, %if.end ], [ %call138, %if.end133.while.body_crit_edge ]
  %8 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.then18, label %if.end28, !prof !301

if.then18:                                        ; preds = %while.body
  %10 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_writel, align 4
  %14 = ptrtoint ptr %IDR35 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %IDR35, align 8
  tail call void %13(ptr noundef %11, i32 noundef %15, i32 noundef -1) #21
  %16 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %caps37, align 4
  %and = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool21.not = icmp eq i32 %and, 0
  br i1 %tobool21.not, label %if.then18.while.end_crit_edge, label %if.then22

if.then18.while.end_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

if.then22:                                        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #23
  %18 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel24 = getelementptr inbounds %struct.macb, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %macb_reg_writel24 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %macb_reg_writel24, align 4
  %22 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ISR, align 8
  tail call void %21(ptr noundef %19, i32 noundef %23, i32 noundef -1) #21
  br label %while.end

if.end28:                                         ; preds = %while.body
  %24 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rx_intr_mask, align 4
  %and29 = and i32 %25, %status.0234
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool30.not = icmp eq i32 %and29, 0
  br i1 %tobool30.not, label %if.end28.if.end51_crit_edge, label %if.then31

if.end28.if.end51_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51

if.then31:                                        ; preds = %if.end28
  %26 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel33 = getelementptr inbounds %struct.macb, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %macb_reg_writel33 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %macb_reg_writel33, align 4
  %30 = ptrtoint ptr %IDR35 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %IDR35, align 8
  tail call void %29(ptr noundef %27, i32 noundef %31, i32 noundef %25) #21
  %32 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %caps37, align 4
  %and38 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %if.then31.if.end45_crit_edge, label %if.then40

if.then31.if.end45_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end45

if.then40:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #23
  %34 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel42 = getelementptr inbounds %struct.macb, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %macb_reg_writel42 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %macb_reg_writel42, align 4
  %38 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ISR, align 8
  tail call void %37(ptr noundef %35, i32 noundef %39, i32 noundef 2) #21
  br label %if.end45

if.end45:                                         ; preds = %if.then40, %if.then31.if.end45_crit_edge
  %call46 = tail call zeroext i1 @napi_schedule_prep(ptr noundef %napi) #21
  br i1 %call46, label %if.then47, label %if.end45.if.end51_crit_edge

if.end45.if.end51_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end51

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__napi_schedule(ptr noundef %napi) #21
  br label %if.end51

if.end51:                                         ; preds = %if.then47, %if.end45.if.end51_crit_edge, %if.end28.if.end51_crit_edge
  %and52 = and i32 %status.0234, 112
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and52)
  %tobool53.not = icmp eq i32 %and52, 0
  br i1 %tobool53.not, label %if.end75, label %if.then60, !prof !300

if.then60:                                        ; preds = %if.end51
  %40 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel62 = getelementptr inbounds %struct.macb, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %macb_reg_writel62 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %macb_reg_writel62, align 4
  %44 = ptrtoint ptr %IDR35 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %IDR35, align 8
  tail call void %43(ptr noundef %41, i32 noundef %45, i32 noundef 248) #21
  %tx_error_task = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %46 = load ptr, ptr @system_wq, align 4
  %call.i.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %46, ptr noundef %tx_error_task) #21
  %47 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %caps37, align 4
  %and67 = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and67)
  %tobool68.not = icmp eq i32 %and67, 0
  br i1 %tobool68.not, label %if.then60.while.end_crit_edge, label %if.then69

if.then60.while.end_crit_edge:                    ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

if.then69:                                        ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #23
  %49 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel71 = getelementptr inbounds %struct.macb, ptr %50, i32 0, i32 3
  %51 = ptrtoint ptr %macb_reg_writel71 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %macb_reg_writel71, align 4
  %53 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %ISR, align 8
  tail call void %52(ptr noundef %50, i32 noundef %54, i32 noundef 112) #21
  br label %while.end

if.end75:                                         ; preds = %if.end51
  %and76 = and i32 %status.0234, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and76)
  %tobool77.not = icmp eq i32 %and76, 0
  br i1 %tobool77.not, label %if.end75.if.end79_crit_edge, label %if.then78

if.end75.if.end79_crit_edge:                      ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end79

if.then78:                                        ; preds = %if.end75
  %55 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %dev_id, align 8
  %queues.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 9
  %sub.ptr.rhs.cast.i = ptrtoint ptr %queues.i to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %sub.ptr.div.i = sdiv exact i32 %sub.ptr.sub.i, 1976
  %macb_reg_readl.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 2
  %57 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %macb_reg_readl.i, align 8
  %call.i = tail call i32 %58(ptr noundef %56, i32 noundef 20) #21
  %macb_reg_writel.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 3
  %59 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %60(ptr noundef %56, i32 noundef 20, i32 noundef %call.i) #21
  %caps.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 25
  %61 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %caps.i, align 4
  %and.i = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then78.if.end.i_crit_edge, label %if.then.i

if.then78.if.end.i_crit_edge:                     ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #23
  %63 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel3.i = getelementptr inbounds %struct.macb, ptr %64, i32 0, i32 3
  %65 = ptrtoint ptr %macb_reg_writel3.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %macb_reg_writel3.i, align 4
  %67 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %ISR, align 8
  tail call void %66(ptr noundef %64, i32 noundef %68, i32 noundef 128) #21
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.then78.if.end.i_crit_edge
  %69 = ptrtoint ptr %tx_head.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %tx_head.i, align 4
  %71 = ptrtoint ptr %tx_tail.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %tx_tail.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %72, i32 %70)
  %cmp.not143.i = icmp eq i32 %72, %70
  br i1 %cmp.not143.i, label %if.end.i.for.end49.i_crit_edge, label %for.body.lr.ph.i

if.end.i.for.end49.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end49.i

for.body.lr.ph.i:                                 ; preds = %if.end.i
  %pdev4.i112.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 11
  %dev.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 17
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc47.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %tail.0144.i = phi i32 [ %72, %for.body.lr.ph.i ], [ %inc48.i, %for.inc47.i.for.body.i_crit_edge ]
  %73 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %dev_id, align 8
  %tx_ring_size.i.i.i = getelementptr inbounds %struct.macb, ptr %74, i32 0, i32 6
  %75 = ptrtoint ptr %tx_ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %tx_ring_size.i.i.i, align 8
  %sub.i.i.i = add i32 %76, -1
  %and.i.i.i = and i32 %sub.i.i.i, %tail.0144.i
  %hw_dma_cap.i.i.i = getelementptr inbounds %struct.macb, ptr %74, i32 0, i32 35
  %77 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %79 = zext i8 %78 to i64
  call void @__sanitizer_cov_trace_switch(i64 %79, ptr @__sancov_gen_cov_switch_values.108)
  switch i8 %78, label %for.body.i.macb_tx_desc.exit.i_crit_edge [
    i8 1, label %for.body.i.sw.bb.i.i.i_crit_edge
    i8 2, label %for.body.i.sw.bb.i.i.i_crit_edge246
    i8 3, label %sw.bb1.i.i.i
  ]

for.body.i.sw.bb.i.i.i_crit_edge246:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.sw.bb.i.i.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.macb_tx_desc.exit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit.i

sw.bb.i.i.i:                                      ; preds = %for.body.i.sw.bb.i.i.i_crit_edge, %for.body.i.sw.bb.i.i.i_crit_edge246
  %shl.i.i.i = shl i32 %and.i.i.i, 1
  br label %macb_tx_desc.exit.i

sw.bb1.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i = mul i32 %and.i.i.i, 3
  br label %macb_tx_desc.exit.i

macb_tx_desc.exit.i:                              ; preds = %sw.bb1.i.i.i, %sw.bb.i.i.i, %for.body.i.macb_tx_desc.exit.i_crit_edge
  %desc_idx.addr.0.i.i.i = phi i32 [ %and.i.i.i, %for.body.i.macb_tx_desc.exit.i_crit_edge ], [ %mul.i.i.i, %sw.bb1.i.i.i ], [ %shl.i.i.i, %sw.bb.i.i.i ]
  %80 = ptrtoint ptr %tx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %tx_ring.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.macb_dma_desc, ptr %81, i32 %desc_idx.addr.0.i.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !302
  %ctrl7.i = getelementptr %struct.macb_dma_desc, ptr %81, i32 %desc_idx.addr.0.i.i.i, i32 1
  %82 = ptrtoint ptr %ctrl7.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %ctrl7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %83)
  %tobool9.not.i = icmp sgt i32 %83, -1
  br i1 %tobool9.not.i, label %macb_tx_desc.exit.i.for.end49.i_crit_edge, label %for.cond12.preheader.i

macb_tx_desc.exit.i.for.end49.i_crit_edge:        ; preds = %macb_tx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end49.i

for.cond12.preheader.i:                           ; preds = %macb_tx_desc.exit.i
  %84 = ptrtoint ptr %tx_skb.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %tx_skb.i.i, align 8
  %86 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %dev_id, align 8
  %tx_ring_size.i.i106130.i = getelementptr inbounds %struct.macb, ptr %87, i32 0, i32 6
  %88 = ptrtoint ptr %tx_ring_size.i.i106130.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %tx_ring_size.i.i106130.i, align 8
  %sub.i.i107131.i = add i32 %89, -1
  %and.i.i108132.i = and i32 %sub.i.i107131.i, %tail.0144.i
  %arrayidx.i109133.i = getelementptr %struct.macb_tx_skb, ptr %85, i32 %and.i.i108132.i
  %90 = ptrtoint ptr %arrayidx.i109133.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %arrayidx.i109133.i, align 4
  %tobool15.not134.i = icmp eq ptr %91, null
  br i1 %tobool15.not134.i, label %for.cond12.preheader.i.for.inc.critedge.i_crit_edge, label %for.cond12.preheader.i.if.then16.i_crit_edge

for.cond12.preheader.i.if.then16.i_crit_edge:     ; preds = %for.cond12.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then16.i

for.cond12.preheader.i.for.inc.critedge.i_crit_edge: ; preds = %for.cond12.preheader.i
  br label %for.inc.critedge.i

if.then16.i:                                      ; preds = %macb_tx_unmap.exit119.i.if.then16.i_crit_edge, %for.cond12.preheader.i.if.then16.i_crit_edge
  %tail.1.lcssa.i = phi i32 [ %tail.0144.i, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %inc43.i, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %.lcssa129.i = phi ptr [ %85, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %136, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %.lcssa128.i = phi ptr [ %87, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %138, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %and.i.i108.lcssa.i = phi i32 [ %and.i.i108132.i, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %and.i.i108.i, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %arrayidx.i109.lcssa.i = phi ptr [ %arrayidx.i109133.i, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %arrayidx.i109.i, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %.lcssa.i = phi ptr [ %91, %for.cond12.preheader.i.if.then16.i_crit_edge ], [ %142, %macb_tx_unmap.exit119.i.if.then16.i_crit_edge ]
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %.lcssa.i, i32 0, i32 17
  %92 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %end.i.i, align 4
  %tx_flags.i = getelementptr inbounds %struct.skb_shared_info, ptr %93, i32 0, i32 3
  %94 = ptrtoint ptr %tx_flags.i to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %tx_flags.i, align 1
  %96 = and i8 %95, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %96)
  %tobool20.not.i = icmp eq i8 %96, 0
  br i1 %tobool20.not.i, label %if.then16.i.if.end28.i_crit_edge, label %land.lhs.true.i, !prof !300

if.then16.i.if.end28.i_crit_edge:                 ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28.i

land.lhs.true.i:                                  ; preds = %if.then16.i
  %tx_type.i.i = getelementptr inbounds %struct.macb, ptr %.lcssa128.i, i32 0, i32 41, i32 1
  %97 = ptrtoint ptr %tx_type.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %tx_type.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %98)
  %cmp.i.i = icmp eq i32 %98, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.if.end28.i_crit_edge, label %gem_ptp_do_txstamp.exit.i

land.lhs.true.i.if.end28.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28.i

gem_ptp_do_txstamp.exit.i:                        ; preds = %land.lhs.true.i
  %call.i.i212 = tail call i32 @gem_ptp_txstamp(ptr noundef %dev_id, ptr noundef nonnull %.lcssa.i, ptr noundef %arrayidx.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i212)
  %cmp24.i = icmp eq i32 %call.i.i212, 0
  br i1 %cmp24.i, label %if.then26.i, label %gem_ptp_do_txstamp.exit.i.if.end28.i_crit_edge

gem_ptp_do_txstamp.exit.i.if.end28.i_crit_edge:   ; preds = %gem_ptp_do_txstamp.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28.i

if.then26.i:                                      ; preds = %gem_ptp_do_txstamp.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  %99 = ptrtoint ptr %arrayidx.i109.lcssa.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store ptr null, ptr %arrayidx.i109.lcssa.i, align 4
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.then26.i, %gem_ptp_do_txstamp.exit.i.if.end28.i_crit_edge, %land.lhs.true.i.if.end28.i_crit_edge, %if.then16.i.if.end28.i_crit_edge
  %100 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %dev.i, align 4
  %tx_packets.i = getelementptr inbounds %struct.net_device, ptr %101, i32 0, i32 36, i32 1
  %102 = ptrtoint ptr %tx_packets.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %tx_packets.i, align 4
  %inc.i = add i32 %103, 1
  store i32 %inc.i, ptr %tx_packets.i, align 4
  %104 = ptrtoint ptr %tx_packets31.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %tx_packets31.i, align 4
  %inc32.i = add i32 %105, 1
  store i32 %inc32.i, ptr %tx_packets31.i, align 4
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %.lcssa.i, i32 0, i32 6
  %106 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %len.i, align 4
  %108 = load ptr, ptr %dev.i, align 4
  %tx_bytes.i = getelementptr inbounds %struct.net_device, ptr %108, i32 0, i32 36, i32 3
  %109 = ptrtoint ptr %tx_bytes.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %tx_bytes.i, align 4
  %add.i = add i32 %110, %107
  store i32 %add.i, ptr %tx_bytes.i, align 4
  %111 = load i32, ptr %len.i, align 4
  %112 = ptrtoint ptr %tx_bytes37.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %tx_bytes37.i, align 8
  %add38.i = add i32 %113, %111
  store i32 %add38.i, ptr %tx_bytes37.i, align 8
  %mapping.i.i = getelementptr %struct.macb_tx_skb, ptr %.lcssa129.i, i32 %and.i.i108.lcssa.i, i32 1
  %114 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %mapping.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %115)
  %tobool.not.i.i = icmp eq i32 %115, 0
  br i1 %tobool.not.i.i, label %if.end28.i.if.end9.i.i_crit_edge, label %if.then.i.i

if.end28.i.if.end9.i.i_crit_edge:                 ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i.i

if.then.i.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  %116 = ptrtoint ptr %pdev4.i112.i to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %pdev4.i112.i, align 4
  %dev5.i.i = getelementptr inbounds %struct.platform_device, ptr %117, i32 0, i32 3
  %size7.i.i = getelementptr %struct.macb_tx_skb, ptr %.lcssa129.i, i32 %and.i.i108.lcssa.i, i32 2
  %118 = ptrtoint ptr %size7.i.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %size7.i.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i.i, i32 noundef %115, i32 noundef %119, i32 noundef 1, i32 noundef 0) #21
  %120 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 0, ptr %mapping.i.i, align 4
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.then.i.i, %if.end28.i.if.end9.i.i_crit_edge
  %121 = ptrtoint ptr %arrayidx.i109.lcssa.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %arrayidx.i109.lcssa.i, align 4
  %tobool10.not.i.i = icmp eq ptr %122, null
  br i1 %tobool10.not.i.i, label %if.end9.i.i.for.inc47.i_crit_edge, label %if.then11.i.i

if.end9.i.i.for.inc47.i_crit_edge:                ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc47.i

if.then11.i.i:                                    ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %122, i32 noundef 1) #21
  %123 = ptrtoint ptr %arrayidx.i109.lcssa.i to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr null, ptr %arrayidx.i109.lcssa.i, align 4
  br label %for.inc47.i

for.inc.critedge.i:                               ; preds = %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge, %for.cond12.preheader.i.for.inc.critedge.i_crit_edge
  %arrayidx.i109137.i = phi ptr [ %arrayidx.i109.i, %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge ], [ %arrayidx.i109133.i, %for.cond12.preheader.i.for.inc.critedge.i_crit_edge ]
  %and.i.i108136.i = phi i32 [ %and.i.i108.i, %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge ], [ %and.i.i108132.i, %for.cond12.preheader.i.for.inc.critedge.i_crit_edge ]
  %124 = phi ptr [ %136, %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge ], [ %85, %for.cond12.preheader.i.for.inc.critedge.i_crit_edge ]
  %tail.1135.i = phi i32 [ %inc43.i, %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge ], [ %tail.0144.i, %for.cond12.preheader.i.for.inc.critedge.i_crit_edge ]
  %mapping.i110.i = getelementptr %struct.macb_tx_skb, ptr %124, i32 %and.i.i108136.i, i32 1
  %125 = ptrtoint ptr %mapping.i110.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %mapping.i110.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %126)
  %tobool.not.i111.i = icmp eq i32 %126, 0
  br i1 %tobool.not.i111.i, label %for.inc.critedge.i.if.end9.i117.i_crit_edge, label %if.then.i115.i

for.inc.critedge.i.if.end9.i117.i_crit_edge:      ; preds = %for.inc.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i117.i

if.then.i115.i:                                   ; preds = %for.inc.critedge.i
  call void @__sanitizer_cov_trace_pc() #23
  %127 = ptrtoint ptr %pdev4.i112.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load ptr, ptr %pdev4.i112.i, align 4
  %dev5.i113.i = getelementptr inbounds %struct.platform_device, ptr %128, i32 0, i32 3
  %size7.i114.i = getelementptr %struct.macb_tx_skb, ptr %124, i32 %and.i.i108136.i, i32 2
  %129 = ptrtoint ptr %size7.i114.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load i32, ptr %size7.i114.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i113.i, i32 noundef %126, i32 noundef %130, i32 noundef 1, i32 noundef 0) #21
  %131 = ptrtoint ptr %mapping.i110.i to i32
  call void @__asan_store4_noabort(i32 %131)
  store i32 0, ptr %mapping.i110.i, align 4
  br label %if.end9.i117.i

if.end9.i117.i:                                   ; preds = %if.then.i115.i, %for.inc.critedge.i.if.end9.i117.i_crit_edge
  %132 = ptrtoint ptr %arrayidx.i109137.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %arrayidx.i109137.i, align 4
  %tobool10.not.i116.i = icmp eq ptr %133, null
  br i1 %tobool10.not.i116.i, label %if.end9.i117.i.macb_tx_unmap.exit119.i_crit_edge, label %if.then11.i118.i

if.end9.i117.i.macb_tx_unmap.exit119.i_crit_edge: ; preds = %if.end9.i117.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_unmap.exit119.i

if.then11.i118.i:                                 ; preds = %if.end9.i117.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %133, i32 noundef 1) #21
  %134 = ptrtoint ptr %arrayidx.i109137.i to i32
  call void @__asan_store4_noabort(i32 %134)
  store ptr null, ptr %arrayidx.i109137.i, align 4
  br label %macb_tx_unmap.exit119.i

macb_tx_unmap.exit119.i:                          ; preds = %if.then11.i118.i, %if.end9.i117.i.macb_tx_unmap.exit119.i_crit_edge
  %inc43.i = add i32 %tail.1135.i, 1
  %135 = ptrtoint ptr %tx_skb.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %tx_skb.i.i, align 8
  %137 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %dev_id, align 8
  %tx_ring_size.i.i106.i = getelementptr inbounds %struct.macb, ptr %138, i32 0, i32 6
  %139 = ptrtoint ptr %tx_ring_size.i.i106.i to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %tx_ring_size.i.i106.i, align 8
  %sub.i.i107.i = add i32 %140, -1
  %and.i.i108.i = and i32 %sub.i.i107.i, %inc43.i
  %arrayidx.i109.i = getelementptr %struct.macb_tx_skb, ptr %136, i32 %and.i.i108.i
  %141 = ptrtoint ptr %arrayidx.i109.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %arrayidx.i109.i, align 4
  %tobool15.not.i = icmp eq ptr %142, null
  br i1 %tobool15.not.i, label %macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge, label %macb_tx_unmap.exit119.i.if.then16.i_crit_edge

macb_tx_unmap.exit119.i.if.then16.i_crit_edge:    ; preds = %macb_tx_unmap.exit119.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then16.i

macb_tx_unmap.exit119.i.for.inc.critedge.i_crit_edge: ; preds = %macb_tx_unmap.exit119.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.critedge.i

for.inc47.i:                                      ; preds = %if.then11.i.i, %if.end9.i.i.for.inc47.i_crit_edge
  %inc48.i = add i32 %tail.1.lcssa.i, 1
  %cmp.not.i = icmp eq i32 %inc48.i, %70
  br i1 %cmp.not.i, label %for.inc47.i.for.end49.i_crit_edge, label %for.inc47.i.for.body.i_crit_edge

for.inc47.i.for.body.i_crit_edge:                 ; preds = %for.inc47.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc47.i.for.end49.i_crit_edge:                ; preds = %for.inc47.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end49.i

for.end49.i:                                      ; preds = %for.inc47.i.for.end49.i_crit_edge, %macb_tx_desc.exit.i.for.end49.i_crit_edge, %if.end.i.for.end49.i_crit_edge
  %tail.0.lcssa.i = phi i32 [ %70, %if.end.i.for.end49.i_crit_edge ], [ %70, %for.inc47.i.for.end49.i_crit_edge ], [ %tail.0144.i, %macb_tx_desc.exit.i.for.end49.i_crit_edge ]
  %143 = ptrtoint ptr %tx_tail.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %tail.0.lcssa.i, ptr %tx_tail.i, align 8
  %dev51.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 17
  %144 = ptrtoint ptr %dev51.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %dev51.i, align 4
  %conv.i.i = and i32 %sub.ptr.div.i, 65535
  %_tx.i.i.i = getelementptr inbounds %struct.net_device, ptr %145, i32 0, i32 103
  %146 = ptrtoint ptr %_tx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %_tx.i.i.i, align 128
  %state.i.i.i = getelementptr %struct.netdev_queue, ptr %147, i32 %conv.i.i, i32 13
  %148 = ptrtoint ptr %state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load volatile i32, ptr %state.i.i.i, align 4
  %and1.i.i.i.i = and i32 %149, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i.i)
  %tobool.i.i.not.i = icmp eq i32 %and1.i.i.i.i, 0
  br i1 %tobool.i.i.not.i, label %for.end49.i.if.end79_crit_edge, label %land.lhs.true54.i

for.end49.i.if.end79_crit_edge:                   ; preds = %for.end49.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end79

land.lhs.true54.i:                                ; preds = %for.end49.i
  %150 = ptrtoint ptr %tx_head.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load i32, ptr %tx_head.i, align 4
  %sub.i = sub i32 %151, %tail.0.lcssa.i
  %tx_ring_size.i = getelementptr inbounds %struct.macb, ptr %56, i32 0, i32 6
  %152 = ptrtoint ptr %tx_ring_size.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %tx_ring_size.i, align 8
  %sub57.i = add i32 %153, -1
  %and58.i = and i32 %sub57.i, %sub.i
  %mul.i = mul i32 %153, 3
  %div105.i = lshr i32 %mul.i, 2
  call void @__sanitizer_cov_trace_cmp4(i32 %and58.i, i32 %div105.i)
  %cmp60.not.i = icmp ugt i32 %and58.i, %div105.i
  br i1 %cmp60.not.i, label %land.lhs.true54.i.if.end79_crit_edge, label %if.then62.i

land.lhs.true54.i.if.end79_crit_edge:             ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end79

if.then62.i:                                      ; preds = %land.lhs.true54.i
  call void @__sanitizer_cov_trace_pc() #23
  %arrayidx.i.i.i = getelementptr %struct.netdev_queue, ptr %147, i32 %conv.i.i
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i.i) #21
  br label %if.end79

if.end79:                                         ; preds = %if.then62.i, %land.lhs.true54.i.if.end79_crit_edge, %for.end49.i.if.end79_crit_edge, %if.end75.if.end79_crit_edge
  %and80 = and i32 %status.0234, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and80)
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %if.end79.if.end83_crit_edge, label %if.then82

if.end79.if.end83_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

if.then82:                                        ; preds = %if.end79
  %154 = ptrtoint ptr %tx_head.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %tx_head.i, align 4
  %156 = ptrtoint ptr %tx_tail.i to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %tx_tail.i, align 8
  %158 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %dev_id, align 8
  %caps.i215 = getelementptr inbounds %struct.macb, ptr %159, i32 0, i32 25
  %160 = ptrtoint ptr %caps.i215 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %caps.i215, align 4
  %and.i216 = and i32 %161, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i216)
  %tobool.not.i217 = icmp eq i32 %and.i216, 0
  br i1 %tobool.not.i217, label %if.then82.if.end.i221_crit_edge, label %if.then.i220

if.then82.if.end.i221_crit_edge:                  ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i221

if.then.i220:                                     ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel.i218 = getelementptr inbounds %struct.macb, ptr %159, i32 0, i32 3
  %162 = ptrtoint ptr %macb_reg_writel.i218 to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %macb_reg_writel.i218, align 4
  %164 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %ISR, align 8
  tail call void %163(ptr noundef %159, i32 noundef %165, i32 noundef 8) #21
  br label %if.end.i221

if.end.i221:                                      ; preds = %if.then.i220, %if.then82.if.end.i221_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %155, i32 %157)
  %cmp.i = icmp eq i32 %155, %157
  br i1 %cmp.i, label %if.end.i221.if.end83_crit_edge, label %if.end5.i

if.end.i221.if.end83_crit_edge:                   ; preds = %if.end.i221
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end83

if.end5.i:                                        ; preds = %if.end.i221
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel6.i = getelementptr inbounds %struct.macb, ptr %159, i32 0, i32 3
  %166 = ptrtoint ptr %macb_reg_writel6.i to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %macb_reg_writel6.i, align 4
  %macb_reg_readl.i222 = getelementptr inbounds %struct.macb, ptr %159, i32 0, i32 2
  %168 = ptrtoint ptr %macb_reg_readl.i222 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %macb_reg_readl.i222, align 8
  %call.i223 = tail call i32 %169(ptr noundef %159, i32 noundef 0) #21
  %or.i = or i32 %call.i223, 512
  tail call void %167(ptr noundef %159, i32 noundef 0, i32 noundef %or.i) #21
  br label %if.end83

if.end83:                                         ; preds = %if.end5.i, %if.end.i221.if.end83_crit_edge, %if.end79.if.end83_crit_edge
  %and84 = and i32 %status.0234, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %if.end83.if.end101_crit_edge, label %if.then86

if.end83.if.end101_crit_edge:                     ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end101

if.then86:                                        ; preds = %if.end83
  %170 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %macb_reg_readl, align 8
  %call88 = tail call i32 %171(ptr noundef %1, i32 noundef 0) #21
  %172 = ptrtoint ptr %macb_reg_writel89 to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %macb_reg_writel89, align 4
  %and90 = and i32 %call88, -5
  tail call void %173(ptr noundef %1, i32 noundef 0, i32 noundef %and90) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !303
  tail call void @arm_heavy_mb() #21
  %174 = ptrtoint ptr %macb_reg_writel89 to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %macb_reg_writel89, align 4
  %or = or i32 %call88, 4
  tail call void %175(ptr noundef %1, i32 noundef 0, i32 noundef %or) #21
  %176 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %caps37, align 4
  %and93 = and i32 %177, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.then86.if.end101_crit_edge, label %if.then95

if.then86.if.end101_crit_edge:                    ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end101

if.then95:                                        ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #23
  %178 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel97 = getelementptr inbounds %struct.macb, ptr %179, i32 0, i32 3
  %180 = ptrtoint ptr %macb_reg_writel97 to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %macb_reg_writel97, align 4
  %182 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %ISR, align 8
  tail call void %181(ptr noundef %179, i32 noundef %183, i32 noundef 4) #21
  br label %if.end101

if.end101:                                        ; preds = %if.then95, %if.then86.if.end101_crit_edge, %if.end83.if.end101_crit_edge
  %and102 = and i32 %status.0234, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and102)
  %tobool103.not = icmp eq i32 %and102, 0
  br i1 %tobool103.not, label %if.end101.if.end120_crit_edge, label %if.then104

if.end101.if.end120_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end120

if.then104:                                       ; preds = %if.end101
  %184 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load i32, ptr %caps37, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %185)
  %tobool.i225 = icmp slt i32 %185, 0
  %rx_overruns.rx_overruns108 = select i1 %tobool.i225, ptr %rx_overruns, ptr %rx_overruns108
  %186 = ptrtoint ptr %rx_overruns.rx_overruns108 to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %rx_overruns.rx_overruns108, align 4
  %inc109 = add i32 %187, 1
  store i32 %inc109, ptr %rx_overruns.rx_overruns108, align 4
  %and112 = and i32 %185, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and112)
  %tobool113.not = icmp eq i32 %and112, 0
  br i1 %tobool113.not, label %if.then104.if.end120_crit_edge, label %if.then114

if.then104.if.end120_crit_edge:                   ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end120

if.then114:                                       ; preds = %if.then104
  call void @__sanitizer_cov_trace_pc() #23
  %188 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel116 = getelementptr inbounds %struct.macb, ptr %189, i32 0, i32 3
  %190 = ptrtoint ptr %macb_reg_writel116 to i32
  call void @__asan_load4_noabort(i32 %190)
  %191 = load ptr, ptr %macb_reg_writel116, align 4
  %192 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %ISR, align 8
  tail call void %191(ptr noundef %189, i32 noundef %193, i32 noundef 1024) #21
  br label %if.end120

if.end120:                                        ; preds = %if.then114, %if.then104.if.end120_crit_edge, %if.end101.if.end120_crit_edge
  %and121 = and i32 %status.0234, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and121)
  %tobool122.not = icmp eq i32 %and121, 0
  br i1 %tobool122.not, label %if.end120.if.end133_crit_edge, label %if.then123

if.end120.if.end133_crit_edge:                    ; preds = %if.end120
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end133

if.then123:                                       ; preds = %if.end120
  %call.i227 = tail call i32 @_test_and_set_bit(i32 noundef 0, ptr noundef %state.i226) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i227)
  %tobool.not.i228 = icmp eq i32 %call.i227, 0
  br i1 %tobool.not.i228, label %if.then.i229, label %if.then123.tasklet_schedule.exit_crit_edge

if.then123.tasklet_schedule.exit_crit_edge:       ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #23
  br label %tasklet_schedule.exit

if.then.i229:                                     ; preds = %if.then123
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__tasklet_schedule(ptr noundef %hresp_err_tasklet) #21
  br label %tasklet_schedule.exit

tasklet_schedule.exit:                            ; preds = %if.then.i229, %if.then123.tasklet_schedule.exit_crit_edge
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %3, ptr noundef nonnull @.str.37) #24
  %194 = ptrtoint ptr %caps37 to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %caps37, align 4
  %and125 = and i32 %195, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and125)
  %tobool126.not = icmp eq i32 %and125, 0
  br i1 %tobool126.not, label %tasklet_schedule.exit.if.end133_crit_edge, label %if.then127

tasklet_schedule.exit.if.end133_crit_edge:        ; preds = %tasklet_schedule.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end133

if.then127:                                       ; preds = %tasklet_schedule.exit
  call void @__sanitizer_cov_trace_pc() #23
  %196 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel129 = getelementptr inbounds %struct.macb, ptr %197, i32 0, i32 3
  %198 = ptrtoint ptr %macb_reg_writel129 to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load ptr, ptr %macb_reg_writel129, align 4
  %200 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %200)
  %201 = load i32, ptr %ISR, align 8
  tail call void %199(ptr noundef %197, i32 noundef %201, i32 noundef 2048) #21
  br label %if.end133

if.end133:                                        ; preds = %if.then127, %tasklet_schedule.exit.if.end133_crit_edge, %if.end120.if.end133_crit_edge
  %202 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %dev_id, align 8
  %macb_reg_readl135 = getelementptr inbounds %struct.macb, ptr %203, i32 0, i32 2
  %204 = ptrtoint ptr %macb_reg_readl135 to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load ptr, ptr %macb_reg_readl135, align 8
  %206 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load i32, ptr %ISR, align 8
  %call138 = tail call i32 %205(ptr noundef %203, i32 noundef %207) #21
  %tobool8.not = icmp eq i32 %call138, 0
  br i1 %tobool8.not, label %if.end133.while.end_crit_edge, label %if.end133.while.body_crit_edge

if.end133.while.body_crit_edge:                   ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

if.end133.while.end_crit_edge:                    ; preds = %if.end133
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.end:                                        ; preds = %if.end133.while.end_crit_edge, %if.then69, %if.then60.while.end_crit_edge, %if.then22, %if.then18.while.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #21
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %while.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_tx_error_task(ptr nocapture noundef %work) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -64
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 8
  %lock = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 10
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %dev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 17
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev, align 4
  tail call void @netif_tx_stop_all_queues(ptr noundef %3) #21
  %macb_reg_writel.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_writel.i, align 4
  %macb_reg_readl.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %macb_reg_readl.i, align 8
  %call.i = tail call i32 %7(ptr noundef %1, i32 noundef 0) #21
  %or.i = or i32 %call.i, 1024
  tail call void %5(ptr noundef %1, i32 noundef 0, i32 noundef %or.i) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %8 = load volatile i32, ptr @jiffies, align 128
  %call.i.i = tail call i32 @jiffies_to_usecs(i32 noundef 1073741822) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1230, i32 %call.i.i)
  %cmp.i.i = icmp ult i32 %call.i.i, 1230
  %spec.select.i.neg11.i = select i1 %cmp.i.i, i32 -1073741822, i32 -1
  %add.neg.i = sub i32 %spec.select.i.neg11.i, %8
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i.do.body.i_crit_edge, %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %9 = load volatile i32, ptr @jiffies, align 128
  %10 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %macb_reg_readl.i, align 8
  %call3.i = tail call i32 %11(ptr noundef %1, i32 noundef 20) #21
  %and.i = and i32 %call3.i, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body.i.if.end_crit_edge, label %if.end.i

do.body.i.if.end_crit_edge:                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %do.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %12 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %12(i32 noundef 53687000) #21
  %sub.i = add i32 %add.neg.i, %9
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.end.i.do.body.i_crit_edge, label %if.then

if.end.i.do.body.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body.i

if.then:                                          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %13 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %14, ptr noundef nonnull @.str.38) #24
  br label %if.end

if.end:                                           ; preds = %if.then, %do.body.i.if.end_crit_edge
  %tx_tail = getelementptr i8, ptr %work, i32 -16
  %15 = ptrtoint ptr %tx_tail to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %tx_tail, align 8
  %tx_head = getelementptr i8, ptr %work, i32 -20
  %17 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %tx_head, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %18)
  %cmp10.not156 = icmp eq i32 %16, %18
  br i1 %cmp10.not156, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %tx_ring.i = getelementptr i8, ptr %work, i32 -12
  %tx_skb.i = getelementptr i8, ptr %work, i32 -8
  %pdev4.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %tx_packets28 = getelementptr i8, ptr %work, i32 308
  %tx_bytes34 = getelementptr i8, ptr %work, i32 312
  br label %for.body

for.body:                                         ; preds = %macb_tx_unmap.exit137.for.body_crit_edge, %for.body.lr.ph
  %tail.0157 = phi i32 [ %16, %for.body.lr.ph ], [ %inc44, %macb_tx_unmap.exit137.for.body_crit_edge ]
  %19 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %add.ptr, align 8
  %tx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %20, i32 0, i32 6
  %21 = ptrtoint ptr %tx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tx_ring_size.i.i, align 8
  %sub.i.i = add i32 %22, -1
  %and.i.i = and i32 %sub.i.i, %tail.0157
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %20, i32 0, i32 35
  %23 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %hw_dma_cap.i.i, align 8
  %25 = zext i8 %24 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.109)
  switch i8 %24, label %for.body.macb_tx_desc.exit_crit_edge [
    i8 1, label %for.body.sw.bb.i.i_crit_edge
    i8 2, label %for.body.sw.bb.i.i_crit_edge163
    i8 3, label %sw.bb1.i.i
  ]

for.body.sw.bb.i.i_crit_edge163:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.sw.bb.i.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.macb_tx_desc.exit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit

sw.bb.i.i:                                        ; preds = %for.body.sw.bb.i.i_crit_edge, %for.body.sw.bb.i.i_crit_edge163
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_tx_desc.exit

sw.bb1.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_tx_desc.exit

macb_tx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %for.body.macb_tx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %for.body.macb_tx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %26 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %tx_ring.i, align 4
  %ctrl13 = getelementptr %struct.macb_dma_desc, ptr %27, i32 %desc_idx.addr.0.i.i, i32 1
  %28 = ptrtoint ptr %ctrl13 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ctrl13, align 4
  %30 = ptrtoint ptr %tx_skb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %tx_skb.i, align 8
  %arrayidx.i121 = getelementptr %struct.macb_tx_skb, ptr %31, i32 %and.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %tobool16.not = icmp sgt i32 %29, -1
  br i1 %tobool16.not, label %if.else, label %while.cond.preheader

while.cond.preheader:                             ; preds = %macb_tx_desc.exit
  %32 = ptrtoint ptr %arrayidx.i121 to i32
  call void @__asan_load4_noabort(i32 %32)
  %skb.0150 = load ptr, ptr %arrayidx.i121, align 4
  %tobool18.not151 = icmp eq ptr %skb.0150, null
  br i1 %tobool18.not151, label %while.cond.preheader.while.body_crit_edge, label %while.cond.preheader.while.end_crit_edge

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.body:                                       ; preds = %macb_tx_unmap.exit.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %tx_skb.0153 = phi ptr [ %arrayidx.i127, %macb_tx_unmap.exit.while.body_crit_edge ], [ %arrayidx.i121, %while.cond.preheader.while.body_crit_edge ]
  %tail.1152 = phi i32 [ %inc, %macb_tx_unmap.exit.while.body_crit_edge ], [ %tail.0157, %while.cond.preheader.while.body_crit_edge ]
  %mapping.i = getelementptr inbounds %struct.macb_tx_skb, ptr %tx_skb.0153, i32 0, i32 1
  %33 = ptrtoint ptr %mapping.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mapping.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.not.i122 = icmp eq i32 %34, 0
  br i1 %tobool.not.i122, label %while.body.if.end9.i_crit_edge, label %if.then.i

while.body.if.end9.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i

if.then.i:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %pdev4.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pdev4.i, align 4
  %dev5.i = getelementptr inbounds %struct.platform_device, ptr %36, i32 0, i32 3
  %size7.i = getelementptr inbounds %struct.macb_tx_skb, ptr %tx_skb.0153, i32 0, i32 2
  %37 = ptrtoint ptr %size7.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %size7.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i, i32 noundef %34, i32 noundef %38, i32 noundef 1, i32 noundef 0) #21
  %39 = ptrtoint ptr %mapping.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %mapping.i, align 4
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then.i, %while.body.if.end9.i_crit_edge
  %40 = ptrtoint ptr %tx_skb.0153 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tx_skb.0153, align 4
  %tobool10.not.i = icmp eq ptr %41, null
  br i1 %tobool10.not.i, label %if.end9.i.macb_tx_unmap.exit_crit_edge, label %if.then11.i

if.end9.i.macb_tx_unmap.exit_crit_edge:           ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_unmap.exit

if.then11.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %41, i32 noundef 1) #21
  %42 = ptrtoint ptr %tx_skb.0153 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr null, ptr %tx_skb.0153, align 4
  br label %macb_tx_unmap.exit

macb_tx_unmap.exit:                               ; preds = %if.then11.i, %if.end9.i.macb_tx_unmap.exit_crit_edge
  %inc = add i32 %tail.1152, 1
  %43 = ptrtoint ptr %tx_skb.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tx_skb.i, align 8
  %45 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %add.ptr, align 8
  %tx_ring_size.i.i124 = getelementptr inbounds %struct.macb, ptr %46, i32 0, i32 6
  %47 = ptrtoint ptr %tx_ring_size.i.i124 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %tx_ring_size.i.i124, align 8
  %sub.i.i125 = add i32 %48, -1
  %and.i.i126 = and i32 %sub.i.i125, %inc
  %arrayidx.i127 = getelementptr %struct.macb_tx_skb, ptr %44, i32 %and.i.i126
  %49 = ptrtoint ptr %arrayidx.i127 to i32
  call void @__asan_load4_noabort(i32 %49)
  %skb.0 = load ptr, ptr %arrayidx.i127, align 4
  %tobool18.not = icmp eq ptr %skb.0, null
  br i1 %tobool18.not, label %macb_tx_unmap.exit.while.body_crit_edge, label %macb_tx_unmap.exit.while.end_crit_edge

macb_tx_unmap.exit.while.end_crit_edge:           ; preds = %macb_tx_unmap.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

macb_tx_unmap.exit.while.body_crit_edge:          ; preds = %macb_tx_unmap.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

while.end:                                        ; preds = %macb_tx_unmap.exit.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %tail.1.lcssa = phi i32 [ %tail.0157, %while.cond.preheader.while.end_crit_edge ], [ %inc, %macb_tx_unmap.exit.while.end_crit_edge ]
  %tx_skb.0.lcssa = phi ptr [ %arrayidx.i121, %while.cond.preheader.while.end_crit_edge ], [ %arrayidx.i127, %macb_tx_unmap.exit.while.end_crit_edge ]
  %skb.0.lcssa = phi ptr [ %skb.0150, %while.cond.preheader.while.end_crit_edge ], [ %skb.0, %macb_tx_unmap.exit.while.end_crit_edge ]
  %and21 = and i32 %29, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %if.then23, label %while.end.if.end43_crit_edge

while.end.if.end43_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then23:                                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #23
  %50 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dev, align 4
  %tx_packets = getelementptr inbounds %struct.net_device, ptr %51, i32 0, i32 36, i32 1
  %52 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %tx_packets, align 4
  %inc26 = add i32 %53, 1
  store i32 %inc26, ptr %tx_packets, align 4
  %54 = ptrtoint ptr %tx_packets28 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %tx_packets28, align 4
  %inc29 = add i32 %55, 1
  store i32 %inc29, ptr %tx_packets28, align 4
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb.0.lcssa, i32 0, i32 6
  %56 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %len, align 4
  %58 = load ptr, ptr %dev, align 4
  %tx_bytes = getelementptr inbounds %struct.net_device, ptr %58, i32 0, i32 36, i32 3
  %59 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %tx_bytes, align 4
  %add = add i32 %60, %57
  store i32 %add, ptr %tx_bytes, align 4
  %61 = load i32, ptr %len, align 4
  %62 = ptrtoint ptr %tx_bytes34 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %tx_bytes34, align 8
  %add35 = add i32 %63, %61
  store i32 %add35, ptr %tx_bytes34, align 8
  br label %if.end43

if.else:                                          ; preds = %macb_tx_desc.exit
  %and37 = and i32 %29, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %if.else.if.end41_crit_edge, label %if.then39

if.else.if.end41_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end41

if.then39:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %64 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %65, ptr noundef nonnull @.str.39) #24
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.else.if.end41_crit_edge
  %or = or i32 %29, -2147483648
  %66 = ptrtoint ptr %ctrl13 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %or, ptr %ctrl13, align 4
  br label %if.end43

if.end43:                                         ; preds = %if.end41, %if.then23, %while.end.if.end43_crit_edge
  %tail.2 = phi i32 [ %tail.1.lcssa, %while.end.if.end43_crit_edge ], [ %tail.1.lcssa, %if.then23 ], [ %tail.0157, %if.end41 ]
  %tx_skb.1 = phi ptr [ %tx_skb.0.lcssa, %while.end.if.end43_crit_edge ], [ %tx_skb.0.lcssa, %if.then23 ], [ %arrayidx.i121, %if.end41 ]
  %mapping.i128 = getelementptr inbounds %struct.macb_tx_skb, ptr %tx_skb.1, i32 0, i32 1
  %67 = ptrtoint ptr %mapping.i128 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %mapping.i128, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.not.i129 = icmp eq i32 %68, 0
  br i1 %tobool.not.i129, label %if.end43.if.end9.i135_crit_edge, label %if.then.i133

if.end43.if.end9.i135_crit_edge:                  ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i135

if.then.i133:                                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  %69 = ptrtoint ptr %pdev4.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %pdev4.i, align 4
  %dev5.i131 = getelementptr inbounds %struct.platform_device, ptr %70, i32 0, i32 3
  %size7.i132 = getelementptr inbounds %struct.macb_tx_skb, ptr %tx_skb.1, i32 0, i32 2
  %71 = ptrtoint ptr %size7.i132 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %size7.i132, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i131, i32 noundef %68, i32 noundef %72, i32 noundef 1, i32 noundef 0) #21
  %73 = ptrtoint ptr %mapping.i128 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 0, ptr %mapping.i128, align 4
  br label %if.end9.i135

if.end9.i135:                                     ; preds = %if.then.i133, %if.end43.if.end9.i135_crit_edge
  %74 = ptrtoint ptr %tx_skb.1 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %tx_skb.1, align 4
  %tobool10.not.i134 = icmp eq ptr %75, null
  br i1 %tobool10.not.i134, label %if.end9.i135.macb_tx_unmap.exit137_crit_edge, label %if.then11.i136

if.end9.i135.macb_tx_unmap.exit137_crit_edge:     ; preds = %if.end9.i135
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_unmap.exit137

if.then11.i136:                                   ; preds = %if.end9.i135
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %75, i32 noundef 1) #21
  %76 = ptrtoint ptr %tx_skb.1 to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr null, ptr %tx_skb.1, align 4
  br label %macb_tx_unmap.exit137

macb_tx_unmap.exit137:                            ; preds = %if.then11.i136, %if.end9.i135.macb_tx_unmap.exit137_crit_edge
  %inc44 = add i32 %tail.2, 1
  %77 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %tx_head, align 4
  %cmp10.not = icmp eq i32 %inc44, %78
  br i1 %cmp10.not, label %macb_tx_unmap.exit137.for.end_crit_edge, label %macb_tx_unmap.exit137.for.body_crit_edge

macb_tx_unmap.exit137.for.body_crit_edge:         ; preds = %macb_tx_unmap.exit137
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

macb_tx_unmap.exit137.for.end_crit_edge:          ; preds = %macb_tx_unmap.exit137
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.end:                                          ; preds = %macb_tx_unmap.exit137.for.end_crit_edge, %if.end.for.end_crit_edge
  %tx_ring.i144 = getelementptr i8, ptr %work, i32 -12
  %79 = ptrtoint ptr %tx_ring.i144 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %tx_ring.i144, align 4
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 0, ptr %80, align 4
  %ctrl46 = getelementptr inbounds %struct.macb_dma_desc, ptr %80, i32 0, i32 1
  %82 = ptrtoint ptr %ctrl46 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 -2147483648, ptr %ctrl46, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !304
  tail call void @arm_heavy_mb() #21
  %83 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %84, i32 0, i32 3
  %85 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %macb_reg_writel, align 4
  %TBQP = getelementptr i8, ptr %work, i32 -40
  %87 = ptrtoint ptr %TBQP to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %TBQP, align 8
  %tx_ring_dma = getelementptr i8, ptr %work, i32 -4
  %89 = ptrtoint ptr %tx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %tx_ring_dma, align 4
  tail call void %86(ptr noundef %84, i32 noundef %88, i32 noundef %90) #21
  %91 = ptrtoint ptr %tx_head to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 0, ptr %tx_head, align 4
  %92 = ptrtoint ptr %tx_tail to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 0, ptr %tx_tail, align 8
  %93 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %macb_reg_writel.i, align 4
  %95 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %macb_reg_readl.i, align 8
  %call56 = tail call i32 %96(ptr noundef %1, i32 noundef 20) #21
  tail call void %94(ptr noundef %1, i32 noundef 20, i32 noundef %call56) #21
  %97 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %add.ptr, align 8
  %macb_reg_writel58 = getelementptr inbounds %struct.macb, ptr %98, i32 0, i32 3
  %99 = ptrtoint ptr %macb_reg_writel58 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %macb_reg_writel58, align 4
  %IER = getelementptr i8, ptr %work, i32 -52
  %101 = ptrtoint ptr %IER to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %IER, align 4
  tail call void %100(ptr noundef %98, i32 noundef %102, i32 noundef 248) #21
  %103 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %dev, align 4
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %104, i32 0, i32 104
  %105 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %106)
  %cmp4.not.i = icmp eq i32 %106, 0
  br i1 %cmp4.not.i, label %for.end.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i

for.end.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %for.end
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %104, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %107 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %108, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  %inc.i = add nuw i32 %i.05.i, 1
  %109 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i147 = icmp ult i32 %inc.i, %110
  br i1 %cmp.i147, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_start_all_queues.exit_crit_edge

for.body.i.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i.netif_tx_start_all_queues.exit_crit_edge, %for.end.netif_tx_start_all_queues.exit_crit_edge
  %111 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %macb_reg_writel.i, align 4
  %113 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %macb_reg_readl.i, align 8
  %call63 = tail call i32 %114(ptr noundef %1, i32 noundef 0) #21
  %or64 = or i32 %call63, 512
  tail call void %112(ptr noundef %1, i32 noundef 0, i32 noundef %or64) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_alloc_rx_buffers(ptr nocapture noundef %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp28.not = icmp eq i32 %1, 0
  br i1 %cmp28.not, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %dev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %for.inc.if.end8.i.i_crit_edge, %for.body.lr.ph
  %queue.030 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.if.end8.i.i_crit_edge ]
  %q.029 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.if.end8.i.i_crit_edge ]
  %2 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_ring_size, align 4
  %mul = shl i32 %3, 2
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %mul, i32 noundef 3520) #25
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, ptr %queue.030, i32 0, i32 22
  %4 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call9.i.i, ptr %rx_skbuff, align 8
  %tobool.not = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not, label %if.end8.i.i.cleanup_crit_edge, label %do.body2

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body2:                                         ; preds = %if.end8.i.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gem_alloc_rx_buffers.__UNIQUE_ID_ddebug494, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gem_alloc_rx_buffers, %if.then7)) #21
          to label %for.inc [label %if.then7], !srcloc !299

if.then7:                                         ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  %5 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dev, align 4
  %7 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rx_ring_size, align 4
  %9 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rx_skbuff, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gem_alloc_rx_buffers.__UNIQUE_ID_ddebug494, ptr noundef %6, ptr noundef nonnull @.str.62, i32 noundef %8, ptr noundef %10) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then7, %do.body2
  %inc = add nuw i32 %q.029, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.030, i32 1
  %11 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %12
  br i1 %cmp, label %for.inc.if.end8.i.i_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

for.inc.if.end8.i.i_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8.i.i

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end8.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ -12, %if.end8.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gem_free_rx_buffers(ptr nocapture noundef %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp32.not = icmp eq i32 %1, 0
  br i1 %cmp32.not, label %entry.for.end13_crit_edge, label %for.body.lr.ph

entry.for.end13_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end13

for.body.lr.ph:                                   ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc11.for.body_crit_edge, %for.body.lr.ph
  %q.036 = phi i32 [ 0, %for.body.lr.ph ], [ %inc12, %for.inc11.for.body_crit_edge ]
  %queue.033 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc11.for.body_crit_edge ]
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, ptr %queue.033, i32 0, i32 22
  %2 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rx_skbuff, align 8
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.body.for.inc11_crit_edge, label %for.cond1.preheader

for.body.for.inc11_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc11

for.cond1.preheader:                              ; preds = %for.body
  %4 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_ring_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp229.not = icmp eq i32 %5, 0
  br i1 %cmp229.not, label %for.cond1.preheader.for.end_crit_edge, label %for.body3.lr.ph

for.cond1.preheader.for.end_crit_edge:            ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %rx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue.033, i32 0, i32 21
  br label %for.body3

for.body3:                                        ; preds = %for.inc.for.body3_crit_edge, %for.body3.lr.ph
  %i.030 = phi i32 [ 0, %for.body3.lr.ph ], [ %inc, %for.inc.for.body3_crit_edge ]
  %6 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rx_skbuff, align 8
  %arrayidx = getelementptr ptr, ptr %7, i32 %i.030
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  %tobool5.not = icmp eq ptr %9, null
  br i1 %tobool5.not, label %for.body3.for.inc_crit_edge, label %if.end7

for.body3.for.inc_crit_edge:                      ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end7:                                          ; preds = %for.body3
  %10 = ptrtoint ptr %queue.033 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %queue.033, align 8
  %rx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %11, i32 0, i32 5
  %12 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rx_ring_size.i.i, align 4
  %sub.i.i = add i32 %13, -1
  %and.i.i = and i32 %sub.i.i, %i.030
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %11, i32 0, i32 35
  %14 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %hw_dma_cap.i.i, align 8
  %16 = zext i8 %15 to i64
  call void @__sanitizer_cov_trace_switch(i64 %16, ptr @__sancov_gen_cov_switch_values.110)
  switch i8 %15, label %if.end7.macb_rx_desc.exit_crit_edge [
    i8 1, label %if.end7.sw.bb.i.i_crit_edge
    i8 2, label %if.end7.sw.bb.i.i_crit_edge37
    i8 3, label %sw.bb1.i.i
  ]

if.end7.sw.bb.i.i_crit_edge37:                    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

if.end7.sw.bb.i.i_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

if.end7.macb_rx_desc.exit_crit_edge:              ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit

sw.bb.i.i:                                        ; preds = %if.end7.sw.bb.i.i_crit_edge, %if.end7.sw.bb.i.i_crit_edge37
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_rx_desc.exit

sw.bb1.i.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_rx_desc.exit

macb_rx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %if.end7.macb_rx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %if.end7.macb_rx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %17 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %18, i32 %desc_idx.addr.0.i.i
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx.i, align 4
  %shr.i = and i32 %20, -4
  %21 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %rx_buffer_size, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev, i32 noundef %shr.i, i32 noundef %24, i32 noundef 2, i32 noundef 0) #21
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %9, i32 noundef 1) #21
  br label %for.inc

for.inc:                                          ; preds = %macb_rx_desc.exit, %for.body3.for.inc_crit_edge
  %inc = add nuw i32 %i.030, 1
  %25 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %rx_ring_size, align 4
  %cmp2 = icmp ult i32 %inc, %26
  br i1 %cmp2, label %for.inc.for.body3_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body3_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body3

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.cond1.preheader.for.end_crit_edge
  %27 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rx_skbuff, align 8
  tail call void @kfree(ptr noundef %28) #21
  %29 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %rx_skbuff, align 8
  br label %for.inc11

for.inc11:                                        ; preds = %for.end, %for.body.for.inc11_crit_edge
  %inc12 = add nuw i32 %q.036, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.033, i32 1
  %30 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc12, %31
  br i1 %cmp, label %for.inc11.for.body_crit_edge, label %for.inc11.for.end13_crit_edge

for.inc11.for.end13_crit_edge:                    ; preds = %for.inc11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end13

for.inc11.for.body_crit_edge:                     ; preds = %for.inc11
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end13:                                        ; preds = %for.inc11.for.end13_crit_edge, %entry.for.end13_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gem_init_rings(ptr nocapture noundef %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp24.not = icmp eq i32 %1, 0
  br i1 %cmp24.not, label %entry.for.end7_crit_edge, label %for.cond1.preheader.lr.ph

entry.for.end7_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end7

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %tx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 6
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.end.for.cond1.preheader_crit_edge, %for.cond1.preheader.lr.ph
  %q.028 = phi i32 [ 0, %for.cond1.preheader.lr.ph ], [ %inc6, %for.end.for.cond1.preheader_crit_edge ]
  %desc.027 = phi ptr [ null, %for.cond1.preheader.lr.ph ], [ %desc.1.lcssa, %for.end.for.cond1.preheader_crit_edge ]
  %queue.025 = phi ptr [ %queues, %for.cond1.preheader.lr.ph ], [ %incdec.ptr, %for.end.for.cond1.preheader_crit_edge ]
  %2 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %tx_ring_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp222.not = icmp eq i32 %3, 0
  br i1 %cmp222.not, label %for.cond1.preheader.for.end_crit_edge, label %for.body3.lr.ph

for.cond1.preheader.for.end_crit_edge:            ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %tx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue.025, i32 0, i32 13
  br label %for.body3

for.body3:                                        ; preds = %macb_tx_desc.exit.for.body3_crit_edge, %for.body3.lr.ph
  %i.023 = phi i32 [ 0, %for.body3.lr.ph ], [ %inc, %macb_tx_desc.exit.for.body3_crit_edge ]
  %4 = ptrtoint ptr %queue.025 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queue.025, align 8
  %tx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %tx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %tx_ring_size.i.i, align 8
  %sub.i.i = add i32 %7, -1
  %and.i.i = and i32 %sub.i.i, %i.023
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 35
  %8 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %hw_dma_cap.i.i, align 8
  %10 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.111)
  switch i8 %9, label %for.body3.macb_tx_desc.exit_crit_edge [
    i8 1, label %for.body3.sw.bb.i.i_crit_edge
    i8 2, label %for.body3.sw.bb.i.i_crit_edge29
    i8 3, label %sw.bb1.i.i
  ]

for.body3.sw.bb.i.i_crit_edge29:                  ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body3.sw.bb.i.i_crit_edge:                    ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body3.macb_tx_desc.exit_crit_edge:            ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit

sw.bb.i.i:                                        ; preds = %for.body3.sw.bb.i.i_crit_edge, %for.body3.sw.bb.i.i_crit_edge29
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_tx_desc.exit

sw.bb1.i.i:                                       ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_tx_desc.exit

macb_tx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %for.body3.macb_tx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %for.body3.macb_tx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %11 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %tx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %12, i32 %desc_idx.addr.0.i.i
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %arrayidx.i, align 4
  %ctrl = getelementptr %struct.macb_dma_desc, ptr %12, i32 %desc_idx.addr.0.i.i, i32 1
  %14 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -2147483648, ptr %ctrl, align 4
  %inc = add nuw i32 %i.023, 1
  %15 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %tx_ring_size, align 8
  %cmp2 = icmp ult i32 %inc, %16
  br i1 %cmp2, label %macb_tx_desc.exit.for.body3_crit_edge, label %macb_tx_desc.exit.for.end_crit_edge

macb_tx_desc.exit.for.end_crit_edge:              ; preds = %macb_tx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

macb_tx_desc.exit.for.body3_crit_edge:            ; preds = %macb_tx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body3

for.end:                                          ; preds = %macb_tx_desc.exit.for.end_crit_edge, %for.cond1.preheader.for.end_crit_edge
  %desc.1.lcssa = phi ptr [ %desc.027, %for.cond1.preheader.for.end_crit_edge ], [ %arrayidx.i, %macb_tx_desc.exit.for.end_crit_edge ]
  %ctrl4 = getelementptr inbounds %struct.macb_dma_desc, ptr %desc.1.lcssa, i32 0, i32 1
  %17 = ptrtoint ptr %ctrl4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ctrl4, align 4
  %or = or i32 %18, 1073741824
  store i32 %or, ptr %ctrl4, align 4
  %tx_head = getelementptr inbounds %struct.macb_queue, ptr %queue.025, i32 0, i32 11
  %19 = ptrtoint ptr %tx_head to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %tx_head, align 4
  %tx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue.025, i32 0, i32 12
  %20 = ptrtoint ptr %tx_tail to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %tx_tail, align 8
  %rx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue.025, i32 0, i32 19
  %21 = ptrtoint ptr %rx_tail to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %rx_tail, align 4
  %rx_prepared_head = getelementptr inbounds %struct.macb_queue, ptr %queue.025, i32 0, i32 20
  %22 = ptrtoint ptr %rx_prepared_head to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %rx_prepared_head, align 8
  tail call fastcc void @gem_rx_refill(ptr noundef %queue.025)
  %inc6 = add nuw i32 %q.028, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.025, i32 1
  %23 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc6, %24
  br i1 %cmp, label %for.end.for.cond1.preheader_crit_edge, label %for.end.for.end7_crit_edge

for.end.for.end7_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end7

for.end.for.cond1.preheader_crit_edge:            ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond1.preheader

for.end7:                                         ; preds = %for.end.for.end7_crit_edge, %entry.for.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_rx(ptr nocapture noundef %queue, ptr noundef %napi, i32 noundef %budget) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget)
  %cmp127 = icmp sgt i32 %budget, 0
  br i1 %cmp127, label %while.body.lr.ph, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %rx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 19
  %rx_ring_size.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 5
  %rx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 21
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 22
  %rx_frm_len_mask = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 31
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 4
  %dev41 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 17
  %stats59 = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 25
  %rx_bytes66 = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 25, i32 1
  %rx_filter.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 41, i32 2
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %count.0128 = phi i32 [ 0, %while.body.lr.ph ], [ %inc10, %cleanup.while.body_crit_edge ]
  %2 = ptrtoint ptr %rx_tail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_tail, align 4
  %4 = ptrtoint ptr %rx_ring_size.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_ring_size.i, align 4
  %sub.i = add i32 %5, -1
  %and.i = and i32 %sub.i, %3
  %6 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_ring_size.i.i, align 4
  %sub.i.i = add i32 %9, -1
  %and.i.i = and i32 %sub.i.i, %and.i
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 35
  %10 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %hw_dma_cap.i.i, align 8
  %12 = zext i8 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.112)
  switch i8 %11, label %while.body.macb_rx_desc.exit_crit_edge [
    i8 1, label %while.body.sw.bb.i.i_crit_edge
    i8 2, label %while.body.sw.bb.i.i_crit_edge134
    i8 3, label %sw.bb1.i.i
  ]

while.body.sw.bb.i.i_crit_edge134:                ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

while.body.sw.bb.i.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

while.body.macb_rx_desc.exit_crit_edge:           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit

sw.bb.i.i:                                        ; preds = %while.body.sw.bb.i.i_crit_edge, %while.body.sw.bb.i.i_crit_edge134
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_rx_desc.exit

sw.bb1.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_rx_desc.exit

macb_rx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %while.body.macb_rx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %while.body.macb_rx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %13 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !305
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i, align 4
  %and = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %shr.i = and i32 %16, -4
  br i1 %tobool.not, label %macb_rx_desc.exit.while.end_crit_edge, label %if.end

macb_rx_desc.exit.while.end_crit_edge:            ; preds = %macb_rx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

if.end:                                           ; preds = %macb_rx_desc.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !306
  %ctrl8 = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i, i32 1
  %17 = ptrtoint ptr %ctrl8 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ctrl8, align 4
  %19 = ptrtoint ptr %rx_tail to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rx_tail, align 4
  %inc = add i32 %20, 1
  store i32 %inc, ptr %rx_tail, align 4
  %inc10 = add nuw nsw i32 %count.0128, 1
  %21 = and i32 %18, 49152
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %21)
  %.not = icmp eq i32 %21, 49152
  br i1 %.not, label %if.end21, label %if.end.while.end.sink.split_crit_edge

if.end.while.end.sink.split_crit_edge:            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.sink.split

if.end21:                                         ; preds = %if.end
  %22 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rx_skbuff, align 8
  %arrayidx = getelementptr ptr, ptr %23, i32 %and.i
  %24 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx, align 4
  %tobool22.not = icmp eq ptr %25, null
  br i1 %tobool22.not, label %if.end21.while.end.sink.split_crit_edge, label %if.end35, !prof !301

if.end21.while.end.sink.split_crit_edge:          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end.sink.split

if.end35:                                         ; preds = %if.end21
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %arrayidx, align 4
  %27 = ptrtoint ptr %rx_frm_len_mask to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rx_frm_len_mask, align 8
  %and38 = and i32 %28, %18
  %call39 = tail call ptr @skb_put(ptr noundef nonnull %25, i32 noundef %and38) #21
  %29 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pdev, align 4
  %dev40 = getelementptr inbounds %struct.platform_device, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rx_buffer_size, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev40, i32 noundef %shr.i, i32 noundef %32, i32 noundef 2, i32 noundef 0) #21
  %33 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dev41, align 4
  %call42 = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %25, ptr noundef %34) #21
  %protocol = getelementptr inbounds %struct.sk_buff, ptr %25, i32 0, i32 15, i32 0, i32 18
  %35 = ptrtoint ptr %protocol to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %call42, ptr %protocol, align 8
  %36 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %dev41, align 4
  %features = getelementptr inbounds %struct.net_device, ptr %37, i32 0, i32 23
  %38 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %features, align 16
  %and44 = and i64 %39, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and44)
  %tobool45.not = icmp eq i64 %and44, 0
  br i1 %tobool45.not, label %if.end35.if.end55_crit_edge, label %land.lhs.true46

if.end35.if.end55_crit_edge:                      ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

land.lhs.true46:                                  ; preds = %if.end35
  %flags = getelementptr inbounds %struct.net_device, ptr %37, i32 0, i32 14
  %40 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags, align 8
  %and48 = and i32 %41, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool49.not = icmp ne i32 %and48, 0
  %42 = and i32 %18, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool53.not = icmp eq i32 %42, 0
  %or.cond120 = select i1 %tobool49.not, i1 true, i1 %tobool53.not
  br i1 %or.cond120, label %land.lhs.true46.if.end55_crit_edge, label %if.then54

land.lhs.true46.if.end55_crit_edge:               ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end55

if.then54:                                        ; preds = %land.lhs.true46
  call void @__sanitizer_cov_trace_pc() #23
  %ip_summed = getelementptr inbounds %struct.sk_buff, ptr %25, i32 0, i32 15
  %43 = ptrtoint ptr %ip_summed to i32
  call void @__asan_load2_noabort(i32 %43)
  %bf.load = load i16, ptr %ip_summed, align 8
  %bf.clear = and i16 %bf.load, -1537
  %bf.set = or i16 %bf.clear, 512
  store i16 %bf.set, ptr %ip_summed, align 8
  br label %if.end55

if.end55:                                         ; preds = %if.then54, %land.lhs.true46.if.end55_crit_edge, %if.end35.if.end55_crit_edge
  %44 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %dev41, align 4
  %stats57 = getelementptr inbounds %struct.net_device, ptr %45, i32 0, i32 36
  %46 = ptrtoint ptr %stats57 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %stats57, align 8
  %inc58 = add i32 %47, 1
  store i32 %inc58, ptr %stats57, align 8
  %48 = ptrtoint ptr %stats59 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %stats59, align 8
  %inc60 = add i32 %49, 1
  store i32 %inc60, ptr %stats59, align 8
  %len61 = getelementptr inbounds %struct.sk_buff, ptr %25, i32 0, i32 6
  %50 = ptrtoint ptr %len61 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %len61, align 4
  %52 = load ptr, ptr %dev41, align 4
  %rx_bytes = getelementptr inbounds %struct.net_device, ptr %52, i32 0, i32 36, i32 2
  %53 = ptrtoint ptr %rx_bytes to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rx_bytes, align 8
  %add = add i32 %54, %51
  store i32 %add, ptr %rx_bytes, align 8
  %55 = load i32, ptr %len61, align 4
  %56 = ptrtoint ptr %rx_bytes66 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %rx_bytes66, align 4
  %add67 = add i32 %57, %55
  store i32 %add67, ptr %rx_bytes66, align 4
  %58 = ptrtoint ptr %rx_filter.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rx_filter.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp.i = icmp eq i32 %59, 0
  br i1 %cmp.i, label %if.end55.cleanup_crit_edge, label %if.end.i

if.end55.cleanup_crit_edge:                       ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @gem_ptp_rxstamp(ptr noundef %1, ptr noundef nonnull %25, ptr noundef %arrayidx.i) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.end55.cleanup_crit_edge
  %call68 = tail call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %25) #21
  %exitcond.not = icmp eq i32 %inc10, %budget
  br i1 %exitcond.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.end

while.end.sink.split:                             ; preds = %if.end21.while.end.sink.split_crit_edge, %if.end.while.end.sink.split_crit_edge
  %.str.65.sink = phi ptr [ @.str.64, %if.end.while.end.sink.split_crit_edge ], [ @.str.65, %if.end21.while.end.sink.split_crit_edge ]
  %60 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dev41, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %61, ptr noundef nonnull %.str.65.sink) #24
  %62 = ptrtoint ptr %dev41 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dev41, align 4
  %rx_dropped30 = getelementptr inbounds %struct.net_device, ptr %63, i32 0, i32 36, i32 6
  %64 = ptrtoint ptr %rx_dropped30 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rx_dropped30, align 8
  %inc31 = add i32 %65, 1
  store i32 %inc31, ptr %rx_dropped30, align 8
  %rx_dropped33 = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 25, i32 2
  %66 = ptrtoint ptr %rx_dropped33 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %rx_dropped33, align 8
  %inc20 = add i32 %67, 1
  store i32 %inc20, ptr %rx_dropped33, align 8
  br label %while.end

while.end:                                        ; preds = %while.end.sink.split, %cleanup.while.end_crit_edge, %macb_rx_desc.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %count.2 = phi i32 [ 0, %entry.while.end_crit_edge ], [ %inc10, %while.end.sink.split ], [ %budget, %cleanup.while.end_crit_edge ], [ %count.0128, %macb_rx_desc.exit.while.end_crit_edge ]
  tail call fastcc void @gem_rx_refill(ptr noundef %queue)
  ret i32 %count.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_alloc_rx_buffers(ptr noundef %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %0 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rx_ring_size, align 4
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 4
  %2 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_buffer_size, align 8
  %mul = mul i32 %3, %1
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %5, i32 0, i32 3
  %rx_buffers_dma = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 18
  %call.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev, i32 noundef %mul, ptr noundef %rx_buffers_dma, i32 noundef 3264, i32 noundef 0) #21
  %rx_buffers = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 23
  %6 = ptrtoint ptr %rx_buffers to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call.i, ptr %rx_buffers, align 4
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.body2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_alloc_rx_buffers.__UNIQUE_ID_ddebug495, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_alloc_rx_buffers, %if.then7)) #21
          to label %cleanup [label %if.then7], !srcloc !299

if.then7:                                         ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #23
  %dev8 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %7 = ptrtoint ptr %dev8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dev8, align 4
  %9 = ptrtoint ptr %rx_buffers_dma to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rx_buffers_dma, align 8
  %11 = ptrtoint ptr %rx_buffers to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rx_buffers, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_alloc_rx_buffers.__UNIQUE_ID_ddebug495, ptr noundef %8, ptr noundef nonnull @.str.74, i32 noundef %mul, i32 noundef %10, ptr noundef %12) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %do.body2, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %if.then7 ], [ 0, %do.body2 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_free_rx_buffers(ptr nocapture noundef %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_buffers = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 23
  %0 = ptrtoint ptr %rx_buffers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rx_buffers, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %3, i32 0, i32 3
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %4 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_ring_size, align 4
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 4
  %6 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rx_buffer_size, align 8
  %mul = mul i32 %7, %5
  %rx_buffers_dma = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 18
  %8 = ptrtoint ptr %rx_buffers_dma to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_buffers_dma, align 8
  tail call void @dma_free_attrs(ptr noundef %dev, i32 noundef %mul, ptr noundef nonnull %1, i32 noundef %9, i32 noundef 0) #21
  %10 = ptrtoint ptr %rx_buffers to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %rx_buffers, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_init_rings(ptr nocapture noundef %bp) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %0 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queues, align 8
  %rx_ring_size.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %rx_ring_size.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_ring_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp13.not.i = icmp eq i32 %3, 0
  br i1 %cmp13.not.i, label %entry.macb_init_rx_ring.exit_crit_edge, label %for.body.lr.ph.i

entry.macb_init_rx_ring.exit_crit_edge:           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_init_rx_ring.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %rx_buffers_dma.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 18
  %4 = ptrtoint ptr %rx_buffers_dma.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_buffers_dma.i, align 8
  %rx_ring.i.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 21
  %rx_buffer_size.i = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 4
  br label %for.body.i

for.body.i:                                       ; preds = %macb_rx_desc.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.015.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %macb_rx_desc.exit.i.for.body.i_crit_edge ]
  %addr.014.i = phi i32 [ %5, %for.body.lr.ph.i ], [ %add.i, %macb_rx_desc.exit.i.for.body.i_crit_edge ]
  %6 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %queues, align 8
  %rx_ring_size.i.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %rx_ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_ring_size.i.i.i, align 4
  %sub.i.i.i = add i32 %9, -1
  %and.i.i.i = and i32 %sub.i.i.i, %i.015.i
  %hw_dma_cap.i.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 35
  %10 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %12 = zext i8 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.113)
  switch i8 %11, label %for.body.i.macb_rx_desc.exit.i_crit_edge [
    i8 1, label %for.body.i.sw.bb.i.i.i_crit_edge
    i8 2, label %for.body.i.sw.bb.i.i.i_crit_edge19
    i8 3, label %sw.bb1.i.i.i
  ]

for.body.i.sw.bb.i.i.i_crit_edge19:               ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.sw.bb.i.i.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.macb_rx_desc.exit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.i

sw.bb.i.i.i:                                      ; preds = %for.body.i.sw.bb.i.i.i_crit_edge, %for.body.i.sw.bb.i.i.i_crit_edge19
  %shl.i.i.i = shl i32 %and.i.i.i, 1
  br label %macb_rx_desc.exit.i

sw.bb1.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i = mul i32 %and.i.i.i, 3
  br label %macb_rx_desc.exit.i

macb_rx_desc.exit.i:                              ; preds = %sw.bb1.i.i.i, %sw.bb.i.i.i, %for.body.i.macb_rx_desc.exit.i_crit_edge
  %desc_idx.addr.0.i.i.i = phi i32 [ %and.i.i.i, %for.body.i.macb_rx_desc.exit.i_crit_edge ], [ %mul.i.i.i, %sw.bb1.i.i.i ], [ %shl.i.i.i, %sw.bb.i.i.i ]
  %13 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i.i
  %15 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %addr.014.i, ptr %arrayidx.i.i, align 4
  %ctrl.i = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i.i, i32 1
  %16 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %ctrl.i, align 4
  %17 = ptrtoint ptr %rx_buffer_size.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rx_buffer_size.i, align 8
  %add.i = add i32 %18, %addr.014.i
  %inc.i = add nuw i32 %i.015.i, 1
  %19 = ptrtoint ptr %rx_ring_size.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rx_ring_size.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %20
  br i1 %cmp.i, label %macb_rx_desc.exit.i.for.body.i_crit_edge, label %macb_rx_desc.exit.i.macb_init_rx_ring.exit_crit_edge

macb_rx_desc.exit.i.macb_init_rx_ring.exit_crit_edge: ; preds = %macb_rx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_init_rx_ring.exit

macb_rx_desc.exit.i.for.body.i_crit_edge:         ; preds = %macb_rx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

macb_init_rx_ring.exit:                           ; preds = %macb_rx_desc.exit.i.macb_init_rx_ring.exit_crit_edge, %entry.macb_init_rx_ring.exit_crit_edge
  %desc.0.lcssa.i = phi ptr [ null, %entry.macb_init_rx_ring.exit_crit_edge ], [ %arrayidx.i.i, %macb_rx_desc.exit.i.macb_init_rx_ring.exit_crit_edge ]
  %21 = ptrtoint ptr %desc.0.lcssa.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %desc.0.lcssa.i, align 4
  %or.i = or i32 %22, 2
  store i32 %or.i, ptr %desc.0.lcssa.i, align 4
  %rx_tail.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 19
  %23 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %rx_tail.i, align 4
  %tx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 6
  %24 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %tx_ring_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp17.not = icmp eq i32 %25, 0
  br i1 %cmp17.not, label %macb_init_rx_ring.exit.for.end_crit_edge, label %for.body.lr.ph

macb_init_rx_ring.exit.for.end_crit_edge:         ; preds = %macb_init_rx_ring.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %macb_init_rx_ring.exit
  %tx_ring.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 13
  br label %for.body

for.body:                                         ; preds = %macb_tx_desc.exit.for.body_crit_edge, %for.body.lr.ph
  %i.018 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %macb_tx_desc.exit.for.body_crit_edge ]
  %26 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queues, align 8
  %tx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %27, i32 0, i32 6
  %28 = ptrtoint ptr %tx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %tx_ring_size.i.i, align 8
  %sub.i.i = add i32 %29, -1
  %and.i.i = and i32 %sub.i.i, %i.018
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %27, i32 0, i32 35
  %30 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %hw_dma_cap.i.i, align 8
  %32 = zext i8 %31 to i64
  call void @__sanitizer_cov_trace_switch(i64 %32, ptr @__sancov_gen_cov_switch_values.114)
  switch i8 %31, label %for.body.macb_tx_desc.exit_crit_edge [
    i8 1, label %for.body.sw.bb.i.i_crit_edge
    i8 2, label %for.body.sw.bb.i.i_crit_edge20
    i8 3, label %sw.bb1.i.i
  ]

for.body.sw.bb.i.i_crit_edge20:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.sw.bb.i.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.macb_tx_desc.exit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit

sw.bb.i.i:                                        ; preds = %for.body.sw.bb.i.i_crit_edge, %for.body.sw.bb.i.i_crit_edge20
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_tx_desc.exit

sw.bb1.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_tx_desc.exit

macb_tx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %for.body.macb_tx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %for.body.macb_tx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %33 = ptrtoint ptr %tx_ring.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %tx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %34, i32 %desc_idx.addr.0.i.i
  %35 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %arrayidx.i, align 4
  %ctrl = getelementptr %struct.macb_dma_desc, ptr %34, i32 %desc_idx.addr.0.i.i, i32 1
  %36 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 -2147483648, ptr %ctrl, align 4
  %inc = add nuw i32 %i.018, 1
  %37 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tx_ring_size, align 8
  %cmp = icmp ult i32 %inc, %38
  br i1 %cmp, label %macb_tx_desc.exit.for.body_crit_edge, label %macb_tx_desc.exit.for.end_crit_edge

macb_tx_desc.exit.for.end_crit_edge:              ; preds = %macb_tx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

macb_tx_desc.exit.for.body_crit_edge:             ; preds = %macb_tx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %macb_tx_desc.exit.for.end_crit_edge, %macb_init_rx_ring.exit.for.end_crit_edge
  %desc.0.lcssa = phi ptr [ null, %macb_init_rx_ring.exit.for.end_crit_edge ], [ %arrayidx.i, %macb_tx_desc.exit.for.end_crit_edge ]
  %tx_head = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 11
  %39 = ptrtoint ptr %tx_head to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 0, ptr %tx_head, align 4
  %tx_tail = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9, i32 0, i32 12
  %40 = ptrtoint ptr %tx_tail to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 0, ptr %tx_tail, align 8
  %ctrl7 = getelementptr inbounds %struct.macb_dma_desc, ptr %desc.0.lcssa, i32 0, i32 1
  %41 = ptrtoint ptr %ctrl7 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ctrl7, align 4
  %or = or i32 %42, 1073741824
  store i32 %or, ptr %ctrl7, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_rx(ptr nocapture noundef %queue, ptr noundef %napi, i32 noundef %budget) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  %rx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 19
  %2 = ptrtoint ptr %rx_tail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_tail, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %budget)
  %cmp169 = icmp sgt i32 %budget, 0
  br i1 %cmp169, label %for.body.lr.ph, label %entry.if.end61.thread_crit_edge

entry.if.end61.thread_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61.thread

for.body.lr.ph:                                   ; preds = %entry
  %rx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 21
  %rx_buffers.i.i = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 23
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %budget.addr.0176 = phi i32 [ %budget, %for.body.lr.ph ], [ %budget.addr.4.ph, %for.inc.for.body_crit_edge ]
  %first_frag.0175 = phi i32 [ -1, %for.body.lr.ph ], [ %first_frag.4.ph, %for.inc.for.body_crit_edge ]
  %tail.0172 = phi i32 [ %3, %for.body.lr.ph ], [ %inc36, %for.inc.for.body_crit_edge ]
  %received.0171 = phi i32 [ 0, %for.body.lr.ph ], [ %received.4.ph, %for.inc.for.body_crit_edge ]
  %reset_rx_queue.0.off0170 = phi i1 [ false, %for.body.lr.ph ], [ %reset_rx_queue.3.off0.ph, %for.inc.for.body_crit_edge ]
  %4 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rx_ring_size.i.i, align 4
  %sub.i.i = add i32 %7, -1
  %and.i.i = and i32 %sub.i.i, %tail.0172
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 35
  %8 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %hw_dma_cap.i.i, align 8
  %10 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.115)
  switch i8 %9, label %for.body.macb_rx_desc.exit_crit_edge [
    i8 1, label %for.body.sw.bb.i.i_crit_edge
    i8 2, label %for.body.sw.bb.i.i_crit_edge231
    i8 3, label %sw.bb1.i.i
  ]

for.body.sw.bb.i.i_crit_edge231:                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.sw.bb.i.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.macb_rx_desc.exit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit

sw.bb.i.i:                                        ; preds = %for.body.sw.bb.i.i_crit_edge, %for.body.sw.bb.i.i_crit_edge231
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_rx_desc.exit

sw.bb1.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_rx_desc.exit

macb_rx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %for.body.macb_rx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %for.body.macb_rx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %11 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %12, i32 %desc_idx.addr.0.i.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !307
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %and = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %cleanup32, label %if.end

if.end:                                           ; preds = %macb_rx_desc.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !308
  %ctrl2 = getelementptr %struct.macb_dma_desc, ptr %12, i32 %desc_idx.addr.0.i.i, i32 1
  %15 = ptrtoint ptr %ctrl2 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ctrl2, align 4
  %and3 = and i32 %16, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.if.end9_crit_edge, label %if.then5

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first_frag.0175)
  %cmp6.not = icmp eq i32 %first_frag.0175, -1
  br i1 %cmp6.not, label %if.then5.if.end9_crit_edge, label %if.then7

if.then5.if.end9_crit_edge:                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then7:                                         ; preds = %if.then5
  call void @__sanitizer_cov_trace_cmp4(i32 %first_frag.0175, i32 %tail.0172)
  %cmp.not3.i = icmp eq i32 %first_frag.0175, %tail.0172
  br i1 %cmp.not3.i, label %if.then7.discard_partial_frame.exit_crit_edge, label %if.then7.for.body.i_crit_edge

if.then7.for.body.i_crit_edge:                    ; preds = %if.then7
  br label %for.body.i

if.then7.discard_partial_frame.exit_crit_edge:    ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %discard_partial_frame.exit

for.body.i:                                       ; preds = %macb_rx_desc.exit.i.for.body.i_crit_edge, %if.then7.for.body.i_crit_edge
  %frag.04.i = phi i32 [ %inc.i, %macb_rx_desc.exit.i.for.body.i_crit_edge ], [ %first_frag.0175, %if.then7.for.body.i_crit_edge ]
  %17 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i.i = getelementptr inbounds %struct.macb, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %rx_ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rx_ring_size.i.i.i, align 4
  %sub.i.i.i = add i32 %20, -1
  %and.i.i.i = and i32 %sub.i.i.i, %frag.04.i
  %hw_dma_cap.i.i.i = getelementptr inbounds %struct.macb, ptr %18, i32 0, i32 35
  %21 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %23 = zext i8 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.116)
  switch i8 %22, label %for.body.i.macb_rx_desc.exit.i_crit_edge [
    i8 1, label %for.body.i.sw.bb.i.i.i_crit_edge
    i8 2, label %for.body.i.sw.bb.i.i.i_crit_edge232
    i8 3, label %sw.bb1.i.i.i
  ]

for.body.i.sw.bb.i.i.i_crit_edge232:              ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.sw.bb.i.i.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

for.body.i.macb_rx_desc.exit.i_crit_edge:         ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.i

sw.bb.i.i.i:                                      ; preds = %for.body.i.sw.bb.i.i.i_crit_edge, %for.body.i.sw.bb.i.i.i_crit_edge232
  %shl.i.i.i = shl i32 %and.i.i.i, 1
  br label %macb_rx_desc.exit.i

sw.bb1.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i = mul i32 %and.i.i.i, 3
  br label %macb_rx_desc.exit.i

macb_rx_desc.exit.i:                              ; preds = %sw.bb1.i.i.i, %sw.bb.i.i.i, %for.body.i.macb_rx_desc.exit.i_crit_edge
  %desc_idx.addr.0.i.i.i = phi i32 [ %and.i.i.i, %for.body.i.macb_rx_desc.exit.i_crit_edge ], [ %mul.i.i.i, %sw.bb1.i.i.i ], [ %shl.i.i.i, %sw.bb.i.i.i ]
  %24 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i.i = getelementptr %struct.macb_dma_desc, ptr %25, i32 %desc_idx.addr.0.i.i.i
  %26 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i.i, align 4
  %and.i = and i32 %27, -2
  store i32 %and.i, ptr %arrayidx.i.i, align 4
  %inc.i = add i32 %frag.04.i, 1
  %cmp.not.i = icmp eq i32 %inc.i, %tail.0172
  br i1 %cmp.not.i, label %macb_rx_desc.exit.i.discard_partial_frame.exit_crit_edge, label %macb_rx_desc.exit.i.for.body.i_crit_edge

macb_rx_desc.exit.i.for.body.i_crit_edge:         ; preds = %macb_rx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

macb_rx_desc.exit.i.discard_partial_frame.exit_crit_edge: ; preds = %macb_rx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %discard_partial_frame.exit

discard_partial_frame.exit:                       ; preds = %macb_rx_desc.exit.i.discard_partial_frame.exit_crit_edge, %if.then7.discard_partial_frame.exit_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !309
  tail call void @arm_heavy_mb() #21
  br label %if.end9

if.end9:                                          ; preds = %discard_partial_frame.exit, %if.then5.if.end9_crit_edge, %if.end.if.end9_crit_edge
  %first_frag.1 = phi i32 [ %first_frag.0175, %if.end.if.end9_crit_edge ], [ %tail.0172, %discard_partial_frame.exit ], [ %tail.0172, %if.then5.if.end9_crit_edge ]
  %and10 = and i32 %16, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool11.not = icmp eq i32 %and10, 0
  br i1 %tobool11.not, label %if.end9.for.inc_crit_edge, label %if.then12

if.end9.for.inc_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first_frag.1)
  %cmp13 = icmp eq i32 %first_frag.1, -1
  br i1 %cmp13, label %if.then12.for.inc_crit_edge, label %if.end17, !prof !301

if.then12.for.inc_crit_edge:                      ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.end17:                                         ; preds = %if.then12
  %28 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i.i118 = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 5
  %30 = ptrtoint ptr %rx_ring_size.i.i.i118 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rx_ring_size.i.i.i118, align 4
  %sub.i.i.i119 = add i32 %31, -1
  %and.i.i.i120 = and i32 %sub.i.i.i119, %tail.0172
  %hw_dma_cap.i.i.i121 = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 35
  %32 = ptrtoint ptr %hw_dma_cap.i.i.i121 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %hw_dma_cap.i.i.i121, align 8
  %34 = zext i8 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.117)
  switch i8 %33, label %if.end17.macb_rx_desc.exit.i129_crit_edge [
    i8 1, label %if.end17.sw.bb.i.i.i123_crit_edge
    i8 2, label %if.end17.sw.bb.i.i.i123_crit_edge233
    i8 3, label %sw.bb1.i.i.i125
  ]

if.end17.sw.bb.i.i.i123_crit_edge233:             ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i123

if.end17.sw.bb.i.i.i123_crit_edge:                ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i123

if.end17.macb_rx_desc.exit.i129_crit_edge:        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.i129

sw.bb.i.i.i123:                                   ; preds = %if.end17.sw.bb.i.i.i123_crit_edge, %if.end17.sw.bb.i.i.i123_crit_edge233
  %shl.i.i.i122 = shl i32 %and.i.i.i120, 1
  br label %macb_rx_desc.exit.i129

sw.bb1.i.i.i125:                                  ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i124 = mul i32 %and.i.i.i120, 3
  br label %macb_rx_desc.exit.i129

macb_rx_desc.exit.i129:                           ; preds = %sw.bb1.i.i.i125, %sw.bb.i.i.i123, %if.end17.macb_rx_desc.exit.i129_crit_edge
  %desc_idx.addr.0.i.i.i126 = phi i32 [ %and.i.i.i120, %if.end17.macb_rx_desc.exit.i129_crit_edge ], [ %mul.i.i.i124, %sw.bb1.i.i.i125 ], [ %shl.i.i.i122, %sw.bb.i.i.i123 ]
  %35 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %rx_ring.i, align 4
  %ctrl.i = getelementptr %struct.macb_dma_desc, ptr %36, i32 %desc_idx.addr.0.i.i.i126, i32 1
  %37 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %ctrl.i, align 4
  %rx_frm_len_mask.i = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 31
  %39 = ptrtoint ptr %rx_frm_len_mask.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rx_frm_len_mask.i, align 8
  %and.i128 = and i32 %40, %38
  %dev.i = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 17
  %41 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %dev.i, align 4
  %add.i = add i32 %and.i128, 2
  %call.i.i = tail call ptr @__netdev_alloc_skb(ptr noundef %42, i32 noundef %add.i, i32 noundef 2592) #21
  %tobool.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i, label %if.then.i, label %if.end8.i

if.then.i:                                        ; preds = %macb_rx_desc.exit.i129
  %43 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %dev.i, align 4
  %rx_dropped.i = getelementptr inbounds %struct.net_device, ptr %44, i32 0, i32 36, i32 6
  %45 = ptrtoint ptr %rx_dropped.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rx_dropped.i, align 8
  %inc.i130 = add i32 %46, 1
  store i32 %inc.i130, ptr %rx_dropped.i, align 8
  br label %for.cond.i

for.cond.i:                                       ; preds = %macb_rx_desc.exit106.i.for.cond.i_crit_edge, %if.then.i
  %frag.0.i = phi i32 [ %first_frag.1, %if.then.i ], [ %inc7.i, %macb_rx_desc.exit106.i.for.cond.i_crit_edge ]
  %47 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i95.i = getelementptr inbounds %struct.macb, ptr %48, i32 0, i32 5
  %49 = ptrtoint ptr %rx_ring_size.i.i95.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rx_ring_size.i.i95.i, align 4
  %sub.i.i96.i = add i32 %50, -1
  %and.i.i97.i = and i32 %sub.i.i96.i, %frag.0.i
  %hw_dma_cap.i.i98.i = getelementptr inbounds %struct.macb, ptr %48, i32 0, i32 35
  %51 = ptrtoint ptr %hw_dma_cap.i.i98.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %hw_dma_cap.i.i98.i, align 8
  %53 = zext i8 %52 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.118)
  switch i8 %52, label %for.cond.i.macb_rx_desc.exit106.i_crit_edge [
    i8 1, label %for.cond.i.sw.bb.i.i100.i_crit_edge
    i8 2, label %for.cond.i.sw.bb.i.i100.i_crit_edge234
    i8 3, label %sw.bb1.i.i102.i
  ]

for.cond.i.sw.bb.i.i100.i_crit_edge234:           ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i100.i

for.cond.i.sw.bb.i.i100.i_crit_edge:              ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i100.i

for.cond.i.macb_rx_desc.exit106.i_crit_edge:      ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit106.i

sw.bb.i.i100.i:                                   ; preds = %for.cond.i.sw.bb.i.i100.i_crit_edge, %for.cond.i.sw.bb.i.i100.i_crit_edge234
  %shl.i.i99.i = shl i32 %and.i.i97.i, 1
  br label %macb_rx_desc.exit106.i

sw.bb1.i.i102.i:                                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i101.i = mul i32 %and.i.i97.i, 3
  br label %macb_rx_desc.exit106.i

macb_rx_desc.exit106.i:                           ; preds = %sw.bb1.i.i102.i, %sw.bb.i.i100.i, %for.cond.i.macb_rx_desc.exit106.i_crit_edge
  %desc_idx.addr.0.i.i103.i = phi i32 [ %and.i.i97.i, %for.cond.i.macb_rx_desc.exit106.i_crit_edge ], [ %mul.i.i101.i, %sw.bb1.i.i102.i ], [ %shl.i.i99.i, %sw.bb.i.i100.i ]
  %54 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i105.i = getelementptr %struct.macb_dma_desc, ptr %55, i32 %desc_idx.addr.0.i.i103.i
  %56 = ptrtoint ptr %arrayidx.i105.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.i105.i, align 4
  %and5.i = and i32 %57, -2
  store i32 %and5.i, ptr %arrayidx.i105.i, align 4
  %cmp.i = icmp eq i32 %frag.0.i, %tail.0172
  %inc7.i = add i32 %frag.0.i, 1
  br i1 %cmp.i, label %do.body.i, label %macb_rx_desc.exit106.i.for.cond.i_crit_edge

macb_rx_desc.exit106.i.for.cond.i_crit_edge:      ; preds = %macb_rx_desc.exit106.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

do.body.i:                                        ; preds = %macb_rx_desc.exit106.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !310
  tail call void @arm_heavy_mb() #21
  br label %cleanup

if.end8.i:                                        ; preds = %macb_rx_desc.exit.i129
  %call10.i = tail call ptr @skb_put(ptr noundef nonnull %call.i.i, i32 noundef %add.i) #21
  %rx_buffer_size.i = getelementptr inbounds %struct.macb, ptr %29, i32 0, i32 4
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 19
  br label %for.cond11.i

for.cond11.i:                                     ; preds = %macb_rx_desc.exit122.i.for.cond11.i_crit_edge, %if.end8.i
  %frag.1.i = phi i32 [ %first_frag.1, %if.end8.i ], [ %inc31.i, %macb_rx_desc.exit122.i.for.cond11.i_crit_edge ]
  %offset.0.i = phi i32 [ 0, %if.end8.i ], [ %add23.i, %macb_rx_desc.exit122.i.for.cond11.i_crit_edge ]
  %58 = ptrtoint ptr %rx_buffer_size.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rx_buffer_size.i, align 8
  %add12.i = add i32 %59, %offset.0.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add12.i, i32 %add.i)
  %cmp13.i = icmp ugt i32 %add12.i, %add.i
  br i1 %cmp13.i, label %if.then14.i, label %for.cond11.i.if.end20.i_crit_edge

for.cond11.i.if.end20.i_crit_edge:                ; preds = %for.cond11.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20.i

if.then14.i:                                      ; preds = %for.cond11.i
  call void @__sanitizer_cov_trace_cmp4(i32 %frag.1.i, i32 %tail.0172)
  %cmp15.not.i = icmp eq i32 %frag.1.i, %tail.0172
  br i1 %cmp15.not.i, label %if.end19.i, label %macb_rx_frame.exit, !prof !300

if.end19.i:                                       ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #23
  %sub.i = sub i32 %add.i, %offset.0.i
  br label %if.end20.i

if.end20.i:                                       ; preds = %if.end19.i, %for.cond11.i.if.end20.i_crit_edge
  %frag_len.0.i = phi i32 [ %sub.i, %if.end19.i ], [ %59, %for.cond11.i.if.end20.i_crit_edge ]
  %60 = ptrtoint ptr %rx_buffers.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %rx_buffers.i.i, align 4
  %62 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %queue, align 8
  %rx_buffer_size.i.i = getelementptr inbounds %struct.macb, ptr %63, i32 0, i32 4
  %64 = ptrtoint ptr %rx_buffer_size.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %rx_buffer_size.i.i, align 8
  %rx_ring_size.i.i107.i = getelementptr inbounds %struct.macb, ptr %63, i32 0, i32 5
  %66 = ptrtoint ptr %rx_ring_size.i.i107.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %rx_ring_size.i.i107.i, align 4
  %sub.i.i108.i = add i32 %67, -1
  %and.i.i109.i = and i32 %sub.i.i108.i, %frag.1.i
  %mul.i.i131 = mul i32 %and.i.i109.i, %65
  %add.ptr.i.i = getelementptr i8, ptr %61, i32 %mul.i.i131
  %68 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i110.i = getelementptr i8, ptr %69, i32 %offset.0.i
  %70 = call ptr @memcpy(ptr %add.ptr.i110.i, ptr %add.ptr.i.i, i32 %frag_len.0.i)
  %71 = ptrtoint ptr %rx_buffer_size.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %rx_buffer_size.i, align 8
  %add23.i = add i32 %72, %offset.0.i
  %73 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i111.i = getelementptr inbounds %struct.macb, ptr %73, i32 0, i32 5
  %74 = ptrtoint ptr %rx_ring_size.i.i111.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %rx_ring_size.i.i111.i, align 4
  %sub.i.i112.i = add i32 %75, -1
  %and.i.i113.i = and i32 %sub.i.i112.i, %frag.1.i
  %hw_dma_cap.i.i114.i = getelementptr inbounds %struct.macb, ptr %73, i32 0, i32 35
  %76 = ptrtoint ptr %hw_dma_cap.i.i114.i to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %hw_dma_cap.i.i114.i, align 8
  %78 = zext i8 %77 to i64
  call void @__sanitizer_cov_trace_switch(i64 %78, ptr @__sancov_gen_cov_switch_values.119)
  switch i8 %77, label %if.end20.i.macb_rx_desc.exit122.i_crit_edge [
    i8 1, label %if.end20.i.sw.bb.i.i116.i_crit_edge
    i8 2, label %if.end20.i.sw.bb.i.i116.i_crit_edge235
    i8 3, label %sw.bb1.i.i118.i
  ]

if.end20.i.sw.bb.i.i116.i_crit_edge235:           ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i116.i

if.end20.i.sw.bb.i.i116.i_crit_edge:              ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i116.i

if.end20.i.macb_rx_desc.exit122.i_crit_edge:      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit122.i

sw.bb.i.i116.i:                                   ; preds = %if.end20.i.sw.bb.i.i116.i_crit_edge, %if.end20.i.sw.bb.i.i116.i_crit_edge235
  %shl.i.i115.i = shl i32 %and.i.i113.i, 1
  br label %macb_rx_desc.exit122.i

sw.bb1.i.i118.i:                                  ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i117.i = mul i32 %and.i.i113.i, 3
  br label %macb_rx_desc.exit122.i

macb_rx_desc.exit122.i:                           ; preds = %sw.bb1.i.i118.i, %sw.bb.i.i116.i, %if.end20.i.macb_rx_desc.exit122.i_crit_edge
  %desc_idx.addr.0.i.i119.i = phi i32 [ %and.i.i113.i, %if.end20.i.macb_rx_desc.exit122.i_crit_edge ], [ %mul.i.i117.i, %sw.bb1.i.i118.i ], [ %shl.i.i115.i, %sw.bb.i.i116.i ]
  %79 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i121.i = getelementptr %struct.macb_dma_desc, ptr %80, i32 %desc_idx.addr.0.i.i119.i
  %81 = ptrtoint ptr %arrayidx.i121.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %arrayidx.i121.i, align 4
  %and26.i = and i32 %82, -2
  store i32 %and26.i, ptr %arrayidx.i121.i, align 4
  %cmp27.i = icmp eq i32 %frag.1.i, %tail.0172
  %inc31.i = add i32 %frag.1.i, 1
  br i1 %cmp27.i, label %do.body33.i, label %macb_rx_desc.exit122.i.for.cond11.i_crit_edge

macb_rx_desc.exit122.i.for.cond11.i_crit_edge:    ; preds = %macb_rx_desc.exit122.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond11.i

do.body33.i:                                      ; preds = %macb_rx_desc.exit122.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !311
  tail call void @arm_heavy_mb() #21
  %len1.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 6
  %83 = ptrtoint ptr %len1.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %len1.i.i, align 4
  %sub.i.i132 = add i32 %84, -2
  store i32 %sub.i.i132, ptr %len1.i.i, align 4
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 7
  %85 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i.i132, i32 %86)
  %cmp.i.i = icmp ult i32 %sub.i.i132, %86
  br i1 %cmp.i.i, label %do.body4.i.i, label %__skb_pull.exit.i, !prof !301

do.body4.i.i:                                     ; preds = %do.body33.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22include/linux/skbuff.h\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2398, 0\0A.popsection", ""() #21, !srcloc !312
  unreachable

__skb_pull.exit.i:                                ; preds = %do.body33.i
  call void @__sanitizer_cov_trace_pc() #23
  %87 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i124.i = getelementptr i8, ptr %88, i32 2
  store ptr %add.ptr.i124.i, ptr %data.i.i, align 4
  %89 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %dev.i, align 4
  %call38.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %call.i.i, ptr noundef %90) #21
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 18
  %91 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 %call38.i, ptr %protocol.i, align 8
  %92 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %dev.i, align 4
  %stats40.i = getelementptr inbounds %struct.net_device, ptr %93, i32 0, i32 36
  %94 = ptrtoint ptr %stats40.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %stats40.i, align 8
  %inc41.i = add i32 %95, 1
  store i32 %inc41.i, ptr %stats40.i, align 8
  %96 = ptrtoint ptr %len1.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %len1.i.i, align 4
  %98 = load ptr, ptr %dev.i, align 4
  %rx_bytes.i = getelementptr inbounds %struct.net_device, ptr %98, i32 0, i32 36, i32 2
  %99 = ptrtoint ptr %rx_bytes.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %rx_bytes.i, align 8
  %add45.i = add i32 %100, %97
  store i32 %add45.i, ptr %rx_bytes.i, align 8
  %call47.i = tail call i32 @napi_gro_receive(ptr noundef %napi, ptr noundef nonnull %call.i.i) #21
  br label %cleanup

macb_rx_frame.exit:                               ; preds = %if.then14.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %call.i.i, i32 noundef 1) #21
  br label %for.inc

cleanup:                                          ; preds = %__skb_pull.exit.i, %do.body.i
  %101 = xor i1 %tobool.not.i, true
  %inc = zext i1 %101 to i32
  %received.1 = add i32 %received.0171, %inc
  %dec = sext i1 %101 to i32
  %budget.addr.1 = add i32 %budget.addr.0176, %dec
  br label %for.inc

cleanup32:                                        ; preds = %macb_rx_desc.exit
  br i1 %reset_rx_queue.0.off0170, label %cleanup32.if.then44_crit_edge, label %cleanup32.if.end61_crit_edge, !prof !301

cleanup32.if.end61_crit_edge:                     ; preds = %cleanup32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

cleanup32.if.then44_crit_edge:                    ; preds = %cleanup32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then44

for.inc:                                          ; preds = %cleanup, %macb_rx_frame.exit, %if.then12.for.inc_crit_edge, %if.end9.for.inc_crit_edge
  %reset_rx_queue.3.off0.ph = phi i1 [ %reset_rx_queue.0.off0170, %if.end9.for.inc_crit_edge ], [ %reset_rx_queue.0.off0170, %cleanup ], [ true, %if.then12.for.inc_crit_edge ], [ true, %macb_rx_frame.exit ]
  %received.4.ph = phi i32 [ %received.0171, %if.end9.for.inc_crit_edge ], [ %received.1, %cleanup ], [ %received.0171, %if.then12.for.inc_crit_edge ], [ %received.0171, %macb_rx_frame.exit ]
  %first_frag.4.ph = phi i32 [ %first_frag.1, %if.end9.for.inc_crit_edge ], [ -1, %cleanup ], [ -1, %if.then12.for.inc_crit_edge ], [ -1, %macb_rx_frame.exit ]
  %budget.addr.4.ph = phi i32 [ %budget.addr.0176, %if.end9.for.inc_crit_edge ], [ %budget.addr.1, %cleanup ], [ %budget.addr.0176, %if.then12.for.inc_crit_edge ], [ %budget.addr.0176, %macb_rx_frame.exit ]
  %inc36 = add i32 %tail.0172, 1
  %cmp = icmp sgt i32 %budget.addr.4.ph, 0
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc
  br i1 %reset_rx_queue.3.off0.ph, label %for.end.if.then44_crit_edge, label %for.end.if.end61_crit_edge, !prof !301

for.end.if.end61_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61

for.end.if.then44_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then44

if.then44:                                        ; preds = %for.end.if.then44_crit_edge, %cleanup32.if.then44_crit_edge
  %received.0166 = phi i32 [ %received.0171, %cleanup32.if.then44_crit_edge ], [ %received.4.ph, %for.end.if.then44_crit_edge ]
  %dev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 17
  %102 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %103, ptr noundef nonnull @.str.75) #24
  %lock = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 10
  %call49 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %104 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %macb_reg_readl, align 8
  %call52 = tail call i32 %105(ptr noundef %1, i32 noundef 0) #21
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %106 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %macb_reg_writel, align 4
  %and53 = and i32 %call52, -5
  tail call void %107(ptr noundef %1, i32 noundef 0, i32 noundef %and53) #21
  tail call fastcc void @macb_init_rx_ring(ptr noundef %queue)
  %108 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %queue, align 8
  %macb_reg_writel55 = getelementptr inbounds %struct.macb, ptr %109, i32 0, i32 3
  %110 = ptrtoint ptr %macb_reg_writel55 to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %macb_reg_writel55, align 4
  %RBQP = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 9
  %112 = ptrtoint ptr %RBQP to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %RBQP, align 4
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 17
  %114 = ptrtoint ptr %rx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %rx_ring_dma, align 4
  tail call void %111(ptr noundef %109, i32 noundef %113, i32 noundef %115) #21
  %116 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %macb_reg_writel, align 4
  %or = or i32 %call52, 4
  tail call void %117(ptr noundef %1, i32 noundef 0, i32 noundef %or) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call49) #21
  br label %cleanup68

if.end61:                                         ; preds = %for.end.if.end61_crit_edge, %cleanup32.if.end61_crit_edge
  %received.0165 = phi i32 [ %received.0171, %cleanup32.if.end61_crit_edge ], [ %received.4.ph, %for.end.if.end61_crit_edge ]
  %tail.0161 = phi i32 [ %tail.0172, %cleanup32.if.end61_crit_edge ], [ %inc36, %for.end.if.end61_crit_edge ]
  %first_frag.0158 = phi i32 [ %first_frag.0175, %cleanup32.if.end61_crit_edge ], [ %first_frag.4.ph, %for.end.if.end61_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %first_frag.0158)
  %cmp62.not = icmp eq i32 %first_frag.0158, -1
  br i1 %cmp62.not, label %if.end61.if.end61.thread_crit_edge, label %if.end61._crit_edge

if.end61._crit_edge:                              ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #23
  br label %118

if.end61.if.end61.thread_crit_edge:               ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end61.thread

if.end61.thread:                                  ; preds = %if.end61.if.end61.thread_crit_edge, %entry.if.end61.thread_crit_edge
  %tail.0161198 = phi i32 [ %tail.0161, %if.end61.if.end61.thread_crit_edge ], [ %3, %entry.if.end61.thread_crit_edge ]
  %received.0165197 = phi i32 [ %received.0165, %if.end61.if.end61.thread_crit_edge ], [ 0, %entry.if.end61.thread_crit_edge ]
  br label %118

118:                                              ; preds = %if.end61.thread, %if.end61._crit_edge
  %received.0165196 = phi i32 [ %received.0165197, %if.end61.thread ], [ %received.0165, %if.end61._crit_edge ]
  %119 = phi i32 [ %tail.0161198, %if.end61.thread ], [ %first_frag.0158, %if.end61._crit_edge ]
  %120 = ptrtoint ptr %rx_tail to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %119, ptr %rx_tail, align 4
  br label %cleanup68

cleanup68:                                        ; preds = %118, %if.then44
  %received.0164 = phi i32 [ %received.0165196, %118 ], [ %received.0166, %if.then44 ]
  ret i32 %received.0164
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_complete_done(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @napi_schedule_prep(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__napi_schedule(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @devm_request_threaded_irq(ptr noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gem_ptp_txstamp(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_unmap_page_attrs(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_any(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_wake_queue(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__tasklet_schedule(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_tx_stop_all_queues(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @jiffies_to_usecs(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_open(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %0 = ptrtoint ptr %mtu to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mtu, align 4
  %add2 = add i32 %1, 20
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_open.__UNIQUE_ID_ddebug499, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_open, %if.then)) #21
          to label %do.end9 [label %if.then], !srcloc !299

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %dev7 = getelementptr i8, ptr %dev, i32 18220
  %2 = ptrtoint ptr %dev7 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev7, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_open.__UNIQUE_ID_ddebug499, ptr noundef %3, ptr noundef nonnull @.str.41) #21
  br label %do.end9

do.end9:                                          ; preds = %if.then, %entry
  %pdev = getelementptr i8, ptr %dev, i32 18196
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %dev10 = getelementptr inbounds %struct.platform_device, ptr %5, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev10, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %do.end9.pm_exit_crit_edge, label %if.end13

do.end9.pm_exit_crit_edge:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %pm_exit

if.end13:                                         ; preds = %do.end9
  %caps.i.i = getelementptr i8, ptr %dev, i32 18468
  %6 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i.i = icmp slt i32 %7, 0
  %rx_buffer_size1.i = getelementptr i8, ptr %dev, i32 2320
  br i1 %tobool.i.i, label %if.else.i, label %if.end13.do.body17.sink.split.i_crit_edge

if.end13.do.body17.sink.split.i_crit_edge:        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body17.sink.split.i

if.else.i:                                        ; preds = %if.end13
  %8 = ptrtoint ptr %rx_buffer_size1.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %add2, ptr %rx_buffer_size1.i, align 8
  %rem.i = and i32 %add2, 63
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem.i)
  %tobool.not.i = icmp eq i32 %rem.i, 0
  br i1 %tobool.not.i, label %if.else.i.do.body17.i_crit_edge, label %do.body4.i

if.else.i.do.body17.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body17.i

do.body4.i:                                       ; preds = %if.else.i
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug492, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_open, %if.then9.i)) #21
          to label %do.end10.i [label %if.then9.i], !srcloc !299

if.then9.i:                                       ; preds = %do.body4.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i = getelementptr i8, ptr %dev, i32 18220
  %9 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev.i, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug492, ptr noundef %10, ptr noundef nonnull @.str.44, i32 noundef 64) #21
  br label %do.end10.i

do.end10.i:                                       ; preds = %if.then9.i, %do.body4.i
  %11 = ptrtoint ptr %rx_buffer_size1.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rx_buffer_size1.i, align 8
  %add.i = add i32 %12, 63
  %div47.i = and i32 %add.i, -64
  br label %do.body17.sink.split.i

do.body17.sink.split.i:                           ; preds = %do.end10.i, %if.end13.do.body17.sink.split.i_crit_edge
  %div47.sink.i = phi i32 [ %div47.i, %do.end10.i ], [ 128, %if.end13.do.body17.sink.split.i_crit_edge ]
  %13 = ptrtoint ptr %rx_buffer_size1.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %div47.sink.i, ptr %rx_buffer_size1.i, align 8
  br label %do.body17.i

do.body17.i:                                      ; preds = %do.body17.sink.split.i, %if.else.i.do.body17.i_crit_edge
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug493, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_open, %if.then29.i)) #21
          to label %macb_init_rx_buffer_size.exit [label %if.then29.i], !srcloc !299

if.then29.i:                                      ; preds = %do.body17.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev30.i = getelementptr i8, ptr %dev, i32 18220
  %14 = ptrtoint ptr %dev30.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev30.i, align 4
  %mtu.i = getelementptr inbounds %struct.net_device, ptr %15, i32 0, i32 20
  %16 = ptrtoint ptr %mtu.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %mtu.i, align 4
  %18 = ptrtoint ptr %rx_buffer_size1.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rx_buffer_size1.i, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug493, ptr noundef %15, ptr noundef nonnull @.str.45, i32 noundef %17, i32 noundef %19) #21
  br label %macb_init_rx_buffer_size.exit

macb_init_rx_buffer_size.exit:                    ; preds = %if.then29.i, %do.body17.i
  %call14 = tail call fastcc i32 @macb_alloc_consistent(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.then16

if.then16:                                        ; preds = %macb_init_rx_buffer_size.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.42, i32 noundef %call14) #24
  br label %pm_exit

if.end17:                                         ; preds = %macb_init_rx_buffer_size.exit
  %queues = getelementptr i8, ptr %dev, i32 2344
  %num_queues = getelementptr i8, ptr %dev, i32 2332
  %20 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp1875.not = icmp eq i32 %21, 0
  br i1 %cmp1875.not, label %if.end17.for.end_crit_edge, label %if.end17.for.body_crit_edge

if.end17.for.body_crit_edge:                      ; preds = %if.end17
  br label %for.body

if.end17.for.end_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end17.for.body_crit_edge
  %q.077 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.end17.for.body_crit_edge ]
  %queue.076 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %queues, %if.end17.for.body_crit_edge ]
  %napi = getelementptr inbounds %struct.macb_queue, ptr %queue.076, i32 0, i32 24
  tail call void @napi_enable(ptr noundef %napi) #21
  %inc = add nuw i32 %q.077, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.076, i32 1
  %22 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %num_queues, align 4
  %cmp18 = icmp ult i32 %inc, %23
  br i1 %cmp18, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end17.for.end_crit_edge
  tail call fastcc void @macb_init_hw(ptr noundef %add.ptr.i)
  %call19 = tail call fastcc i32 @macb_phylink_connect(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end22, label %reset_hw

if.end22:                                         ; preds = %for.end
  %num_tx_queues.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 104
  %24 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp4.not.i = icmp eq i32 %25, 0
  br i1 %cmp4.not.i, label %if.end22.netif_tx_start_all_queues.exit_crit_edge, label %for.body.lr.ph.i

if.end22.netif_tx_start_all_queues.exit_crit_edge: ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %if.end22
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.body.i.for.body.i_crit_edge ]
  %26 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %27, i32 %i.05.i, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  %inc.i = add nuw i32 %i.05.i, 1
  %28 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i = icmp ult i32 %inc.i, %29
  br i1 %cmp.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.netif_tx_start_all_queues.exit_crit_edge

for.body.i.netif_tx_start_all_queues.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_start_all_queues.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

netif_tx_start_all_queues.exit:                   ; preds = %for.body.i.netif_tx_start_all_queues.exit_crit_edge, %if.end22.netif_tx_start_all_queues.exit_crit_edge
  %ptp_info = getelementptr i8, ptr %dev, i32 19260
  %30 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ptp_info, align 4
  %tobool23.not = icmp eq ptr %31, null
  br i1 %tobool23.not, label %netif_tx_start_all_queues.exit.cleanup_crit_edge, label %if.then24

netif_tx_start_all_queues.exit.cleanup_crit_edge: ; preds = %netif_tx_start_all_queues.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then24:                                        ; preds = %netif_tx_start_all_queues.exit
  call void @__sanitizer_cov_trace_pc() #23
  %32 = ptrtoint ptr %31 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %31, align 4
  tail call void %33(ptr noundef %dev) #21
  br label %cleanup

reset_hw:                                         ; preds = %for.end
  tail call fastcc void @macb_reset_hw(ptr noundef %add.ptr.i)
  %34 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp3178.not = icmp eq i32 %35, 0
  br i1 %cmp3178.not, label %reset_hw.for.end37_crit_edge, label %reset_hw.for.body32_crit_edge

reset_hw.for.body32_crit_edge:                    ; preds = %reset_hw
  br label %for.body32

reset_hw.for.end37_crit_edge:                     ; preds = %reset_hw
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end37

for.body32:                                       ; preds = %for.body32.for.body32_crit_edge, %reset_hw.for.body32_crit_edge
  %q.180 = phi i32 [ %inc35, %for.body32.for.body32_crit_edge ], [ 0, %reset_hw.for.body32_crit_edge ]
  %queue.179 = phi ptr [ %incdec.ptr36, %for.body32.for.body32_crit_edge ], [ %queues, %reset_hw.for.body32_crit_edge ]
  %napi33 = getelementptr inbounds %struct.macb_queue, ptr %queue.179, i32 0, i32 24
  tail call void @napi_disable(ptr noundef %napi33) #21
  %inc35 = add nuw i32 %q.180, 1
  %incdec.ptr36 = getelementptr %struct.macb_queue, ptr %queue.179, i32 1
  %36 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %num_queues, align 4
  %cmp31 = icmp ult i32 %inc35, %37
  br i1 %cmp31, label %for.body32.for.body32_crit_edge, label %for.body32.for.end37_crit_edge

for.body32.for.end37_crit_edge:                   ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end37

for.body32.for.body32_crit_edge:                  ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body32

for.end37:                                        ; preds = %for.body32.for.end37_crit_edge, %reset_hw.for.end37_crit_edge
  tail call fastcc void @macb_free_consistent(ptr noundef %add.ptr.i)
  br label %pm_exit

pm_exit:                                          ; preds = %for.end37, %if.then16, %do.end9.pm_exit_crit_edge
  %err.0 = phi i32 [ %call.i, %do.end9.pm_exit_crit_edge ], [ %call14, %if.then16 ], [ %call19, %for.end37 ]
  %38 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %pdev, align 4
  %dev39 = getelementptr inbounds %struct.platform_device, ptr %39, i32 0, i32 3
  %call.i73 = tail call i32 @__pm_runtime_idle(ptr noundef %dev39, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %pm_exit, %if.then24, %netif_tx_start_all_queues.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %pm_exit ], [ 0, %if.then24 ], [ 0, %netif_tx_start_all_queues.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_close(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  tail call void @netif_tx_stop_all_queues(ptr noundef %dev) #21
  %num_queues = getelementptr i8, ptr %dev, i32 2332
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp27.not = icmp eq i32 %1, 0
  br i1 %cmp27.not, label %entry.for.end_crit_edge, label %for.body.preheader

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.preheader:                               ; preds = %entry
  %queues = getelementptr i8, ptr %dev, i32 2344
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %q.029 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %queue.028 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %queues, %for.body.preheader ]
  %napi = getelementptr inbounds %struct.macb_queue, ptr %queue.028, i32 0, i32 24
  tail call void @napi_disable(ptr noundef %napi) #21
  %inc = add nuw i32 %q.029, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.028, i32 1
  %2 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %3
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %phylink = getelementptr i8, ptr %dev, i32 18424
  %4 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %phylink, align 8
  tail call void @phylink_stop(ptr noundef %5) #21
  %6 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phylink, align 8
  tail call void @phylink_disconnect_phy(ptr noundef %7) #21
  %lock = getelementptr i8, ptr %dev, i32 18152
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  tail call fastcc void @macb_reset_hw(ptr noundef %add.ptr.i)
  tail call void @netif_carrier_off(ptr noundef %dev) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #21
  tail call fastcc void @macb_free_consistent(ptr noundef %add.ptr.i)
  %ptp_info = getelementptr i8, ptr %dev, i32 19260
  %8 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ptp_info, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %for.end.if.end_crit_edge, label %if.then

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %ptp_remove = getelementptr inbounds %struct.macb_ptp_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %ptp_remove to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ptp_remove, align 4
  tail call void %11(ptr noundef %dev) #21
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end.if.end_crit_edge
  %pdev = getelementptr i8, ptr %dev, i32 18196
  %12 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev, align 4
  %dev10 = getelementptr inbounds %struct.platform_device, ptr %13, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_idle(ptr noundef %dev10, i32 noundef 5) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_start_xmit(ptr noundef %skb, ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %queue_mapping.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 10
  %0 = ptrtoint ptr %queue_mapping.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %queue_mapping.i, align 8
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %idxprom = zext i16 %1 to i32
  %arrayidx = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %idxprom
  %ip_summed.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15
  %2 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %ip_summed.i, align 8
  %3 = and i16 %bf.load.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %3)
  %cmp.not.i = icmp eq i16 %3, 1536
  br i1 %cmp.not.i, label %if.end.i, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %entry
  %cloned.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %4 = ptrtoint ptr %cloned.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load.i.i.i = load i8, ptr %cloned.i.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i.i)
  %tobool.not.i.i.i = icmp sgt i8 %bf.load.i.i.i, -1
  br i1 %tobool.not.i.i.i, label %if.end.i.if.end5.i_crit_edge, label %skb_header_cloned.exit.i.i

if.end.i.if.end5.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

skb_header_cloned.exit.i.i:                       ; preds = %if.end.i
  %end.i.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %5 = ptrtoint ptr %end.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %end.i.i.i.i, align 4
  %dataref1.i.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %6, i32 0, i32 10
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i.i, i32 noundef 4) #21
  %7 = ptrtoint ptr %dataref1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %dataref1.i.i.i, align 4
  %and.i.i.i = and i32 %8, 65535
  %shr.i.i.i = ashr i32 %8, 16
  %sub.i.i.i = sub nsw i32 %and.i.i.i, %shr.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i.i)
  %cmp.i.not.i.i = icmp eq i32 %sub.i.i.i, 1
  br i1 %cmp.i.not.i.i, label %skb_header_cloned.exit.i.i.if.end5.i_crit_edge, label %skb_cow_head.exit.i

skb_header_cloned.exit.i.i.if.end5.i_crit_edge:   ; preds = %skb_header_cloned.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

skb_cow_head.exit.i:                              ; preds = %skb_header_cloned.exit.i.i
  %call4.i.i.i = tail call i32 @pskb_expand_head(ptr noundef %skb, i32 noundef 0, i32 noundef 0, i32 noundef 2592) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i.i)
  %tobool.not.i = icmp eq i32 %call4.i.i.i, 0
  br i1 %tobool.not.i, label %skb_cow_head.exit.i.if.end5.i_crit_edge, label %if.then, !prof !300

skb_cow_head.exit.i.if.end5.i_crit_edge:          ; preds = %skb_cow_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5.i

if.end5.i:                                        ; preds = %skb_cow_head.exit.i.if.end5.i_crit_edge, %skb_header_cloned.exit.i.i.if.end5.i_crit_edge, %if.end.i.if.end5.i_crit_edge
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %9 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %head.i.i, align 8
  %11 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 5
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %11, align 8
  %conv.i.i = zext i16 %13 to i32
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 %conv.i.i
  %csum_offset.i = getelementptr inbounds %struct.anon.60, ptr %11, i32 0, i32 1
  %14 = ptrtoint ptr %csum_offset.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %csum_offset.i, align 2
  %conv7.i = zext i16 %15 to i32
  %add.ptr.i170 = getelementptr i8, ptr %add.ptr.i.i, i32 %conv7.i
  %16 = ptrtoint ptr %add.ptr.i170 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 0, ptr %add.ptr.i170, align 2
  br label %if.end

if.then:                                          ; preds = %skb_cow_head.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #21
  br label %cleanup

if.end:                                           ; preds = %if.end5.i, %entry.if.end_crit_edge
  %cloned.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 12
  %17 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %bf.load.i.i = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i.i)
  %tobool.not.i.i = icmp sgt i8 %bf.load.i.i, -1
  br i1 %tobool.not.i.i, label %if.end.lor.rhs.i_crit_edge, label %skb_cloned.exit.i

if.end.lor.rhs.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.rhs.i

skb_cloned.exit.i:                                ; preds = %if.end
  %end.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %18 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %end.i.i.i, align 4
  %dataref.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %19, i32 0, i32 10
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref.i.i, i32 noundef 4) #21
  %20 = ptrtoint ptr %dataref.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %dataref.i.i, align 4
  %and.i.i = and i32 %21, 65535
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and.i.i)
  %cmp.i.not.i = icmp eq i32 %and.i.i, 1
  br i1 %cmp.i.not.i, label %lor.lhs.false.i, label %skb_cloned.exit.i.lor.end.i_crit_edge

skb_cloned.exit.i.lor.end.i_crit_edge:            ; preds = %skb_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.end.i

lor.lhs.false.i:                                  ; preds = %skb_cloned.exit.i
  %22 = ptrtoint ptr %cloned.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %bf.load.i107.i.pr = load i8, ptr %cloned.i.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load.i107.i.pr)
  %tobool.not.i108.i = icmp sgt i8 %bf.load.i107.i.pr, -1
  br i1 %tobool.not.i108.i, label %lor.lhs.false.i.lor.rhs.i_crit_edge, label %skb_header_cloned.exit.i

lor.lhs.false.i.lor.rhs.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.rhs.i

skb_header_cloned.exit.i:                         ; preds = %lor.lhs.false.i
  %23 = ptrtoint ptr %end.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %end.i.i.i, align 4
  %dataref1.i.i = getelementptr inbounds %struct.skb_shared_info, ptr %24, i32 0, i32 10
  %call.i.i.i110.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %dataref1.i.i, i32 noundef 4) #21
  %25 = ptrtoint ptr %dataref1.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %dataref1.i.i, align 4
  %and.i111.i = and i32 %26, 65535
  %shr.i.i = ashr i32 %26, 16
  %sub.i.i = sub nsw i32 %and.i111.i, %shr.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sub.i.i)
  %cmp.i112.not.i = icmp eq i32 %sub.i.i, 1
  br i1 %cmp.i112.not.i, label %skb_header_cloned.exit.i.lor.rhs.i_crit_edge, label %skb_header_cloned.exit.i.lor.end.i_crit_edge

skb_header_cloned.exit.i.lor.end.i_crit_edge:     ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.end.i

skb_header_cloned.exit.i.lor.rhs.i_crit_edge:     ; preds = %skb_header_cloned.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %lor.rhs.i

lor.rhs.i:                                        ; preds = %skb_header_cloned.exit.i.lor.rhs.i_crit_edge, %lor.lhs.false.i.lor.rhs.i_crit_edge, %if.end.lor.rhs.i_crit_edge
  %data_len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %27 = ptrtoint ptr %data_len.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %data_len.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.i.i = icmp ne i32 %28, 0
  br label %lor.end.i

lor.end.i:                                        ; preds = %lor.rhs.i, %skb_header_cloned.exit.i.lor.end.i_crit_edge, %skb_cloned.exit.i.lor.end.i_crit_edge
  %29 = phi i1 [ true, %skb_header_cloned.exit.i.lor.end.i_crit_edge ], [ true, %skb_cloned.exit.i.lor.end.i_crit_edge ], [ %tobool.i.i, %lor.rhs.i ]
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %30 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %len.i, align 4
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %32 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %data.i.i, align 4
  %head.i.i172 = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %34 = ptrtoint ptr %head.i.i172 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %head.i.i172, align 8
  %sub.ptr.lhs.cast.i.i = ptrtoint ptr %33 to i32
  %sub.ptr.rhs.cast.i.i = ptrtoint ptr %35 to i32
  %sub.ptr.sub.i.i = sub i32 %sub.ptr.lhs.cast.i.i, %sub.ptr.rhs.cast.i.i
  %data_len.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %36 = ptrtoint ptr %data_len.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %data_len.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.i.not.i.i = icmp eq i32 %37, 0
  br i1 %tobool.i.not.i.i, label %cond.false.i.i, label %lor.end.i.skb_tailroom.exit.i_crit_edge

lor.end.i.skb_tailroom.exit.i_crit_edge:          ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %skb_tailroom.exit.i

cond.false.i.i:                                   ; preds = %lor.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %end.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %38 = ptrtoint ptr %end.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %end.i.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %40 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %tail.i.i, align 8
  %sub.ptr.lhs.cast.i113.i = ptrtoint ptr %39 to i32
  %sub.ptr.rhs.cast.i114.i = ptrtoint ptr %41 to i32
  %sub.ptr.sub.i115.i = sub i32 %sub.ptr.lhs.cast.i113.i, %sub.ptr.rhs.cast.i114.i
  br label %skb_tailroom.exit.i

skb_tailroom.exit.i:                              ; preds = %cond.false.i.i, %lor.end.i.skb_tailroom.exit.i_crit_edge
  %cond.i.i = phi i32 [ %sub.ptr.sub.i115.i, %cond.false.i.i ], [ 0, %lor.end.i.skb_tailroom.exit.i_crit_edge ]
  %features.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %42 = ptrtoint ptr %features.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %features.i, align 16
  %and.i = and i64 %43, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool6.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool6.not.i, label %skb_tailroom.exit.i.if.end6_crit_edge, label %lor.lhs.false7.i

skb_tailroom.exit.i.if.end6_crit_edge:            ; preds = %skb_tailroom.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

lor.lhs.false7.i:                                 ; preds = %skb_tailroom.exit.i
  %44 = ptrtoint ptr %ip_summed.i to i32
  call void @__asan_load2_noabort(i32 %44)
  %bf.load.i174 = load i16, ptr %ip_summed.i, align 8
  %45 = and i16 %bf.load.i174, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %45)
  %cmp.not.i175 = icmp eq i16 %45, 1536
  br i1 %cmp.not.i175, label %lor.lhs.false7.i.if.end6_crit_edge, label %lor.lhs.false9.i

lor.lhs.false7.i.if.end6_crit_edge:               ; preds = %lor.lhs.false7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

lor.lhs.false9.i:                                 ; preds = %lor.lhs.false7.i
  %end.i116.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %46 = ptrtoint ptr %end.i116.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %end.i116.i, align 4
  %gso_size.i = getelementptr inbounds %struct.skb_shared_info, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %gso_size.i to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %gso_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %49)
  %tobool12.not.i = icmp eq i16 %49, 0
  br i1 %tobool12.not.i, label %if.end.i176, label %lor.lhs.false9.i.if.end6_crit_edge

lor.lhs.false9.i.if.end6_crit_edge:               ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

if.end.i176:                                      ; preds = %lor.lhs.false9.i
  %notsub.i = add i32 %31, -61
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2, i32 %notsub.i)
  %cmp13.i = icmp sgt i32 %notsub.i, -2
  br i1 %cmp13.i, label %if.then15.i, label %if.else26.i

if.then15.i:                                      ; preds = %if.end.i176
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %cond.i.i)
  %cmp16.i = icmp sgt i32 %cond.i.i, 3
  br i1 %cmp16.i, label %if.then15.i.add_fcs.i_crit_edge, label %if.else.i

if.then15.i.add_fcs.i_crit_edge:                  ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_fcs.i

if.else.i:                                        ; preds = %if.then15.i
  call void @__sanitizer_cov_trace_pc() #23
  %.not.i = xor i1 %29, true
  %add.i = add i32 %cond.i.i, %sub.ptr.sub.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %add.i)
  %cmp20.i = icmp sgt i32 %add.i, 3
  %or.cond.i = select i1 %.not.i, i1 %cmp20.i, i1 false
  %spec.select.i = select i1 %or.cond.i, i32 0, i32 4
  br label %if.end28.i

if.else26.i:                                      ; preds = %if.end.i176
  call void @__sanitizer_cov_trace_pc() #23
  %add27.i = sub i32 64, %31
  %.pre.i = add i32 %cond.i.i, %sub.ptr.sub.i.i
  br label %if.end28.i

if.end28.i:                                       ; preds = %if.else26.i, %if.else.i
  %add31.pre-phi.i = phi i32 [ %add.i, %if.else.i ], [ %.pre.i, %if.else26.i ]
  %padlen.0.i = phi i32 [ %spec.select.i, %if.else.i ], [ %add27.i, %if.else26.i ]
  call void @__sanitizer_cov_trace_cmp4(i32 %add31.pre-phi.i, i32 %padlen.0.i)
  %cmp32.not.i = icmp slt i32 %add31.pre-phi.i, %padlen.0.i
  %or.cond105.i = select i1 %29, i1 true, i1 %cmp32.not.i
  br i1 %or.cond105.i, label %if.else38.i, label %if.then34.i

if.then34.i:                                      ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #23
  %50 = call ptr @memmove(ptr %35, ptr %33, i32 %31)
  %51 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %35, ptr %data.i.i, align 4
  %52 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %len.i, align 4
  %add.ptr.i.i177 = getelementptr i8, ptr %35, i32 %53
  %tail.i118.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 16
  %54 = ptrtoint ptr %tail.i118.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %add.ptr.i.i177, ptr %tail.i118.i, align 8
  br label %if.end43.i

if.else38.i:                                      ; preds = %if.end28.i
  %call39.i = tail call ptr @skb_copy_expand(ptr noundef %skb, i32 noundef 0, i32 noundef %padlen.0.i, i32 noundef 2592) #21
  %tobool40.not.i = icmp eq ptr %call39.i, null
  br i1 %tobool40.not.i, label %if.then5, label %if.end42.i

if.end42.i:                                       ; preds = %if.else38.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 0) #21
  br label %if.end43.i

if.end43.i:                                       ; preds = %if.end42.i, %if.then34.i
  %skb.addr.0 = phi ptr [ %call39.i, %if.end42.i ], [ %skb, %if.then34.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %padlen.0.i)
  %cmp44.i = icmp sgt i32 %padlen.0.i, 4
  br i1 %cmp44.i, label %if.then46.i, label %if.end43.i.add_fcs.i_crit_edge

if.end43.i.add_fcs.i_crit_edge:                   ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %add_fcs.i

if.then46.i:                                      ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #23
  %sub47.i = add nsw i32 %padlen.0.i, -4
  %call.i.i = tail call ptr @skb_put(ptr noundef %skb.addr.0, i32 noundef %sub47.i) #21
  %55 = call ptr @memset(ptr %call.i.i, i32 0, i32 %sub47.i)
  br label %add_fcs.i

add_fcs.i:                                        ; preds = %if.then46.i, %if.end43.i.add_fcs.i_crit_edge, %if.then15.i.add_fcs.i_crit_edge
  %skb.addr.1 = phi ptr [ %skb, %if.then15.i.add_fcs.i_crit_edge ], [ %skb.addr.0, %if.then46.i ], [ %skb.addr.0, %if.end43.i.add_fcs.i_crit_edge ]
  %data50.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 19
  %56 = ptrtoint ptr %data50.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %data50.i, align 4
  %len51.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.1, i32 0, i32 6
  %58 = ptrtoint ptr %len51.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %len51.i, align 4
  %call52.i = tail call i32 @crc32_le(i32 noundef -1, ptr noundef %57, i32 noundef %59) #26
  %neg.i = xor i32 %call52.i, -1
  %conv54.i = trunc i32 %neg.i to i8
  %call.i119.i = tail call ptr @skb_put(ptr noundef %skb.addr.1, i32 noundef 1) #21
  %60 = ptrtoint ptr %call.i119.i to i32
  call void @__asan_store1_noabort(i32 %60)
  store i8 %conv54.i, ptr %call.i119.i, align 1
  %shr.i = lshr i32 %neg.i, 8
  %conv56.i = trunc i32 %shr.i to i8
  %call.i120.i = tail call ptr @skb_put(ptr noundef %skb.addr.1, i32 noundef 1) #21
  %61 = ptrtoint ptr %call.i120.i to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %conv56.i, ptr %call.i120.i, align 1
  %shr57.i = lshr i32 %neg.i, 16
  %conv59.i = trunc i32 %shr57.i to i8
  %call.i121.i = tail call ptr @skb_put(ptr noundef %skb.addr.1, i32 noundef 1) #21
  %62 = ptrtoint ptr %call.i121.i to i32
  call void @__asan_store1_noabort(i32 %62)
  store i8 %conv59.i, ptr %call.i121.i, align 1
  %shr60.i = lshr i32 %neg.i, 24
  %conv62.i = trunc i32 %shr60.i to i8
  %call.i122.i = tail call ptr @skb_put(ptr noundef %skb.addr.1, i32 noundef 1) #21
  %63 = ptrtoint ptr %call.i122.i to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %conv62.i, ptr %call.i122.i, align 1
  br label %if.end6

if.then5:                                         ; preds = %if.else38.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #21
  br label %cleanup

if.end6:                                          ; preds = %add_fcs.i, %lor.lhs.false9.i.if.end6_crit_edge, %lor.lhs.false7.i.if.end6_crit_edge, %skb_tailroom.exit.i.if.end6_crit_edge
  %skb.addr.2.ph = phi ptr [ %skb, %lor.lhs.false9.i.if.end6_crit_edge ], [ %skb.addr.1, %add_fcs.i ], [ %skb, %lor.lhs.false7.i.if.end6_crit_edge ], [ %skb, %skb_tailroom.exit.i.if.end6_crit_edge ]
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 17
  %64 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %end.i, align 4
  %gso_size = getelementptr inbounds %struct.skb_shared_info, ptr %65, i32 0, i32 4
  %66 = ptrtoint ptr %gso_size to i32
  call void @__asan_load2_noabort(i32 %66)
  %67 = load i16, ptr %gso_size, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %67)
  %cmp.not = icmp eq i16 %67, 0
  br i1 %cmp.not, label %if.end30.thread, label %if.then10

if.then10:                                        ; preds = %if.end6
  %head.i.i179 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 18
  %68 = ptrtoint ptr %head.i.i179 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %head.i.i179, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 15, i32 0, i32 20
  %70 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i180 = zext i16 %71 to i32
  %add.ptr.i.i181 = getelementptr i8, ptr %69, i32 %conv.i.i180
  %protocol = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i181, i32 0, i32 6
  %72 = ptrtoint ptr %protocol to i32
  call void @__asan_load1_noabort(i32 %72)
  %73 = load i8, ptr %protocol, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %73)
  %cmp13 = icmp eq i8 %73, 17
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 15, i32 0, i32 19
  %74 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i183 = zext i16 %75 to i32
  %add.ptr.i.i184 = getelementptr i8, ptr %69, i32 %conv.i.i183
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 19
  %76 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i184 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %77 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  br i1 %cmp13, label %if.then10.if.end19_crit_edge, label %if.else

if.then10.if.end19_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.else:                                          ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #23
  %doff.i.i = getelementptr inbounds %struct.tcphdr, ptr %add.ptr.i.i184, i32 0, i32 4
  %78 = ptrtoint ptr %doff.i.i to i32
  call void @__asan_load2_noabort(i32 %78)
  %bf.load.i.i193 = load i16, ptr %doff.i.i, align 4
  %79 = lshr i16 %bf.load.i.i193, 10
  %80 = and i16 %79, 60
  %mul.i.i = zext i16 %80 to i32
  %add = add i32 %sub.ptr.sub.i, %mul.i.i
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then10.if.end19_crit_edge
  %hdrlen.0 = phi i32 [ %add, %if.else ], [ %sub.ptr.sub.i, %if.then10.if.end19_crit_edge ]
  %len.i194 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 6
  %81 = ptrtoint ptr %len.i194 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %len.i194, align 4
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 7
  %83 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %data_len.i, align 8
  %sub.i = sub i32 %82, %84
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %hdrlen.0)
  %cmp21 = icmp ult i32 %sub.i, %hdrlen.0
  br i1 %cmp21, label %if.then23, label %land.lhs.true

if.then23:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #23
  %dev24 = getelementptr i8, ptr %dev, i32 18220
  %85 = ptrtoint ptr %dev24 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dev24, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %86, ptr noundef nonnull @.str.54) #24
  br label %cleanup

if.end30.thread:                                  ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %len.i195 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 6
  %87 = ptrtoint ptr %len.i195 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %len.i195, align 4
  %data_len.i196 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 7
  %89 = ptrtoint ptr %data_len.i196 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %data_len.i196, align 8
  %sub.i197 = sub i32 %88, %90
  %max_tx_length = getelementptr i8, ptr %dev, i32 18512
  %91 = ptrtoint ptr %max_tx_length to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %max_tx_length, align 8
  %93 = tail call i32 @llvm.umin.i32(i32 %sub.i197, i32 %92)
  br label %if.else43

land.lhs.true:                                    ; preds = %if.end19
  %94 = ptrtoint ptr %len.i194 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %len.i194, align 4
  %96 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %data_len.i, align 8
  %sub.i200 = sub i32 %95, %97
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i200, i32 %hdrlen.0)
  %cmp34 = icmp ugt i32 %sub.i200, %hdrlen.0
  br i1 %cmp34, label %if.then36, label %land.lhs.true.if.else43_crit_edge

land.lhs.true.if.else43_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else43

if.then36:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %max_tx_length38 = getelementptr i8, ptr %dev, i32 18512
  %98 = ptrtoint ptr %max_tx_length38 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %max_tx_length38, align 8
  %sub = xor i32 %hdrlen.0, -1
  %add39 = add i32 %sub.i200, %sub
  %sub40 = add i32 %add39, %99
  %div = udiv i32 %sub40, %99
  %add42 = add i32 %div, 1
  br label %if.end50

if.else43:                                        ; preds = %land.lhs.true.if.else43_crit_edge, %if.end30.thread
  %hdrlen.1294 = phi i32 [ %93, %if.end30.thread ], [ %hdrlen.0, %land.lhs.true.if.else43_crit_edge ]
  %len.i204 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 6
  %100 = ptrtoint ptr %len.i204 to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %len.i204, align 4
  %data_len.i205 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 7
  %102 = ptrtoint ptr %data_len.i205 to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %data_len.i205, align 8
  %max_tx_length45 = getelementptr i8, ptr %dev, i32 18512
  %104 = ptrtoint ptr %max_tx_length45 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %max_tx_length45, align 8
  %106 = xor i32 %103, -1
  %add46 = add i32 %101, %106
  %sub47 = add i32 %add46, %105
  %div49 = udiv i32 %sub47, %105
  br label %if.end50

if.end50:                                         ; preds = %if.else43, %if.then36
  %hdrlen.1293 = phi i32 [ %hdrlen.0, %if.then36 ], [ %hdrlen.1294, %if.else43 ]
  %desc_cnt.0 = phi i32 [ %add42, %if.then36 ], [ %div49, %if.else43 ]
  %nr_frags52 = getelementptr inbounds %struct.skb_shared_info, ptr %65, i32 0, i32 2
  %107 = ptrtoint ptr %nr_frags52 to i32
  call void @__asan_load1_noabort(i32 %107)
  %108 = load i8, ptr %nr_frags52, align 2
  %conv53 = zext i8 %108 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %108)
  %cmp54304.not = icmp eq i8 %108, 0
  br i1 %cmp54304.not, label %if.end50.do.body65_crit_edge, label %for.body.lr.ph

if.end50.do.body65_crit_edge:                     ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body65

for.body.lr.ph:                                   ; preds = %if.end50
  %max_tx_length59 = getelementptr i8, ptr %dev, i32 18512
  %109 = ptrtoint ptr %max_tx_length59 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %max_tx_length59, align 8
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %f.0306 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %desc_cnt.1305 = phi i32 [ %desc_cnt.0, %for.body.lr.ph ], [ %add64, %for.body.for.body_crit_edge ]
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %65, i32 0, i32 12, i32 %f.0306, i32 1
  %111 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %bv_len.i, align 4
  %add60 = add i32 %112, -1
  %sub61 = add i32 %add60, %110
  %div63 = udiv i32 %sub61, %110
  %add64 = add i32 %div63, %desc_cnt.1305
  %inc = add nuw nsw i32 %f.0306, 1
  %exitcond.not = icmp eq i32 %inc, %conv53
  br i1 %exitcond.not, label %for.body.do.body65_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.body.do.body65_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body65

do.body65:                                        ; preds = %for.body.do.body65_crit_edge, %if.end50.do.body65_crit_edge
  %desc_cnt.1.lcssa = phi i32 [ %desc_cnt.0, %if.end50.do.body65_crit_edge ], [ %add64, %for.body.do.body65_crit_edge ]
  %lock = getelementptr i8, ptr %dev, i32 18152
  %call70 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %tx_tail = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %idxprom, i32 12
  %113 = ptrtoint ptr %tx_tail to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %tx_tail, align 8
  %tx_head = getelementptr %struct.macb, ptr %add.ptr.i, i32 0, i32 9, i32 %idxprom, i32 11
  %115 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %tx_head, align 4
  %add73.neg = xor i32 %116, -1
  %sub74 = add i32 %114, %add73.neg
  %tx_ring_size = getelementptr i8, ptr %dev, i32 2328
  %117 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %tx_ring_size, align 8
  %sub75 = add i32 %118, -1
  %and = and i32 %sub75, %sub74
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %desc_cnt.1.lcssa)
  %cmp76 = icmp ult i32 %and, %desc_cnt.1.lcssa
  br i1 %cmp76, label %if.then78, label %if.end97

if.then78:                                        ; preds = %do.body65
  call void @__sanitizer_cov_trace_pc() #23
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %119 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr %struct.netdev_queue, ptr %120, i32 %idxprom, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call70) #21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_start_xmit.__UNIQUE_ID_ddebug491, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_start_xmit, %if.then88)) #21
          to label %cleanup [label %if.then88], !srcloc !299

if.then88:                                        ; preds = %if.then78
  call void @__sanitizer_cov_trace_pc() #23
  %dev89 = getelementptr i8, ptr %dev, i32 18220
  %121 = ptrtoint ptr %dev89 to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %dev89, align 4
  %123 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %tx_head, align 4
  %125 = ptrtoint ptr %tx_tail to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %tx_tail, align 8
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_start_xmit.__UNIQUE_ID_ddebug491, ptr noundef %122, ptr noundef nonnull @.str.56, i32 noundef %124, i32 noundef %126) #21
  br label %cleanup

if.end97:                                         ; preds = %do.body65
  %tx_head2.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 11
  %127 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %tx_head2.i, align 4
  %129 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %end.i, align 4
  %nr_frags3.i = getelementptr inbounds %struct.skb_shared_info, ptr %130, i32 0, i32 2
  %131 = ptrtoint ptr %nr_frags3.i to i32
  call void @__asan_load1_noabort(i32 %131)
  %132 = load i8, ptr %nr_frags3.i, align 2
  %conv.i210 = zext i8 %132 to i32
  %gso_size.i211 = getelementptr inbounds %struct.skb_shared_info, ptr %130, i32 0, i32 4
  %133 = ptrtoint ptr %gso_size.i211 to i32
  call void @__asan_load2_noabort(i32 %133)
  %134 = load i16, ptr %gso_size.i211, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %134)
  %cmp.not.i212 = icmp eq i16 %134, 0
  br i1 %cmp.not.i212, label %if.end97.if.end12.i_crit_edge, label %if.then.i

if.end97.if.end12.i_crit_edge:                    ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12.i

if.then.i:                                        ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #23
  %head.i.i.i213 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 18
  %135 = ptrtoint ptr %head.i.i.i213 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %head.i.i.i213, align 8
  %network_header.i.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 15, i32 0, i32 20
  %137 = ptrtoint ptr %network_header.i.i.i to i32
  call void @__asan_load2_noabort(i32 %137)
  %138 = load i16, ptr %network_header.i.i.i, align 4
  %conv.i.i.i214 = zext i16 %138 to i32
  %add.ptr.i.i.i215 = getelementptr i8, ptr %136, i32 %conv.i.i.i214
  %protocol.i = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i.i215, i32 0, i32 6
  %139 = ptrtoint ptr %protocol.i to i32
  call void @__asan_load1_noabort(i32 %139)
  %140 = load i8, ptr %protocol.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %140)
  %cmp9.i = icmp eq i8 %140, 17
  %.280.i = select i1 %cmp9.i, i32 131072, i32 262144
  br label %if.end12.i

if.end12.i:                                       ; preds = %if.then.i, %if.end97.if.end12.i_crit_edge
  %cmp80.i = phi i1 [ false, %if.end97.if.end12.i_crit_edge ], [ %cmp9.i, %if.then.i ]
  %lso_ctrl.0.i = phi i32 [ 0, %if.end97.if.end12.i_crit_edge ], [ %.280.i, %if.then.i ]
  %len.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 6
  %141 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %len.i.i, align 4
  %data_len.i.i216 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 7
  %143 = ptrtoint ptr %data_len.i.i216 to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %data_len.i.i216, align 8
  %sub.i.i217 = sub i32 %142, %144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i217)
  %tobool.not336.i = icmp eq i32 %sub.i.i217, 0
  br i1 %tobool.not336.i, label %if.end12.i.for.cond.preheader.i_crit_edge, label %while.body.lr.ph.i

if.end12.i.for.cond.preheader.i_crit_edge:        ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader.i

while.body.lr.ph.i:                               ; preds = %if.end12.i
  %tx_skb15.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 14
  %pdev.i = getelementptr i8, ptr %dev, i32 18196
  %data.i218 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 19
  %max_tx_length.i = getelementptr i8, ptr %dev, i32 18512
  br label %while.body.i

for.cond.preheader.i:                             ; preds = %if.end22.i.for.cond.preheader.i_crit_edge, %if.end12.i.for.cond.preheader.i_crit_edge
  %tx_head.0.lcssa.i = phi i32 [ %128, %if.end12.i.for.cond.preheader.i_crit_edge ], [ %inc26.i, %if.end22.i.for.cond.preheader.i_crit_edge ]
  %tx_skb.0.lcssa.i = phi ptr [ null, %if.end12.i.for.cond.preheader.i_crit_edge ], [ %arrayidx.i, %if.end22.i.for.cond.preheader.i_crit_edge ]
  %count.0.lcssa.i = phi i32 [ 0, %if.end12.i.for.cond.preheader.i_crit_edge ], [ %inc.i, %if.end22.i.for.cond.preheader.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %132)
  %cmp29353.not.i = icmp eq i8 %132, 0
  br i1 %cmp29353.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.body.lr.ph.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %for.cond.preheader.i
  %max_tx_length37.i = getelementptr i8, ptr %dev, i32 18512
  %tx_skb46.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 14
  %pdev48.i = getelementptr i8, ptr %dev, i32 18196
  br label %for.body.i

while.body.i:                                     ; preds = %if.end22.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %count.0342.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %inc.i, %if.end22.i.while.body.i_crit_edge ]
  %size.0340.i = phi i32 [ %hdrlen.1293, %while.body.lr.ph.i ], [ %167, %if.end22.i.while.body.i_crit_edge ]
  %offset.0339.i = phi i32 [ 0, %while.body.lr.ph.i ], [ %add.i226, %if.end22.i.while.body.i_crit_edge ]
  %tx_head.0338.i = phi i32 [ %128, %while.body.lr.ph.i ], [ %inc26.i, %if.end22.i.while.body.i_crit_edge ]
  %len.0337.i = phi i32 [ %sub.i.i217, %while.body.lr.ph.i ], [ %sub.i225, %if.end22.i.while.body.i_crit_edge ]
  %145 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load i32, ptr %tx_ring_size, align 8
  %sub.i284.i = add i32 %146, -1
  %and.i.i219 = and i32 %sub.i284.i, %tx_head.0338.i
  %147 = ptrtoint ptr %tx_skb15.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %tx_skb15.i, align 8
  %arrayidx.i = getelementptr %struct.macb_tx_skb, ptr %148, i32 %and.i.i219
  %149 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.platform_device, ptr %150, i32 0, i32 3
  %151 = ptrtoint ptr %data.i218 to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %data.i218, align 4
  %add.ptr.i220 = getelementptr i8, ptr %152, i32 %offset.0339.i
  %call.i.i221 = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %add.ptr.i220) #21
  br i1 %call.i.i221, label %land.rhs.i.i, label %if.end39.i.i

land.rhs.i.i:                                     ; preds = %while.body.i
  %.b1.i.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i.i, label %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge, label %if.then.i.i, !prof !300

land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_map_single_attrs.exit.i

if.then.i.i:                                      ; preds = %land.rhs.i.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i.i = tail call ptr @dev_driver_string(ptr noundef %dev.i) #21
  %init_name.i.i.i = getelementptr inbounds %struct.platform_device, ptr %150, i32 0, i32 3, i32 3
  %153 = ptrtoint ptr %init_name.i.i.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load ptr, ptr %init_name.i.i.i, align 8
  %tobool.not.i.i.i222 = icmp eq ptr %154, null
  br i1 %tobool.not.i.i.i222, label %if.end.i.i.i, label %if.then.i.i.dev_name.exit.i.i_crit_edge

if.then.i.i.dev_name.exit.i.i_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %155 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %dev.i, align 4
  br label %dev_name.exit.i.i

dev_name.exit.i.i:                                ; preds = %if.end.i.i.i, %if.then.i.i.dev_name.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %156, %if.end.i.i.i ], [ %154, %if.then.i.i.dev_name.exit.i.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.60, ptr noundef %call16.i.i, ptr noundef %retval.0.i.i.i) #21
  br label %dma_map_single_attrs.exit.i

if.end39.i.i:                                     ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @debug_dma_map_single(ptr noundef %dev.i, ptr noundef %add.ptr.i220, i32 noundef %size.0340.i) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %157 = load ptr, ptr @mem_map, align 4
  %158 = ptrtoint ptr %add.ptr.i220 to i32
  %sub.i285.i = add i32 %158, 1073741824
  %shr.i.i223 = lshr i32 %sub.i285.i, 12
  %add.ptr.i.i224 = getelementptr %struct.page, ptr %157, i32 %shr.i.i223
  %and.i286.i = and i32 %158, 4095
  %call41.i.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev.i, ptr noundef %add.ptr.i.i224, i32 noundef %and.i286.i, i32 noundef %size.0340.i, i32 noundef 1, i32 noundef 0) #21
  br label %dma_map_single_attrs.exit.i

dma_map_single_attrs.exit.i:                      ; preds = %if.end39.i.i, %dev_name.exit.i.i, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %call41.i.i, %if.end39.i.i ], [ -1, %dev_name.exit.i.i ], [ -1, %land.rhs.i.i.dma_map_single_attrs.exit.i_crit_edge ]
  %159 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %pdev.i, align 4
  %dev18.i = getelementptr inbounds %struct.platform_device, ptr %160, i32 0, i32 3
  tail call void @debug_dma_mapping_error(ptr noundef %dev18.i, i32 noundef %retval.0.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i.i)
  %cmp.i.i = icmp eq i32 %retval.0.i.i, -1
  br i1 %cmp.i.i, label %dma_map_single_attrs.exit.i.dma_error.i_crit_edge, label %if.end22.i

dma_map_single_attrs.exit.i.dma_error.i_crit_edge: ; preds = %dma_map_single_attrs.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_error.i

if.end22.i:                                       ; preds = %dma_map_single_attrs.exit.i
  %161 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store ptr null, ptr %arrayidx.i, align 4
  %mapping24.i = getelementptr %struct.macb_tx_skb, ptr %148, i32 %and.i.i219, i32 1
  %162 = ptrtoint ptr %mapping24.i to i32
  call void @__asan_store4_noabort(i32 %162)
  store i32 %retval.0.i.i, ptr %mapping24.i, align 4
  %size25.i = getelementptr %struct.macb_tx_skb, ptr %148, i32 %and.i.i219, i32 2
  %163 = ptrtoint ptr %size25.i to i32
  call void @__asan_store4_noabort(i32 %163)
  store i32 %size.0340.i, ptr %size25.i, align 4
  %mapped_as_page.i = getelementptr %struct.macb_tx_skb, ptr %148, i32 %and.i.i219, i32 3
  %164 = ptrtoint ptr %mapped_as_page.i to i32
  call void @__asan_store1_noabort(i32 %164)
  store i8 0, ptr %mapped_as_page.i, align 4
  %sub.i225 = sub i32 %len.0337.i, %size.0340.i
  %add.i226 = add i32 %offset.0339.i, %size.0340.i
  %inc.i = add i32 %count.0342.i, 1
  %inc26.i = add i32 %tx_head.0338.i, 1
  %165 = ptrtoint ptr %max_tx_length.i to i32
  call void @__asan_load4_noabort(i32 %165)
  %166 = load i32, ptr %max_tx_length.i, align 8
  %167 = tail call i32 @llvm.umin.i32(i32 %sub.i225, i32 %166) #21
  %tobool.not.i227 = icmp eq i32 %sub.i225, 0
  br i1 %tobool.not.i227, label %if.end22.i.for.cond.preheader.i_crit_edge, label %if.end22.i.while.body.i_crit_edge

if.end22.i.while.body.i_crit_edge:                ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

if.end22.i.for.cond.preheader.i_crit_edge:        ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.preheader.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %f.0357.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc66.i, %for.inc.i.for.body.i_crit_edge ]
  %count.1356.i = phi i32 [ %count.0.lcssa.i, %for.body.lr.ph.i ], [ %count.2.lcssa.i, %for.inc.i.for.body.i_crit_edge ]
  %tx_skb.1355.i = phi ptr [ %tx_skb.0.lcssa.i, %for.body.lr.ph.i ], [ %tx_skb.2.lcssa.i, %for.inc.i.for.body.i_crit_edge ]
  %tx_head.1354.i = phi i32 [ %tx_head.0.lcssa.i, %for.body.lr.ph.i ], [ %tx_head.2.lcssa.i, %for.inc.i.for.body.i_crit_edge ]
  %168 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %end.i, align 4
  %arrayidx32.i = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 %f.0357.i
  %bv_len.i.i = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 %f.0357.i, i32 1
  %170 = ptrtoint ptr %bv_len.i.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %bv_len.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %171)
  %tobool35.not345.i = icmp eq i32 %171, 0
  br i1 %tobool35.not345.i, label %for.body.i.for.inc.i_crit_edge, label %while.body36.lr.ph.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

while.body36.lr.ph.i:                             ; preds = %for.body.i
  %bv_offset.i.i.i = getelementptr %struct.skb_shared_info, ptr %169, i32 0, i32 12, i32 %f.0357.i, i32 2
  br label %while.body36.i

while.body36.i:                                   ; preds = %if.end56.i.while.body36.i_crit_edge, %while.body36.lr.ph.i
  %count.2349.i = phi i32 [ %count.1356.i, %while.body36.lr.ph.i ], [ %inc63.i, %if.end56.i.while.body36.i_crit_edge ]
  %offset.1348.i = phi i32 [ 0, %while.body36.lr.ph.i ], [ %add62.i, %if.end56.i.while.body36.i_crit_edge ]
  %tx_head.2347.i = phi i32 [ %tx_head.1354.i, %while.body36.lr.ph.i ], [ %inc64.i, %if.end56.i.while.body36.i_crit_edge ]
  %len.1346.i = phi i32 [ %171, %while.body36.lr.ph.i ], [ %sub61.i, %if.end56.i.while.body36.i_crit_edge ]
  %172 = ptrtoint ptr %max_tx_length37.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load i32, ptr %max_tx_length37.i, align 8
  %174 = tail call i32 @llvm.umin.i32(i32 %len.1346.i, i32 %173) #21
  %175 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load i32, ptr %tx_ring_size, align 8
  %177 = ptrtoint ptr %tx_skb46.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %tx_skb46.i, align 8
  %179 = ptrtoint ptr %pdev48.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %pdev48.i, align 4
  %dev49.i = getelementptr inbounds %struct.platform_device, ptr %180, i32 0, i32 3
  %181 = ptrtoint ptr %arrayidx32.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load ptr, ptr %arrayidx32.i, align 4
  %183 = ptrtoint ptr %bv_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %183)
  %184 = load i32, ptr %bv_offset.i.i.i, align 4
  %add.i.i = add i32 %184, %offset.1348.i
  %call2.i.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev49.i, ptr noundef %182, i32 noundef %add.i.i, i32 noundef %174, i32 noundef 1, i32 noundef 0) #21
  %185 = ptrtoint ptr %pdev48.i to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %pdev48.i, align 4
  %dev52.i = getelementptr inbounds %struct.platform_device, ptr %186, i32 0, i32 3
  tail call void @debug_dma_mapping_error(ptr noundef %dev52.i, i32 noundef %call2.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call2.i.i)
  %cmp.i291.not.i = icmp eq i32 %call2.i.i, -1
  br i1 %cmp.i291.not.i, label %while.body36.i.dma_error.i_crit_edge, label %if.end56.i

while.body36.i.dma_error.i_crit_edge:             ; preds = %while.body36.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_error.i

if.end56.i:                                       ; preds = %while.body36.i
  %sub.i289.i = add i32 %176, -1
  %and.i290.i = and i32 %sub.i289.i, %tx_head.2347.i
  %arrayidx47.i = getelementptr %struct.macb_tx_skb, ptr %178, i32 %and.i290.i
  %187 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_store4_noabort(i32 %187)
  store ptr null, ptr %arrayidx47.i, align 4
  %mapping58.i = getelementptr %struct.macb_tx_skb, ptr %178, i32 %and.i290.i, i32 1
  %188 = ptrtoint ptr %mapping58.i to i32
  call void @__asan_store4_noabort(i32 %188)
  store i32 %call2.i.i, ptr %mapping58.i, align 4
  %size59.i = getelementptr %struct.macb_tx_skb, ptr %178, i32 %and.i290.i, i32 2
  %189 = ptrtoint ptr %size59.i to i32
  call void @__asan_store4_noabort(i32 %189)
  store i32 %174, ptr %size59.i, align 4
  %mapped_as_page60.i = getelementptr %struct.macb_tx_skb, ptr %178, i32 %and.i290.i, i32 3
  %190 = ptrtoint ptr %mapped_as_page60.i to i32
  call void @__asan_store1_noabort(i32 %190)
  store i8 1, ptr %mapped_as_page60.i, align 4
  %sub61.i = sub i32 %len.1346.i, %174
  %add62.i = add i32 %174, %offset.1348.i
  %inc63.i = add i32 %count.2349.i, 1
  %inc64.i = add i32 %tx_head.2347.i, 1
  %tobool35.not.i = icmp eq i32 %sub61.i, 0
  br i1 %tobool35.not.i, label %if.end56.i.for.inc.i_crit_edge, label %if.end56.i.while.body36.i_crit_edge

if.end56.i.while.body36.i_crit_edge:              ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body36.i

if.end56.i.for.inc.i_crit_edge:                   ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end56.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %tx_head.2.lcssa.i = phi i32 [ %tx_head.1354.i, %for.body.i.for.inc.i_crit_edge ], [ %inc64.i, %if.end56.i.for.inc.i_crit_edge ]
  %tx_skb.2.lcssa.i = phi ptr [ %tx_skb.1355.i, %for.body.i.for.inc.i_crit_edge ], [ %arrayidx47.i, %if.end56.i.for.inc.i_crit_edge ]
  %count.2.lcssa.i = phi i32 [ %count.1356.i, %for.body.i.for.inc.i_crit_edge ], [ %inc63.i, %if.end56.i.for.inc.i_crit_edge ]
  %inc66.i = add nuw nsw i32 %f.0357.i, 1
  %exitcond.not.i = icmp eq i32 %inc66.i, %conv.i210
  br i1 %exitcond.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  %tx_head.1.lcssa.i = phi i32 [ %tx_head.0.lcssa.i, %for.cond.preheader.i.for.end.i_crit_edge ], [ %tx_head.2.lcssa.i, %for.inc.i.for.end.i_crit_edge ]
  %tx_skb.1.lcssa.i = phi ptr [ %tx_skb.0.lcssa.i, %for.cond.preheader.i.for.end.i_crit_edge ], [ %tx_skb.2.lcssa.i, %for.inc.i.for.end.i_crit_edge ]
  %count.1.lcssa.i = phi i32 [ %count.0.lcssa.i, %for.cond.preheader.i.for.end.i_crit_edge ], [ %count.2.lcssa.i, %for.inc.i.for.end.i_crit_edge ]
  %tobool67.not.i = icmp eq ptr %tx_skb.1.lcssa.i, null
  br i1 %tobool67.not.i, label %if.then71.i, label %if.end73.i, !prof !301

if.then71.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev72.i = getelementptr i8, ptr %dev, i32 18220
  %191 = ptrtoint ptr %dev72.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %dev72.i, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %192, ptr noundef nonnull @.str.57) #24
  br label %if.then100

if.end73.i:                                       ; preds = %for.end.i
  %193 = ptrtoint ptr %tx_skb.1.lcssa.i to i32
  call void @__asan_store4_noabort(i32 %193)
  store ptr %skb.addr.2.ph, ptr %tx_skb.1.lcssa.i, align 4
  %194 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %194)
  %195 = load i32, ptr %tx_ring_size, align 8
  %sub.i294.i = add i32 %195, -1
  %and.i295.i = and i32 %sub.i294.i, %tx_head.1.lcssa.i
  %196 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %196)
  %197 = load ptr, ptr %arrayidx, align 8
  %tx_ring_size.i.i.i = getelementptr inbounds %struct.macb, ptr %197, i32 0, i32 6
  %198 = ptrtoint ptr %tx_ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %198)
  %199 = load i32, ptr %tx_ring_size.i.i.i, align 8
  %sub.i.i.i228 = add i32 %199, -1
  %and.i.i.i229 = and i32 %and.i295.i, %sub.i.i.i228
  %hw_dma_cap.i.i.i = getelementptr inbounds %struct.macb, ptr %197, i32 0, i32 35
  %200 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %200)
  %201 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %202 = zext i8 %201 to i64
  call void @__sanitizer_cov_trace_switch(i64 %202, ptr @__sancov_gen_cov_switch_values.120)
  switch i8 %201, label %if.end73.i.macb_tx_desc.exit.i_crit_edge [
    i8 1, label %if.end73.i.sw.bb.i.i.i_crit_edge
    i8 2, label %if.end73.i.sw.bb.i.i.i_crit_edge326
    i8 3, label %sw.bb1.i.i.i
  ]

if.end73.i.sw.bb.i.i.i_crit_edge326:              ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

if.end73.i.sw.bb.i.i.i_crit_edge:                 ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

if.end73.i.macb_tx_desc.exit.i_crit_edge:         ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit.i

sw.bb.i.i.i:                                      ; preds = %if.end73.i.sw.bb.i.i.i_crit_edge, %if.end73.i.sw.bb.i.i.i_crit_edge326
  %shl.i.i.i = shl i32 %and.i.i.i229, 1
  br label %macb_tx_desc.exit.i

sw.bb1.i.i.i:                                     ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i = mul i32 %and.i.i.i229, 3
  br label %macb_tx_desc.exit.i

macb_tx_desc.exit.i:                              ; preds = %sw.bb1.i.i.i, %sw.bb.i.i.i, %if.end73.i.macb_tx_desc.exit.i_crit_edge
  %desc_idx.addr.0.i.i.i = phi i32 [ %and.i.i.i229, %if.end73.i.macb_tx_desc.exit.i_crit_edge ], [ %mul.i.i.i, %sw.bb1.i.i.i ], [ %shl.i.i.i, %sw.bb.i.i.i ]
  %tx_ring.i.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 13
  %203 = ptrtoint ptr %tx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %tx_ring.i.i, align 4
  %ctrl77.i = getelementptr %struct.macb_dma_desc, ptr %204, i32 %desc_idx.addr.0.i.i.i, i32 1
  %205 = ptrtoint ptr %ctrl77.i to i32
  call void @__asan_store4_noabort(i32 %205)
  store i32 -2147483648, ptr %ctrl77.i, align 4
  br i1 %cmp.not.i212, label %macb_tx_desc.exit.i.if.end94.i_crit_edge, label %if.then79.i

macb_tx_desc.exit.i.if.end94.i_crit_edge:         ; preds = %macb_tx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end94.i

if.then79.i:                                      ; preds = %macb_tx_desc.exit.i
  %206 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %206)
  %207 = load ptr, ptr %end.i, align 4
  %gso_size84.i = getelementptr inbounds %struct.skb_shared_info, ptr %207, i32 0, i32 4
  %208 = ptrtoint ptr %gso_size84.i to i32
  call void @__asan_load2_noabort(i32 %208)
  %209 = load i16, ptr %gso_size84.i, align 4
  %conv85.i = zext i16 %209 to i32
  br i1 %cmp80.i, label %if.then82.i, label %if.then79.i.if.end94.i_crit_edge

if.then79.i.if.end94.i_crit_edge:                 ; preds = %if.then79.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end94.i

if.then82.i:                                      ; preds = %if.then79.i
  call void @__sanitizer_cov_trace_pc() #23
  %head.i.i297.i = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 18
  %210 = ptrtoint ptr %head.i.i297.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %head.i.i297.i, align 8
  %transport_header.i.i.i230 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 15, i32 0, i32 19
  %212 = ptrtoint ptr %transport_header.i.i.i230 to i32
  call void @__asan_load2_noabort(i32 %212)
  %213 = load i16, ptr %transport_header.i.i.i230, align 2
  %conv.i.i298.i = zext i16 %213 to i32
  %add.ptr.i.i299.i = getelementptr i8, ptr %211, i32 %conv.i.i298.i
  %data.i.i231 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 19
  %214 = ptrtoint ptr %data.i.i231 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %data.i.i231, align 4
  %sub.ptr.lhs.cast.i.i232 = ptrtoint ptr %add.ptr.i.i299.i to i32
  %sub.ptr.rhs.cast.i.i233 = ptrtoint ptr %215 to i32
  %sub.ptr.sub.i.i234 = add nuw nsw i32 %conv85.i, 4
  %add87.i = sub i32 %sub.ptr.sub.i.i234, %sub.ptr.rhs.cast.i.i233
  %add88.i = add i32 %add87.i, %sub.ptr.lhs.cast.i.i232
  br label %if.end94.i

if.end94.i:                                       ; preds = %if.then82.i, %if.then79.i.if.end94.i_crit_edge, %macb_tx_desc.exit.i.if.end94.i_crit_edge
  %mss_mfs.0.i = phi i32 [ %add88.i, %if.then82.i ], [ 0, %macb_tx_desc.exit.i.if.end94.i_crit_edge ], [ %conv85.i, %if.then79.i.if.end94.i_crit_edge ]
  %tx_skb96.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 14
  %and135.i = shl i32 %mss_mfs.0.i, 16
  %shl136.i = and i32 %and135.i, 1073676288
  %dev123.i = getelementptr i8, ptr %dev, i32 18220
  %ip_summed.i235 = getelementptr inbounds %struct.sk_buff, ptr %skb.addr.2.ph, i32 0, i32 15
  %dec.peel.i = add i32 %tx_head.1.lcssa.i, -1
  %216 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load i32, ptr %tx_ring_size, align 8
  %sub.i302.peel.i = add i32 %217, -1
  %and.i303.peel.i = and i32 %sub.i302.peel.i, %dec.peel.i
  %218 = ptrtoint ptr %tx_skb96.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %tx_skb96.i, align 8
  %220 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %arrayidx, align 8
  %tx_ring_size.i.i304.peel.i = getelementptr inbounds %struct.macb, ptr %221, i32 0, i32 6
  %222 = ptrtoint ptr %tx_ring_size.i.i304.peel.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load i32, ptr %tx_ring_size.i.i304.peel.i, align 8
  %sub.i.i305.peel.i = add i32 %223, -1
  %and.i.i306.peel.i = and i32 %sub.i.i305.peel.i, %and.i303.peel.i
  %hw_dma_cap.i.i307.peel.i = getelementptr inbounds %struct.macb, ptr %221, i32 0, i32 35
  %224 = ptrtoint ptr %hw_dma_cap.i.i307.peel.i to i32
  call void @__asan_load1_noabort(i32 %224)
  %225 = load i8, ptr %hw_dma_cap.i.i307.peel.i, align 8
  %226 = zext i8 %225 to i64
  call void @__sanitizer_cov_trace_switch(i64 %226, ptr @__sancov_gen_cov_switch_values.121)
  switch i8 %225, label %if.end94.i.macb_tx_desc.exit315.peel.i_crit_edge [
    i8 1, label %if.end94.i.sw.bb.i.i309.peel.i_crit_edge
    i8 2, label %if.end94.i.sw.bb.i.i309.peel.i_crit_edge327
    i8 3, label %sw.bb1.i.i311.peel.i
  ]

if.end94.i.sw.bb.i.i309.peel.i_crit_edge327:      ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i309.peel.i

if.end94.i.sw.bb.i.i309.peel.i_crit_edge:         ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i309.peel.i

if.end94.i.macb_tx_desc.exit315.peel.i_crit_edge: ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit315.peel.i

sw.bb1.i.i311.peel.i:                             ; preds = %if.end94.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i310.peel.i = mul i32 %and.i.i306.peel.i, 3
  br label %macb_tx_desc.exit315.peel.i

sw.bb.i.i309.peel.i:                              ; preds = %if.end94.i.sw.bb.i.i309.peel.i_crit_edge, %if.end94.i.sw.bb.i.i309.peel.i_crit_edge327
  %shl.i.i308.peel.i = shl i32 %and.i.i306.peel.i, 1
  br label %macb_tx_desc.exit315.peel.i

macb_tx_desc.exit315.peel.i:                      ; preds = %sw.bb.i.i309.peel.i, %sw.bb1.i.i311.peel.i, %if.end94.i.macb_tx_desc.exit315.peel.i_crit_edge
  %desc_idx.addr.0.i.i312.peel.i = phi i32 [ %and.i.i306.peel.i, %if.end94.i.macb_tx_desc.exit315.peel.i_crit_edge ], [ %mul.i.i310.peel.i, %sw.bb1.i.i311.peel.i ], [ %shl.i.i308.peel.i, %sw.bb.i.i309.peel.i ]
  %227 = ptrtoint ptr %tx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %tx_ring.i.i, align 4
  %arrayidx.i314.peel.i = getelementptr %struct.macb_dma_desc, ptr %228, i32 %desc_idx.addr.0.i.i312.peel.i
  %size99.peel.i = getelementptr %struct.macb_tx_skb, ptr %219, i32 %and.i303.peel.i, i32 2
  %229 = ptrtoint ptr %size99.peel.i to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load i32, ptr %size99.peel.i, align 4
  %or.peel.i = or i32 %230, 32768
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i303.peel.i, i32 %sub.i302.peel.i)
  %cmp104.peel.i = icmp eq i32 %and.i303.peel.i, %sub.i302.peel.i
  br i1 %cmp104.peel.i, label %if.then112.peel.i, label %macb_tx_desc.exit315.peel.i.if.end114.peel.i_crit_edge, !prof !301

macb_tx_desc.exit315.peel.i.if.end114.peel.i_crit_edge: ; preds = %macb_tx_desc.exit315.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114.peel.i

if.then112.peel.i:                                ; preds = %macb_tx_desc.exit315.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  %or113.peel.i = or i32 %230, 1073774592
  br label %if.end114.peel.i

if.end114.peel.i:                                 ; preds = %if.then112.peel.i, %macb_tx_desc.exit315.peel.i.if.end114.peel.i_crit_edge
  %ctrl.1.peel.i = phi i32 [ %or113.peel.i, %if.then112.peel.i ], [ %or.peel.i, %macb_tx_desc.exit315.peel.i.if.end114.peel.i_crit_edge ]
  %231 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %tx_head2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %dec.peel.i, i32 %232)
  %cmp116.peel.i = icmp eq i32 %dec.peel.i, %232
  br i1 %cmp116.peel.i, label %if.then118.peel.i, label %if.else134.peel.i

if.else134.peel.i:                                ; preds = %if.end114.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  %or137.peel.i = or i32 %ctrl.1.peel.i, %shl136.i
  br label %if.end138.peel.i

if.then118.peel.i:                                ; preds = %if.end114.peel.i
  %or119.peel.i = or i32 %ctrl.1.peel.i, %lso_ctrl.0.i
  %233 = ptrtoint ptr %dev123.i to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load ptr, ptr %dev123.i, align 4
  %features.peel.i = getelementptr inbounds %struct.net_device, ptr %234, i32 0, i32 23
  %235 = ptrtoint ptr %features.peel.i to i32
  call void @__asan_load8_noabort(i32 %235)
  %236 = load i64, ptr %features.peel.i, align 16
  %and124.peel.i = and i64 %236, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and124.peel.i)
  %tobool125.not.peel.i = icmp eq i64 %and124.peel.i, 0
  br i1 %tobool125.not.peel.i, label %if.then118.peel.i.if.end138.peel.i_crit_edge, label %land.lhs.true.peel.i

if.then118.peel.i.if.end138.peel.i_crit_edge:     ; preds = %if.then118.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138.peel.i

land.lhs.true.peel.i:                             ; preds = %if.then118.peel.i
  %237 = ptrtoint ptr %ip_summed.i235 to i32
  call void @__asan_load2_noabort(i32 %237)
  %bf.load.peel.i = load i16, ptr %ip_summed.i235, align 8
  %238 = and i16 %bf.load.peel.i, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %238)
  %cmp127.not.peel.i = icmp eq i16 %238, 1536
  br i1 %cmp127.not.peel.i, label %land.lhs.true.peel.i.if.end138.peel.i_crit_edge, label %land.lhs.true129.peel.i

land.lhs.true.peel.i.if.end138.peel.i_crit_edge:  ; preds = %land.lhs.true.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138.peel.i

land.lhs.true129.peel.i:                          ; preds = %land.lhs.true.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  %or132.peel.i = or i32 %or119.peel.i, 65536
  %spec.select282.peel.i = select i1 %cmp.not.i212, i32 %or132.peel.i, i32 %or119.peel.i
  br label %if.end138.peel.i

if.end138.peel.i:                                 ; preds = %land.lhs.true129.peel.i, %land.lhs.true.peel.i.if.end138.peel.i_crit_edge, %if.then118.peel.i.if.end138.peel.i_crit_edge, %if.else134.peel.i
  %ctrl.2.peel.i = phi i32 [ %or119.peel.i, %land.lhs.true.peel.i.if.end138.peel.i_crit_edge ], [ %or119.peel.i, %if.then118.peel.i.if.end138.peel.i_crit_edge ], [ %or137.peel.i, %if.else134.peel.i ], [ %spec.select282.peel.i, %land.lhs.true129.peel.i ]
  %mapping139.peel.i = getelementptr %struct.macb_tx_skb, ptr %219, i32 %and.i303.peel.i, i32 1
  %239 = ptrtoint ptr %mapping139.peel.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %mapping139.peel.i, align 4
  %241 = ptrtoint ptr %arrayidx.i314.peel.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %240, ptr %arrayidx.i314.peel.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !313
  tail call void @arm_heavy_mb() #21
  %ctrl141.peel.i = getelementptr %struct.macb_dma_desc, ptr %228, i32 %desc_idx.addr.0.i.i312.peel.i, i32 1
  %242 = ptrtoint ptr %ctrl141.peel.i to i32
  call void @__asan_store4_noabort(i32 %242)
  store i32 %ctrl.2.peel.i, ptr %ctrl141.peel.i, align 4
  %243 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load i32, ptr %tx_head2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %dec.peel.i, i32 %244)
  %cmp144.not.peel.i = icmp eq i32 %dec.peel.i, %244
  br i1 %cmp144.not.peel.i, label %if.end138.peel.i.macb_tx_map.exit_crit_edge, label %if.end138.peel.i.do.body.i_crit_edge

if.end138.peel.i.do.body.i_crit_edge:             ; preds = %if.end138.peel.i
  br label %do.body.i

if.end138.peel.i.macb_tx_map.exit_crit_edge:      ; preds = %if.end138.peel.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_map.exit

do.body.i:                                        ; preds = %if.end138.i.do.body.i_crit_edge, %if.end138.peel.i.do.body.i_crit_edge
  %i.0.i = phi i32 [ %dec.i, %if.end138.i.do.body.i_crit_edge ], [ %dec.peel.i, %if.end138.peel.i.do.body.i_crit_edge ]
  %dec.i = add i32 %i.0.i, -1
  %245 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load i32, ptr %tx_ring_size, align 8
  %sub.i302.i = add i32 %246, -1
  %and.i303.i = and i32 %sub.i302.i, %dec.i
  %247 = ptrtoint ptr %tx_skb96.i to i32
  call void @__asan_load4_noabort(i32 %247)
  %248 = load ptr, ptr %tx_skb96.i, align 8
  %249 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %249)
  %250 = load ptr, ptr %arrayidx, align 8
  %tx_ring_size.i.i304.i = getelementptr inbounds %struct.macb, ptr %250, i32 0, i32 6
  %251 = ptrtoint ptr %tx_ring_size.i.i304.i to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %tx_ring_size.i.i304.i, align 8
  %sub.i.i305.i = add i32 %252, -1
  %and.i.i306.i = and i32 %sub.i.i305.i, %and.i303.i
  %hw_dma_cap.i.i307.i = getelementptr inbounds %struct.macb, ptr %250, i32 0, i32 35
  %253 = ptrtoint ptr %hw_dma_cap.i.i307.i to i32
  call void @__asan_load1_noabort(i32 %253)
  %254 = load i8, ptr %hw_dma_cap.i.i307.i, align 8
  %255 = zext i8 %254 to i64
  call void @__sanitizer_cov_trace_switch(i64 %255, ptr @__sancov_gen_cov_switch_values.122)
  switch i8 %254, label %do.body.i.macb_tx_desc.exit315.i_crit_edge [
    i8 1, label %do.body.i.sw.bb.i.i309.i_crit_edge
    i8 2, label %do.body.i.sw.bb.i.i309.i_crit_edge328
    i8 3, label %sw.bb1.i.i311.i
  ]

do.body.i.sw.bb.i.i309.i_crit_edge328:            ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i309.i

do.body.i.sw.bb.i.i309.i_crit_edge:               ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i309.i

do.body.i.macb_tx_desc.exit315.i_crit_edge:       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_desc.exit315.i

sw.bb.i.i309.i:                                   ; preds = %do.body.i.sw.bb.i.i309.i_crit_edge, %do.body.i.sw.bb.i.i309.i_crit_edge328
  %shl.i.i308.i = shl i32 %and.i.i306.i, 1
  br label %macb_tx_desc.exit315.i

sw.bb1.i.i311.i:                                  ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i310.i = mul i32 %and.i.i306.i, 3
  br label %macb_tx_desc.exit315.i

macb_tx_desc.exit315.i:                           ; preds = %sw.bb1.i.i311.i, %sw.bb.i.i309.i, %do.body.i.macb_tx_desc.exit315.i_crit_edge
  %desc_idx.addr.0.i.i312.i = phi i32 [ %and.i.i306.i, %do.body.i.macb_tx_desc.exit315.i_crit_edge ], [ %mul.i.i310.i, %sw.bb1.i.i311.i ], [ %shl.i.i308.i, %sw.bb.i.i309.i ]
  %256 = ptrtoint ptr %tx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %tx_ring.i.i, align 4
  %arrayidx.i314.i = getelementptr %struct.macb_dma_desc, ptr %257, i32 %desc_idx.addr.0.i.i312.i
  %size99.i = getelementptr %struct.macb_tx_skb, ptr %248, i32 %and.i303.i, i32 2
  %258 = ptrtoint ptr %size99.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load i32, ptr %size99.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i303.i, i32 %sub.i302.i)
  %cmp104.i = icmp eq i32 %and.i303.i, %sub.i302.i
  br i1 %cmp104.i, label %if.then112.i, label %macb_tx_desc.exit315.i.if.end114.i_crit_edge, !prof !301

macb_tx_desc.exit315.i.if.end114.i_crit_edge:     ; preds = %macb_tx_desc.exit315.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end114.i

if.then112.i:                                     ; preds = %macb_tx_desc.exit315.i
  call void @__sanitizer_cov_trace_pc() #23
  %or113.i = or i32 %259, 1073741824
  br label %if.end114.i

if.end114.i:                                      ; preds = %if.then112.i, %macb_tx_desc.exit315.i.if.end114.i_crit_edge
  %ctrl.1.i = phi i32 [ %or113.i, %if.then112.i ], [ %259, %macb_tx_desc.exit315.i.if.end114.i_crit_edge ]
  %260 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %tx_head2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %dec.i, i32 %261)
  %cmp116.i = icmp eq i32 %dec.i, %261
  br i1 %cmp116.i, label %if.then118.i, label %if.else134.i

if.then118.i:                                     ; preds = %if.end114.i
  %or119.i = or i32 %ctrl.1.i, %lso_ctrl.0.i
  %262 = ptrtoint ptr %dev123.i to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %dev123.i, align 4
  %features.i236 = getelementptr inbounds %struct.net_device, ptr %263, i32 0, i32 23
  %264 = ptrtoint ptr %features.i236 to i32
  call void @__asan_load8_noabort(i32 %264)
  %265 = load i64, ptr %features.i236, align 16
  %and124.i = and i64 %265, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and124.i)
  %tobool125.not.i = icmp eq i64 %and124.i, 0
  br i1 %tobool125.not.i, label %if.then118.i.if.end138.i_crit_edge, label %land.lhs.true.i

if.then118.i.if.end138.i_crit_edge:               ; preds = %if.then118.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138.i

land.lhs.true.i:                                  ; preds = %if.then118.i
  %266 = ptrtoint ptr %ip_summed.i235 to i32
  call void @__asan_load2_noabort(i32 %266)
  %bf.load.i237 = load i16, ptr %ip_summed.i235, align 8
  %267 = and i16 %bf.load.i237, 1536
  call void @__sanitizer_cov_trace_const_cmp2(i16 1536, i16 %267)
  %cmp127.not.i = icmp eq i16 %267, 1536
  br i1 %cmp127.not.i, label %land.lhs.true.i.if.end138.i_crit_edge, label %land.lhs.true129.i

land.lhs.true.i.if.end138.i_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138.i

land.lhs.true129.i:                               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %or132.i = or i32 %or119.i, 65536
  %spec.select282.i = select i1 %cmp.not.i212, i32 %or132.i, i32 %or119.i
  br label %if.end138.i

if.else134.i:                                     ; preds = %if.end114.i
  call void @__sanitizer_cov_trace_pc() #23
  %or137.i = or i32 %ctrl.1.i, %shl136.i
  br label %if.end138.i

if.end138.i:                                      ; preds = %if.else134.i, %land.lhs.true129.i, %land.lhs.true.i.if.end138.i_crit_edge, %if.then118.i.if.end138.i_crit_edge
  %ctrl.2.i = phi i32 [ %or119.i, %land.lhs.true.i.if.end138.i_crit_edge ], [ %or119.i, %if.then118.i.if.end138.i_crit_edge ], [ %or137.i, %if.else134.i ], [ %spec.select282.i, %land.lhs.true129.i ]
  %mapping139.i = getelementptr %struct.macb_tx_skb, ptr %248, i32 %and.i303.i, i32 1
  %268 = ptrtoint ptr %mapping139.i to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %mapping139.i, align 4
  %270 = ptrtoint ptr %arrayidx.i314.i to i32
  call void @__asan_store4_noabort(i32 %270)
  store i32 %269, ptr %arrayidx.i314.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !313
  tail call void @arm_heavy_mb() #21
  %ctrl141.i = getelementptr %struct.macb_dma_desc, ptr %257, i32 %desc_idx.addr.0.i.i312.i, i32 1
  %271 = ptrtoint ptr %ctrl141.i to i32
  call void @__asan_store4_noabort(i32 %271)
  store i32 %ctrl.2.i, ptr %ctrl141.i, align 4
  %272 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %272)
  %273 = load i32, ptr %tx_head2.i, align 4
  %cmp144.not.i = icmp eq i32 %dec.i, %273
  br i1 %cmp144.not.i, label %if.end138.i.macb_tx_map.exit_crit_edge, label %if.end138.i.do.body.i_crit_edge, !llvm.loop !314

if.end138.i.do.body.i_crit_edge:                  ; preds = %if.end138.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body.i

if.end138.i.macb_tx_map.exit_crit_edge:           ; preds = %if.end138.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_map.exit

dma_error.i:                                      ; preds = %while.body36.i.dma_error.i_crit_edge, %dma_map_single_attrs.exit.i.dma_error.i_crit_edge
  %tx_head.3.i = phi i32 [ %tx_head.2347.i, %while.body36.i.dma_error.i_crit_edge ], [ %tx_head.0338.i, %dma_map_single_attrs.exit.i.dma_error.i_crit_edge ]
  %dev148.i = getelementptr i8, ptr %dev, i32 18220
  %274 = ptrtoint ptr %dev148.i to i32
  call void @__asan_load4_noabort(i32 %274)
  %275 = load ptr, ptr %dev148.i, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %275, ptr noundef nonnull @.str.58) #24
  %276 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_load4_noabort(i32 %276)
  %277 = load i32, ptr %tx_head2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %277, i32 %tx_head.3.i)
  %cmp151.not362.i = icmp eq i32 %277, %tx_head.3.i
  br i1 %cmp151.not362.i, label %dma_error.i.if.then100_crit_edge, label %for.body153.lr.ph.i

dma_error.i.if.then100_crit_edge:                 ; preds = %dma_error.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then100

for.body153.lr.ph.i:                              ; preds = %dma_error.i
  %tx_skb.i.i = getelementptr inbounds %struct.macb_queue, ptr %arrayidx, i32 0, i32 14
  %pdev4.i.i = getelementptr i8, ptr %dev, i32 18196
  br label %for.body153.i

for.body153.i:                                    ; preds = %macb_tx_unmap.exit.i.for.body153.i_crit_edge, %for.body153.lr.ph.i
  %i.1363.i = phi i32 [ %277, %for.body153.lr.ph.i ], [ %inc156.i, %macb_tx_unmap.exit.i.for.body153.i_crit_edge ]
  %278 = ptrtoint ptr %tx_skb.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load ptr, ptr %tx_skb.i.i, align 8
  %280 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %arrayidx, align 8
  %tx_ring_size.i.i316.i = getelementptr inbounds %struct.macb, ptr %281, i32 0, i32 6
  %282 = ptrtoint ptr %tx_ring_size.i.i316.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %tx_ring_size.i.i316.i, align 8
  %sub.i.i317.i = add i32 %283, -1
  %and.i.i318.i = and i32 %sub.i.i317.i, %i.1363.i
  %arrayidx.i319.i = getelementptr %struct.macb_tx_skb, ptr %279, i32 %and.i.i318.i
  %mapping.i.i = getelementptr %struct.macb_tx_skb, ptr %279, i32 %and.i.i318.i, i32 1
  %284 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_load4_noabort(i32 %284)
  %285 = load i32, ptr %mapping.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %285)
  %tobool.not.i.i238 = icmp eq i32 %285, 0
  br i1 %tobool.not.i.i238, label %for.body153.i.if.end9.i.i_crit_edge, label %if.then.i320.i

for.body153.i.if.end9.i.i_crit_edge:              ; preds = %for.body153.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9.i.i

if.then.i320.i:                                   ; preds = %for.body153.i
  call void @__sanitizer_cov_trace_pc() #23
  %286 = ptrtoint ptr %pdev4.i.i to i32
  call void @__asan_load4_noabort(i32 %286)
  %287 = load ptr, ptr %pdev4.i.i, align 4
  %dev5.i.i = getelementptr inbounds %struct.platform_device, ptr %287, i32 0, i32 3
  %size7.i.i = getelementptr %struct.macb_tx_skb, ptr %279, i32 %and.i.i318.i, i32 2
  %288 = ptrtoint ptr %size7.i.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load i32, ptr %size7.i.i, align 4
  tail call void @dma_unmap_page_attrs(ptr noundef %dev5.i.i, i32 noundef %285, i32 noundef %289, i32 noundef 1, i32 noundef 0) #21
  %290 = ptrtoint ptr %mapping.i.i to i32
  call void @__asan_store4_noabort(i32 %290)
  store i32 0, ptr %mapping.i.i, align 4
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.then.i320.i, %for.body153.i.if.end9.i.i_crit_edge
  %291 = ptrtoint ptr %arrayidx.i319.i to i32
  call void @__asan_load4_noabort(i32 %291)
  %292 = load ptr, ptr %arrayidx.i319.i, align 4
  %tobool10.not.i.i = icmp eq ptr %292, null
  br i1 %tobool10.not.i.i, label %if.end9.i.i.macb_tx_unmap.exit.i_crit_edge, label %if.then11.i.i

if.end9.i.i.macb_tx_unmap.exit.i_crit_edge:       ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_unmap.exit.i

if.then11.i.i:                                    ; preds = %if.end9.i.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef nonnull %292, i32 noundef 1) #21
  %293 = ptrtoint ptr %arrayidx.i319.i to i32
  call void @__asan_store4_noabort(i32 %293)
  store ptr null, ptr %arrayidx.i319.i, align 4
  br label %macb_tx_unmap.exit.i

macb_tx_unmap.exit.i:                             ; preds = %if.then11.i.i, %if.end9.i.i.macb_tx_unmap.exit.i_crit_edge
  %inc156.i = add i32 %i.1363.i, 1
  %cmp151.not.i = icmp eq i32 %inc156.i, %tx_head.3.i
  br i1 %cmp151.not.i, label %macb_tx_unmap.exit.i.if.then100_crit_edge, label %macb_tx_unmap.exit.i.for.body153.i_crit_edge

macb_tx_unmap.exit.i.for.body153.i_crit_edge:     ; preds = %macb_tx_unmap.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body153.i

macb_tx_unmap.exit.i.if.then100_crit_edge:        ; preds = %macb_tx_unmap.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then100

macb_tx_map.exit:                                 ; preds = %if.end138.i.macb_tx_map.exit_crit_edge, %if.end138.peel.i.macb_tx_map.exit_crit_edge
  %294 = ptrtoint ptr %tx_head2.i to i32
  call void @__asan_store4_noabort(i32 %294)
  store i32 %tx_head.1.lcssa.i, ptr %tx_head2.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.1.lcssa.i)
  %tobool99.not = icmp eq i32 %count.1.lcssa.i, 0
  br i1 %tobool99.not, label %macb_tx_map.exit.if.then100_crit_edge, label %do.body102

macb_tx_map.exit.if.then100_crit_edge:            ; preds = %macb_tx_map.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then100

if.then100:                                       ; preds = %macb_tx_map.exit.if.then100_crit_edge, %macb_tx_unmap.exit.i.if.then100_crit_edge, %dma_error.i.if.then100_crit_edge, %if.then71.i
  tail call void @__dev_kfree_skb_any(ptr noundef %skb.addr.2.ph, i32 noundef 1) #21
  br label %unlock

do.body102:                                       ; preds = %macb_tx_map.exit
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !316
  tail call void @arm_heavy_mb() #21
  tail call void @skb_clone_tx_timestamp(ptr noundef %skb.addr.2.ph) #21
  %295 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %end.i, align 4
  %tx_flags.i = getelementptr inbounds %struct.skb_shared_info, ptr %296, i32 0, i32 3
  %297 = ptrtoint ptr %tx_flags.i to i32
  call void @__asan_load1_noabort(i32 %297)
  %298 = load i8, ptr %tx_flags.i, align 1
  %299 = and i8 %298, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %299)
  %tobool.not.i241 = icmp eq i8 %299, 0
  br i1 %tobool.not.i241, label %do.body102.skb_tx_timestamp.exit_crit_edge, label %if.then.i242

do.body102.skb_tx_timestamp.exit_crit_edge:       ; preds = %do.body102
  call void @__sanitizer_cov_trace_pc() #23
  br label %skb_tx_timestamp.exit

if.then.i242:                                     ; preds = %do.body102
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @skb_tstamp_tx(ptr noundef %skb.addr.2.ph, ptr noundef null) #21
  br label %skb_tx_timestamp.exit

skb_tx_timestamp.exit:                            ; preds = %if.then.i242, %do.body102.skb_tx_timestamp.exit_crit_edge
  %macb_reg_writel = getelementptr i8, ptr %dev, i32 2316
  %300 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %300)
  %301 = load ptr, ptr %macb_reg_writel, align 4
  %macb_reg_readl = getelementptr i8, ptr %dev, i32 2312
  %302 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %302)
  %303 = load ptr, ptr %macb_reg_readl, align 8
  %call105 = tail call i32 %303(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %or = or i32 %call105, 512
  tail call void %301(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %or) #21
  %304 = ptrtoint ptr %tx_tail to i32
  call void @__asan_load4_noabort(i32 %304)
  %305 = load i32, ptr %tx_tail, align 8
  %306 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %306)
  %307 = load i32, ptr %tx_head, align 4
  %add108.neg = xor i32 %307, -1
  %sub109 = add i32 %305, %add108.neg
  %308 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %tx_ring_size, align 8
  %sub111 = add i32 %309, -1
  %and112 = and i32 %sub111, %sub109
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and112)
  %cmp113 = icmp eq i32 %and112, 0
  br i1 %cmp113, label %if.then115, label %skb_tx_timestamp.exit.unlock_crit_edge

skb_tx_timestamp.exit.unlock_crit_edge:           ; preds = %skb_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %unlock

if.then115:                                       ; preds = %skb_tx_timestamp.exit
  call void @__sanitizer_cov_trace_pc() #23
  %_tx.i.i245 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %310 = ptrtoint ptr %_tx.i.i245 to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %_tx.i.i245, align 128
  %state.i.i246 = getelementptr %struct.netdev_queue, ptr %311, i32 %idxprom, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i246) #21
  br label %unlock

unlock:                                           ; preds = %if.then115, %skb_tx_timestamp.exit.unlock_crit_edge, %if.then100
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call70) #21
  br label %cleanup

cleanup:                                          ; preds = %unlock, %if.then88, %if.then78, %if.then23, %if.then5, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %if.then5 ], [ 16, %if.then23 ], [ 0, %unlock ], [ 16, %if.then88 ], [ 16, %if.then78 ]
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i64 @macb_features_check(ptr nocapture noundef readonly %skb, ptr nocapture noundef readnone %dev, i64 noundef %features) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %data_len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 7
  %0 = ptrtoint ptr %data_len.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %data_len.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.i.not = icmp eq i32 %1, 0
  br i1 %tobool.i.not, label %entry.cleanup23_crit_edge, label %lor.lhs.false

entry.cleanup23_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup23

lor.lhs.false:                                    ; preds = %entry
  %head.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 18
  %2 = ptrtoint ptr %head.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %head.i.i, align 8
  %network_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 20
  %4 = ptrtoint ptr %network_header.i.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %network_header.i.i, align 4
  %conv.i.i = zext i16 %5 to i32
  %add.ptr.i.i = getelementptr i8, ptr %3, i32 %conv.i.i
  %protocol = getelementptr inbounds %struct.iphdr, ptr %add.ptr.i.i, i32 0, i32 6
  %6 = ptrtoint ptr %protocol to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %protocol, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 17, i8 %7)
  %cmp.not = icmp eq i8 %7, 17
  br i1 %cmp.not, label %if.end, label %lor.lhs.false.cleanup23_crit_edge

lor.lhs.false.cleanup23_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup23

if.end:                                           ; preds = %lor.lhs.false
  %transport_header.i.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 15, i32 0, i32 19
  %8 = ptrtoint ptr %transport_header.i.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %transport_header.i.i, align 2
  %conv.i.i38 = zext i16 %9 to i32
  %add.ptr.i.i39 = getelementptr i8, ptr %3, i32 %conv.i.i38
  %data.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %add.ptr.i.i39 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %11 to i32
  %len.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %12 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len.i, align 4
  %14 = add i32 %13, %sub.ptr.rhs.cast.i
  %15 = add i32 %1, %sub.ptr.lhs.cast.i
  %sub = sub i32 %14, %15
  %and = and i32 %sub, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp5 = icmp eq i32 %and, 0
  br i1 %cmp5, label %if.end9, label %if.then7

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %and8 = and i64 %features, -65537
  br label %cleanup23

if.end9:                                          ; preds = %if.end
  %end.i = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 17
  %16 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %end.i, align 4
  %nr_frags11 = getelementptr inbounds %struct.skb_shared_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %nr_frags11 to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %nr_frags11, align 2
  %conv12 = zext i8 %19 to i32
  %dec = add nsw i32 %conv12, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp1344.not = icmp eq i32 %dec, 0
  br i1 %cmp1344.not, label %if.end9.cleanup23_crit_edge, label %if.end9.for.body_crit_edge

if.end9.for.body_crit_edge:                       ; preds = %if.end9
  br label %for.body

if.end9.cleanup23_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup23

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %f.045, 1
  %exitcond.not = icmp eq i32 %inc, %dec
  br i1 %exitcond.not, label %for.cond.cleanup23_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond.cleanup23_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup23

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end9.for.body_crit_edge
  %f.045 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end9.for.body_crit_edge ]
  %bv_len.i = getelementptr %struct.skb_shared_info, ptr %17, i32 0, i32 12, i32 %f.045, i32 1
  %20 = ptrtoint ptr %bv_len.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %bv_len.i, align 4
  %and17 = and i32 %21, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17)
  %cmp18 = icmp eq i32 %and17, 0
  br i1 %cmp18, label %for.cond, label %cleanup23.loopexit.split.loop.exit

cleanup23.loopexit.split.loop.exit:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %and21.le = and i64 %features, -65537
  br label %cleanup23

cleanup23:                                        ; preds = %cleanup23.loopexit.split.loop.exit, %for.cond.cleanup23_crit_edge, %if.end9.cleanup23_crit_edge, %if.then7, %lor.lhs.false.cleanup23_crit_edge, %entry.cleanup23_crit_edge
  %retval.2 = phi i64 [ %and8, %if.then7 ], [ %features, %lor.lhs.false.cleanup23_crit_edge ], [ %features, %entry.cleanup23_crit_edge ], [ %and21.le, %cleanup23.loopexit.split.loop.exit ], [ %features, %if.end9.cleanup23_crit_edge ], [ %features, %for.cond.cleanup23_crit_edge ]
  ret i64 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_set_rx_mode(ptr noundef %dev) #2 align 64 {
entry:
  %mc_filter.i = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %macb_reg_readl = getelementptr i8, ptr %dev, i32 2312
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %1(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %flags = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 14
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 8
  %and = and i32 %3, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %or = or i32 %call1, 16
  %caps.i = getelementptr i8, ptr %dev, i32 18468
  %4 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i = icmp slt i32 %5, 0
  %and4 = and i32 %or, -16777217
  %spec.select = select i1 %tobool.i, i32 %and4, i32 %or
  br label %if.end12

if.else:                                          ; preds = %entry
  %and5 = and i32 %call1, -17
  %caps.i93 = getelementptr i8, ptr %dev, i32 18468
  %6 = ptrtoint ptr %caps.i93 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %caps.i93, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i94 = icmp slt i32 %7, 0
  br i1 %tobool.i94, label %land.lhs.true, label %if.else.if.end12_crit_edge

if.else.if.end12_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end12

land.lhs.true:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %features = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 23
  %8 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %features, align 16
  %and7 = lshr i64 %9, 16
  %10 = trunc i64 %and7 to i32
  %11 = and i32 %10, 16777216
  %12 = or i32 %11, %and5
  br label %if.end12

if.end12:                                         ; preds = %land.lhs.true, %if.else.if.end12_crit_edge, %if.then
  %cfg.0 = phi i32 [ %and5, %if.else.if.end12_crit_edge ], [ %spec.select, %if.then ], [ %12, %land.lhs.true ]
  %and14 = and i32 %3, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  br i1 %tobool15.not, label %if.else29, label %if.then16

if.then16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %caps.i95 = getelementptr i8, ptr %dev, i32 18468
  %13 = ptrtoint ptr %caps.i95 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %caps.i95, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i96 = icmp slt i32 %14, 0
  %macb_reg_writel = getelementptr i8, ptr %dev, i32 2316
  %15 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %macb_reg_writel, align 4
  %. = select i1 %tobool.i96, i32 128, i32 144
  tail call void %16(ptr noundef %add.ptr.i, i32 noundef %., i32 noundef -1) #21
  %17 = ptrtoint ptr %caps.i95 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %caps.i95, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i98 = icmp slt i32 %18, 0
  %.sink103 = select i1 %tobool.i98, i32 132, i32 148
  %macb_reg_writel26 = getelementptr i8, ptr %dev, i32 2316
  %19 = ptrtoint ptr %macb_reg_writel26 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macb_reg_writel26, align 4
  tail call void %20(ptr noundef %add.ptr.i, i32 noundef %.sink103, i32 noundef -1) #21
  %or28 = or i32 %cfg.0, 64
  br label %if.end52

if.else29:                                        ; preds = %if.end12
  %count = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66, i32 1
  %21 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp = icmp eq i32 %22, 0
  br i1 %cmp, label %if.else32, label %if.then30

if.then30:                                        ; preds = %if.else29
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %mc_filter.i) #21
  %23 = getelementptr inbounds [2 x i32], ptr %mc_filter.i, i32 0, i32 1
  %24 = ptrtoint ptr %mc_filter.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %mc_filter.i, align 4
  %25 = ptrtoint ptr %23 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %23, align 4
  %mc.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 66
  %26 = ptrtoint ptr %mc.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %ha.040.i = load ptr, ptr %mc.i, align 4
  %cmp.not41.i = icmp eq ptr %ha.040.i, %mc.i
  br i1 %cmp.not41.i, label %if.then30.macb_sethashtable.exit_crit_edge, label %if.then30.for.body.i_crit_edge

if.then30.for.body.i_crit_edge:                   ; preds = %if.then30
  br label %for.body.i

if.then30.macb_sethashtable.exit_crit_edge:       ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_sethashtable.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then30.for.body.i_crit_edge
  %ha.042.i = phi ptr [ %ha.0.i, %for.body.i.for.body.i_crit_edge ], [ %ha.040.i, %if.then30.for.body.i_crit_edge ]
  %addr.i = getelementptr inbounds %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2
  %27 = ptrtoint ptr %addr.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %addr.i, align 1
  %conv.i.i.i = zext i8 %28 to i32
  %29 = lshr i32 %conv.i.i.i, 6
  %30 = xor i32 %29, %conv.i.i.i
  %arrayidx.i.2.i.i = getelementptr %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2, i32 1
  %31 = ptrtoint ptr %arrayidx.i.2.i.i to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %arrayidx.i.2.i.i, align 1
  %conv.i.2.i.i = zext i8 %32 to i32
  %33 = lshr i32 %conv.i.2.i.i, 4
  %34 = xor i32 %30, %33
  %arrayidx.i.3.i.i = getelementptr %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2, i32 2
  %35 = ptrtoint ptr %arrayidx.i.3.i.i to i32
  call void @__asan_load1_noabort(i32 %35)
  %36 = load i8, ptr %arrayidx.i.3.i.i, align 1
  %conv.i.3.i.i = zext i8 %36 to i32
  %37 = lshr i32 %conv.i.3.i.i, 2
  %38 = xor i32 %34, %37
  %arrayidx.i.4.i.i = getelementptr %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2, i32 3
  %39 = ptrtoint ptr %arrayidx.i.4.i.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %arrayidx.i.4.i.i, align 1
  %conv.i.4.i.i = zext i8 %40 to i32
  %41 = xor i32 %38, %conv.i.4.i.i
  %42 = lshr i32 %conv.i.4.i.i, 6
  %43 = xor i32 %41, %42
  %arrayidx.i.6.i.i = getelementptr %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2, i32 4
  %44 = ptrtoint ptr %arrayidx.i.6.i.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %arrayidx.i.6.i.i, align 1
  %conv.i.6.i.i = zext i8 %45 to i32
  %46 = lshr i32 %conv.i.6.i.i, 4
  %47 = xor i32 %43, %46
  %arrayidx.i.7.i.i = getelementptr %struct.netdev_hw_addr, ptr %ha.042.i, i32 0, i32 2, i32 5
  %48 = ptrtoint ptr %arrayidx.i.7.i.i to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %arrayidx.i.7.i.i, align 1
  %conv.i.7.i.i = zext i8 %49 to i32
  %50 = lshr i32 %conv.i.7.i.i, 2
  %51 = xor i32 %47, %50
  %xor.7.i.i = and i32 %51, 1
  %52 = lshr i32 %conv.i.i.i, 1
  %53 = and i32 %52, 1
  %54 = lshr i32 %conv.i.i.i, 7
  %xor.1.1.i.i = xor i32 %53, %54
  %55 = lshr i32 %conv.i.2.i.i, 5
  %56 = and i32 %55, 1
  %xor.2.1.i.i = xor i32 %xor.1.1.i.i, %56
  %57 = lshr i32 %conv.i.3.i.i, 3
  %58 = and i32 %57, 1
  %xor.3.1.i.i = xor i32 %xor.2.1.i.i, %58
  %59 = lshr i32 %conv.i.4.i.i, 1
  %60 = and i32 %59, 1
  %61 = lshr i32 %conv.i.4.i.i, 7
  %62 = lshr i32 %conv.i.6.i.i, 5
  %63 = and i32 %62, 1
  %64 = lshr i32 %conv.i.7.i.i, 3
  %65 = and i32 %64, 1
  %xor.4.1.i.i = xor i32 %xor.3.1.i.i, %61
  %xor.5.1.i.i = xor i32 %xor.4.1.i.i, %60
  %xor.6.1.i.i = xor i32 %xor.5.1.i.i, %63
  %xor.7.1.i.i = xor i32 %xor.6.1.i.i, %65
  %shl.1.i.i = shl i32 %xor.7.1.i.i, 1
  %or.1.i.i = or i32 %shl.1.i.i, %xor.7.i.i
  %66 = lshr i32 %conv.i.i.i, 2
  %67 = xor i32 %66, %conv.i.2.i.i
  %68 = lshr i32 %conv.i.2.i.i, 6
  %69 = xor i32 %67, %68
  %70 = lshr i32 %conv.i.3.i.i, 4
  %71 = xor i32 %69, %70
  %72 = lshr i32 %conv.i.4.i.i, 2
  %73 = xor i32 %71, %72
  %74 = xor i32 %73, %conv.i.6.i.i
  %75 = lshr i32 %conv.i.6.i.i, 6
  %76 = xor i32 %74, %75
  %77 = lshr i32 %conv.i.7.i.i, 4
  %78 = xor i32 %76, %77
  %xor.7.2.i.i = shl i32 %78, 2
  %shl.2.i.i = and i32 %xor.7.2.i.i, 4
  %or.2.i.i = or i32 %or.1.i.i, %shl.2.i.i
  %79 = lshr i32 %conv.i.i.i, 3
  %80 = lshr i32 %conv.i.2.i.i, 1
  %81 = xor i32 %80, %79
  %xor.1.3.i.i = and i32 %81, 1
  %82 = lshr i32 %conv.i.2.i.i, 7
  %xor.2.3.i.i = xor i32 %xor.1.3.i.i, %82
  %83 = lshr i32 %conv.i.3.i.i, 5
  %84 = and i32 %83, 1
  %xor.3.3.i.i = xor i32 %xor.2.3.i.i, %84
  %85 = lshr i32 %conv.i.4.i.i, 3
  %86 = and i32 %85, 1
  %xor.4.3.i.i = xor i32 %xor.3.3.i.i, %86
  %87 = lshr i32 %conv.i.6.i.i, 1
  %88 = and i32 %87, 1
  %89 = lshr i32 %conv.i.6.i.i, 7
  %90 = lshr i32 %conv.i.7.i.i, 5
  %91 = and i32 %90, 1
  %xor.5.3.i.i = xor i32 %xor.4.3.i.i, %89
  %xor.6.3.i.i = xor i32 %xor.5.3.i.i, %88
  %xor.7.3.i.i = xor i32 %xor.6.3.i.i, %91
  %shl.3.i.i = shl i32 %xor.7.3.i.i, 3
  %or.3.i.i = or i32 %or.2.i.i, %shl.3.i.i
  %92 = lshr i32 %conv.i.i.i, 4
  %93 = lshr i32 %conv.i.2.i.i, 2
  %94 = xor i32 %93, %92
  %95 = xor i32 %94, %conv.i.3.i.i
  %96 = lshr i32 %conv.i.3.i.i, 6
  %97 = xor i32 %95, %96
  %98 = lshr i32 %conv.i.4.i.i, 4
  %99 = xor i32 %97, %98
  %100 = lshr i32 %conv.i.6.i.i, 2
  %101 = xor i32 %99, %100
  %102 = xor i32 %101, %conv.i.7.i.i
  %103 = lshr i32 %conv.i.7.i.i, 6
  %104 = xor i32 %102, %103
  %xor.7.4.i.i = shl i32 %104, 4
  %or.4.i.i = or i32 %or.3.i.i, %xor.7.4.i.i
  %105 = lshr i32 %conv.i.i.i, 5
  %106 = lshr i32 %conv.i.2.i.i, 3
  %107 = xor i32 %106, %105
  %108 = lshr i32 %conv.i.3.i.i, 1
  %109 = xor i32 %107, %108
  %xor.2.5.i.i = and i32 %109, 1
  %110 = lshr i32 %conv.i.3.i.i, 7
  %xor.3.5.i.i = xor i32 %xor.2.5.i.i, %110
  %111 = lshr i32 %conv.i.4.i.i, 5
  %112 = and i32 %111, 1
  %xor.4.5.i.i = xor i32 %xor.3.5.i.i, %112
  %113 = lshr i32 %conv.i.6.i.i, 3
  %114 = and i32 %113, 1
  %xor.5.5.i.i = xor i32 %xor.4.5.i.i, %114
  %115 = lshr i32 %conv.i.7.i.i, 1
  %116 = and i32 %115, 1
  %117 = lshr i32 %conv.i.7.i.i, 7
  %xor.6.5.i.i = xor i32 %xor.5.5.i.i, %117
  %xor.7.5.i.i = xor i32 %xor.6.5.i.i, %116
  %shl.5.i.i = shl nuw nsw i32 %xor.7.5.i.i, 5
  %or.5.i.i = or i32 %or.3.i.i, %shl.5.i.i
  %and.i = and i32 %or.4.i.i, 31
  %shl.i = shl nuw i32 1, %and.i
  %shr.i = lshr i32 %or.5.i.i, 5
  %arrayidx6.i = getelementptr [2 x i32], ptr %mc_filter.i, i32 0, i32 %shr.i
  %118 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load i32, ptr %arrayidx6.i, align 4
  %or.i = or i32 %shl.i, %119
  store i32 %or.i, ptr %arrayidx6.i, align 4
  %120 = ptrtoint ptr %ha.042.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %ha.0.i = load ptr, ptr %ha.042.i, align 4
  %cmp.not.i = icmp eq ptr %ha.0.i, %mc.i
  br i1 %cmp.not.i, label %for.body.i.macb_sethashtable.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.macb_sethashtable.exit_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_sethashtable.exit

macb_sethashtable.exit:                           ; preds = %for.body.i.macb_sethashtable.exit_crit_edge, %if.then30.macb_sethashtable.exit_crit_edge
  %caps.i.i = getelementptr i8, ptr %dev, i32 18468
  %121 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %122)
  %tobool.i.i = icmp slt i32 %122, 0
  %macb_reg_writel.i = getelementptr i8, ptr %dev, i32 2316
  %123 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %macb_reg_writel.i, align 4
  %125 = ptrtoint ptr %mc_filter.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load i32, ptr %mc_filter.i, align 4
  %..i = select i1 %tobool.i.i, i32 128, i32 144
  tail call void %124(ptr noundef %add.ptr.i, i32 noundef %..i, i32 noundef %126) #21
  %127 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %128)
  %tobool.i39.i = icmp slt i32 %128, 0
  %.sink43.i = select i1 %tobool.i39.i, i32 132, i32 148
  %129 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %macb_reg_writel.i, align 4
  %131 = ptrtoint ptr %23 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %23, align 4
  tail call void %130(ptr noundef %add.ptr.i, i32 noundef %.sink43.i, i32 noundef %132) #21
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %mc_filter.i) #21
  %or31 = or i32 %cfg.0, 64
  br label %if.end52

if.else32:                                        ; preds = %if.else29
  %and34 = and i32 %3, -513
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.else32.if.end52_crit_edge, label %if.then36

if.else32.if.end52_crit_edge:                     ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end52

if.then36:                                        ; preds = %if.else32
  call void @__sanitizer_cov_trace_pc() #23
  %caps.i99 = getelementptr i8, ptr %dev, i32 18468
  %133 = ptrtoint ptr %caps.i99 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %caps.i99, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %134)
  %tobool.i100 = icmp slt i32 %134, 0
  %macb_reg_writel39 = getelementptr i8, ptr %dev, i32 2316
  %135 = ptrtoint ptr %macb_reg_writel39 to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %macb_reg_writel39, align 4
  %.108 = select i1 %tobool.i100, i32 128, i32 144
  tail call void %136(ptr noundef %add.ptr.i, i32 noundef %.108, i32 noundef 0) #21
  %137 = ptrtoint ptr %caps.i99 to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load i32, ptr %caps.i99, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %138)
  %tobool.i102 = icmp slt i32 %138, 0
  %.sink106 = select i1 %tobool.i102, i32 132, i32 148
  %macb_reg_writel47 = getelementptr i8, ptr %dev, i32 2316
  %139 = ptrtoint ptr %macb_reg_writel47 to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %macb_reg_writel47, align 4
  tail call void %140(ptr noundef %add.ptr.i, i32 noundef %.sink106, i32 noundef 0) #21
  %and49 = and i32 %cfg.0, -65
  br label %if.end52

if.end52:                                         ; preds = %if.then36, %if.else32.if.end52_crit_edge, %macb_sethashtable.exit, %if.then16
  %cfg.1 = phi i32 [ %or28, %if.then16 ], [ %and49, %if.then36 ], [ %cfg.0, %if.else32.if.end52_crit_edge ], [ %or31, %macb_sethashtable.exit ]
  %macb_reg_writel53 = getelementptr i8, ptr %dev, i32 2316
  %141 = ptrtoint ptr %macb_reg_writel53 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %macb_reg_writel53, align 4
  tail call void %142(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %cfg.1) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_mac_addr(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @eth_validate_addr(ptr noundef) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_ioctl(ptr noundef %dev, ptr noundef %rq, i32 noundef %cmd) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %ptp_info = getelementptr i8, ptr %dev, i32 19260
  %2 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ptp_info, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.end.if.end8_crit_edge, label %if.then2

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then2:                                         ; preds = %if.end
  %4 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.123)
  switch i32 %cmd, label %if.then2.if.end8_crit_edge [
    i32 35248, label %sw.bb
    i32 35249, label %sw.bb5
  ]

if.then2.if.end8_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

sw.bb:                                            ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  %set_hwtst = getelementptr inbounds %struct.macb_ptp_info, ptr %3, i32 0, i32 6
  %5 = ptrtoint ptr %set_hwtst to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %set_hwtst, align 4
  %call4 = tail call i32 %6(ptr noundef %dev, ptr noundef %rq, i32 noundef 35248) #21
  br label %cleanup

sw.bb5:                                           ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #23
  %get_hwtst = getelementptr inbounds %struct.macb_ptp_info, ptr %3, i32 0, i32 5
  %7 = ptrtoint ptr %get_hwtst to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %get_hwtst, align 4
  %call7 = tail call i32 %8(ptr noundef %dev, ptr noundef %rq) #21
  br label %cleanup

if.end8:                                          ; preds = %if.then2.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %phylink = getelementptr i8, ptr %dev, i32 18424
  %9 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %phylink, align 8
  %call9 = tail call i32 @phylink_mii_ioctl(ptr noundef %10, ptr noundef %rq, i32 noundef %cmd) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %sw.bb5, %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %if.end8 ], [ %call7, %sw.bb5 ], [ %call4, %sw.bb ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macb_change_mtu(ptr noundef %dev, i32 noundef %new_mtu) #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %state.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 6
  %0 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %mtu = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 20
  %2 = ptrtoint ptr %mtu to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %new_mtu, ptr %mtu, align 4
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -16, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @macb_get_stats(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %dev1 = getelementptr i8, ptr %dev, i32 18220
  %0 = ptrtoint ptr %dev1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev1, align 4
  %caps.i = getelementptr i8, ptr %dev, i32 18468
  %2 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i = icmp slt i32 %3, 0
  br i1 %tobool.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %state.i.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %state.i.i, align 4
  %and1.i.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %if.then.cleanup_crit_edge, label %if.end.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @gem_update_stats(ptr noundef %add.ptr.i) #21
  %rx_frame_check_sequence_errors.i = getelementptr i8, ptr %dev, i32 18368
  %6 = ptrtoint ptr %rx_frame_check_sequence_errors.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rx_frame_check_sequence_errors.i, align 4
  %rx_alignment_errors.i = getelementptr i8, ptr %dev, i32 18380
  %8 = ptrtoint ptr %rx_alignment_errors.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_alignment_errors.i, align 4
  %add.i = add i32 %9, %7
  %rx_resource_errors.i = getelementptr i8, ptr %dev, i32 18384
  %10 = ptrtoint ptr %rx_resource_errors.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rx_resource_errors.i, align 4
  %add2.i = add i32 %add.i, %11
  %rx_overruns.i = getelementptr i8, ptr %dev, i32 18388
  %12 = ptrtoint ptr %rx_overruns.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rx_overruns.i, align 4
  %add3.i = add i32 %add2.i, %13
  %rx_oversize_frames.i = getelementptr i8, ptr %dev, i32 18360
  %14 = ptrtoint ptr %rx_oversize_frames.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %rx_oversize_frames.i, align 4
  %add4.i = add i32 %add3.i, %15
  %rx_jabbers.i = getelementptr i8, ptr %dev, i32 18364
  %16 = ptrtoint ptr %rx_jabbers.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rx_jabbers.i, align 4
  %add5.i = add i32 %add4.i, %17
  %rx_undersized_frames.i = getelementptr i8, ptr %dev, i32 18356
  %18 = ptrtoint ptr %rx_undersized_frames.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %rx_undersized_frames.i, align 4
  %add6.i = add i32 %add5.i, %19
  %rx_length_field_frame_errors.i = getelementptr i8, ptr %dev, i32 18372
  %20 = ptrtoint ptr %rx_length_field_frame_errors.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rx_length_field_frame_errors.i, align 4
  %add7.i = add i32 %add6.i, %21
  %rx_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 4
  %22 = ptrtoint ptr %rx_errors.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %add7.i, ptr %rx_errors.i, align 4
  %tx_late_collisions.i = getelementptr i8, ptr %dev, i32 18292
  %23 = ptrtoint ptr %tx_late_collisions.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %tx_late_collisions.i, align 4
  %tx_excessive_collisions.i = getelementptr i8, ptr %dev, i32 18288
  %25 = ptrtoint ptr %tx_excessive_collisions.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %tx_excessive_collisions.i, align 4
  %add8.i = add i32 %26, %24
  %tx_underrun.i = getelementptr i8, ptr %dev, i32 18276
  %27 = ptrtoint ptr %tx_underrun.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %tx_underrun.i, align 4
  %add9.i = add i32 %add8.i, %28
  %tx_carrier_sense_errors.i = getelementptr i8, ptr %dev, i32 18300
  %29 = ptrtoint ptr %tx_carrier_sense_errors.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %tx_carrier_sense_errors.i, align 4
  %add10.i = add i32 %add9.i, %30
  %tx_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 5
  %31 = ptrtoint ptr %tx_errors.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %add10.i, ptr %tx_errors.i, align 4
  %rx_multicast_frames.i = getelementptr i8, ptr %dev, i32 18320
  %32 = ptrtoint ptr %rx_multicast_frames.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rx_multicast_frames.i, align 4
  %multicast.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 8
  %34 = ptrtoint ptr %multicast.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %multicast.i, align 4
  %tx_single_collision_frames.i = getelementptr i8, ptr %dev, i32 18280
  %35 = ptrtoint ptr %tx_single_collision_frames.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %tx_single_collision_frames.i, align 4
  %tx_multiple_collision_frames.i = getelementptr i8, ptr %dev, i32 18284
  %37 = ptrtoint ptr %tx_multiple_collision_frames.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tx_multiple_collision_frames.i, align 4
  %add11.i = add i32 %38, %36
  %39 = load i32, ptr %tx_excessive_collisions.i, align 4
  %add13.i = add i32 %add11.i, %39
  %collisions.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 9
  %40 = ptrtoint ptr %collisions.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %add13.i, ptr %collisions.i, align 4
  %41 = load i32, ptr %rx_oversize_frames.i, align 4
  %42 = load i32, ptr %rx_jabbers.i, align 4
  %add16.i = add i32 %42, %41
  %43 = load i32, ptr %rx_undersized_frames.i, align 4
  %add18.i = add i32 %add16.i, %43
  %44 = load i32, ptr %rx_length_field_frame_errors.i, align 4
  %add20.i = add i32 %add18.i, %44
  %rx_length_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 10
  %45 = ptrtoint ptr %rx_length_errors.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %add20.i, ptr %rx_length_errors.i, align 4
  %46 = load i32, ptr %rx_resource_errors.i, align 4
  br label %cleanup.sink.split

if.end:                                           ; preds = %entry
  %hw_stats.i = getelementptr i8, ptr %dev, i32 18224
  %add.ptr.i78 = getelementptr i8, ptr %dev, i32 18308
  %cmp2031.i = icmp ult ptr %hw_stats.i, %add.ptr.i78
  br i1 %cmp2031.i, label %for.body.lr.ph.i, label %if.end.macb_update_stats.exit_crit_edge

if.end.macb_update_stats.exit_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_update_stats.exit

for.body.lr.ph.i:                                 ; preds = %if.end
  %macb_reg_readl.i = getelementptr i8, ptr %dev, i32 2312
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %p.033.i = phi ptr [ %hw_stats.i, %for.body.lr.ph.i ], [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ]
  %offset.032.i = phi i32 [ 60, %for.body.lr.ph.i ], [ %add21.i, %for.body.i.for.body.i_crit_edge ]
  %47 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %macb_reg_readl.i, align 8
  %call.i = tail call i32 %48(ptr noundef %add.ptr.i, i32 noundef %offset.032.i) #21
  %49 = ptrtoint ptr %p.033.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %p.033.i, align 4
  %add.i79 = add i32 %50, %call.i
  store i32 %add.i79, ptr %p.033.i, align 4
  %incdec.ptr.i = getelementptr i32, ptr %p.033.i, i32 1
  %add21.i = add i32 %offset.032.i, 4
  %cmp20.i = icmp ult ptr %incdec.ptr.i, %add.ptr.i78
  br i1 %cmp20.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.macb_update_stats.exit_crit_edge

for.body.i.macb_update_stats.exit_crit_edge:      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_update_stats.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

macb_update_stats.exit:                           ; preds = %for.body.i.macb_update_stats.exit_crit_edge, %if.end.macb_update_stats.exit_crit_edge
  %rx_fcs_errors = getelementptr i8, ptr %dev, i32 18244
  %51 = ptrtoint ptr %rx_fcs_errors to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %rx_fcs_errors, align 4
  %rx_align_errors = getelementptr i8, ptr %dev, i32 18248
  %53 = ptrtoint ptr %rx_align_errors to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rx_align_errors, align 4
  %add = add i32 %54, %52
  %rx_resource_errors = getelementptr i8, ptr %dev, i32 18272
  %55 = ptrtoint ptr %rx_resource_errors to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rx_resource_errors, align 4
  %add4 = add i32 %add, %56
  %rx_overruns = getelementptr i8, ptr %dev, i32 18276
  %57 = ptrtoint ptr %rx_overruns to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %rx_overruns, align 4
  %add5 = add i32 %add4, %58
  %rx_oversize_pkts = getelementptr i8, ptr %dev, i32 18284
  %59 = ptrtoint ptr %rx_oversize_pkts to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %rx_oversize_pkts, align 4
  %add6 = add i32 %add5, %60
  %rx_jabbers = getelementptr i8, ptr %dev, i32 18288
  %61 = ptrtoint ptr %rx_jabbers to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %rx_jabbers, align 4
  %add7 = add i32 %add6, %62
  %rx_undersize_pkts = getelementptr i8, ptr %dev, i32 18292
  %63 = ptrtoint ptr %rx_undersize_pkts to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %rx_undersize_pkts, align 4
  %add8 = add i32 %add7, %64
  %rx_length_mismatch = getelementptr i8, ptr %dev, i32 18300
  %65 = ptrtoint ptr %rx_length_mismatch to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %rx_length_mismatch, align 4
  %add9 = add i32 %add8, %66
  %rx_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 4
  %67 = ptrtoint ptr %rx_errors to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %add9, ptr %rx_errors, align 4
  %tx_late_cols = getelementptr i8, ptr %dev, i32 18256
  %68 = ptrtoint ptr %tx_late_cols to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %tx_late_cols, align 4
  %tx_excessive_cols = getelementptr i8, ptr %dev, i32 18260
  %70 = ptrtoint ptr %tx_excessive_cols to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %tx_excessive_cols, align 4
  %add10 = add i32 %71, %69
  %tx_underruns = getelementptr i8, ptr %dev, i32 18264
  %72 = ptrtoint ptr %tx_underruns to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %tx_underruns, align 4
  %add11 = add i32 %add10, %73
  %tx_carrier_errors = getelementptr i8, ptr %dev, i32 18268
  %74 = ptrtoint ptr %tx_carrier_errors to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %tx_carrier_errors, align 4
  %add12 = add i32 %add11, %75
  %sqe_test_errors = getelementptr i8, ptr %dev, i32 18296
  %76 = ptrtoint ptr %sqe_test_errors to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %sqe_test_errors, align 4
  %add13 = add i32 %add12, %77
  %tx_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 5
  %78 = ptrtoint ptr %tx_errors to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %add13, ptr %tx_errors, align 4
  %tx_single_cols = getelementptr i8, ptr %dev, i32 18232
  %79 = ptrtoint ptr %tx_single_cols to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %tx_single_cols, align 4
  %tx_multiple_cols = getelementptr i8, ptr %dev, i32 18236
  %81 = ptrtoint ptr %tx_multiple_cols to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %tx_multiple_cols, align 4
  %add14 = add i32 %82, %80
  %83 = load i32, ptr %tx_excessive_cols, align 4
  %add16 = add i32 %add14, %83
  %collisions = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 9
  %84 = ptrtoint ptr %collisions to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %add16, ptr %collisions, align 4
  %85 = load i32, ptr %rx_oversize_pkts, align 4
  %86 = load i32, ptr %rx_jabbers, align 4
  %add19 = add i32 %86, %85
  %87 = load i32, ptr %rx_undersize_pkts, align 4
  %add21 = add i32 %add19, %87
  %88 = load i32, ptr %rx_length_mismatch, align 4
  %add23 = add i32 %add21, %88
  %rx_length_errors = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 10
  %89 = ptrtoint ptr %rx_length_errors to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %add23, ptr %rx_length_errors, align 4
  %90 = load i32, ptr %rx_resource_errors, align 4
  %91 = load i32, ptr %rx_overruns, align 4
  %add26 = add i32 %91, %90
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %macb_update_stats.exit, %if.end.i
  %.sink = phi i32 [ %46, %if.end.i ], [ %add26, %macb_update_stats.exit ]
  %rx_frame_check_sequence_errors.i.sink = phi ptr [ %rx_frame_check_sequence_errors.i, %if.end.i ], [ %rx_fcs_errors, %macb_update_stats.exit ]
  %rx_alignment_errors.i.sink = phi ptr [ %rx_alignment_errors.i, %if.end.i ], [ %rx_align_errors, %macb_update_stats.exit ]
  %rx_overruns.i.sink = phi ptr [ %rx_overruns.i, %if.end.i ], [ %rx_overruns, %macb_update_stats.exit ]
  %tx_excessive_collisions.i.sink = phi ptr [ %tx_excessive_collisions.i, %if.end.i ], [ %tx_excessive_cols, %macb_update_stats.exit ]
  %tx_carrier_sense_errors.i.sink = phi ptr [ %tx_carrier_sense_errors.i, %if.end.i ], [ %tx_carrier_errors, %macb_update_stats.exit ]
  %tx_underrun.i.sink = phi ptr [ %tx_underrun.i, %if.end.i ], [ %tx_underruns, %macb_update_stats.exit ]
  %rx_over_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 11
  %92 = ptrtoint ptr %rx_over_errors.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %.sink, ptr %rx_over_errors.i, align 4
  %93 = ptrtoint ptr %rx_frame_check_sequence_errors.i.sink to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %rx_frame_check_sequence_errors.i.sink, align 4
  %rx_crc_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 12
  %95 = ptrtoint ptr %rx_crc_errors.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %94, ptr %rx_crc_errors.i, align 4
  %96 = ptrtoint ptr %rx_alignment_errors.i.sink to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %rx_alignment_errors.i.sink, align 4
  %rx_frame_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 13
  %98 = ptrtoint ptr %rx_frame_errors.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %97, ptr %rx_frame_errors.i, align 4
  %99 = ptrtoint ptr %rx_overruns.i.sink to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %rx_overruns.i.sink, align 4
  %rx_fifo_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 14
  %101 = ptrtoint ptr %rx_fifo_errors.i to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %100, ptr %rx_fifo_errors.i, align 4
  %102 = ptrtoint ptr %tx_excessive_collisions.i.sink to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %tx_excessive_collisions.i.sink, align 4
  %tx_aborted_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 16
  %104 = ptrtoint ptr %tx_aborted_errors.i to i32
  call void @__asan_store4_noabort(i32 %104)
  store i32 %103, ptr %tx_aborted_errors.i, align 4
  %105 = ptrtoint ptr %tx_carrier_sense_errors.i.sink to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load i32, ptr %tx_carrier_sense_errors.i.sink, align 4
  %tx_carrier_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 17
  %107 = ptrtoint ptr %tx_carrier_errors.i to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %106, ptr %tx_carrier_errors.i, align 4
  %108 = ptrtoint ptr %tx_underrun.i.sink to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %tx_underrun.i.sink, align 4
  %tx_fifo_errors.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36, i32 18
  %110 = ptrtoint ptr %tx_fifo_errors.i to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %109, ptr %tx_fifo_errors.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.then.cleanup_crit_edge
  %retval.0 = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 36
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_poll_controller(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !317
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end11_crit_edge

entry.do.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end11

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  br label %do.end11

do.end11:                                         ; preds = %if.then, %entry.do.end11_crit_edge
  %num_queues = getelementptr i8, ptr %dev, i32 2332
  %1 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp1253.not = icmp eq i32 %2, 0
  br i1 %cmp1253.not, label %do.end11.do.body15_crit_edge, label %for.body.lr.ph

do.end11.do.body15_crit_edge:                     ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body15

for.body.lr.ph:                                   ; preds = %do.end11
  %queues = getelementptr i8, ptr %dev, i32 2344
  %irq = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 64
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %queue.055 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %q.054 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %3 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %irq, align 4
  %call14 = tail call i32 @macb_interrupt(i32 noundef %4, ptr noundef %queue.055)
  %inc = add nuw i32 %q.054, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.055, i32 1
  %5 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %num_queues, align 4
  %cmp12 = icmp ult i32 %inc, %6
  br i1 %cmp12, label %for.body.for.body_crit_edge, label %for.body.do.body15_crit_edge

for.body.do.body15_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body15

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

do.body15:                                        ; preds = %for.body.do.body15_crit_edge, %do.end11.do.body15_crit_edge
  br i1 %tobool.not, label %if.then24, label %do.body15.do.body26_crit_edge

do.body15.do.body26_crit_edge:                    ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body26

if.then24:                                        ; preds = %do.body15
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_on() #21
  br label %do.body26

do.body26:                                        ; preds = %if.then24, %do.body15.do.body26_crit_edge
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !318
  %and.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool34.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool34.not, label %if.then38, label %do.body26.do.end41_crit_edge, !prof !301

do.body26.do.end41_crit_edge:                     ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end41

if.then38:                                        ; preds = %do.body26
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end41

do.end41:                                         ; preds = %if.then38, %do.body26.do.end41_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #21, !srcloc !319
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_set_features(ptr noundef %netdev, i64 noundef %features) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %features1 = getelementptr inbounds %struct.net_device, ptr %netdev, i32 0, i32 23
  %0 = ptrtoint ptr %features1 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %features1, align 16
  %xor = xor i64 %1, %features
  %and = and i64 %xor, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %caps.i.i = getelementptr i8, ptr %netdev, i32 18468
  %2 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i.i = icmp slt i32 %3, 0
  br i1 %tobool.i.i, label %if.end.i, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_readl.i = getelementptr i8, ptr %netdev, i32 2312
  %4 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl.i, align 8
  %call1.i = tail call i32 %5(ptr noundef %add.ptr.i, i32 noundef 16) #21
  %and3.i = and i32 %call1.i, -2049
  %6 = trunc i64 %features to i32
  %7 = shl i32 %6, 8
  %8 = and i32 %7, 2048
  %val.0.i = or i32 %and3.i, %8
  %macb_reg_writel.i = getelementptr i8, ptr %netdev, i32 2316
  %9 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %10(ptr noundef %add.ptr.i, i32 noundef 16, i32 noundef %val.0.i) #21
  br label %if.end

if.end:                                           ; preds = %if.end.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i64 %xor, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and2)
  %tobool3.not = icmp eq i64 %and2, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.then4:                                         ; preds = %if.end
  %dev.i = getelementptr i8, ptr %netdev, i32 18220
  %11 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev.i, align 4
  %caps.i.i18 = getelementptr i8, ptr %netdev, i32 18468
  %13 = ptrtoint ptr %caps.i.i18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %caps.i.i18, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i.i19 = icmp slt i32 %14, 0
  br i1 %tobool.i.i19, label %if.end.i22, label %if.then4.if.end5_crit_edge

if.then4.if.end5_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end5

if.end.i22:                                       ; preds = %if.then4
  %macb_reg_readl.i20 = getelementptr i8, ptr %netdev, i32 2312
  %15 = ptrtoint ptr %macb_reg_readl.i20 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %macb_reg_readl.i20, align 8
  %call1.i21 = tail call i32 %16(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %and.i = and i64 %features, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %if.end.i22.if.else.i_crit_edge, label %land.lhs.true.i

if.end.i22.if.else.i_crit_edge:                   ; preds = %if.end.i22
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.end.i22
  %flags.i = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 14
  %17 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags.i, align 8
  %and2.i = and i32 %18, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %if.then4.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i

if.then4.i:                                       ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #23
  %or.i = or i32 %call1.i21, 16777216
  br label %if.end6.i

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.end.i22.if.else.i_crit_edge
  %and5.i = and i32 %call1.i21, -16777217
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.else.i, %if.then4.i
  %val.0.i23 = phi i32 [ %and5.i, %if.else.i ], [ %or.i, %if.then4.i ]
  %macb_reg_writel.i24 = getelementptr i8, ptr %netdev, i32 2316
  %19 = ptrtoint ptr %macb_reg_writel.i24 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macb_reg_writel.i24, align 4
  tail call void %20(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %val.0.i23) #21
  br label %if.end5

if.end5:                                          ; preds = %if.end6.i, %if.then4.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %and6 = and i64 %xor, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and6)
  %tobool7.not = icmp eq i64 %and6, 0
  br i1 %tobool7.not, label %if.end5.if.end9_crit_edge, label %if.then8

if.end5.if.end9_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.then8:                                         ; preds = %if.end5
  %caps.i.i25 = getelementptr i8, ptr %netdev, i32 18468
  %21 = ptrtoint ptr %caps.i.i25 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %caps.i.i25, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.i.i26 = icmp slt i32 %22, 0
  br i1 %tobool.i.i26, label %if.end.i28, label %if.then8.if.end9_crit_edge

if.then8.if.end9_crit_edge:                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end9

if.end.i28:                                       ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  %and.i27 = and i64 %features, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i27)
  %tobool.i = icmp ne i64 %and.i27, 0
  tail call fastcc void @gem_enable_flow_filters(ptr noundef %add.ptr.i, i1 noundef zeroext %tobool.i) #21
  br label %if.end9

if.end9:                                          ; preds = %if.end.i28, %if.then8.if.end9_crit_edge, %if.end5.if.end9_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_netdev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macb_alloc_consistent(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp107.not = icmp eq i32 %1, 0
  br i1 %cmp107.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %hw_dma_cap.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 35
  %tx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 6
  %tx_bd_rd_prefetch = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 47
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %dev9 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %rx_bd_rd_prefetch = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 46
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %queue.0110 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %q.0108 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %hw_dma_cap.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %hw_dma_cap.i, align 8
  %switch.tableidx = add i8 %3, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %4 = icmp ult i8 %switch.tableidx, 3
  br i1 %4, label %switch.lookup, label %for.body.macb_dma_desc_get_size.exit_crit_edge

for.body.macb_dma_desc_get_size.exit_crit_edge:   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit

switch.lookup:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %5 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.macb_alloc_consistent, i32 0, i32 %5
  %6 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %6)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_dma_desc_get_size.exit

macb_dma_desc_get_size.exit:                      ; preds = %switch.lookup, %for.body.macb_dma_desc_get_size.exit_crit_edge
  %desc_size.0.i = phi i32 [ %switch.load, %switch.lookup ], [ 8, %for.body.macb_dma_desc_get_size.exit_crit_edge ]
  %7 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tx_ring_size, align 8
  %mul = mul i32 %8, %desc_size.0.i
  %9 = ptrtoint ptr %tx_bd_rd_prefetch to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %tx_bd_rd_prefetch, align 8
  %add = add i32 %mul, %10
  %11 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %12, i32 0, i32 3
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, ptr %queue.0110, i32 0, i32 15
  %call.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev, i32 noundef %add, ptr noundef %tx_ring_dma, i32 noundef 3264, i32 noundef 0) #21
  %tx_ring = getelementptr inbounds %struct.macb_queue, ptr %queue.0110, i32 0, i32 13
  %13 = ptrtoint ptr %tx_ring to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call.i, ptr %tx_ring, align 4
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %macb_dma_desc_get_size.exit.out_err_crit_edge, label %do.body3

macb_dma_desc_get_size.exit.out_err_crit_edge:    ; preds = %macb_dma_desc_get_size.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_err

do.body3:                                         ; preds = %macb_dma_desc_get_size.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_alloc_consistent.__UNIQUE_ID_ddebug496, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_alloc_consistent, %if.then8)) #21
          to label %if.end8.i [label %if.then8], !srcloc !299

if.then8:                                         ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #23
  %14 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %dev9, align 4
  %16 = ptrtoint ptr %tx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %tx_ring_dma, align 4
  %18 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %tx_ring, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_alloc_consistent.__UNIQUE_ID_ddebug496, ptr noundef %15, ptr noundef nonnull @.str.47, i32 noundef %q.0108, i32 noundef %add, i32 noundef %17, ptr noundef %19) #21
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then8, %do.body3
  %20 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tx_ring_size, align 8
  %mul16 = shl i32 %21, 4
  %call9.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %mul16, i32 noundef 3264) #25
  %tx_skb = getelementptr inbounds %struct.macb_queue, ptr %queue.0110, i32 0, i32 14
  %22 = ptrtoint ptr %tx_skb to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call9.i, ptr %tx_skb, align 8
  %tobool19.not = icmp eq ptr %call9.i, null
  br i1 %tobool19.not, label %if.end8.i.out_err_crit_edge, label %if.end21

if.end8.i.out_err_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_err

if.end21:                                         ; preds = %if.end8.i
  %23 = ptrtoint ptr %hw_dma_cap.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %hw_dma_cap.i, align 8
  %switch.tableidx114 = add i8 %24, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx114)
  %25 = icmp ult i8 %switch.tableidx114, 3
  br i1 %25, label %switch.lookup113, label %if.end21.macb_dma_desc_get_size.exit100_crit_edge

if.end21.macb_dma_desc_get_size.exit100_crit_edge: ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit100

switch.lookup113:                                 ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #23
  %26 = sext i8 %switch.tableidx114 to i32
  %switch.gep115 = getelementptr inbounds [3 x i32], ptr @switch.table.macb_alloc_consistent.104, i32 0, i32 %26
  %27 = ptrtoint ptr %switch.gep115 to i32
  call void @__asan_load4_noabort(i32 %27)
  %switch.load116 = load i32, ptr %switch.gep115, align 4
  br label %macb_dma_desc_get_size.exit100

macb_dma_desc_get_size.exit100:                   ; preds = %switch.lookup113, %if.end21.macb_dma_desc_get_size.exit100_crit_edge
  %desc_size.0.i99 = phi i32 [ %switch.load116, %switch.lookup113 ], [ 8, %if.end21.macb_dma_desc_get_size.exit100_crit_edge ]
  %28 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rx_ring_size, align 4
  %mul23 = mul i32 %29, %desc_size.0.i99
  %30 = ptrtoint ptr %rx_bd_rd_prefetch to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rx_bd_rd_prefetch, align 4
  %add24 = add i32 %mul23, %31
  %32 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pdev, align 4
  %dev26 = getelementptr inbounds %struct.platform_device, ptr %33, i32 0, i32 3
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, ptr %queue.0110, i32 0, i32 17
  %call.i101 = tail call ptr @dma_alloc_attrs(ptr noundef %dev26, i32 noundef %add24, ptr noundef %rx_ring_dma, i32 noundef 3264, i32 noundef 0) #21
  %rx_ring = getelementptr inbounds %struct.macb_queue, ptr %queue.0110, i32 0, i32 21
  %34 = ptrtoint ptr %rx_ring to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %call.i101, ptr %rx_ring, align 4
  %tobool29.not = icmp eq ptr %call.i101, null
  br i1 %tobool29.not, label %macb_dma_desc_get_size.exit100.out_err_crit_edge, label %do.body33

macb_dma_desc_get_size.exit100.out_err_crit_edge: ; preds = %macb_dma_desc_get_size.exit100
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_err

do.body33:                                        ; preds = %macb_dma_desc_get_size.exit100
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_alloc_consistent.__UNIQUE_ID_ddebug497, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_alloc_consistent, %if.then45)) #21
          to label %for.inc [label %if.then45], !srcloc !299

if.then45:                                        ; preds = %do.body33
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %dev9 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dev9, align 4
  %37 = ptrtoint ptr %rx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rx_ring_dma, align 4
  %39 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rx_ring, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_alloc_consistent.__UNIQUE_ID_ddebug497, ptr noundef %36, ptr noundef nonnull @.str.48, i32 noundef %add24, i32 noundef %38, ptr noundef %40) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then45, %do.body33
  %inc = add nuw i32 %q.0108, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.0110, i32 1
  %41 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %42
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %macbgem_ops = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 19
  %43 = ptrtoint ptr %macbgem_ops to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %macbgem_ops, align 4
  %call54 = tail call i32 %44(ptr noundef %bp) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %for.end.cleanup_crit_edge, label %for.end.out_err_crit_edge

for.end.out_err_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %out_err

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

out_err:                                          ; preds = %for.end.out_err_crit_edge, %macb_dma_desc_get_size.exit100.out_err_crit_edge, %if.end8.i.out_err_crit_edge, %macb_dma_desc_get_size.exit.out_err_crit_edge
  tail call fastcc void @macb_free_consistent(ptr noundef %bp)
  br label %cleanup

cleanup:                                          ; preds = %out_err, %for.end.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %out_err ], [ 0, %for.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_enable(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_init_hw(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @macb_reset_hw(ptr noundef %bp)
  %dev.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %0 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev.i, align 4
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 86
  %2 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dev_addr.i, align 64
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 4
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #21
  %caps.i.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %7 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.i = icmp slt i32 %8, 0
  %macb_reg_writel.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %9 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_writel.i, align 4
  %..i = select i1 %tobool.i.i, i32 136, i32 152
  tail call void %10(ptr noundef %bp, i32 noundef %..i, i32 noundef %6) #21
  %11 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev.i, align 4
  %dev_addr3.i = getelementptr inbounds %struct.net_device, ptr %12, i32 0, i32 86
  %13 = ptrtoint ptr %dev_addr3.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dev_addr3.i, align 64
  %add.ptr.i = getelementptr i8, ptr %14, i32 4
  %15 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %add.ptr.i, align 2
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #21
  %18 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i91.i = icmp slt i32 %19, 0
  %.sink104.i = select i1 %tobool.i91.i, i32 140, i32 156
  %20 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %macb_reg_writel.i, align 4
  %conv9.i = zext i16 %17 to i32
  tail call void %21(ptr noundef %bp, i32 noundef %.sink104.i, i32 noundef %conv9.i) #21
  %22 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i93.i = icmp slt i32 %23, 0
  %.sink106.i = select i1 %tobool.i93.i, i32 144, i32 160
  %24 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %25(ptr noundef %bp, i32 noundef %.sink106.i, i32 noundef 0) #21
  %26 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i95.i = icmp slt i32 %27, 0
  %.sink108.i = select i1 %tobool.i95.i, i32 148, i32 164
  %28 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %29(ptr noundef %bp, i32 noundef %.sink108.i, i32 noundef 0) #21
  %30 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.i97.i = icmp slt i32 %31, 0
  %.sink110.i = select i1 %tobool.i97.i, i32 152, i32 168
  %32 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %33(ptr noundef %bp, i32 noundef %.sink110.i, i32 noundef 0) #21
  %34 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.i99.i = icmp slt i32 %35, 0
  %.sink112.i = select i1 %tobool.i99.i, i32 156, i32 172
  %36 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %37(ptr noundef %bp, i32 noundef %.sink112.i, i32 noundef 0) #21
  %38 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i101.i = icmp slt i32 %39, 0
  %.sink114.i = select i1 %tobool.i101.i, i32 160, i32 176
  %40 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %41(ptr noundef %bp, i32 noundef %.sink114.i, i32 noundef 0) #21
  %42 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool.i103.i = icmp slt i32 %43, 0
  %.sink116.i = select i1 %tobool.i103.i, i32 164, i32 180
  %44 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %45(ptr noundef %bp, i32 noundef %.sink116.i, i32 noundef 0) #21
  %46 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.i.i70 = icmp slt i32 %47, 0
  %pclk.i.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 12
  %48 = ptrtoint ptr %pclk.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pclk.i.i, align 8
  %call.i.i = tail call i32 @clk_get_rate(ptr noundef %49) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 20000001, i32 %call.i.i)
  %cmp.i.i = icmp ult i32 %call.i.i, 20000001
  br i1 %tobool.i.i70, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  br i1 %cmp.i.i, label %if.then.i.macb_mdc_clk_div.exit_crit_edge, label %if.else.i.i

if.then.i.macb_mdc_clk_div.exit_crit_edge:        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else.i.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 40000001, i32 %call.i.i)
  %cmp1.i.i = icmp ult i32 %call.i.i, 40000001
  br i1 %cmp1.i.i, label %if.else.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else3.i.i

if.else.i.i.macb_mdc_clk_div.exit_crit_edge:      ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else3.i.i:                                     ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 80000001, i32 %call.i.i)
  %cmp4.i.i = icmp ult i32 %call.i.i, 80000001
  br i1 %cmp4.i.i, label %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else6.i.i

if.else3.i.i.macb_mdc_clk_div.exit_crit_edge:     ; preds = %if.else3.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else6.i.i:                                     ; preds = %if.else3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 120000001, i32 %call.i.i)
  %cmp7.i.i = icmp ult i32 %call.i.i, 120000001
  br i1 %cmp7.i.i, label %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge, label %if.else9.i.i

if.else6.i.i.macb_mdc_clk_div.exit_crit_edge:     ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else9.i.i:                                     ; preds = %if.else6.i.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 160000001, i32 %call.i.i)
  %cmp10.i.i = icmp ult i32 %call.i.i, 160000001
  %..i.i = select i1 %cmp10.i.i, i32 1048576, i32 1310720
  br label %macb_mdc_clk_div.exit

if.end.i:                                         ; preds = %entry
  br i1 %cmp.i.i, label %if.end.i.macb_mdc_clk_div.exit_crit_edge, label %if.else.i

if.end.i.macb_mdc_clk_div.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 40000001, i32 %call.i.i)
  %cmp4.i = icmp ult i32 %call.i.i, 40000001
  br i1 %cmp4.i, label %if.else.i.macb_mdc_clk_div.exit_crit_edge, label %if.else6.i

if.else.i.macb_mdc_clk_div.exit_crit_edge:        ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_mdc_clk_div.exit

if.else6.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 80000001, i32 %call.i.i)
  %cmp7.i = icmp ult i32 %call.i.i, 80000001
  %..i71 = select i1 %cmp7.i, i32 2048, i32 3072
  br label %macb_mdc_clk_div.exit

macb_mdc_clk_div.exit:                            ; preds = %if.else6.i, %if.else.i.macb_mdc_clk_div.exit_crit_edge, %if.end.i.macb_mdc_clk_div.exit_crit_edge, %if.else9.i.i, %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge, %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge, %if.else.i.i.macb_mdc_clk_div.exit_crit_edge, %if.then.i.macb_mdc_clk_div.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i.macb_mdc_clk_div.exit_crit_edge ], [ 1024, %if.else.i.macb_mdc_clk_div.exit_crit_edge ], [ %..i71, %if.else6.i ], [ 0, %if.then.i.macb_mdc_clk_div.exit_crit_edge ], [ 262144, %if.else.i.i.macb_mdc_clk_div.exit_crit_edge ], [ 524288, %if.else3.i.i.macb_mdc_clk_div.exit_crit_edge ], [ 786432, %if.else6.i.i.macb_mdc_clk_div.exit_crit_edge ], [ %..i.i, %if.else9.i.i ]
  %50 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %caps.i.i, align 4
  %and = and i32 %51, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %config.0.v = select i1 %tobool.not, i32 164096, i32 163848
  %config.0 = or i32 %config.0.v, %retval.0.i
  %52 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %dev.i, align 4
  %flags = getelementptr inbounds %struct.net_device, ptr %53, i32 0, i32 14
  %54 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %flags, align 8
  %and4 = and i32 %55, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %if.else8, label %if.end16

if.else8:                                         ; preds = %macb_mdc_clk_div.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.i = icmp slt i32 %51, 0
  br i1 %tobool.i, label %if.end16.thread, label %if.end16.thread84

if.end16.thread84:                                ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #23
  %and1986 = shl i32 %55, 4
  %56 = and i32 %and1986, 32
  %57 = or i32 %56, %config.0
  %58 = xor i32 %57, 32
  br label %macb_dbw.exit

if.end16.thread:                                  ; preds = %if.else8
  call void @__sanitizer_cov_trace_pc() #23
  %features = getelementptr inbounds %struct.net_device, ptr %53, i32 0, i32 23
  %59 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %features, align 16
  %and11 = lshr i64 %60, 16
  %61 = trunc i64 %and11 to i32
  %62 = and i32 %61, 16777216
  %and1977 = shl i32 %55, 4
  %63 = and i32 %and1977, 32
  %64 = or i32 %63, %config.0
  %65 = or i32 %64, %62
  %66 = xor i32 %65, 32
  br label %if.end.i74

if.end16:                                         ; preds = %macb_mdc_clk_div.exit
  %and19 = and i32 %55, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  %spec.select68.v = select i1 %tobool20.not, i32 48, i32 16
  %spec.select68 = or i32 %spec.select68.v, %config.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool.i.i73 = icmp slt i32 %51, 0
  br i1 %tobool.i.i73, label %if.end16.if.end.i74_crit_edge, label %if.end16.macb_dbw.exit_crit_edge

if.end16.macb_dbw.exit_crit_edge:                 ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dbw.exit

if.end16.if.end.i74_crit_edge:                    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i74

if.end.i74:                                       ; preds = %if.end16.if.end.i74_crit_edge, %if.end16.thread
  %spec.select6883 = phi i32 [ %66, %if.end16.thread ], [ %spec.select68, %if.end16.if.end.i74_crit_edge ]
  %macb_reg_readl.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %67 = ptrtoint ptr %macb_reg_readl.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %macb_reg_readl.i, align 8
  %call1.i = tail call i32 %68(ptr noundef %bp, i32 noundef 640) #21
  %shr.i = lshr i32 %call1.i, 25
  %and.i = and i32 %shr.i, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and.i)
  %switch.selectcmp.i = icmp eq i32 %and.i, 2
  %switch.select.i = select i1 %switch.selectcmp.i, i32 2097152, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %and.i)
  %switch.selectcmp6.i = icmp eq i32 %and.i, 4
  %switch.select7.i = select i1 %switch.selectcmp6.i, i32 4194304, i32 %switch.select.i
  br label %macb_dbw.exit

macb_dbw.exit:                                    ; preds = %if.end.i74, %if.end16.macb_dbw.exit_crit_edge, %if.end16.thread84
  %spec.select6882 = phi i32 [ %spec.select68, %if.end16.macb_dbw.exit_crit_edge ], [ %spec.select6883, %if.end.i74 ], [ %58, %if.end16.thread84 ]
  %retval.0.i75 = phi i32 [ 0, %if.end16.macb_dbw.exit_crit_edge ], [ %switch.select7.i, %if.end.i74 ], [ 0, %if.end16.thread84 ]
  %or25 = or i32 %retval.0.i75, %spec.select6882
  %69 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %70(ptr noundef %bp, i32 noundef 4, i32 noundef %or25) #21
  %71 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %caps.i.i, align 4
  %and27 = and i32 %72, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %macb_dbw.exit.if.end34_crit_edge, label %land.lhs.true29

macb_dbw.exit.if.end34_crit_edge:                 ; preds = %macb_dbw.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

land.lhs.true29:                                  ; preds = %macb_dbw.exit
  %jumbo_max_len = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 32
  %73 = ptrtoint ptr %jumbo_max_len to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %jumbo_max_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %74)
  %tobool30.not = icmp eq i32 %74, 0
  br i1 %tobool30.not, label %land.lhs.true29.if.end34_crit_edge, label %if.then31

land.lhs.true29.if.end34_crit_edge:               ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end34

if.then31:                                        ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #23
  %75 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %macb_reg_writel.i, align 4
  tail call void %76(ptr noundef %bp, i32 noundef 72, i32 noundef %74) #21
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %land.lhs.true29.if.end34_crit_edge, %macb_dbw.exit.if.end34_crit_edge
  %rx_frm_len_mask = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 31
  %77 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %caps.i.i, align 4
  %and36 = and i32 %78, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and36)
  %tobool37.not = icmp eq i32 %and36, 0
  %spec.store.select = select i1 %tobool37.not, i32 4095, i32 16383
  %79 = ptrtoint ptr %rx_frm_len_mask to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %spec.store.select, ptr %rx_frm_len_mask, align 8
  tail call fastcc void @macb_configure_dma(ptr noundef %bp)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macb_phylink_connect(ptr nocapture noundef readonly %bp) unnamed_addr #2 align 64 {
entry:
  %args.i.i = alloca %struct.of_phandle_args, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %of_node = getelementptr inbounds %struct.platform_device, ptr %1, i32 0, i32 3, i32 27
  %2 = ptrtoint ptr %of_node to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of_node, align 8
  %dev2 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %4 = ptrtoint ptr %dev2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dev2, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %entry.if.then6_crit_edge, label %lor.lhs.false

entry.if.then6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then6

lor.lhs.false:                                    ; preds = %entry
  %phylink = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 21
  %6 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %phylink, align 8
  %call = tail call i32 @phylink_of_phy_connect(ptr noundef %7, ptr noundef nonnull %3, i32 noundef 0) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool4.not = icmp eq i32 %call, 0
  br i1 %tobool4.not, label %lor.lhs.false.if.end16_crit_edge, label %land.lhs.true

lor.lhs.false.if.end16_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

land.lhs.true:                                    ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %args.i.i) #21
  %8 = call ptr @memset(ptr %args.i.i, i32 255, i32 72)
  %call.i.i = call i32 @__of_parse_phandle_with_args(ptr noundef nonnull %3, ptr noundef nonnull @.str.53, ptr noundef null, i32 noundef 0, i32 noundef 0, ptr noundef nonnull %args.i.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %macb_phy_handle_exists.exit, label %macb_phy_handle_exists.exit.thread

macb_phy_handle_exists.exit.thread:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i.i) #21
  call void @of_node_put(ptr noundef null) #21
  br label %if.then6

macb_phy_handle_exists.exit:                      ; preds = %land.lhs.true
  %9 = ptrtoint ptr %args.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %args.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %args.i.i) #21
  call void @of_node_put(ptr noundef %10) #21
  %cmp.i.not = icmp eq ptr %10, null
  br i1 %cmp.i.not, label %macb_phy_handle_exists.exit.if.then6_crit_edge, label %macb_phy_handle_exists.exit.if.then15_crit_edge

macb_phy_handle_exists.exit.if.then15_crit_edge:  ; preds = %macb_phy_handle_exists.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

macb_phy_handle_exists.exit.if.then6_crit_edge:   ; preds = %macb_phy_handle_exists.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then6

if.then6:                                         ; preds = %macb_phy_handle_exists.exit.if.then6_crit_edge, %macb_phy_handle_exists.exit.thread, %entry.if.then6_crit_edge
  %mii_bus = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 20
  %11 = ptrtoint ptr %mii_bus to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %mii_bus, align 4
  %call7 = call ptr @phy_find_first(ptr noundef %12) #21
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.then9, label %if.end13

if.then9:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %5, ptr noundef nonnull @.str.51) #24
  br label %cleanup

if.end13:                                         ; preds = %if.then6
  %phylink11 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 21
  %13 = ptrtoint ptr %phylink11 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %phylink11, align 8
  %call12 = call i32 @phylink_connect_phy(ptr noundef %14, ptr noundef nonnull %call7) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool14.not = icmp eq i32 %call12, 0
  br i1 %tobool14.not, label %if.end13.if.end16_crit_edge, label %if.end13.if.then15_crit_edge

if.end13.if.then15_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then15

if.end13.if.end16_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end16

if.then15:                                        ; preds = %if.end13.if.then15_crit_edge, %macb_phy_handle_exists.exit.if.then15_crit_edge
  %ret.142 = phi i32 [ %call12, %if.end13.if.then15_crit_edge ], [ %call, %macb_phy_handle_exists.exit.if.then15_crit_edge ]
  call void (ptr, ptr, ...) @netdev_err(ptr noundef %5, ptr noundef nonnull @.str.52, i32 noundef %ret.142) #24
  br label %cleanup

if.end16:                                         ; preds = %if.end13.if.end16_crit_edge, %lor.lhs.false.if.end16_crit_edge
  %phylink17 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 21
  %15 = ptrtoint ptr %phylink17 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %phylink17, align 8
  call void @phylink_start(ptr noundef %16) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.then15, %if.then9
  %retval.0 = phi i32 [ %ret.142, %if.then15 ], [ 0, %if.end16 ], [ -6, %if.then9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_reset_hw(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %1(ptr noundef %bp, i32 noundef 0) #21
  %and = and i32 %call, -45
  %or = or i32 %and, 32
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %2 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %3(ptr noundef %bp, i32 noundef 0, i32 noundef %or) #21
  %4 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %5(ptr noundef %bp, i32 noundef 20, i32 noundef -1) #21
  %6 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %7(ptr noundef %bp, i32 noundef 32, i32 noundef -1) #21
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %8 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp37.not = icmp eq i32 %9, 0
  br i1 %cmp37.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %caps = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %queue.039 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %q.038 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %10 = ptrtoint ptr %queue.039 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %queue.039, align 8
  %macb_reg_writel4 = getelementptr inbounds %struct.macb, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %macb_reg_writel4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_writel4, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %queue.039, i32 0, i32 4
  %14 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %IDR, align 8
  tail call void %13(ptr noundef %11, i32 noundef %15, i32 noundef -1) #21
  %16 = ptrtoint ptr %queue.039 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %queue.039, align 8
  %macb_reg_readl7 = getelementptr inbounds %struct.macb, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %macb_reg_readl7 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_readl7, align 8
  %ISR = getelementptr inbounds %struct.macb_queue, ptr %queue.039, i32 0, i32 2
  %20 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ISR, align 8
  %call9 = tail call i32 %19(ptr noundef %17, i32 noundef %21) #21
  %22 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %caps, align 4
  %and10 = and i32 %23, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool.not = icmp eq i32 %and10, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %24 = ptrtoint ptr %queue.039 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %queue.039, align 8
  %macb_reg_writel12 = getelementptr inbounds %struct.macb, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %macb_reg_writel12 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %macb_reg_writel12, align 4
  %28 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %ISR, align 8
  tail call void %27(ptr noundef %25, i32 noundef %29, i32 noundef -1) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %q.038, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.039, i32 1
  %30 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %31
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @napi_disable(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_free_consistent(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %mog_free_rx_buffers = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 19, i32 1
  %0 = ptrtoint ptr %mog_free_rx_buffers to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mog_free_rx_buffers, align 4
  tail call void %1(ptr noundef %bp) #21
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %2 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp42.not = icmp eq i32 %3, 0
  br i1 %cmp42.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  %hw_dma_cap.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 35
  %tx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 6
  %tx_bd_rd_prefetch = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 47
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 5
  %rx_bd_rd_prefetch = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 46
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %q.044 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %queue.043 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %tx_skb = getelementptr inbounds %struct.macb_queue, ptr %queue.043, i32 0, i32 14
  %4 = ptrtoint ptr %tx_skb to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %tx_skb, align 8
  tail call void @kfree(ptr noundef %5) #21
  %6 = ptrtoint ptr %tx_skb to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %tx_skb, align 8
  %tx_ring = getelementptr inbounds %struct.macb_queue, ptr %queue.043, i32 0, i32 13
  %7 = ptrtoint ptr %tx_ring to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %tx_ring, align 4
  %tobool.not = icmp eq ptr %8, null
  br i1 %tobool.not, label %for.body.if.end_crit_edge, label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.body
  %9 = ptrtoint ptr %hw_dma_cap.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %hw_dma_cap.i, align 8
  %switch.tableidx = add i8 %10, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %11 = icmp ult i8 %switch.tableidx, 3
  br i1 %11, label %switch.lookup, label %if.then.macb_dma_desc_get_size.exit_crit_edge

if.then.macb_dma_desc_get_size.exit_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit

switch.lookup:                                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %12 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.macb_free_consistent, i32 0, i32 %12
  %13 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %13)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_dma_desc_get_size.exit

macb_dma_desc_get_size.exit:                      ; preds = %switch.lookup, %if.then.macb_dma_desc_get_size.exit_crit_edge
  %desc_size.0.i = phi i32 [ %switch.load, %switch.lookup ], [ 8, %if.then.macb_dma_desc_get_size.exit_crit_edge ]
  %14 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tx_ring_size, align 8
  %mul = mul i32 %15, %desc_size.0.i
  %16 = ptrtoint ptr %tx_bd_rd_prefetch to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %tx_bd_rd_prefetch, align 8
  %add = add i32 %mul, %17
  %18 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %19, i32 0, i32 3
  %tx_ring_dma = getelementptr inbounds %struct.macb_queue, ptr %queue.043, i32 0, i32 15
  %20 = ptrtoint ptr %tx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %tx_ring_dma, align 4
  tail call void @dma_free_attrs(ptr noundef %dev, i32 noundef %add, ptr noundef nonnull %8, i32 noundef %21, i32 noundef 0) #21
  %22 = ptrtoint ptr %tx_ring to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %tx_ring, align 4
  br label %if.end

if.end:                                           ; preds = %macb_dma_desc_get_size.exit, %for.body.if.end_crit_edge
  %rx_ring = getelementptr inbounds %struct.macb_queue, ptr %queue.043, i32 0, i32 21
  %23 = ptrtoint ptr %rx_ring to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %rx_ring, align 4
  %tobool4.not = icmp eq ptr %24, null
  br i1 %tobool4.not, label %if.end.for.inc_crit_edge, label %if.then5

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then5:                                         ; preds = %if.end
  %25 = ptrtoint ptr %hw_dma_cap.i to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %hw_dma_cap.i, align 8
  %switch.tableidx46 = add i8 %26, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx46)
  %27 = icmp ult i8 %switch.tableidx46, 3
  br i1 %27, label %switch.lookup45, label %if.then5.macb_dma_desc_get_size.exit41_crit_edge

if.then5.macb_dma_desc_get_size.exit41_crit_edge: ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit41

switch.lookup45:                                  ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #23
  %28 = sext i8 %switch.tableidx46 to i32
  %switch.gep47 = getelementptr inbounds [3 x i32], ptr @switch.table.macb_free_consistent.105, i32 0, i32 %28
  %29 = ptrtoint ptr %switch.gep47 to i32
  call void @__asan_load4_noabort(i32 %29)
  %switch.load48 = load i32, ptr %switch.gep47, align 4
  br label %macb_dma_desc_get_size.exit41

macb_dma_desc_get_size.exit41:                    ; preds = %switch.lookup45, %if.then5.macb_dma_desc_get_size.exit41_crit_edge
  %desc_size.0.i40 = phi i32 [ %switch.load48, %switch.lookup45 ], [ 8, %if.then5.macb_dma_desc_get_size.exit41_crit_edge ]
  %30 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rx_ring_size, align 4
  %mul7 = mul i32 %31, %desc_size.0.i40
  %32 = ptrtoint ptr %rx_bd_rd_prefetch to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rx_bd_rd_prefetch, align 4
  %add8 = add i32 %mul7, %33
  %34 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev, align 4
  %dev10 = getelementptr inbounds %struct.platform_device, ptr %35, i32 0, i32 3
  %rx_ring_dma = getelementptr inbounds %struct.macb_queue, ptr %queue.043, i32 0, i32 17
  %36 = ptrtoint ptr %rx_ring_dma to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rx_ring_dma, align 4
  tail call void @dma_free_attrs(ptr noundef %dev10, i32 noundef %add8, ptr noundef nonnull %24, i32 noundef %37, i32 noundef 0) #21
  %38 = ptrtoint ptr %rx_ring to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr null, ptr %rx_ring, align 4
  br label %for.inc

for.inc:                                          ; preds = %macb_dma_desc_get_size.exit41, %if.end.for.inc_crit_edge
  %inc = add nuw i32 %q.044, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.043, i32 1
  %39 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %40
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_resume(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dma_alloc_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_configure_dma(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 4
  %0 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rx_buffer_size, align 8
  %div77 = lshr i32 %1, 6
  %caps.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %2 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i = icmp slt i32 %3, 0
  br i1 %tobool.i, label %if.then, label %entry.if.end46_crit_edge

entry.if.end46_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end46

if.then:                                          ; preds = %entry
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %4 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %5(ptr noundef %bp, i32 noundef 16) #21
  %and = and i32 %call1, -16711681
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %6 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp79.not = icmp eq i32 %7, 0
  br i1 %cmp79.not, label %if.then.for.end_crit_edge, label %for.inc.peel

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.peel:                                     ; preds = %if.then
  %and5 = shl i32 %div77, 16
  %shl = and i32 %and5, 16711680
  %or.peel = or i32 %and, %shl
  %8 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.peel = icmp ugt i32 %9, 1
  br i1 %cmp.peel, label %for.body.peel.next, label %for.inc.peel.for.end_crit_edge

for.inc.peel.for.end_crit_edge:                   ; preds = %for.inc.peel
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.peel.next:                               ; preds = %for.inc.peel
  %incdec.ptr.peel = getelementptr %struct.macb, ptr %bp, i32 0, i32 9, i32 1
  br label %for.inc

for.inc:                                          ; preds = %for.inc.for.inc_crit_edge, %for.body.peel.next
  %queue.082 = phi ptr [ %incdec.ptr.peel, %for.body.peel.next ], [ %incdec.ptr, %for.inc.for.inc_crit_edge ]
  %q.080 = phi i32 [ 1, %for.body.peel.next ], [ %inc, %for.inc.for.inc_crit_edge ]
  %10 = ptrtoint ptr %queue.082 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %queue.082, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_writel, align 4
  %RBQS = getelementptr inbounds %struct.macb_queue, ptr %queue.082, i32 0, i32 8
  %14 = ptrtoint ptr %RBQS to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %RBQS, align 8
  tail call void %13(ptr noundef %11, i32 noundef %15, i32 noundef %div77) #21
  %inc = add nuw i32 %q.080, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.082, i32 1
  %16 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %17
  br i1 %cmp, label %for.inc.for.inc_crit_edge, label %for.inc.for.end_crit_edge, !llvm.loop !320

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.inc_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %for.inc.peel.for.end_crit_edge, %if.then.for.end_crit_edge
  %dmacfg.0.lcssa = phi i32 [ %and, %if.then.for.end_crit_edge ], [ %or.peel, %for.inc.peel.for.end_crit_edge ], [ %or.peel, %for.inc.for.end_crit_edge ]
  %dma_burst_length = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 26
  %18 = ptrtoint ptr %dma_burst_length to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %dma_burst_length, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool6.not = icmp eq i32 %19, 0
  %and8 = and i32 %dmacfg.0.lcssa, -2016
  %and10 = and i32 %19, 31
  %or12 = or i32 %and10, %and8
  %dmacfg.2 = select i1 %tobool6.not, i32 %dmacfg.0.lcssa, i32 %or12
  %native_io = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 1
  %20 = ptrtoint ptr %native_io to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %native_io, align 4, !range !298
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool16.not = icmp eq i8 %21, 0
  %and15 = and i32 %dmacfg.2, -1985
  %dmacfg.3.v = select i1 %tobool16.not, i32 1856, i32 1792
  %dmacfg.3 = or i32 %and15, %dmacfg.3.v
  %dev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %22 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev, align 4
  %features = getelementptr inbounds %struct.net_device, ptr %23, i32 0, i32 23
  %24 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %features, align 16
  %and22 = and i64 %25, 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and22)
  %tobool23.not = icmp eq i64 %and22, 0
  %or25 = or i32 %dmacfg.3, 2048
  %and27 = and i32 %dmacfg.3, -1073744001
  %dmacfg.4 = select i1 %tobool23.not, i32 %and27, i32 %or25
  %and29 = and i32 %dmacfg.4, -1073741953
  %hw_dma_cap = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 35
  %26 = ptrtoint ptr %hw_dma_cap to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %hw_dma_cap, align 8
  %28 = and i8 %27, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool31.not = icmp eq i8 %28, 0
  %or33 = or i32 %and29, 805306368
  %dmacfg.5 = select i1 %tobool31.not, i32 %and29, i32 %or33
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @macb_configure_dma.__UNIQUE_ID_ddebug498, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@macb_configure_dma, %if.then40)) #21
          to label %do.end44 [label %if.then40], !srcloc !299

if.then40:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %29 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @macb_configure_dma.__UNIQUE_ID_ddebug498, ptr noundef %30, ptr noundef nonnull @.str.50, i32 noundef %dmacfg.5) #21
  br label %do.end44

do.end44:                                         ; preds = %if.then40, %for.end
  %macb_reg_writel45 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %31 = ptrtoint ptr %macb_reg_writel45 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %macb_reg_writel45, align 4
  tail call void %32(ptr noundef %bp, i32 noundef 16, i32 noundef %dmacfg.5) #21
  br label %if.end46

if.end46:                                         ; preds = %do.end44, %entry.if.end46_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_of_phy_connect(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @phy_find_first(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_connect_phy(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_start(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @of_node_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__of_parse_phandle_with_args(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dma_free_attrs(ptr noundef, i32 noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_idle(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_stop(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_disconnect_phy(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pskb_expand_head(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_copy_expand(ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @crc32_le(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #12

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @skb_put(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dev_driver_string(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_map_single(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @dma_map_page_attrs(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @debug_dma_mapping_error(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_clone_tx_timestamp(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @skb_tstamp_tx(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_mii_ioctl(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gem_update_stats(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %hw_stats = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 18
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry
  %p.068 = phi ptr [ %hw_stats, %entry ], [ %incdec.ptr20, %if.end.for.body_crit_edge ]
  %i.067 = phi i32 [ 0, %entry ], [ %inc, %if.end.for.body_crit_edge ]
  %offset1 = getelementptr [43 x %struct.gem_statistic], ptr @gem_statistics, i32 0, i32 %i.067, i32 1
  %0 = ptrtoint ptr %offset1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %offset1, align 4
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %3(ptr noundef %bp, i32 noundef %1) #21
  %conv = zext i32 %call to i64
  %arrayidx2 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %i.067
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %arrayidx2, align 8
  %add = add i64 %5, %conv
  store i64 %add, ptr %arrayidx2, align 8
  %6 = ptrtoint ptr %p.068 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %p.068, align 4
  %add4 = add i32 %7, %call
  store i32 %add4, ptr %p.068, align 4
  %8 = zext i32 %i.067 to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.124)
  switch i32 %i.067, label %for.body.if.end_crit_edge [
    i32 19, label %for.body.if.then_crit_edge
    i32 0, label %for.body.if.then_crit_edge77
  ]

for.body.if.then_crit_edge77:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

for.body.if.then_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %for.body.if.then_crit_edge, %for.body.if.then_crit_edge77
  %9 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_readl, align 8
  %add11 = add i32 %1, 4
  %call12 = tail call i32 %10(ptr noundef %bp, i32 noundef %add11) #21
  %conv13 = zext i32 %call12 to i64
  %shl = shl nuw i64 %conv13, 32
  %11 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %arrayidx2, align 8
  %add16 = add i64 %shl, %12
  store i64 %add16, ptr %arrayidx2, align 8
  %incdec.ptr = getelementptr i32, ptr %p.068, i32 1
  %13 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr, align 4
  %add18 = add i32 %14, %call12
  store i32 %add18, ptr %incdec.ptr, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body.if.end_crit_edge
  %p.1 = phi ptr [ %incdec.ptr, %if.then ], [ %p.068, %for.body.if.end_crit_edge ]
  %inc = add nuw nsw i32 %i.067, 1
  %incdec.ptr20 = getelementptr i32, ptr %p.1, i32 1
  %exitcond.not = icmp eq i32 %inc, 43
  br i1 %exitcond.not, label %for.end, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %if.end
  %num_queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 7
  %15 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp2272.not = icmp eq i32 %16, 0
  br i1 %cmp2272.not, label %for.end.for.end40_crit_edge, label %for.body24.preheader

for.end.for.end40_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end40

for.body24.preheader:                             ; preds = %for.end
  %queues = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 9
  br label %for.body24

for.body24:                                       ; preds = %for.body24.for.body24_crit_edge, %for.body24.preheader
  %idx.075 = phi i32 [ %inc31.5, %for.body24.for.body24_crit_edge ], [ 43, %for.body24.preheader ]
  %q.074 = phi i32 [ %inc38, %for.body24.for.body24_crit_edge ], [ 0, %for.body24.preheader ]
  %queue.073 = phi ptr [ %incdec.ptr39, %for.body24.for.body24_crit_edge ], [ %queues, %for.body24.preheader ]
  %stats = getelementptr inbounds %struct.macb_queue, ptr %queue.073, i32 0, i32 25
  %17 = ptrtoint ptr %stats to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %stats, align 4
  %conv29 = zext i32 %18 to i64
  %inc31 = add i32 %idx.075, 1
  %arrayidx32 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %idx.075
  %19 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %conv29, ptr %arrayidx32, align 8
  %incdec.ptr35 = getelementptr %struct.macb_queue, ptr %queue.073, i32 0, i32 25, i32 1
  %20 = ptrtoint ptr %incdec.ptr35 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %incdec.ptr35, align 4
  %conv29.1 = zext i32 %21 to i64
  %inc31.1 = add i32 %idx.075, 2
  %arrayidx32.1 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %inc31
  %22 = ptrtoint ptr %arrayidx32.1 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %conv29.1, ptr %arrayidx32.1, align 8
  %incdec.ptr35.1 = getelementptr %struct.macb_queue, ptr %queue.073, i32 0, i32 25, i32 2
  %23 = ptrtoint ptr %incdec.ptr35.1 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %incdec.ptr35.1, align 4
  %conv29.2 = zext i32 %24 to i64
  %inc31.2 = add i32 %idx.075, 3
  %arrayidx32.2 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %inc31.1
  %25 = ptrtoint ptr %arrayidx32.2 to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %conv29.2, ptr %arrayidx32.2, align 8
  %incdec.ptr35.2 = getelementptr %struct.macb_queue, ptr %queue.073, i32 0, i32 25, i32 3
  %26 = ptrtoint ptr %incdec.ptr35.2 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %incdec.ptr35.2, align 4
  %conv29.3 = zext i32 %27 to i64
  %inc31.3 = add i32 %idx.075, 4
  %arrayidx32.3 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %inc31.2
  %28 = ptrtoint ptr %arrayidx32.3 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %conv29.3, ptr %arrayidx32.3, align 8
  %incdec.ptr35.3 = getelementptr %struct.macb_queue, ptr %queue.073, i32 0, i32 25, i32 4
  %29 = ptrtoint ptr %incdec.ptr35.3 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %incdec.ptr35.3, align 4
  %conv29.4 = zext i32 %30 to i64
  %inc31.4 = add i32 %idx.075, 5
  %arrayidx32.4 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %inc31.3
  %31 = ptrtoint ptr %arrayidx32.4 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %conv29.4, ptr %arrayidx32.4, align 8
  %incdec.ptr35.4 = getelementptr %struct.macb_queue, ptr %queue.073, i32 0, i32 25, i32 5
  %32 = ptrtoint ptr %incdec.ptr35.4 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %incdec.ptr35.4, align 4
  %conv29.5 = zext i32 %33 to i64
  %inc31.5 = add i32 %idx.075, 6
  %arrayidx32.5 = getelementptr %struct.macb, ptr %bp, i32 0, i32 30, i32 %inc31.4
  %34 = ptrtoint ptr %arrayidx32.5 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %conv29.5, ptr %arrayidx32.5, align 8
  %inc38 = add nuw i32 %q.074, 1
  %incdec.ptr39 = getelementptr %struct.macb_queue, ptr %queue.073, i32 1
  %35 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %num_queues, align 4
  %cmp22 = icmp ult i32 %inc38, %36
  br i1 %cmp22, label %for.body24.for.body24_crit_edge, label %for.body24.for.end40_crit_edge

for.body24.for.end40_crit_edge:                   ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end40

for.body24.for.body24_crit_edge:                  ; preds = %for.body24
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body24

for.end40:                                        ; preds = %for.body24.for.end40_crit_edge, %for.end.for.end40_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gem_enable_flow_filters(ptr noundef %bp, i1 noundef zeroext %enable) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %dev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 17
  %0 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev, align 4
  %features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 23
  %2 = ptrtoint ptr %features to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %features, align 16
  %and = and i64 %3, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.cleanup62_crit_edge, label %if.end

entry.cleanup62_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup62

if.end:                                           ; preds = %entry
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %4 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %5(ptr noundef %bp, i32 noundef 668) #21
  %shr = lshr i32 %call, 16
  %and1 = and i32 %shr, 255
  %rx_fs_list = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 42
  %6 = ptrtoint ptr %rx_fs_list to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn107 = load ptr, ptr %rx_fs_list, align 8
  %cmp.not108 = icmp eq ptr %.pn107, %rx_fs_list
  br i1 %cmp.not108, label %if.end.cleanup62_crit_edge, label %for.body.lr.ph

if.end.cleanup62_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup62

for.body.lr.ph:                                   ; preds = %if.end
  %shl = select i1 %enable, i32 4096, i32 0
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %.pn109 = phi ptr [ %.pn107, %for.body.lr.ph ], [ %.pn, %cleanup.for.body_crit_edge ]
  %location = getelementptr i8, ptr %.pn109, i32 -8
  %7 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %location, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %and1)
  %cmp6.not = icmp ult i32 %8, %and1
  br i1 %cmp6.not, label %if.end8, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end8:                                          ; preds = %for.body
  %9 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_readl, align 8
  %mul = shl i32 %8, 2
  %add = add i32 %mul, 1344
  %call11 = tail call i32 %10(ptr noundef %bp, i32 noundef %add) #21
  %and12 = and i32 %call11, -4097
  %or = or i32 %and12, %shl
  br i1 %enable, label %land.lhs.true, label %if.end36

land.lhs.true:                                    ; preds = %if.end8
  %m_u = getelementptr i8, ptr %.pn109, i32 -92
  %11 = ptrtoint ptr %m_u to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %m_u, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %cmp17 = icmp eq i32 %12, -1
  %and2298 = and i32 %or, -17039361
  %masksel = select i1 %cmp17, i32 262144, i32 0
  %t2_scr.096 = or i32 %masksel, %and2298
  %ip4dst = getelementptr i8, ptr %.pn109, i32 -88
  %13 = ptrtoint ptr %ip4dst to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ip4dst, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %cmp28 = icmp eq i32 %14, -1
  %masksel106 = select i1 %cmp28, i32 16777216, i32 0
  %t2_scr.1101 = or i32 %t2_scr.096, %masksel106
  %psrc = getelementptr i8, ptr %.pn109, i32 -84
  %15 = ptrtoint ptr %psrc to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %psrc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %16)
  %cmp41 = icmp eq i16 %16, -1
  br i1 %cmp41, label %land.lhs.true.if.then46_crit_edge, label %lor.lhs.false

land.lhs.true.if.then46_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then46

if.end36:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  %and34 = and i32 %or, -17039361
  br label %if.else49

lor.lhs.false:                                    ; preds = %land.lhs.true
  %pdst = getelementptr i8, ptr %.pn109, i32 -82
  %17 = ptrtoint ptr %pdst to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %pdst, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %18)
  %cmp44 = icmp eq i16 %18, -1
  br i1 %cmp44, label %lor.lhs.false.if.then46_crit_edge, label %lor.lhs.false.if.else49_crit_edge

lor.lhs.false.if.else49_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else49

lor.lhs.false.if.then46_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then46

if.then46:                                        ; preds = %lor.lhs.false.if.then46_crit_edge, %land.lhs.true.if.then46_crit_edge
  %or48 = or i32 %t2_scr.1101, 1073741824
  br label %if.end52

if.else49:                                        ; preds = %lor.lhs.false.if.else49_crit_edge, %if.end36
  %t2_scr.1100 = phi i32 [ %t2_scr.1101, %lor.lhs.false.if.else49_crit_edge ], [ %and34, %if.end36 ]
  %and50 = and i32 %t2_scr.1100, -1073741825
  br label %if.end52

if.end52:                                         ; preds = %if.else49, %if.then46
  %t2_scr.2 = phi i32 [ %or48, %if.then46 ], [ %and50, %if.else49 ]
  %19 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macb_reg_writel, align 4
  %21 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %location, align 8
  %mul54 = shl i32 %22, 2
  %add55 = add i32 %mul54, 1344
  tail call void %20(ptr noundef %bp, i32 noundef %add55, i32 noundef %t2_scr.2) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end52, %for.body.cleanup_crit_edge
  %23 = ptrtoint ptr %.pn109 to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn = load ptr, ptr %.pn109, align 8
  %cmp.not = icmp eq ptr %.pn, %rx_fs_list
  br i1 %cmp.not, label %cleanup.cleanup62_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

cleanup.cleanup62_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup62

cleanup62:                                        ; preds = %cleanup.cleanup62_crit_edge, %if.end.cleanup62_crit_edge, %entry.cleanup62_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gem_rx_refill(ptr nocapture noundef %queue) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  %rx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 19
  %rx_prepared_head = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 20
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %rx_tail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_tail, align 4
  %4 = ptrtoint ptr %rx_prepared_head to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_prepared_head, align 8
  %add.neg68 = xor i32 %5, -1
  %sub69 = add i32 %3, %add.neg68
  %6 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rx_ring_size, align 4
  %sub370 = add i32 %7, -1
  %and71 = and i32 %sub370, %sub69
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and71)
  %cmp.not72 = icmp eq i32 %and71, 0
  br i1 %cmp.not72, label %entry.do.body_crit_edge, label %while.body.lr.ph

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

while.body.lr.ph:                                 ; preds = %entry
  %rx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 21
  %rx_skbuff = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 22
  %dev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 17
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 4
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  br label %while.body

while.body:                                       ; preds = %if.end32.while.body_crit_edge, %while.body.lr.ph
  %sub373 = phi i32 [ %sub370, %while.body.lr.ph ], [ %sub3, %if.end32.while.body_crit_edge ]
  %8 = phi i32 [ %5, %while.body.lr.ph ], [ %61, %if.end32.while.body_crit_edge ]
  %and.i = and i32 %sub373, %8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !321
  %9 = ptrtoint ptr %rx_prepared_head to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rx_prepared_head, align 8
  %inc = add i32 %10, 1
  store i32 %inc, ptr %rx_prepared_head, align 8
  %11 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %12, i32 0, i32 5
  %13 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %rx_ring_size.i.i, align 4
  %sub.i.i = add i32 %14, -1
  %and.i.i = and i32 %sub.i.i, %and.i
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %12, i32 0, i32 35
  %15 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %hw_dma_cap.i.i, align 8
  %17 = zext i8 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.125)
  switch i8 %16, label %while.body.macb_rx_desc.exit_crit_edge [
    i8 1, label %while.body.sw.bb.i.i_crit_edge
    i8 2, label %while.body.sw.bb.i.i_crit_edge79
    i8 3, label %sw.bb1.i.i
  ]

while.body.sw.bb.i.i_crit_edge79:                 ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

while.body.sw.bb.i.i_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

while.body.macb_rx_desc.exit_crit_edge:           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit

sw.bb.i.i:                                        ; preds = %while.body.sw.bb.i.i_crit_edge, %while.body.sw.bb.i.i_crit_edge79
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_rx_desc.exit

sw.bb1.i.i:                                       ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_rx_desc.exit

macb_rx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %while.body.macb_rx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %while.body.macb_rx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %18 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %19, i32 %desc_idx.addr.0.i.i
  %20 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rx_skbuff, align 8
  %arrayidx = getelementptr ptr, ptr %21, i32 %and.i
  %22 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx, align 4
  %tobool.not = icmp eq ptr %23, null
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %macb_rx_desc.exit
  %24 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev, align 4
  %26 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rx_buffer_size, align 8
  %call.i = tail call ptr @__netdev_alloc_skb(ptr noundef %25, i32 noundef %27, i32 noundef 2592) #21
  %tobool8.not = icmp eq ptr %call.i, null
  br i1 %tobool8.not, label %if.then12, label %if.end, !prof !301

if.then12:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %28 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %dev, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %29, ptr noundef nonnull @.str.63) #24
  br label %do.body

if.end:                                           ; preds = %if.then
  %30 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pdev, align 4
  %dev14 = getelementptr inbounds %struct.platform_device, ptr %31, i32 0, i32 3
  %data = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 19
  %32 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %data, align 4
  %34 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rx_buffer_size, align 8
  %call.i61 = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %33) #21
  br i1 %call.i61, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %if.end
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i, !prof !300

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_map_single_attrs.exit

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %dev14) #21
  %init_name.i.i = getelementptr inbounds %struct.platform_device, ptr %31, i32 0, i32 3, i32 3
  %36 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %37, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %38 = ptrtoint ptr %dev14 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %dev14, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %39, %if.end.i.i ], [ %37, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.60, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #21
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @debug_dma_map_single(ptr noundef %dev14, ptr noundef %33, i32 noundef %35) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %40 = load ptr, ptr @mem_map, align 4
  %41 = ptrtoint ptr %33 to i32
  %sub.i62 = add i32 %41, 1073741824
  %shr.i = lshr i32 %sub.i62, 12
  %add.ptr.i = getelementptr %struct.page, ptr %40, i32 %shr.i
  %and.i63 = and i32 %41, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev14, ptr noundef %add.ptr.i, i32 noundef %and.i63, i32 noundef %35, i32 noundef 2, i32 noundef 0) #21
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %42 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %pdev, align 4
  %dev18 = getelementptr inbounds %struct.platform_device, ptr %43, i32 0, i32 3
  tail call void @debug_dma_mapping_error(ptr noundef %dev18, i32 noundef %retval.0.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i)
  %cmp.i = icmp eq i32 %retval.0.i, -1
  br i1 %cmp.i, label %if.then21, label %if.end22

if.then21:                                        ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @consume_skb(ptr noundef nonnull %call.i) #21
  br label %do.body

if.end22:                                         ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #23
  %44 = ptrtoint ptr %rx_skbuff to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %rx_skbuff, align 8
  %arrayidx24 = getelementptr ptr, ptr %45, i32 %and.i
  %46 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call.i, ptr %arrayidx24, align 4
  %47 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rx_ring_size, align 4
  %sub26 = add i32 %48, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %and.i, i32 %sub26)
  %cmp27 = icmp eq i32 %and.i, %sub26
  %or = or i32 %retval.0.i, 2
  %spec.select = select i1 %cmp27, i32 %or, i32 %retval.0.i
  %ctrl = getelementptr %struct.macb_dma_desc, ptr %19, i32 %desc_idx.addr.0.i.i, i32 1
  %49 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 0, ptr %ctrl, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !322
  %50 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %spec.select, ptr %arrayidx.i, align 4
  %51 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %data, align 4
  %add.ptr.i64 = getelementptr i8, ptr %52, i32 2
  store ptr %add.ptr.i64, ptr %data, align 4
  %tail.i = getelementptr inbounds %struct.sk_buff, ptr %call.i, i32 0, i32 16
  %53 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %tail.i, align 8
  %add.ptr1.i = getelementptr i8, ptr %54, i32 2
  store ptr %add.ptr1.i, ptr %tail.i, align 8
  br label %if.end32

if.else:                                          ; preds = %macb_rx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  %ctrl30 = getelementptr %struct.macb_dma_desc, ptr %19, i32 %desc_idx.addr.0.i.i, i32 1
  %55 = ptrtoint ptr %ctrl30 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 0, ptr %ctrl30, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !323
  %56 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %arrayidx.i, align 4
  %and31 = and i32 %57, -2
  store i32 %and31, ptr %arrayidx.i, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end22
  %58 = ptrtoint ptr %rx_tail to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %rx_tail, align 4
  %60 = ptrtoint ptr %rx_prepared_head to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %rx_prepared_head, align 8
  %add.neg = xor i32 %61, -1
  %sub = add i32 %59, %add.neg
  %62 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %rx_ring_size, align 4
  %sub3 = add i32 %63, -1
  %and = and i32 %sub3, %sub
  %cmp.not = icmp eq i32 %and, 0
  br i1 %cmp.not, label %if.end32.do.body_crit_edge, label %if.end32.while.body_crit_edge

if.end32.while.body_crit_edge:                    ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body

if.end32.do.body_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.body

do.body:                                          ; preds = %if.end32.do.body_crit_edge, %if.then21, %if.then12, %entry.do.body_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !324
  tail call void @arm_heavy_mb() #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @consume_skb(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__netdev_alloc_skb(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i16 @eth_type_trans(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @napi_gro_receive(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @gem_ptp_rxstamp(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macb_get_regs_len(ptr nocapture noundef readnone %netdev) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 64
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_get_regs(ptr noundef %dev, ptr nocapture noundef writeonly %regs, ptr nocapture noundef writeonly %p) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %macb_reg_readl = getelementptr i8, ptr %dev, i32 2312
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %1(ptr noundef %add.ptr.i, i32 noundef 252) #21
  %and = and i32 %call1, 65533
  %or = or i32 %and, 2
  %version = getelementptr inbounds %struct.ethtool_regs, ptr %regs, i32 0, i32 1
  %2 = ptrtoint ptr %version to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %version, align 4
  %queues = getelementptr i8, ptr %dev, i32 2344
  %tx_tail = getelementptr i8, ptr %dev, i32 2392
  %3 = ptrtoint ptr %tx_tail to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %tx_tail, align 8
  %tx_ring_size.i = getelementptr i8, ptr %dev, i32 2328
  %5 = ptrtoint ptr %tx_ring_size.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tx_ring_size.i, align 8
  %sub.i = add i32 %6, -1
  %and.i = and i32 %sub.i, %4
  %tx_head = getelementptr i8, ptr %dev, i32 2388
  %7 = ptrtoint ptr %tx_head to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %tx_head, align 4
  %and.i115 = and i32 %sub.i, %8
  %9 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_readl, align 8
  %call7 = tail call i32 %10(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %11 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call7, ptr %p, align 4
  %caps.i = getelementptr i8, ptr %dev, i32 18468
  %12 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_readl, align 8
  %call11 = tail call i32 %13(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %arrayidx14 = getelementptr i32, ptr %p, i32 1
  %14 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call11, ptr %arrayidx14, align 4
  %15 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %macb_reg_readl, align 8
  %call16 = tail call i32 %16(ptr noundef %add.ptr.i, i32 noundef 8) #21
  %arrayidx17 = getelementptr i32, ptr %p, i32 2
  %17 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %call16, ptr %arrayidx17, align 4
  %18 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_readl, align 8
  %call19 = tail call i32 %19(ptr noundef %add.ptr.i, i32 noundef 20) #21
  %arrayidx20 = getelementptr i32, ptr %p, i32 3
  %20 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call19, ptr %arrayidx20, align 4
  %21 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %macb_reg_readl, align 8
  %call22 = tail call i32 %22(ptr noundef %add.ptr.i, i32 noundef 24) #21
  %arrayidx23 = getelementptr i32, ptr %p, i32 4
  %23 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %call22, ptr %arrayidx23, align 4
  %24 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_readl, align 8
  %call25 = tail call i32 %25(ptr noundef %add.ptr.i, i32 noundef 28) #21
  %arrayidx26 = getelementptr i32, ptr %p, i32 5
  %26 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %call25, ptr %arrayidx26, align 4
  %27 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %macb_reg_readl, align 8
  %call28 = tail call i32 %28(ptr noundef %add.ptr.i, i32 noundef 32) #21
  %arrayidx29 = getelementptr i32, ptr %p, i32 6
  %29 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %call28, ptr %arrayidx29, align 4
  %30 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %macb_reg_readl, align 8
  %call31 = tail call i32 %31(ptr noundef %add.ptr.i, i32 noundef 48) #21
  %arrayidx32 = getelementptr i32, ptr %p, i32 7
  %32 = ptrtoint ptr %arrayidx32 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call31, ptr %arrayidx32, align 4
  %arrayidx33 = getelementptr i32, ptr %p, i32 8
  %33 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %and.i, ptr %arrayidx33, align 4
  %arrayidx34 = getelementptr i32, ptr %p, i32 9
  %34 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %and.i115, ptr %arrayidx34, align 4
  %35 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %queues, align 8
  %tx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %36, i32 0, i32 6
  %37 = ptrtoint ptr %tx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %tx_ring_size.i.i, align 8
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %36, i32 0, i32 35
  %39 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %hw_dma_cap.i.i, align 8
  %switch.tableidx = add i8 %40, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %41 = icmp ult i8 %switch.tableidx, 3
  br i1 %41, label %switch.lookup, label %entry.macb_tx_dma.exit_crit_edge

entry.macb_tx_dma.exit_crit_edge:                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_dma.exit

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %42 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.macb_get_regs, i32 0, i32 %42
  %43 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %43)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_tx_dma.exit

macb_tx_dma.exit:                                 ; preds = %switch.lookup, %entry.macb_tx_dma.exit_crit_edge
  %desc_size.0.i.i = phi i32 [ %switch.load, %switch.lookup ], [ 8, %entry.macb_tx_dma.exit_crit_edge ]
  %sub.i.i = add i32 %38, -1
  %and.i.i = and i32 %sub.i.i, %and.i
  %mul.i = mul i32 %desc_size.0.i.i, %and.i.i
  %tx_ring_dma.i = getelementptr i8, ptr %dev, i32 2404
  %44 = ptrtoint ptr %tx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %tx_ring_dma.i, align 4
  %add.i = add i32 %45, %mul.i
  %arrayidx38 = getelementptr i32, ptr %p, i32 10
  %46 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %add.i, ptr %arrayidx38, align 4
  %47 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %queues, align 8
  %tx_ring_size.i.i116 = getelementptr inbounds %struct.macb, ptr %48, i32 0, i32 6
  %49 = ptrtoint ptr %tx_ring_size.i.i116 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %tx_ring_size.i.i116, align 8
  %hw_dma_cap.i.i117 = getelementptr inbounds %struct.macb, ptr %48, i32 0, i32 35
  %51 = ptrtoint ptr %hw_dma_cap.i.i117 to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %hw_dma_cap.i.i117, align 8
  %switch.tableidx132 = add i8 %52, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx132)
  %53 = icmp ult i8 %switch.tableidx132, 3
  br i1 %53, label %switch.lookup131, label %macb_tx_dma.exit.macb_tx_dma.exit126_crit_edge

macb_tx_dma.exit.macb_tx_dma.exit126_crit_edge:   ; preds = %macb_tx_dma.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_tx_dma.exit126

switch.lookup131:                                 ; preds = %macb_tx_dma.exit
  call void @__sanitizer_cov_trace_pc() #23
  %54 = sext i8 %switch.tableidx132 to i32
  %switch.gep133 = getelementptr inbounds [3 x i32], ptr @switch.table.macb_get_regs.106, i32 0, i32 %54
  %55 = ptrtoint ptr %switch.gep133 to i32
  call void @__asan_load4_noabort(i32 %55)
  %switch.load134 = load i32, ptr %switch.gep133, align 4
  br label %macb_tx_dma.exit126

macb_tx_dma.exit126:                              ; preds = %switch.lookup131, %macb_tx_dma.exit.macb_tx_dma.exit126_crit_edge
  %desc_size.0.i.i120 = phi i32 [ %switch.load134, %switch.lookup131 ], [ 8, %macb_tx_dma.exit.macb_tx_dma.exit126_crit_edge ]
  %sub.i.i121 = add i32 %50, -1
  %and.i.i122 = and i32 %sub.i.i121, %and.i115
  %mul.i123 = mul i32 %desc_size.0.i.i120, %and.i.i122
  %56 = ptrtoint ptr %tx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %tx_ring_dma.i, align 4
  %add.i125 = add i32 %57, %mul.i123
  %arrayidx42 = getelementptr i32, ptr %p, i32 11
  %58 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %add.i125, ptr %arrayidx42, align 4
  %59 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %caps.i, align 4
  %and43 = and i32 %60, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool.not = icmp eq i32 %and43, 0
  br i1 %tobool.not, label %if.then44, label %macb_tx_dma.exit126.if.end56_crit_edge

macb_tx_dma.exit126.if.end56_crit_edge:           ; preds = %macb_tx_dma.exit126
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.then44:                                        ; preds = %macb_tx_dma.exit126
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.i128 = icmp slt i32 %60, 0
  %61 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %macb_reg_readl, align 8
  %. = select i1 %tobool.i128, i32 12, i32 192
  %call52 = tail call i32 %62(ptr noundef %add.ptr.i, i32 noundef %.) #21
  %arrayidx55 = getelementptr i32, ptr %p, i32 12
  %63 = ptrtoint ptr %arrayidx55 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %call52, ptr %arrayidx55, align 4
  %64 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %.pr = load i32, ptr %caps.i, align 4
  br label %if.end56

if.end56:                                         ; preds = %if.then44, %macb_tx_dma.exit126.if.end56_crit_edge
  %65 = phi i32 [ %.pr, %if.then44 ], [ %60, %macb_tx_dma.exit126.if.end56_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.i130 = icmp slt i32 %65, 0
  br i1 %tobool.i130, label %if.then58, label %if.end56.if.end62_crit_edge

if.end56.if.end62_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end62

if.then58:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  %66 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %macb_reg_readl, align 8
  %call60 = tail call i32 %67(ptr noundef %add.ptr.i, i32 noundef 16) #21
  %arrayidx61 = getelementptr i32, ptr %p, i32 13
  %68 = ptrtoint ptr %arrayidx61 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %call60, ptr %arrayidx61, align 4
  br label %if.end62

if.end62:                                         ; preds = %if.then58, %if.end56.if.end62_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_get_wol(ptr nocapture noundef readonly %netdev, ptr noundef %wol) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %wol1 = getelementptr i8, ptr %netdev, i32 19256
  %0 = ptrtoint ptr %wol1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %wol1, align 8
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end7_crit_edge, label %if.then

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then:                                          ; preds = %entry
  %phylink = getelementptr i8, ptr %netdev, i32 18424
  %2 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %phylink, align 8
  tail call void @phylink_ethtool_get_wol(ptr noundef %3, ptr noundef %wol) #21
  %supported = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol, i32 0, i32 1
  %4 = ptrtoint ptr %supported to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %supported, align 4
  %or = or i32 %5, 32
  store i32 %or, ptr %supported, align 4
  %6 = ptrtoint ptr %wol1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %wol1, align 8
  %and3 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.then.if.end7_crit_edge, label %if.then5

if.then.if.end7_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end7

if.then5:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol, i32 0, i32 2
  %8 = ptrtoint ptr %wolopts to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %wolopts, align 4
  %or6 = or i32 %9, 32
  store i32 %or6, ptr %wolopts, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then5, %if.then.if.end7_crit_edge, %entry.if.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_set_wol(ptr nocapture noundef %netdev, ptr noundef %wol) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %netdev, i32 18424
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 8
  %call1 = tail call i32 @phylink_ethtool_set_wol(ptr noundef %1, ptr noundef %wol) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -95, i32 %call1)
  %cond = icmp eq i32 %call1, -95
  br i1 %cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %wol2 = getelementptr i8, ptr %netdev, i32 19256
  %2 = ptrtoint ptr %wol2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wol2, align 8
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %lor.lhs.false4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false4:                                   ; preds = %if.end
  %wolopts = getelementptr inbounds %struct.ethtool_wolinfo, ptr %wol, i32 0, i32 2
  %4 = ptrtoint ptr %wolopts to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %wolopts, align 4
  %and5 = and i32 %5, -33
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.end8, label %lor.lhs.false4.cleanup_crit_edge

lor.lhs.false4.cleanup_crit_edge:                 ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end8:                                          ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_pc() #23
  %and15 = and i32 %3, -3
  %and10 = lshr i32 %5, 4
  %6 = and i32 %and10, 2
  %storemerge = or i32 %6, %and15
  %7 = ptrtoint ptr %wol2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %storemerge, ptr %wol2, align 8
  %pdev = getelementptr i8, ptr %netdev, i32 18196
  %8 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %9, i32 0, i32 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool19 = icmp ne i32 %6, 0
  %call20 = tail call i32 @device_set_wakeup_enable(ptr noundef %dev, i1 noundef zeroext %tobool19) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %lor.lhs.false4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end8 ], [ %call1, %entry.cleanup_crit_edge ], [ -95, %lor.lhs.false4.cleanup_crit_edge ], [ -95, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_op_get_link(ptr noundef) #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @macb_get_ringparam(ptr nocapture noundef readonly %netdev, ptr nocapture noundef writeonly %ring, ptr nocapture noundef readnone %kernel_ring, ptr nocapture noundef readnone %extack) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 1
  %0 = ptrtoint ptr %rx_max_pending to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 8192, ptr %rx_max_pending, align 4
  %tx_max_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 4
  %1 = ptrtoint ptr %tx_max_pending to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 4096, ptr %tx_max_pending, align 4
  %rx_ring_size = getelementptr i8, ptr %netdev, i32 2324
  %2 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_ring_size, align 4
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %rx_pending to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %rx_pending, align 4
  %tx_ring_size = getelementptr i8, ptr %netdev, i32 2328
  %5 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tx_ring_size, align 8
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 8
  %7 = ptrtoint ptr %tx_pending to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %tx_pending, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_set_ringparam(ptr nocapture noundef %netdev, ptr nocapture noundef readonly %ring, ptr nocapture noundef readnone %kernel_ring, ptr nocapture noundef readnone %extack) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %rx_mini_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 6
  %0 = ptrtoint ptr %rx_mini_pending to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %rx_mini_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %rx_jumbo_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 7
  %2 = ptrtoint ptr %rx_jumbo_pending to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_jumbo_pending, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool1.not = icmp eq i32 %3, 0
  br i1 %tobool1.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %rx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 5
  %4 = ptrtoint ptr %rx_pending to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_pending, align 4
  %6 = tail call i32 @llvm.umax.i32(i32 %5, i32 64)
  %7 = tail call i32 @llvm.umin.i32(i32 %6, i32 8192)
  %sub = add nsw i32 %7, -1
  %8 = tail call i32 @llvm.ctlz.i32(i32 %sub, i1 false) #21, !range !325
  %sub.i.i.i.pn = sub nuw nsw i32 32, %8
  %cond31 = shl nuw i32 1, %sub.i.i.i.pn
  %tx_pending = getelementptr inbounds %struct.ethtool_ringparam, ptr %ring, i32 0, i32 8
  %9 = ptrtoint ptr %tx_pending to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %tx_pending, align 4
  %11 = tail call i32 @llvm.umax.i32(i32 %10, i32 64)
  %12 = tail call i32 @llvm.umin.i32(i32 %11, i32 4096)
  %sub51 = add nsw i32 %12, -1
  %13 = tail call i32 @llvm.ctlz.i32(i32 %sub51, i1 false) #21, !range !325
  %sub.i.i.i137.pn = sub nuw nsw i32 32, %13
  %cond76 = shl nuw i32 1, %sub.i.i.i137.pn
  %tx_ring_size = getelementptr i8, ptr %netdev, i32 2328
  %14 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tx_ring_size, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %cond76, i32 %15)
  %cmp77 = icmp eq i32 %cond76, %15
  br i1 %cmp77, label %land.lhs.true, label %if.end.if.end82_crit_edge

if.end.if.end82_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

land.lhs.true:                                    ; preds = %if.end
  %rx_ring_size = getelementptr i8, ptr %netdev, i32 2324
  %16 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %rx_ring_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %cond31, i32 %17)
  %cmp79 = icmp eq i32 %cond31, %17
  br i1 %cmp79, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end82_crit_edge

land.lhs.true.if.end82_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end82:                                         ; preds = %land.lhs.true.if.end82_crit_edge, %if.end.if.end82_crit_edge
  %dev = getelementptr i8, ptr %netdev, i32 18220
  %18 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dev, align 4
  %state.i = getelementptr inbounds %struct.net_device, ptr %19, i32 0, i32 6
  %20 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %21, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end94.critedge, label %if.then84

if.then84:                                        ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #23
  %call86 = tail call i32 @macb_close(ptr noundef %19)
  %rx_ring_size88.c = getelementptr i8, ptr %netdev, i32 2324
  %22 = ptrtoint ptr %rx_ring_size88.c to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %cond31, ptr %rx_ring_size88.c, align 4
  %23 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %cond76, ptr %tx_ring_size, align 8
  %24 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dev, align 4
  %call93 = tail call i32 @macb_open(ptr noundef %25)
  br label %cleanup

if.end94.critedge:                                ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #23
  %rx_ring_size88.c133 = getelementptr i8, ptr %netdev, i32 2324
  %26 = ptrtoint ptr %rx_ring_size88.c133 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %cond31, ptr %rx_ring_size88.c133, align 4
  %27 = ptrtoint ptr %tx_ring_size to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %cond76, ptr %tx_ring_size, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end94.critedge, %if.then84, %land.lhs.true.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ 0, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end94.critedge ], [ 0, %if.then84 ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gem_get_ethtool_strings(ptr nocapture noundef readonly %dev, i32 noundef %sset, ptr nocapture noundef writeonly %p) #15 align 64 {
entry:
  %stat_string = alloca [32 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %stat_string) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sset)
  %cond = icmp eq i32 %sset, 1
  %0 = call ptr @memset(ptr %stat_string, i32 255, i32 32)
  br i1 %cond, label %entry.for.body_crit_edge, label %entry.sw.epilog_crit_edge

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.cond3.preheader:                              ; preds = %for.body
  %num_queues = getelementptr i8, ptr %dev, i32 2332
  %1 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp437.not = icmp eq i32 %2, 0
  br i1 %cmp437.not, label %for.cond3.preheader.sw.epilog_crit_edge, label %for.cond3.preheader.for.cond6.preheader_crit_edge

for.cond3.preheader.for.cond6.preheader_crit_edge: ; preds = %for.cond3.preheader
  br label %for.cond6.preheader

for.cond3.preheader.sw.epilog_crit_edge:          ; preds = %for.cond3.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.034 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %p.addr.033 = phi ptr [ %add.ptr, %for.body.for.body_crit_edge ], [ %p, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [43 x %struct.gem_statistic], ptr @gem_statistics, i32 0, i32 %i.034
  %3 = call ptr @memcpy(ptr %p.addr.033, ptr %arrayidx, i32 32)
  %inc = add nuw nsw i32 %i.034, 1
  %add.ptr = getelementptr i8, ptr %p.addr.033, i32 32
  %exitcond.not = icmp eq i32 %inc, 43
  br i1 %exitcond.not, label %for.cond3.preheader, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.cond6.preheader:                              ; preds = %for.cond6.preheader.for.cond6.preheader_crit_edge, %for.cond3.preheader.for.cond6.preheader_crit_edge
  %q.039 = phi i32 [ %inc20, %for.cond6.preheader.for.cond6.preheader_crit_edge ], [ 0, %for.cond3.preheader.for.cond6.preheader_crit_edge ]
  %p.addr.138 = phi ptr [ %add.ptr17.5, %for.cond6.preheader.for.cond6.preheader_crit_edge ], [ %add.ptr, %for.cond3.preheader.for.cond6.preheader_crit_edge ]
  %call13 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef nonnull @queue_statistics)
  %4 = call ptr @memcpy(ptr %p.addr.138, ptr %stat_string, i32 32)
  %add.ptr17 = getelementptr i8, ptr %p.addr.138, i32 32
  %call13.1 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef getelementptr inbounds ([6 x %struct.gem_statistic], ptr @queue_statistics, i32 0, i32 1))
  %5 = call ptr @memcpy(ptr %add.ptr17, ptr %stat_string, i32 32)
  %add.ptr17.1 = getelementptr i8, ptr %p.addr.138, i32 64
  %call13.2 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef getelementptr inbounds ([6 x %struct.gem_statistic], ptr @queue_statistics, i32 0, i32 2))
  %6 = call ptr @memcpy(ptr %add.ptr17.1, ptr %stat_string, i32 32)
  %add.ptr17.2 = getelementptr i8, ptr %p.addr.138, i32 96
  %call13.3 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef getelementptr inbounds ([6 x %struct.gem_statistic], ptr @queue_statistics, i32 0, i32 3))
  %7 = call ptr @memcpy(ptr %add.ptr17.2, ptr %stat_string, i32 32)
  %add.ptr17.3 = getelementptr i8, ptr %p.addr.138, i32 128
  %call13.4 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef getelementptr inbounds ([6 x %struct.gem_statistic], ptr @queue_statistics, i32 0, i32 4))
  %8 = call ptr @memcpy(ptr %add.ptr17.3, ptr %stat_string, i32 32)
  %add.ptr17.4 = getelementptr i8, ptr %p.addr.138, i32 160
  %call13.5 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %stat_string, i32 noundef 32, ptr noundef nonnull @.str.66, i32 noundef %q.039, ptr noundef getelementptr inbounds ([6 x %struct.gem_statistic], ptr @queue_statistics, i32 0, i32 5))
  %9 = call ptr @memcpy(ptr %add.ptr17.4, ptr %stat_string, i32 32)
  %add.ptr17.5 = getelementptr i8, ptr %p.addr.138, i32 192
  %inc20 = add nuw i32 %q.039, 1
  %10 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_queues, align 4
  %cmp4 = icmp ult i32 %inc20, %11
  br i1 %cmp4, label %for.cond6.preheader.for.cond6.preheader_crit_edge, label %for.cond6.preheader.sw.epilog_crit_edge

for.cond6.preheader.sw.epilog_crit_edge:          ; preds = %for.cond6.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

for.cond6.preheader.for.cond6.preheader_crit_edge: ; preds = %for.cond6.preheader
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond6.preheader

sw.epilog:                                        ; preds = %for.cond6.preheader.sw.epilog_crit_edge, %for.cond3.preheader.sw.epilog_crit_edge, %entry.sw.epilog_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %stat_string) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @gem_get_ethtool_stats(ptr noundef %dev, ptr nocapture noundef readnone %stats, ptr nocapture noundef writeonly %data) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  tail call fastcc void @gem_update_stats(ptr noundef %add.ptr.i)
  %ethtool_stats = getelementptr i8, ptr %dev, i32 18520
  %0 = call ptr @memcpy(ptr %data, ptr %ethtool_stats, i32 728)
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @gem_get_sset_count(ptr nocapture noundef readonly %dev, i32 noundef %sset) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %sset)
  %cond = icmp eq i32 %sset, 1
  br i1 %cond, label %sw.bb, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %num_queues = getelementptr i8, ptr %dev, i32 2332
  %0 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %num_queues, align 4
  %mul = mul i32 %1, 6
  %add = add i32 %mul, 43
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %add, %sw.bb ], [ -95, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_get_rxnfc(ptr noundef %netdev, ptr nocapture noundef %cmd, ptr nocapture noundef writeonly %rule_locs) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cmd, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.126)
  switch i32 %1, label %sw.default [
    i32 45, label %sw.bb
    i32 46, label %sw.bb2
    i32 47, label %sw.bb3
    i32 48, label %sw.bb5
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %num_queues = getelementptr i8, ptr %netdev, i32 2332
  %3 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %num_queues, align 4
  %conv = zext i32 %4 to i64
  %data = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 2
  %5 = ptrtoint ptr %data to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %conv, ptr %data, align 8
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %count = getelementptr i8, ptr %netdev, i32 19456
  %6 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %count, align 8
  %8 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  %9 = ptrtoint ptr %8 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %7, ptr %8, align 8
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %rx_fs_list.i = getelementptr i8, ptr %netdev, i32 19448
  %location5.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %sw.bb3
  %.pn.in.i = phi ptr [ %rx_fs_list.i, %sw.bb3 ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %10 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn.i = load ptr, ptr %.pn.in.i, align 8
  %cmp.not.i = icmp eq ptr %.pn.i, %rx_fs_list.i
  br i1 %cmp.not.i, label %for.cond.i.sw.epilog_crit_edge, label %for.body.i

for.cond.i.sw.epilog_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

for.body.i:                                       ; preds = %for.cond.i
  %location.i = getelementptr i8, ptr %.pn.i, i32 -8
  %11 = ptrtoint ptr %location.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %location.i, align 8
  %13 = ptrtoint ptr %location5.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %location5.i, align 8
  %cmp6.i = icmp eq i32 %12, %14
  br i1 %cmp6.i, label %if.then.i, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %item.0.le.i = getelementptr i8, ptr %.pn.i, i32 -168
  %fs4.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3
  %15 = call ptr @memcpy(ptr %fs4.i, ptr %item.0.le.i, i32 168)
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  %rx_fs_list.i17 = getelementptr i8, ptr %netdev, i32 19448
  %16 = ptrtoint ptr %rx_fs_list.i17 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn22.i = load ptr, ptr %rx_fs_list.i17, align 8
  %cmp.not23.i = icmp eq ptr %.pn22.i, %rx_fs_list.i17
  br i1 %cmp.not23.i, label %sw.bb5.for.end.i_crit_edge, label %for.body.lr.ph.i

sw.bb5.for.end.i_crit_edge:                       ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.lr.ph.i:                                 ; preds = %sw.bb5
  %17 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  br label %for.body.i18

for.body.i18:                                     ; preds = %if.end.i.for.body.i18_crit_edge, %for.body.lr.ph.i
  %.pn25.i = phi ptr [ %.pn22.i, %for.body.lr.ph.i ], [ %.pn.i20, %if.end.i.for.body.i18_crit_edge ]
  %cnt.024.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %if.end.i.for.body.i18_crit_edge ]
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %cnt.024.i, i32 %19)
  %cmp4.i = icmp eq i32 %cnt.024.i, %19
  br i1 %cmp4.i, label %for.body.i18.sw.epilog_crit_edge, label %if.end.i

for.body.i18.sw.epilog_crit_edge:                 ; preds = %for.body.i18
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.end.i:                                         ; preds = %for.body.i18
  %location.i19 = getelementptr i8, ptr %.pn25.i, i32 -8
  %20 = ptrtoint ptr %location.i19 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %location.i19, align 8
  %arrayidx.i = getelementptr i32, ptr %rule_locs, i32 %cnt.024.i
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %inc.i = add i32 %cnt.024.i, 1
  %23 = ptrtoint ptr %.pn25.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %.pn.i20 = load ptr, ptr %.pn25.i, align 8
  %cmp.not.i21 = icmp eq ptr %.pn.i20, %rx_fs_list.i17
  br i1 %cmp.not.i21, label %if.end.i.for.end.i_crit_edge, label %if.end.i.for.body.i18_crit_edge

if.end.i.for.body.i18_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i18

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %if.end.i.for.end.i_crit_edge, %sw.bb5.for.end.i_crit_edge
  %cnt.0.lcssa.i = phi i32 [ 0, %sw.bb5.for.end.i_crit_edge ], [ %inc.i, %if.end.i.for.end.i_crit_edge ]
  %max_tuples.i = getelementptr i8, ptr %netdev, i32 19504
  %24 = ptrtoint ptr %max_tuples.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %max_tuples.i, align 8
  %conv.i = zext i32 %25 to i64
  %data.i = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 2
  %26 = ptrtoint ptr %data.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %conv.i, ptr %data.i, align 8
  %27 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 4
  %28 = ptrtoint ptr %27 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %cnt.0.lcssa.i, ptr %27, align 8
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %netdev, ptr noundef nonnull @.str.67, i32 noundef %1) #24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %for.end.i, %for.body.i18.sw.epilog_crit_edge, %if.then.i, %for.cond.i.sw.epilog_crit_edge, %sw.bb2, %sw.bb
  %ret.0 = phi i32 [ -95, %sw.default ], [ 0, %sw.bb2 ], [ 0, %sw.bb ], [ 0, %if.then.i ], [ 0, %for.end.i ], [ -22, %for.cond.i.sw.epilog_crit_edge ], [ -90, %for.body.i18.sw.epilog_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_set_rxnfc(ptr noundef %netdev, ptr nocapture noundef readonly %cmd) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cmd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cmd, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.127)
  switch i32 %1, label %sw.default [
    i32 50, label %sw.bb
    i32 49, label %sw.bb6
  ]

sw.bb:                                            ; preds = %entry
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  %3 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %location, align 8
  %max_tuples = getelementptr i8, ptr %netdev, i32 19504
  %5 = ptrtoint ptr %max_tuples to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_tuples, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %6)
  %cmp.not = icmp ult i32 %4, %6
  br i1 %cmp.not, label %lor.lhs.false, label %sw.bb.sw.epilog_crit_edge

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

lor.lhs.false:                                    ; preds = %sw.bb
  %ring_cookie = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 5
  %7 = ptrtoint ptr %ring_cookie to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %ring_cookie, align 8
  %num_queues = getelementptr i8, ptr %netdev, i32 2332
  %9 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %num_queues, align 4
  %conv = zext i32 %10 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %conv)
  %cmp3.not = icmp ult i64 %8, %conv
  br i1 %cmp3.not, label %if.end, label %lor.lhs.false.sw.epilog_crit_edge

lor.lhs.false.sw.epilog_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  %call5 = tail call fastcc i32 @gem_add_flow_filter(ptr noundef %netdev, ptr noundef %cmd)
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call7 = tail call fastcc i32 @gem_del_flow_filter(ptr noundef %netdev, ptr noundef %cmd)
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %netdev, ptr noundef nonnull @.str.67, i32 noundef %1) #24
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb6, %if.end, %lor.lhs.false.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge
  %ret.0 = phi i32 [ -95, %sw.default ], [ %call7, %sw.bb6 ], [ %call5, %if.end ], [ -22, %lor.lhs.false.sw.epilog_crit_edge ], [ -22, %sw.bb.sw.epilog_crit_edge ]
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_get_ts_info(ptr noundef %netdev, ptr noundef %info) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %ptp_info = getelementptr i8, ptr %netdev, i32 19260
  %0 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ptp_info, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %get_ts_info = getelementptr inbounds %struct.macb_ptp_info, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %get_ts_info to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %get_ts_info, align 4
  %call2 = tail call i32 %3(ptr noundef %netdev, ptr noundef %info) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call3 = tail call i32 @ethtool_op_get_ts_info(ptr noundef %netdev, ptr noundef %info) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call2, %if.then ], [ %call3, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_get_link_ksettings(ptr nocapture noundef readonly %netdev, ptr noundef %kset) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %netdev, i32 18424
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 8
  %call1 = tail call i32 @phylink_ethtool_ksettings_get(ptr noundef %1, ptr noundef %kset) #21
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_set_link_ksettings(ptr nocapture noundef readonly %netdev, ptr noundef %kset) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %phylink = getelementptr i8, ptr %netdev, i32 18424
  %0 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %phylink, align 8
  %call1 = tail call i32 @phylink_ethtool_ksettings_set(ptr noundef %1, ptr noundef %kset) #21
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_ethtool_get_wol(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_set_wol(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @device_set_wakeup_enable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #17

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gem_add_flow_filter(ptr noundef %netdev, ptr nocapture noundef readonly %cmd) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %fs1 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 176) #27
  %cmp = icmp eq ptr %call7.i, null
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = call ptr @memcpy(ptr %call7.i, ptr %fs1, i32 168)
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gem_add_flow_filter.__UNIQUE_ID_ddebug508, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gem_add_flow_filter, %if.then8)) #21
          to label %do.body18 [label %if.then8], !srcloc !299

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %fs1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %fs1, align 8
  %ring_cookie = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 5
  %4 = ptrtoint ptr %ring_cookie to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ring_cookie, align 8
  %conv = trunc i64 %5 to i32
  %location = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  %6 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %location, align 8
  %h_u = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1
  %8 = ptrtoint ptr %h_u to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %h_u, align 4
  %ip4dst = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %10 = ptrtoint ptr %ip4dst to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ip4dst, align 4
  %psrc = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %12 = ptrtoint ptr %psrc to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %psrc, align 4
  %conv11 = zext i16 %13 to i32
  %pdst = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u, i32 0, i32 3
  %14 = ptrtoint ptr %pdst to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %pdst, align 2
  %conv13 = zext i16 %15 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gem_add_flow_filter.__UNIQUE_ID_ddebug508, ptr noundef %netdev, ptr noundef nonnull @.str.69, i32 noundef %3, i32 noundef %conv, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %conv11, i32 noundef %conv13) #21
  br label %do.body18

do.body18:                                        ; preds = %if.then8, %if.end
  %rx_fs_lock = getelementptr i8, ptr %netdev, i32 19460
  %call23 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rx_fs_lock) #21
  %rx_fs_list = getelementptr i8, ptr %netdev, i32 19448
  %location39 = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %call7.i, i32 0, i32 6
  %location47 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  br label %for.cond

for.cond:                                         ; preds = %if.else.for.cond_crit_edge, %do.body18
  %.pn.in = phi ptr [ %rx_fs_list, %do.body18 ], [ %.pn, %if.else.for.cond_crit_edge ]
  %16 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn = load ptr, ptr %.pn.in, align 8
  %cmp32.not = icmp eq ptr %.pn, %rx_fs_list
  br i1 %cmp32.not, label %if.then60.critedge, label %for.body

for.body:                                         ; preds = %for.cond
  %location37 = getelementptr i8, ptr %.pn, i32 -8
  %17 = ptrtoint ptr %location37 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %location37, align 8
  %19 = ptrtoint ptr %location39 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %location39, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %20)
  %cmp40 = icmp ugt i32 %18, %20
  br i1 %cmp40, label %if.then42, label %if.else

if.then42:                                        ; preds = %for.body
  %list43 = getelementptr inbounds %struct.ethtool_rx_fs_item, ptr %call7.i, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %list43, ptr noundef %22, ptr noundef %.pn) #21
  br i1 %call.i.i, label %if.end.i.i, label %if.then42.if.end64_crit_edge

if.then42.if.end64_crit_edge:                     ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

if.end.i.i:                                       ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #23
  %23 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %list43, ptr %prev.i, align 4
  %24 = ptrtoint ptr %list43 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %.pn, ptr %list43, align 8
  %prev3.i.i = getelementptr inbounds %struct.ethtool_rx_fs_item, ptr %call7.i, i32 0, i32 1, i32 1
  %25 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev3.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %list43, ptr %22, align 4
  br label %if.end64

if.else:                                          ; preds = %for.body
  %27 = ptrtoint ptr %location47 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %location47, align 8
  %cmp48 = icmp eq i32 %18, %28
  br i1 %cmp48, label %if.then50, label %if.else.for.cond_crit_edge

if.else.for.cond_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.then50:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %netdev, ptr noundef nonnull @.str.70, i32 noundef %18) #24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rx_fs_lock, i32 noundef %call23) #21
  tail call void @kfree(ptr noundef nonnull %call7.i) #21
  br label %cleanup

if.then60.critedge:                               ; preds = %for.cond
  %list61 = getelementptr inbounds %struct.ethtool_rx_fs_item, ptr %call7.i, i32 0, i32 1
  %prev.i105 = getelementptr i8, ptr %netdev, i32 19452
  %29 = ptrtoint ptr %prev.i105 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i105, align 4
  %call.i.i106 = tail call zeroext i1 @__list_add_valid(ptr noundef %list61, ptr noundef %30, ptr noundef %rx_fs_list) #21
  br i1 %call.i.i106, label %if.end.i.i108, label %if.then60.critedge.if.end64_crit_edge

if.then60.critedge.if.end64_crit_edge:            ; preds = %if.then60.critedge
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

if.end.i.i108:                                    ; preds = %if.then60.critedge
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %prev.i105 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %list61, ptr %prev.i105, align 4
  %32 = ptrtoint ptr %list61 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %rx_fs_list, ptr %list61, align 8
  %prev3.i.i107 = getelementptr inbounds %struct.ethtool_rx_fs_item, ptr %call7.i, i32 0, i32 1, i32 1
  %33 = ptrtoint ptr %prev3.i.i107 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev3.i.i107, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %list61, ptr %30, align 4
  br label %if.end64

if.end64:                                         ; preds = %if.end.i.i108, %if.then60.critedge.if.end64_crit_edge, %if.end.i.i, %if.then42.if.end64_crit_edge
  tail call fastcc void @gem_prog_cmp_regs(ptr noundef %add.ptr.i, ptr noundef %fs1)
  %count = getelementptr i8, ptr %netdev, i32 19456
  %35 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %count, align 8
  %inc = add i32 %36, 1
  store i32 %inc, ptr %count, align 8
  tail call fastcc void @gem_enable_flow_filters(ptr noundef %add.ptr.i, i1 noundef zeroext true)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rx_fs_lock, i32 noundef %call23) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end64, %if.then50, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end64 ], [ -16, %if.then50 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @gem_del_flow_filter(ptr noundef %netdev, ptr nocapture noundef readonly %cmd) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %netdev, i32 2304
  %rx_fs_lock = getelementptr i8, ptr %netdev, i32 19460
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %rx_fs_lock) #21
  %rx_fs_list = getelementptr i8, ptr %netdev, i32 19448
  %location14 = getelementptr inbounds %struct.ethtool_rxnfc, ptr %cmd, i32 0, i32 3, i32 6
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %entry
  %.pn.in = phi ptr [ %rx_fs_list, %entry ], [ %.pn, %for.body.for.cond_crit_edge ]
  %0 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %0)
  %.pn = load ptr, ptr %.pn.in, align 8
  %cmp10.not = icmp eq ptr %.pn, %rx_fs_list
  br i1 %cmp10.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %location = getelementptr i8, ptr %.pn, i32 -8
  %1 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %location, align 8
  %3 = ptrtoint ptr %location14 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %location14, align 8
  %cmp15 = icmp eq i32 %2, %4
  br i1 %cmp15, label %if.then, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.cond

if.then:                                          ; preds = %for.body
  %location.le = getelementptr i8, ptr %.pn, i32 -8
  %item.0.le = getelementptr i8, ptr %.pn, i32 -168
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @gem_del_flow_filter.__UNIQUE_ID_ddebug509, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@gem_del_flow_filter, %if.then25)) #21
          to label %do.end36 [label %if.then25], !srcloc !299

if.then25:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %5 = ptrtoint ptr %item.0.le to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %item.0.le, align 8
  %ring_cookie = getelementptr i8, ptr %.pn, i32 -16
  %7 = ptrtoint ptr %ring_cookie to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %ring_cookie, align 8
  %conv26 = trunc i64 %8 to i32
  %9 = ptrtoint ptr %location.le to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %location.le, align 8
  %h_u = getelementptr i8, ptr %.pn, i32 -164
  %11 = ptrtoint ptr %h_u to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %h_u, align 4
  %ip4dst = getelementptr i8, ptr %.pn, i32 -160
  %13 = ptrtoint ptr %ip4dst to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ip4dst, align 4
  %psrc = getelementptr i8, ptr %.pn, i32 -156
  %15 = ptrtoint ptr %psrc to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %psrc, align 4
  %conv30 = zext i16 %16 to i32
  %pdst = getelementptr i8, ptr %.pn, i32 -154
  %17 = ptrtoint ptr %pdst to i32
  call void @__asan_load2_noabort(i32 %17)
  %18 = load i16, ptr %pdst, align 2
  %conv32 = zext i16 %18 to i32
  tail call void (ptr, ptr, ptr, ...) @__dynamic_netdev_dbg(ptr noundef nonnull @gem_del_flow_filter.__UNIQUE_ID_ddebug509, ptr noundef %netdev, ptr noundef nonnull @.str.72, i32 noundef %6, i32 noundef %conv26, i32 noundef %10, i32 noundef %12, i32 noundef %14, i32 noundef %conv30, i32 noundef %conv32) #21
  br label %do.end36

do.end36:                                         ; preds = %if.then25, %if.then
  %macb_reg_writel = getelementptr i8, ptr %netdev, i32 2316
  %19 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %macb_reg_writel, align 4
  %21 = ptrtoint ptr %location.le to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %location.le, align 8
  %mul = shl i32 %22, 2
  %add = add i32 %mul, 1344
  tail call void %20(ptr noundef %add.ptr.i, i32 noundef %add, i32 noundef 0) #21
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn) #21
  br i1 %call.i.i, label %if.end.i.i, label %do.end36.list_del.exit_crit_edge

do.end36.list_del.exit_crit_edge:                 ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #23
  br label %list_del.exit

if.end.i.i:                                       ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #23
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i.i, align 4
  %25 = ptrtoint ptr %.pn to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %.pn, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev1.i.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %26, ptr %24, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.end36.list_del.exit_crit_edge
  %29 = ptrtoint ptr %.pn to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %count = getelementptr i8, ptr %netdev, i32 19456
  %31 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %count, align 8
  %dec = add i32 %32, -1
  store i32 %dec, ptr %count, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rx_fs_lock, i32 noundef %call3) #21
  tail call void @kfree(ptr noundef %item.0.le) #21
  br label %cleanup

for.end:                                          ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %rx_fs_lock, i32 noundef %call3) #21
  br label %cleanup

cleanup:                                          ; preds = %for.end, %list_del.exit
  %retval.0 = phi i32 [ 0, %list_del.exit ], [ -22, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @gem_prog_cmp_regs(ptr noundef %bp, ptr nocapture noundef readonly %fs) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %location = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 6
  %0 = ptrtoint ptr %location to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %location, align 8
  %caps.i = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 25
  %2 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.i = icmp slt i32 %3, 0
  br i1 %tobool.i, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %h_u = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 1
  %m_u = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 3
  %4 = ptrtoint ptr %m_u to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %m_u, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %5)
  %cmp = icmp eq i32 %5, -1
  br i1 %cmp, label %if.then2, label %if.end.if.end17_crit_edge

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %6 = ptrtoint ptr %h_u to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %h_u, align 4
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %8 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_writel, align 4
  %conv8 = and i32 %1, 65535
  %mul10 = mul nuw nsw i32 %conv8, 24
  %add = add nuw nsw i32 %mul10, 1792
  tail call void %9(ptr noundef %bp, i32 noundef %add, i32 noundef %7) #21
  %10 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %macb_reg_writel, align 4
  %add16 = add nuw nsw i32 %mul10, 1796
  tail call void %11(ptr noundef %bp, i32 noundef %add16, i32 noundef 652) #21
  br label %if.end17

if.end17:                                         ; preds = %if.then2, %if.end.if.end17_crit_edge
  %ip4dst = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 3, i32 0, i32 0, i32 1
  %12 = ptrtoint ptr %ip4dst to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %ip4dst, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %cmp18 = icmp eq i32 %13, -1
  br i1 %cmp18, label %if.then20, label %if.end17.if.end42_crit_edge

if.end17.if.end42_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end42

if.then20:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #23
  %ip4dst21 = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 1, i32 0, i32 0, i32 1
  %14 = ptrtoint ptr %ip4dst21 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ip4dst21, align 4
  %macb_reg_writel28 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %16 = ptrtoint ptr %macb_reg_writel28 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %macb_reg_writel28, align 4
  %conv29 = and i32 %1, 65535
  %mul32 = mul nuw nsw i32 %conv29, 24
  %add34 = add nuw nsw i32 %mul32, 1800
  tail call void %17(ptr noundef %bp, i32 noundef %add34, i32 noundef %15) #21
  %18 = ptrtoint ptr %macb_reg_writel28 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_writel28, align 4
  %add41 = add nuw nsw i32 %mul32, 1804
  tail call void %19(ptr noundef %bp, i32 noundef %add41, i32 noundef 656) #21
  br label %if.end42

if.end42:                                         ; preds = %if.then20, %if.end17.if.end42_crit_edge
  %psrc = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 3, i32 0, i32 0, i32 2
  %20 = ptrtoint ptr %psrc to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %psrc, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %21)
  %cmp44 = icmp eq i16 %21, -1
  %pdst54 = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %m_u, i32 0, i32 3
  %22 = ptrtoint ptr %pdst54 to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %pdst54, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %23)
  %cmp56 = icmp eq i16 %23, -1
  br i1 %cmp44, label %if.then49, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end42
  br i1 %cmp56, label %if.then49.thread, label %lor.lhs.false.if.end116_crit_edge

lor.lhs.false.if.end116_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end116

if.then49:                                        ; preds = %if.end42
  br i1 %cmp56, label %if.then49.if.then58_crit_edge, label %if.then82

if.then49.if.then58_crit_edge:                    ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then58

if.then49.thread:                                 ; preds = %lor.lhs.false
  %24 = ptrtoint ptr %pdst54 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %pdst54, align 2
  call void @__sanitizer_cov_trace_cmp2(i16 %21, i16 %25)
  %cmp56230 = icmp eq i16 %21, %25
  br i1 %cmp56230, label %if.then49.thread.if.then58_crit_edge, label %if.else91

if.then49.thread.if.then58_crit_edge:             ; preds = %if.then49.thread
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then58

if.then58:                                        ; preds = %if.then49.thread.if.then58_crit_edge, %if.then49.if.then58_crit_edge
  %psrc60 = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 1, i32 0, i32 0, i32 2
  %26 = ptrtoint ptr %psrc60 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %psrc60, align 4
  %conv61 = zext i16 %27 to i32
  %pdst65 = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u, i32 0, i32 3
  br label %if.end101

if.then82:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #23
  %psrc84 = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 1, i32 0, i32 0, i32 2
  br label %if.end101

if.else91:                                        ; preds = %if.then49.thread
  call void @__sanitizer_cov_trace_pc() #23
  %pdst93 = getelementptr inbounds %struct.ethtool_tcpip4_spec, ptr %h_u, i32 0, i32 3
  br label %if.end101

if.end101:                                        ; preds = %if.else91, %if.then82, %if.then58
  %.sink231.in = phi ptr [ %psrc84, %if.then82 ], [ %pdst93, %if.else91 ], [ %pdst65, %if.then58 ]
  %.sink = phi i32 [ 65535, %if.then82 ], [ 65535, %if.else91 ], [ %conv61, %if.then58 ]
  %w1.0 = phi i32 [ 256, %if.then82 ], [ 258, %if.else91 ], [ 768, %if.then58 ]
  %28 = ptrtoint ptr %.sink231.in to i32
  call void @__asan_load2_noabort(i32 %28)
  %.sink231 = load i16, ptr %.sink231.in, align 2
  %conv85 = zext i16 %.sink231 to i32
  %shl87 = shl nuw i32 %conv85, 16
  %or88 = or i32 %shl87, %.sink
  %macb_reg_writel102 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %29 = ptrtoint ptr %macb_reg_writel102 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %macb_reg_writel102, align 4
  %conv103 = and i32 %1, 65535
  %mul106 = mul nuw nsw i32 %conv103, 24
  %add108 = add nuw nsw i32 %mul106, 1808
  tail call void %30(ptr noundef %bp, i32 noundef %add108, i32 noundef %or88) #21
  %31 = ptrtoint ptr %macb_reg_writel102 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %macb_reg_writel102, align 4
  %add115 = add nuw nsw i32 %mul106, 1812
  tail call void %32(ptr noundef %bp, i32 noundef %add115, i32 noundef %w1.0) #21
  br label %if.end116

if.end116:                                        ; preds = %if.end101, %lor.lhs.false.if.end116_crit_edge
  %cmp_c.0.off0 = phi i1 [ true, %if.end101 ], [ false, %lor.lhs.false.if.end116_crit_edge ]
  %ring_cookie = getelementptr inbounds %struct.ethtool_rx_flow_spec, ptr %fs, i32 0, i32 5
  %33 = ptrtoint ptr %ring_cookie to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %ring_cookie, align 8
  %35 = trunc i64 %34 to i32
  %conv123 = and i32 %35, 15
  %and130 = mul i32 %1, 24576
  %shl131 = and i32 %and130, 253952
  %or132 = select i1 %cmp, i32 %shl131, i32 0
  %add139 = mul i32 %1, 1572864
  %and140 = add i32 %add139, 524288
  %shl141 = and i32 %and140, 16252928
  %or142 = select i1 %cmp18, i32 %shl141, i32 0
  %t2_scr.0 = or i32 %or142, %or132
  %t2_scr.1 = or i32 %t2_scr.0, %conv123
  %add149 = mul i32 %1, 100663296
  %and150 = add i32 %add149, 67108864
  %shl151 = and i32 %and150, 1040187392
  %spec.select = select i1 %cmp_c.0.off0, i32 %shl151, i32 0
  %t2_scr.2 = or i32 %t2_scr.1, %spec.select
  %macb_reg_writel154 = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 3
  %36 = ptrtoint ptr %macb_reg_writel154 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %macb_reg_writel154, align 4
  %conv155 = shl i32 %1, 2
  %mul156 = and i32 %conv155, 262140
  %add157 = add nuw nsw i32 %mul156, 1344
  tail call void %37(ptr noundef %bp, i32 noundef %add157, i32 noundef %t2_scr.2) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ethtool_op_get_ts_info(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_ksettings_get(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @phylink_ethtool_ksettings_set(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @macb_init_rx_ring(ptr nocapture noundef %queue) unnamed_addr #18 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  %0 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %queue, align 8
  %rx_ring_size = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_ring_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp13.not = icmp eq i32 %3, 0
  br i1 %cmp13.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %rx_buffers_dma = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 18
  %4 = ptrtoint ptr %rx_buffers_dma to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rx_buffers_dma, align 8
  %rx_ring.i = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 21
  %rx_buffer_size = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %macb_rx_desc.exit.for.body_crit_edge, %for.body.lr.ph
  %i.015 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %macb_rx_desc.exit.for.body_crit_edge ]
  %addr.014 = phi i32 [ %5, %for.body.lr.ph ], [ %add, %macb_rx_desc.exit.for.body_crit_edge ]
  %6 = ptrtoint ptr %queue to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %queue, align 8
  %rx_ring_size.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %rx_ring_size.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %rx_ring_size.i.i, align 4
  %sub.i.i = add i32 %9, -1
  %and.i.i = and i32 %sub.i.i, %i.015
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 35
  %10 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %hw_dma_cap.i.i, align 8
  %12 = zext i8 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.128)
  switch i8 %11, label %for.body.macb_rx_desc.exit_crit_edge [
    i8 1, label %for.body.sw.bb.i.i_crit_edge
    i8 2, label %for.body.sw.bb.i.i_crit_edge16
    i8 3, label %sw.bb1.i.i
  ]

for.body.sw.bb.i.i_crit_edge16:                   ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.sw.bb.i.i_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i

for.body.macb_rx_desc.exit_crit_edge:             ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit

sw.bb.i.i:                                        ; preds = %for.body.sw.bb.i.i_crit_edge, %for.body.sw.bb.i.i_crit_edge16
  %shl.i.i = shl i32 %and.i.i, 1
  br label %macb_rx_desc.exit

sw.bb1.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i = mul i32 %and.i.i, 3
  br label %macb_rx_desc.exit

macb_rx_desc.exit:                                ; preds = %sw.bb1.i.i, %sw.bb.i.i, %for.body.macb_rx_desc.exit_crit_edge
  %desc_idx.addr.0.i.i = phi i32 [ %and.i.i, %for.body.macb_rx_desc.exit_crit_edge ], [ %mul.i.i, %sw.bb1.i.i ], [ %shl.i.i, %sw.bb.i.i ]
  %13 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %rx_ring.i, align 4
  %arrayidx.i = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %addr.014, ptr %arrayidx.i, align 4
  %ctrl = getelementptr %struct.macb_dma_desc, ptr %14, i32 %desc_idx.addr.0.i.i, i32 1
  %16 = ptrtoint ptr %ctrl to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %ctrl, align 4
  %17 = ptrtoint ptr %rx_buffer_size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rx_buffer_size, align 8
  %add = add i32 %18, %addr.014
  %inc = add nuw i32 %i.015, 1
  %19 = ptrtoint ptr %rx_ring_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %rx_ring_size, align 4
  %cmp = icmp ult i32 %inc, %20
  br i1 %cmp, label %macb_rx_desc.exit.for.body_crit_edge, label %macb_rx_desc.exit.for.end_crit_edge

macb_rx_desc.exit.for.end_crit_edge:              ; preds = %macb_rx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

macb_rx_desc.exit.for.body_crit_edge:             ; preds = %macb_rx_desc.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %macb_rx_desc.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %desc.0.lcssa = phi ptr [ null, %entry.for.end_crit_edge ], [ %arrayidx.i, %macb_rx_desc.exit.for.end_crit_edge ]
  %21 = ptrtoint ptr %desc.0.lcssa to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %desc.0.lcssa, align 4
  %or = or i32 %22, 2
  store i32 %or, ptr %desc.0.lcssa, align 4
  %rx_tail = getelementptr inbounds %struct.macb_queue, ptr %queue, i32 0, i32 19
  %23 = ptrtoint ptr %rx_tail to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %rx_tail, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_get_rate(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_use_autosuspend(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #19

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_set_status(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_dev_dbg(ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @gem_ptp_init(ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @gem_ptp_remove(ptr noundef) #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @gem_get_ptp_max_adj() #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 64000000
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_get_tsu_rate(ptr nocapture noundef readonly %bp) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 11
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %1, i32 0, i32 3
  %call = tail call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.17) #21
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.else, label %entry.cleanup.sink.split_crit_edge

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.else:                                          ; preds = %entry
  %pclk = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 12
  %2 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pclk, align 8
  %cmp.i14 = icmp ugt ptr %3, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i14, label %if.else.cleanup_crit_edge, label %if.else.cleanup.sink.split_crit_edge

if.else.cleanup.sink.split_crit_edge:             ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup.sink.split

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.else.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %call.sink = phi ptr [ %call, %entry.cleanup.sink.split_crit_edge ], [ %3, %if.else.cleanup.sink.split_crit_edge ]
  %call2 = tail call i32 @clk_get_rate(ptr noundef %call.sink) #21
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ -524, %if.else.cleanup_crit_edge ], [ %call2, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_get_ts_info(ptr noundef %dev, ptr noundef %info) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %hw_dma_cap = getelementptr i8, ptr %dev, i32 19264
  %0 = ptrtoint ptr %hw_dma_cap to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %hw_dma_cap, align 8
  %2 = and i8 %1, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp = icmp eq i8 %2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call2 = tail call i32 @ethtool_op_get_ts_info(ptr noundef %dev, ptr noundef %info) #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %so_timestamping = getelementptr inbounds %struct.ethtool_ts_info, ptr %info, i32 0, i32 1
  %3 = ptrtoint ptr %so_timestamping to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 95, ptr %so_timestamping, align 4
  %tx_types = getelementptr inbounds %struct.ethtool_ts_info, ptr %info, i32 0, i32 3
  %4 = ptrtoint ptr %tx_types to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 7, ptr %tx_types, align 4
  %rx_filters = getelementptr inbounds %struct.ethtool_ts_info, ptr %info, i32 0, i32 5
  %5 = ptrtoint ptr %rx_filters to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 3, ptr %rx_filters, align 4
  %ptp_clock = getelementptr i8, ptr %dev, i32 19316
  %6 = ptrtoint ptr %ptp_clock to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ptp_clock, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %if.end.cond.end_crit_edge, label %cond.true

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %cond.end

cond.true:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %call4 = tail call i32 @ptp_clock_index(ptr noundef nonnull %7) #21
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end.cond.end_crit_edge
  %cond = phi i32 [ %call4, %cond.true ], [ -1, %if.end.cond.end_crit_edge ]
  %phc_index = getelementptr inbounds %struct.ethtool_ts_info, ptr %info, i32 0, i32 2
  %8 = ptrtoint ptr %phc_index to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %cond, ptr %phc_index, align 4
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.then
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gem_get_hwtst(ptr noundef, ptr noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @gem_set_hwtst(ptr noundef, ptr noundef, i32 noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @ptp_clock_index(ptr noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @get_random_bytes(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_mdio_read(ptr nocapture noundef readonly %bus, i32 noundef %mii_id, i32 noundef %regnum) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.mii_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 8
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %3, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %usage_count.i = getelementptr inbounds %struct.platform_device, ptr %5, i32 0, i32 3, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !326
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !327
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %if.then.mdio_pm_exit_crit_edge, label %do.end11.i.i.i.i

if.then.mdio_pm_exit_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_pm_exit

do.end11.i.i.i.i:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !328
  br label %mdio_pm_exit

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.end.mdio_read_exit_crit_edge, label %if.end6

if.end.mdio_read_exit_crit_edge:                  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_read_exit

if.end6:                                          ; preds = %if.end
  %and = and i32 %regnum, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %macb_reg_writel32 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %macb_reg_writel32 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macb_reg_writel32, align 4
  %and33 = shl i32 %mii_id, 23
  %shl34 = and i32 %and33, 260046848
  br i1 %tobool.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end6
  %9 = shl i32 %regnum, 2
  %shl11 = and i32 %9, 8126464
  %or12 = or i32 %shl11, %shl34
  %and13 = and i32 %regnum, 65535
  %or16 = or i32 %and13, %or12
  %or17 = or i32 %or16, 131072
  tail call void %8(ptr noundef %1, i32 noundef 52, i32 noundef %or17) #21
  %call18 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then7.mdio_read_exit_crit_edge, label %if.end21

if.then7.mdio_read_exit_crit_edge:                ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_read_exit

if.end21:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %macb_reg_writel32 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %macb_reg_writel32, align 4
  %or31 = or i32 %or12, 805437440
  tail call void %11(ptr noundef %1, i32 noundef 52, i32 noundef %or31) #21
  br label %if.end40

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %and36 = shl i32 %regnum, 18
  %shl37 = and i32 %and36, 8126464
  %or35 = or i32 %shl34, %shl37
  %or39 = or i32 %or35, 1610743808
  tail call void %8(ptr noundef %1, i32 noundef 52, i32 noundef %or39) #21
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.end21
  %call41 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %cmp42 = icmp slt i32 %call41, 0
  br i1 %cmp42, label %if.end40.mdio_read_exit_crit_edge, label %if.end44

if.end40.mdio_read_exit_crit_edge:                ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_read_exit

if.end44:                                         ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %12 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_readl, align 8
  %call45 = tail call i32 %13(ptr noundef %1, i32 noundef 52) #21
  %and47 = and i32 %call45, 65535
  br label %mdio_read_exit

mdio_read_exit:                                   ; preds = %if.end44, %if.end40.mdio_read_exit_crit_edge, %if.then7.mdio_read_exit_crit_edge, %if.end.mdio_read_exit_crit_edge
  %status.0 = phi i32 [ %call3, %if.end.mdio_read_exit_crit_edge ], [ %call18, %if.then7.mdio_read_exit_crit_edge ], [ %call41, %if.end40.mdio_read_exit_crit_edge ], [ %and47, %if.end44 ]
  %14 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pdev, align 4
  %call.i77 = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.platform_device, ptr %15, i32 0, i32 3, i32 12, i32 22
  %16 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %16)
  store volatile i64 %call.i77, ptr %last_busy.i, align 8
  %17 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev, align 4
  %dev51 = getelementptr inbounds %struct.platform_device, ptr %18, i32 0, i32 3
  %call.i78 = tail call i32 @__pm_runtime_suspend(ptr noundef %dev51, i32 noundef 13) #21
  br label %mdio_pm_exit

mdio_pm_exit:                                     ; preds = %mdio_read_exit, %do.end11.i.i.i.i, %if.then.mdio_pm_exit_crit_edge
  %status.1 = phi i32 [ %status.0, %mdio_read_exit ], [ %call.i, %if.then.mdio_pm_exit_crit_edge ], [ %call.i, %do.end11.i.i.i.i ]
  ret i32 %status.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_mdio_write(ptr nocapture noundef readonly %bus, i32 noundef %mii_id, i32 noundef %regnum, i16 noundef zeroext %value) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.mii_bus, ptr %bus, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 8
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %3, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %usage_count.i = getelementptr inbounds %struct.platform_device, ptr %5, i32 0, i32 3, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !326
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !327
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %if.then.mdio_pm_exit_crit_edge, label %do.end11.i.i.i.i

if.then.mdio_pm_exit_crit_edge:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_pm_exit

do.end11.i.i.i.i:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !328
  br label %mdio_pm_exit

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.end.mdio_write_exit_crit_edge, label %if.end6

if.end.mdio_write_exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_write_exit

if.end6:                                          ; preds = %if.end
  %and = and i32 %regnum, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %macb_reg_writel35 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %7 = ptrtoint ptr %macb_reg_writel35 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macb_reg_writel35, align 4
  %and36 = shl i32 %mii_id, 23
  %shl37 = and i32 %and36, 260046848
  br i1 %tobool.not, label %if.else, label %if.then7

if.then7:                                         ; preds = %if.end6
  %9 = shl i32 %regnum, 2
  %shl11 = and i32 %9, 8126464
  %or12 = or i32 %shl11, %shl37
  %and13 = and i32 %regnum, 65535
  %or16 = or i32 %and13, %or12
  %or17 = or i32 %or16, 131072
  tail call void %8(ptr noundef %1, i32 noundef 52, i32 noundef %or17) #21
  %call18 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %if.then7.mdio_write_exit_crit_edge, label %if.end21

if.then7.mdio_write_exit_crit_edge:               ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  br label %mdio_write_exit

if.end21:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %macb_reg_writel35 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %macb_reg_writel35, align 4
  %conv = zext i16 %value to i32
  %or31 = or i32 %or12, %conv
  %or34 = or i32 %or31, 268566528
  tail call void %11(ptr noundef %1, i32 noundef 52, i32 noundef %or34) #21
  br label %if.end47

if.else:                                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  %and39 = shl i32 %regnum, 18
  %shl40 = and i32 %and39, 8126464
  %conv43 = zext i16 %value to i32
  %or38 = or i32 %shl37, %shl40
  %or42 = or i32 %or38, %conv43
  %or46 = or i32 %or42, 1342308352
  tail call void %8(ptr noundef %1, i32 noundef 52, i32 noundef %or46) #21
  br label %if.end47

if.end47:                                         ; preds = %if.else, %if.end21
  %call48 = tail call fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %1)
  br label %mdio_write_exit

mdio_write_exit:                                  ; preds = %if.end47, %if.then7.mdio_write_exit_crit_edge, %if.end.mdio_write_exit_crit_edge
  %status.0 = phi i32 [ %call3, %if.end.mdio_write_exit_crit_edge ], [ %call18, %if.then7.mdio_write_exit_crit_edge ], [ %call48, %if.end47 ]
  %12 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev, align 4
  %call.i80 = tail call i64 @ktime_get_mono_fast_ns() #21
  %last_busy.i = getelementptr inbounds %struct.platform_device, ptr %13, i32 0, i32 3, i32 12, i32 22
  %14 = ptrtoint ptr %last_busy.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store volatile i64 %call.i80, ptr %last_busy.i, align 8
  %15 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev, align 4
  %dev56 = getelementptr inbounds %struct.platform_device, ptr %16, i32 0, i32 3
  %call.i81 = tail call i32 @__pm_runtime_suspend(ptr noundef %dev56, i32 noundef 13) #21
  br label %mdio_pm_exit

mdio_pm_exit:                                     ; preds = %mdio_write_exit, %do.end11.i.i.i.i, %if.then.mdio_pm_exit_crit_edge
  %status.1 = phi i32 [ %status.0, %mdio_write_exit ], [ %call.i, %if.then.mdio_pm_exit_crit_edge ], [ %call.i, %do.end11.i.i.i.i ]
  ret i32 %status.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @mdiobus_alloc_size(i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @macb_mdio_wait_for_idle(ptr noundef %bp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i64 @ktime_get() #21
  %add.i = add i64 %call, 1000000000
  tail call void @__might_sleep(ptr noundef nonnull @.str.5, i32 noundef 330) #21
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %bp, i32 0, i32 2
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call834 = tail call i32 %1(ptr noundef %bp, i32 noundef 8) #21
  %and35 = and i32 %call834, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35)
  %tobool.not36 = icmp eq i32 %and35, 0
  br i1 %tobool.not36, label %entry.land.lhs.true_crit_edge, label %entry.for.end.thread_crit_edge

entry.for.end.thread_crit_edge:                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.thread

entry.land.lhs.true_crit_edge:                    ; preds = %entry
  br label %land.lhs.true

land.lhs.true:                                    ; preds = %if.then20.land.lhs.true_crit_edge, %entry.land.lhs.true_crit_edge
  %call12 = tail call i64 @ktime_get() #21
  call void @__sanitizer_cov_trace_cmp8(i64 %call12, i64 %add.i)
  %cmp3.i = icmp sgt i64 %call12, %add.i
  br i1 %cmp3.i, label %for.end, label %if.then20

if.then20:                                        ; preds = %land.lhs.true
  tail call void @usleep_range_state(i32 noundef 1, i32 noundef 1, i32 noundef 2) #21
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call8 = tail call i32 %3(ptr noundef %bp, i32 noundef 8) #21
  %and = and i32 %call8, 4
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then20.land.lhs.true_crit_edge, label %if.then20.for.end.thread_crit_edge

if.then20.for.end.thread_crit_edge:               ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.thread

if.then20.land.lhs.true_crit_edge:                ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #23
  br label %land.lhs.true

for.end:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #23
  %4 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl, align 8
  %call17 = tail call i32 %5(ptr noundef %bp, i32 noundef 8) #21
  %.pre = and i32 %call17, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pre)
  %tobool23.not = icmp eq i32 %.pre, 0
  %spec.select = select i1 %tobool23.not, i32 -110, i32 0
  br label %for.end.thread

for.end.thread:                                   ; preds = %for.end, %if.then20.for.end.thread_crit_edge, %entry.for.end.thread_crit_edge
  %6 = phi i32 [ 0, %entry.for.end.thread_crit_edge ], [ %spec.select, %for.end ], [ 0, %if.then20.for.end.thread_crit_edge ]
  ret i32 %6
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @usleep_range_state(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_child_by_name(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @of_mdiobus_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_phy_is_fixed_link(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__mdiobus_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @of_get_next_available_child(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @of_mdiobus_child_is_phy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_get_pcs_fixed_state(ptr nocapture noundef readonly %config, ptr nocapture noundef %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  %macb_reg_readl = getelementptr i8, ptr %1, i32 1208
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %3(ptr noundef %add.ptr.i, i32 noundef 8) #21
  %link = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 6
  %4 = trunc i32 %call1 to i8
  %5 = ptrtoint ptr %link to i32
  call void @__asan_load1_noabort(i32 %5)
  %bf.load = load i8, ptr %link, align 4
  %bf.shl = shl i8 %4, 7
  %bf.clear = and i8 %bf.load, 127
  %bf.set = or i8 %bf.clear, %bf.shl
  store i8 %bf.set, ptr %link, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @phylink_create(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal void @macb_pcs_get_state(ptr nocapture noundef readnone %pcs, ptr nocapture noundef %state) #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %link = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 6
  %0 = ptrtoint ptr %link to i32
  call void @__asan_load1_noabort(i32 %0)
  %bf.load = load i8, ptr %link, align 4
  %bf.clear = and i8 %bf.load, 127
  store i8 %bf.clear, ptr %link, align 4
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @macb_pcs_config(ptr nocapture noundef readnone %pcs, i32 noundef %mode, i32 noundef %interface, ptr nocapture noundef readnone %advertising, i1 noundef zeroext %permit_pause_to_mac) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal void @macb_pcs_an_restart(ptr nocapture noundef %pcs) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_usx_pcs_get_state(ptr noundef %pcs, ptr nocapture noundef %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %pcs, i32 -16148
  %speed = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 3
  %0 = ptrtoint ptr %speed to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 10000, ptr %speed, align 4
  %duplex = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 4
  %1 = ptrtoint ptr %duplex to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %duplex, align 4
  %an_complete = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 6
  %2 = ptrtoint ptr %an_complete to i32
  call void @__asan_load1_noabort(i32 %2)
  %bf.load = load i8, ptr %an_complete, align 4
  %bf.set = or i8 %bf.load, 32
  store i8 %bf.set, ptr %an_complete, align 4
  %macb_reg_readl = getelementptr i8, ptr %pcs, i32 -16140
  %3 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %4(ptr noundef %add.ptr, i32 noundef 2696) #21
  %5 = trunc i32 %call to i8
  %6 = ptrtoint ptr %an_complete to i32
  call void @__asan_load1_noabort(i32 %6)
  %bf.load2 = load i8, ptr %an_complete, align 4
  %bf.shl = shl i8 %5, 7
  %bf.clear3 = and i8 %bf.load2, 127
  %bf.set4 = or i8 %bf.clear3, %bf.shl
  store i8 %bf.set4, ptr %an_complete, align 4
  %7 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macb_reg_readl, align 8
  %call6 = tail call i32 %8(ptr noundef %add.ptr, i32 noundef 4) #21
  %and7 = and i32 %call6, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %pause = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 5
  %9 = ptrtoint ptr %pause to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 1, ptr %pause, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_usx_pcs_config(ptr noundef %pcs, i32 noundef %mode, i32 noundef %interface, ptr nocapture noundef readnone %advertising, i1 noundef zeroext %permit_pause_to_mac) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %pcs, i32 -16148
  %macb_reg_writel = getelementptr i8, ptr %pcs, i32 -16136
  %0 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_writel, align 4
  %macb_reg_readl = getelementptr i8, ptr %pcs, i32 -16140
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %3(ptr noundef %add.ptr, i32 noundef 2688) #21
  %or = or i32 %call, 1
  tail call void %1(ptr noundef %add.ptr, i32 noundef 2688, i32 noundef %or) #21
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_usx_pcs_link_up(ptr noundef %pcs, i32 noundef %mode, i32 noundef %interface, i32 noundef %speed, i32 noundef %duplex) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %pcs, i32 -16148
  %macb_reg_readl = getelementptr i8, ptr %pcs, i32 -16140
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %1(ptr noundef %add.ptr, i32 noundef 2688) #21
  %and = and i32 %call, -127747
  %or4 = or i32 %and, 69634
  %macb_reg_writel = getelementptr i8, ptr %pcs, i32 -16136
  %2 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %3(ptr noundef %add.ptr, i32 noundef 2688, i32 noundef %or4) #21
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_generic_validate(ptr noundef, ptr noundef, ptr noundef) #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal ptr @macb_mac_select_pcs(ptr nocapture noundef readonly %config, i32 noundef %interface) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %2 = zext i32 %interface to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.129)
  switch i32 %interface, label %entry.cleanup_crit_edge [
    i32 26, label %if.then
    i32 4, label %if.then2
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %phylink_usx_pcs = getelementptr i8, ptr %1, i32 17348
  br label %cleanup

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %phylink_sgmii_pcs = getelementptr i8, ptr %1, i32 17356
  br label %cleanup

cleanup:                                          ; preds = %if.then2, %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %phylink_usx_pcs, %if.then ], [ %phylink_sgmii_pcs, %if.then2 ], [ null, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_mac_config(ptr nocapture noundef readonly %config, i32 noundef %mode, ptr nocapture noundef readonly %state) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  %lock = getelementptr i8, ptr %1, i32 17048
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %caps.i = getelementptr i8, ptr %1, i32 17364
  %macb_reg_readl = getelementptr i8, ptr %1, i32 1208
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call8 = tail call i32 %3(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %macb_reg_readl18 = getelementptr i8, ptr %1, i32 1208
  %4 = ptrtoint ptr %macb_reg_readl18 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_readl18, align 8
  %call19 = tail call i32 %5(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %6 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %caps.i, align 4
  %and = and i32 %7, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else27, label %if.then22

if.then22:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %interface = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %8 = ptrtoint ptr %interface to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %interface, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %9)
  %cmp23 = icmp eq i32 %9, 7
  %or = or i32 %call8, 8192
  %spec.select = select i1 %cmp23, i32 %or, i32 %call8
  br label %if.end56

if.else27:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i149 = icmp slt i32 %7, 0
  br i1 %tobool.i149, label %if.then29, label %if.else27.if.end56_crit_edge

if.else27.if.end56_crit_edge:                     ; preds = %if.else27
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.then29:                                        ; preds = %if.else27
  %and30 = and i32 %call8, -134219777
  %and31 = and i32 %call19, 2147483647
  %interface32 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %10 = ptrtoint ptr %interface32 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %interface32, align 4
  %12 = zext i32 %11 to i64
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.130)
  switch i32 %11, label %if.else44 [
    i32 4, label %if.then35
    i32 26, label %if.then41
  ]

if.then35:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #23
  %or36 = or i32 %call8, 134219776
  br label %if.end56

if.then41:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #23
  %or42 = or i32 %and30, 2048
  %or43 = or i32 %call19, -2147483648
  br label %if.end56

if.else44:                                        ; preds = %if.then29
  %and46 = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and46)
  %tobool47.not = icmp eq i32 %and46, 0
  br i1 %tobool47.not, label %if.else44.if.end56_crit_edge, label %land.lhs.true

if.else44.if.end56_crit_edge:                     ; preds = %if.else44
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

land.lhs.true:                                    ; preds = %if.else44
  call void @__sanitizer_cov_trace_pc() #23
  %phy_interface = getelementptr i8, ptr %1, i32 17372
  %13 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %phy_interface, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %cmp48 = icmp eq i32 %14, 2
  %or51 = or i32 %and31, 268435456
  %spec.select145 = select i1 %cmp48, i32 %or51, i32 %and31
  br label %if.end56

if.end56:                                         ; preds = %land.lhs.true, %if.else44.if.end56_crit_edge, %if.then41, %if.then35, %if.else27.if.end56_crit_edge, %if.then22
  %ctrl.0 = phi i32 [ %or36, %if.then35 ], [ %or42, %if.then41 ], [ %and30, %if.else44.if.end56_crit_edge ], [ %call8, %if.else27.if.end56_crit_edge ], [ %spec.select, %if.then22 ], [ %and30, %land.lhs.true ]
  %ncr.0 = phi i32 [ %and31, %if.then35 ], [ %or43, %if.then41 ], [ %and31, %if.else44.if.end56_crit_edge ], [ %call19, %if.else27.if.end56_crit_edge ], [ %call19, %if.then22 ], [ %spec.select145, %land.lhs.true ]
  call void @__sanitizer_cov_trace_cmp4(i32 %call8, i32 %ctrl.0)
  %tobool57.not = icmp eq i32 %call8, %ctrl.0
  br i1 %tobool57.not, label %if.end56.if.end64_crit_edge, label %if.then58

if.end56.if.end64_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end64

if.then58:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel = getelementptr i8, ptr %1, i32 1212
  %15 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %16(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %ctrl.0) #21
  br label %if.end64

if.end64:                                         ; preds = %if.then58, %if.end56.if.end64_crit_edge
  call void @__sanitizer_cov_trace_cmp4(i32 %call19, i32 %ncr.0)
  %tobool66.not = icmp eq i32 %call19, %ncr.0
  br i1 %tobool66.not, label %if.end64.if.end74_crit_edge, label %if.then67

if.end64.if.end74_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end74

if.then67:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel70 = getelementptr i8, ptr %1, i32 1212
  %17 = ptrtoint ptr %macb_reg_writel70 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %macb_reg_writel70, align 4
  tail call void %18(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %ncr.0) #21
  br label %if.end74

if.end74:                                         ; preds = %if.then67, %if.end64.if.end74_crit_edge
  %19 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i155 = icmp slt i32 %20, 0
  br i1 %tobool.i155, label %land.lhs.true77, label %if.end74.if.end96_crit_edge

if.end74.if.end96_crit_edge:                      ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end96

land.lhs.true77:                                  ; preds = %if.end74
  %interface78 = getelementptr inbounds %struct.phylink_link_state, ptr %state, i32 0, i32 2
  %21 = ptrtoint ptr %interface78 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %interface78, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %22)
  %cmp79 = icmp eq i32 %22, 4
  br i1 %cmp79, label %if.then81, label %land.lhs.true77.if.end96_crit_edge

land.lhs.true77.if.end96_crit_edge:               ; preds = %land.lhs.true77
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end96

if.then81:                                        ; preds = %land.lhs.true77
  %macb_reg_readl82 = getelementptr i8, ptr %1, i32 1208
  %23 = ptrtoint ptr %macb_reg_readl82 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %macb_reg_readl82, align 8
  %call83 = tail call i32 %24(ptr noundef %add.ptr.i, i32 noundef 512) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %mode)
  %cmp84 = icmp eq i32 %mode, 1
  %and87 = and i32 %call83, -4097
  %masksel = select i1 %cmp84, i32 0, i32 4096
  %pcsctrl.0 = or i32 %and87, %masksel
  call void @__sanitizer_cov_trace_cmp4(i32 %call83, i32 %pcsctrl.0)
  %cmp91.not = icmp eq i32 %call83, %pcsctrl.0
  br i1 %cmp91.not, label %if.then81.if.end96_crit_edge, label %if.then93

if.then81.if.end96_crit_edge:                     ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end96

if.then93:                                        ; preds = %if.then81
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel94 = getelementptr i8, ptr %1, i32 1212
  %25 = ptrtoint ptr %macb_reg_writel94 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %macb_reg_writel94, align 4
  tail call void %26(ptr noundef %add.ptr.i, i32 noundef 512, i32 noundef %pcsctrl.0) #21
  br label %if.end96

if.end96:                                         ; preds = %if.then93, %if.then81.if.end96_crit_edge, %land.lhs.true77.if.end96_crit_edge, %if.end74.if.end96_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call4) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_mac_link_down(ptr nocapture noundef readonly %config, i32 noundef %mode, i32 noundef %interface) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %caps = getelementptr i8, ptr %1, i32 17364
  %2 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %caps, align 4
  %and = and i32 %3, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %num_queues = getelementptr i8, ptr %1, i32 1228
  %4 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp19.not = icmp eq i32 %5, 0
  br i1 %cmp19.not, label %if.then.if.end_crit_edge, label %for.body.lr.ph

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %queues = getelementptr i8, ptr %1, i32 1240
  %rx_intr_mask = getelementptr i8, ptr %1, i32 18436
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %q.021 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %queue.020 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %6 = ptrtoint ptr %queue.020 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %queue.020, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_writel, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %queue.020, i32 0, i32 4
  %10 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %IDR, align 8
  %12 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rx_intr_mask, align 4
  %or3 = or i32 %13, 2296
  tail call void %9(ptr noundef %7, i32 noundef %11, i32 noundef %or3) #21
  %inc = add nuw i32 %q.021, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.020, i32 1
  %14 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %num_queues, align 4
  %cmp = icmp ult i32 %inc, %15
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  %add.ptr = getelementptr i8, ptr %1, i32 -1104
  %macb_reg_readl = getelementptr i8, ptr %1, i32 1208
  %16 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %macb_reg_readl, align 8
  %call4 = tail call i32 %17(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %and5 = and i32 %call4, -13
  %macb_reg_writel6 = getelementptr i8, ptr %1, i32 1212
  %18 = ptrtoint ptr %macb_reg_writel6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_writel6, align 4
  tail call void %19(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %and5) #21
  tail call void @netif_tx_stop_all_queues(ptr noundef %add.ptr) #21
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @macb_mac_link_up(ptr nocapture noundef readonly %config, ptr nocapture noundef readnone %phy, i32 noundef %mode, i32 noundef %interface, i32 noundef %speed, i32 noundef %duplex, i1 noundef zeroext %tx_pause, i1 noundef zeroext %rx_pause) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %config to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %config, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 1200
  %lock = getelementptr i8, ptr %1, i32 17048
  %call5 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %caps.i = getelementptr i8, ptr %1, i32 17364
  %macb_reg_readl = getelementptr i8, ptr %1, i32 1208
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call9 = tail call i32 %3(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %and = and i32 %call9, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 100, i32 %speed)
  %cmp13 = icmp eq i32 %speed, 100
  %or = zext i1 %cmp13 to i32
  %spec.select = or i32 %and, %or
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %duplex)
  %tobool.not = icmp eq i32 %duplex, 0
  %or18 = or i32 %spec.select, 2
  %ctrl.1 = select i1 %tobool.not, i32 %spec.select, i32 %or18
  %4 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %caps.i, align 4
  %and20 = and i32 %5, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.then22, label %entry.if.end43_crit_edge

entry.if.end43_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

if.then22:                                        ; preds = %entry
  %and23 = and i32 %ctrl.1, -8193
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i112 = icmp slt i32 %5, 0
  %and26 = and i32 %ctrl.1, -9217
  call void @__sanitizer_cov_trace_const_cmp4(i32 1000, i32 %speed)
  %cmp27 = icmp eq i32 %speed, 1000
  %or30 = or i32 %and26, 1024
  %spec.select109 = select i1 %cmp27, i32 %or30, i32 %and26
  %ctrl.2 = select i1 %tobool.i112, i32 %spec.select109, i32 %and23
  %or35 = or i32 %ctrl.2, 8192
  %spec.select110 = select i1 %rx_pause, i32 %or35, i32 %ctrl.2
  %tx_clk.i = getelementptr i8, ptr %1, i32 17104
  %6 = ptrtoint ptr %tx_clk.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tx_clk.i, align 8
  %tobool.not.i = icmp ne ptr %7, null
  %and.i = and i32 %5, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  %or.cond = select i1 %tobool.not.i, i1 %tobool1.not.i, i1 false
  br i1 %or.cond, label %if.end.i, label %if.then22.macb_set_tx_clk.exit_crit_edge

if.then22.macb_set_tx_clk.exit_crit_edge:         ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_tx_clk.exit

if.end.i:                                         ; preds = %if.then22
  %phy_interface.i = getelementptr i8, ptr %1, i32 17372
  %8 = ptrtoint ptr %phy_interface.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %phy_interface.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %9)
  %cmp.i = icmp eq i32 %9, 2
  br i1 %cmp.i, label %if.end.i.macb_set_tx_clk.exit_crit_edge, label %if.end3.i

if.end.i.macb_set_tx_clk.exit_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_tx_clk.exit

if.end3.i:                                        ; preds = %if.end.i
  %10 = zext i32 %speed to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.131)
  switch i32 %speed, label %if.end3.i.macb_set_tx_clk.exit_crit_edge [
    i32 10, label %if.end3.i.sw.epilog.i_crit_edge
    i32 100, label %sw.bb4.i
    i32 1000, label %sw.bb5.i
  ]

if.end3.i.sw.epilog.i_crit_edge:                  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.i

if.end3.i.macb_set_tx_clk.exit_crit_edge:         ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_tx_clk.exit

sw.bb4.i:                                         ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.i

sw.bb5.i:                                         ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb5.i, %sw.bb4.i, %if.end3.i.sw.epilog.i_crit_edge
  %rate.0.i = phi i32 [ 125000000, %sw.bb5.i ], [ 25000000, %sw.bb4.i ], [ 2500000, %if.end3.i.sw.epilog.i_crit_edge ]
  %call.i = tail call i32 @clk_round_rate(ptr noundef nonnull %7, i32 noundef %rate.0.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp7.i = icmp slt i32 %call.i, 0
  br i1 %cmp7.i, label %sw.epilog.i.macb_set_tx_clk.exit_crit_edge, label %if.end9.i

sw.epilog.i.macb_set_tx_clk.exit_crit_edge:       ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_tx_clk.exit

if.end9.i:                                        ; preds = %sw.epilog.i
  %sub.i = sub nsw i32 %call.i, %rate.0.i
  %11 = tail call i32 @llvm.abs.i32(i32 %sub.i, i1 true) #21
  %div.i = udiv i32 %rate.0.i, 100000
  %add.i = add nsw i32 %div.i, -1
  %sub12.i = add nuw nsw i32 %add.i, %11
  %div1441.i = udiv i32 %sub12.i, %div.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %div1441.i)
  %cmp15.i = icmp ugt i32 %div1441.i, 5
  br i1 %cmp15.i, label %if.then16.i, label %if.end9.i.if.end17.i_crit_edge

if.end9.i.if.end17.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end17.i

if.then16.i:                                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev.i = getelementptr i8, ptr %1, i32 17116
  %12 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dev.i, align 4
  tail call void (ptr, ptr, ...) @netdev_warn(ptr noundef %13, ptr noundef nonnull @.str.86, i32 noundef %rate.0.i) #24
  br label %if.end17.i

if.end17.i:                                       ; preds = %if.then16.i, %if.end9.i.if.end17.i_crit_edge
  %14 = ptrtoint ptr %tx_clk.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tx_clk.i, align 8
  %call19.i = tail call i32 @clk_set_rate(ptr noundef %15, i32 noundef %call.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.end17.i.macb_set_tx_clk.exit_crit_edge, label %if.then21.i

if.end17.i.macb_set_tx_clk.exit_crit_edge:        ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_tx_clk.exit

if.then21.i:                                      ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #23
  %dev22.i = getelementptr i8, ptr %1, i32 17116
  %16 = ptrtoint ptr %dev22.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev22.i, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %17, ptr noundef nonnull @.str.87) #24
  br label %macb_set_tx_clk.exit

macb_set_tx_clk.exit:                             ; preds = %if.then21.i, %if.end17.i.macb_set_tx_clk.exit_crit_edge, %sw.epilog.i.macb_set_tx_clk.exit_crit_edge, %if.end3.i.macb_set_tx_clk.exit_crit_edge, %if.end.i.macb_set_tx_clk.exit_crit_edge, %if.then22.macb_set_tx_clk.exit_crit_edge
  %mog_init_rings = getelementptr i8, ptr %1, i32 17308
  %18 = ptrtoint ptr %mog_init_rings to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mog_init_rings, align 4
  tail call void %19(ptr noundef %add.ptr.i) #21
  %num_queues.i = getelementptr i8, ptr %1, i32 1228
  %20 = ptrtoint ptr %num_queues.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %num_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp17.not.i = icmp eq i32 %21, 0
  br i1 %cmp17.not.i, label %macb_set_tx_clk.exit.if.end43_crit_edge, label %for.body.preheader.i

macb_set_tx_clk.exit.if.end43_crit_edge:          ; preds = %macb_set_tx_clk.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

for.body.preheader.i:                             ; preds = %macb_set_tx_clk.exit
  %queues.i = getelementptr i8, ptr %1, i32 1240
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %q.019.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %queue.018.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %queues.i, %for.body.preheader.i ]
  %22 = ptrtoint ptr %queue.018.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %queue.018.i, align 8
  %macb_reg_writel.i = getelementptr inbounds %struct.macb, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %macb_reg_writel.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_writel.i, align 4
  %RBQP.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 9
  %26 = ptrtoint ptr %RBQP.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %RBQP.i, align 4
  %rx_ring_dma.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 17
  %28 = ptrtoint ptr %rx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rx_ring_dma.i, align 4
  tail call void %25(ptr noundef %23, i32 noundef %27, i32 noundef %29) #21
  %30 = ptrtoint ptr %queue.018.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %queue.018.i, align 8
  %macb_reg_writel4.i = getelementptr inbounds %struct.macb, ptr %31, i32 0, i32 3
  %32 = ptrtoint ptr %macb_reg_writel4.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %macb_reg_writel4.i, align 4
  %TBQP.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 6
  %34 = ptrtoint ptr %TBQP.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %TBQP.i, align 8
  %tx_ring_dma.i = getelementptr inbounds %struct.macb_queue, ptr %queue.018.i, i32 0, i32 15
  %36 = ptrtoint ptr %tx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %tx_ring_dma.i, align 4
  tail call void %33(ptr noundef %31, i32 noundef %35, i32 noundef %37) #21
  %inc.i = add nuw i32 %q.019.i, 1
  %incdec.ptr.i = getelementptr %struct.macb_queue, ptr %queue.018.i, i32 1
  %38 = ptrtoint ptr %num_queues.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %num_queues.i, align 4
  %cmp.i114 = icmp ult i32 %inc.i, %39
  br i1 %cmp.i114, label %for.body.i.for.body.i_crit_edge, label %macb_init_buffers.exit

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

macb_init_buffers.exit:                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp37120.not = icmp eq i32 %39, 0
  br i1 %cmp37120.not, label %macb_init_buffers.exit.if.end43_crit_edge, label %for.body.lr.ph

macb_init_buffers.exit.if.end43_crit_edge:        ; preds = %macb_init_buffers.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

for.body.lr.ph:                                   ; preds = %macb_init_buffers.exit
  %queues = getelementptr i8, ptr %1, i32 1240
  %rx_intr_mask = getelementptr i8, ptr %1, i32 18436
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %q.0122 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %queue.0121 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %40 = ptrtoint ptr %queue.0121 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %queue.0121, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %41, i32 0, i32 3
  %42 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %macb_reg_writel, align 4
  %IER = getelementptr inbounds %struct.macb_queue, ptr %queue.0121, i32 0, i32 3
  %44 = ptrtoint ptr %IER to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %IER, align 4
  %46 = ptrtoint ptr %rx_intr_mask to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rx_intr_mask, align 4
  %or42 = or i32 %47, 2296
  tail call void %43(ptr noundef %41, i32 noundef %45, i32 noundef %or42) #21
  %inc = add nuw i32 %q.0122, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.0121, i32 1
  %48 = ptrtoint ptr %num_queues.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %num_queues.i, align 4
  %cmp37 = icmp ult i32 %inc, %49
  br i1 %cmp37, label %for.body.for.body_crit_edge, label %for.body.if.end43_crit_edge

for.body.if.end43_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end43

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

if.end43:                                         ; preds = %for.body.if.end43_crit_edge, %macb_init_buffers.exit.if.end43_crit_edge, %macb_set_tx_clk.exit.if.end43_crit_edge, %entry.if.end43_crit_edge
  %ctrl.4 = phi i32 [ %ctrl.1, %entry.if.end43_crit_edge ], [ %spec.select110, %macb_set_tx_clk.exit.if.end43_crit_edge ], [ %spec.select110, %macb_init_buffers.exit.if.end43_crit_edge ], [ %spec.select110, %for.body.if.end43_crit_edge ]
  %macb_reg_writel46 = getelementptr i8, ptr %1, i32 1212
  %50 = ptrtoint ptr %macb_reg_writel46 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %macb_reg_writel46, align 4
  tail call void %51(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %ctrl.4) #21
  %phy_interface = getelementptr i8, ptr %1, i32 17372
  %52 = ptrtoint ptr %phy_interface to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %phy_interface, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %53)
  %cmp50 = icmp eq i32 %53, 26
  br i1 %cmp50, label %if.then52, label %if.end43.if.end58_crit_edge

if.end43.if.end58_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end58

if.then52:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel53 = getelementptr i8, ptr %1, i32 1212
  %54 = ptrtoint ptr %macb_reg_writel53 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %macb_reg_writel53, align 4
  %macb_reg_readl54 = getelementptr i8, ptr %1, i32 1208
  %56 = ptrtoint ptr %macb_reg_readl54 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %macb_reg_readl54, align 8
  %call55 = tail call i32 %57(ptr noundef %add.ptr.i, i32 noundef 80) #21
  %and56 = and i32 %call55, -8
  %or57 = or i32 %and56, 4
  tail call void %55(ptr noundef %add.ptr.i, i32 noundef 80, i32 noundef %or57) #21
  br label %if.end58

if.end58:                                         ; preds = %if.then52, %if.end43.if.end58_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call5) #21
  %macb_reg_writel60 = getelementptr i8, ptr %1, i32 1212
  %58 = ptrtoint ptr %macb_reg_writel60 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %macb_reg_writel60, align 4
  %macb_reg_readl61 = getelementptr i8, ptr %1, i32 1208
  %60 = ptrtoint ptr %macb_reg_readl61 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %macb_reg_readl61, align 8
  %call62 = tail call i32 %61(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %or64 = or i32 %call62, 12
  tail call void %59(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %or64) #21
  %num_tx_queues.i = getelementptr i8, ptr %1, i32 -332
  %62 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %num_tx_queues.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %63)
  %cmp4.not.i = icmp eq i32 %63, 0
  br i1 %cmp4.not.i, label %if.end58.netif_tx_wake_all_queues.exit_crit_edge, label %for.body.lr.ph.i

if.end58.netif_tx_wake_all_queues.exit_crit_edge: ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_wake_all_queues.exit

for.body.lr.ph.i:                                 ; preds = %if.end58
  %_tx.i.i = getelementptr i8, ptr %1, i32 -336
  br label %for.body.i119

for.body.i119:                                    ; preds = %for.body.i119.for.body.i119_crit_edge, %for.body.lr.ph.i
  %i.05.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i117, %for.body.i119.for.body.i119_crit_edge ]
  %64 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %_tx.i.i, align 128
  %arrayidx.i.i = getelementptr %struct.netdev_queue, ptr %65, i32 %i.05.i
  tail call void @netif_tx_wake_queue(ptr noundef %arrayidx.i.i) #21
  %inc.i117 = add nuw i32 %i.05.i, 1
  %66 = ptrtoint ptr %num_tx_queues.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %num_tx_queues.i, align 4
  %cmp.i118 = icmp ult i32 %inc.i117, %67
  br i1 %cmp.i118, label %for.body.i119.for.body.i119_crit_edge, label %for.body.i119.netif_tx_wake_all_queues.exit_crit_edge

for.body.i119.netif_tx_wake_all_queues.exit_crit_edge: ; preds = %for.body.i119
  call void @__sanitizer_cov_trace_pc() #23
  br label %netif_tx_wake_all_queues.exit

for.body.i119.for.body.i119_crit_edge:            ; preds = %for.body.i119
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i119

netif_tx_wake_all_queues.exit:                    ; preds = %for.body.i119.netif_tx_wake_all_queues.exit_crit_edge, %if.end58.netif_tx_wake_all_queues.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_round_rate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @netdev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @clk_set_rate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_carrier_on(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_mono_fast_ns() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__pm_runtime_suspend(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_bulk_disable(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @clk_bulk_unprepare(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__pm_runtime_disable(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @unregister_netdev(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @tasklet_kill(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @phylink_destroy(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_clk_init(ptr noundef %pdev, ptr nocapture noundef %pclk, ptr nocapture noundef writeonly %hclk, ptr nocapture noundef writeonly %tx_clk, ptr nocapture noundef writeonly %rx_clk, ptr nocapture noundef writeonly %tsu_clk) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hclk to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %hclk, align 4
  %1 = ptrtoint ptr %tx_clk to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr null, ptr %tx_clk, align 4
  %2 = ptrtoint ptr %rx_clk to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %rx_clk, align 4
  %3 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %tsu_clk, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %call = tail call ptr @devm_clk_get(ptr noundef %dev, ptr noundef nonnull @.str.88) #21
  %4 = ptrtoint ptr %pclk to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %call, ptr %pclk, align 4
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %5 = ptrtoint ptr %call to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @clk_prepare(ptr noundef %call) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.end.do.end_crit_edge

if.end.do.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end

if.end.i:                                         ; preds = %if.end
  %call1.i = tail call i32 @clk_enable(ptr noundef %call) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.cleanup_crit_edge, label %if.then3.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %call) #21
  br label %do.end

do.end:                                           ; preds = %if.then3.i, %if.end.do.end_crit_edge
  %retval.0.i.ph = phi i32 [ %call1.i, %if.then3.i ], [ %call.i, %if.end.do.end_crit_edge ]
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.18, i32 noundef %retval.0.i.ph) #24
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end.i.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %5, %if.then ], [ %retval.0.i.ph, %do.end ], [ 0, %if.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_init(ptr noundef %pdev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i.i = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3, i32 8
  %0 = ptrtoint ptr %driver_data.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %queues = getelementptr i8, ptr %1, i32 2344
  %2 = ptrtoint ptr %queues to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %add.ptr.i, ptr %queues, align 8
  %netdev_ops = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 16
  %3 = ptrtoint ptr %netdev_ops to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @at91ether_netdev_ops, ptr %netdev_ops, align 8
  %ethtool_ops = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 44
  %4 = ptrtoint ptr %ethtool_ops to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @macb_ethtool_ops, ptr %ethtool_ops, align 16
  %dev3 = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %irq = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 64
  %5 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %irq, align 4
  %call.i = tail call i32 @devm_request_threaded_irq(ptr noundef %dev3, i32 noundef %6, ptr noundef nonnull @at91ether_interrupt, ptr noundef null, i32 noundef 0, ptr noundef %1, ptr noundef %1) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel = getelementptr i8, ptr %1, i32 2316
  %7 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %8(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef 0) #21
  %9 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %10(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef 2304) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_interrupt(i32 noundef %irq, ptr noundef %dev_id) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev_id, i32 2304
  %macb_reg_readl = getelementptr i8, ptr %dev_id, i32 2312
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %1(ptr noundef %add.ptr.i, i32 noundef 36) #21
  %and = and i32 %call1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then:                                          ; preds = %entry
  %queues.i = getelementptr i8, ptr %dev_id, i32 2344
  %rx_tail.i = getelementptr i8, ptr %dev_id, i32 2460
  %2 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rx_tail.i, align 4
  %4 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 5
  %6 = ptrtoint ptr %rx_ring_size.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rx_ring_size.i.i.i, align 4
  %sub.i.i.i = add i32 %7, -1
  %and.i.i.i = and i32 %sub.i.i.i, %3
  %hw_dma_cap.i.i.i = getelementptr inbounds %struct.macb, ptr %5, i32 0, i32 35
  %8 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %10 = zext i8 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.132)
  switch i8 %9, label %if.then.macb_rx_desc.exit.i_crit_edge [
    i8 1, label %if.then.sw.bb.i.i.i_crit_edge
    i8 2, label %if.then.sw.bb.i.i.i_crit_edge73
    i8 3, label %sw.bb1.i.i.i
  ]

if.then.sw.bb.i.i.i_crit_edge73:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

if.then.sw.bb.i.i.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.i

if.then.macb_rx_desc.exit.i_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.i

sw.bb.i.i.i:                                      ; preds = %if.then.sw.bb.i.i.i_crit_edge, %if.then.sw.bb.i.i.i_crit_edge73
  %shl.i.i.i = shl i32 %and.i.i.i, 1
  br label %macb_rx_desc.exit.i

sw.bb1.i.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.i = mul i32 %and.i.i.i, 3
  br label %macb_rx_desc.exit.i

macb_rx_desc.exit.i:                              ; preds = %sw.bb1.i.i.i, %sw.bb.i.i.i, %if.then.macb_rx_desc.exit.i_crit_edge
  %desc_idx.addr.0.i.i.i = phi i32 [ %and.i.i.i, %if.then.macb_rx_desc.exit.i_crit_edge ], [ %mul.i.i.i, %sw.bb1.i.i.i ], [ %shl.i.i.i, %sw.bb.i.i.i ]
  %rx_ring.i.i = getelementptr i8, ptr %dev_id, i32 2468
  %11 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.macb_dma_desc, ptr %12, i32 %desc_idx.addr.0.i.i.i
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %and69.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69.i)
  %tobool.not70.i = icmp eq i32 %and69.i, 0
  br i1 %tobool.not70.i, label %macb_rx_desc.exit.i.if.end_crit_edge, label %while.body.lr.ph.i

macb_rx_desc.exit.i.if.end_crit_edge:             ; preds = %macb_rx_desc.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

while.body.lr.ph.i:                               ; preds = %macb_rx_desc.exit.i
  %rx_buffers.i = getelementptr i8, ptr %dev_id, i32 2476
  %stats.i = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36
  %rx_bytes.i = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 2
  %rx_dropped.i = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 6
  %multicast.i = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 8
  br label %while.body.i

while.body.i:                                     ; preds = %macb_rx_desc.exit68.i.while.body.i_crit_edge, %while.body.lr.ph.i
  %desc.071.i = phi ptr [ %arrayidx.i.i, %while.body.lr.ph.i ], [ %arrayidx.i67.i, %macb_rx_desc.exit68.i.while.body.i_crit_edge ]
  %15 = ptrtoint ptr %rx_buffers.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rx_buffers.i, align 4
  %17 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %rx_tail.i, align 4
  %ctrl.i = getelementptr inbounds %struct.macb_dma_desc, ptr %desc.071.i, i32 0, i32 1
  %19 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %ctrl.i, align 4
  %and3.i = and i32 %20, 4095
  %add.i = add nuw nsw i32 %and3.i, 2
  %call.i.i = tail call ptr @__netdev_alloc_skb(ptr noundef %dev_id, i32 noundef %add.i, i32 noundef 2592) #21
  %tobool5.not.i = icmp eq ptr %call.i.i, null
  br i1 %tobool5.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i = mul i32 %18, 1536
  %add.ptr.i72 = getelementptr i8, ptr %16, i32 %mul.i
  %data.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 19
  %21 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data.i.i, align 4
  %add.ptr.i55.i = getelementptr i8, ptr %22, i32 2
  store ptr %add.ptr.i55.i, ptr %data.i.i, align 4
  %tail.i.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 16
  %23 = ptrtoint ptr %tail.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tail.i.i, align 8
  %add.ptr1.i.i = getelementptr i8, ptr %24, i32 2
  store ptr %add.ptr1.i.i, ptr %tail.i.i, align 8
  %call.i56.i = tail call ptr @skb_put(ptr noundef nonnull %call.i.i, i32 noundef %and3.i) #21
  %25 = call ptr @memcpy(ptr %call.i56.i, ptr %add.ptr.i72, i32 %and3.i)
  %call7.i = tail call zeroext i16 @eth_type_trans(ptr noundef nonnull %call.i.i, ptr noundef %dev_id) #21
  %protocol.i = getelementptr inbounds %struct.sk_buff, ptr %call.i.i, i32 0, i32 15, i32 0, i32 18
  %26 = ptrtoint ptr %protocol.i to i32
  call void @__asan_store2_noabort(i32 %26)
  store i16 %call7.i, ptr %protocol.i, align 8
  %27 = ptrtoint ptr %stats.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %stats.i, align 8
  %inc.i = add i32 %28, 1
  store i32 %inc.i, ptr %stats.i, align 8
  %29 = ptrtoint ptr %rx_bytes.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %rx_bytes.i, align 8
  %add9.i = add i32 %30, %and3.i
  store i32 %add9.i, ptr %rx_bytes.i, align 8
  %call10.i = tail call i32 @netif_rx(ptr noundef nonnull %call.i.i) #21
  br label %if.end.i

if.else.i:                                        ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #23
  %31 = ptrtoint ptr %rx_dropped.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rx_dropped.i, align 8
  %inc12.i = add i32 %32, 1
  store i32 %inc12.i, ptr %rx_dropped.i, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.then.i
  %33 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ctrl.i, align 4
  %and14.i = and i32 %34, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %if.end.i.if.end19.i_crit_edge, label %if.then16.i

if.end.i.if.end19.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19.i

if.then16.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %35 = ptrtoint ptr %multicast.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %multicast.i, align 8
  %inc18.i = add i32 %36, 1
  store i32 %inc18.i, ptr %multicast.i, align 8
  br label %if.end19.i

if.end19.i:                                       ; preds = %if.then16.i, %if.end.i.if.end19.i_crit_edge
  %37 = ptrtoint ptr %desc.071.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %desc.071.i, align 4
  %and21.i = and i32 %38, -2
  store i32 %and21.i, ptr %desc.071.i, align 4
  %39 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rx_tail.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %40)
  %cmp.i = icmp eq i32 %40, 8
  %inc27.i = add i32 %40, 1
  %storemerge.i = select i1 %cmp.i, i32 0, i32 %inc27.i
  %41 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %storemerge.i, ptr %rx_tail.i, align 4
  %42 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i57.i = getelementptr inbounds %struct.macb, ptr %43, i32 0, i32 5
  %44 = ptrtoint ptr %rx_ring_size.i.i57.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rx_ring_size.i.i57.i, align 4
  %sub.i.i58.i = add i32 %45, -1
  %and.i.i59.i = and i32 %sub.i.i58.i, %storemerge.i
  %hw_dma_cap.i.i60.i = getelementptr inbounds %struct.macb, ptr %43, i32 0, i32 35
  %46 = ptrtoint ptr %hw_dma_cap.i.i60.i to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %hw_dma_cap.i.i60.i, align 8
  %48 = zext i8 %47 to i64
  call void @__sanitizer_cov_trace_switch(i64 %48, ptr @__sancov_gen_cov_switch_values.133)
  switch i8 %47, label %if.end19.i.macb_rx_desc.exit68.i_crit_edge [
    i8 1, label %if.end19.i.sw.bb.i.i62.i_crit_edge
    i8 2, label %if.end19.i.sw.bb.i.i62.i_crit_edge74
    i8 3, label %sw.bb1.i.i64.i
  ]

if.end19.i.sw.bb.i.i62.i_crit_edge74:             ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i62.i

if.end19.i.sw.bb.i.i62.i_crit_edge:               ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i62.i

if.end19.i.macb_rx_desc.exit68.i_crit_edge:       ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit68.i

sw.bb.i.i62.i:                                    ; preds = %if.end19.i.sw.bb.i.i62.i_crit_edge, %if.end19.i.sw.bb.i.i62.i_crit_edge74
  %shl.i.i61.i = shl i32 %and.i.i59.i, 1
  br label %macb_rx_desc.exit68.i

sw.bb1.i.i64.i:                                   ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i63.i = mul i32 %and.i.i59.i, 3
  br label %macb_rx_desc.exit68.i

macb_rx_desc.exit68.i:                            ; preds = %sw.bb1.i.i64.i, %sw.bb.i.i62.i, %if.end19.i.macb_rx_desc.exit68.i_crit_edge
  %desc_idx.addr.0.i.i65.i = phi i32 [ %and.i.i59.i, %if.end19.i.macb_rx_desc.exit68.i_crit_edge ], [ %mul.i.i63.i, %sw.bb1.i.i64.i ], [ %shl.i.i61.i, %sw.bb.i.i62.i ]
  %49 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i67.i = getelementptr %struct.macb_dma_desc, ptr %50, i32 %desc_idx.addr.0.i.i65.i
  %51 = ptrtoint ptr %arrayidx.i67.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx.i67.i, align 4
  %and.i = and i32 %52, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %macb_rx_desc.exit68.i.if.end_crit_edge, label %macb_rx_desc.exit68.i.while.body.i_crit_edge

macb_rx_desc.exit68.i.while.body.i_crit_edge:     ; preds = %macb_rx_desc.exit68.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %while.body.i

macb_rx_desc.exit68.i.if.end_crit_edge:           ; preds = %macb_rx_desc.exit68.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end:                                           ; preds = %macb_rx_desc.exit68.i.if.end_crit_edge, %macb_rx_desc.exit.i.if.end_crit_edge, %entry.if.end_crit_edge
  %and2 = and i32 %call1, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool3.not = icmp eq i32 %and2, 0
  br i1 %tobool3.not, label %if.end.if.end29_crit_edge, label %if.then4

if.end.if.end29_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end29

if.then4:                                         ; preds = %if.end
  %and5 = and i32 %call1, 48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.then4.if.end8_crit_edge, label %if.then7

if.then4.if.end8_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

if.then7:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #23
  %tx_errors = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 5
  %53 = ptrtoint ptr %tx_errors to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %tx_errors, align 4
  %inc = add i32 %54, 1
  store i32 %inc, ptr %tx_errors, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.then4.if.end8_crit_edge
  %rm9200_txq = getelementptr i8, ptr %dev_id, i32 18480
  %55 = ptrtoint ptr %rm9200_txq to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %rm9200_txq, align 8
  %tobool9.not = icmp eq ptr %56, null
  br i1 %tobool9.not, label %if.end8.if.end28_crit_edge, label %if.then10

if.end8.if.end28_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end28

if.then10:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_irq(ptr noundef nonnull %56, i32 noundef 0) #21
  %57 = ptrtoint ptr %rm9200_txq to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr null, ptr %rm9200_txq, align 8
  %pdev = getelementptr i8, ptr %dev_id, i32 18196
  %58 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pdev, align 4
  %dev17 = getelementptr inbounds %struct.platform_device, ptr %59, i32 0, i32 3
  %mapping = getelementptr i8, ptr %dev_id, i32 18484
  %60 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %mapping, align 4
  %size = getelementptr i8, ptr %dev_id, i32 18488
  %62 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %size, align 8
  tail call void @dma_unmap_page_attrs(ptr noundef %dev17, i32 noundef %61, i32 noundef %63, i32 noundef 1, i32 noundef 0) #21
  %tx_packets = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 1
  %64 = ptrtoint ptr %tx_packets to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %tx_packets, align 4
  %inc23 = add i32 %65, 1
  store i32 %inc23, ptr %tx_packets, align 4
  %66 = ptrtoint ptr %size to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %size, align 8
  %tx_bytes = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 36, i32 3
  %68 = ptrtoint ptr %tx_bytes to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %tx_bytes, align 4
  %add = add i32 %69, %67
  store i32 %add, ptr %tx_bytes, align 4
  br label %if.end28

if.end28:                                         ; preds = %if.then10, %if.end8.if.end28_crit_edge
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev_id, i32 0, i32 103
  %70 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %_tx.i.i, align 128
  tail call void @netif_tx_wake_queue(ptr noundef %71) #21
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end.if.end29_crit_edge
  %and30 = and i32 %call1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and30)
  %tobool31.not = icmp eq i32 %and30, 0
  br i1 %tobool31.not, label %if.end29.if.end37_crit_edge, label %if.then32

if.end29.if.end37_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end37

if.then32:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #23
  %72 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %macb_reg_readl, align 8
  %call34 = tail call i32 %73(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %macb_reg_writel = getelementptr i8, ptr %dev_id, i32 2316
  %74 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %macb_reg_writel, align 4
  %and35 = and i32 %call34, -5
  tail call void %75(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %and35) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !329
  tail call void @arm_heavy_mb() #21
  %76 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %macb_reg_writel, align 4
  %or = or i32 %call34, 4
  tail call void %77(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %or) #21
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end29.if.end37_crit_edge
  %and38 = and i32 %call1, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38)
  %tobool39.not = icmp eq i32 %and38, 0
  br i1 %tobool39.not, label %if.end37.if.end41_crit_edge, label %if.then40

if.end37.if.end41_crit_edge:                      ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end41

if.then40:                                        ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev_id, ptr noundef nonnull @.str.92) #24
  br label %if.end41

if.end41:                                         ; preds = %if.then40, %if.end37.if.end41_crit_edge
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_open(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %pdev = getelementptr i8, ptr %dev, i32 18196
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %dev1 = getelementptr inbounds %struct.platform_device, ptr %1, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_resume(ptr noundef %dev1, i32 noundef 4) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev, align 4
  %usage_count.i = getelementptr inbounds %struct.platform_device, ptr %3, i32 0, i32 3, i32 12, i32 13
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage_count.i, i32 noundef 4) #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !326
  tail call void @llvm.prefetch.p0(ptr %usage_count.i, i32 1, i32 3, i32 1) #21
  %4 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %usage_count.i, ptr %usage_count.i, i32 0, i32 -1, ptr elementtype(i32) %usage_count.i) #21, !srcloc !327
  %asmresult.i.i.i.i = extractvalue { i32, i32, i32 } %4, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i, label %if.then.cleanup_crit_edge, label %do.end11.i.i.i.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

do.end11.i.i.i.i:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #21, !srcloc !328
  br label %cleanup

if.end:                                           ; preds = %entry
  %macb_reg_readl = getelementptr i8, ptr %dev, i32 2312
  %5 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %macb_reg_readl, align 8
  %call5 = tail call i32 %6(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %macb_reg_writel = getelementptr i8, ptr %dev, i32 2316
  %7 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %macb_reg_writel, align 4
  %or = or i32 %call5, 32
  tail call void %8(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %or) #21
  %dev.i = getelementptr i8, ptr %dev, i32 18220
  %9 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %dev.i, align 4
  %dev_addr.i = getelementptr inbounds %struct.net_device, ptr %10, i32 0, i32 86
  %11 = ptrtoint ptr %dev_addr.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dev_addr.i, align 64
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 4
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #21
  %caps.i.i = getelementptr i8, ptr %dev, i32 18468
  %16 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.i.i = icmp slt i32 %17, 0
  %18 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_writel, align 4
  %..i = select i1 %tobool.i.i, i32 136, i32 152
  tail call void %19(ptr noundef %add.ptr.i, i32 noundef %..i, i32 noundef %15) #21
  %20 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dev.i, align 4
  %dev_addr3.i = getelementptr inbounds %struct.net_device, ptr %21, i32 0, i32 86
  %22 = ptrtoint ptr %dev_addr3.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dev_addr3.i, align 64
  %add.ptr.i33 = getelementptr i8, ptr %23, i32 4
  %24 = ptrtoint ptr %add.ptr.i33 to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %add.ptr.i33, align 2
  %26 = tail call i16 @llvm.bswap.i16(i16 %25) #21
  %27 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.i91.i = icmp slt i32 %28, 0
  %.sink104.i = select i1 %tobool.i91.i, i32 140, i32 156
  %29 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %macb_reg_writel, align 4
  %conv9.i = zext i16 %26 to i32
  tail call void %30(ptr noundef %add.ptr.i, i32 noundef %.sink104.i, i32 noundef %conv9.i) #21
  %31 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i93.i = icmp slt i32 %32, 0
  %.sink106.i = select i1 %tobool.i93.i, i32 144, i32 160
  %33 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %34(ptr noundef %add.ptr.i, i32 noundef %.sink106.i, i32 noundef 0) #21
  %35 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i95.i = icmp slt i32 %36, 0
  %.sink108.i = select i1 %tobool.i95.i, i32 148, i32 164
  %37 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %38(ptr noundef %add.ptr.i, i32 noundef %.sink108.i, i32 noundef 0) #21
  %39 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i97.i = icmp slt i32 %40, 0
  %.sink110.i = select i1 %tobool.i97.i, i32 152, i32 168
  %41 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %42(ptr noundef %add.ptr.i, i32 noundef %.sink110.i, i32 noundef 0) #21
  %43 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.i99.i = icmp slt i32 %44, 0
  %.sink112.i = select i1 %tobool.i99.i, i32 156, i32 172
  %45 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %46(ptr noundef %add.ptr.i, i32 noundef %.sink112.i, i32 noundef 0) #21
  %47 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.i101.i = icmp slt i32 %48, 0
  %.sink114.i = select i1 %tobool.i101.i, i32 160, i32 176
  %49 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %50(ptr noundef %add.ptr.i, i32 noundef %.sink114.i, i32 noundef 0) #21
  %51 = ptrtoint ptr %caps.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %caps.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.i103.i = icmp slt i32 %52, 0
  %.sink116.i = select i1 %tobool.i103.i, i32 164, i32 180
  %53 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %54(ptr noundef %add.ptr.i, i32 noundef %.sink116.i, i32 noundef 0) #21
  %queues.i = getelementptr i8, ptr %dev, i32 2344
  %55 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %pdev, align 4
  %dev.i.i = getelementptr inbounds %struct.platform_device, ptr %56, i32 0, i32 3
  %hw_dma_cap.i.i.i = getelementptr i8, ptr %dev, i32 19264
  %57 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %switch.tableidx = add i8 %58, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %59 = icmp ult i8 %switch.tableidx, 3
  br i1 %59, label %switch.lookup, label %if.end.macb_dma_desc_get_size.exit.i.i_crit_edge

if.end.macb_dma_desc_get_size.exit.i.i_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit.i.i

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  %60 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.at91ether_open, i32 0, i32 %60
  %61 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %61)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_dma_desc_get_size.exit.i.i

macb_dma_desc_get_size.exit.i.i:                  ; preds = %switch.lookup, %if.end.macb_dma_desc_get_size.exit.i.i_crit_edge
  %desc_size.0.i.i.i = phi i32 [ %switch.load, %switch.lookup ], [ 72, %if.end.macb_dma_desc_get_size.exit.i.i_crit_edge ]
  %rx_ring_dma.i.i = getelementptr i8, ptr %dev, i32 2452
  %call.i.i.i34 = tail call ptr @dma_alloc_attrs(ptr noundef %dev.i.i, i32 noundef %desc_size.0.i.i.i, ptr noundef %rx_ring_dma.i.i, i32 noundef 3264, i32 noundef 0) #21
  %rx_ring.i.i = getelementptr i8, ptr %dev, i32 2468
  %62 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %call.i.i.i34, ptr %rx_ring.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %call.i.i.i34, null
  br i1 %tobool.not.i.i, label %macb_dma_desc_get_size.exit.i.i.pm_exit_crit_edge, label %if.end.i.i

macb_dma_desc_get_size.exit.i.i.pm_exit_crit_edge: ; preds = %macb_dma_desc_get_size.exit.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %pm_exit

if.end.i.i:                                       ; preds = %macb_dma_desc_get_size.exit.i.i
  %63 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %pdev, align 4
  %dev4.i.i = getelementptr inbounds %struct.platform_device, ptr %64, i32 0, i32 3
  %rx_buffers_dma.i.i = getelementptr i8, ptr %dev, i32 2456
  %call.i30.i.i = tail call ptr @dma_alloc_attrs(ptr noundef %dev4.i.i, i32 noundef 13824, ptr noundef %rx_buffers_dma.i.i, i32 noundef 3264, i32 noundef 0) #21
  %rx_buffers.i.i = getelementptr i8, ptr %dev, i32 2476
  %65 = ptrtoint ptr %rx_buffers.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %call.i30.i.i, ptr %rx_buffers.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %call.i30.i.i, null
  br i1 %tobool7.not.i.i, label %if.then8.i.i, label %if.end.i

if.then8.i.i:                                     ; preds = %if.end.i.i
  %66 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %pdev, align 4
  %dev10.i.i = getelementptr inbounds %struct.platform_device, ptr %67, i32 0, i32 3
  %68 = ptrtoint ptr %hw_dma_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %68)
  %69 = load i8, ptr %hw_dma_cap.i.i.i, align 8
  %switch.tableidx40 = add i8 %69, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx40)
  %70 = icmp ult i8 %switch.tableidx40, 3
  br i1 %70, label %switch.lookup39, label %if.then8.i.i.macb_dma_desc_get_size.exit35.i.i_crit_edge

if.then8.i.i.macb_dma_desc_get_size.exit35.i.i_crit_edge: ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit35.i.i

switch.lookup39:                                  ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %71 = sext i8 %switch.tableidx40 to i32
  %switch.gep41 = getelementptr inbounds [3 x i32], ptr @switch.table.at91ether_open.107, i32 0, i32 %71
  %72 = ptrtoint ptr %switch.gep41 to i32
  call void @__asan_load4_noabort(i32 %72)
  %switch.load42 = load i32, ptr %switch.gep41, align 4
  br label %macb_dma_desc_get_size.exit35.i.i

macb_dma_desc_get_size.exit35.i.i:                ; preds = %switch.lookup39, %if.then8.i.i.macb_dma_desc_get_size.exit35.i.i_crit_edge
  %desc_size.0.i34.i.i = phi i32 [ %switch.load42, %switch.lookup39 ], [ 72, %if.then8.i.i.macb_dma_desc_get_size.exit35.i.i_crit_edge ]
  %73 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %rx_ring.i.i, align 4
  %75 = ptrtoint ptr %rx_ring_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %rx_ring_dma.i.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev10.i.i, i32 noundef %desc_size.0.i34.i.i, ptr noundef %74, i32 noundef %76, i32 noundef 0) #21
  %77 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr null, ptr %rx_ring.i.i, align 4
  br label %pm_exit

if.end.i:                                         ; preds = %if.end.i.i
  %78 = ptrtoint ptr %rx_buffers_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %rx_buffers_dma.i.i, align 8
  %80 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %rx_ring.i.i, align 4
  %82 = ptrtoint ptr %81 to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %79, ptr %81, align 4
  %ctrl.i = getelementptr %struct.macb_dma_desc, ptr %81, i32 0, i32 1
  %83 = ptrtoint ptr %ctrl.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %ctrl.i, align 4
  %add.i = add i32 %79, 1536
  %84 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.1.i = getelementptr inbounds %struct.macb, ptr %85, i32 0, i32 5
  %86 = ptrtoint ptr %rx_ring_size.i.i.1.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %rx_ring_size.i.i.1.i, align 4
  %88 = and i32 %87, 1
  %and.i.i.1.i = xor i32 %88, 1
  %hw_dma_cap.i.i32.1.i = getelementptr inbounds %struct.macb, ptr %85, i32 0, i32 35
  %89 = ptrtoint ptr %hw_dma_cap.i.i32.1.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %hw_dma_cap.i.i32.1.i, align 8
  %91 = zext i8 %90 to i64
  call void @__sanitizer_cov_trace_switch(i64 %91, ptr @__sancov_gen_cov_switch_values.134)
  switch i8 %90, label %if.end.i.macb_rx_desc.exit.1.i_crit_edge [
    i8 1, label %if.end.i.sw.bb.i.i.1.i_crit_edge
    i8 2, label %if.end.i.sw.bb.i.i.1.i_crit_edge43
    i8 3, label %sw.bb1.i.i.1.i
  ]

if.end.i.sw.bb.i.i.1.i_crit_edge43:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.1.i

if.end.i.sw.bb.i.i.1.i_crit_edge:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.1.i

if.end.i.macb_rx_desc.exit.1.i_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.1.i

sw.bb1.i.i.1.i:                                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.1.i = mul nuw nsw i32 %and.i.i.1.i, 3
  br label %macb_rx_desc.exit.1.i

sw.bb.i.i.1.i:                                    ; preds = %if.end.i.sw.bb.i.i.1.i_crit_edge, %if.end.i.sw.bb.i.i.1.i_crit_edge43
  %shl.i.i.1.i = shl nuw nsw i32 %and.i.i.1.i, 1
  br label %macb_rx_desc.exit.1.i

macb_rx_desc.exit.1.i:                            ; preds = %sw.bb.i.i.1.i, %sw.bb1.i.i.1.i, %if.end.i.macb_rx_desc.exit.1.i_crit_edge
  %desc_idx.addr.0.i.i.1.i = phi i32 [ %and.i.i.1.i, %if.end.i.macb_rx_desc.exit.1.i_crit_edge ], [ %mul.i.i.1.i, %sw.bb1.i.i.1.i ], [ %shl.i.i.1.i, %sw.bb.i.i.1.i ]
  %92 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.1.i = getelementptr %struct.macb_dma_desc, ptr %93, i32 %desc_idx.addr.0.i.i.1.i
  %94 = ptrtoint ptr %arrayidx.i.1.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %add.i, ptr %arrayidx.i.1.i, align 4
  %ctrl.1.i = getelementptr %struct.macb_dma_desc, ptr %93, i32 %desc_idx.addr.0.i.i.1.i, i32 1
  %95 = ptrtoint ptr %ctrl.1.i to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 0, ptr %ctrl.1.i, align 4
  %add.1.i = add i32 %79, 3072
  %96 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.2.i = getelementptr inbounds %struct.macb, ptr %97, i32 0, i32 5
  %98 = ptrtoint ptr %rx_ring_size.i.i.2.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %rx_ring_size.i.i.2.i, align 4
  %sub.i.i.2.i = add i32 %99, 3
  %and.i.i.2.i = and i32 %sub.i.i.2.i, 2
  %hw_dma_cap.i.i32.2.i = getelementptr inbounds %struct.macb, ptr %97, i32 0, i32 35
  %100 = ptrtoint ptr %hw_dma_cap.i.i32.2.i to i32
  call void @__asan_load1_noabort(i32 %100)
  %101 = load i8, ptr %hw_dma_cap.i.i32.2.i, align 8
  %102 = zext i8 %101 to i64
  call void @__sanitizer_cov_trace_switch(i64 %102, ptr @__sancov_gen_cov_switch_values.135)
  switch i8 %101, label %macb_rx_desc.exit.1.i.macb_rx_desc.exit.2.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge
    i8 2, label %macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge44
    i8 3, label %sw.bb1.i.i.2.i
  ]

macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge44:  ; preds = %macb_rx_desc.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.2.i

macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge:    ; preds = %macb_rx_desc.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.2.i

macb_rx_desc.exit.1.i.macb_rx_desc.exit.2.i_crit_edge: ; preds = %macb_rx_desc.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.2.i

sw.bb1.i.i.2.i:                                   ; preds = %macb_rx_desc.exit.1.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.2.i = mul nuw nsw i32 %and.i.i.2.i, 3
  br label %macb_rx_desc.exit.2.i

sw.bb.i.i.2.i:                                    ; preds = %macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge, %macb_rx_desc.exit.1.i.sw.bb.i.i.2.i_crit_edge44
  %shl.i.i.2.i = shl nuw nsw i32 %and.i.i.2.i, 1
  br label %macb_rx_desc.exit.2.i

macb_rx_desc.exit.2.i:                            ; preds = %sw.bb.i.i.2.i, %sw.bb1.i.i.2.i, %macb_rx_desc.exit.1.i.macb_rx_desc.exit.2.i_crit_edge
  %desc_idx.addr.0.i.i.2.i = phi i32 [ %and.i.i.2.i, %macb_rx_desc.exit.1.i.macb_rx_desc.exit.2.i_crit_edge ], [ %mul.i.i.2.i, %sw.bb1.i.i.2.i ], [ %shl.i.i.2.i, %sw.bb.i.i.2.i ]
  %103 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.2.i = getelementptr %struct.macb_dma_desc, ptr %104, i32 %desc_idx.addr.0.i.i.2.i
  %105 = ptrtoint ptr %arrayidx.i.2.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %add.1.i, ptr %arrayidx.i.2.i, align 4
  %ctrl.2.i = getelementptr %struct.macb_dma_desc, ptr %104, i32 %desc_idx.addr.0.i.i.2.i, i32 1
  %106 = ptrtoint ptr %ctrl.2.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 0, ptr %ctrl.2.i, align 4
  %add.2.i = add i32 %79, 4608
  %107 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.3.i = getelementptr inbounds %struct.macb, ptr %108, i32 0, i32 5
  %109 = ptrtoint ptr %rx_ring_size.i.i.3.i to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %rx_ring_size.i.i.3.i, align 4
  %sub.i.i.3.i = add i32 %110, 3
  %and.i.i.3.i = and i32 %sub.i.i.3.i, 3
  %hw_dma_cap.i.i32.3.i = getelementptr inbounds %struct.macb, ptr %108, i32 0, i32 35
  %111 = ptrtoint ptr %hw_dma_cap.i.i32.3.i to i32
  call void @__asan_load1_noabort(i32 %111)
  %112 = load i8, ptr %hw_dma_cap.i.i32.3.i, align 8
  %113 = zext i8 %112 to i64
  call void @__sanitizer_cov_trace_switch(i64 %113, ptr @__sancov_gen_cov_switch_values.136)
  switch i8 %112, label %macb_rx_desc.exit.2.i.macb_rx_desc.exit.3.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge
    i8 2, label %macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge45
    i8 3, label %sw.bb1.i.i.3.i
  ]

macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge45:  ; preds = %macb_rx_desc.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.3.i

macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge:    ; preds = %macb_rx_desc.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.3.i

macb_rx_desc.exit.2.i.macb_rx_desc.exit.3.i_crit_edge: ; preds = %macb_rx_desc.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.3.i

sw.bb1.i.i.3.i:                                   ; preds = %macb_rx_desc.exit.2.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.3.i = mul nuw nsw i32 %and.i.i.3.i, 3
  br label %macb_rx_desc.exit.3.i

sw.bb.i.i.3.i:                                    ; preds = %macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge, %macb_rx_desc.exit.2.i.sw.bb.i.i.3.i_crit_edge45
  %shl.i.i.3.i = shl nuw nsw i32 %and.i.i.3.i, 1
  br label %macb_rx_desc.exit.3.i

macb_rx_desc.exit.3.i:                            ; preds = %sw.bb.i.i.3.i, %sw.bb1.i.i.3.i, %macb_rx_desc.exit.2.i.macb_rx_desc.exit.3.i_crit_edge
  %desc_idx.addr.0.i.i.3.i = phi i32 [ %and.i.i.3.i, %macb_rx_desc.exit.2.i.macb_rx_desc.exit.3.i_crit_edge ], [ %mul.i.i.3.i, %sw.bb1.i.i.3.i ], [ %shl.i.i.3.i, %sw.bb.i.i.3.i ]
  %114 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.3.i = getelementptr %struct.macb_dma_desc, ptr %115, i32 %desc_idx.addr.0.i.i.3.i
  %116 = ptrtoint ptr %arrayidx.i.3.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 %add.2.i, ptr %arrayidx.i.3.i, align 4
  %ctrl.3.i = getelementptr %struct.macb_dma_desc, ptr %115, i32 %desc_idx.addr.0.i.i.3.i, i32 1
  %117 = ptrtoint ptr %ctrl.3.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 0, ptr %ctrl.3.i, align 4
  %add.3.i = add i32 %79, 6144
  %118 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %118)
  %119 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.4.i = getelementptr inbounds %struct.macb, ptr %119, i32 0, i32 5
  %120 = ptrtoint ptr %rx_ring_size.i.i.4.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load i32, ptr %rx_ring_size.i.i.4.i, align 4
  %sub.i.i.4.i = add i32 %121, 7
  %and.i.i.4.i = and i32 %sub.i.i.4.i, 4
  %hw_dma_cap.i.i32.4.i = getelementptr inbounds %struct.macb, ptr %119, i32 0, i32 35
  %122 = ptrtoint ptr %hw_dma_cap.i.i32.4.i to i32
  call void @__asan_load1_noabort(i32 %122)
  %123 = load i8, ptr %hw_dma_cap.i.i32.4.i, align 8
  %124 = zext i8 %123 to i64
  call void @__sanitizer_cov_trace_switch(i64 %124, ptr @__sancov_gen_cov_switch_values.137)
  switch i8 %123, label %macb_rx_desc.exit.3.i.macb_rx_desc.exit.4.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge
    i8 2, label %macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge46
    i8 3, label %sw.bb1.i.i.4.i
  ]

macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge46:  ; preds = %macb_rx_desc.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.4.i

macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge:    ; preds = %macb_rx_desc.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.4.i

macb_rx_desc.exit.3.i.macb_rx_desc.exit.4.i_crit_edge: ; preds = %macb_rx_desc.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.4.i

sw.bb1.i.i.4.i:                                   ; preds = %macb_rx_desc.exit.3.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.4.i = mul nuw nsw i32 %and.i.i.4.i, 3
  br label %macb_rx_desc.exit.4.i

sw.bb.i.i.4.i:                                    ; preds = %macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge, %macb_rx_desc.exit.3.i.sw.bb.i.i.4.i_crit_edge46
  %shl.i.i.4.i = shl nuw nsw i32 %and.i.i.4.i, 1
  br label %macb_rx_desc.exit.4.i

macb_rx_desc.exit.4.i:                            ; preds = %sw.bb.i.i.4.i, %sw.bb1.i.i.4.i, %macb_rx_desc.exit.3.i.macb_rx_desc.exit.4.i_crit_edge
  %desc_idx.addr.0.i.i.4.i = phi i32 [ %and.i.i.4.i, %macb_rx_desc.exit.3.i.macb_rx_desc.exit.4.i_crit_edge ], [ %mul.i.i.4.i, %sw.bb1.i.i.4.i ], [ %shl.i.i.4.i, %sw.bb.i.i.4.i ]
  %125 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %125)
  %126 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.4.i = getelementptr %struct.macb_dma_desc, ptr %126, i32 %desc_idx.addr.0.i.i.4.i
  %127 = ptrtoint ptr %arrayidx.i.4.i to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %add.3.i, ptr %arrayidx.i.4.i, align 4
  %ctrl.4.i = getelementptr %struct.macb_dma_desc, ptr %126, i32 %desc_idx.addr.0.i.i.4.i, i32 1
  %128 = ptrtoint ptr %ctrl.4.i to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 0, ptr %ctrl.4.i, align 4
  %add.4.i = add i32 %79, 7680
  %129 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.5.i = getelementptr inbounds %struct.macb, ptr %130, i32 0, i32 5
  %131 = ptrtoint ptr %rx_ring_size.i.i.5.i to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %rx_ring_size.i.i.5.i, align 4
  %sub.i.i.5.i = add i32 %132, 7
  %and.i.i.5.i = and i32 %sub.i.i.5.i, 5
  %hw_dma_cap.i.i32.5.i = getelementptr inbounds %struct.macb, ptr %130, i32 0, i32 35
  %133 = ptrtoint ptr %hw_dma_cap.i.i32.5.i to i32
  call void @__asan_load1_noabort(i32 %133)
  %134 = load i8, ptr %hw_dma_cap.i.i32.5.i, align 8
  %135 = zext i8 %134 to i64
  call void @__sanitizer_cov_trace_switch(i64 %135, ptr @__sancov_gen_cov_switch_values.138)
  switch i8 %134, label %macb_rx_desc.exit.4.i.macb_rx_desc.exit.5.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge
    i8 2, label %macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge47
    i8 3, label %sw.bb1.i.i.5.i
  ]

macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge47:  ; preds = %macb_rx_desc.exit.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.5.i

macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge:    ; preds = %macb_rx_desc.exit.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.5.i

macb_rx_desc.exit.4.i.macb_rx_desc.exit.5.i_crit_edge: ; preds = %macb_rx_desc.exit.4.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.5.i

sw.bb1.i.i.5.i:                                   ; preds = %macb_rx_desc.exit.4.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.5.i = mul nuw nsw i32 %and.i.i.5.i, 3
  br label %macb_rx_desc.exit.5.i

sw.bb.i.i.5.i:                                    ; preds = %macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge, %macb_rx_desc.exit.4.i.sw.bb.i.i.5.i_crit_edge47
  %shl.i.i.5.i = shl nuw nsw i32 %and.i.i.5.i, 1
  br label %macb_rx_desc.exit.5.i

macb_rx_desc.exit.5.i:                            ; preds = %sw.bb.i.i.5.i, %sw.bb1.i.i.5.i, %macb_rx_desc.exit.4.i.macb_rx_desc.exit.5.i_crit_edge
  %desc_idx.addr.0.i.i.5.i = phi i32 [ %and.i.i.5.i, %macb_rx_desc.exit.4.i.macb_rx_desc.exit.5.i_crit_edge ], [ %mul.i.i.5.i, %sw.bb1.i.i.5.i ], [ %shl.i.i.5.i, %sw.bb.i.i.5.i ]
  %136 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.5.i = getelementptr %struct.macb_dma_desc, ptr %137, i32 %desc_idx.addr.0.i.i.5.i
  %138 = ptrtoint ptr %arrayidx.i.5.i to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 %add.4.i, ptr %arrayidx.i.5.i, align 4
  %ctrl.5.i = getelementptr %struct.macb_dma_desc, ptr %137, i32 %desc_idx.addr.0.i.i.5.i, i32 1
  %139 = ptrtoint ptr %ctrl.5.i to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 0, ptr %ctrl.5.i, align 4
  %add.5.i = add i32 %79, 9216
  %140 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.6.i = getelementptr inbounds %struct.macb, ptr %141, i32 0, i32 5
  %142 = ptrtoint ptr %rx_ring_size.i.i.6.i to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %rx_ring_size.i.i.6.i, align 4
  %sub.i.i.6.i = add i32 %143, 7
  %and.i.i.6.i = and i32 %sub.i.i.6.i, 6
  %hw_dma_cap.i.i32.6.i = getelementptr inbounds %struct.macb, ptr %141, i32 0, i32 35
  %144 = ptrtoint ptr %hw_dma_cap.i.i32.6.i to i32
  call void @__asan_load1_noabort(i32 %144)
  %145 = load i8, ptr %hw_dma_cap.i.i32.6.i, align 8
  %146 = zext i8 %145 to i64
  call void @__sanitizer_cov_trace_switch(i64 %146, ptr @__sancov_gen_cov_switch_values.139)
  switch i8 %145, label %macb_rx_desc.exit.5.i.macb_rx_desc.exit.6.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge
    i8 2, label %macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge48
    i8 3, label %sw.bb1.i.i.6.i
  ]

macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge48:  ; preds = %macb_rx_desc.exit.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.6.i

macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge:    ; preds = %macb_rx_desc.exit.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.6.i

macb_rx_desc.exit.5.i.macb_rx_desc.exit.6.i_crit_edge: ; preds = %macb_rx_desc.exit.5.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.6.i

sw.bb1.i.i.6.i:                                   ; preds = %macb_rx_desc.exit.5.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.6.i = mul nuw nsw i32 %and.i.i.6.i, 3
  br label %macb_rx_desc.exit.6.i

sw.bb.i.i.6.i:                                    ; preds = %macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge, %macb_rx_desc.exit.5.i.sw.bb.i.i.6.i_crit_edge48
  %shl.i.i.6.i = shl nuw nsw i32 %and.i.i.6.i, 1
  br label %macb_rx_desc.exit.6.i

macb_rx_desc.exit.6.i:                            ; preds = %sw.bb.i.i.6.i, %sw.bb1.i.i.6.i, %macb_rx_desc.exit.5.i.macb_rx_desc.exit.6.i_crit_edge
  %desc_idx.addr.0.i.i.6.i = phi i32 [ %and.i.i.6.i, %macb_rx_desc.exit.5.i.macb_rx_desc.exit.6.i_crit_edge ], [ %mul.i.i.6.i, %sw.bb1.i.i.6.i ], [ %shl.i.i.6.i, %sw.bb.i.i.6.i ]
  %147 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.6.i = getelementptr %struct.macb_dma_desc, ptr %148, i32 %desc_idx.addr.0.i.i.6.i
  %149 = ptrtoint ptr %arrayidx.i.6.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 %add.5.i, ptr %arrayidx.i.6.i, align 4
  %ctrl.6.i = getelementptr %struct.macb_dma_desc, ptr %148, i32 %desc_idx.addr.0.i.i.6.i, i32 1
  %150 = ptrtoint ptr %ctrl.6.i to i32
  call void @__asan_store4_noabort(i32 %150)
  store i32 0, ptr %ctrl.6.i, align 4
  %add.6.i = add i32 %79, 10752
  %151 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.7.i = getelementptr inbounds %struct.macb, ptr %152, i32 0, i32 5
  %153 = ptrtoint ptr %rx_ring_size.i.i.7.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %rx_ring_size.i.i.7.i, align 4
  %sub.i.i.7.i = add i32 %154, 7
  %and.i.i.7.i = and i32 %sub.i.i.7.i, 7
  %hw_dma_cap.i.i32.7.i = getelementptr inbounds %struct.macb, ptr %152, i32 0, i32 35
  %155 = ptrtoint ptr %hw_dma_cap.i.i32.7.i to i32
  call void @__asan_load1_noabort(i32 %155)
  %156 = load i8, ptr %hw_dma_cap.i.i32.7.i, align 8
  %157 = zext i8 %156 to i64
  call void @__sanitizer_cov_trace_switch(i64 %157, ptr @__sancov_gen_cov_switch_values.140)
  switch i8 %156, label %macb_rx_desc.exit.6.i.macb_rx_desc.exit.7.i_crit_edge [
    i8 1, label %macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge
    i8 2, label %macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge49
    i8 3, label %sw.bb1.i.i.7.i
  ]

macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge49:  ; preds = %macb_rx_desc.exit.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.7.i

macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge:    ; preds = %macb_rx_desc.exit.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.7.i

macb_rx_desc.exit.6.i.macb_rx_desc.exit.7.i_crit_edge: ; preds = %macb_rx_desc.exit.6.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_rx_desc.exit.7.i

sw.bb1.i.i.7.i:                                   ; preds = %macb_rx_desc.exit.6.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.7.i = mul nuw nsw i32 %and.i.i.7.i, 3
  br label %macb_rx_desc.exit.7.i

sw.bb.i.i.7.i:                                    ; preds = %macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge, %macb_rx_desc.exit.6.i.sw.bb.i.i.7.i_crit_edge49
  %shl.i.i.7.i = shl nuw nsw i32 %and.i.i.7.i, 1
  br label %macb_rx_desc.exit.7.i

macb_rx_desc.exit.7.i:                            ; preds = %sw.bb.i.i.7.i, %sw.bb1.i.i.7.i, %macb_rx_desc.exit.6.i.macb_rx_desc.exit.7.i_crit_edge
  %desc_idx.addr.0.i.i.7.i = phi i32 [ %and.i.i.7.i, %macb_rx_desc.exit.6.i.macb_rx_desc.exit.7.i_crit_edge ], [ %mul.i.i.7.i, %sw.bb1.i.i.7.i ], [ %shl.i.i.7.i, %sw.bb.i.i.7.i ]
  %158 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.7.i = getelementptr %struct.macb_dma_desc, ptr %159, i32 %desc_idx.addr.0.i.i.7.i
  %160 = ptrtoint ptr %arrayidx.i.7.i to i32
  call void @__asan_store4_noabort(i32 %160)
  store i32 %add.6.i, ptr %arrayidx.i.7.i, align 4
  %ctrl.7.i = getelementptr %struct.macb_dma_desc, ptr %159, i32 %desc_idx.addr.0.i.i.7.i, i32 1
  %161 = ptrtoint ptr %ctrl.7.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 0, ptr %ctrl.7.i, align 4
  %add.7.i = add i32 %79, 12288
  %162 = ptrtoint ptr %queues.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %queues.i, align 8
  %rx_ring_size.i.i.8.i = getelementptr inbounds %struct.macb, ptr %163, i32 0, i32 5
  %164 = ptrtoint ptr %rx_ring_size.i.i.8.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load i32, ptr %rx_ring_size.i.i.8.i, align 4
  %sub.i.i.8.i = add i32 %165, 15
  %and.i.i.8.i = and i32 %sub.i.i.8.i, 8
  %hw_dma_cap.i.i32.8.i = getelementptr inbounds %struct.macb, ptr %163, i32 0, i32 35
  %166 = ptrtoint ptr %hw_dma_cap.i.i32.8.i to i32
  call void @__asan_load1_noabort(i32 %166)
  %167 = load i8, ptr %hw_dma_cap.i.i32.8.i, align 8
  %168 = zext i8 %167 to i64
  call void @__sanitizer_cov_trace_switch(i64 %168, ptr @__sancov_gen_cov_switch_values.141)
  switch i8 %167, label %macb_rx_desc.exit.7.i.if.end8_crit_edge [
    i8 1, label %macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge
    i8 2, label %macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge50
    i8 3, label %sw.bb1.i.i.8.i
  ]

macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge50:  ; preds = %macb_rx_desc.exit.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.8.i

macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge:    ; preds = %macb_rx_desc.exit.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %sw.bb.i.i.8.i

macb_rx_desc.exit.7.i.if.end8_crit_edge:          ; preds = %macb_rx_desc.exit.7.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end8

sw.bb1.i.i.8.i:                                   ; preds = %macb_rx_desc.exit.7.i
  call void @__sanitizer_cov_trace_pc() #23
  %mul.i.i.8.i = mul nuw nsw i32 %and.i.i.8.i, 3
  br label %if.end8

sw.bb.i.i.8.i:                                    ; preds = %macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge, %macb_rx_desc.exit.7.i.sw.bb.i.i.8.i_crit_edge50
  %shl.i.i.8.i = shl nuw nsw i32 %and.i.i.8.i, 1
  br label %if.end8

if.end8:                                          ; preds = %sw.bb.i.i.8.i, %sw.bb1.i.i.8.i, %macb_rx_desc.exit.7.i.if.end8_crit_edge
  %desc_idx.addr.0.i.i.8.i = phi i32 [ %and.i.i.8.i, %macb_rx_desc.exit.7.i.if.end8_crit_edge ], [ %mul.i.i.8.i, %sw.bb1.i.i.8.i ], [ %shl.i.i.8.i, %sw.bb.i.i.8.i ]
  %169 = ptrtoint ptr %rx_ring.i.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load ptr, ptr %rx_ring.i.i, align 4
  %arrayidx.i.8.i = getelementptr %struct.macb_dma_desc, ptr %170, i32 %desc_idx.addr.0.i.i.8.i
  %ctrl.8.i = getelementptr %struct.macb_dma_desc, ptr %170, i32 %desc_idx.addr.0.i.i.8.i, i32 1
  %171 = ptrtoint ptr %ctrl.8.i to i32
  call void @__asan_store4_noabort(i32 %171)
  store i32 0, ptr %ctrl.8.i, align 4
  %or.i = or i32 %add.7.i, 2
  %172 = ptrtoint ptr %arrayidx.i.8.i to i32
  call void @__asan_store4_noabort(i32 %172)
  store i32 %or.i, ptr %arrayidx.i.8.i, align 4
  %rx_tail.i = getelementptr i8, ptr %dev, i32 2460
  %173 = ptrtoint ptr %rx_tail.i to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 0, ptr %rx_tail.i, align 4
  %174 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %macb_reg_writel, align 4
  %176 = ptrtoint ptr %rx_ring_dma.i.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load i32, ptr %rx_ring_dma.i.i, align 4
  tail call void %175(ptr noundef %add.ptr.i, i32 noundef 24, i32 noundef %177) #21
  %178 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %178)
  %179 = load ptr, ptr %macb_reg_readl, align 8
  %call3.i = tail call i32 %179(ptr noundef %add.ptr.i, i32 noundef 0) #21
  %180 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %180)
  %181 = load ptr, ptr %macb_reg_writel, align 4
  %or6.i = or i32 %call3.i, 12
  tail call void %181(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef %or6.i) #21
  %182 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %183(ptr noundef %add.ptr.i, i32 noundef 40, i32 noundef 3254) #21
  %call9 = tail call fastcc i32 @macb_phylink_connect(ptr noundef %add.ptr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %stop

if.end12:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %184 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %185, i32 0, i32 13
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  br label %cleanup

stop:                                             ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #23
  tail call fastcc void @at91ether_stop(ptr noundef %add.ptr.i)
  br label %pm_exit

pm_exit:                                          ; preds = %stop, %macb_dma_desc_get_size.exit35.i.i, %macb_dma_desc_get_size.exit.i.i.pm_exit_crit_edge
  %ret.0 = phi i32 [ %call9, %stop ], [ -12, %macb_dma_desc_get_size.exit35.i.i ], [ -12, %macb_dma_desc_get_size.exit.i.i.pm_exit_crit_edge ]
  %186 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load ptr, ptr %pdev, align 4
  %dev14 = getelementptr inbounds %struct.platform_device, ptr %187, i32 0, i32 3
  %call.i36 = tail call i32 @__pm_runtime_idle(ptr noundef %dev14, i32 noundef 4) #21
  br label %cleanup

cleanup:                                          ; preds = %pm_exit, %if.end12, %do.end11.i.i.i.i, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %pm_exit ], [ 0, %if.end12 ], [ %call.i, %if.then.cleanup_crit_edge ], [ %call.i, %do.end11.i.i.i.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_close(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %0 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %1, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  %phylink = getelementptr i8, ptr %dev, i32 18424
  %2 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %phylink, align 8
  tail call void @phylink_stop(ptr noundef %3) #21
  %4 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %phylink, align 8
  tail call void @phylink_disconnect_phy(ptr noundef %5) #21
  tail call fastcc void @at91ether_stop(ptr noundef %add.ptr.i)
  %pdev = getelementptr i8, ptr %dev, i32 18196
  %6 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev, align 4
  %dev2 = getelementptr inbounds %struct.platform_device, ptr %7, i32 0, i32 3
  %call.i = tail call i32 @__pm_runtime_idle(ptr noundef %dev2, i32 noundef 5) #21
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @at91ether_start_xmit(ptr noundef %skb, ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %dev, i32 2304
  %macb_reg_readl = getelementptr i8, ptr %dev, i32 2312
  %0 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_readl, align 8
  %call1 = tail call i32 %1(ptr noundef %add.ptr.i, i32 noundef 20) #21
  %and = and i32 %call1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %_tx.i.i = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 103
  %2 = ptrtoint ptr %_tx.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %_tx.i.i, align 128
  %state.i.i = getelementptr inbounds %struct.netdev_queue, ptr %3, i32 0, i32 13
  tail call void @_set_bit(i32 noundef 0, ptr noundef %state.i.i) #21
  %rm9200_txq = getelementptr i8, ptr %dev, i32 18480
  %4 = ptrtoint ptr %rm9200_txq to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %skb, ptr %rm9200_txq, align 8
  %len = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 6
  %5 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len, align 4
  %size = getelementptr i8, ptr %dev, i32 18488
  %7 = ptrtoint ptr %size to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %size, align 8
  %pdev = getelementptr i8, ptr %dev, i32 18196
  %8 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev, align 4
  %dev5 = getelementptr inbounds %struct.platform_device, ptr %9, i32 0, i32 3
  %data = getelementptr inbounds %struct.sk_buff, ptr %skb, i32 0, i32 19
  %10 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %data, align 4
  %12 = load i32, ptr %len, align 4
  %call.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %11) #21
  br i1 %call.i, label %land.rhs.i, label %if.end39.i

land.rhs.i:                                       ; preds = %if.then
  %.b1.i = load i1, ptr @dma_map_single_attrs.__already_done, align 1
  br i1 %.b1.i, label %land.rhs.i.dma_map_single_attrs.exit_crit_edge, label %if.then.i, !prof !300

land.rhs.i.dma_map_single_attrs.exit_crit_edge:   ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dma_map_single_attrs.exit

if.then.i:                                        ; preds = %land.rhs.i
  store i1 true, ptr @dma_map_single_attrs.__already_done, align 1
  %call16.i = tail call ptr @dev_driver_string(ptr noundef %dev5) #21
  %init_name.i.i = getelementptr inbounds %struct.platform_device, ptr %9, i32 0, i32 3, i32 3
  %13 = ptrtoint ptr %init_name.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %init_name.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %14, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.dev_name.exit.i_crit_edge

if.then.i.dev_name.exit.i_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %dev_name.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %15 = ptrtoint ptr %dev5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dev5, align 4
  br label %dev_name.exit.i

dev_name.exit.i:                                  ; preds = %if.end.i.i, %if.then.i.dev_name.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %16, %if.end.i.i ], [ %14, %if.then.i.dev_name.exit.i_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.59, i32 noundef 327, i32 noundef 9, ptr noundef nonnull @.str.60, ptr noundef %call16.i, ptr noundef %retval.0.i.i) #21
  br label %dma_map_single_attrs.exit

if.end39.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @debug_dma_map_single(ptr noundef %dev5, ptr noundef %11, i32 noundef %12) #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %17 = load ptr, ptr @mem_map, align 4
  %18 = ptrtoint ptr %11 to i32
  %sub.i = add i32 %18, 1073741824
  %shr.i = lshr i32 %sub.i, 12
  %add.ptr.i50 = getelementptr %struct.page, ptr %17, i32 %shr.i
  %and.i = and i32 %18, 4095
  %call41.i = tail call i32 @dma_map_page_attrs(ptr noundef %dev5, ptr noundef %add.ptr.i50, i32 noundef %and.i, i32 noundef %12, i32 noundef 1, i32 noundef 0) #21
  br label %dma_map_single_attrs.exit

dma_map_single_attrs.exit:                        ; preds = %if.end39.i, %dev_name.exit.i, %land.rhs.i.dma_map_single_attrs.exit_crit_edge
  %retval.0.i = phi i32 [ %call41.i, %if.end39.i ], [ -1, %dev_name.exit.i ], [ -1, %land.rhs.i.dma_map_single_attrs.exit_crit_edge ]
  %mapping = getelementptr i8, ptr %dev, i32 18484
  %19 = ptrtoint ptr %mapping to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %retval.0.i, ptr %mapping, align 4
  %20 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev, align 4
  %dev11 = getelementptr inbounds %struct.platform_device, ptr %21, i32 0, i32 3
  tail call void @debug_dma_mapping_error(ptr noundef %dev11, i32 noundef %retval.0.i) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %retval.0.i)
  %cmp.i = icmp eq i32 %retval.0.i, -1
  br i1 %cmp.i, label %if.then17, label %if.end

if.then17:                                        ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @__dev_kfree_skb_any(ptr noundef %skb, i32 noundef 1) #21
  %tx_dropped = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 36, i32 7
  %22 = ptrtoint ptr %tx_dropped to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %tx_dropped, align 4
  %inc = add i32 %23, 1
  store i32 %inc, ptr %tx_dropped, align 4
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.90, ptr noundef nonnull @__func__.at91ether_start_xmit) #24
  br label %cleanup24

if.end:                                           ; preds = %dma_map_single_attrs.exit
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel = getelementptr i8, ptr %dev, i32 2316
  %24 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %macb_reg_writel, align 4
  %26 = ptrtoint ptr %mapping to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %mapping, align 4
  tail call void %25(ptr noundef %add.ptr.i, i32 noundef 12, i32 noundef %27) #21
  %28 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %macb_reg_writel, align 4
  %30 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %len, align 4
  tail call void %29(ptr noundef %add.ptr.i, i32 noundef 16, i32 noundef %31) #21
  br label %cleanup24

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void (ptr, ptr, ...) @netdev_err(ptr noundef %dev, ptr noundef nonnull @.str.91, ptr noundef nonnull @__func__.at91ether_start_xmit) #24
  br label %cleanup24

cleanup24:                                        ; preds = %if.else, %if.end, %if.then17
  %retval.1 = phi i32 [ 0, %if.end ], [ 16, %if.else ], [ 0, %if.then17 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @at91ether_poll_controller(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #21, !srcloc !317
  %and.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not = icmp eq i32 %and.i, 0
  br i1 %tobool.not, label %if.then22, label %do.end11

do.end11:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %irq = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 64
  %1 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %irq, align 4
  %call12 = tail call i32 @at91ether_interrupt(i32 noundef %2, ptr noundef %dev)
  br label %do.body24

if.then22:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @trace_hardirqs_off() #21
  %irq48 = getelementptr inbounds %struct.net_device, ptr %dev, i32 0, i32 64
  %3 = ptrtoint ptr %irq48 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %irq48, align 4
  %call1249 = tail call i32 @at91ether_interrupt(i32 noundef %4, ptr noundef %dev)
  tail call void @trace_hardirqs_on() #21
  br label %do.body24

do.body24:                                        ; preds = %if.then22, %do.end11
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #21, !srcloc !318
  %and.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool32.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool32.not, label %if.then36, label %do.body24.do.end39_crit_edge, !prof !301

do.body24.do.end39_crit_edge:                     ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #23
  br label %do.end39

if.then36:                                        ; preds = %do.body24
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @warn_bogus_irq_restore() #21
  br label %do.end39

do.end39:                                         ; preds = %if.then36, %do.body24.do.end39_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #21, !srcloc !319
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @at91ether_stop(ptr noundef %lp) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 3
  %0 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %1(ptr noundef %lp, i32 noundef 44, i32 noundef 3254) #21
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 2
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %call = tail call i32 %3(ptr noundef %lp, i32 noundef 0) #21
  %4 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %macb_reg_writel, align 4
  %and = and i32 %call, -13
  tail call void %5(ptr noundef %lp, i32 noundef 0, i32 noundef %and) #21
  %rx_ring.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 9, i32 0, i32 21
  %6 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rx_ring.i, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.then.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  %pdev.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 11
  %8 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev.i, align 4
  %dev.i = getelementptr inbounds %struct.platform_device, ptr %9, i32 0, i32 3
  %hw_dma_cap.i.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 35
  %10 = ptrtoint ptr %hw_dma_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %hw_dma_cap.i.i, align 8
  %switch.tableidx = add i8 %11, -1
  call void @__sanitizer_cov_trace_const_cmp1(i8 3, i8 %switch.tableidx)
  %12 = icmp ult i8 %switch.tableidx, 3
  br i1 %12, label %switch.lookup, label %if.then.i.macb_dma_desc_get_size.exit.i_crit_edge

if.then.i.macb_dma_desc_get_size.exit.i_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_dma_desc_get_size.exit.i

switch.lookup:                                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #23
  %13 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.at91ether_stop, i32 0, i32 %13
  %14 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %14)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %macb_dma_desc_get_size.exit.i

macb_dma_desc_get_size.exit.i:                    ; preds = %switch.lookup, %if.then.i.macb_dma_desc_get_size.exit.i_crit_edge
  %desc_size.0.i.i = phi i32 [ %switch.load, %switch.lookup ], [ 72, %if.then.i.macb_dma_desc_get_size.exit.i_crit_edge ]
  %rx_ring_dma.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 9, i32 0, i32 17
  %15 = ptrtoint ptr %rx_ring_dma.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rx_ring_dma.i, align 4
  tail call void @dma_free_attrs(ptr noundef %dev.i, i32 noundef %desc_size.0.i.i, ptr noundef nonnull %7, i32 noundef %16, i32 noundef 0) #21
  %17 = ptrtoint ptr %rx_ring.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %rx_ring.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %macb_dma_desc_get_size.exit.i, %entry.if.end.i_crit_edge
  %rx_buffers.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 9, i32 0, i32 23
  %18 = ptrtoint ptr %rx_buffers.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rx_buffers.i, align 4
  %tobool3.not.i = icmp eq ptr %19, null
  br i1 %tobool3.not.i, label %if.end.i.at91ether_free_coherent.exit_crit_edge, label %if.then4.i

if.end.i.at91ether_free_coherent.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %at91ether_free_coherent.exit

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %pdev5.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 11
  %20 = ptrtoint ptr %pdev5.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev5.i, align 4
  %dev6.i = getelementptr inbounds %struct.platform_device, ptr %21, i32 0, i32 3
  %rx_buffers_dma.i = getelementptr inbounds %struct.macb, ptr %lp, i32 0, i32 9, i32 0, i32 18
  %22 = ptrtoint ptr %rx_buffers_dma.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %rx_buffers_dma.i, align 8
  tail call void @dma_free_attrs(ptr noundef %dev6.i, i32 noundef 13824, ptr noundef nonnull %19, i32 noundef %23, i32 noundef 0) #21
  %24 = ptrtoint ptr %rx_buffers.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %rx_buffers.i, align 4
  br label %at91ether_free_coherent.exit

at91ether_free_coherent.exit:                     ; preds = %if.then4.i, %if.end.i.at91ether_free_coherent.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netif_rx(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dev_kfree_skb_irq(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fu540_c000_clk_init(ptr noundef %pdev, ptr nocapture noundef %pclk, ptr nocapture noundef %hclk, ptr nocapture noundef %tx_clk, ptr nocapture noundef %rx_clk, ptr nocapture noundef %tsu_clk) #2 align 64 {
entry:
  %clks.i = alloca [5 x %struct.clk_bulk_data], align 4
  %init = alloca %struct.clk_init_data, align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %init) #21
  %0 = call ptr @memset(ptr %init, i32 255, i32 28)
  %call = tail call i32 @macb_clk_init(ptr noundef %pdev, ptr noundef %pclk, ptr noundef %hclk, ptr noundef %tx_clk, ptr noundef %rx_clk, ptr noundef %tsu_clk)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.platform_device, ptr %pdev, i32 0, i32 3
  %call.i = tail call noalias ptr @devm_kmalloc(ptr noundef %dev, i32 noundef 20, i32 noundef 3520) #21
  store ptr %call.i, ptr @mgmt, align 4
  %tobool2.not = icmp eq ptr %call.i, null
  br i1 %tobool2.not, label %if.end.err_disable_clks_crit_edge, label %if.end4

if.end.err_disable_clks_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %err_disable_clks

if.end4:                                          ; preds = %if.end
  %1 = ptrtoint ptr %init to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr @.str.93, ptr %init, align 4
  %ops = getelementptr inbounds %struct.clk_init_data, ptr %init, i32 0, i32 1
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr @fu540_c000_ops, ptr %ops, align 4
  %flags = getelementptr inbounds %struct.clk_init_data, ptr %init, i32 0, i32 6
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %flags, align 4
  %num_parents = getelementptr inbounds %struct.clk_init_data, ptr %init, i32 0, i32 5
  %4 = ptrtoint ptr %num_parents to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %num_parents, align 4
  %rate = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, ptr %call.i, i32 0, i32 1
  %5 = ptrtoint ptr %rate to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %rate, align 4
  %init5 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, ptr %call.i, i32 0, i32 2, i32 2
  %6 = ptrtoint ptr %init5 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %init, ptr %init5, align 4
  %hw7 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, ptr %call.i, i32 0, i32 2
  %call8 = call ptr @devm_clk_register(ptr noundef %dev, ptr noundef %hw7) #21
  %7 = ptrtoint ptr %tx_clk to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call8, ptr %tx_clk, align 4
  %cmp.i = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #23
  %8 = ptrtoint ptr %call8 to i32
  br label %err_disable_clks

if.end12:                                         ; preds = %if.end4
  %call13 = call fastcc i32 @clk_prepare_enable(ptr noundef %call8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %do.end19, label %do.end

do.end:                                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.94, i32 noundef %call13) #24
  %9 = ptrtoint ptr %tx_clk to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %tx_clk, align 4
  br label %err_disable_clks

do.end19:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #23
  %10 = ptrtoint ptr %init to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %init, align 4
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %dev, ptr noundef nonnull @.str.97, ptr noundef %11) #24
  br label %cleanup

err_disable_clks:                                 ; preds = %do.end, %if.then10, %if.end.err_disable_clks_crit_edge
  %err.0 = phi i32 [ %8, %if.then10 ], [ %call13, %do.end ], [ -12, %if.end.err_disable_clks_crit_edge ]
  %12 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pclk, align 4
  %14 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %hclk, align 4
  %16 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %tx_clk, align 4
  %18 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %rx_clk, align 4
  %20 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %tsu_clk, align 4
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %clks.i) #21
  %22 = ptrtoint ptr %clks.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %clks.i, align 4
  %clk.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 0, i32 1
  %23 = ptrtoint ptr %clk.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %21, ptr %clk.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1
  %24 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr null, ptr %arrayinit.element.i, align 4
  %clk2.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1, i32 1
  %25 = ptrtoint ptr %clk2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %19, ptr %clk2.i, align 4
  %arrayinit.element3.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2
  %26 = ptrtoint ptr %arrayinit.element3.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr null, ptr %arrayinit.element3.i, align 4
  %clk5.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2, i32 1
  %27 = ptrtoint ptr %clk5.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %13, ptr %clk5.i, align 4
  %arrayinit.element6.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3
  %28 = ptrtoint ptr %arrayinit.element6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %arrayinit.element6.i, align 4
  %clk8.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3, i32 1
  %29 = ptrtoint ptr %clk8.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %15, ptr %clk8.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4
  %30 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr null, ptr %arrayinit.element9.i, align 4
  %clk11.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4, i32 1
  %31 = ptrtoint ptr %clk11.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %17, ptr %clk11.i, align 4
  call void @clk_bulk_disable(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @clk_bulk_unprepare(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %clks.i) #21
  br label %cleanup

cleanup:                                          ; preds = %err_disable_clks, %do.end19, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %err_disable_clks ], [ 0, %do.end19 ], [ %call, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %init) #21
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fu540_c000_init(ptr noundef %pdev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @devm_platform_ioremap_resource(ptr noundef %pdev, i32 noundef 1) #21
  %0 = load ptr, ptr @mgmt, align 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %call, ptr %0, align 4
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %2 = ptrtoint ptr %call to i32
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  %call5 = tail call i32 @macb_init(ptr noundef %pdev)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %2, %if.then ], [ %call5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_clk_register(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @devm_kmalloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @fu540_macb_tx_recalc_rate(ptr nocapture noundef readnone %hw, i32 noundef %parent_rate) #20 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @mgmt, align 4
  %rate = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, ptr %0, i32 0, i32 1
  %1 = ptrtoint ptr %rate to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %rate, align 4
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fu540_macb_tx_round_rate(ptr nocapture noundef readnone %hw, i32 noundef %rate, ptr nocapture noundef readnone %parent_rate) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2500000, i32 %rate)
  %cmp = icmp ult i32 %rate, 2500000
  br i1 %cmp, label %entry.return.sink.split_crit_edge, label %if.else, !prof !301

entry.return.sink.split_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2500000, i32 %rate)
  %cmp21 = icmp eq i32 %rate, 2500000
  br i1 %cmp21, label %if.else.return_crit_edge, label %if.else23

if.else.return_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.else23:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 13750000, i32 %rate)
  %cmp25 = icmp ult i32 %rate, 13750000
  br i1 %cmp25, label %if.else23.return.sink.split_crit_edge, label %if.else57, !prof !301

if.else23.return.sink.split_crit_edge:            ; preds = %if.else23
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else57:                                        ; preds = %if.else23
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000000, i32 %rate)
  %cmp59 = icmp ult i32 %rate, 25000000
  br i1 %cmp59, label %if.else57.return.sink.split_crit_edge, label %if.else91, !prof !301

if.else57.return.sink.split_crit_edge:            ; preds = %if.else57
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else91:                                        ; preds = %if.else57
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000000, i32 %rate)
  %cmp92 = icmp eq i32 %rate, 25000000
  br i1 %cmp92, label %if.else91.return_crit_edge, label %if.else94

if.else91.return_crit_edge:                       ; preds = %if.else91
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

if.else94:                                        ; preds = %if.else91
  call void @__sanitizer_cov_trace_const_cmp4(i32 75000000, i32 %rate)
  %cmp96 = icmp ult i32 %rate, 75000000
  br i1 %cmp96, label %if.else94.return.sink.split_crit_edge, label %if.else128, !prof !301

if.else94.return.sink.split_crit_edge:            ; preds = %if.else94
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else128:                                       ; preds = %if.else94
  call void @__sanitizer_cov_trace_const_cmp4(i32 125000000, i32 %rate)
  %cmp130 = icmp ult i32 %rate, 125000000
  br i1 %cmp130, label %if.else128.return.sink.split_crit_edge, label %if.else162, !prof !301

if.else128.return.sink.split_crit_edge:           ; preds = %if.else128
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else162:                                       ; preds = %if.else128
  call void @__sanitizer_cov_trace_const_cmp4(i32 125000000, i32 %rate)
  %cmp163 = icmp eq i32 %rate, 125000000
  br i1 %cmp163, label %if.else162.return_crit_edge, label %if.else162.return.sink.split_crit_edge

if.else162.return.sink.split_crit_edge:           ; preds = %if.else162
  call void @__sanitizer_cov_trace_pc() #23
  br label %return.sink.split

if.else162.return_crit_edge:                      ; preds = %if.else162
  call void @__sanitizer_cov_trace_pc() #23
  br label %return

return.sink.split:                                ; preds = %if.else162.return.sink.split_crit_edge, %if.else128.return.sink.split_crit_edge, %if.else94.return.sink.split_crit_edge, %if.else57.return.sink.split_crit_edge, %if.else23.return.sink.split_crit_edge, %entry.return.sink.split_crit_edge
  %.sink = phi i32 [ 4383, %entry.return.sink.split_crit_edge ], [ 4387, %if.else23.return.sink.split_crit_edge ], [ 4389, %if.else57.return.sink.split_crit_edge ], [ 4393, %if.else94.return.sink.split_crit_edge ], [ 4395, %if.else128.return.sink.split_crit_edge ], [ 4400, %if.else162.return.sink.split_crit_edge ]
  %retval.0.ph = phi i32 [ 2500000, %entry.return.sink.split_crit_edge ], [ 2500000, %if.else23.return.sink.split_crit_edge ], [ 25000000, %if.else57.return.sink.split_crit_edge ], [ 25000000, %if.else94.return.sink.split_crit_edge ], [ 125000000, %if.else128.return.sink.split_crit_edge ], [ 125000000, %if.else162.return.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #21
  br label %return

return:                                           ; preds = %return.sink.split, %if.else162.return_crit_edge, %if.else91.return_crit_edge, %if.else.return_crit_edge
  %retval.0 = phi i32 [ 2500000, %if.else.return_crit_edge ], [ 25000000, %if.else91.return_crit_edge ], [ 125000000, %if.else162.return_crit_edge ], [ %retval.0.ph, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @fu540_macb_tx_set_rate(ptr nocapture noundef readnone %hw, i32 noundef %rate, i32 noundef %parent_rate) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2500000, i32 %rate)
  %cmp.i = icmp ult i32 %rate, 2500000
  br i1 %cmp.i, label %entry.fu540_macb_tx_round_rate.exit.thread14_crit_edge, label %if.else.i, !prof !301

entry.fu540_macb_tx_round_rate.exit.thread14_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit.thread14

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2500000, i32 %rate)
  %cmp21.i = icmp eq i32 %rate, 2500000
  br i1 %cmp21.i, label %if.else.i.if.then_crit_edge, label %if.else23.i

if.else.i.if.then_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.else23.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 13750000, i32 %rate)
  %cmp25.i = icmp ult i32 %rate, 13750000
  br i1 %cmp25.i, label %if.else23.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, label %if.else57.i, !prof !301

if.else23.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge: ; preds = %if.else23.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit.thread14

if.else57.i:                                      ; preds = %if.else23.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000000, i32 %rate)
  %cmp59.i = icmp ult i32 %rate, 25000000
  br i1 %cmp59.i, label %if.else57.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, label %if.else91.i, !prof !301

if.else57.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge: ; preds = %if.else57.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit.thread14

if.else91.i:                                      ; preds = %if.else57.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 25000000, i32 %rate)
  %cmp92.i = icmp eq i32 %rate, 25000000
  br i1 %cmp92.i, label %if.else91.i.if.then_crit_edge, label %if.else94.i

if.else91.i.if.then_crit_edge:                    ; preds = %if.else91.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.else94.i:                                      ; preds = %if.else91.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 75000000, i32 %rate)
  %cmp96.i = icmp ult i32 %rate, 75000000
  br i1 %cmp96.i, label %if.else94.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, label %if.else128.i, !prof !301

if.else94.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge: ; preds = %if.else94.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit.thread14

if.else128.i:                                     ; preds = %if.else94.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 125000000, i32 %rate)
  %cmp130.i = icmp ult i32 %rate, 125000000
  br i1 %cmp130.i, label %if.else128.i.fu540_macb_tx_round_rate.exit_crit_edge, label %if.else162.i, !prof !301

if.else128.i.fu540_macb_tx_round_rate.exit_crit_edge: ; preds = %if.else128.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit

if.else162.i:                                     ; preds = %if.else128.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 125000000, i32 %rate)
  %cmp163.i = icmp eq i32 %rate, 125000000
  br i1 %cmp163.i, label %if.else162.i.if.else_crit_edge, label %if.else162.i.fu540_macb_tx_round_rate.exit_crit_edge

if.else162.i.fu540_macb_tx_round_rate.exit_crit_edge: ; preds = %if.else162.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %fu540_macb_tx_round_rate.exit

if.else162.i.if.else_crit_edge:                   ; preds = %if.else162.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else

fu540_macb_tx_round_rate.exit.thread14:           ; preds = %if.else94.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, %if.else57.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, %if.else23.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge, %entry.fu540_macb_tx_round_rate.exit.thread14_crit_edge
  %.sink.i.ph = phi i32 [ 4393, %if.else94.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 4389, %if.else57.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 4387, %if.else23.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 4383, %entry.fu540_macb_tx_round_rate.exit.thread14_crit_edge ]
  %retval.0.ph.i.ph = phi i32 [ 25000000, %if.else94.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 25000000, %if.else57.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 2500000, %if.else23.i.fu540_macb_tx_round_rate.exit.thread14_crit_edge ], [ 2500000, %entry.fu540_macb_tx_round_rate.exit.thread14_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef %.sink.i.ph, i32 noundef 9, ptr noundef null) #21
  br label %if.then

fu540_macb_tx_round_rate.exit:                    ; preds = %if.else162.i.fu540_macb_tx_round_rate.exit_crit_edge, %if.else128.i.fu540_macb_tx_round_rate.exit_crit_edge
  %.sink.i = phi i32 [ 4395, %if.else128.i.fu540_macb_tx_round_rate.exit_crit_edge ], [ 4400, %if.else162.i.fu540_macb_tx_round_rate.exit_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.5, i32 noundef %.sink.i, i32 noundef 9, ptr noundef null) #21
  br label %if.else

if.then:                                          ; preds = %fu540_macb_tx_round_rate.exit.thread14, %if.else91.i.if.then_crit_edge, %if.else.i.if.then_crit_edge
  %retval.0.i8 = phi i32 [ %retval.0.ph.i.ph, %fu540_macb_tx_round_rate.exit.thread14 ], [ 25000000, %if.else91.i.if.then_crit_edge ], [ 2500000, %if.else.i.if.then_crit_edge ]
  %0 = load ptr, ptr @mgmt, align 4
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %0, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !330
  tail call void @arm_heavy_mb() #21
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %2, i32 16777216) #21, !srcloc !296
  br label %if.end

if.else:                                          ; preds = %fu540_macb_tx_round_rate.exit, %if.else162.i.if.else_crit_edge
  %3 = load ptr, ptr @mgmt, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #21, !srcloc !330
  tail call void @arm_heavy_mb() #21
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %5, i32 0) #21, !srcloc !296
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %retval.0.i7 = phi i32 [ 125000000, %if.else ], [ %retval.0.i8, %if.then ]
  %6 = load ptr, ptr @mgmt, align 4
  %rate2 = getelementptr inbounds %struct.sifive_fu540_macb_mgmt, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %rate2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %retval.0.i7, ptr %rate2, align 4
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @devm_platform_ioremap_resource(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_suspend(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %wol = getelementptr i8, ptr %1, i32 19256
  %4 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %wol, align 8
  %and = and i32 %5, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.if.end93_crit_edge, label %do.body4

if.end.if.end93_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end93

do.body4:                                         ; preds = %if.end
  %lock = getelementptr i8, ptr %1, i32 18152
  %call6 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %macb_reg_writel = getelementptr i8, ptr %1, i32 2316
  %6 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %7(ptr noundef %add.ptr.i, i32 noundef 20, i32 noundef -1) #21
  %8 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %9(ptr noundef %add.ptr.i, i32 noundef 32, i32 noundef -1) #21
  %queues = getelementptr i8, ptr %1, i32 2344
  %num_queues = getelementptr i8, ptr %1, i32 2332
  %10 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp10249.not = icmp eq i32 %11, 0
  br i1 %cmp10249.not, label %do.body4.for.end_crit_edge, label %for.body.lr.ph

do.body4.for.end_crit_edge:                       ; preds = %do.body4
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.body4
  %caps = getelementptr i8, ptr %1, i32 18468
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %q.0252 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %queue.0250 = phi ptr [ %queues, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %12 = ptrtoint ptr %queue.0250 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %queue.0250, align 8
  %macb_reg_writel13 = getelementptr inbounds %struct.macb, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %macb_reg_writel13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %macb_reg_writel13, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %queue.0250, i32 0, i32 4
  %16 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %IDR, align 8
  tail call void %15(ptr noundef %13, i32 noundef %17, i32 noundef -1) #21
  %18 = ptrtoint ptr %queue.0250 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %queue.0250, align 8
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %macb_reg_readl, align 8
  %ISR = getelementptr inbounds %struct.macb_queue, ptr %queue.0250, i32 0, i32 2
  %22 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ISR, align 8
  %call17 = tail call i32 %21(ptr noundef %19, i32 noundef %23) #21
  %24 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %caps, align 4
  %and18 = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18)
  %tobool19.not = icmp eq i32 %and18, 0
  br i1 %tobool19.not, label %for.body.for.inc_crit_edge, label %if.then20

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.inc

if.then20:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  %26 = ptrtoint ptr %queue.0250 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %queue.0250, align 8
  %macb_reg_writel22 = getelementptr inbounds %struct.macb, ptr %27, i32 0, i32 3
  %28 = ptrtoint ptr %macb_reg_writel22 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %macb_reg_writel22, align 4
  %30 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %ISR, align 8
  tail call void %29(ptr noundef %27, i32 noundef %31, i32 noundef -1) #21
  br label %for.inc

for.inc:                                          ; preds = %if.then20, %for.body.for.inc_crit_edge
  %inc = add nuw i32 %q.0252, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.0250, i32 1
  %32 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %num_queues, align 4
  %cmp10 = icmp ult i32 %inc, %33
  br i1 %cmp10, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.body4.for.end_crit_edge
  %irq = getelementptr i8, ptr %1, i32 2348
  %34 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %irq, align 4
  tail call void @devm_free_irq(ptr noundef %dev, i32 noundef %35, ptr noundef %queues) #21
  %caps.i = getelementptr i8, ptr %1, i32 18468
  %36 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.i244 = icmp slt i32 %37, 0
  %38 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %irq, align 4
  br i1 %tobool.i244, label %if.then30, label %if.else

if.then30:                                        ; preds = %for.end
  %call.i = tail call i32 @devm_request_threaded_irq(ptr noundef %dev, i32 noundef %39, ptr noundef nonnull @gem_wol_interrupt, ptr noundef null, i32 noundef 128, ptr noundef %1, ptr noundef %queues) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool38.not = icmp eq i32 %call.i, 0
  br i1 %tobool38.not, label %if.end47, label %do.end42

do.end42:                                         ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #23
  %40 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %irq, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.32, i32 noundef %41, i32 noundef %call.i) #24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call6) #21
  br label %cleanup

if.end47:                                         ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #23
  %42 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %queues, align 8
  %macb_reg_writel51 = getelementptr inbounds %struct.macb, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %macb_reg_writel51 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %macb_reg_writel51, align 4
  %IER = getelementptr i8, ptr %1, i32 2356
  %46 = ptrtoint ptr %IER to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %IER, align 4
  tail call void %45(ptr noundef %43, i32 noundef %47, i32 noundef 268435456) #21
  br label %if.end87

if.else:                                          ; preds = %for.end
  %call.i245 = tail call i32 @devm_request_threaded_irq(ptr noundef %dev, i32 noundef %39, ptr noundef nonnull @macb_wol_interrupt, ptr noundef null, i32 noundef 128, ptr noundef %1, ptr noundef %queues) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i245)
  %tobool66.not = icmp eq i32 %call.i245, 0
  br i1 %tobool66.not, label %if.end75, label %do.end70

do.end70:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %48 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %irq, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.32, i32 noundef %49, i32 noundef %call.i245) #24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call6) #21
  br label %cleanup

if.end75:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #23
  %50 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %queues, align 8
  %macb_reg_writel79 = getelementptr inbounds %struct.macb, ptr %51, i32 0, i32 3
  %52 = ptrtoint ptr %macb_reg_writel79 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %macb_reg_writel79, align 4
  %IER85 = getelementptr i8, ptr %1, i32 2356
  %54 = ptrtoint ptr %IER85 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %IER85, align 4
  tail call void %53(ptr noundef %51, i32 noundef %55, i32 noundef 16384) #21
  br label %if.end87

if.end87:                                         ; preds = %if.end75, %if.end47
  %.sink = phi i32 [ 196, %if.end75 ], [ 184, %if.end47 ]
  %56 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %macb_reg_writel, align 4
  tail call void %57(ptr noundef %add.ptr.i, i32 noundef %.sink, i32 noundef 65536) #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call6) #21
  %58 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %irq, align 4
  %call.i246 = tail call i32 @irq_set_irq_wake(i32 noundef %59, i32 noundef 1) #21
  br label %if.end93

if.end93:                                         ; preds = %if.end87, %if.end.if.end93_crit_edge
  tail call void @netif_device_detach(ptr noundef %1) #21
  %num_queues97 = getelementptr i8, ptr %1, i32 2332
  %60 = ptrtoint ptr %num_queues97 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %num_queues97, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %cmp98253.not = icmp eq i32 %61, 0
  br i1 %cmp98253.not, label %if.end93.for.end104_crit_edge, label %for.body100.preheader

if.end93.for.end104_crit_edge:                    ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end104

for.body100.preheader:                            ; preds = %if.end93
  %queues94 = getelementptr i8, ptr %1, i32 2344
  br label %for.body100

for.body100:                                      ; preds = %for.body100.for.body100_crit_edge, %for.body100.preheader
  %q.1255 = phi i32 [ %inc102, %for.body100.for.body100_crit_edge ], [ 0, %for.body100.preheader ]
  %queue.1254 = phi ptr [ %incdec.ptr103, %for.body100.for.body100_crit_edge ], [ %queues94, %for.body100.preheader ]
  %napi = getelementptr inbounds %struct.macb_queue, ptr %queue.1254, i32 0, i32 24
  tail call void @napi_disable(ptr noundef %napi) #21
  %inc102 = add nuw i32 %q.1255, 1
  %incdec.ptr103 = getelementptr %struct.macb_queue, ptr %queue.1254, i32 1
  %62 = ptrtoint ptr %num_queues97 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %num_queues97, align 4
  %cmp98 = icmp ult i32 %inc102, %63
  br i1 %cmp98, label %for.body100.for.body100_crit_edge, label %for.body100.for.end104_crit_edge

for.body100.for.end104_crit_edge:                 ; preds = %for.body100
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end104

for.body100.for.body100_crit_edge:                ; preds = %for.body100
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body100

for.end104:                                       ; preds = %for.body100.for.end104_crit_edge, %if.end93.for.end104_crit_edge
  %64 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %wol, align 8
  %and106 = and i32 %65, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and106)
  %tobool107.not = icmp eq i32 %and106, 0
  br i1 %tobool107.not, label %if.then108, label %for.end104.if.end124_crit_edge

for.end104.if.end124_crit_edge:                   ; preds = %for.end104
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end124

if.then108:                                       ; preds = %for.end104
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @rtnl_lock() #21
  %phylink = getelementptr i8, ptr %1, i32 18424
  %66 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %phylink, align 8
  tail call void @phylink_stop(ptr noundef %67) #21
  tail call void @rtnl_unlock() #21
  %lock116 = getelementptr i8, ptr %1, i32 18152
  %call118 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock116) #21
  tail call fastcc void @macb_reset_hw(ptr noundef %add.ptr.i)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock116, i32 noundef %call118) #21
  br label %if.end124

if.end124:                                        ; preds = %if.then108, %for.end104.if.end124_crit_edge
  %caps125 = getelementptr i8, ptr %1, i32 18468
  %68 = ptrtoint ptr %caps125 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %caps125, align 4
  %and126 = and i32 %69, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and126)
  %tobool127.not = icmp eq i32 %and126, 0
  br i1 %tobool127.not, label %if.then128, label %if.end124.if.end138_crit_edge

if.end124.if.end138_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end138

if.then128:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.i248 = icmp slt i32 %69, 0
  %macb_reg_readl131 = getelementptr i8, ptr %1, i32 2312
  %70 = ptrtoint ptr %macb_reg_readl131 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %macb_reg_readl131, align 8
  %. = select i1 %tobool.i248, i32 12, i32 192
  %call135 = tail call i32 %71(ptr noundef %add.ptr.i, i32 noundef %.) #21
  %usrio = getelementptr i8, ptr %1, i32 19548
  %72 = ptrtoint ptr %usrio to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %call135, ptr %usrio, align 4
  br label %if.end138

if.end138:                                        ; preds = %if.then128, %if.end124.if.end138_crit_edge
  %hw_features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 24
  %73 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %hw_features, align 8
  %and139 = and i64 %74, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and139)
  %tobool140.not = icmp eq i64 %and139, 0
  br i1 %tobool140.not, label %if.end138.if.end145_crit_edge, label %if.then141

if.end138.if.end145_crit_edge:                    ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end145

if.then141:                                       ; preds = %if.end138
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_readl142 = getelementptr i8, ptr %1, i32 2312
  %75 = ptrtoint ptr %macb_reg_readl142 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %macb_reg_readl142, align 8
  %call143 = tail call i32 %76(ptr noundef %add.ptr.i, i32 noundef 1760) #21
  %pm_data144 = getelementptr i8, ptr %1, i32 19544
  %77 = ptrtoint ptr %pm_data144 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %call143, ptr %pm_data144, align 8
  br label %if.end145

if.end145:                                        ; preds = %if.then141, %if.end138.if.end145_crit_edge
  %ptp_info = getelementptr i8, ptr %1, i32 19260
  %78 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %ptp_info, align 4
  %tobool146.not = icmp eq ptr %79, null
  br i1 %tobool146.not, label %if.end145.if.end149_crit_edge, label %if.then147

if.end145.if.end149_crit_edge:                    ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end149

if.then147:                                       ; preds = %if.end145
  call void @__sanitizer_cov_trace_pc() #23
  %ptp_remove = getelementptr inbounds %struct.macb_ptp_info, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %ptp_remove to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ptp_remove, align 4
  tail call void %81(ptr noundef %1) #21
  br label %if.end149

if.end149:                                        ; preds = %if.then147, %if.end145.if.end149_crit_edge
  %can_wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %82 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end149.if.then151_crit_edge, label %device_may_wakeup.exit

if.end149.if.then151_crit_edge:                   ; preds = %if.end149
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then151

device_may_wakeup.exit:                           ; preds = %if.end149
  %wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 6
  %83 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %84, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.if.then151_crit_edge, label %device_may_wakeup.exit.cleanup_crit_edge

device_may_wakeup.exit.cleanup_crit_edge:         ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

device_may_wakeup.exit.if.then151_crit_edge:      ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then151

if.then151:                                       ; preds = %device_may_wakeup.exit.if.then151_crit_edge, %if.end149.if.then151_crit_edge
  %call152 = tail call i32 @pm_runtime_force_suspend(ptr noundef %dev) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then151, %device_may_wakeup.exit.cleanup_crit_edge, %do.end70, %do.end42, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %do.end42 ], [ %call.i245, %do.end70 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then151 ], [ 0, %device_may_wakeup.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_resume(ptr noundef %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %add.ptr.i = getelementptr i8, ptr %1, i32 2304
  %state.i = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %state.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %can_wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %4 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %if.end.if.then4_crit_edge, label %device_may_wakeup.exit

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then4

device_may_wakeup.exit:                           ; preds = %if.end
  %wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 6
  %5 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %6, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.if.then4_crit_edge, label %device_may_wakeup.exit.if.end6_crit_edge

device_may_wakeup.exit.if.end6_crit_edge:         ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end6

device_may_wakeup.exit.if.then4_crit_edge:        ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then4

if.then4:                                         ; preds = %device_may_wakeup.exit.if.then4_crit_edge, %if.end.if.then4_crit_edge
  %call5 = tail call i32 @pm_runtime_force_resume(ptr noundef %dev) #21
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %device_may_wakeup.exit.if.end6_crit_edge
  %wol = getelementptr i8, ptr %1, i32 19256
  %7 = ptrtoint ptr %wol to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %wol, align 8
  %and = and i32 %8, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end6.if.end82_crit_edge, label %do.body8

if.end6.if.end82_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end82

do.body8:                                         ; preds = %if.end6
  %lock = getelementptr i8, ptr %1, i32 18152
  %call10 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef %lock) #21
  %caps.i = getelementptr i8, ptr %1, i32 18468
  %9 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %caps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.i181 = icmp slt i32 %10, 0
  %queues = getelementptr i8, ptr %1, i32 2344
  %11 = ptrtoint ptr %queues to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %queues, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %macb_reg_writel, align 4
  %IDR = getelementptr i8, ptr %1, i32 2360
  %15 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %IDR, align 8
  %. = select i1 %tobool.i181, i32 268435456, i32 16384
  %.191 = select i1 %tobool.i181, i32 184, i32 196
  tail call void %14(ptr noundef %12, i32 noundef %16, i32 noundef %.) #21
  %macb_reg_writel32 = getelementptr i8, ptr %1, i32 2316
  %17 = ptrtoint ptr %macb_reg_writel32 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %macb_reg_writel32, align 4
  tail call void %18(ptr noundef %add.ptr.i, i32 noundef %.191, i32 noundef 0) #21
  %queues34 = getelementptr i8, ptr %1, i32 2344
  %19 = ptrtoint ptr %queues34 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %queues34, align 8
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %20, i32 0, i32 2
  %21 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %macb_reg_readl, align 8
  %ISR = getelementptr i8, ptr %1, i32 2352
  %23 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ISR, align 8
  %call42 = tail call i32 %22(ptr noundef %20, i32 noundef %24) #21
  %25 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %caps.i, align 4
  %and43 = and i32 %26, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool44.not = icmp eq i32 %and43, 0
  br i1 %tobool44.not, label %do.body8.if.end56_crit_edge, label %if.then45

do.body8.if.end56_crit_edge:                      ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end56

if.then45:                                        ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #23
  %27 = ptrtoint ptr %queues34 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %queues34, align 8
  %macb_reg_writel49 = getelementptr inbounds %struct.macb, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %macb_reg_writel49 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %macb_reg_writel49, align 4
  %31 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %ISR, align 8
  tail call void %30(ptr noundef %28, i32 noundef %32, i32 noundef -1) #21
  br label %if.end56

if.end56:                                         ; preds = %if.then45, %do.body8.if.end56_crit_edge
  %irq = getelementptr i8, ptr %1, i32 2348
  %33 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %irq, align 4
  tail call void @devm_free_irq(ptr noundef %dev, i32 noundef %34, ptr noundef %queues34) #21
  %35 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %irq, align 4
  %call.i = tail call i32 @devm_request_threaded_irq(ptr noundef %dev, i32 noundef %36, ptr noundef nonnull @macb_interrupt, ptr noundef null, i32 noundef 128, ptr noundef %1, ptr noundef %queues34) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool67.not = icmp eq i32 %call.i, 0
  br i1 %tobool67.not, label %if.end76, label %do.end71

do.end71:                                         ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  %37 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %irq, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %dev, ptr noundef nonnull @.str.32, i32 noundef %38, i32 noundef %call.i) #24
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call10) #21
  br label %cleanup

if.end76:                                         ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef %lock, i32 noundef %call10) #21
  %39 = ptrtoint ptr %irq to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %irq, align 4
  %call.i182 = tail call i32 @irq_set_irq_wake(i32 noundef %40, i32 noundef 0) #21
  tail call void @rtnl_lock() #21
  %phylink = getelementptr i8, ptr %1, i32 18424
  %41 = ptrtoint ptr %phylink to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %phylink, align 8
  tail call void @phylink_stop(ptr noundef %42) #21
  tail call void @rtnl_unlock() #21
  br label %if.end82

if.end82:                                         ; preds = %if.end76, %if.end6.if.end82_crit_edge
  %num_queues = getelementptr i8, ptr %1, i32 2332
  %43 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %num_queues, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp85185.not = icmp eq i32 %44, 0
  br i1 %cmp85185.not, label %if.end82.for.end_crit_edge, label %for.body.preheader

if.end82.for.end_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.preheader:                               ; preds = %if.end82
  %queues83 = getelementptr i8, ptr %1, i32 2344
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %q.0187 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %queue.0186 = phi ptr [ %incdec.ptr, %for.body.for.body_crit_edge ], [ %queues83, %for.body.preheader ]
  %napi = getelementptr inbounds %struct.macb_queue, ptr %queue.0186, i32 0, i32 24
  tail call void @napi_enable(ptr noundef %napi) #21
  %inc = add nuw i32 %q.0187, 1
  %incdec.ptr = getelementptr %struct.macb_queue, ptr %queue.0186, i32 1
  %45 = ptrtoint ptr %num_queues to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %num_queues, align 4
  %cmp85 = icmp ult i32 %inc, %46
  br i1 %cmp85, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end82.for.end_crit_edge
  %hw_features = getelementptr inbounds %struct.net_device, ptr %1, i32 0, i32 24
  %47 = ptrtoint ptr %hw_features to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %hw_features, align 8
  %and87 = and i64 %48, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and87)
  %tobool88.not = icmp eq i64 %and87, 0
  br i1 %tobool88.not, label %for.end.if.end91_crit_edge, label %if.then89

for.end.if.end91_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end91

if.then89:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #23
  %macb_reg_writel90 = getelementptr i8, ptr %1, i32 2316
  %49 = ptrtoint ptr %macb_reg_writel90 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %macb_reg_writel90, align 4
  %pm_data = getelementptr i8, ptr %1, i32 19544
  %51 = ptrtoint ptr %pm_data to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %pm_data, align 8
  tail call void %50(ptr noundef %add.ptr.i, i32 noundef 1760, i32 noundef %52) #21
  br label %if.end91

if.end91:                                         ; preds = %if.then89, %for.end.if.end91_crit_edge
  %caps92 = getelementptr i8, ptr %1, i32 18468
  %53 = ptrtoint ptr %caps92 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %caps92, align 4
  %and93 = and i32 %54, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.then95, label %if.end91.if.end105_crit_edge

if.end91.if.end105_crit_edge:                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end105

if.then95:                                        ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.i184 = icmp slt i32 %54, 0
  %macb_reg_writel98 = getelementptr i8, ptr %1, i32 2316
  %55 = ptrtoint ptr %macb_reg_writel98 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %macb_reg_writel98, align 4
  %usrio = getelementptr i8, ptr %1, i32 19548
  %57 = ptrtoint ptr %usrio to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %usrio, align 4
  %.192 = select i1 %tobool.i184, i32 12, i32 192
  tail call void %56(ptr noundef %add.ptr.i, i32 noundef %.192, i32 noundef %58) #21
  br label %if.end105

if.end105:                                        ; preds = %if.then95, %if.end91.if.end105_crit_edge
  %macb_reg_writel106 = getelementptr i8, ptr %1, i32 2316
  %59 = ptrtoint ptr %macb_reg_writel106 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %macb_reg_writel106, align 4
  tail call void %60(ptr noundef %add.ptr.i, i32 noundef 0, i32 noundef 16) #21
  tail call fastcc void @macb_init_hw(ptr noundef %add.ptr.i)
  tail call void @macb_set_rx_mode(ptr noundef %1)
  %dev.i = getelementptr i8, ptr %1, i32 18220
  %61 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %dev.i, align 4
  %features1.i = getelementptr inbounds %struct.net_device, ptr %62, i32 0, i32 23
  %63 = ptrtoint ptr %features1.i to i32
  call void @__asan_load8_noabort(i32 %63)
  %64 = load i64, ptr %features1.i, align 16
  %65 = ptrtoint ptr %caps92 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %caps92, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.i.i.i = icmp slt i32 %66, 0
  br i1 %tobool.i.i.i, label %macb_set_txcsum_feature.exit.i, label %if.end105.macb_set_rxcsum_feature.exit.i_crit_edge

if.end105.macb_set_rxcsum_feature.exit.i_crit_edge: ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_rxcsum_feature.exit.i

macb_set_txcsum_feature.exit.i:                   ; preds = %if.end105
  %macb_reg_readl.i.i = getelementptr i8, ptr %1, i32 2312
  %67 = ptrtoint ptr %macb_reg_readl.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %macb_reg_readl.i.i, align 8
  %call1.i.i = tail call i32 %68(ptr noundef %add.ptr.i, i32 noundef 16) #21
  %and3.i.i = and i32 %call1.i.i, -2049
  %69 = trunc i64 %64 to i32
  %70 = shl i32 %69, 8
  %71 = and i32 %70, 2048
  %val.0.i.i = or i32 %and3.i.i, %71
  %72 = ptrtoint ptr %macb_reg_writel106 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %macb_reg_writel106, align 4
  tail call void %73(ptr noundef %add.ptr.i, i32 noundef 16, i32 noundef %val.0.i.i) #21
  %74 = ptrtoint ptr %caps92 to i32
  call void @__asan_load4_noabort(i32 %74)
  %.pr.i = load i32, ptr %caps92, align 4
  %75 = ptrtoint ptr %dev.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %dev.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr.i)
  %tobool.i.i21.i = icmp slt i32 %.pr.i, 0
  br i1 %tobool.i.i21.i, label %if.end.i24.i, label %macb_set_txcsum_feature.exit.i.macb_set_rxcsum_feature.exit.i_crit_edge

macb_set_txcsum_feature.exit.i.macb_set_rxcsum_feature.exit.i_crit_edge: ; preds = %macb_set_txcsum_feature.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_set_rxcsum_feature.exit.i

if.end.i24.i:                                     ; preds = %macb_set_txcsum_feature.exit.i
  %77 = ptrtoint ptr %macb_reg_readl.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %macb_reg_readl.i.i, align 8
  %call1.i23.i = tail call i32 %78(ptr noundef %add.ptr.i, i32 noundef 4) #21
  %and.i.i = and i64 %64, 1099511627776
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i24.i.if.else.i.i_crit_edge, label %land.lhs.true.i.i

if.end.i24.i.if.else.i.i_crit_edge:               ; preds = %if.end.i24.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %if.end.i24.i
  %flags.i.i = getelementptr inbounds %struct.net_device, ptr %76, i32 0, i32 14
  %79 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %flags.i.i, align 8
  %and2.i.i = and i32 %80, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool3.not.i.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool3.not.i.i, label %if.then4.i.i, label %land.lhs.true.i.i.if.else.i.i_crit_edge

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.else.i.i

if.then4.i.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #23
  %or.i.i = or i32 %call1.i23.i, 16777216
  br label %if.end6.i.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %if.end.i24.i.if.else.i.i_crit_edge
  %and5.i.i = and i32 %call1.i23.i, -16777217
  br label %if.end6.i.i

if.end6.i.i:                                      ; preds = %if.else.i.i, %if.then4.i.i
  %val.0.i25.i = phi i32 [ %and5.i.i, %if.else.i.i ], [ %or.i.i, %if.then4.i.i ]
  %81 = ptrtoint ptr %macb_reg_writel106 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %macb_reg_writel106, align 4
  tail call void %82(ptr noundef %add.ptr.i, i32 noundef 4, i32 noundef %val.0.i25.i) #21
  br label %macb_set_rxcsum_feature.exit.i

macb_set_rxcsum_feature.exit.i:                   ; preds = %if.end6.i.i, %macb_set_txcsum_feature.exit.i.macb_set_rxcsum_feature.exit.i_crit_edge, %if.end105.macb_set_rxcsum_feature.exit.i_crit_edge
  %rx_fs_list.i = getelementptr i8, ptr %1, i32 19448
  %83 = ptrtoint ptr %rx_fs_list.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %.pn32.i = load ptr, ptr %rx_fs_list.i, align 8
  %cmp.not33.i = icmp eq ptr %.pn32.i, %rx_fs_list.i
  br i1 %cmp.not33.i, label %macb_set_rxcsum_feature.exit.i.for.end.i_crit_edge, label %macb_set_rxcsum_feature.exit.i.for.body.i_crit_edge

macb_set_rxcsum_feature.exit.i.for.body.i_crit_edge: ; preds = %macb_set_rxcsum_feature.exit.i
  br label %for.body.i

macb_set_rxcsum_feature.exit.i.for.end.i_crit_edge: ; preds = %macb_set_rxcsum_feature.exit.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %macb_set_rxcsum_feature.exit.i.for.body.i_crit_edge
  %.pn34.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn32.i, %macb_set_rxcsum_feature.exit.i.for.body.i_crit_edge ]
  %item.0.i = getelementptr i8, ptr %.pn34.i, i32 -168
  tail call fastcc void @gem_prog_cmp_regs(ptr noundef %add.ptr.i, ptr noundef %item.0.i) #21
  %84 = ptrtoint ptr %.pn34.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %.pn.i = load ptr, ptr %.pn34.i, align 8
  %cmp.not.i = icmp eq ptr %.pn.i, %rx_fs_list.i
  br i1 %cmp.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %macb_set_rxcsum_feature.exit.i.for.end.i_crit_edge
  %85 = ptrtoint ptr %caps92 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %caps92, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool.i.i28.i = icmp slt i32 %86, 0
  br i1 %tobool.i.i28.i, label %if.end.i30.i, label %for.end.i.macb_restore_features.exit_crit_edge

for.end.i.macb_restore_features.exit_crit_edge:   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %macb_restore_features.exit

if.end.i30.i:                                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #23
  %and.i29.i = and i64 %64, 274877906944
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i29.i)
  %tobool.i.i = icmp ne i64 %and.i29.i, 0
  tail call fastcc void @gem_enable_flow_filters(ptr noundef %add.ptr.i, i1 noundef zeroext %tobool.i.i) #21
  br label %macb_restore_features.exit

macb_restore_features.exit:                       ; preds = %if.end.i30.i, %for.end.i.macb_restore_features.exit_crit_edge
  tail call void @rtnl_lock() #21
  %phylink107 = getelementptr i8, ptr %1, i32 18424
  %87 = ptrtoint ptr %phylink107 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %phylink107, align 8
  tail call void @phylink_start(ptr noundef %88) #21
  tail call void @rtnl_unlock() #21
  tail call void @netif_device_attach(ptr noundef %1) #21
  %ptp_info = getelementptr i8, ptr %1, i32 19260
  %89 = ptrtoint ptr %ptp_info to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %ptp_info, align 4
  %tobool108.not = icmp eq ptr %90, null
  br i1 %tobool108.not, label %macb_restore_features.exit.cleanup_crit_edge, label %if.then109

macb_restore_features.exit.cleanup_crit_edge:     ; preds = %macb_restore_features.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.then109:                                       ; preds = %macb_restore_features.exit
  call void @__sanitizer_cov_trace_pc() #23
  %91 = ptrtoint ptr %90 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %90, align 4
  tail call void %92(ptr noundef %1) #21
  br label %cleanup

cleanup:                                          ; preds = %if.then109, %macb_restore_features.exit.cleanup_crit_edge, %do.end71, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %do.end71 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then109 ], [ 0, %macb_restore_features.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_runtime_suspend(ptr nocapture noundef readonly %dev) #2 align 64 {
entry:
  %clks.i10 = alloca [5 x %struct.clk_bulk_data], align 4
  %clks.i = alloca [5 x %struct.clk_bulk_data], align 4
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %can_wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %2 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.if.then_crit_edge, label %device_may_wakeup.exit

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

device_may_wakeup.exit:                           ; preds = %entry
  %wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 6
  %3 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %4, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.if.then_crit_edge, label %if.else

device_may_wakeup.exit.if.then_crit_edge:         ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then:                                          ; preds = %device_may_wakeup.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %pclk = getelementptr i8, ptr %1, i32 18200
  %5 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pclk, align 8
  %hclk = getelementptr i8, ptr %1, i32 18204
  %7 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hclk, align 4
  %tx_clk = getelementptr i8, ptr %1, i32 18208
  %9 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tx_clk, align 8
  %rx_clk = getelementptr i8, ptr %1, i32 18212
  %11 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rx_clk, align 4
  %tsu_clk = getelementptr i8, ptr %1, i32 18216
  %13 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tsu_clk, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %clks.i) #21
  %15 = ptrtoint ptr %clks.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %clks.i, align 4
  %clk.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 0, i32 1
  %16 = ptrtoint ptr %clk.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %14, ptr %clk.i, align 4
  %arrayinit.element.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1
  %17 = ptrtoint ptr %arrayinit.element.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %arrayinit.element.i, align 4
  %clk2.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 1, i32 1
  %18 = ptrtoint ptr %clk2.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %12, ptr %clk2.i, align 4
  %arrayinit.element3.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2
  %19 = ptrtoint ptr %arrayinit.element3.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %arrayinit.element3.i, align 4
  %clk5.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 2, i32 1
  %20 = ptrtoint ptr %clk5.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %6, ptr %clk5.i, align 4
  %arrayinit.element6.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3
  %21 = ptrtoint ptr %arrayinit.element6.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr null, ptr %arrayinit.element6.i, align 4
  %clk8.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 3, i32 1
  %22 = ptrtoint ptr %clk8.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %8, ptr %clk8.i, align 4
  %arrayinit.element9.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4
  %23 = ptrtoint ptr %arrayinit.element9.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %arrayinit.element9.i, align 4
  %clk11.i = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i, i32 4, i32 1
  %24 = ptrtoint ptr %clk11.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %10, ptr %clk11.i, align 4
  call void @clk_bulk_disable(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @clk_bulk_unprepare(i32 noundef 5, ptr noundef nonnull %clks.i) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %clks.i) #21
  br label %if.end

if.else:                                          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  %tsu_clk3 = getelementptr i8, ptr %1, i32 18216
  %25 = ptrtoint ptr %tsu_clk3 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %tsu_clk3, align 8
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %clks.i10) #21
  %27 = ptrtoint ptr %clks.i10 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %clks.i10, align 4
  %clk.i11 = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i10, i32 0, i32 1
  %28 = ptrtoint ptr %clk.i11 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %26, ptr %clk.i11, align 4
  %arrayinit.element.i12 = getelementptr inbounds %struct.clk_bulk_data, ptr %clks.i10, i32 1
  %29 = call ptr @memset(ptr %arrayinit.element.i12, i32 0, i32 32)
  call void @clk_bulk_disable(i32 noundef 5, ptr noundef nonnull %clks.i10) #21
  call void @clk_bulk_unprepare(i32 noundef 5, ptr noundef nonnull %clks.i10) #21
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %clks.i10) #21
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_runtime_resume(ptr nocapture noundef readonly %dev) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %driver_data.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 8
  %0 = ptrtoint ptr %driver_data.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %driver_data.i, align 4
  %can_wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 1
  %2 = ptrtoint ptr %can_wakeup.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %bf.load.i = load i16, ptr %can_wakeup.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 -1, i16 %bf.load.i)
  %tobool.not.i = icmp sgt i16 %bf.load.i, -1
  br i1 %tobool.not.i, label %entry.if.then_crit_edge, label %device_may_wakeup.exit

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

device_may_wakeup.exit:                           ; preds = %entry
  %wakeup.i = getelementptr inbounds %struct.device, ptr %dev, i32 0, i32 12, i32 6
  %3 = ptrtoint ptr %wakeup.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %wakeup.i, align 8
  %tobool2.i.not = icmp eq ptr %4, null
  br i1 %tobool2.i.not, label %device_may_wakeup.exit.if.then_crit_edge, label %device_may_wakeup.exit.if.end_crit_edge

device_may_wakeup.exit.if.end_crit_edge:          ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

device_may_wakeup.exit.if.then_crit_edge:         ; preds = %device_may_wakeup.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.then

if.then:                                          ; preds = %device_may_wakeup.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %pclk = getelementptr i8, ptr %1, i32 18200
  %5 = ptrtoint ptr %pclk to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pclk, align 8
  %call.i = tail call i32 @clk_prepare(ptr noundef %6) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i13 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i13, label %if.end.i, label %if.then.clk_prepare_enable.exit_crit_edge

if.then.clk_prepare_enable.exit_crit_edge:        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit

if.end.i:                                         ; preds = %if.then
  %call1.i = tail call i32 @clk_enable(ptr noundef %6) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool2.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool2.not.i, label %if.end.i.clk_prepare_enable.exit_crit_edge, label %if.then3.i

if.end.i.clk_prepare_enable.exit_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %6) #21
  br label %clk_prepare_enable.exit

clk_prepare_enable.exit:                          ; preds = %if.then3.i, %if.end.i.clk_prepare_enable.exit_crit_edge, %if.then.clk_prepare_enable.exit_crit_edge
  %hclk = getelementptr i8, ptr %1, i32 18204
  %7 = ptrtoint ptr %hclk to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %hclk, align 4
  %call.i14 = tail call i32 @clk_prepare(ptr noundef %8) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i14)
  %tobool.not.i15 = icmp eq i32 %call.i14, 0
  br i1 %tobool.not.i15, label %if.end.i18, label %clk_prepare_enable.exit.clk_prepare_enable.exit21_crit_edge

clk_prepare_enable.exit.clk_prepare_enable.exit21_crit_edge: ; preds = %clk_prepare_enable.exit
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit21

if.end.i18:                                       ; preds = %clk_prepare_enable.exit
  %call1.i16 = tail call i32 @clk_enable(ptr noundef %8) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool2.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool2.not.i17, label %if.end.i18.clk_prepare_enable.exit21_crit_edge, label %if.then3.i19

if.end.i18.clk_prepare_enable.exit21_crit_edge:   ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit21

if.then3.i19:                                     ; preds = %if.end.i18
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %8) #21
  br label %clk_prepare_enable.exit21

clk_prepare_enable.exit21:                        ; preds = %if.then3.i19, %if.end.i18.clk_prepare_enable.exit21_crit_edge, %clk_prepare_enable.exit.clk_prepare_enable.exit21_crit_edge
  %tx_clk = getelementptr i8, ptr %1, i32 18208
  %9 = ptrtoint ptr %tx_clk to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %tx_clk, align 8
  %call.i22 = tail call i32 @clk_prepare(ptr noundef %10) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i22)
  %tobool.not.i23 = icmp eq i32 %call.i22, 0
  br i1 %tobool.not.i23, label %if.end.i26, label %clk_prepare_enable.exit21.clk_prepare_enable.exit29_crit_edge

clk_prepare_enable.exit21.clk_prepare_enable.exit29_crit_edge: ; preds = %clk_prepare_enable.exit21
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit29

if.end.i26:                                       ; preds = %clk_prepare_enable.exit21
  %call1.i24 = tail call i32 @clk_enable(ptr noundef %10) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i24)
  %tobool2.not.i25 = icmp eq i32 %call1.i24, 0
  br i1 %tobool2.not.i25, label %if.end.i26.clk_prepare_enable.exit29_crit_edge, label %if.then3.i27

if.end.i26.clk_prepare_enable.exit29_crit_edge:   ; preds = %if.end.i26
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit29

if.then3.i27:                                     ; preds = %if.end.i26
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %10) #21
  br label %clk_prepare_enable.exit29

clk_prepare_enable.exit29:                        ; preds = %if.then3.i27, %if.end.i26.clk_prepare_enable.exit29_crit_edge, %clk_prepare_enable.exit21.clk_prepare_enable.exit29_crit_edge
  %rx_clk = getelementptr i8, ptr %1, i32 18212
  %11 = ptrtoint ptr %rx_clk to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %rx_clk, align 4
  %call.i30 = tail call i32 @clk_prepare(ptr noundef %12) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30)
  %tobool.not.i31 = icmp eq i32 %call.i30, 0
  br i1 %tobool.not.i31, label %if.end.i34, label %clk_prepare_enable.exit29.if.end_crit_edge

clk_prepare_enable.exit29.if.end_crit_edge:       ; preds = %clk_prepare_enable.exit29
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.end.i34:                                       ; preds = %clk_prepare_enable.exit29
  %call1.i32 = tail call i32 @clk_enable(ptr noundef %12) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i32)
  %tobool2.not.i33 = icmp eq i32 %call1.i32, 0
  br i1 %tobool2.not.i33, label %if.end.i34.if.end_crit_edge, label %if.then3.i35

if.end.i34.if.end_crit_edge:                      ; preds = %if.end.i34
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end

if.then3.i35:                                     ; preds = %if.end.i34
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %12) #21
  br label %if.end

if.end:                                           ; preds = %if.then3.i35, %if.end.i34.if.end_crit_edge, %clk_prepare_enable.exit29.if.end_crit_edge, %device_may_wakeup.exit.if.end_crit_edge
  %tsu_clk = getelementptr i8, ptr %1, i32 18216
  %13 = ptrtoint ptr %tsu_clk to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %tsu_clk, align 8
  %call.i38 = tail call i32 @clk_prepare(ptr noundef %14) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i38)
  %tobool.not.i39 = icmp eq i32 %call.i38, 0
  br i1 %tobool.not.i39, label %if.end.i42, label %if.end.clk_prepare_enable.exit45_crit_edge

if.end.clk_prepare_enable.exit45_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit45

if.end.i42:                                       ; preds = %if.end
  %call1.i40 = tail call i32 @clk_enable(ptr noundef %14) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40)
  %tobool2.not.i41 = icmp eq i32 %call1.i40, 0
  br i1 %tobool2.not.i41, label %if.end.i42.clk_prepare_enable.exit45_crit_edge, label %if.then3.i43

if.end.i42.clk_prepare_enable.exit45_crit_edge:   ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #23
  br label %clk_prepare_enable.exit45

if.then3.i43:                                     ; preds = %if.end.i42
  call void @__sanitizer_cov_trace_pc() #23
  tail call void @clk_unprepare(ptr noundef %14) #21
  br label %clk_prepare_enable.exit45

clk_prepare_enable.exit45:                        ; preds = %if.then3.i43, %if.end.i42.clk_prepare_enable.exit45_crit_edge, %if.end.clk_prepare_enable.exit45_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @devm_free_irq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @gem_wol_interrupt(i32 noundef %irq, ptr nocapture noundef readonly %dev_id) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_id, align 8
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %ISR = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 2
  %4 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ISR, align 8
  %call = tail call i32 %3(ptr noundef %1, i32 noundef %5) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !301

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 10
  tail call void @_raw_spin_lock(ptr noundef %lock) #21
  %and = and i32 %call, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end.if.end20_crit_edge, label %if.then8

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then8:                                         ; preds = %if.end
  %6 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_writel, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 4
  %10 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %IDR, align 8
  tail call void %9(ptr noundef %7, i32 noundef %11, i32 noundef 268435456) #21
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %macb_reg_writel11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_writel11, align 4
  tail call void %13(ptr noundef %1, i32 noundef 184, i32 noundef 0) #21
  %caps = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 25
  %14 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %caps, align 4
  %and12 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.then8.if.end19_crit_edge, label %if.then14

if.then8.if.end19_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.then14:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel16 = getelementptr inbounds %struct.macb, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %macb_reg_writel16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_writel16, align 4
  %20 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ISR, align 8
  tail call void %19(ptr noundef %17, i32 noundef %21, i32 noundef 268435456) #21
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %if.then8.if.end19_crit_edge
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %23, i32 0, i32 3
  tail call void @pm_wakeup_dev_event(ptr noundef %dev, i32 noundef 0, i1 noundef zeroext false) #21
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end.if.end20_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end20 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @macb_wol_interrupt(i32 noundef %irq, ptr nocapture noundef readonly %dev_id) #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #23
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dev_id, align 8
  %macb_reg_readl = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %macb_reg_readl to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %macb_reg_readl, align 8
  %ISR = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 2
  %4 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ISR, align 8
  %call = tail call i32 %3(ptr noundef %1, i32 noundef %5) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end, !prof !301

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #23
  br label %cleanup

if.end:                                           ; preds = %entry
  %lock = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 10
  tail call void @_raw_spin_lock(ptr noundef %lock) #21
  %and = and i32 %call, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %if.end.if.end20_crit_edge, label %if.then8

if.end.if.end20_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end20

if.then8:                                         ; preds = %if.end
  %6 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel = getelementptr inbounds %struct.macb, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %macb_reg_writel to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %macb_reg_writel, align 4
  %IDR = getelementptr inbounds %struct.macb_queue, ptr %dev_id, i32 0, i32 4
  %10 = ptrtoint ptr %IDR to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %IDR, align 8
  tail call void %9(ptr noundef %7, i32 noundef %11, i32 noundef 16384) #21
  %macb_reg_writel11 = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 3
  %12 = ptrtoint ptr %macb_reg_writel11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %macb_reg_writel11, align 4
  tail call void %13(ptr noundef %1, i32 noundef 196, i32 noundef 0) #21
  %caps = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 25
  %14 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %caps, align 4
  %and12 = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12)
  %tobool13.not = icmp eq i32 %and12, 0
  br i1 %tobool13.not, label %if.then8.if.end19_crit_edge, label %if.then14

if.then8.if.end19_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  br label %if.end19

if.then14:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #23
  %16 = ptrtoint ptr %dev_id to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dev_id, align 8
  %macb_reg_writel16 = getelementptr inbounds %struct.macb, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %macb_reg_writel16 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %macb_reg_writel16, align 4
  %20 = ptrtoint ptr %ISR to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ISR, align 8
  tail call void %19(ptr noundef %17, i32 noundef %21, i32 noundef 16384) #21
  br label %if.end19

if.end19:                                         ; preds = %if.then14, %if.then8.if.end19_crit_edge
  %pdev = getelementptr inbounds %struct.macb, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev, align 4
  %dev = getelementptr inbounds %struct.platform_device, ptr %23, i32 0, i32 3
  tail call void @pm_wakeup_dev_event(ptr noundef %dev, i32 noundef 0, i1 noundef zeroext false) #21
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end.if.end20_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %lock) #21
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end20 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_detach(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_lock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rtnl_unlock() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_force_suspend(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @pm_wakeup_dev_event(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @irq_set_irq_wake(i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pm_runtime_force_resume(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @netif_device_attach(ptr noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #11

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #11

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #21

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memmove(ptr, ptr, i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #22 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 151)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #22 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 151)
  ret void
}

attributes #0 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { argmemonly mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #12 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nofree nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #18 = { inlinehint nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #19 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #20 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #21 = { nounwind }
attributes #22 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #23 = { nomerge }
attributes #24 = { cold nounwind }
attributes #25 = { nounwind allocsize(0) }
attributes #26 = { nounwind readonly willreturn }
attributes #27 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !3, !5, !6, !8, !10, !12, !14, !16, !18, !20, !21, !23, !24, !25, !26, !27, !28, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !77, !79, !80, !82, !83, !85, !87, !89, !91, !93, !94, !95, !97, !99, !100, !101, !103, !104, !106, !107, !108, !110, !111, !113, !114, !115, !117, !119, !121, !123, !125, !126, !127, !129, !131, !133, !134, !135, !137, !139, !140, !141, !143, !145, !147, !149, !151, !153, !155, !157, !158, !159, !161, !163, !164, !165, !167, !168, !169, !171, !173, !175, !177, !178, !179, !180, !182, !183, !185, !187, !188, !189, !190, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !234, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !256, !257, !258, !260, !261, !262, !264, !266, !268, !270, !272, !274, !276, !277, !278, !280, !281, !283, !284}
!llvm.module.flags = !{!285, !286, !287, !288, !289, !290, !291, !292}
!llvm.ident = !{!293}

!0 = !{ptr @__initcall__kmod_macb__513_5066_macb_driver_init6, !1, !"__initcall__kmod_macb__513_5066_macb_driver_init6", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5066, i32 1}
!2 = !{ptr @__exitcall_macb_driver_exit, !1, !"__exitcall_macb_driver_exit", i1 false, i1 false}
!3 = !{ptr @__UNIQUE_ID_file514, !4, !"__UNIQUE_ID_file514", i1 false, i1 false}
!4 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5068, i32 1}
!5 = !{ptr @__UNIQUE_ID_license515, !4, !"__UNIQUE_ID_license515", i1 false, i1 false}
!6 = !{ptr @__UNIQUE_ID_description516, !7, !"__UNIQUE_ID_description516", i1 false, i1 false}
!7 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5069, i32 1}
!8 = !{ptr @__UNIQUE_ID_author517, !9, !"__UNIQUE_ID_author517", i1 false, i1 false}
!9 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5070, i32 1}
!10 = !{ptr @__UNIQUE_ID_alias518, !11, !"__UNIQUE_ID_alias518", i1 false, i1 false}
!11 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5071, i32 1}
!12 = !{ptr @.str, !13, !"<string literal>", i1 false, i1 false}
!13 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5060, i32 12}
!14 = !{ptr @macb_driver, !15, !"macb_driver", i1 false, i1 false}
!15 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5056, i32 31}
!16 = !{ptr @.str.1, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4725, i32 26}
!18 = !{ptr @macb_probe.__key, !19, !"__key", i1 false, i1 false}
!19 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4731, i32 2}
!20 = !{ptr @.str.2, !19, !"<string literal>", i1 false, i1 false}
!21 = !{ptr @.str.3, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4799, i32 3}
!23 = !{ptr @.str.4, !22, !"<string literal>", i1 false, i1 false}
!24 = !{ptr @.str.5, !22, !"<string literal>", i1 false, i1 false}
!25 = !{ptr @.str.6, !22, !"<string literal>", i1 false, i1 false}
!26 = !{ptr @.str.7, !22, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @macb_probe._entry, !22, !"_entry", i1 false, i1 false}
!28 = !{ptr @macb_probe._entry_ptr, !22, !"_entry_ptr", i1 false, i1 false}
!29 = !{ptr @.str.8, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4805, i32 19}
!31 = !{ptr @.str.9, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4806, i32 25}
!33 = !{ptr @.str.10, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4806, i32 33}
!35 = !{ptr @default_gem_config, !36, !"default_gem_config", i1 false, i1 false}
!36 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4633, i32 33}
!37 = !{ptr @.str.11, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3761, i32 36}
!39 = !{ptr @.str.12, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3762, i32 36}
!41 = !{ptr @.str.13, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3768, i32 10}
!43 = !{ptr @.str.14, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3773, i32 10}
!45 = !{ptr @.str.15, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3775, i32 46}
!47 = !{ptr @.str.16, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3779, i32 46}
!49 = !{ptr @.str.17, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3783, i32 47}
!51 = !{ptr @.str.18, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3789, i32 3}
!53 = !{ptr @.str.19, !52, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @macb_clk_init._entry, !52, !"_entry", i1 false, i1 false}
!55 = !{ptr @macb_clk_init._entry_ptr, !52, !"_entry_ptr", i1 false, i1 false}
!56 = !{ptr @.str.21, !57, !"<string literal>", i1 false, i1 false}
!57 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3795, i32 3}
!58 = !{ptr @macb_clk_init._entry.20, !57, !"_entry", i1 false, i1 false}
!59 = !{ptr @macb_clk_init._entry_ptr.22, !57, !"_entry_ptr", i1 false, i1 false}
!60 = !{ptr @.str.24, !61, !"<string literal>", i1 false, i1 false}
!61 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3801, i32 3}
!62 = !{ptr @macb_clk_init._entry.23, !61, !"_entry", i1 false, i1 false}
!63 = !{ptr @macb_clk_init._entry_ptr.25, !61, !"_entry_ptr", i1 false, i1 false}
!64 = !{ptr @.str.27, !65, !"<string literal>", i1 false, i1 false}
!65 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3807, i32 3}
!66 = !{ptr @macb_clk_init._entry.26, !65, !"_entry", i1 false, i1 false}
!67 = !{ptr @macb_clk_init._entry_ptr.28, !65, !"_entry_ptr", i1 false, i1 false}
!68 = !{ptr @.str.30, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3813, i32 3}
!70 = !{ptr @macb_clk_init._entry.29, !69, !"_entry", i1 false, i1 false}
!71 = !{ptr @macb_clk_init._entry_ptr.31, !69, !"_entry_ptr", i1 false, i1 false}
!72 = !{ptr @.str.32, !73, !"<string literal>", i1 false, i1 false}
!73 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3896, i32 4}
!74 = !{ptr @.str.33, !73, !"<string literal>", i1 false, i1 false}
!75 = !{ptr @macb_init._entry, !73, !"_entry", i1 false, i1 false}
!76 = !{ptr @macb_init._entry_ptr, !73, !"_entry_ptr", i1 false, i1 false}
!77 = !{ptr @macb_init.__key, !78, !"__key", i1 false, i1 false}
!78 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3902, i32 3}
!79 = !{ptr @.str.34, !78, !"<string literal>", i1 false, i1 false}
!80 = !{ptr @macb_init.__key.35, !81, !"__key", i1 false, i1 false}
!81 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3958, i32 4}
!82 = !{ptr @.str.36, !81, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @.str.37, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1821, i32 20}
!85 = !{ptr @.str.38, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1047, i32 23}
!87 = !{ptr @.str.39, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1088, i32 9}
!89 = !{ptr @macb_netdev_ops, !90, !"macb_netdev_ops", i1 false, i1 false}
!90 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3655, i32 36}
!91 = !{ptr @.str.40, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2744, i32 2}
!93 = !{ptr @.str.41, !92, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @macb_open.__UNIQUE_ID_ddebug499, !92, !"__UNIQUE_ID_ddebug499", i1 false, i1 false}
!95 = !{ptr @.str.42, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2755, i32 19}
!97 = !{ptr @.str.43, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2239, i32 4}
!99 = !{ptr @.str.44, !98, !"<string literal>", i1 false, i1 false}
!100 = !{ptr @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug492, !98, !"__UNIQUE_ID_ddebug492", i1 false, i1 false}
!101 = !{ptr @.str.45, !102, !"<string literal>", i1 false, i1 false}
!102 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2247, i32 2}
!103 = !{ptr @macb_init_rx_buffer_size.__UNIQUE_ID_ddebug493, !102, !"__UNIQUE_ID_ddebug493", i1 false, i1 false}
!104 = !{ptr @.str.46, !105, !"<string literal>", i1 false, i1 false}
!105 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2371, i32 3}
!106 = !{ptr @.str.47, !105, !"<string literal>", i1 false, i1 false}
!107 = !{ptr @macb_alloc_consistent.__UNIQUE_ID_ddebug496, !105, !"__UNIQUE_ID_ddebug496", i1 false, i1 false}
!108 = !{ptr @.str.48, !109, !"<string literal>", i1 false, i1 false}
!109 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2386, i32 3}
!110 = !{ptr @macb_alloc_consistent.__UNIQUE_ID_ddebug497, !109, !"__UNIQUE_ID_ddebug497", i1 false, i1 false}
!111 = !{ptr @.str.49, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2580, i32 3}
!113 = !{ptr @.str.50, !112, !"<string literal>", i1 false, i1 false}
!114 = !{ptr @macb_configure_dma.__UNIQUE_ID_ddebug498, !112, !"__UNIQUE_ID_ddebug498", i1 false, i1 false}
!115 = !{ptr @.str.51, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 772, i32 20}
!117 = !{ptr @.str.52, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 781, i32 19}
!119 = !{ptr @.str.53, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 754, i32 28}
!121 = !{ptr @.str.54, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2167, i32 24}
!123 = !{ptr @.str.55, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2205, i32 3}
!125 = !{ptr @.str.56, !124, !"<string literal>", i1 false, i1 false}
!126 = !{ptr @macb_start_xmit.__UNIQUE_ID_ddebug491, !124, !"__UNIQUE_ID_ddebug491", i1 false, i1 false}
!127 = !{ptr @.str.57, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1938, i32 23}
!129 = !{ptr @.str.58, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2014, i32 22}
!131 = distinct !{null, !132, !"__already_done", i1 false, i1 false}
!132 = !{!"../include/linux/dma-mapping.h", i32 326, i32 6}
!133 = !{ptr @.str.59, !132, !"<string literal>", i1 false, i1 false}
!134 = !{ptr @.str.60, !132, !"<string literal>", i1 false, i1 false}
!135 = !{ptr @gem_statistics, !136, !"gem_statistics", i1 false, i1 false}
!136 = !{!"../drivers/net/ethernet/cadence/macb.h", i32 1042, i32 35}
!137 = !{ptr @.str.61, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2334, i32 4}
!139 = !{ptr @.str.62, !138, !"<string literal>", i1 false, i1 false}
!140 = !{ptr @gem_alloc_rx_buffers.__UNIQUE_ID_ddebug494, !138, !"__UNIQUE_ID_ddebug494", i1 false, i1 false}
!141 = !{ptr @.str.63, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1228, i32 9}
!143 = !{ptr @.str.64, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1326, i32 8}
!145 = !{ptr @.str.65, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1334, i32 8}
!147 = !{ptr @gem_ethtool_ops, !148, !"gem_ethtool_ops", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3534, i32 33}
!149 = !{ptr @.str.66, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2935, i32 44}
!151 = !{ptr @queue_statistics, !152, !"queue_statistics", i1 false, i1 false}
!152 = !{!"../drivers/net/ethernet/cadence/macb.h", i32 1127, i32 35}
!153 = !{ptr @.str.67, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3488, i32 6}
!155 = !{ptr @.str.68, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3358, i32 2}
!157 = !{ptr @.str.69, !156, !"<string literal>", i1 false, i1 false}
!158 = !{ptr @gem_add_flow_filter.__UNIQUE_ID_ddebug508, !156, !"__UNIQUE_ID_ddebug508", i1 false, i1 false}
!159 = !{ptr @.str.70, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3374, i32 23}
!161 = !{ptr @.str.71, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3411, i32 4}
!163 = !{ptr @.str.72, !162, !"<string literal>", i1 false, i1 false}
!164 = !{ptr @gem_del_flow_filter.__UNIQUE_ID_ddebug509, !162, !"__UNIQUE_ID_ddebug509", i1 false, i1 false}
!165 = !{ptr @.str.73, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 2352, i32 2}
!167 = !{ptr @.str.74, !166, !"<string literal>", i1 false, i1 false}
!168 = !{ptr @macb_alloc_rx_buffers.__UNIQUE_ID_ddebug495, !166, !"__UNIQUE_ID_ddebug495", i1 false, i1 false}
!169 = !{ptr @.str.75, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 1535, i32 23}
!171 = !{ptr @macb_ethtool_ops, !172, !"macb_ethtool_ops", i1 false, i1 false}
!172 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3521, i32 33}
!173 = !{ptr @macb_default_usrio, !174, !"macb_default_usrio", i1 false, i1 false}
!174 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3989, i32 39}
!175 = !{ptr @.str.76, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3700, i32 5}
!177 = !{ptr @.str.77, !176, !"<string literal>", i1 false, i1 false}
!178 = !{ptr @macb_configure_caps._entry, !176, !"_entry", i1 false, i1 false}
!179 = !{ptr @macb_configure_caps._entry_ptr, !176, !"_entry_ptr", i1 false, i1 false}
!180 = !{ptr @.str.78, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3710, i32 2}
!182 = !{ptr @macb_configure_caps.__UNIQUE_ID_ddebug510, !181, !"__UNIQUE_ID_ddebug510", i1 false, i1 false}
!183 = !{ptr @gem_ptp_info, !184, !"gem_ptp_info", i1 false, i1 false}
!184 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 3192, i32 29}
!185 = !{ptr @.str.79, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 321, i32 2}
!187 = !{ptr @.str.80, !186, !"<string literal>", i1 false, i1 false}
!188 = !{ptr @.str.81, !186, !"<string literal>", i1 false, i1 false}
!189 = !{ptr @macb_get_hwaddr._entry, !186, !"_entry", i1 false, i1 false}
!190 = !{ptr @macb_get_hwaddr._entry_ptr, !186, !"_entry_ptr", i1 false, i1 false}
!191 = !{ptr @.str.82, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 904, i32 22}
!193 = !{ptr @.str.83, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 907, i32 45}
!195 = !{ptr @.str.84, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 862, i32 35}
!197 = !{ptr @.str.85, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 847, i32 19}
!199 = !{ptr @macb_phylink_pcs_ops, !200, !"macb_phylink_pcs_ops", i1 false, i1 false}
!200 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 581, i32 37}
!201 = !{ptr @macb_phylink_usx_pcs_ops, !202, !"macb_phylink_usx_pcs_ops", i1 false, i1 false}
!202 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 575, i32 37}
!203 = !{ptr @macb_phylink_ops, !204, !"macb_phylink_ops", i1 false, i1 false}
!204 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 744, i32 37}
!205 = !{ptr @.str.86, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 502, i32 8}
!207 = !{ptr @.str.87, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 506, i32 23}
!209 = !{ptr @macb_dt_ids, !210, !"macb_dt_ids", i1 false, i1 false}
!210 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4608, i32 34}
!211 = !{ptr @at91sam9260_config, !212, !"at91sam9260_config", i1 false, i1 false}
!212 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4499, i32 33}
!213 = !{ptr @np4_config, !214, !"np4_config", i1 false, i1 false}
!214 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4563, i32 33}
!215 = !{ptr @pc302gem_config, !216, !"pc302gem_config", i1 false, i1 false}
!216 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4514, i32 33}
!217 = !{ptr @sama5d2_config, !218, !"sama5d2_config", i1 false, i1 false}
!218 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4522, i32 33}
!219 = !{ptr @sama5d29_config, !220, !"sama5d29_config", i1 false, i1 false}
!220 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4530, i32 33}
!221 = !{ptr @sama5d3_config, !222, !"sama5d3_config", i1 false, i1 false}
!222 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4538, i32 33}
!223 = !{ptr @sama5d3macb_config, !224, !"sama5d3macb_config", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4506, i32 33}
!225 = !{ptr @sama5d4_config, !226, !"sama5d4_config", i1 false, i1 false}
!226 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4548, i32 33}
!227 = !{ptr @emac_config, !228, !"emac_config", i1 false, i1 false}
!228 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4556, i32 33}
!229 = !{ptr @.str.88, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4338, i32 35}
!231 = !{ptr @.str.89, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4344, i32 3}
!233 = !{ptr @at91ether_clk_init._entry, !232, !"_entry", i1 false, i1 false}
!234 = !{ptr @at91ether_clk_init._entry_ptr, !232, !"_entry_ptr", i1 false, i1 false}
!235 = !{ptr @at91ether_netdev_ops, !236, !"at91ether_netdev_ops", i1 false, i1 false}
!236 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4313, i32 36}
!237 = !{ptr @.str.90, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4191, i32 20}
!239 = !{ptr @__func__.at91ether_start_xmit, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4191, i32 47}
!241 = !{ptr @.str.91, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4201, i32 19}
!243 = !{ptr @.str.92, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4297, i32 19}
!245 = !{ptr @zynqmp_config, !246, !"zynqmp_config", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4570, i32 33}
!247 = !{ptr @zynq_config, !248, !"zynq_config", i1 false, i1 false}
!248 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4581, i32 33}
!249 = !{ptr @fu540_c000_config, !250, !"fu540_c000_config", i1 false, i1 false}
!250 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4489, i32 33}
!251 = !{ptr @.str.93, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4441, i32 14}
!253 = !{ptr @.str.94, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4457, i32 3}
!255 = !{ptr @.str.95, !254, !"<string literal>", i1 false, i1 false}
!256 = !{ptr @fu540_c000_clk_init._entry, !254, !"_entry", i1 false, i1 false}
!257 = !{ptr @fu540_c000_clk_init._entry_ptr, !254, !"_entry_ptr", i1 false, i1 false}
!258 = !{ptr @.str.97, !259, !"<string literal>", i1 false, i1 false}
!259 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4461, i32 3}
!260 = !{ptr @fu540_c000_clk_init._entry.96, !259, !"_entry", i1 false, i1 false}
!261 = !{ptr @fu540_c000_clk_init._entry_ptr.98, !259, !"_entry_ptr", i1 false, i1 false}
!262 = !{ptr @mgmt, !263, !"mgmt", i1 false, i1 false}
!263 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4002, i32 39}
!264 = !{ptr @fu540_c000_ops, !265, !"fu540_c000_ops", i1 false, i1 false}
!265 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4418, i32 29}
!266 = !{ptr @sama7g5_gem_config, !267, !"sama7g5_gem_config", i1 false, i1 false}
!267 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4590, i32 33}
!268 = !{ptr @sama7g5_usrio, !269, !"sama7g5_usrio", i1 false, i1 false}
!269 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4481, i32 39}
!270 = !{ptr @sama7g5_emac_config, !271, !"sama7g5_emac_config", i1 false, i1 false}
!271 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4599, i32 33}
!272 = !{ptr @macb_pm_ops, !273, !"macb_pm_ops", i1 false, i1 false}
!273 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 5051, i32 32}
!274 = !{ptr @.str.99, !275, !"<string literal>", i1 false, i1 false}
!275 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4891, i32 5}
!276 = !{ptr @macb_suspend._entry, !275, !"_entry", i1 false, i1 false}
!277 = !{ptr @macb_suspend._entry_ptr, !275, !"_entry_ptr", i1 false, i1 false}
!278 = !{ptr @macb_suspend._entry.100, !279, !"_entry", i1 false, i1 false}
!279 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4903, i32 5}
!280 = !{ptr @macb_suspend._entry_ptr.101, !279, !"_entry_ptr", i1 false, i1 false}
!281 = !{ptr @.str.102, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/net/ethernet/cadence/macb_main.c", i32 4979, i32 4}
!283 = !{ptr @macb_resume._entry, !282, !"_entry", i1 false, i1 false}
!284 = !{ptr @macb_resume._entry_ptr, !282, !"_entry_ptr", i1 false, i1 false}
!285 = !{i32 1, !"wchar_size", i32 2}
!286 = !{i32 1, !"min_enum_size", i32 4}
!287 = !{i32 8, !"branch-target-enforcement", i32 0}
!288 = !{i32 8, !"sign-return-address", i32 0}
!289 = !{i32 8, !"sign-return-address-all", i32 0}
!290 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!291 = !{i32 7, !"uwtable", i32 1}
!292 = !{i32 7, !"frame-pointer", i32 2}
!293 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!294 = !{!"auto-init"}
!295 = !{i64 2148371004, i64 2148371030, i64 2148371059, i64 2148371093, i64 2148371124, i64 2148371147}
!296 = !{i64 5277510}
!297 = !{i64 5277928}
!298 = !{i8 0, i8 2}
!299 = !{i64 2148852819, i64 2148852824, i64 2148852837, i64 2148852881, i64 2148852915, i64 2148852936}
!300 = !{!"branch_weights", i32 2000, i32 1}
!301 = !{!"branch_weights", i32 1, i32 2000}
!302 = !{i64 2158205235}
!303 = !{i64 2158224544}
!304 = !{i64 2158203447}
!305 = !{i64 2158207209}
!306 = !{i64 2158207361}
!307 = !{i64 2158209274}
!308 = !{i64 2158209426}
!309 = !{i64 2158207118}
!310 = !{i64 2158208502}
!311 = !{i64 2158208755}
!312 = !{i64 2155538213, i64 2155538701, i64 2155538250, i64 2155538306, i64 2155538340, i64 2155538364, i64 2155538405, i64 2155538426, i64 2155538454, i64 2155538488}
!313 = !{i64 2158231146}
!314 = distinct !{!314, !315}
!315 = !{!"llvm.loop.peeled.count", i32 1}
!316 = !{i64 2158237473}
!317 = !{i64 763485, i64 763546}
!318 = !{i64 766217}
!319 = !{i64 766502}
!320 = distinct !{!320, !315}
!321 = !{i64 2158206085}
!322 = !{i64 2158206386}
!323 = !{i64 2158206484}
!324 = !{i64 2158206690}
!325 = !{i32 0, i32 33}
!326 = !{i64 2148370423}
!327 = !{i64 855246, i64 855271, i64 855293, i64 855309, i64 855321, i64 855341, i64 855365, i64 855381, i64 855393}
!328 = !{i64 2148370611}
!329 = !{i64 2158385368}
!330 = !{i64 2152812142}
