; ModuleID = '/llk/IR_all_yes/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c_pt.bc'
source_filename = "../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.arm_delay_ops = type { ptr, ptr, ptr, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.intr_info = type { i32, ptr, i16, i16, ptr }
%struct.adapter = type { ptr, ptr, i32, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i16, i16, %struct.adapter_params, %struct.cxgb4_virt_res, i32, ptr, %struct.msix_bmap, %struct.doorbell_stats, [36 x i8], %struct.sge, [4 x ptr], [4 x i8], ptr, i8, i32, i32, i32, ptr, i32, i32, ptr, i32, i32, ptr, ptr, [8 x ptr], i32, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, ptr, [64 x i8], %struct.tid_info, ptr, %struct.spinlock, ptr, %struct.work_struct, %struct.work_struct, %struct.work_struct, %struct.work_struct, i8, %struct.spinlock, %struct.mbox_list, ptr, %struct.mutex, ptr, i8, i8, ptr, %struct.ptp_clock_info, ptr, %struct.spinlock, %struct.spinlock, [48 x i8], %struct.spinlock, ptr, %struct.chcr_ktls, %struct.chcr_stats_debug, %struct.ch_ktls_stats_debug, %struct.ch_ipsec_stats_debug, i8, %struct.rhashtable, %struct.rhashtable_params, %struct.timer_list, %struct.work_struct, %struct.ethtool_dump, %struct.hma_data, ptr, %struct.vmcoredd_data, %struct.ch_thermal, ptr, ptr, ptr, [88 x i8] }
%struct.adapter_params = type { %struct.sge_params, %struct.tp_params, %struct.vpd_params, %struct.pf_resources, %struct.pci_params, %struct.devlog_params, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [7 x i8], [16 x i16], [32 x i16], [32 x i16], i8, i8, i32, %struct.arch_specific_params, i8, i8, i8, i8, i8, i32, i8, i32, i32, i32, i8, i8, i8, i8, [4 x i8], i8, i8 }
%struct.sge_params = type { i32, i32, i32 }
%struct.tp_params = type { i32, i32, i16, i32, [4 x i16], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.vpd_params = type { i32, [25 x i8], [17 x i8], [17 x i8], [13 x i8] }
%struct.pf_resources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.pci_params = type { i8, i8 }
%struct.devlog_params = type { i32, i32, i32 }
%struct.arch_specific_params = type { i8, i8, i8, i16, i16, i32, i16 }
%struct.cxgb4_virt_res = type { %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, %struct.cxgb4_range, i32, %struct.cxgb4_range }
%struct.cxgb4_range = type { i32, i32 }
%struct.msix_bmap = type { ptr, i32, %struct.spinlock }
%struct.doorbell_stats = type { i32, i32, i32 }
%struct.sge = type { [32 x %struct.sge_eth_txq], %struct.sge_eth_txq, [4 x %struct.sge_ctrl_txq], [32 x %struct.sge_eth_rxq], %struct.sge_rspq, ptr, ptr, [16 x i8], %struct.sge_rspq, %struct.spinlock, ptr, ptr, [4 x ptr], i16, i16, i16, i16, i16, i16, i16, [6 x i16], [4 x i8], i16, [8 x i16], i32, i32, i32, i32, i32, %struct.sge_idma_monitor_state, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, %struct.timer_list, i32, i32, [96 x i8] }
%struct.sge_eth_txq = type { %struct.sge_txq, ptr, i8, i8, i32, i32, i32, i32, i32, i32, [116 x i8] }
%struct.sge_txq = type { i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, %struct.spinlock, i32, i16, i16, ptr, i32 }
%struct.sge_ctrl_txq = type { %struct.sge_txq, ptr, %struct.sk_buff_head, %struct.tasklet_struct, i8, [63 x i8] }
%struct.sk_buff_head = type { %union.anon.106, i32, %struct.spinlock }
%union.anon.106 = type { %struct.anon.107 }
%struct.anon.107 = type { ptr, ptr }
%struct.tasklet_struct = type { ptr, i32, %struct.atomic_t, i8, %union.anon.190, i32 }
%struct.atomic_t = type { i32 }
%union.anon.190 = type { ptr }
%struct.sge_eth_rxq = type { %struct.sge_rspq, %struct.sge_fl, %struct.sge_eth_stats, ptr, [56 x i8] }
%struct.sge_fl = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, i32 }
%struct.sge_eth_stats = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.sge_rspq = type { %struct.napi_struct, ptr, i32, i8, i8, i8, i8, i8, i8, i8, i32, i16, i16, ptr, i32, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, %struct.t4_lro_mgr }
%struct.napi_struct = type { %struct.list_head, i32, i32, i32, i32, ptr, i32, ptr, [8 x %struct.gro_list], ptr, %struct.list_head, i32, %struct.hrtimer, %struct.list_head, %struct.hlist_node, i32, ptr }
%struct.gro_list = type { %struct.list_head, i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.hlist_node = type { ptr, ptr }
%struct.t4_lro_mgr = type { i8, i32, i32, %struct.sk_buff_head }
%struct.sge_idma_monitor_state = type { i32, [2 x i32], [2 x i32], [2 x i32], [2 x i32] }
%struct.list_head = type { ptr, ptr }
%struct.tid_info = type { ptr, i32, i32, ptr, ptr, i32, i32, i32, i32, ptr, i32, i32, ptr, ptr, i32, i32, ptr, ptr, i32, i32, i32, i32, i32, i32, [32 x i8], %struct.spinlock, ptr, i32, %struct.spinlock, i32, i32, i32, ptr, ptr, i32, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i32, [68 x i8] }
%struct.mbox_list = type { %struct.list_head }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.ptp_clock_info = type { ptr, [32 x i8], i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.chcr_ktls = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.chcr_stats_debug = type { %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t }
%struct.ch_ktls_stats_debug = type { [4 x %struct.ch_ktls_port_stats_debug], %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.ch_ktls_port_stats_debug = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.ch_ipsec_stats_debug = type { %struct.atomic_t }
%struct.rhashtable = type { ptr, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, ptr, ptr, ptr }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.hma_data = type { i8, ptr, ptr }
%struct.vmcoredd_data = type { [44 x i8], i32, ptr }
%struct.ch_thermal = type { ptr, i32, i32 }
%struct.fw_debug_cmd = type { i32, i32, %union.fw_debug }
%union.fw_debug = type { %struct.fw_debug_assert }
%struct.fw_debug_assert = type { i32, i32, i32, i32, [8 x i8], [8 x i8], i64 }
%struct.pci_dev = type <{ %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i16, i16, i16, i16, i32, i8, i8, i16, ptr, ptr, ptr, i32, i8, i8, i8, i8, i8, i8, i16, ptr, ptr, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, ptr, i8, i8, i16, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], %struct.hlist_head, i32, [17 x ptr], [17 x ptr], i8, i8, [2 x i8], ptr, %struct.raw_spinlock, %struct.pci_vpd, i16, i8, i8, %union.anon.166, i16, i8, i8, i16, [2 x i8], i32, i8, i8, i16, i16, i16, i32, i32, ptr, i32, [7 x i8], i8 }>
%struct.device_dma_parameters = type { i32, i32, i32 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.resource = type { i32, i32, ptr, i32, i32, ptr, ptr, ptr }
%struct.hlist_head = type { ptr }
%struct.pci_vpd = type { %struct.mutex, i32, i8 }
%union.anon.166 = type { ptr }
%struct.mbox_cmd_log = type { i32, i32, i32 }
%struct.mbox_cmd = type { [8 x i64], i64, i32, i16, i16 }
%union.anon.198 = type { i32 }
%struct.fw_ldst_cmd = type { i32, i32, %union.fw_ldst }
%union.fw_ldst = type { %struct.fw_ldst_func, [32 x i8] }
%struct.fw_ldst_func = type { i8, i8, i16, i32, i64, i64 }
%struct.fw_params_cmd = type { i32, i32, [7 x %struct.fw_params_param] }
%struct.fw_params_param = type { i32, i32 }
%struct.fw_pfvf_cmd = type { i32, i32, i32, i32, i32, i32, i16, i16, i32 }
%struct.exprom_header = type { [16 x i8], [4 x i8] }
%struct.fw_info = type { i8, ptr, ptr, %struct.fw_hdr }
%struct.fw_hdr = type { i8, i8, i16, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, [23 x i32] }
%struct.fw_devlog_cmd = type { i32, i32, i8, [7 x i8], i32, i32, [2 x i32] }
%struct.fw_reset_cmd = type { i32, i32, i32, i32 }
%struct.link_config = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8 }
%struct.fw_port_cmd = type { i32, i32, %union.fw_port }
%union.fw_port = type { %struct.fw_port_info }
%struct.fw_port_info = type { i32, i16, i16, i16, i8, i8, i8, i8, i16, i64 }
%struct.fw_rss_ind_tbl_cmd = type { i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fw_rss_glb_config_cmd = type { i32, i32, %union.fw_rss_glb_config }
%union.fw_rss_glb_config = type { %struct.fw_rss_glb_config_manual }
%struct.fw_rss_glb_config_manual = type { i32, i32, i64, i64 }
%struct.fw_rss_vi_config_cmd = type { i32, i32, %union.fw_rss_vi_config }
%union.fw_rss_vi_config = type { %struct.fw_rss_vi_config_manual }
%struct.fw_rss_vi_config_manual = type { i64, i64, i64 }
%struct.fw_rss_vi_config_basicvirtual = type { i32, i32, i64, i64 }
%struct.tp_tcp_stats = type { i32, i64, i64, i64 }
%struct.tp_err_stats = type { [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], [4 x i32], i32, i32 }
%struct.tp_cpl_stats = type { [4 x i32], [4 x i32] }
%struct.tp_fcoe_stats = type { i32, i32, i64 }
%struct.tp_usm_stats = type { i32, i32, i64 }
%struct.trace_params = type { [28 x i32], [28 x i32], i16, i16, i8, i8, i8, i8 }
%struct.port_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.lb_port_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.fw_filter_wr = type { i32, i32, i64, i32, i32, i16, i16, i8, i8, i16, i32, i8, i8, i8, i8, i16, i16, i16, i16, [16 x i8], [16 x i8], [16 x i8], [16 x i8], i16, i16, i16, i16, i16, [6 x i8] }
%struct.fw_ldst_mdio = type { i16, i16, i16, i16 }
%struct.fw_hello_cmd = type { i32, i32, i32, i32 }
%struct.fw_bye_cmd = type { i32, i32, i64 }
%struct.fw_initialize_cmd = type { i32, i32, i64 }
%struct.fw_vi_cmd = type { i32, i32, i16, [6 x i8], i8, i8, [6 x i8], i16, [6 x i8], i16, [6 x i8], i16, [6 x i8], i64, i64 }
%struct.fw_vi_rxmode_cmd = type { i32, i32, i32, i32 }
%struct.fw_vi_mac_cmd = type { i32, i32, %union.fw_vi_mac }
%union.fw_vi_mac = type { %struct.fw_vi_mac_raw, [24 x i8] }
%struct.fw_vi_mac_raw = type { i32, i32, [2 x i32], i64, [2 x i32] }
%struct.fw_vi_mac_exact = type { i16, [6 x i8] }
%struct.fw_vi_mac_vni = type { i16, [6 x i8], i16, [6 x i8], i32, i32 }
%struct.fw_vi_enable_cmd = type { i32, i32, i16, i16, i32 }
%struct.port_info = type { ptr, i16, i32, i16, i8, i32, i8, i8, i8, i8, i8, i8, i8, %struct.link_config, ptr, %struct.port_stats, %struct.port_dcb_info, %struct.cxgb_fcoe, i8, %struct.hwtstamp_config, i8, ptr, i32, i8, i8, i8, i8, i8, i16, i16, i32, %struct.mutex, %struct.cxgb4_ethtool_lb_test }
%struct.port_dcb_info = type { i32, i32, i32, i8, i32, i8, i8, i8, i8, [8 x i8], [8 x i8], [8 x i8], [8 x %struct.app_priority] }
%struct.app_priority = type { i8, i8, i16 }
%struct.cxgb_fcoe = type { i8 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.cxgb4_ethtool_lb_test = type { %struct.completion, i32, i32 }
%struct.fw_iq_cmd = type { i32, i32, i16, i16, i16, i16, i32, i16, i16, i64, i32, i16, i16, i64, i32, i16, i16, i64 }
%struct.fw_eq_eth_cmd = type { i32, i32, i32, i32, i32, i32, i64, i32, i32, i64 }
%struct.fw_eq_ctrl_cmd = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.fw_eq_ofld_cmd = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.fw_port_info32 = type { i32, i32, i32, i32, i32, i32 }
%struct.fw_acl_mac_cmd = type { i32, i32, i8, [7 x i8], i16, [6 x i8], i16, [6 x i8], i16, [6 x i8], i16, [6 x i8] }
%struct.fw_ldst_idctxt = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.fw_sched_cmd = type { i32, i32, %union.fw_sched }
%union.fw_sched = type { %struct.fw_sched_params }
%struct.fw_sched_params = type { i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i16, i16, i16, i16 }
%struct.fw_ldst_i2c = type { i8, i8, i8, i8, i32, [48 x i8] }
%struct.fw_acl_vlan_cmd = type { i32, i32, i8, i8, [6 x i8], [16 x i16] }
%struct.cxgb4_pci_exp_rom_header = type { i16, [22 x i8], i16 }
%struct.cxgb4_pcir_data = type { i32, i16, i16, [2 x i8], [2 x i8], i8, [3 x i8], [2 x i8], [2 x i8], i8, i8, [2 x i8] }
%struct.legacy_pci_rom_hdr = type { [2 x i8], i8, [4 x i8], i8, [16 x i8], i16 }

@t4_wr_mbox_meat_timeout.delay = internal constant { [10 x i32], [56 x i8] } { [10 x i32] [i32 1, i32 1, i32 3, i32 5, i32 10, i32 10, i32 20, i32 50, i32 100, i32 200], [56 x i8] zeroinitializer }, align 32
@arm_delay_ops = external dso_local local_unnamed_addr global %struct.arm_delay_ops, align 4
@t4_wr_mbox_meat_timeout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 433, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"command %#x in mailbox %d timed out\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"t4_wr_mbox_meat_timeout\00", [40 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"drivers/net/ethernet/chelsio/cxgb4/t4_hw.c\00", [53 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\013\00", [29 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s %s: \00", [24 x i8] zeroinitializer }, align 32
@t4_wr_mbox_meat_timeout._entry_ptr = internal global ptr @t4_wr_mbox_meat_timeout._entry, section ".printk_index", align 4
@t4_get_regs_len._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.6, ptr @.str.2, i32 842, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Unsupported chip version %d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"t4_get_regs_len\00", [16 x i8] zeroinitializer }, align 32
@t4_get_regs_len._entry_ptr = internal global ptr @t4_get_regs_len._entry, section ".printk_index", align 4
@t4_get_regs.t4_reg_ranges = internal constant { [912 x i32], [896 x i8] } { [912 x i32] [i32 4104, i32 4360, i32 4480, i32 4484, i32 4496, i32 4500, i32 4512, i32 4516, i32 4528, i32 4532, i32 4604, i32 4668, i32 4864, i32 5948, i32 6144, i32 6396, i32 12288, i32 12504, i32 12512, i32 12516, i32 12524, i32 22800, i32 22816, i32 22820, i32 22880, i32 22880, i32 22888, i32 22888, i32 22896, i32 22896, i32 22904, i32 22904, i32 22912, i32 22912, i32 22920, i32 22920, i32 22928, i32 22928, i32 22936, i32 22936, i32 22944, i32 22996, i32 23040, i32 23264, i32 23272, i32 23272, i32 23280, i32 23280, i32 23288, i32 23288, i32 24576, i32 24728, i32 24832, i32 24912, i32 25088, i32 25096, i32 25152, i32 25160, i32 25216, i32 25264, i32 25280, i32 25400, i32 25456, i32 25484, i32 25600, i32 25660, i32 25856, i32 25892, i32 27136, i32 27140, i32 27156, i32 27192, i32 27232, i32 27248, i32 27256, i32 27256, i32 27392, i32 27404, i32 27420, i32 27524, i32 27632, i32 27640, i32 27648, i32 27660, i32 27676, i32 27780, i32 27888, i32 27896, i32 27904, i32 27916, i32 27932, i32 28036, i32 28144, i32 28152, i32 28160, i32 28172, i32 28188, i32 28292, i32 28400, i32 28408, i32 28416, i32 28428, i32 28444, i32 28548, i32 28656, i32 28664, i32 28672, i32 28684, i32 28700, i32 28804, i32 28912, i32 28920, i32 28928, i32 28940, i32 28956, i32 29060, i32 29168, i32 29176, i32 29184, i32 29196, i32 29212, i32 29316, i32 29424, i32 29432, i32 29440, i32 29452, i32 29468, i32 29572, i32 29680, i32 29688, i32 29696, i32 29776, i32 29952, i32 30000, i32 30208, i32 30220, i32 30228, i32 30236, i32 30336, i32 30412, i32 30464, i32 30616, i32 30656, i32 30716, i32 30976, i32 31228, i32 31488, i32 31576, i32 31584, i32 31620, i32 31628, i32 31800, i32 32000, i32 32056, i32 32064, i32 32128, i32 32140, i32 32220, i32 32228, i32 32260, i32 32272, i32 32284, i32 32292, i32 32312, i32 32320, i32 32324, i32 32332, i32 32376, i32 32384, i32 32420, i32 32428, i32 32476, i32 32488, i32 32508, i32 36288, i32 36356, i32 36368, i32 36380, i32 36400, i32 36472, i32 36512, i32 36536, i32 36544, i32 36716, i32 36800, i32 36872, i32 36880, i32 36952, i32 36960, i32 36960, i32 36968, i32 36980, i32 37116, i32 37116, i32 37888, i32 37896, i32 37904, i32 37976, i32 38400, i32 38400, i32 38408, i32 38456, i32 38464, i32 38588, i32 38912, i32 38920, i32 38944, i32 38972, i32 38992, i32 39012, i32 39936, i32 40044, i32 40064, i32 40172, i32 40192, i32 40300, i32 40320, i32 40428, i32 40448, i32 40556, i32 40576, i32 40684, i32 40704, i32 40812, i32 40832, i32 40940, i32 53252, i32 53252, i32 53264, i32 53308, i32 57280, i32 57312, i32 57344, i32 60028, i32 61440, i32 69904, i32 69912, i32 70032, i32 102464, i32 102508, i32 102520, i32 102528, i32 102540, i32 102628, i32 102640, i32 102648, i32 102656, i32 102672, i32 102688, i32 102692, i32 102736, i32 102804, i32 102812, i32 102832, i32 102864, i32 102888, i32 102968, i32 102988, i32 103416, i32 103484, i32 103500, i32 103540, i32 103568, i32 103648, i32 103664, i32 103672, i32 104448, i32 105480, i32 105488, i32 105616, i32 105632, i32 105700, i32 105712, i32 105792, i32 105808, i32 105876, i32 105888, i32 105960, i32 105968, i32 106048, i32 106064, i32 106128, i32 106144, i32 106316, i32 106496, i32 106500, i32 106512, i32 106604, i32 106672, i32 106724, i32 106732, i32 106740, i32 106752, i32 106760, i32 106772, i32 106784, i32 106792, i32 106800, i32 106808, i32 106808, i32 106896, i32 106948, i32 107004, i32 107004, i32 122944, i32 122956, i32 123524, i32 123532, i32 123584, i32 123584, i32 123616, i32 123616, i32 123648, i32 123780, i32 123840, i32 123848, i32 123968, i32 123980, i32 124548, i32 124556, i32 124608, i32 124608, i32 124640, i32 124640, i32 124672, i32 124804, i32 124864, i32 124872, i32 124992, i32 125004, i32 125572, i32 125580, i32 125632, i32 125632, i32 125664, i32 125664, i32 125696, i32 125828, i32 125888, i32 125896, i32 126016, i32 126028, i32 126596, i32 126604, i32 126656, i32 126656, i32 126688, i32 126688, i32 126720, i32 126852, i32 126912, i32 126920, i32 127040, i32 127052, i32 127620, i32 127628, i32 127680, i32 127680, i32 127712, i32 127712, i32 127744, i32 127876, i32 127936, i32 127944, i32 128064, i32 128076, i32 128644, i32 128652, i32 128704, i32 128704, i32 128736, i32 128736, i32 128768, i32 128900, i32 128960, i32 128968, i32 129088, i32 129100, i32 129668, i32 129676, i32 129728, i32 129728, i32 129760, i32 129760, i32 129792, i32 129924, i32 129984, i32 129992, i32 130112, i32 130124, i32 130692, i32 130700, i32 130752, i32 130752, i32 130784, i32 130784, i32 130816, i32 130948, i32 131008, i32 131016, i32 131072, i32 131116, i32 131328, i32 131388, i32 131472, i32 131488, i32 131496, i32 131512, i32 131524, i32 131528, i32 131584, i32 131864, i32 132096, i32 132276, i32 132288, i32 132392, i32 132416, i32 132628, i32 135168, i32 135232, i32 135244, i32 135264, i32 135360, i32 135404, i32 135680, i32 135784, i32 135792, i32 135812, i32 135932, i32 136072, i32 136192, i32 136196, i32 136448, i32 136448, i32 136464, i32 136472, i32 136492, i32 136496, i32 136508, i32 136508, i32 136528, i32 136532, i32 136704, i32 136704, i32 136712, i32 136732, i32 136740, i32 136744, i32 136752, i32 136756, i32 136764, i32 136764, i32 136960, i32 136988, i32 137088, i32 137100, i32 137216, i32 137240, i32 137248, i32 137256, i32 137264, i32 137288, i32 137296, i32 137300, i32 137312, i32 137320, i32 137328, i32 137328, i32 137336, i32 137368, i32 137376, i32 137384, i32 137392, i32 137416, i32 137424, i32 137428, i32 137440, i32 137448, i32 137456, i32 137456, i32 137464, i32 137752, i32 137760, i32 137768, i32 137776, i32 137800, i32 137808, i32 137812, i32 137824, i32 137832, i32 137840, i32 137840, i32 137848, i32 137880, i32 137888, i32 137896, i32 137904, i32 137928, i32 137936, i32 137940, i32 137952, i32 137960, i32 137968, i32 137968, i32 137976, i32 138264, i32 138272, i32 138272, i32 138280, i32 138288, i32 138296, i32 138296, i32 138368, i32 138392, i32 138400, i32 138408, i32 138416, i32 138440, i32 138448, i32 138452, i32 138464, i32 138472, i32 138480, i32 138480, i32 138488, i32 138620, i32 138752, i32 138756, i32 139264, i32 139308, i32 139520, i32 139580, i32 139664, i32 139680, i32 139688, i32 139704, i32 139716, i32 139720, i32 139776, i32 140056, i32 140288, i32 140468, i32 140480, i32 140584, i32 140608, i32 140820, i32 143360, i32 143424, i32 143436, i32 143456, i32 143552, i32 143596, i32 143872, i32 143976, i32 143984, i32 144004, i32 144124, i32 144264, i32 144384, i32 144388, i32 144640, i32 144640, i32 144656, i32 144664, i32 144684, i32 144688, i32 144700, i32 144700, i32 144720, i32 144724, i32 144896, i32 144896, i32 144904, i32 144924, i32 144932, i32 144936, i32 144944, i32 144948, i32 144956, i32 144956, i32 145152, i32 145180, i32 145280, i32 145292, i32 145408, i32 145432, i32 145440, i32 145448, i32 145456, i32 145480, i32 145488, i32 145492, i32 145504, i32 145512, i32 145520, i32 145520, i32 145528, i32 145560, i32 145568, i32 145576, i32 145584, i32 145608, i32 145616, i32 145620, i32 145632, i32 145640, i32 145648, i32 145648, i32 145656, i32 145944, i32 145952, i32 145960, i32 145968, i32 145992, i32 146000, i32 146004, i32 146016, i32 146024, i32 146032, i32 146032, i32 146040, i32 146072, i32 146080, i32 146088, i32 146096, i32 146120, i32 146128, i32 146132, i32 146144, i32 146152, i32 146160, i32 146160, i32 146168, i32 146456, i32 146464, i32 146464, i32 146472, i32 146480, i32 146488, i32 146488, i32 146560, i32 146584, i32 146592, i32 146600, i32 146608, i32 146632, i32 146640, i32 146644, i32 146656, i32 146664, i32 146672, i32 146672, i32 146680, i32 146812, i32 146944, i32 146948, i32 147456, i32 147500, i32 147712, i32 147772, i32 147856, i32 147872, i32 147880, i32 147896, i32 147908, i32 147912, i32 147968, i32 148248, i32 148480, i32 148660, i32 148672, i32 148776, i32 148800, i32 149012, i32 151552, i32 151616, i32 151628, i32 151648, i32 151744, i32 151788, i32 152064, i32 152168, i32 152176, i32 152196, i32 152316, i32 152456, i32 152576, i32 152580, i32 152832, i32 152832, i32 152848, i32 152856, i32 152876, i32 152880, i32 152892, i32 152892, i32 152912, i32 152916, i32 153088, i32 153088, i32 153096, i32 153116, i32 153124, i32 153128, i32 153136, i32 153140, i32 153148, i32 153148, i32 153344, i32 153372, i32 153472, i32 153484, i32 153600, i32 153624, i32 153632, i32 153640, i32 153648, i32 153672, i32 153680, i32 153684, i32 153696, i32 153704, i32 153712, i32 153712, i32 153720, i32 153752, i32 153760, i32 153768, i32 153776, i32 153800, i32 153808, i32 153812, i32 153824, i32 153832, i32 153840, i32 153840, i32 153848, i32 154136, i32 154144, i32 154152, i32 154160, i32 154184, i32 154192, i32 154196, i32 154208, i32 154216, i32 154224, i32 154224, i32 154232, i32 154264, i32 154272, i32 154280, i32 154288, i32 154312, i32 154320, i32 154324, i32 154336, i32 154344, i32 154352, i32 154352, i32 154360, i32 154648, i32 154656, i32 154656, i32 154664, i32 154672, i32 154680, i32 154680, i32 154752, i32 154776, i32 154784, i32 154792, i32 154800, i32 154824, i32 154832, i32 154836, i32 154848, i32 154856, i32 154864, i32 154864, i32 154872, i32 155004, i32 155136, i32 155140, i32 155648, i32 155692, i32 155904, i32 155964, i32 156048, i32 156064, i32 156072, i32 156088, i32 156100, i32 156104, i32 156160, i32 156440, i32 156672, i32 156852, i32 156864, i32 156968, i32 156992, i32 157204, i32 159744, i32 159808, i32 159820, i32 159840, i32 159936, i32 159980, i32 160256, i32 160360, i32 160368, i32 160388, i32 160508, i32 160648, i32 160768, i32 160772, i32 161024, i32 161024, i32 161040, i32 161048, i32 161068, i32 161072, i32 161084, i32 161084, i32 161104, i32 161108, i32 161280, i32 161280, i32 161288, i32 161308, i32 161316, i32 161320, i32 161328, i32 161332, i32 161340, i32 161340, i32 161536, i32 161564, i32 161664, i32 161676, i32 161792, i32 161816, i32 161824, i32 161832, i32 161840, i32 161864, i32 161872, i32 161876, i32 161888, i32 161896, i32 161904, i32 161904, i32 161912, i32 161944, i32 161952, i32 161960, i32 161968, i32 161992, i32 162000, i32 162004, i32 162016, i32 162024, i32 162032, i32 162032, i32 162040, i32 162328, i32 162336, i32 162344, i32 162352, i32 162376, i32 162384, i32 162388, i32 162400, i32 162408, i32 162416, i32 162416, i32 162424, i32 162456, i32 162464, i32 162472, i32 162480, i32 162504, i32 162512, i32 162516, i32 162528, i32 162536, i32 162544, i32 162544, i32 162552, i32 162840, i32 162848, i32 162848, i32 162856, i32 162864, i32 162872, i32 162872, i32 162944, i32 162968, i32 162976, i32 162984, i32 162992, i32 163016, i32 163024, i32 163028, i32 163040, i32 163048, i32 163056, i32 163056, i32 163064, i32 163196, i32 163328, i32 163332], [896 x i8] zeroinitializer }, align 32
@t4_get_regs.t5_reg_ranges = internal constant { [1522 x i32], [1528 x i8] } { [1522 x i32] [i32 4104, i32 4288, i32 4300, i32 4344, i32 4352, i32 4352, i32 4364, i32 4424, i32 4480, i32 4484, i32 4496, i32 4500, i32 4512, i32 4516, i32 4528, i32 4532, i32 4604, i32 4668, i32 4736, i32 5948, i32 6144, i32 6396, i32 12288, i32 12328, i32 12384, i32 12464, i32 12472, i32 12504, i32 12512, i32 12540, i32 12608, i32 13692, i32 13736, i32 13772, i32 13804, i32 13804, i32 13824, i32 22052, i32 22220, i32 22252, i32 22260, i32 22304, i32 22312, i32 22364, i32 22540, i32 22548, i32 22672, i32 22684, i32 22692, i32 22700, i32 22712, i32 22716, i32 22848, i32 22984, i32 22992, i32 23004, i32 23036, i32 23064, i32 23136, i32 23152, i32 23168, i32 23196, i32 23444, i32 23548, i32 24576, i32 24608, i32 24616, i32 24640, i32 24664, i32 24732, i32 24744, i32 24908, i32 30464, i32 30616, i32 30656, i32 30972, i32 31488, i32 31576, i32 31584, i32 31620, i32 31628, i32 31828, i32 32000, i32 32056, i32 32064, i32 32128, i32 32140, i32 32220, i32 32228, i32 32260, i32 32272, i32 32284, i32 32292, i32 32312, i32 32320, i32 32324, i32 32332, i32 32376, i32 32384, i32 32476, i32 32488, i32 32508, i32 36288, i32 36320, i32 36344, i32 36356, i32 36368, i32 36484, i32 36512, i32 36740, i32 36800, i32 36952, i32 36960, i32 36960, i32 36968, i32 37112, i32 37888, i32 37896, i32 37904, i32 38000, i32 38400, i32 38400, i32 38408, i32 38456, i32 38464, i32 38644, i32 38912, i32 38920, i32 38928, i32 39012, i32 39936, i32 40044, i32 40064, i32 40172, i32 40192, i32 40300, i32 40320, i32 40428, i32 40448, i32 40556, i32 40576, i32 40684, i32 40704, i32 40812, i32 40832, i32 40992, i32 53248, i32 53252, i32 53264, i32 53308, i32 57280, i32 57312, i32 57344, i32 69740, i32 69748, i32 69768, i32 69788, i32 70012, i32 70032, i32 70148, i32 102464, i32 102508, i32 102520, i32 102528, i32 102540, i32 102632, i32 102640, i32 102648, i32 102656, i32 102672, i32 102688, i32 102692, i32 102736, i32 102804, i32 102812, i32 102832, i32 102864, i32 102888, i32 102968, i32 103056, i32 103416, i32 103464, i32 103472, i32 103492, i32 103500, i32 103532, i32 103540, i32 103540, i32 103568, i32 103628, i32 103664, i32 103672, i32 105472, i32 105480, i32 105488, i32 105568, i32 105620, i32 105700, i32 105712, i32 105792, i32 105808, i32 105876, i32 105888, i32 105960, i32 105968, i32 106000, i32 106064, i32 106128, i32 106144, i32 106276, i32 106292, i32 106292, i32 106304, i32 106320, i32 106384, i32 106420, i32 106436, i32 106468, i32 106496, i32 106500, i32 106512, i32 106604, i32 106672, i32 106724, i32 106732, i32 106744, i32 106752, i32 106760, i32 106772, i32 106800, i32 106808, i32 106948, i32 107004, i32 107004, i32 122888, i32 122892, i32 122944, i32 122948, i32 122956, i32 122956, i32 123524, i32 123536, i32 123584, i32 123584, i32 123616, i32 123616, i32 123648, i32 123780, i32 123840, i32 123848, i32 123912, i32 123916, i32 123968, i32 123972, i32 123980, i32 123980, i32 124548, i32 124560, i32 124608, i32 124608, i32 124640, i32 124640, i32 124672, i32 124804, i32 124864, i32 124872, i32 124936, i32 124940, i32 124992, i32 124996, i32 125004, i32 125004, i32 125572, i32 125584, i32 125632, i32 125632, i32 125664, i32 125664, i32 125696, i32 125828, i32 125888, i32 125896, i32 125960, i32 125964, i32 126016, i32 126020, i32 126028, i32 126028, i32 126596, i32 126608, i32 126656, i32 126656, i32 126688, i32 126688, i32 126720, i32 126852, i32 126912, i32 126920, i32 126984, i32 126988, i32 127040, i32 127044, i32 127052, i32 127052, i32 127620, i32 127632, i32 127680, i32 127680, i32 127712, i32 127712, i32 127744, i32 127876, i32 127936, i32 127944, i32 128008, i32 128012, i32 128064, i32 128068, i32 128076, i32 128076, i32 128644, i32 128656, i32 128704, i32 128704, i32 128736, i32 128736, i32 128768, i32 128900, i32 128960, i32 128968, i32 129032, i32 129036, i32 129088, i32 129092, i32 129100, i32 129100, i32 129668, i32 129680, i32 129728, i32 129728, i32 129760, i32 129760, i32 129792, i32 129924, i32 129984, i32 129992, i32 130056, i32 130060, i32 130112, i32 130116, i32 130124, i32 130124, i32 130692, i32 130704, i32 130752, i32 130752, i32 130784, i32 130784, i32 130816, i32 130948, i32 131008, i32 131016, i32 196608, i32 196656, i32 196864, i32 196932, i32 197008, i32 197024, i32 197032, i32 197048, i32 197060, i32 197064, i32 197072, i32 197072, i32 197120, i32 197400, i32 197632, i32 197812, i32 197824, i32 197932, i32 197952, i32 198172, i32 198656, i32 198696, i32 198708, i32 198708, i32 198848, i32 198920, i32 198928, i32 199084, i32 199168, i32 199188, i32 199196, i32 199212, i32 199236, i32 199248, i32 199284, i32 199284, i32 199292, i32 199420, i32 199432, i32 199716, i32 199936, i32 199936, i32 199944, i32 199956, i32 199964, i32 199968, i32 199996, i32 199996, i32 200008, i32 200016, i32 201216, i32 201228, i32 201248, i32 201248, i32 201280, i32 201280, i32 202240, i32 202252, i32 203264, i32 203292, i32 204288, i32 204320, i32 204344, i32 204348, i32 204416, i32 204416, i32 204424, i32 204456, i32 204464, i32 204468, i32 204488, i32 204500, i32 204728, i32 204804, i32 205312, i32 205312, i32 205320, i32 205376, i32 205384, i32 205440, i32 205448, i32 205504, i32 205512, i32 205564, i32 206336, i32 206384, i32 207360, i32 207548, i32 207616, i32 207632, i32 207648, i32 207664, i32 207680, i32 207696, i32 207712, i32 207728, i32 208896, i32 208936, i32 208944, i32 208968, i32 208992, i32 209000, i32 209008, i32 209052, i32 209136, i32 209192, i32 209200, i32 209224, i32 209248, i32 209256, i32 209264, i32 209308, i32 209392, i32 209464, i32 209472, i32 209472, i32 209480, i32 209488, i32 209500, i32 209508, i32 209520, i32 209592, i32 209600, i32 209636, i32 209656, i32 209720, i32 209728, i32 209728, i32 209736, i32 209744, i32 209756, i32 209764, i32 209776, i32 209848, i32 209856, i32 209892, i32 209912, i32 209960, i32 209968, i32 209992, i32 210016, i32 210024, i32 210032, i32 210076, i32 210160, i32 210216, i32 210224, i32 210248, i32 210272, i32 210280, i32 210288, i32 210332, i32 210416, i32 210488, i32 210496, i32 210496, i32 210504, i32 210512, i32 210524, i32 210532, i32 210544, i32 210616, i32 210624, i32 210660, i32 210680, i32 210744, i32 210752, i32 210752, i32 210760, i32 210768, i32 210780, i32 210788, i32 210800, i32 210872, i32 210880, i32 210916, i32 210936, i32 210940, i32 210964, i32 210964, i32 210988, i32 210988, i32 211072, i32 211084, i32 211176, i32 211180, i32 211200, i32 211240, i32 211248, i32 211272, i32 211296, i32 211304, i32 211312, i32 211356, i32 211440, i32 211512, i32 211520, i32 211520, i32 211528, i32 211536, i32 211548, i32 211556, i32 211568, i32 211640, i32 211648, i32 211684, i32 211704, i32 211728, i32 211752, i32 211752, i32 211772, i32 211792, i32 211952, i32 211984, i32 212008, i32 212008, i32 212028, i32 212048, i32 212208, i32 212220, i32 212992, i32 213040, i32 213248, i32 213316, i32 213392, i32 213408, i32 213416, i32 213432, i32 213444, i32 213448, i32 213456, i32 213456, i32 213504, i32 213784, i32 214016, i32 214196, i32 214208, i32 214316, i32 214336, i32 214556, i32 215040, i32 215080, i32 215092, i32 215092, i32 215232, i32 215304, i32 215312, i32 215468, i32 215552, i32 215572, i32 215580, i32 215596, i32 215620, i32 215632, i32 215668, i32 215668, i32 215676, i32 215804, i32 215816, i32 216100, i32 216320, i32 216320, i32 216328, i32 216340, i32 216348, i32 216352, i32 216380, i32 216380, i32 216392, i32 216400, i32 217600, i32 217612, i32 217632, i32 217632, i32 217664, i32 217664, i32 218624, i32 218636, i32 219648, i32 219676, i32 220672, i32 220704, i32 220728, i32 220732, i32 220800, i32 220800, i32 220808, i32 220840, i32 220848, i32 220852, i32 220872, i32 220884, i32 221112, i32 221188, i32 221696, i32 221696, i32 221704, i32 221760, i32 221768, i32 221824, i32 221832, i32 221888, i32 221896, i32 221948, i32 222720, i32 222768, i32 223744, i32 223932, i32 224000, i32 224016, i32 224032, i32 224048, i32 224064, i32 224080, i32 224096, i32 224112, i32 225280, i32 225320, i32 225328, i32 225352, i32 225376, i32 225384, i32 225392, i32 225436, i32 225520, i32 225576, i32 225584, i32 225608, i32 225632, i32 225640, i32 225648, i32 225692, i32 225776, i32 225848, i32 225856, i32 225856, i32 225864, i32 225872, i32 225884, i32 225892, i32 225904, i32 225976, i32 225984, i32 226020, i32 226040, i32 226104, i32 226112, i32 226112, i32 226120, i32 226128, i32 226140, i32 226148, i32 226160, i32 226232, i32 226240, i32 226276, i32 226296, i32 226344, i32 226352, i32 226376, i32 226400, i32 226408, i32 226416, i32 226460, i32 226544, i32 226600, i32 226608, i32 226632, i32 226656, i32 226664, i32 226672, i32 226716, i32 226800, i32 226872, i32 226880, i32 226880, i32 226888, i32 226896, i32 226908, i32 226916, i32 226928, i32 227000, i32 227008, i32 227044, i32 227064, i32 227128, i32 227136, i32 227136, i32 227144, i32 227152, i32 227164, i32 227172, i32 227184, i32 227256, i32 227264, i32 227300, i32 227320, i32 227324, i32 227348, i32 227348, i32 227372, i32 227372, i32 227456, i32 227468, i32 227560, i32 227564, i32 227584, i32 227624, i32 227632, i32 227656, i32 227680, i32 227688, i32 227696, i32 227740, i32 227824, i32 227896, i32 227904, i32 227904, i32 227912, i32 227920, i32 227932, i32 227940, i32 227952, i32 228024, i32 228032, i32 228068, i32 228088, i32 228112, i32 228136, i32 228136, i32 228156, i32 228176, i32 228336, i32 228368, i32 228392, i32 228392, i32 228412, i32 228432, i32 228592, i32 228604, i32 229376, i32 229424, i32 229632, i32 229700, i32 229776, i32 229792, i32 229800, i32 229816, i32 229828, i32 229832, i32 229840, i32 229840, i32 229888, i32 230168, i32 230400, i32 230580, i32 230592, i32 230700, i32 230720, i32 230940, i32 231424, i32 231464, i32 231476, i32 231476, i32 231616, i32 231688, i32 231696, i32 231852, i32 231936, i32 231956, i32 231964, i32 231980, i32 232004, i32 232016, i32 232052, i32 232052, i32 232060, i32 232188, i32 232200, i32 232484, i32 232704, i32 232704, i32 232712, i32 232724, i32 232732, i32 232736, i32 232764, i32 232764, i32 232776, i32 232784, i32 233984, i32 233996, i32 234016, i32 234016, i32 234048, i32 234048, i32 235008, i32 235020, i32 236032, i32 236060, i32 237056, i32 237088, i32 237112, i32 237116, i32 237184, i32 237184, i32 237192, i32 237224, i32 237232, i32 237236, i32 237256, i32 237268, i32 237496, i32 237572, i32 238080, i32 238080, i32 238088, i32 238144, i32 238152, i32 238208, i32 238216, i32 238272, i32 238280, i32 238332, i32 239104, i32 239152, i32 240128, i32 240316, i32 240384, i32 240400, i32 240416, i32 240432, i32 240448, i32 240464, i32 240480, i32 240496, i32 241664, i32 241704, i32 241712, i32 241736, i32 241760, i32 241768, i32 241776, i32 241820, i32 241904, i32 241960, i32 241968, i32 241992, i32 242016, i32 242024, i32 242032, i32 242076, i32 242160, i32 242232, i32 242240, i32 242240, i32 242248, i32 242256, i32 242268, i32 242276, i32 242288, i32 242360, i32 242368, i32 242404, i32 242424, i32 242488, i32 242496, i32 242496, i32 242504, i32 242512, i32 242524, i32 242532, i32 242544, i32 242616, i32 242624, i32 242660, i32 242680, i32 242728, i32 242736, i32 242760, i32 242784, i32 242792, i32 242800, i32 242844, i32 242928, i32 242984, i32 242992, i32 243016, i32 243040, i32 243048, i32 243056, i32 243100, i32 243184, i32 243256, i32 243264, i32 243264, i32 243272, i32 243280, i32 243292, i32 243300, i32 243312, i32 243384, i32 243392, i32 243428, i32 243448, i32 243512, i32 243520, i32 243520, i32 243528, i32 243536, i32 243548, i32 243556, i32 243568, i32 243640, i32 243648, i32 243684, i32 243704, i32 243708, i32 243732, i32 243732, i32 243756, i32 243756, i32 243840, i32 243852, i32 243944, i32 243948, i32 243968, i32 244008, i32 244016, i32 244040, i32 244064, i32 244072, i32 244080, i32 244124, i32 244208, i32 244280, i32 244288, i32 244288, i32 244296, i32 244304, i32 244316, i32 244324, i32 244336, i32 244408, i32 244416, i32 244452, i32 244472, i32 244496, i32 244520, i32 244520, i32 244540, i32 244560, i32 244720, i32 244752, i32 244776, i32 244776, i32 244796, i32 244816, i32 244976, i32 244988, i32 245760, i32 245808, i32 246016, i32 246084, i32 246160, i32 246176, i32 246184, i32 246200, i32 246212, i32 246216, i32 246224, i32 246224, i32 246272, i32 246552, i32 246784, i32 246964, i32 246976, i32 247084, i32 247104, i32 247324, i32 247808, i32 247848, i32 247860, i32 247860, i32 248000, i32 248072, i32 248080, i32 248236, i32 248320, i32 248340, i32 248348, i32 248364, i32 248388, i32 248400, i32 248436, i32 248436, i32 248444, i32 248572, i32 248584, i32 248868, i32 249088, i32 249088, i32 249096, i32 249108, i32 249116, i32 249120, i32 249148, i32 249148, i32 249160, i32 249168, i32 250368, i32 250380, i32 250400, i32 250400, i32 250432, i32 250432, i32 251392, i32 251404, i32 252416, i32 252444, i32 253440, i32 253472, i32 253496, i32 253500, i32 253568, i32 253568, i32 253576, i32 253608, i32 253616, i32 253620, i32 253640, i32 253652, i32 253880, i32 253956, i32 254464, i32 254464, i32 254472, i32 254528, i32 254536, i32 254592, i32 254600, i32 254656, i32 254664, i32 254716, i32 255488, i32 255536, i32 256512, i32 256700, i32 256768, i32 256784, i32 256800, i32 256816, i32 256832, i32 256848, i32 256864, i32 256880, i32 258048, i32 258088, i32 258096, i32 258120, i32 258144, i32 258152, i32 258160, i32 258204, i32 258288, i32 258344, i32 258352, i32 258376, i32 258400, i32 258408, i32 258416, i32 258460, i32 258544, i32 258616, i32 258624, i32 258624, i32 258632, i32 258640, i32 258652, i32 258660, i32 258672, i32 258744, i32 258752, i32 258788, i32 258808, i32 258872, i32 258880, i32 258880, i32 258888, i32 258896, i32 258908, i32 258916, i32 258928, i32 259000, i32 259008, i32 259044, i32 259064, i32 259112, i32 259120, i32 259144, i32 259168, i32 259176, i32 259184, i32 259228, i32 259312, i32 259368, i32 259376, i32 259400, i32 259424, i32 259432, i32 259440, i32 259484, i32 259568, i32 259640, i32 259648, i32 259648, i32 259656, i32 259664, i32 259676, i32 259684, i32 259696, i32 259768, i32 259776, i32 259812, i32 259832, i32 259896, i32 259904, i32 259904, i32 259912, i32 259920, i32 259932, i32 259940, i32 259952, i32 260024, i32 260032, i32 260068, i32 260088, i32 260092, i32 260116, i32 260116, i32 260140, i32 260140, i32 260224, i32 260236, i32 260328, i32 260332, i32 260352, i32 260392, i32 260400, i32 260424, i32 260448, i32 260456, i32 260464, i32 260508, i32 260592, i32 260664, i32 260672, i32 260672, i32 260680, i32 260688, i32 260700, i32 260708, i32 260720, i32 260792, i32 260800, i32 260836, i32 260856, i32 260880, i32 260904, i32 260904, i32 260924, i32 260944, i32 261104, i32 261136, i32 261160, i32 261160, i32 261180, i32 261200, i32 261360, i32 261372, i32 262144, i32 262156, i32 262208, i32 262224, i32 262240, i32 262248, i32 262268, i32 262284, i32 262292, i32 262320, i32 262336, i32 262468, i32 262528, i32 262540, i32 262656, i32 262740, i32 262752, i32 262756, i32 262768, i32 262792, i32 262800, i32 262808, i32 262828, i32 262856, i32 262864, i32 262880, i32 262896, i32 262896, i32 262912, i32 262972, i32 263160, i32 263164, i32 267012, i32 267204, i32 267264, i32 267276, i32 267284, i32 267292, i32 267392, i32 267472, i32 278528, i32 278612, i32 278620, i32 278648, i32 278720, i32 278900, i32 278912, i32 278956, i32 278964, i32 278968, i32 278976, i32 279124, i32 279132, i32 279160, i32 279232, i32 279412, i32 279424, i32 279468, i32 279476, i32 279480, i32 279488, i32 279636, i32 279644, i32 279672, i32 279744, i32 279924, i32 279936, i32 279980, i32 279988, i32 279992, i32 280000, i32 280148, i32 280156, i32 280184, i32 280256, i32 280436, i32 280448, i32 280492, i32 280500, i32 280504, i32 280512, i32 280660, i32 280668, i32 280696, i32 280768, i32 280948, i32 280960, i32 281004, i32 281012, i32 281016, i32 281024, i32 281084, i32 282624, i32 282628, i32 282640, i32 282672, i32 282688, i32 282720, i32 282728, i32 282728, i32 282752, i32 282756, i32 282784, i32 282800, i32 283136, i32 283140, i32 283152, i32 283184, i32 283200, i32 283232, i32 283240, i32 283240, i32 283264, i32 283268, i32 283296, i32 283312, i32 286912, i32 286948, i32 290816, i32 290876, i32 290884, i32 290956, i32 291328, i32 291408, i32 291840, i32 291848, i32 291860, i32 291872, i32 292352, i32 292376, i32 292864, i32 292884, i32 294912, i32 294924, i32 294976, i32 294992, i32 295008, i32 295016, i32 295036, i32 295052, i32 295060, i32 295088, i32 295104, i32 295236, i32 295296, i32 295308, i32 295424, i32 295508, i32 295520, i32 295524, i32 295536, i32 295560, i32 295568, i32 295576, i32 295596, i32 295624, i32 295632, i32 295648, i32 295664, i32 295664, i32 295680, i32 295740, i32 295928, i32 295932, i32 299780, i32 299972, i32 300032, i32 300044, i32 300052, i32 300060, i32 300160, i32 300240, i32 311296, i32 311380, i32 311388, i32 311416, i32 311488, i32 311668, i32 311680, i32 311724, i32 311732, i32 311736, i32 311744, i32 311892, i32 311900, i32 311928, i32 312000, i32 312180, i32 312192, i32 312236, i32 312244, i32 312248, i32 312256, i32 312404, i32 312412, i32 312440, i32 312512, i32 312692, i32 312704, i32 312748, i32 312756, i32 312760, i32 312768, i32 312916, i32 312924, i32 312952, i32 313024, i32 313204, i32 313216, i32 313260, i32 313268, i32 313272, i32 313280, i32 313428, i32 313436, i32 313464, i32 313536, i32 313716, i32 313728, i32 313772, i32 313780, i32 313784, i32 313792, i32 313852, i32 315392, i32 315396, i32 315408, i32 315440, i32 315456, i32 315488, i32 315496, i32 315496, i32 315520, i32 315524, i32 315552, i32 315568, i32 315904, i32 315908, i32 315920, i32 315952, i32 315968, i32 316000, i32 316008, i32 316008, i32 316032, i32 316036, i32 316064, i32 316080, i32 319680, i32 319716, i32 323584, i32 323644, i32 323652, i32 323724, i32 324096, i32 324176, i32 324608, i32 324616, i32 324628, i32 324640, i32 325120, i32 325144, i32 325632, i32 325652, i32 327680, i32 327812, i32 327824, i32 327884, i32 328704, i32 328704, i32 329728, i32 329860, i32 329872, i32 329932, i32 330752, i32 330752, i32 331776, i32 331804, i32 332544, i32 332552], [1528 x i8] zeroinitializer }, align 32
@t4_get_regs.t6_reg_ranges = internal constant { [1112 x i32], [1088 x i8] } { [1112 x i32] [i32 4104, i32 4124, i32 4132, i32 4264, i32 4276, i32 4344, i32 4352, i32 4372, i32 4380, i32 4396, i32 4408, i32 4412, i32 4420, i32 4428, i32 4480, i32 4484, i32 4496, i32 4500, i32 4512, i32 4516, i32 4528, i32 4532, i32 4604, i32 4668, i32 4692, i32 4724, i32 4736, i32 4924, i32 6144, i32 6396, i32 12288, i32 12332, i32 12384, i32 12464, i32 12472, i32 12504, i32 12512, i32 12540, i32 12608, i32 13692, i32 13736, i32 13772, i32 13804, i32 13804, i32 13824, i32 22052, i32 22220, i32 22252, i32 22260, i32 22304, i32 22312, i32 22364, i32 22540, i32 22548, i32 22672, i32 22684, i32 22692, i32 22700, i32 22712, i32 22716, i32 22848, i32 22876, i32 22912, i32 22924, i32 22960, i32 22984, i32 22992, i32 23004, i32 23036, i32 23064, i32 23136, i32 23148, i32 23168, i32 23180, i32 23188, i32 23196, i32 23444, i32 23548, i32 23568, i32 24136, i32 24144, i32 24212, i32 24224, i32 24240, i32 24256, i32 24256, i32 24264, i32 24272, i32 24288, i32 24288, i32 24304, i32 24304, i32 24320, i32 24320, i32 24576, i32 24608, i32 24616, i32 24640, i32 24664, i32 24732, i32 24744, i32 24988, i32 30464, i32 30616, i32 30656, i32 30848, i32 30924, i32 30972, i32 31488, i32 31576, i32 31584, i32 31620, i32 31628, i32 31828, i32 32000, i32 32056, i32 32064, i32 32132, i32 32140, i32 32220, i32 32228, i32 32260, i32 32272, i32 32284, i32 32292, i32 32312, i32 32320, i32 32324, i32 32332, i32 32376, i32 32384, i32 32476, i32 32488, i32 32508, i32 36288, i32 36324, i32 36344, i32 36356, i32 36368, i32 36484, i32 36512, i32 36744, i32 36792, i32 36952, i32 36960, i32 36960, i32 36968, i32 37112, i32 37120, i32 37156, i32 37888, i32 38000, i32 38400, i32 38400, i32 38408, i32 38456, i32 38464, i32 38660, i32 38672, i32 38684, i32 38912, i32 38920, i32 38928, i32 39012, i32 39936, i32 40044, i32 40064, i32 40172, i32 40192, i32 40300, i32 40320, i32 40428, i32 40448, i32 40556, i32 40576, i32 40684, i32 40704, i32 40812, i32 40832, i32 40992, i32 53248, i32 53308, i32 53504, i32 53528, i32 53760, i32 53780, i32 53792, i32 53812, i32 53824, i32 53844, i32 53856, i32 53876, i32 53888, i32 53908, i32 53920, i32 53940, i32 53952, i32 53972, i32 53984, i32 54004, i32 54016, i32 54044, i32 57280, i32 57312, i32 57344, i32 61448, i32 61456, i32 61464, i32 61472, i32 61480, i32 69632, i32 69652, i32 69704, i32 69740, i32 69748, i32 69768, i32 69784, i32 69920, i32 69932, i32 70012, i32 70032, i32 70368, i32 70400, i32 70412, i32 73728, i32 73836, i32 102464, i32 102508, i32 102520, i32 102528, i32 102540, i32 102632, i32 102640, i32 102648, i32 102656, i32 102672, i32 102688, i32 102692, i32 102736, i32 102804, i32 102812, i32 102832, i32 102864, i32 102888, i32 102968, i32 103056, i32 103076, i32 103088, i32 103100, i32 103100, i32 103240, i32 103244, i32 103416, i32 103448, i32 103456, i32 103464, i32 103472, i32 103492, i32 103500, i32 103532, i32 103540, i32 103540, i32 103568, i32 103628, i32 103664, i32 103672, i32 105472, i32 105544, i32 105552, i32 105600, i32 105620, i32 105624, i32 105632, i32 105660, i32 105700, i32 105700, i32 105712, i32 105720, i32 105728, i32 105768, i32 105808, i32 105848, i32 105876, i32 105880, i32 105888, i32 105928, i32 105968, i32 106000, i32 106064, i32 106092, i32 106144, i32 106172, i32 106180, i32 106228, i32 106244, i32 106284, i32 106292, i32 106292, i32 106304, i32 106320, i32 106384, i32 106412, i32 106436, i32 106440, i32 106448, i32 106468, i32 106496, i32 106500, i32 106512, i32 106604, i32 106672, i32 106724, i32 106732, i32 106744, i32 106752, i32 106760, i32 106772, i32 106800, i32 106808, i32 106948, i32 107004, i32 107004, i32 122888, i32 122892, i32 122944, i32 122948, i32 122956, i32 122956, i32 123524, i32 123536, i32 123584, i32 123584, i32 123616, i32 123616, i32 123648, i32 123780, i32 123840, i32 123848, i32 123912, i32 123916, i32 123968, i32 123972, i32 123980, i32 123980, i32 124548, i32 124560, i32 124608, i32 124608, i32 124640, i32 124640, i32 124672, i32 124804, i32 124864, i32 124872, i32 124936, i32 124940, i32 124992, i32 124996, i32 125004, i32 125004, i32 125572, i32 125584, i32 125632, i32 125632, i32 125664, i32 125664, i32 125696, i32 125828, i32 125888, i32 125896, i32 125960, i32 125964, i32 126016, i32 126020, i32 126028, i32 126028, i32 126596, i32 126608, i32 126656, i32 126656, i32 126688, i32 126688, i32 126720, i32 126852, i32 126912, i32 126920, i32 126984, i32 126988, i32 127040, i32 127044, i32 127052, i32 127052, i32 127620, i32 127632, i32 127680, i32 127680, i32 127712, i32 127712, i32 127744, i32 127876, i32 127936, i32 127944, i32 128008, i32 128012, i32 128064, i32 128068, i32 128076, i32 128076, i32 128644, i32 128656, i32 128704, i32 128704, i32 128736, i32 128736, i32 128768, i32 128900, i32 128960, i32 128968, i32 129032, i32 129036, i32 129088, i32 129092, i32 129100, i32 129100, i32 129668, i32 129680, i32 129728, i32 129728, i32 129760, i32 129760, i32 129792, i32 129924, i32 129984, i32 129992, i32 130056, i32 130060, i32 130112, i32 130116, i32 130124, i32 130124, i32 130692, i32 130704, i32 130752, i32 130752, i32 130784, i32 130784, i32 130816, i32 130948, i32 131008, i32 131016, i32 196608, i32 196656, i32 196864, i32 196968, i32 197008, i32 197024, i32 197032, i32 197048, i32 197060, i32 197064, i32 197072, i32 197072, i32 197120, i32 197408, i32 197632, i32 197812, i32 197824, i32 197932, i32 197952, i32 198172, i32 198656, i32 198816, i32 198848, i32 198920, i32 198928, i32 199096, i32 199168, i32 199172, i32 199180, i32 199188, i32 199196, i32 199212, i32 199236, i32 199248, i32 199284, i32 199284, i32 199292, i32 199420, i32 199432, i32 199716, i32 199936, i32 199956, i32 199964, i32 199996, i32 200004, i32 200012, i32 200020, i32 200052, i32 200060, i32 200060, i32 200160, i32 200160, i32 200192, i32 200404, i32 200448, i32 200612, i32 200640, i32 200644, i32 200704, i32 200708, i32 200832, i32 200956, i32 201224, i32 201248, i32 201276, i32 201300, i32 201472, i32 201472, i32 201480, i32 201500, i32 201528, i32 201532, i32 201600, i32 201600, i32 201608, i32 201640, i32 201652, i32 201652, i32 201728, i32 201760, i32 201784, i32 201788, i32 201856, i32 201856, i32 201896, i32 201896, i32 201904, i32 201908, i32 201928, i32 201940, i32 203328, i32 203340, i32 203504, i32 203552, i32 203576, i32 203580, i32 203648, i32 203648, i32 203688, i32 203688, i32 203696, i32 203700, i32 203720, i32 203732, i32 205120, i32 205196, i32 205296, i32 205300, i32 205312, i32 205312, i32 205336, i32 205336, i32 205824, i32 205824, i32 205832, i32 205852, i32 206360, i32 206368, i32 206436, i32 206436, i32 206504, i32 206504, i32 206572, i32 206572, i32 207360, i32 207548, i32 207616, i32 207640, i32 207648, i32 207672, i32 207680, i32 207704, i32 207712, i32 207736, i32 207872, i32 207872, i32 207880, i32 207932, i32 208896, i32 208940, i32 208948, i32 208976, i32 208984, i32 208984, i32 208992, i32 209036, i32 209052, i32 209068, i32 209088, i32 209088, i32 209096, i32 209104, i32 209112, i32 209120, i32 209132, i32 209196, i32 209204, i32 209232, i32 209240, i32 209240, i32 209248, i32 209292, i32 209308, i32 209324, i32 209344, i32 209344, i32 209352, i32 209360, i32 209368, i32 209376, i32 209388, i32 209552, i32 209560, i32 209604, i32 209636, i32 209808, i32 209816, i32 209860, i32 209892, i32 209964, i32 209972, i32 210000, i32 210008, i32 210008, i32 210016, i32 210060, i32 210076, i32 210092, i32 210112, i32 210112, i32 210120, i32 210128, i32 210136, i32 210144, i32 210156, i32 210220, i32 210228, i32 210256, i32 210264, i32 210264, i32 210272, i32 210316, i32 210332, i32 210348, i32 210368, i32 210368, i32 210376, i32 210384, i32 210392, i32 210400, i32 210412, i32 210576, i32 210584, i32 210628, i32 210660, i32 210832, i32 210840, i32 210884, i32 210916, i32 210940, i32 210964, i32 210964, i32 211028, i32 211048, i32 211072, i32 211084, i32 211136, i32 211152, i32 211176, i32 211180, i32 211200, i32 211244, i32 211252, i32 211280, i32 211288, i32 211288, i32 211296, i32 211340, i32 211356, i32 211372, i32 211392, i32 211392, i32 211400, i32 211408, i32 211416, i32 211424, i32 211436, i32 211600, i32 211608, i32 211652, i32 211684, i32 211728, i32 211748, i32 211752, i32 211768, i32 211792, i32 211952, i32 211984, i32 212004, i32 212008, i32 212024, i32 212048, i32 212208, i32 212220, i32 212992, i32 213040, i32 213248, i32 213352, i32 213392, i32 213408, i32 213416, i32 213432, i32 213444, i32 213448, i32 213456, i32 213456, i32 213504, i32 213792, i32 214016, i32 214196, i32 214208, i32 214316, i32 214336, i32 214556, i32 215040, i32 215200, i32 215232, i32 215304, i32 215312, i32 215480, i32 215552, i32 215556, i32 215564, i32 215572, i32 215580, i32 215596, i32 215620, i32 215632, i32 215668, i32 215668, i32 215676, i32 215804, i32 215816, i32 216100, i32 216320, i32 216340, i32 216348, i32 216380, i32 216388, i32 216396, i32 216404, i32 216436, i32 216444, i32 216444, i32 216544, i32 216544, i32 216576, i32 216788, i32 216832, i32 216996, i32 217024, i32 217028, i32 217088, i32 217092, i32 217216, i32 217340, i32 217608, i32 217632, i32 217660, i32 217684, i32 217856, i32 217856, i32 217864, i32 217884, i32 217912, i32 217916, i32 217984, i32 217984, i32 217992, i32 218024, i32 218036, i32 218036, i32 218112, i32 218144, i32 218168, i32 218172, i32 218240, i32 218240, i32 218280, i32 218280, i32 218288, i32 218292, i32 218312, i32 218324, i32 219712, i32 219724, i32 219888, i32 219936, i32 219960, i32 219964, i32 220032, i32 220032, i32 220072, i32 220072, i32 220080, i32 220084, i32 220104, i32 220116, i32 221504, i32 221580, i32 221680, i32 221684, i32 221696, i32 221696, i32 221720, i32 221720, i32 222208, i32 222208, i32 222216, i32 222236, i32 222744, i32 222752, i32 222820, i32 222820, i32 222888, i32 222888, i32 222956, i32 222956, i32 223744, i32 223932, i32 224000, i32 224024, i32 224032, i32 224056, i32 224064, i32 224088, i32 224096, i32 224120, i32 224256, i32 224256, i32 224264, i32 224316, i32 225280, i32 225324, i32 225332, i32 225360, i32 225368, i32 225368, i32 225376, i32 225420, i32 225436, i32 225452, i32 225472, i32 225472, i32 225480, i32 225488, i32 225496, i32 225504, i32 225516, i32 225580, i32 225588, i32 225616, i32 225624, i32 225624, i32 225632, i32 225676, i32 225692, i32 225708, i32 225728, i32 225728, i32 225736, i32 225744, i32 225752, i32 225760, i32 225772, i32 225936, i32 225944, i32 225988, i32 226020, i32 226192, i32 226200, i32 226244, i32 226276, i32 226348, i32 226356, i32 226384, i32 226392, i32 226392, i32 226400, i32 226444, i32 226460, i32 226476, i32 226496, i32 226496, i32 226504, i32 226512, i32 226520, i32 226528, i32 226540, i32 226604, i32 226612, i32 226640, i32 226648, i32 226648, i32 226656, i32 226700, i32 226716, i32 226732, i32 226752, i32 226752, i32 226760, i32 226768, i32 226776, i32 226784, i32 226796, i32 226960, i32 226968, i32 227012, i32 227044, i32 227216, i32 227224, i32 227268, i32 227300, i32 227324, i32 227348, i32 227348, i32 227412, i32 227432, i32 227456, i32 227468, i32 227520, i32 227536, i32 227560, i32 227564, i32 227584, i32 227628, i32 227636, i32 227664, i32 227672, i32 227672, i32 227680, i32 227724, i32 227740, i32 227756, i32 227776, i32 227776, i32 227784, i32 227792, i32 227800, i32 227808, i32 227820, i32 227984, i32 227992, i32 228036, i32 228068, i32 228112, i32 228132, i32 228136, i32 228152, i32 228176, i32 228336, i32 228368, i32 228388, i32 228392, i32 228408, i32 228432, i32 228592, i32 228604, i32 262208, i32 262208, i32 262272, i32 262276, i32 262400, i32 262400, i32 262464, i32 262588, i32 262656, i32 262676, i32 262696, i32 262696, i32 262720, i32 262744, i32 262784, i32 262784, i32 262916, i32 262916, i32 262960, i32 262972, i32 267012, i32 267208, i32 267216, i32 267228, i32 267248, i32 267248, i32 267264, i32 267276, i32 267284, i32 267292, i32 267392, i32 267472, i32 278528, i32 278652, i32 278720, i32 278956, i32 278964, i32 279164, i32 279232, i32 279468, i32 279476, i32 279676, i32 279744, i32 279980, i32 279988, i32 280188, i32 280256, i32 280492, i32 280500, i32 280700, i32 280768, i32 281004, i32 281012, i32 281212, i32 281280, i32 281516, i32 281524, i32 281724, i32 281792, i32 282028, i32 282036, i32 282236, i32 282304, i32 282540, i32 282548, i32 282748, i32 282816, i32 283052, i32 283060, i32 283132, i32 284672, i32 284676, i32 284688, i32 284720, i32 284736, i32 284768, i32 284776, i32 284776, i32 284800, i32 284804, i32 284832, i32 284848, i32 285184, i32 285188, i32 285200, i32 285232, i32 285248, i32 285280, i32 285288, i32 285288, i32 285312, i32 285316, i32 285344, i32 285360, i32 286912, i32 286948, i32 290816, i32 290876, i32 290884, i32 290956, i32 291328, i32 291408, i32 291840, i32 291848, i32 291860, i32 291872, i32 292352, i32 292376, i32 292864, i32 292884, i32 292896, i32 292908, i32 327680, i32 327812, i32 327824, i32 327884, i32 328448, i32 328580, i32 328704, i32 328704, i32 329728, i32 329860, i32 329872, i32 329932, i32 330496, i32 330628, i32 330752, i32 330752, i32 331776, i32 331808, i32 331816, i32 331952, i32 332544, i32 332580], [1088 x i8] zeroinitializer }, align 32
@t4_get_regs._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.7, ptr @.str.2, i32 2666, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"t4_get_regs\00", [20 x i8] zeroinitializer }, align 32
@t4_get_regs._entry_ptr = internal global ptr @t4_get_regs._entry, section ".printk_index", align 4
@t4_get_raw_vpd_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.2, i32 2774, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"VPD checksum incorrect or missing\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"t4_get_raw_vpd_params\00", [42 x i8] zeroinitializer }, align 32
@t4_get_raw_vpd_params._entry_ptr = internal global ptr @t4_get_raw_vpd_params._entry, section ".printk_index", align 4
@.str.10 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"SN\00", [29 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"PN\00", [29 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"NA\00", [29 x i8] zeroinitializer }, align 32
@t4_get_raw_vpd_params._entry.13 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.14, ptr @.str.9, ptr @.str.2, i32 2808, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"error reading VPD\0A\00", [45 x i8] zeroinitializer }, align 32
@t4_get_raw_vpd_params._entry_ptr.15 = internal global ptr @t4_get_raw_vpd_params._entry.13, section ".printk_index", align 4
@t4_dump_version_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.16, ptr @.str.17, ptr @.str.2, i32 3296, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Chelsio %s rev %d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"t4_dump_version_info\00", [43 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\016\00", [29 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr = internal global ptr @t4_dump_version_info._entry, section ".printk_index", align 4
@t4_dump_version_info._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.17, ptr @.str.2, i32 3298, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"S/N: %s, P/N: %s\0A\00", [46 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.21 = internal global ptr @t4_dump_version_info._entry.19, section ".printk_index", align 4
@t4_dump_version_info._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.17, ptr @.str.2, i32 3302, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"No firmware loaded\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\014\00", [29 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.25 = internal global ptr @t4_dump_version_info._entry.22, section ".printk_index", align 4
@t4_dump_version_info._entry.26 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.27, ptr @.str.17, ptr @.str.2, i32 3308, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Firmware version: %u.%u.%u.%u\0A\00", [33 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.28 = internal global ptr @t4_dump_version_info._entry.26, section ".printk_index", align 4
@t4_dump_version_info._entry.29 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.30, ptr @.str.17, ptr @.str.2, i32 3314, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"No bootstrap loaded\0A\00", [43 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.31 = internal global ptr @t4_dump_version_info._entry.29, section ".printk_index", align 4
@t4_dump_version_info._entry.32 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.17, ptr @.str.2, i32 3320, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"Bootstrap version: %u.%u.%u.%u\0A\00", [32 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.34 = internal global ptr @t4_dump_version_info._entry.32, section ".printk_index", align 4
@t4_dump_version_info._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.17, ptr @.str.2, i32 3324, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"No TP Microcode loaded\0A\00", [40 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.37 = internal global ptr @t4_dump_version_info._entry.35, section ".printk_index", align 4
@t4_dump_version_info._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.17, ptr @.str.2, i32 3331, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"TP Microcode version: %u.%u.%u.%u\0A\00", [61 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.40 = internal global ptr @t4_dump_version_info._entry.38, section ".printk_index", align 4
@t4_dump_version_info._entry.41 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.17, ptr @.str.2, i32 3335, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"No Expansion ROM loaded\0A\00", [39 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.43 = internal global ptr @t4_dump_version_info._entry.41, section ".printk_index", align 4
@t4_dump_version_info._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.17, ptr @.str.2, i32 3342, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Expansion ROM version: %u.%u.%u.%u\0A\00", [60 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.46 = internal global ptr @t4_dump_version_info._entry.44, section ".printk_index", align 4
@t4_dump_version_info._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.17, ptr @.str.2, i32 3346, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"Serial Configuration version: %#x\0A\00", [61 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.49 = internal global ptr @t4_dump_version_info._entry.47, section ".printk_index", align 4
@t4_dump_version_info._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.17, ptr @.str.2, i32 3350, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"VPD version: %#x\0A\00", [46 x i8] zeroinitializer }, align 32
@t4_dump_version_info._entry_ptr.52 = internal global ptr @t4_dump_version_info._entry.50, section ".printk_index", align 4
@t4_check_fw_version._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.54, ptr @.str.2, i32 3397, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Unsupported chip type, %x\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"t4_check_fw_version\00", [44 x i8] zeroinitializer }, align 32
@t4_check_fw_version._entry_ptr = internal global ptr @t4_check_fw_version._entry, section ".printk_index", align 4
@t4_check_fw_version._entry.55 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.56, ptr @.str.54, ptr @.str.2, i32 3406, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [77 x i8], [51 x i8] } { [77 x i8] c"Card has firmware version %u.%u.%u, minimum supported firmware is %u.%u.%u.\0A\00", [51 x i8] zeroinitializer }, align 32
@t4_check_fw_version._entry_ptr.57 = internal global ptr @t4_check_fw_version._entry.55, section ".printk_index", align 4
@t4_prep_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.58, ptr @.str.59, ptr @.str.2, i32 3482, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"Unable to read card's firmware header: %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"t4_prep_fw\00", [21 x i8] zeroinitializer }, align 32
@t4_prep_fw._entry_ptr = internal global ptr @t4_prep_fw._entry, section ".printk_index", align 4
@t4_prep_fw._entry.60 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.61, ptr @.str.59, ptr @.str.2, i32 3508, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"failed to install firmware: %d\0A\00", [32 x i8] zeroinitializer }, align 32
@t4_prep_fw._entry_ptr.62 = internal global ptr @t4_prep_fw._entry.60, section ".printk_index", align 4
@t4_prep_fw._entry.63 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.59, ptr @.str.2, i32 3535, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [130 x i8], [62 x i8] } { [130 x i8] c"Cannot find a usable firmware: chip state %d, driver compiled with %d.%d.%d.%d, card has %d.%d.%d.%d, filesystem has %d.%d.%d.%d\0A\00", [62 x i8] zeroinitializer }, align 32
@t4_prep_fw._entry_ptr.65 = internal global ptr @t4_prep_fw._entry.63, section ".printk_index", align 4
@t4_load_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.66, ptr @.str.67, ptr @.str.2, i32 3638, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"FW image has no data\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"t4_load_fw\00", [21 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr = internal global ptr @t4_load_fw._entry, section ".printk_index", align 4
@t4_load_fw._entry.68 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.69, ptr @.str.67, ptr @.str.2, i32 3643, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"FW image size not multiple of 512 bytes\0A\00", [55 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr.70 = internal global ptr @t4_load_fw._entry.68, section ".printk_index", align 4
@t4_load_fw._entry.71 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.72, ptr @.str.67, ptr @.str.2, i32 3648, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"FW image size differs from size in FW header\0A\00", [50 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr.73 = internal global ptr @t4_load_fw._entry.71, section ".printk_index", align 4
@t4_load_fw._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.67, ptr @.str.2, i32 3653, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"FW image too large, max is %u bytes\0A\00", [59 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr.76 = internal global ptr @t4_load_fw._entry.74, section ".printk_index", align 4
@t4_load_fw._entry.77 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.78, ptr @.str.67, ptr @.str.2, i32 3664, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"corrupted firmware image, checksum %#x\0A\00", [56 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr.79 = internal global ptr @t4_load_fw._entry.77, section ".printk_index", align 4
@t4_load_fw._entry.80 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.67, ptr @.str.2, i32 3699, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"firmware download failed, error %d\0A\00", [60 x i8] zeroinitializer }, align 32
@t4_load_fw._entry_ptr.82 = internal global ptr @t4_load_fw._entry.80, section ".printk_index", align 4
@t4_load_phy_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str.2, i32 3774, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"PHY Firmware already up-to-date, version %#x\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"t4_load_phy_fw\00", [17 x i8] zeroinitializer }, align 32
@t4_load_phy_fw._entry_ptr = internal global ptr @t4_load_phy_fw._entry, section ".printk_index", align 4
@t4_load_phy_fw._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.84, ptr @.str.2, i32 3832, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [74 x i8], [54 x i8] } { [74 x i8] c"PHY Firmware did not update: version on adapter %#x, version flashed %#x\0A\00", [54 x i8] zeroinitializer }, align 32
@t4_load_phy_fw._entry_ptr.87 = internal global ptr @t4_load_phy_fw._entry.85, section ".printk_index", align 4
@t4_link_acaps._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.88, ptr @.str.89, ptr @.str.2, i32 4158, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [71 x i8], [57 x i8] } { [71 x i8] c"Requested Port Capabilities %#x exceed Physical Port Capabilities %#x\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"t4_link_acaps\00", [18 x i8] zeroinitializer }, align 32
@t4_link_acaps._entry_ptr = internal global ptr @t4_link_acaps._entry, section ".printk_index", align 4
@t4_link_l1cfg_core._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.90, ptr @.str.91, ptr @.str.2, i32 4226, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"Requested Port Capabilities %#x rejected, error %d\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"t4_link_l1cfg_core\00", [45 x i8] zeroinitializer }, align 32
@t4_link_l1cfg_core._entry_ptr = internal global ptr @t4_link_l1cfg_core._entry, section ".printk_index", align 4
@t4_load_mtus.avg_pkts = internal constant { [32 x i32], [32 x i8] } { [32 x i32] [i32 2, i32 6, i32 10, i32 14, i32 20, i32 28, i32 40, i32 56, i32 80, i32 112, i32 160, i32 224, i32 320, i32 448, i32 640, i32 896, i32 1281, i32 1792, i32 2560, i32 3584, i32 5120, i32 7168, i32 10240, i32 14336, i32 20480, i32 28672, i32 40960, i32 57344, i32 81920, i32 114688, i32 163840, i32 229376], [32 x i8] zeroinitializer }, align 32
@t4_get_mps_bg_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.92, ptr @.str.93, ptr @.str.2, i32 6148, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"MPS Port Index %d >= Nports %d\0A\00", [32 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"t4_get_mps_bg_map\00", [46 x i8] zeroinitializer }, align 32
@t4_get_mps_bg_map._entry_ptr = internal global ptr @t4_get_mps_bg_map._entry, section ".printk_index", align 4
@t4_get_tp_ch_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.94, ptr @.str.95, ptr @.str.2, i32 6244, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"TP Port Index %d >= Nports %d\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"t4_get_tp_ch_map\00", [47 x i8] zeroinitializer }, align 32
@t4_get_tp_ch_map._entry_ptr = internal global ptr @t4_get_tp_ch_map._entry, section ".printk_index", align 4
@t4_get_tp_ch_map._entry.96 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.97, ptr @.str.95, ptr @.str.2, i32 6271, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"Need TP Channel Map for Chip %0x, Nports %d\0A\00", [51 x i8] zeroinitializer }, align 32
@t4_get_tp_ch_map._entry_ptr.98 = internal global ptr @t4_get_tp_ch_map._entry.96, section ".printk_index", align 4
@t4_get_port_type_description.port_type_description = internal constant { [23 x ptr], [36 x i8] } { [23 x ptr] [ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121], [36 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Fiber_XFI\00", [22 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"Fiber_XAUI\00", [21 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"BT_SGMII\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"BT_XFI\00", [25 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BT_XAUI\00", [24 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"KX4\00", [28 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"CX4\00", [28 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"KX\00", [29 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"KR\00", [29 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"SFP\00", [28 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"BP_AP\00", [26 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"BP4_AP\00", [25 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"QSFP_10G\00", [23 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"QSA\00", [28 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"QSFP\00", [27 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"BP40_BA\00", [24 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"KR4_100G\00", [23 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CR4_QSFP\00", [23 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"CR_QSFP\00", [24 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"CR2_QSFP\00", [23 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"SFP28\00", [26 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"KR_SFP28\00", [23 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"KR_XLAUI\00", [23 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"UNKNOWN\00", [24 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state.t4_decode = internal constant { [35 x ptr], [52 x i8] } { [35 x ptr] [ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157], [52 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"IDMA_IDLE\00", [22 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IDMA_PUSH_MORE_CPL_FIFO\00", [40 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"IDMA_PUSH_CPL_MSG_HEADER_TO_FIFO\00", [63 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Not used\00", [23 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IDMA_PHYSADDR_SEND_PCIEHDR\00", [37 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"IDMA_PHYSADDR_SEND_PAYLOAD_FIRST\00", [63 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IDMA_PHYSADDR_SEND_PAYLOAD\00", [37 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IDMA_SEND_FIFO_TO_IMSG\00", [41 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IDMA_FL_REQ_DATA_FL_PREP\00", [39 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"IDMA_FL_REQ_DATA_FL\00", [44 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"IDMA_FL_DROP\00", [19 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IDMA_FL_H_REQ_HEADER_FL\00", [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IDMA_FL_H_SEND_PCIEHDR\00", [41 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IDMA_FL_H_PUSH_CPL_FIFO\00", [40 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"IDMA_FL_H_SEND_CPL\00", [45 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"IDMA_FL_H_SEND_IP_HDR_FIRST\00", [36 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IDMA_FL_H_SEND_IP_HDR\00", [42 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"IDMA_FL_H_REQ_NEXT_HEADER_FL\00", [35 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"IDMA_FL_H_SEND_NEXT_PCIEHDR\00", [36 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"IDMA_FL_H_SEND_IP_HDR_PADDING\00", [34 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"IDMA_FL_D_SEND_PCIEHDR\00", [41 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"IDMA_FL_D_SEND_CPL_AND_IP_HDR\00", [34 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IDMA_FL_D_REQ_NEXT_DATA_FL\00", [37 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IDMA_FL_SEND_PCIEHDR\00", [43 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IDMA_FL_PUSH_CPL_FIFO\00", [42 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IDMA_FL_SEND_CPL\00", [47 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"IDMA_FL_SEND_PAYLOAD_FIRST\00", [37 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IDMA_FL_SEND_PAYLOAD\00", [43 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"IDMA_FL_REQ_NEXT_DATA_FL\00", [39 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IDMA_FL_SEND_NEXT_PCIEHDR\00", [38 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"IDMA_FL_SEND_PADDING\00", [43 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"IDMA_FL_SEND_COMPLETION_TO_IMSG\00", [32 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IDMA_FL_SEND_FIFO_TO_IMSG\00", [38 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"IDMA_FL_REQ_DATAFL_DONE\00", [40 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"IDMA_FL_REQ_HEADERFL_DONE\00", [38 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state.t5_decode = internal constant { [33 x ptr], [60 x i8] } { [33 x ptr] [ptr @.str.123, ptr @.str.158, ptr @.str.124, ptr @.str.125, ptr @.str.159, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @.str.133, ptr @.str.160, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154], [60 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"IDMA_ALMOST_IDLE\00", [47 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"IDMA_SGEFLRFLUSH_SEND_PCIEHDR\00", [34 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"IDMA_FL_DROP_SEND_INC\00", [42 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.5, ptr @.str.161, ptr @.str.2, i32 6734, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"t4_sge_decode_idma_state\00", [39 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state._entry_ptr = internal global ptr @t4_sge_decode_idma_state._entry, section ".printk_index", align 4
@t4_sge_decode_idma_state._entry.162 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.163, ptr @.str.161, ptr @.str.2, i32 6747, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"idma state %s\0A\00", [17 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state._entry_ptr.164 = internal global ptr @t4_sge_decode_idma_state._entry.162, section ".printk_index", align 4
@t4_sge_decode_idma_state._entry.165 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.161, ptr @.str.2, i32 6749, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"idma state %d unknown\0A\00", [41 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state._entry_ptr.167 = internal global ptr @t4_sge_decode_idma_state._entry.165, section ".printk_index", align 4
@t4_sge_decode_idma_state._entry.168 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.169, ptr @.str.161, ptr @.str.2, i32 6753, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"SGE register %#x value %#x\0A\00", [36 x i8] zeroinitializer }, align 32
@t4_sge_decode_idma_state._entry_ptr.170 = internal global ptr @t4_sge_decode_idma_state._entry.168, section ".printk_index", align 4
@t4_handle_get_port_info._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.171, ptr @.str.172, ptr @.str.2, i32 8613, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Handle Port Information: Bad Command/Action %#x\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"t4_handle_get_port_info\00", [40 x i8] zeroinitializer }, align 32
@t4_handle_get_port_info._entry_ptr = internal global ptr @t4_handle_get_port_info._entry, section ".printk_index", align 4
@t4_handle_get_port_info._rs = internal global { %struct.ratelimit_state, [60 x i8] } { %struct.ratelimit_state { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.173, i8 0, i8 2, i8 0, i32 0, i32 0 } }, i32 500, i32 10, i32 0, i32 0, i32 0, i32 0 }, [60 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"_rs.lock\00", [23 x i8] zeroinitializer }, align 32
@t4_handle_get_port_info._entry.174 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.175, ptr @.str.172, ptr @.str.2, i32 8683, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Port %d link down, reason: %s\0A\00", [33 x i8] zeroinitializer }, align 32
@t4_handle_get_port_info._entry_ptr.176 = internal global ptr @t4_handle_get_port_info._entry.174, section ".printk_index", align 4
@t4_handle_get_port_info._entry.177 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.178, ptr @.str.172, ptr @.str.2, i32 8734, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.178 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"Attempt to update new Transceiver Module settings failed\0A\00", [38 x i8] zeroinitializer }, align 32
@t4_handle_get_port_info._entry_ptr.179 = internal global ptr @t4_handle_get_port_info._entry.177, section ".printk_index", align 4
@t4_handle_fw_rpl._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.180, ptr @.str.181, ptr @.str.2, i32 8870, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.180 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Unknown firmware reply %d\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.181 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"t4_handle_fw_rpl\00", [47 x i8] zeroinitializer }, align 32
@t4_handle_fw_rpl._entry_ptr = internal global ptr @t4_handle_fw_rpl._entry, section ".printk_index", align 4
@t4_prep_adapter._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.182, ptr @.str.183, ptr @.str.2, i32 9122, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.182 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"error %d identifying flash\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.183 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"t4_prep_adapter\00", [16 x i8] zeroinitializer }, align 32
@t4_prep_adapter._entry_ptr = internal global ptr @t4_prep_adapter._entry, section ".printk_index", align 4
@t4_prep_adapter._entry.184 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.185, ptr @.str.183, ptr @.str.2, i32 9173, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.185 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Device %d is not supported\0A\00", [36 x i8] zeroinitializer }, align 32
@t4_prep_adapter._entry_ptr.186 = internal global ptr @t4_prep_adapter._entry.184, section ".printk_index", align 4
@t4_init_tp_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.187, ptr @.str.188, ptr @.str.2, i32 9435, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.187 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Current filter mode/mask 0x%x:0x%x\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.188 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"t4_init_tp_params\00", [46 x i8] zeroinitializer }, align 32
@t4_init_tp_params._entry_ptr = internal global ptr @t4_init_tp_params._entry, section ".printk_index", align 4
@t4_init_tp_params._entry.189 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.190, ptr @.str.188, ptr @.str.2, i32 9442, ptr @.str.18, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.190 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"Failed to read filter mode/mask via fw api, using indirect-reg-read\0A\00", [59 x i8] zeroinitializer }, align 32
@t4_init_tp_params._entry_ptr.191 = internal global ptr @t4_init_tp_params._entry.189, section ".printk_index", align 4
@t4_idma_monitor._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.192, ptr @.str.193, ptr @.str.2, i32 10101, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.192 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"SGE idma%d, queue %u, resumed after %d seconds\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.193 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"t4_idma_monitor\00", [16 x i8] zeroinitializer }, align 32
@t4_idma_monitor._entry_ptr = internal global ptr @t4_idma_monitor._entry, section ".printk_index", align 4
@t4_idma_monitor._entry.194 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.195, ptr @.str.193, ptr @.str.2, i32 10148, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.195 = internal constant { [94 x i8], [34 x i8] } { [94 x i8] c"SGE idma%u, queue %u, potentially stuck in state %u for %d seconds (debug0=%#x, debug11=%#x)\0A\00", [34 x i8] zeroinitializer }, align 32
@t4_idma_monitor._entry_ptr.196 = internal global ptr @t4_idma_monitor._entry.194, section ".printk_index", align 4
@t4_load_cfg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.197, ptr @.str.198, ptr @.str.2, i32 10177, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.197 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"cfg file too large, max is %u bytes\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.198 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"t4_load_cfg\00", [20 x i8] zeroinitializer }, align 32
@t4_load_cfg._entry_ptr = internal global ptr @t4_load_cfg._entry, section ".printk_index", align 4
@t4_load_cfg._entry.199 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.200, ptr @.str.198, ptr @.str.2, i32 10208, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.200 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"config file %s failed %d\0A\00", [38 x i8] zeroinitializer }, align 32
@t4_load_cfg._entry_ptr.201 = internal global ptr @t4_load_cfg._entry.199, section ".printk_index", align 4
@.str.202 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"clear\00", [26 x i8] zeroinitializer }, align 32
@.str.203 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"download\00", [23 x i8] zeroinitializer }, align 32
@t4_load_boot._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.204, ptr @.str.205, ptr @.str.2, i32 10590, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.204 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"boot image encroaching on firmware region\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.205 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"t4_load_boot\00", [19 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr = internal global ptr @t4_load_boot._entry, section ".printk_index", align 4
@t4_load_boot._entry.206 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.207, ptr @.str.205, ptr @.str.2, i32 10606, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.207 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"boot image too small/large\0A\00", [36 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr.208 = internal global ptr @t4_load_boot._entry.206, section ".printk_index", align 4
@t4_load_boot._entry.209 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.210, ptr @.str.205, ptr @.str.2, i32 10611, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.210 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"Boot image missing signature\0A\00", [34 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr.211 = internal global ptr @t4_load_boot._entry.209, section ".printk_index", align 4
@t4_load_boot._entry.212 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.213, ptr @.str.205, ptr @.str.2, i32 10617, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.213 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"PCI header missing signature\0A\00", [34 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr.214 = internal global ptr @t4_load_boot._entry.212, section ".printk_index", align 4
@t4_load_boot._entry.215 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.216, ptr @.str.205, ptr @.str.2, i32 10623, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.216 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Vendor ID missing signature\0A\00", [35 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr.217 = internal global ptr @t4_load_boot._entry.215, section ".printk_index", align 4
@t4_load_boot._entry.218 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.219, ptr @.str.205, ptr @.str.2, i32 10678, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.219 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"boot image load failed, error %d\0A\00", [62 x i8] zeroinitializer }, align 32
@t4_load_boot._entry_ptr.220 = internal global ptr @t4_load_boot._entry.218, section ".printk_index", align 4
@t4_load_bootcfg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.221, ptr @.str.222, ptr @.str.2, i32 10721, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.221 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"bootcfg file too large, max is %u bytes\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.222 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"t4_load_bootcfg\00", [16 x i8] zeroinitializer }, align 32
@t4_load_bootcfg._entry_ptr = internal global ptr @t4_load_bootcfg._entry, section ".printk_index", align 4
@t4_load_bootcfg._entry.223 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.224, ptr @.str.222, ptr @.str.2, i32 10727, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.224 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Wrong bootcfg signature\0A\00", [39 x i8] zeroinitializer }, align 32
@t4_load_bootcfg._entry_ptr.225 = internal global ptr @t4_load_bootcfg._entry.223, section ".printk_index", align 4
@t4_load_bootcfg._entry.226 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.227, ptr @.str.222, ptr @.str.2, i32 10769, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.227 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"boot config data %s failed %d\0A\00", [33 x i8] zeroinitializer }, align 32
@t4_load_bootcfg._entry_ptr.228 = internal global ptr @t4_load_bootcfg._entry.226, section ".printk_index", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@fw_asrt._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.229, ptr @.str.230, ptr @.str.2, i32 226, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.229 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"FW assertion at %.16s:%u, val0 %#x, val1 %#x\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.230 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"fw_asrt\00", [24 x i8] zeroinitializer }, align 32
@.str.231 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"\011\00", [29 x i8] zeroinitializer }, align 32
@fw_asrt._entry_ptr = internal global ptr @fw_asrt._entry, section ".printk_index", align 4
@t4_report_fw_error.reason = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239], [32 x i8] zeroinitializer }, align 32
@.str.232 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"Crash\00", [26 x i8] zeroinitializer }, align 32
@.str.233 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"During Device Preparation\00", [38 x i8] zeroinitializer }, align 32
@.str.234 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"During Device Configuration\00", [36 x i8] zeroinitializer }, align 32
@.str.235 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"During Device Initialization\00", [35 x i8] zeroinitializer }, align 32
@.str.236 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"Unexpected Event\00", [47 x i8] zeroinitializer }, align 32
@.str.237 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Insufficient Airflow\00", [43 x i8] zeroinitializer }, align 32
@.str.238 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"Device Shutdown\00", [16 x i8] zeroinitializer }, align 32
@.str.239 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"Reserved\00", [23 x i8] zeroinitializer }, align 32
@t4_report_fw_error._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.240, ptr @.str.241, ptr @.str.2, i32 200, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.240 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"Firmware reports adapter error: %s\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.241 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"t4_report_fw_error\00", [45 x i8] zeroinitializer }, align 32
@t4_report_fw_error._entry_ptr = internal global ptr @t4_report_fw_error._entry, section ".printk_index", align 4
@.str.242 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"incompatible or unusable\00", [39 x i8] zeroinitializer }, align 32
@.str.243 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"older than the version supported with this driver\00", [46 x i8] zeroinitializer }, align 32
@should_install_fs_fw._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.244, ptr @.str.245, ptr @.str.2, i32 3458, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.244 = internal constant { [80 x i8], [48 x i8] } { [80 x i8] c"firmware on card (%u.%u.%u.%u) is %s, installing firmware %u.%u.%u.%u on card.\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.245 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"should_install_fs_fw\00", [43 x i8] zeroinitializer }, align 32
@should_install_fs_fw._entry_ptr = internal global ptr @should_install_fs_fw._entry, section ".printk_index", align 4
@t4_fw_matches_chip._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.246, ptr @.str.247, ptr @.str.2, i32 3612, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.246 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"FW image (%d) is not suitable for this adapter (%d)\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.247 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"t4_fw_matches_chip\00", [45 x i8] zeroinitializer }, align 32
@t4_fw_matches_chip._entry_ptr = internal global ptr @t4_fw_matches_chip._entry, section ".printk_index", align 4
@t4_flash_erase_sectors._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.248, ptr @.str.249, ptr @.str.2, i32 3570, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.248 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"erase of flash sector %d failed, error %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.249 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"t4_flash_erase_sectors\00", [41 x i8] zeroinitializer }, align 32
@t4_flash_erase_sectors._entry_ptr = internal global ptr @t4_flash_erase_sectors._entry, section ".printk_index", align 4
@t4_write_flash._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.250, ptr @.str.251, ptr @.str.2, i32 3091, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.250 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"failed to correctly write the flash page at %#x\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.251 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"t4_write_flash\00", [17 x i8] zeroinitializer }, align 32
@t4_write_flash._entry_ptr = internal global ptr @t4_write_flash._entry, section ".printk_index", align 4
@cim_intr_handler.cim_intr_info = internal constant { [9 x %struct.intr_info], [48 x i8] } { [9 x %struct.intr_info] [%struct.intr_info { i32 2, ptr @.str.252, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2016, ptr @.str.253, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 129024, ptr @.str.254, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 131072, ptr @.str.255, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 262144, ptr @.str.256, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 524288, ptr @.str.257, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1048576, ptr @.str.258, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.259, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.252 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"CIM control register prefetch drop\00", [61 x i8] zeroinitializer }, align 32
@.str.253 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CIM OBQ parity error\00", [43 x i8] zeroinitializer }, align 32
@.str.254 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CIM IBQ parity error\00", [43 x i8] zeroinitializer }, align 32
@.str.255 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"CIM mailbox uP parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.256 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CIM mailbox host parity error\00", [34 x i8] zeroinitializer }, align 32
@.str.257 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"CIM TIEQ outgoing parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.258 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"CIM TIEQ incoming parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.259 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CIM TIMER0 interrupt\00", [43 x i8] zeroinitializer }, align 32
@cim_intr_handler.cim_upintr_info = internal constant { [29 x %struct.intr_info], [112 x i8] } { [29 x %struct.intr_info] [%struct.intr_info { i32 1, ptr @.str.260, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.261, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.262, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.263, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.264, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32, ptr @.str.265, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 64, ptr @.str.266, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 128, ptr @.str.267, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 512, ptr @.str.268, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1024, ptr @.str.269, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2048, ptr @.str.270, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8192, ptr @.str.271, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16384, ptr @.str.272, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.273, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 65536, ptr @.str.274, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 131072, ptr @.str.275, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 262144, ptr @.str.276, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 524288, ptr @.str.277, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1048576, ptr @.str.278, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2097152, ptr @.str.279, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4194304, ptr @.str.280, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8388608, ptr @.str.281, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16777216, ptr @.str.282, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 33554432, ptr @.str.283, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 67108864, ptr @.str.284, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.285, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.286, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.287, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [112 x i8] zeroinitializer }, align 32
@.str.260 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"CIM reserved space access\00", [38 x i8] zeroinitializer }, align 32
@.str.261 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"CIM illegal transaction\00", [40 x i8] zeroinitializer }, align 32
@.str.262 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"CIM illegal write\00", [46 x i8] zeroinitializer }, align 32
@.str.263 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"CIM illegal read\00", [47 x i8] zeroinitializer }, align 32
@.str.264 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"CIM illegal read BE\00", [44 x i8] zeroinitializer }, align 32
@.str.265 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"CIM illegal write BE\00", [43 x i8] zeroinitializer }, align 32
@.str.266 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"CIM single read from boot space\00", [32 x i8] zeroinitializer }, align 32
@.str.267 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"CIM single write to boot space\00", [33 x i8] zeroinitializer }, align 32
@.str.268 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CIM block write to boot space\00", [34 x i8] zeroinitializer }, align 32
@.str.269 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"CIM single read from flash space\00", [63 x i8] zeroinitializer }, align 32
@.str.270 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"CIM single write to flash space\00", [32 x i8] zeroinitializer }, align 32
@.str.271 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"CIM block write to flash space\00", [33 x i8] zeroinitializer }, align 32
@.str.272 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"CIM single EEPROM read\00", [41 x i8] zeroinitializer }, align 32
@.str.273 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"CIM single EEPROM write\00", [40 x i8] zeroinitializer }, align 32
@.str.274 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"CIM block EEPROM read\00", [42 x i8] zeroinitializer }, align 32
@.str.275 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"CIM block EEPROM write\00", [41 x i8] zeroinitializer }, align 32
@.str.276 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"CIM single read from CTL space\00", [33 x i8] zeroinitializer }, align 32
@.str.277 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CIM single write to CTL space\00", [34 x i8] zeroinitializer }, align 32
@.str.278 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CIM block read from CTL space\00", [34 x i8] zeroinitializer }, align 32
@.str.279 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"CIM block write to CTL space\00", [35 x i8] zeroinitializer }, align 32
@.str.280 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CIM single read from PL space\00", [34 x i8] zeroinitializer }, align 32
@.str.281 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"CIM single write to PL space\00", [35 x i8] zeroinitializer }, align 32
@.str.282 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"CIM block read from PL space\00", [35 x i8] zeroinitializer }, align 32
@.str.283 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"CIM block write to PL space\00", [36 x i8] zeroinitializer }, align 32
@.str.284 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"CIM request FIFO overwrite\00", [37 x i8] zeroinitializer }, align 32
@.str.285 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"CIM response FIFO overwrite\00", [36 x i8] zeroinitializer }, align 32
@.str.286 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"CIM PIF timeout\00", [16 x i8] zeroinitializer }, align 32
@.str.287 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"CIM PIF MA timeout\00", [45 x i8] zeroinitializer }, align 32
@t4_handle_intr_status._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.288, ptr @.str.289, ptr @.str.2, i32 4297, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.288 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s (0x%x)\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.289 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"t4_handle_intr_status\00", [42 x i8] zeroinitializer }, align 32
@t4_handle_intr_status._entry_ptr = internal global ptr @t4_handle_intr_status._entry, section ".printk_index", align 4
@t4_handle_intr_status._entry.290 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.288, ptr @.str.289, ptr @.str.2, i32 4300, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@t4_handle_intr_status._entry_ptr.291 = internal global ptr @t4_handle_intr_status._entry.290, section ".printk_index", align 4
@mps_intr_handler.mps_rx_intr_info = internal constant { [2 x %struct.intr_info], [32 x i8] } { [2 x %struct.intr_info] [%struct.intr_info { i32 16777215, ptr @.str.292, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.292 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"MPS Rx parity error\00", [44 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_tx_intr_info = internal constant { [8 x %struct.intr_info], [32 x i8] } { [8 x %struct.intr_info] [%struct.intr_info { i32 15, ptr @.str.293, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.294, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 480, ptr @.str.295, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 7680, ptr @.str.296, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8192, ptr @.str.297, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16384, ptr @.str.298, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.299, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.293 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MPS Tx TP FIFO parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.294 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"MPS Tx NC-SI FIFO parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.295 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"MPS Tx data FIFO parity error\00", [34 x i8] zeroinitializer }, align 32
@.str.296 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"MPS Tx desc FIFO parity error\00", [34 x i8] zeroinitializer }, align 32
@.str.297 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"MPS Tx underflow\00", [47 x i8] zeroinitializer }, align 32
@.str.298 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"MPS Tx SOP/EOP error\00", [43 x i8] zeroinitializer }, align 32
@.str.299 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"MPS Tx framing error\00", [43 x i8] zeroinitializer }, align 32
@mps_intr_handler.t6_mps_tx_intr_info = internal constant { [7 x %struct.intr_info], [48 x i8] } { [7 x %struct.intr_info] [%struct.intr_info { i32 15, ptr @.str.293, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.294, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 480, ptr @.str.295, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 7680, ptr @.str.296, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16384, ptr @.str.298, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.299, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_trc_intr_info = internal constant { [4 x %struct.intr_info], [32 x i8] } { [4 x %struct.intr_info] [%struct.intr_info { i32 15, ptr @.str.300, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 240, ptr @.str.301, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 256, ptr @.str.302, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.300 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MPS TRC filter parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.301 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"MPS TRC packet FIFO parity error\00", [63 x i8] zeroinitializer }, align 32
@.str.302 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"MPS TRC misc parity error\00", [38 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_stat_sram_intr_info = internal constant { [2 x %struct.intr_info], [32 x i8] } { [2 x %struct.intr_info] [%struct.intr_info { i32 2097151, ptr @.str.303, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.303 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"MPS statistics SRAM parity error\00", [63 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_stat_tx_intr_info = internal constant { [2 x %struct.intr_info], [32 x i8] } { [2 x %struct.intr_info] [%struct.intr_info { i32 1048575, ptr @.str.304, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.304 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"MPS statistics Tx FIFO parity error\00", [60 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_stat_rx_intr_info = internal constant { [2 x %struct.intr_info], [32 x i8] } { [2 x %struct.intr_info] [%struct.intr_info { i32 16777215, ptr @.str.305, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.305 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"MPS statistics Rx FIFO parity error\00", [60 x i8] zeroinitializer }, align 32
@mps_intr_handler.mps_cls_intr_info = internal constant { [4 x %struct.intr_info], [32 x i8] } { [4 x %struct.intr_info] [%struct.intr_info { i32 1, ptr @.str.306, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.307, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.308, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.306 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MPS match SRAM parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.307 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MPS match TCAM parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.308 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"MPS hash SRAM parity error\00", [37 x i8] zeroinitializer }, align 32
@ncsi_intr_handler.ncsi_intr_info = internal constant { [5 x %struct.intr_info], [48 x i8] } { [5 x %struct.intr_info] [%struct.intr_info { i32 256, ptr @.str.309, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 128, ptr @.str.310, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.311, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1, ptr @.str.312, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.309 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"NC-SI CIM parity error\00", [41 x i8] zeroinitializer }, align 32
@.str.310 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"NC-SI MPS parity error\00", [41 x i8] zeroinitializer }, align 32
@.str.311 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"NC-SI Tx FIFO parity error\00", [37 x i8] zeroinitializer }, align 32
@.str.312 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"NC-SI Rx FIFO parity error\00", [37 x i8] zeroinitializer }, align 32
@pl_intr_handler.pl_intr_info = internal constant { [3 x %struct.intr_info], [48 x i8] } { [3 x %struct.intr_info] [%struct.intr_info { i32 16, ptr @.str.313, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1, ptr @.str.314, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.313 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"T4 fatal parity error\00", [42 x i8] zeroinitializer }, align 32
@.str.314 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"PL VFID_MAP parity error\00", [39 x i8] zeroinitializer }, align 32
@smb_intr_handler.smb_intr_info = internal constant { [4 x %struct.intr_info], [32 x i8] } { [4 x %struct.intr_info] [%struct.intr_info { i32 2097152, ptr @.str.315, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1048576, ptr @.str.316, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 524288, ptr @.str.317, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.315 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"SMB master Tx FIFO parity error\00", [32 x i8] zeroinitializer }, align 32
@.str.316 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"SMB master Rx FIFO parity error\00", [32 x i8] zeroinitializer }, align 32
@.str.317 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"SMB slave FIFO parity error\00", [36 x i8] zeroinitializer }, align 32
@xgmac_intr_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.318, ptr @.str.319, ptr @.str.2, i32 4960, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.318 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"XGMAC %d Tx FIFO parity error\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.319 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"xgmac_intr_handler\00", [45 x i8] zeroinitializer }, align 32
@xgmac_intr_handler._entry_ptr = internal global ptr @xgmac_intr_handler._entry, section ".printk_index", align 4
@xgmac_intr_handler._entry.320 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.321, ptr @.str.319, ptr @.str.2, i32 4963, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.321 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"XGMAC %d Rx FIFO parity error\0A\00", [33 x i8] zeroinitializer }, align 32
@xgmac_intr_handler._entry_ptr.322 = internal global ptr @xgmac_intr_handler._entry.320, section ".printk_index", align 4
@pcie_intr_handler.sysbus_intr_info = internal constant { [6 x %struct.intr_info], [32 x i8] } { [6 x %struct.intr_info] [%struct.intr_info { i32 -2147483648, ptr @.str.323, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.324, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.325, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 67108864, ptr @.str.326, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8388608, ptr @.str.327, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.323 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RXNP array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.324 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RXPC array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.325 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"RXCIF array parity error\00", [39 x i8] zeroinitializer }, align 32
@.str.326 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"Rx completions control array parity error\00", [54 x i8] zeroinitializer }, align 32
@.str.327 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RXFT array parity error\00", [40 x i8] zeroinitializer }, align 32
@pcie_intr_handler.pcie_port_intr_info = internal constant { [10 x %struct.intr_info], [32 x i8] } { [10 x %struct.intr_info] [%struct.intr_info { i32 1073741824, ptr @.str.328, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.329, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.330, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.331, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 67108864, ptr @.str.332, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 33554432, ptr @.str.333, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2097152, ptr @.str.334, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 262144, ptr @.str.335, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 65536, ptr @.str.336, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.328 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"TXPC array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.329 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"TXNP array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.330 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"TXFT array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.331 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"TXCA array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.332 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"TXCIF array parity error\00", [39 x i8] zeroinitializer }, align 32
@.str.333 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"RXCA array parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.334 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"outbound request TLP discarded\00", [33 x i8] zeroinitializer }, align 32
@.str.335 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"Rx data parity error\00", [43 x i8] zeroinitializer }, align 32
@.str.336 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"Tx uncorrectable data error\00", [36 x i8] zeroinitializer }, align 32
@pcie_intr_handler.pcie_intr_info = internal constant { [31 x %struct.intr_info], [112 x i8] } { [31 x %struct.intr_info] [%struct.intr_info { i32 1, ptr @.str.337, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.338, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.339, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.340, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.341, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32, ptr @.str.342, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 64, ptr @.str.343, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 128, ptr @.str.344, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 256, ptr @.str.345, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 512, ptr @.str.346, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1024, ptr @.str.347, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2048, ptr @.str.348, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4096, ptr @.str.349, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8192, ptr @.str.350, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16384, ptr @.str.351, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.352, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 65536, ptr @.str.353, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 131072, ptr @.str.354, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 262144, ptr @.str.355, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 524288, ptr @.str.356, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1048576, ptr @.str.357, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2097152, ptr @.str.358, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4194304, ptr @.str.359, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8388608, ptr @.str.360, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16777216, ptr @.str.361, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 33554432, ptr @.str.362, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 67108864, ptr @.str.363, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.364, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.365, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.366, i16 -1, i16 0, ptr null }, %struct.intr_info zeroinitializer], [112 x i8] zeroinitializer }, align 32
@.str.337 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"MSI AddrL parity error\00", [41 x i8] zeroinitializer }, align 32
@.str.338 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"MSI AddrH parity error\00", [41 x i8] zeroinitializer }, align 32
@.str.339 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"MSI data parity error\00", [42 x i8] zeroinitializer }, align 32
@.str.340 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"MSI-X AddrL parity error\00", [39 x i8] zeroinitializer }, align 32
@.str.341 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"MSI-X AddrH parity error\00", [39 x i8] zeroinitializer }, align 32
@.str.342 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"MSI-X data parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.343 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"MSI-X DI parity error\00", [42 x i8] zeroinitializer }, align 32
@.str.344 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PCI PIO completion FIFO parity error\00", [59 x i8] zeroinitializer }, align 32
@.str.345 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"PCI PIO request FIFO parity error\00", [62 x i8] zeroinitializer }, align 32
@.str.346 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PCI PCI target tag FIFO parity error\00", [59 x i8] zeroinitializer }, align 32
@.str.347 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCI CMD channel count parity error\00", [61 x i8] zeroinitializer }, align 32
@.str.348 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PCI CMD channel request parity error\00", [59 x i8] zeroinitializer }, align 32
@.str.349 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"PCI CMD channel response parity error\00", [58 x i8] zeroinitializer }, align 32
@.str.350 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCI DMA channel count parity error\00", [61 x i8] zeroinitializer }, align 32
@.str.351 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PCI DMA channel request parity error\00", [59 x i8] zeroinitializer }, align 32
@.str.352 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"PCI DMA channel response parity error\00", [58 x i8] zeroinitializer }, align 32
@.str.353 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCI HMA channel count parity error\00", [61 x i8] zeroinitializer }, align 32
@.str.354 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"PCI HMA channel request parity error\00", [59 x i8] zeroinitializer }, align 32
@.str.355 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"PCI HMA channel response parity error\00", [58 x i8] zeroinitializer }, align 32
@.str.356 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCI config snoop FIFO parity error\00", [61 x i8] zeroinitializer }, align 32
@.str.357 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"PCI FID parity error\00", [43 x i8] zeroinitializer }, align 32
@.str.358 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"PCI INTx clear parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.359 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PCI MA tag parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.360 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"PCI PIO tag parity error\00", [39 x i8] zeroinitializer }, align 32
@.str.361 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PCI Rx completion parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.362 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"PCI Rx write parity error\00", [38 x i8] zeroinitializer }, align 32
@.str.363 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PCI replay buffer parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.364 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"PCI core secondary fault\00", [39 x i8] zeroinitializer }, align 32
@.str.365 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"PCI core primary fault\00", [41 x i8] zeroinitializer }, align 32
@.str.366 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"PCI unexpected split completion error\00", [58 x i8] zeroinitializer }, align 32
@pcie_intr_handler.t5_pcie_intr_info = internal global { [31 x %struct.intr_info], [112 x i8] } { [31 x %struct.intr_info] [%struct.intr_info { i32 1, ptr @.str.367, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.368, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.369, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.340, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.341, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32, ptr @.str.342, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 64, ptr @.str.343, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 128, ptr @.str.370, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 256, ptr @.str.371, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 512, ptr @.str.346, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1024, ptr @.str.372, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2048, ptr @.str.348, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4096, ptr @.str.349, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8192, ptr @.str.373, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16384, ptr @.str.351, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.352, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 65536, ptr @.str.353, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 131072, ptr @.str.354, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 262144, ptr @.str.355, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 524288, ptr @.str.356, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1048576, ptr @.str.357, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2097152, ptr @.str.358, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4194304, ptr @.str.374, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8388608, ptr @.str.360, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16777216, ptr @.str.375, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 33554432, ptr @.str.376, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 67108864, ptr @.str.377, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.378, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.379, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.380, i16 -1, i16 0, ptr null }, %struct.intr_info zeroinitializer], [112 x i8] zeroinitializer }, align 32
@.str.367 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Master Response Read Queue parity error\00", [56 x i8] zeroinitializer }, align 32
@.str.368 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Master Timeout FIFO parity error\00", [63 x i8] zeroinitializer }, align 32
@.str.369 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"MSI-X STI SRAM parity error\00", [36 x i8] zeroinitializer }, align 32
@.str.370 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"PCI PIO completion Group FIFO parity error\00", [53 x i8] zeroinitializer }, align 32
@.str.371 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"PCI PIO request Group FIFO parity error\00", [56 x i8] zeroinitializer }, align 32
@.str.372 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"PCI master tag queue parity error\00", [62 x i8] zeroinitializer }, align 32
@.str.373 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"PCI DMA channel write request parity error\00", [53 x i8] zeroinitializer }, align 32
@.str.374 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PCI MA group FIFO parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.375 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"PCI IP Rx header group parity error\00", [60 x i8] zeroinitializer }, align 32
@.str.376 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"PCI IP Rx data group parity error\00", [62 x i8] zeroinitializer }, align 32
@.str.377 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"PCI IP replay buffer parity error\00", [62 x i8] zeroinitializer }, align 32
@.str.378 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"PCI IP SOT buffer parity error\00", [33 x i8] zeroinitializer }, align 32
@.str.379 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"PCI TRGT1 group FIFOs parity error\00", [61 x i8] zeroinitializer }, align 32
@.str.380 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"Outbound read error\00", [44 x i8] zeroinitializer }, align 32
@mem_intr_handler.name = internal constant { [4 x [7 x i8]], [36 x i8] } { [4 x [7 x i8]] [[7 x i8] c"EDC0\00\00\00", [7 x i8] c"EDC1\00\00\00", [7 x i8] c"MC/MC0\00", [7 x i8] c"MC1\00\00\00\00"], [36 x i8] zeroinitializer }, align 32
@mem_intr_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.381, ptr @.str.382, ptr @.str.2, i32 4858, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.381 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s FIFO parity error\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.382 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"mem_intr_handler\00", [47 x i8] zeroinitializer }, align 32
@mem_intr_handler._entry_ptr = internal global ptr @mem_intr_handler._entry, section ".printk_index", align 4
@mem_intr_handler._entry.383 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.384, ptr @.str.382, ptr @.str.2, i32 4868, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.384 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%u %s correctable ECC data error%s\0A\00", [60 x i8] zeroinitializer }, align 32
@mem_intr_handler._entry_ptr.385 = internal global ptr @mem_intr_handler._entry.383, section ".printk_index", align 4
@.str.386 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"s\00", [30 x i8] zeroinitializer }, align 32
@.str.387 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@mem_intr_handler._entry.388 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.389, ptr @.str.382, ptr @.str.2, i32 4872, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.389 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s uncorrectable ECC data error\0A\00", [63 x i8] zeroinitializer }, align 32
@mem_intr_handler._entry_ptr.390 = internal global ptr @mem_intr_handler._entry.388, section ".printk_index", align 4
@t4_edc_err_read._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.391, ptr @.str.392, ptr @.str.2, i32 455, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.391 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: T4 NOT supported.\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.392 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"t4_edc_err_read\00", [16 x i8] zeroinitializer }, align 32
@t4_edc_err_read._entry_ptr = internal global ptr @t4_edc_err_read._entry, section ".printk_index", align 4
@t4_edc_err_read._entry.393 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.394, ptr @.str.392, ptr @.str.2, i32 459, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.394 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: idx %d NOT supported.\0A\00", [37 x i8] zeroinitializer }, align 32
@t4_edc_err_read._entry_ptr.395 = internal global ptr @t4_edc_err_read._entry.393, section ".printk_index", align 4
@t4_edc_err_read._entry.396 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.397, ptr @.str.392, ptr @.str.2, i32 469, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.397 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"edc%d err addr 0x%x: 0x%x.\0A\00", [36 x i8] zeroinitializer }, align 32
@t4_edc_err_read._entry_ptr.398 = internal global ptr @t4_edc_err_read._entry.396, section ".printk_index", align 4
@t4_edc_err_read._entry.399 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.400, ptr @.str.392, ptr @.str.2, i32 481, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.400 = internal constant { [66 x i8], [62 x i8] } { [66 x i8] c"bist: 0x%x, status %llx %llx %llx %llx %llx %llx %llx %llx %llx.\0A\00", [62 x i8] zeroinitializer }, align 32
@t4_edc_err_read._entry_ptr.401 = internal global ptr @t4_edc_err_read._entry.399, section ".printk_index", align 4
@le_intr_handler.le_intr_info = internal constant { [6 x %struct.intr_info], [32 x i8] } { [6 x %struct.intr_info] [%struct.intr_info { i32 32, ptr @.str.402, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 16, ptr @.str.403, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 64, ptr @.str.404, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 32768, ptr @.str.405, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 65536, ptr @.str.406, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.402 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"LE LIP miss\00", [20 x i8] zeroinitializer }, align 32
@.str.403 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"LE 0 LIP error\00", [17 x i8] zeroinitializer }, align 32
@.str.404 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"LE parity error\00", [16 x i8] zeroinitializer }, align 32
@.str.405 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"LE unknown command\00", [45 x i8] zeroinitializer }, align 32
@.str.406 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"LE request queue parity error\00", [34 x i8] zeroinitializer }, align 32
@le_intr_handler.t6_le_intr_info = internal global { [8 x %struct.intr_info], [32 x i8] } { [8 x %struct.intr_info] [%struct.intr_info { i32 2, ptr @.str.402, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 4, ptr @.str.403, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 4194304, ptr @.str.407, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8192, ptr @.str.404, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.405, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1024, ptr @.str.406, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 134217728, ptr @.str.408, i16 -1, i16 0, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.407 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"LE cmd tid error\00", [47 x i8] zeroinitializer }, align 32
@.str.408 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"LE hash table mem crc error\00", [36 x i8] zeroinitializer }, align 32
@tp_intr_handler.tp_intr_info = internal constant { [3 x %struct.intr_info], [48 x i8] } { [3 x %struct.intr_info] [%struct.intr_info { i32 1073741823, ptr @.str.409, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1073741824, ptr @.str.410, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.409 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"TP parity error\00", [16 x i8] zeroinitializer }, align 32
@.str.410 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"TP out of Tx pages\00", [45 x i8] zeroinitializer }, align 32
@ma_intr_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.411, ptr @.str.412, ptr @.str.2, i32 4889, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.411 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"MA parity error, parity status %#x\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.412 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"ma_intr_handler\00", [16 x i8] zeroinitializer }, align 32
@ma_intr_handler._entry_ptr = internal global ptr @ma_intr_handler._entry, section ".printk_index", align 4
@ma_intr_handler._entry.413 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.411, ptr @.str.412, ptr @.str.2, i32 4894, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@ma_intr_handler._entry_ptr.414 = internal global ptr @ma_intr_handler._entry.413, section ".printk_index", align 4
@ma_intr_handler._entry.415 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.416, ptr @.str.412, ptr @.str.2, i32 4901, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.416 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"MA address wrap-around error by client %u to address %#x\0A\00", [38 x i8] zeroinitializer }, align 32
@ma_intr_handler._entry_ptr.417 = internal global ptr @ma_intr_handler._entry.415, section ".printk_index", align 4
@pmtx_intr_handler.pmtx_intr_info = internal constant { [10 x %struct.intr_info], [32 x i8] } { [10 x %struct.intr_info] [%struct.intr_info { i32 -2147483648, ptr @.str.418, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1073741824, ptr @.str.419, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.420, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.421, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 268435440, ptr @.str.422, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.423, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.424, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.425, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1, ptr @.str.426, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.418 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"PMTX channel 0 pcmd too large\00", [34 x i8] zeroinitializer }, align 32
@.str.419 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"PMTX channel 1 pcmd too large\00", [34 x i8] zeroinitializer }, align 32
@.str.420 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"PMTX channel 2 pcmd too large\00", [34 x i8] zeroinitializer }, align 32
@.str.421 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"PMTX 0-length pcmd\00", [45 x i8] zeroinitializer }, align 32
@.str.422 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"PMTX framing error\00", [45 x i8] zeroinitializer }, align 32
@.str.423 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PMTX oespi parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.424 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"PMTX db_options parity error\00", [35 x i8] zeroinitializer }, align 32
@.str.425 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PMTX icspi parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.426 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"PMTX c_pcmd parity error\00", [39 x i8] zeroinitializer }, align 32
@pmrx_intr_handler.pmrx_intr_info = internal constant { [7 x %struct.intr_info], [48 x i8] } { [7 x %struct.intr_info] [%struct.intr_info { i32 4194304, ptr @.str.427, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4194288, ptr @.str.428, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.429, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.430, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.431, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1, ptr @.str.432, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.427 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"PMRX 0-length pcmd\00", [45 x i8] zeroinitializer }, align 32
@.str.428 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"PMRX framing error\00", [45 x i8] zeroinitializer }, align 32
@.str.429 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PMRX ocspi parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.430 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"PMRX db_options parity error\00", [35 x i8] zeroinitializer }, align 32
@.str.431 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"PMRX iespi parity error\00", [40 x i8] zeroinitializer }, align 32
@.str.432 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"PMRX e_pcmd parity error\00", [39 x i8] zeroinitializer }, align 32
@ulprx_intr_handler.ulprx_intr_info = internal constant { [3 x %struct.intr_info], [48 x i8] } { [3 x %struct.intr_info] [%struct.intr_info { i32 25165824, ptr @.str.433, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8388607, ptr @.str.434, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.433 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"ULPRX context error\00", [44 x i8] zeroinitializer }, align 32
@.str.434 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ULPRX parity error\00", [45 x i8] zeroinitializer }, align 32
@cplsw_intr_handler.cplsw_intr_info = internal constant { [7 x %struct.intr_info], [48 x i8] } { [7 x %struct.intr_info] [%struct.intr_info { i32 32, ptr @.str.435, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 16, ptr @.str.436, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 8, ptr @.str.437, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 4, ptr @.str.438, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2, ptr @.str.439, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 1, ptr @.str.440, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.435 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"CPLSW CIM op_map parity error\00", [34 x i8] zeroinitializer }, align 32
@.str.436 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"CPLSW CIM overflow\00", [45 x i8] zeroinitializer }, align 32
@.str.437 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"CPLSW TP framing error\00", [41 x i8] zeroinitializer }, align 32
@.str.438 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"CPLSW SGE framing error\00", [40 x i8] zeroinitializer }, align 32
@.str.439 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"CPLSW CIM framing error\00", [40 x i8] zeroinitializer }, align 32
@.str.440 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"CPLSW no-switch error\00", [42 x i8] zeroinitializer }, align 32
@sge_intr_handler.sge_intr_info = internal constant { [13 x %struct.intr_info], [48 x i8] } { [13 x %struct.intr_info] [%struct.intr_info { i32 4194304, ptr @.str.441, i16 -1, i16 1, ptr null }, %struct.intr_info { i32 2097152, ptr @.str.442, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 524288, ptr @.str.443, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 128, ptr null, i16 -1, i16 0, ptr @t4_db_full }, %struct.intr_info { i32 196608, ptr @.str.444, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 32768, ptr @.str.445, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 16384, ptr @.str.446, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 8192, ptr @.str.447, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 4096, ptr @.str.448, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 1024, ptr @.str.449, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 32, ptr @.str.450, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 16, ptr @.str.451, i16 -1, i16 0, ptr null }, %struct.intr_info zeroinitializer], [48 x i8] zeroinitializer }, align 32
@.str.441 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"SGE received CPL exceeding IQE size\00", [60 x i8] zeroinitializer }, align 32
@.str.442 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"SGE GTS CIDX increment too large\00", [63 x i8] zeroinitializer }, align 32
@.str.443 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"SGE received 0-length CPL\00", [38 x i8] zeroinitializer }, align 32
@.str.444 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"SGE IQID > 1023 received CPL for FL\00", [60 x i8] zeroinitializer }, align 32
@.str.445 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"SGE DBP 3 pidx increment too large\00", [61 x i8] zeroinitializer }, align 32
@.str.446 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"SGE DBP 2 pidx increment too large\00", [61 x i8] zeroinitializer }, align 32
@.str.447 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"SGE DBP 1 pidx increment too large\00", [61 x i8] zeroinitializer }, align 32
@.str.448 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"SGE DBP 0 pidx increment too large\00", [61 x i8] zeroinitializer }, align 32
@.str.449 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"SGE too many priority ingress contexts\00", [57 x i8] zeroinitializer }, align 32
@.str.450 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SGE illegal ingress QID\00", [40 x i8] zeroinitializer }, align 32
@.str.451 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"SGE illegal egress QID\00", [41 x i8] zeroinitializer }, align 32
@sge_intr_handler.t4t5_sge_intr_info = internal global { [4 x %struct.intr_info], [32 x i8] } { [4 x %struct.intr_info] [%struct.intr_info { i32 262144, ptr null, i16 -1, i16 0, ptr @t4_db_dropped }, %struct.intr_info { i32 256, ptr null, i16 -1, i16 0, ptr @t4_db_full }, %struct.intr_info { i32 512, ptr @.str.452, i16 -1, i16 0, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.452 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"SGE too many priority egress contexts\00", [58 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.453, ptr @.str.454, ptr @.str.2, i32 4489, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.453 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SGE Cause1 Parity Error %#x\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.454 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"sge_intr_handler\00", [47 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry_ptr = internal global ptr @sge_intr_handler._entry, section ".printk_index", align 4
@sge_intr_handler._entry.455 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.456, ptr @.str.454, ptr @.str.2, i32 4496, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.456 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SGE Cause2 Parity Error %#x\0A\00", [35 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry_ptr.457 = internal global ptr @sge_intr_handler._entry.455, section ".printk_index", align 4
@sge_intr_handler._entry.458 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.459, ptr @.str.454, ptr @.str.2, i32 4506, ptr @.str.231, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.459 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"SGE Cause5 Parity Error %#x\0A\00", [35 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry_ptr.460 = internal global ptr @sge_intr_handler._entry.458, section ".printk_index", align 4
@sge_intr_handler._entry.461 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.462, ptr @.str.454, ptr @.str.2, i32 4518, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.462 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"SGE error for queue %u\0A\00", [40 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry_ptr.463 = internal global ptr @sge_intr_handler._entry.461, section ".printk_index", align 4
@sge_intr_handler._entry.464 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.465, ptr @.str.454, ptr @.str.2, i32 4521, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.465 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"SGE UNCAPTURED_ERROR set (clearing)\0A\00", [59 x i8] zeroinitializer }, align 32
@sge_intr_handler._entry_ptr.466 = internal global ptr @sge_intr_handler._entry.464, section ".printk_index", align 4
@ulptx_intr_handler.ulptx_intr_info = internal constant { [6 x %struct.intr_info], [32 x i8] } { [6 x %struct.intr_info] [%struct.intr_info { i32 -2147483648, ptr @.str.467, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 1073741824, ptr @.str.468, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 536870912, ptr @.str.469, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 268435456, ptr @.str.470, i16 -1, i16 0, ptr null }, %struct.intr_info { i32 268435455, ptr @.str.471, i16 -1, i16 1, ptr null }, %struct.intr_info zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.467 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"ULPTX channel 3 PBL out of bounds\00", [62 x i8] zeroinitializer }, align 32
@.str.468 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"ULPTX channel 2 PBL out of bounds\00", [62 x i8] zeroinitializer }, align 32
@.str.469 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"ULPTX channel 1 PBL out of bounds\00", [62 x i8] zeroinitializer }, align 32
@.str.470 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"ULPTX channel 0 PBL out of bounds\00", [62 x i8] zeroinitializer }, align 32
@.str.471 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"ULPTX parity error\00", [45 x i8] zeroinitializer }, align 32
@compute_mps_bg_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.472, ptr @.str.473, ptr @.str.2, i32 6126, ptr @.str.3, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.472 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"Need MPS Buffer Group Map for Chip %0x, Nports %d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.473 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"compute_mps_bg_map\00", [45 x i8] zeroinitializer }, align 32
@compute_mps_bg_map._entry_ptr = internal global ptr @compute_mps_bg_map._entry, section ".printk_index", align 4
@t4_link_down_rc_str.reason = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.239, ptr @.str.237, ptr @.str.477, ptr @.str.478, ptr @.str.239], [32 x i8] zeroinitializer }, align 32
@.str.474 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"Link Down\00", [22 x i8] zeroinitializer }, align 32
@.str.475 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Remote Fault\00", [19 x i8] zeroinitializer }, align 32
@.str.476 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"Auto-negotiation Failure\00", [39 x i8] zeroinitializer }, align 32
@.str.477 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"Unable To Determine Reason\00", [37 x i8] zeroinitializer }, align 32
@.str.478 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"No RX Signal Detected\00", [42 x i8] zeroinitializer }, align 32
@t4_get_flash_params._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.480, ptr @.str.481, ptr @.str.2, i32 9088, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.480 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"Unknown Flash Part, ID = %#x, assuming 4MB\0A\00", [52 x i8] zeroinitializer }, align 32
@.str.481 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"t4_get_flash_params\00", [44 x i8] zeroinitializer }, align 32
@t4_get_flash_params._entry_ptr = internal global ptr @t4_get_flash_params._entry, section ".printk_index", align 4
@t4_get_flash_params._entry.482 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.483, ptr @.str.481, ptr @.str.2, i32 9099, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.483 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"WARNING: Flash Part ID %#x, size %#x < %#x\0A\00", [52 x i8] zeroinitializer }, align 32
@t4_get_flash_params._entry_ptr.484 = internal global ptr @t4_get_flash_params._entry.482, section ".printk_index", align 4
@t4_get_tp_e2c_map._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.485, ptr @.str.486, ptr @.str.2, i32 6211, ptr @.str.24, ptr @.str.4 }, [40 x i8] zeroinitializer }, align 32
@.str.485 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"TP E2C Channel Port Index %d >= Nports %d\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.486 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"t4_get_tp_e2c_map\00", [46 x i8] zeroinitializer }, align 32
@t4_get_tp_e2c_map._entry_ptr = internal global ptr @t4_get_tp_e2c_map._entry, section ".printk_index", align 4
@switch.table.t4_get_regs_len = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 163840, i32 339968, i32 339968], [20 x i8] zeroinitializer }, align 32
@switch.table.t4_get_regs = internal constant { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @t4_get_regs.t4_reg_ranges, ptr @t4_get_regs.t5_reg_ranges, ptr @t4_get_regs.t6_reg_ranges], [20 x i8] zeroinitializer }, align 32
@switch.table.t4_get_regs.487 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 912, i32 1522, i32 1112], [20 x i8] zeroinitializer }, align 32
@switch.table.t4_prep_adapter = internal constant { [15 x i32], [36 x i8] } { [15 x i32] [i32 1048576, i32 2097152, i32 4194304, i32 8388608, i32 16777216, i32 33554432, i32 1048576, i32 1048576, i32 1048576, i32 1048576, i32 1048576, i32 1048576, i32 67108864, i32 134217728, i32 268435456], [36 x i8] zeroinitializer }, align 32
@switch.table.t4_prep_adapter.488 = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 16384, i32 24576, i32 0], [20 x i8] zeroinitializer }, align 32
@switch.table.t4_prep_adapter.489 = internal constant { [3 x i16], [26 x i8] } { [3 x i16] [i16 336, i16 512, i16 512], [26 x i8] zeroinitializer }, align 32
@switch.table.t4_prep_adapter.490 = internal constant { [3 x i16], [26 x i8] } { [3 x i16] [i16 128, i16 128, i16 256], [26 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.491 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 4]
@__sancov_gen_cov_switch_values.492 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967280, i64 4294967285]
@__sancov_gen_cov_switch_values.493 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967280, i64 4294967285]
@__sancov_gen_cov_switch_values.494 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967280, i64 4294967285]
@__sancov_gen_cov_switch_values.495 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.496 = internal global [5 x i64] [i64 3, i64 8, i64 64, i64 80, i64 96]
@__sancov_gen_cov_switch_values.497 = internal global [5 x i64] [i64 3, i64 8, i64 64, i64 80, i64 96]
@__sancov_gen_cov_switch_values.498 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.499 = internal global [5 x i64] [i64 3, i64 32, i64 32280, i64 32320, i64 32336]
@__sancov_gen_cov_switch_values.500 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.501 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.502 = internal global [5 x i64] [i64 3, i64 32, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.503 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 4]
@__sancov_gen_cov_switch_values.504 = internal global [4 x i64] [i64 2, i64 32, i64 4294967186, i64 4294967280]
@__sancov_gen_cov_switch_values.505 = internal global [6 x i64] [i64 4, i64 32, i64 2, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.506 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967284]
@__sancov_gen_cov_switch_values.507 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967284]
@__sancov_gen_cov_switch_values.508 = internal global [4 x i64] [i64 2, i64 16, i64 3, i64 10]
@__sancov_gen_cov_switch_values.509 = internal global [4 x i64] [i64 2, i64 16, i64 3, i64 10]
@__sancov_gen_cov_switch_values.510 = internal global [4 x i64] [i64 2, i64 32, i64 4008636142, i64 4294967295]
@__sancov_gen_cov_switch_values.511 = internal global [6 x i64] [i64 4, i64 8, i64 32, i64 157, i64 194, i64 239]
@__sancov_gen_cov_switch_values.512 = internal global [4 x i64] [i64 2, i64 8, i64 22, i64 23]
@__sancov_gen_cov_switch_values.513 = internal global [4 x i64] [i64 2, i64 8, i64 23, i64 24]
@__sancov_gen_cov_switch_values.514 = internal global [4 x i64] [i64 2, i64 8, i64 23, i64 24]
@__sancov_gen_cov_switch_values.515 = internal global [12 x i64] [i64 10, i64 32, i64 1, i64 2, i64 4, i64 8, i64 16, i64 32, i64 64, i64 128, i64 256, i64 512]
@__sancov_gen_cov_switch_values.516 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.517 = internal global [4 x i64] [i64 2, i64 8, i64 0, i64 3]
@___asan_gen_.518 = private unnamed_addr constant [6 x i8] c"delay\00", align 1
@___asan_gen_.520 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 285, i32 19 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 432, i32 2 }
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 841, i32 2 }
@___asan_gen_.548 = private unnamed_addr constant [14 x i8] c"t4_reg_ranges\00", align 1
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 858, i32 28 }
@___asan_gen_.551 = private unnamed_addr constant [14 x i8] c"t5_reg_ranges\00", align 1
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 1317, i32 28 }
@___asan_gen_.554 = private unnamed_addr constant [14 x i8] c"t6_reg_ranges\00", align 1
@___asan_gen_.556 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2081, i32 28 }
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2665, i32 3 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2774, i32 3 }
@___asan_gen_.574 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2780, i32 9 }
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2786, i32 9 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2791, i32 51 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 2808, i32 3 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3294, i32 2 }
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3297, i32 2 }
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3302, i32 3 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3304, i32 3 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3314, i32 3 }
@___asan_gen_.631 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3316, i32 3 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3324, i32 3 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3326, i32 3 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3335, i32 3 }
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3337, i32 3 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3345, i32 2 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3349, i32 2 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3396, i32 3 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3403, i32 3 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3481, i32 3 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3507, i32 4 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3525, i32 3 }
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3638, i32 3 }
@___asan_gen_.718 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3642, i32 3 }
@___asan_gen_.724 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3647, i32 3 }
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3652, i32 3 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3663, i32 3 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3698, i32 3 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3773, i32 4 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3829, i32 4 }
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4157, i32 3 }
@___asan_gen_.775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4224, i32 3 }
@___asan_gen_.776 = private unnamed_addr constant [9 x i8] c"avg_pkts\00", align 1
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 5851, i32 28 }
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6147, i32 3 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6243, i32 3 }
@___asan_gen_.802 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6270, i32 2 }
@___asan_gen_.803 = private unnamed_addr constant [22 x i8] c"port_type_description\00", align 1
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6281, i32 27 }
@___asan_gen_.808 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6282, i32 3 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6283, i32 3 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6284, i32 3 }
@___asan_gen_.817 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6285, i32 3 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6286, i32 3 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6287, i32 3 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6288, i32 3 }
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6289, i32 3 }
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6290, i32 3 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6291, i32 3 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6292, i32 3 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6293, i32 3 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6294, i32 3 }
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6295, i32 3 }
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6296, i32 3 }
@___asan_gen_.853 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6297, i32 3 }
@___asan_gen_.856 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6298, i32 3 }
@___asan_gen_.859 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6299, i32 3 }
@___asan_gen_.862 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6300, i32 3 }
@___asan_gen_.865 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6301, i32 3 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6302, i32 3 }
@___asan_gen_.871 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6303, i32 3 }
@___asan_gen_.874 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6304, i32 3 }
@___asan_gen_.877 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6309, i32 9 }
@___asan_gen_.878 = private unnamed_addr constant [10 x i8] c"t4_decode\00", align 1
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6598, i32 28 }
@___asan_gen_.883 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6599, i32 3 }
@___asan_gen_.886 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6600, i32 3 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6601, i32 3 }
@___asan_gen_.892 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6602, i32 3 }
@___asan_gen_.895 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6603, i32 3 }
@___asan_gen_.898 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6604, i32 3 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6605, i32 3 }
@___asan_gen_.904 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6606, i32 3 }
@___asan_gen_.907 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6607, i32 3 }
@___asan_gen_.910 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6608, i32 3 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6609, i32 3 }
@___asan_gen_.916 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6610, i32 3 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6611, i32 3 }
@___asan_gen_.922 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6612, i32 3 }
@___asan_gen_.925 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6613, i32 3 }
@___asan_gen_.928 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6614, i32 3 }
@___asan_gen_.931 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6615, i32 3 }
@___asan_gen_.934 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6616, i32 3 }
@___asan_gen_.937 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6617, i32 3 }
@___asan_gen_.940 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6618, i32 3 }
@___asan_gen_.943 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6619, i32 3 }
@___asan_gen_.946 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6620, i32 3 }
@___asan_gen_.949 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6621, i32 3 }
@___asan_gen_.952 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6622, i32 3 }
@___asan_gen_.955 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6623, i32 3 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6624, i32 3 }
@___asan_gen_.961 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6625, i32 3 }
@___asan_gen_.964 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6626, i32 3 }
@___asan_gen_.967 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6627, i32 3 }
@___asan_gen_.970 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6628, i32 3 }
@___asan_gen_.973 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6629, i32 3 }
@___asan_gen_.976 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6630, i32 3 }
@___asan_gen_.979 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6631, i32 3 }
@___asan_gen_.982 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6632, i32 3 }
@___asan_gen_.985 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6633, i32 3 }
@___asan_gen_.986 = private unnamed_addr constant [10 x i8] c"t5_decode\00", align 1
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6635, i32 28 }
@___asan_gen_.991 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6637, i32 3 }
@___asan_gen_.994 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6640, i32 3 }
@___asan_gen_.997 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6647, i32 3 }
@___asan_gen_.1003 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6733, i32 3 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6747, i32 3 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6749, i32 3 }
@___asan_gen_.1021 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6752, i32 3 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8612, i32 3 }
@___asan_gen_.1031 = private unnamed_addr constant [4 x i8] c"_rs\00", align 1
@___asan_gen_.1042 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8680, i32 4 }
@___asan_gen_.1048 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8733, i32 4 }
@___asan_gen_.1057 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8869, i32 3 }
@___asan_gen_.1066 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9122, i32 3 }
@___asan_gen_.1072 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9172, i32 3 }
@___asan_gen_.1081 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9432, i32 3 }
@___asan_gen_.1087 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9441, i32 3 }
@___asan_gen_.1096 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10098, i32 5 }
@___asan_gen_.1102 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10144, i32 3 }
@___asan_gen_.1111 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10176, i32 3 }
@___asan_gen_.1123 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10207, i32 3 }
@___asan_gen_.1132 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10590, i32 3 }
@___asan_gen_.1138 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10606, i32 3 }
@___asan_gen_.1144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10611, i32 3 }
@___asan_gen_.1150 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10617, i32 3 }
@___asan_gen_.1156 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10623, i32 3 }
@___asan_gen_.1162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10677, i32 3 }
@___asan_gen_.1171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10720, i32 3 }
@___asan_gen_.1177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10727, i32 3 }
@___asan_gen_.1183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 10768, i32 3 }
@___asan_gen_.1195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 223, i32 2 }
@___asan_gen_.1198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 185, i32 27 }
@___asan_gen_.1201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 186, i32 3 }
@___asan_gen_.1204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 187, i32 3 }
@___asan_gen_.1207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 188, i32 3 }
@___asan_gen_.1210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 189, i32 3 }
@___asan_gen_.1213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 190, i32 3 }
@___asan_gen_.1216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 191, i32 3 }
@___asan_gen_.1219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 192, i32 3 }
@___asan_gen_.1222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 193, i32 3 }
@___asan_gen_.1231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 199, i32 3 }
@___asan_gen_.1234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3441, i32 12 }
@___asan_gen_.1237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3446, i32 12 }
@___asan_gen_.1246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3453, i32 2 }
@___asan_gen_.1255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3610, i32 2 }
@___asan_gen_.1264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3568, i32 4 }
@___asan_gen_.1273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 3089, i32 3 }
@___asan_gen_.1274 = private unnamed_addr constant [14 x i8] c"cim_intr_info\00", align 1
@___asan_gen_.1276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4540, i32 32 }
@___asan_gen_.1279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4541, i32 20 }
@___asan_gen_.1282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4542, i32 19 }
@___asan_gen_.1285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4543, i32 19 }
@___asan_gen_.1288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4544, i32 19 }
@___asan_gen_.1291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4545, i32 21 }
@___asan_gen_.1294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4546, i32 24 }
@___asan_gen_.1297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4547, i32 25 }
@___asan_gen_.1300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4548, i32 18 }
@___asan_gen_.1301 = private unnamed_addr constant [16 x i8] c"cim_upintr_info\00", align 1
@___asan_gen_.1303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4551, i32 32 }
@___asan_gen_.1306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4552, i32 21 }
@___asan_gen_.1309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4553, i32 20 }
@___asan_gen_.1312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4554, i32 17 }
@___asan_gen_.1315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4555, i32 17 }
@___asan_gen_.1318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4556, i32 19 }
@___asan_gen_.1321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4557, i32 19 }
@___asan_gen_.1324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4558, i32 21 }
@___asan_gen_.1327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4559, i32 21 }
@___asan_gen_.1330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4560, i32 21 }
@___asan_gen_.1333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4561, i32 22 }
@___asan_gen_.1336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4562, i32 22 }
@___asan_gen_.1339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4563, i32 22 }
@___asan_gen_.1342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4564, i32 23 }
@___asan_gen_.1345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4565, i32 23 }
@___asan_gen_.1348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4566, i32 23 }
@___asan_gen_.1351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4567, i32 23 }
@___asan_gen_.1354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4568, i32 20 }
@___asan_gen_.1357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4569, i32 20 }
@___asan_gen_.1360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4570, i32 20 }
@___asan_gen_.1363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4571, i32 20 }
@___asan_gen_.1366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4572, i32 19 }
@___asan_gen_.1369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4573, i32 19 }
@___asan_gen_.1372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4574, i32 19 }
@___asan_gen_.1375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4575, i32 19 }
@___asan_gen_.1378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4576, i32 24 }
@___asan_gen_.1381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4577, i32 24 }
@___asan_gen_.1384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4578, i32 19 }
@___asan_gen_.1387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4579, i32 21 }
@___asan_gen_.1396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4296, i32 4 }
@___asan_gen_.1399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4299, i32 4 }
@___asan_gen_.1400 = private unnamed_addr constant [17 x i8] c"mps_rx_intr_info\00", align 1
@___asan_gen_.1402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4748, i32 32 }
@___asan_gen_.1405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4749, i32 15 }
@___asan_gen_.1406 = private unnamed_addr constant [17 x i8] c"mps_tx_intr_info\00", align 1
@___asan_gen_.1408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4752, i32 32 }
@___asan_gen_.1411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4753, i32 25 }
@___asan_gen_.1414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4754, i32 17 }
@___asan_gen_.1417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4755, i32 33 }
@___asan_gen_.1420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4757, i32 33 }
@___asan_gen_.1423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4759, i32 15 }
@___asan_gen_.1426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4760, i32 17 }
@___asan_gen_.1429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4761, i32 15 }
@___asan_gen_.1430 = private unnamed_addr constant [20 x i8] c"t6_mps_tx_intr_info\00", align 1
@___asan_gen_.1432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4764, i32 32 }
@___asan_gen_.1433 = private unnamed_addr constant [18 x i8] c"mps_trc_intr_info\00", align 1
@___asan_gen_.1435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4776, i32 32 }
@___asan_gen_.1438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4777, i32 27 }
@___asan_gen_.1441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4778, i32 27 }
@___asan_gen_.1444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4780, i32 17 }
@___asan_gen_.1445 = private unnamed_addr constant [24 x i8] c"mps_stat_sram_intr_info\00", align 1
@___asan_gen_.1447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4783, i32 32 }
@___asan_gen_.1450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4784, i32 15 }
@___asan_gen_.1451 = private unnamed_addr constant [22 x i8] c"mps_stat_tx_intr_info\00", align 1
@___asan_gen_.1453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4787, i32 32 }
@___asan_gen_.1456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4788, i32 14 }
@___asan_gen_.1457 = private unnamed_addr constant [22 x i8] c"mps_stat_rx_intr_info\00", align 1
@___asan_gen_.1459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4791, i32 32 }
@___asan_gen_.1462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4792, i32 15 }
@___asan_gen_.1463 = private unnamed_addr constant [18 x i8] c"mps_cls_intr_info\00", align 1
@___asan_gen_.1465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4795, i32 32 }
@___asan_gen_.1468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4796, i32 18 }
@___asan_gen_.1471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4797, i32 18 }
@___asan_gen_.1474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4798, i32 17 }
@___asan_gen_.1475 = private unnamed_addr constant [15 x i8] c"ncsi_intr_info\00", align 1
@___asan_gen_.1477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4928, i32 32 }
@___asan_gen_.1480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4929, i32 24 }
@___asan_gen_.1483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4930, i32 24 }
@___asan_gen_.1486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4931, i32 24 }
@___asan_gen_.1489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4932, i32 24 }
@___asan_gen_.1490 = private unnamed_addr constant [13 x i8] c"pl_intr_info\00", align 1
@___asan_gen_.1492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4973, i32 32 }
@___asan_gen_.1495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4974, i32 18 }
@___asan_gen_.1498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4975, i32 17 }
@___asan_gen_.1499 = private unnamed_addr constant [14 x i8] c"smb_intr_info\00", align 1
@___asan_gen_.1501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4912, i32 32 }
@___asan_gen_.1504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4913, i32 24 }
@___asan_gen_.1507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4914, i32 24 }
@___asan_gen_.1510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4915, i32 22 }
@___asan_gen_.1519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4959, i32 3 }
@___asan_gen_.1525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4962, i32 3 }
@___asan_gen_.1526 = private unnamed_addr constant [17 x i8] c"sysbus_intr_info\00", align 1
@___asan_gen_.1528 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4316, i32 32 }
@___asan_gen_.1531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4317, i32 13 }
@___asan_gen_.1534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4318, i32 13 }
@___asan_gen_.1537 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4319, i32 13 }
@___asan_gen_.1540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4320, i32 13 }
@___asan_gen_.1543 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4321, i32 13 }
@___asan_gen_.1544 = private unnamed_addr constant [20 x i8] c"pcie_port_intr_info\00", align 1
@___asan_gen_.1546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4324, i32 32 }
@___asan_gen_.1549 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4325, i32 13 }
@___asan_gen_.1552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4326, i32 13 }
@___asan_gen_.1555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4327, i32 13 }
@___asan_gen_.1558 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4328, i32 13 }
@___asan_gen_.1561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4329, i32 13 }
@___asan_gen_.1564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4330, i32 13 }
@___asan_gen_.1567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4331, i32 13 }
@___asan_gen_.1570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4332, i32 13 }
@___asan_gen_.1573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4333, i32 13 }
@___asan_gen_.1574 = private unnamed_addr constant [15 x i8] c"pcie_intr_info\00", align 1
@___asan_gen_.1576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4336, i32 32 }
@___asan_gen_.1579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4337, i32 21 }
@___asan_gen_.1582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4338, i32 21 }
@___asan_gen_.1585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4339, i32 20 }
@___asan_gen_.1588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4340, i32 22 }
@___asan_gen_.1591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4341, i32 22 }
@___asan_gen_.1594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4342, i32 21 }
@___asan_gen_.1597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4343, i32 19 }
@___asan_gen_.1600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4344, i32 19 }
@___asan_gen_.1603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4345, i32 19 }
@___asan_gen_.1606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4346, i32 19 }
@___asan_gen_.1609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4347, i32 17 }
@___asan_gen_.1612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4348, i32 17 }
@___asan_gen_.1615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4349, i32 17 }
@___asan_gen_.1618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4350, i32 17 }
@___asan_gen_.1621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4351, i32 17 }
@___asan_gen_.1624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4352, i32 17 }
@___asan_gen_.1627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4353, i32 17 }
@___asan_gen_.1630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4354, i32 17 }
@___asan_gen_.1633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4355, i32 17 }
@___asan_gen_.1636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4356, i32 19 }
@___asan_gen_.1639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4357, i32 16 }
@___asan_gen_.1642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4358, i32 20 }
@___asan_gen_.1645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4359, i32 18 }
@___asan_gen_.1648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4360, i32 19 }
@___asan_gen_.1651 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4361, i32 18 }
@___asan_gen_.1654 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4362, i32 17 }
@___asan_gen_.1657 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4363, i32 16 }
@___asan_gen_.1660 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4364, i32 17 }
@___asan_gen_.1663 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4365, i32 17 }
@___asan_gen_.1666 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4366, i32 21 }
@___asan_gen_.1667 = private unnamed_addr constant [18 x i8] c"t5_pcie_intr_info\00", align 1
@___asan_gen_.1669 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4371, i32 26 }
@___asan_gen_.1672 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4372, i32 19 }
@___asan_gen_.1675 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4374, i32 23 }
@___asan_gen_.1678 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4375, i32 20 }
@___asan_gen_.1681 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4380, i32 22 }
@___asan_gen_.1684 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4382, i32 22 }
@___asan_gen_.1687 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4385, i32 20 }
@___asan_gen_.1690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4388, i32 19 }
@___asan_gen_.1693 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4398, i32 18 }
@___asan_gen_.1696 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4400, i32 23 }
@___asan_gen_.1699 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4402, i32 24 }
@___asan_gen_.1702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4404, i32 16 }
@___asan_gen_.1705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4405, i32 18 }
@___asan_gen_.1708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4406, i32 21 }
@___asan_gen_.1711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4407, i32 19 }
@___asan_gen_.1712 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@___asan_gen_.1714 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4835, i32 20 }
@___asan_gen_.1723 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4857, i32 3 }
@___asan_gen_.1735 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4866, i32 4 }
@___asan_gen_.1741 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4871, i32 3 }
@___asan_gen_.1750 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 455, i32 3 }
@___asan_gen_.1756 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 459, i32 3 }
@___asan_gen_.1762 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 466, i32 2 }
@___asan_gen_.1768 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 470, i32 2 }
@___asan_gen_.1769 = private unnamed_addr constant [13 x i8] c"le_intr_info\00", align 1
@___asan_gen_.1771 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4717, i32 32 }
@___asan_gen_.1774 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4718, i32 16 }
@___asan_gen_.1777 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4719, i32 13 }
@___asan_gen_.1780 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4720, i32 18 }
@___asan_gen_.1783 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4721, i32 19 }
@___asan_gen_.1786 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4722, i32 19 }
@___asan_gen_.1787 = private unnamed_addr constant [16 x i8] c"t6_le_intr_info\00", align 1
@___asan_gen_.1789 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4726, i32 26 }
@___asan_gen_.1792 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4729, i32 18 }
@___asan_gen_.1795 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4733, i32 25 }
@___asan_gen_.1796 = private unnamed_addr constant [13 x i8] c"tp_intr_info\00", align 1
@___asan_gen_.1798 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4435, i32 32 }
@___asan_gen_.1801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4436, i32 17 }
@___asan_gen_.1804 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4437, i32 23 }
@___asan_gen_.1813 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4887, i32 3 }
@___asan_gen_.1816 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4891, i32 4 }
@___asan_gen_.1822 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4898, i32 3 }
@___asan_gen_.1823 = private unnamed_addr constant [15 x i8] c"pmtx_intr_info\00", align 1
@___asan_gen_.1825 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4654, i32 32 }
@___asan_gen_.1828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4655, i32 23 }
@___asan_gen_.1831 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4656, i32 23 }
@___asan_gen_.1834 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4657, i32 23 }
@___asan_gen_.1837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4658, i32 25 }
@___asan_gen_.1840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4659, i32 27 }
@___asan_gen_.1843 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4660, i32 24 }
@___asan_gen_.1846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4661, i32 29 }
@___asan_gen_.1849 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4663, i32 24 }
@___asan_gen_.1852 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4664, i32 30 }
@___asan_gen_.1853 = private unnamed_addr constant [15 x i8] c"pmrx_intr_info\00", align 1
@___asan_gen_.1855 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4677, i32 32 }
@___asan_gen_.1858 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4678, i32 25 }
@___asan_gen_.1861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4679, i32 27 }
@___asan_gen_.1864 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4680, i32 24 }
@___asan_gen_.1867 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4681, i32 29 }
@___asan_gen_.1870 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4683, i32 24 }
@___asan_gen_.1873 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4684, i32 30 }
@___asan_gen_.1874 = private unnamed_addr constant [16 x i8] c"ulprx_intr_info\00", align 1
@___asan_gen_.1876 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4617, i32 32 }
@___asan_gen_.1879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4618, i32 16 }
@___asan_gen_.1882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4619, i32 15 }
@___asan_gen_.1883 = private unnamed_addr constant [16 x i8] c"cplsw_intr_info\00", align 1
@___asan_gen_.1885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4697, i32 32 }
@___asan_gen_.1888 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4698, i32 24 }
@___asan_gen_.1891 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4699, i32 23 }
@___asan_gen_.1894 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4700, i32 25 }
@___asan_gen_.1897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4701, i32 26 }
@___asan_gen_.1900 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4702, i32 26 }
@___asan_gen_.1903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4703, i32 26 }
@___asan_gen_.1904 = private unnamed_addr constant [14 x i8] c"sge_intr_info\00", align 1
@___asan_gen_.1906 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4453, i32 32 }
@___asan_gen_.1909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4455, i32 5 }
@___asan_gen_.1912 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4457, i32 5 }
@___asan_gen_.1915 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4458, i32 25 }
@___asan_gen_.1918 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4461, i32 5 }
@___asan_gen_.1921 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4462, i32 25 }
@___asan_gen_.1924 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4464, i32 25 }
@___asan_gen_.1927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4466, i32 25 }
@___asan_gen_.1930 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4468, i32 25 }
@___asan_gen_.1933 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4471, i32 5 }
@___asan_gen_.1936 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4472, i32 25 }
@___asan_gen_.1939 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4473, i32 24 }
@___asan_gen_.1940 = private unnamed_addr constant [19 x i8] c"t4t5_sge_intr_info\00", align 1
@___asan_gen_.1942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4477, i32 26 }
@___asan_gen_.1945 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4481, i32 5 }
@___asan_gen_.1954 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4488, i32 3 }
@___asan_gen_.1960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4495, i32 3 }
@___asan_gen_.1966 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4505, i32 4 }
@___asan_gen_.1972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4517, i32 3 }
@___asan_gen_.1978 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4520, i32 4 }
@___asan_gen_.1979 = private unnamed_addr constant [16 x i8] c"ulptx_intr_info\00", align 1
@___asan_gen_.1981 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4632, i32 32 }
@___asan_gen_.1984 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4633, i32 26 }
@___asan_gen_.1987 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4635, i32 26 }
@___asan_gen_.1990 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4637, i32 26 }
@___asan_gen_.1993 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4639, i32 26 }
@___asan_gen_.1996 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 4641, i32 16 }
@___asan_gen_.2005 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6125, i32 2 }
@___asan_gen_.2006 = private unnamed_addr constant [7 x i8] c"reason\00", align 1
@___asan_gen_.2008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8453, i32 28 }
@___asan_gen_.2011 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8454, i32 3 }
@___asan_gen_.2014 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8455, i32 3 }
@___asan_gen_.2017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8456, i32 3 }
@___asan_gen_.2020 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8459, i32 3 }
@___asan_gen_.2023 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 8460, i32 3 }
@___asan_gen_.2032 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9087, i32 3 }
@___asan_gen_.2038 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 9098, i32 3 }
@___asan_gen_.2039 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.2045 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.2046 = private constant [46 x i8] c"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c\00", align 1
@___asan_gen_.2047 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.2046, i32 6210, i32 3 }
@___asan_gen_.2048 = private unnamed_addr constant [29 x i8] c"switch.table.t4_get_regs_len\00", align 1
@___asan_gen_.2049 = private unnamed_addr constant [25 x i8] c"switch.table.t4_get_regs\00", align 1
@___asan_gen_.2050 = private unnamed_addr constant [29 x i8] c"switch.table.t4_get_regs.487\00", align 1
@___asan_gen_.2051 = private unnamed_addr constant [29 x i8] c"switch.table.t4_prep_adapter\00", align 1
@___asan_gen_.2052 = private unnamed_addr constant [33 x i8] c"switch.table.t4_prep_adapter.488\00", align 1
@___asan_gen_.2053 = private unnamed_addr constant [33 x i8] c"switch.table.t4_prep_adapter.489\00", align 1
@___asan_gen_.2054 = private unnamed_addr constant [33 x i8] c"switch.table.t4_prep_adapter.490\00", align 1
@llvm.compiler.used = appending global [606 x ptr] [ptr @compute_mps_bg_map._entry, ptr @compute_mps_bg_map._entry_ptr, ptr @fw_asrt._entry, ptr @fw_asrt._entry_ptr, ptr @ma_intr_handler._entry, ptr @ma_intr_handler._entry.413, ptr @ma_intr_handler._entry.415, ptr @ma_intr_handler._entry_ptr, ptr @ma_intr_handler._entry_ptr.414, ptr @ma_intr_handler._entry_ptr.417, ptr @mem_intr_handler._entry, ptr @mem_intr_handler._entry.383, ptr @mem_intr_handler._entry.388, ptr @mem_intr_handler._entry_ptr, ptr @mem_intr_handler._entry_ptr.385, ptr @mem_intr_handler._entry_ptr.390, ptr @sge_intr_handler._entry, ptr @sge_intr_handler._entry.455, ptr @sge_intr_handler._entry.458, ptr @sge_intr_handler._entry.461, ptr @sge_intr_handler._entry.464, ptr @sge_intr_handler._entry_ptr, ptr @sge_intr_handler._entry_ptr.457, ptr @sge_intr_handler._entry_ptr.460, ptr @sge_intr_handler._entry_ptr.463, ptr @sge_intr_handler._entry_ptr.466, ptr @should_install_fs_fw._entry, ptr @should_install_fs_fw._entry_ptr, ptr @t4_check_fw_version._entry, ptr @t4_check_fw_version._entry.55, ptr @t4_check_fw_version._entry_ptr, ptr @t4_check_fw_version._entry_ptr.57, ptr @t4_dump_version_info._entry, ptr @t4_dump_version_info._entry.19, ptr @t4_dump_version_info._entry.22, ptr @t4_dump_version_info._entry.26, ptr @t4_dump_version_info._entry.29, ptr @t4_dump_version_info._entry.32, ptr @t4_dump_version_info._entry.35, ptr @t4_dump_version_info._entry.38, ptr @t4_dump_version_info._entry.41, ptr @t4_dump_version_info._entry.44, ptr @t4_dump_version_info._entry.47, ptr @t4_dump_version_info._entry.50, ptr @t4_dump_version_info._entry_ptr, ptr @t4_dump_version_info._entry_ptr.21, ptr @t4_dump_version_info._entry_ptr.25, ptr @t4_dump_version_info._entry_ptr.28, ptr @t4_dump_version_info._entry_ptr.31, ptr @t4_dump_version_info._entry_ptr.34, ptr @t4_dump_version_info._entry_ptr.37, ptr @t4_dump_version_info._entry_ptr.40, ptr @t4_dump_version_info._entry_ptr.43, ptr @t4_dump_version_info._entry_ptr.46, ptr @t4_dump_version_info._entry_ptr.49, ptr @t4_dump_version_info._entry_ptr.52, ptr @t4_edc_err_read._entry, ptr @t4_edc_err_read._entry.393, ptr @t4_edc_err_read._entry.396, ptr @t4_edc_err_read._entry.399, ptr @t4_edc_err_read._entry_ptr, ptr @t4_edc_err_read._entry_ptr.395, ptr @t4_edc_err_read._entry_ptr.398, ptr @t4_edc_err_read._entry_ptr.401, ptr @t4_flash_erase_sectors._entry, ptr @t4_flash_erase_sectors._entry_ptr, ptr @t4_fw_matches_chip._entry, ptr @t4_fw_matches_chip._entry_ptr, ptr @t4_get_flash_params._entry, ptr @t4_get_flash_params._entry.482, ptr @t4_get_flash_params._entry_ptr, ptr @t4_get_flash_params._entry_ptr.484, ptr @t4_get_mps_bg_map._entry, ptr @t4_get_mps_bg_map._entry_ptr, ptr @t4_get_raw_vpd_params._entry, ptr @t4_get_raw_vpd_params._entry.13, ptr @t4_get_raw_vpd_params._entry_ptr, ptr @t4_get_raw_vpd_params._entry_ptr.15, ptr @t4_get_regs._entry, ptr @t4_get_regs._entry_ptr, ptr @t4_get_regs_len._entry, ptr @t4_get_regs_len._entry_ptr, ptr @t4_get_tp_ch_map._entry, ptr @t4_get_tp_ch_map._entry.96, ptr @t4_get_tp_ch_map._entry_ptr, ptr @t4_get_tp_ch_map._entry_ptr.98, ptr @t4_get_tp_e2c_map._entry, ptr @t4_get_tp_e2c_map._entry_ptr, ptr @t4_handle_fw_rpl._entry, ptr @t4_handle_fw_rpl._entry_ptr, ptr @t4_handle_get_port_info._entry, ptr @t4_handle_get_port_info._entry.174, ptr @t4_handle_get_port_info._entry.177, ptr @t4_handle_get_port_info._entry_ptr, ptr @t4_handle_get_port_info._entry_ptr.176, ptr @t4_handle_get_port_info._entry_ptr.179, ptr @t4_handle_intr_status._entry, ptr @t4_handle_intr_status._entry.290, ptr @t4_handle_intr_status._entry_ptr, ptr @t4_handle_intr_status._entry_ptr.291, ptr @t4_idma_monitor._entry, ptr @t4_idma_monitor._entry.194, ptr @t4_idma_monitor._entry_ptr, ptr @t4_idma_monitor._entry_ptr.196, ptr @t4_init_tp_params._entry, ptr @t4_init_tp_params._entry.189, ptr @t4_init_tp_params._entry_ptr, ptr @t4_init_tp_params._entry_ptr.191, ptr @t4_link_acaps._entry, ptr @t4_link_acaps._entry_ptr, ptr @t4_link_l1cfg_core._entry, ptr @t4_link_l1cfg_core._entry_ptr, ptr @t4_load_boot._entry, ptr @t4_load_boot._entry.206, ptr @t4_load_boot._entry.209, ptr @t4_load_boot._entry.212, ptr @t4_load_boot._entry.215, ptr @t4_load_boot._entry.218, ptr @t4_load_boot._entry_ptr, ptr @t4_load_boot._entry_ptr.208, ptr @t4_load_boot._entry_ptr.211, ptr @t4_load_boot._entry_ptr.214, ptr @t4_load_boot._entry_ptr.217, ptr @t4_load_boot._entry_ptr.220, ptr @t4_load_bootcfg._entry, ptr @t4_load_bootcfg._entry.223, ptr @t4_load_bootcfg._entry.226, ptr @t4_load_bootcfg._entry_ptr, ptr @t4_load_bootcfg._entry_ptr.225, ptr @t4_load_bootcfg._entry_ptr.228, ptr @t4_load_cfg._entry, ptr @t4_load_cfg._entry.199, ptr @t4_load_cfg._entry_ptr, ptr @t4_load_cfg._entry_ptr.201, ptr @t4_load_fw._entry, ptr @t4_load_fw._entry.68, ptr @t4_load_fw._entry.71, ptr @t4_load_fw._entry.74, ptr @t4_load_fw._entry.77, ptr @t4_load_fw._entry.80, ptr @t4_load_fw._entry_ptr, ptr @t4_load_fw._entry_ptr.70, ptr @t4_load_fw._entry_ptr.73, ptr @t4_load_fw._entry_ptr.76, ptr @t4_load_fw._entry_ptr.79, ptr @t4_load_fw._entry_ptr.82, ptr @t4_load_phy_fw._entry, ptr @t4_load_phy_fw._entry.85, ptr @t4_load_phy_fw._entry_ptr, ptr @t4_load_phy_fw._entry_ptr.87, ptr @t4_prep_adapter._entry, ptr @t4_prep_adapter._entry.184, ptr @t4_prep_adapter._entry_ptr, ptr @t4_prep_adapter._entry_ptr.186, ptr @t4_prep_fw._entry, ptr @t4_prep_fw._entry.60, ptr @t4_prep_fw._entry.63, ptr @t4_prep_fw._entry_ptr, ptr @t4_prep_fw._entry_ptr.62, ptr @t4_prep_fw._entry_ptr.65, ptr @t4_report_fw_error._entry, ptr @t4_report_fw_error._entry_ptr, ptr @t4_sge_decode_idma_state._entry, ptr @t4_sge_decode_idma_state._entry.162, ptr @t4_sge_decode_idma_state._entry.165, ptr @t4_sge_decode_idma_state._entry.168, ptr @t4_sge_decode_idma_state._entry_ptr, ptr @t4_sge_decode_idma_state._entry_ptr.164, ptr @t4_sge_decode_idma_state._entry_ptr.167, ptr @t4_sge_decode_idma_state._entry_ptr.170, ptr @t4_wr_mbox_meat_timeout._entry, ptr @t4_wr_mbox_meat_timeout._entry_ptr, ptr @t4_write_flash._entry, ptr @t4_write_flash._entry_ptr, ptr @xgmac_intr_handler._entry, ptr @xgmac_intr_handler._entry.320, ptr @xgmac_intr_handler._entry_ptr, ptr @xgmac_intr_handler._entry_ptr.322, ptr @t4_wr_mbox_meat_timeout.delay, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @t4_get_regs.t4_reg_ranges, ptr @t4_get_regs.t5_reg_ranges, ptr @t4_get_regs.t6_reg_ranges, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.14, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @.str.23, ptr @.str.24, ptr @.str.27, ptr @.str.30, ptr @.str.33, ptr @.str.36, ptr @.str.39, ptr @.str.42, ptr @.str.45, ptr @.str.48, ptr @.str.51, ptr @.str.53, ptr @.str.54, ptr @.str.56, ptr @.str.58, ptr @.str.59, ptr @.str.61, ptr @.str.64, ptr @.str.66, ptr @.str.67, ptr @.str.69, ptr @.str.72, ptr @.str.75, ptr @.str.78, ptr @.str.81, ptr @.str.83, ptr @.str.84, ptr @.str.86, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @t4_load_mtus.avg_pkts, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.97, ptr @t4_get_port_type_description.port_type_description, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @t4_sge_decode_idma_state.t4_decode, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @t4_sge_decode_idma_state.t5_decode, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.163, ptr @.str.166, ptr @.str.169, ptr @.str.171, ptr @.str.172, ptr @t4_handle_get_port_info._rs, ptr @.str.173, ptr @.str.175, ptr @.str.178, ptr @.str.180, ptr @.str.181, ptr @.str.182, ptr @.str.183, ptr @.str.185, ptr @.str.187, ptr @.str.188, ptr @.str.190, ptr @.str.192, ptr @.str.193, ptr @.str.195, ptr @.str.197, ptr @.str.198, ptr @.str.200, ptr @.str.202, ptr @.str.203, ptr @.str.204, ptr @.str.205, ptr @.str.207, ptr @.str.210, ptr @.str.213, ptr @.str.216, ptr @.str.219, ptr @.str.221, ptr @.str.222, ptr @.str.224, ptr @.str.227, ptr @.str.229, ptr @.str.230, ptr @.str.231, ptr @t4_report_fw_error.reason, ptr @.str.232, ptr @.str.233, ptr @.str.234, ptr @.str.235, ptr @.str.236, ptr @.str.237, ptr @.str.238, ptr @.str.239, ptr @.str.240, ptr @.str.241, ptr @.str.242, ptr @.str.243, ptr @.str.244, ptr @.str.245, ptr @.str.246, ptr @.str.247, ptr @.str.248, ptr @.str.249, ptr @.str.250, ptr @.str.251, ptr @cim_intr_handler.cim_intr_info, ptr @.str.252, ptr @.str.253, ptr @.str.254, ptr @.str.255, ptr @.str.256, ptr @.str.257, ptr @.str.258, ptr @.str.259, ptr @cim_intr_handler.cim_upintr_info, ptr @.str.260, ptr @.str.261, ptr @.str.262, ptr @.str.263, ptr @.str.264, ptr @.str.265, ptr @.str.266, ptr @.str.267, ptr @.str.268, ptr @.str.269, ptr @.str.270, ptr @.str.271, ptr @.str.272, ptr @.str.273, ptr @.str.274, ptr @.str.275, ptr @.str.276, ptr @.str.277, ptr @.str.278, ptr @.str.279, ptr @.str.280, ptr @.str.281, ptr @.str.282, ptr @.str.283, ptr @.str.284, ptr @.str.285, ptr @.str.286, ptr @.str.287, ptr @.str.288, ptr @.str.289, ptr @mps_intr_handler.mps_rx_intr_info, ptr @.str.292, ptr @mps_intr_handler.mps_tx_intr_info, ptr @.str.293, ptr @.str.294, ptr @.str.295, ptr @.str.296, ptr @.str.297, ptr @.str.298, ptr @.str.299, ptr @mps_intr_handler.t6_mps_tx_intr_info, ptr @mps_intr_handler.mps_trc_intr_info, ptr @.str.300, ptr @.str.301, ptr @.str.302, ptr @mps_intr_handler.mps_stat_sram_intr_info, ptr @.str.303, ptr @mps_intr_handler.mps_stat_tx_intr_info, ptr @.str.304, ptr @mps_intr_handler.mps_stat_rx_intr_info, ptr @.str.305, ptr @mps_intr_handler.mps_cls_intr_info, ptr @.str.306, ptr @.str.307, ptr @.str.308, ptr @ncsi_intr_handler.ncsi_intr_info, ptr @.str.309, ptr @.str.310, ptr @.str.311, ptr @.str.312, ptr @pl_intr_handler.pl_intr_info, ptr @.str.313, ptr @.str.314, ptr @smb_intr_handler.smb_intr_info, ptr @.str.315, ptr @.str.316, ptr @.str.317, ptr @.str.318, ptr @.str.319, ptr @.str.321, ptr @pcie_intr_handler.sysbus_intr_info, ptr @.str.323, ptr @.str.324, ptr @.str.325, ptr @.str.326, ptr @.str.327, ptr @pcie_intr_handler.pcie_port_intr_info, ptr @.str.328, ptr @.str.329, ptr @.str.330, ptr @.str.331, ptr @.str.332, ptr @.str.333, ptr @.str.334, ptr @.str.335, ptr @.str.336, ptr @pcie_intr_handler.pcie_intr_info, ptr @.str.337, ptr @.str.338, ptr @.str.339, ptr @.str.340, ptr @.str.341, ptr @.str.342, ptr @.str.343, ptr @.str.344, ptr @.str.345, ptr @.str.346, ptr @.str.347, ptr @.str.348, ptr @.str.349, ptr @.str.350, ptr @.str.351, ptr @.str.352, ptr @.str.353, ptr @.str.354, ptr @.str.355, ptr @.str.356, ptr @.str.357, ptr @.str.358, ptr @.str.359, ptr @.str.360, ptr @.str.361, ptr @.str.362, ptr @.str.363, ptr @.str.364, ptr @.str.365, ptr @.str.366, ptr @pcie_intr_handler.t5_pcie_intr_info, ptr @.str.367, ptr @.str.368, ptr @.str.369, ptr @.str.370, ptr @.str.371, ptr @.str.372, ptr @.str.373, ptr @.str.374, ptr @.str.375, ptr @.str.376, ptr @.str.377, ptr @.str.378, ptr @.str.379, ptr @.str.380, ptr @mem_intr_handler.name, ptr @.str.381, ptr @.str.382, ptr @.str.384, ptr @.str.386, ptr @.str.387, ptr @.str.389, ptr @.str.391, ptr @.str.392, ptr @.str.394, ptr @.str.397, ptr @.str.400, ptr @le_intr_handler.le_intr_info, ptr @.str.402, ptr @.str.403, ptr @.str.404, ptr @.str.405, ptr @.str.406, ptr @le_intr_handler.t6_le_intr_info, ptr @.str.407, ptr @.str.408, ptr @tp_intr_handler.tp_intr_info, ptr @.str.409, ptr @.str.410, ptr @.str.411, ptr @.str.412, ptr @.str.416, ptr @pmtx_intr_handler.pmtx_intr_info, ptr @.str.418, ptr @.str.419, ptr @.str.420, ptr @.str.421, ptr @.str.422, ptr @.str.423, ptr @.str.424, ptr @.str.425, ptr @.str.426, ptr @pmrx_intr_handler.pmrx_intr_info, ptr @.str.427, ptr @.str.428, ptr @.str.429, ptr @.str.430, ptr @.str.431, ptr @.str.432, ptr @ulprx_intr_handler.ulprx_intr_info, ptr @.str.433, ptr @.str.434, ptr @cplsw_intr_handler.cplsw_intr_info, ptr @.str.435, ptr @.str.436, ptr @.str.437, ptr @.str.438, ptr @.str.439, ptr @.str.440, ptr @sge_intr_handler.sge_intr_info, ptr @.str.441, ptr @.str.442, ptr @.str.443, ptr @.str.444, ptr @.str.445, ptr @.str.446, ptr @.str.447, ptr @.str.448, ptr @.str.449, ptr @.str.450, ptr @.str.451, ptr @sge_intr_handler.t4t5_sge_intr_info, ptr @.str.452, ptr @.str.453, ptr @.str.454, ptr @.str.456, ptr @.str.459, ptr @.str.462, ptr @.str.465, ptr @ulptx_intr_handler.ulptx_intr_info, ptr @.str.467, ptr @.str.468, ptr @.str.469, ptr @.str.470, ptr @.str.471, ptr @.str.472, ptr @.str.473, ptr @t4_link_down_rc_str.reason, ptr @.str.474, ptr @.str.475, ptr @.str.476, ptr @.str.477, ptr @.str.478, ptr @.str.480, ptr @.str.481, ptr @.str.483, ptr @.str.485, ptr @.str.486, ptr @switch.table.t4_get_regs_len, ptr @switch.table.t4_get_regs, ptr @switch.table.t4_get_regs.487, ptr @switch.table.t4_prep_adapter, ptr @switch.table.t4_prep_adapter.488, ptr @switch.table.t4_prep_adapter.489, ptr @switch.table.t4_prep_adapter.490], section "llvm.metadata"
@0 = internal global [517 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_wr_mbox_meat_timeout.delay to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_wr_mbox_meat_timeout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_regs_len._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_regs.t4_reg_ranges to i32), i32 3648, i32 4544, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_regs.t5_reg_ranges to i32), i32 6088, i32 7616, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_regs.t6_reg_ranges to i32), i32 4448, i32 5536, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_regs._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_raw_vpd_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_raw_vpd_params._entry.13 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.29 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.32 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.41 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_dump_version_info._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_check_fw_version._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_check_fw_version._entry.55 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 77, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_prep_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_prep_fw._entry.60 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_prep_fw._entry.63 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 130, i32 192, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry.68 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry.77 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_fw._entry.80 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_phy_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_phy_fw._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 74, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_link_acaps._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 71, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_link_l1cfg_core._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_mtus.avg_pkts to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.776 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_mps_bg_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_tp_ch_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_tp_ch_map._entry.96 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.802 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_port_type_description.port_type_description to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.803 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.808 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.817 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.853 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.856 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.859 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.862 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.865 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.871 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.874 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.877 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state.t4_decode to i32), i32 140, i32 192, i32 ptrtoint (ptr @___asan_gen_.878 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.883 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.886 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.892 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.895 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.898 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.904 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.907 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.910 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.916 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.922 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.925 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.928 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.931 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.934 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.937 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.940 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.943 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.946 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.949 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.952 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.955 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.961 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.964 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.967 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.970 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.973 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.976 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.979 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.982 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.985 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state.t5_decode to i32), i32 132, i32 192, i32 ptrtoint (ptr @___asan_gen_.986 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.991 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.994 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.997 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1003 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state._entry.162 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state._entry.165 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_sge_decode_idma_state._entry.168 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1021 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_get_port_info._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_get_port_info._rs to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1031 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_get_port_info._entry.174 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1042 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_get_port_info._entry.177 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.178 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1048 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_fw_rpl._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.180 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.181 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1057 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_prep_adapter._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.182 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.183 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1066 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_prep_adapter._entry.184 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.185 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1072 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_init_tp_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.187 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.188 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1081 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_init_tp_params._entry.189 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.190 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1087 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_idma_monitor._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.192 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.193 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1096 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_idma_monitor._entry.194 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.195 to i32), i32 94, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1102 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_cfg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.197 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.198 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1111 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_cfg._entry.199 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.200 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.202 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.203 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1123 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.204 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.205 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1132 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry.206 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.207 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry.209 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.210 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry.212 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.213 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1150 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry.215 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.216 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1156 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_boot._entry.218 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.219 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_bootcfg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.221 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.222 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_bootcfg._entry.223 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.224 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_load_bootcfg._entry.226 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.227 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @fw_asrt._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.229 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.230 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.231 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_report_fw_error.reason to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.232 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.233 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.234 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.235 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.236 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.237 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.238 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.239 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_report_fw_error._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.240 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.241 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.242 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.243 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @should_install_fs_fw._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.244 to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.245 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_fw_matches_chip._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.246 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.247 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_flash_erase_sectors._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.248 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.249 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_write_flash._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.250 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.251 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cim_intr_handler.cim_intr_info to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.1274 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.252 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.253 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.254 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.255 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.256 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.257 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.258 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.259 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cim_intr_handler.cim_upintr_info to i32), i32 464, i32 576, i32 ptrtoint (ptr @___asan_gen_.1301 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.260 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.261 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.262 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.263 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.264 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.265 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.266 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.267 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.268 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.269 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.270 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.271 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.272 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.273 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.274 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.275 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.276 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.277 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.278 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.279 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.280 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.281 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.282 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.283 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.284 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.285 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.286 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.287 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_intr_status._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.288 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.289 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_handle_intr_status._entry.290 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_rx_intr_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1400 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.292 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_tx_intr_info to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1406 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.293 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.294 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.295 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.296 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.297 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.298 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.299 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.t6_mps_tx_intr_info to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1430 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_trc_intr_info to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1433 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.300 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.301 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.302 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_stat_sram_intr_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1445 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.303 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_stat_tx_intr_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1451 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.304 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_stat_rx_intr_info to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1457 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.305 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mps_intr_handler.mps_cls_intr_info to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1463 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.306 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.307 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.308 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ncsi_intr_handler.ncsi_intr_info to i32), i32 80, i32 128, i32 ptrtoint (ptr @___asan_gen_.1475 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.309 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.310 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.311 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.312 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pl_intr_handler.pl_intr_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1490 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.313 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.314 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @smb_intr_handler.smb_intr_info to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1499 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.315 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.316 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.317 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xgmac_intr_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.318 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.319 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xgmac_intr_handler._entry.320 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.321 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_intr_handler.sysbus_intr_info to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1526 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1528 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.323 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.324 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.325 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1537 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.326 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.327 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1543 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_intr_handler.pcie_port_intr_info to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.1544 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.328 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1549 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.329 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.330 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.331 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1558 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.332 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.333 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.334 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.335 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.336 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_intr_handler.pcie_intr_info to i32), i32 496, i32 608, i32 ptrtoint (ptr @___asan_gen_.1574 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.337 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.338 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.339 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.340 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.341 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.342 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.343 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.344 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.345 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.346 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.347 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.348 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.349 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.350 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.351 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.352 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.353 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.354 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.355 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.356 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.357 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.358 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.359 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.360 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1648 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.361 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1651 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.362 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1654 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.363 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1657 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.364 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1660 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.365 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1663 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.366 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1666 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pcie_intr_handler.t5_pcie_intr_info to i32), i32 496, i32 608, i32 ptrtoint (ptr @___asan_gen_.1667 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1669 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.367 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1672 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.368 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1675 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.369 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1678 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.370 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1681 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.371 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1684 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.372 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1687 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.373 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.374 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1693 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.375 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1696 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.376 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1699 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.377 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.378 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.379 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.380 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_intr_handler.name to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1712 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1714 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_intr_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.381 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.382 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1723 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_intr_handler._entry.383 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.384 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.386 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.387 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1735 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mem_intr_handler._entry.388 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.389 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1741 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_edc_err_read._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.391 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.392 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1750 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_edc_err_read._entry.393 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.394 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1756 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_edc_err_read._entry.396 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.397 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1762 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_edc_err_read._entry.399 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.400 to i32), i32 66, i32 128, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1768 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @le_intr_handler.le_intr_info to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1769 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1771 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.402 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1774 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.403 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1777 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.404 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1780 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.405 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1783 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.406 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1786 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @le_intr_handler.t6_le_intr_info to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.1787 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1789 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.407 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1792 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.408 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1795 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @tp_intr_handler.tp_intr_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1796 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1798 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.409 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.410 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1804 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ma_intr_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.411 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.412 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1813 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ma_intr_handler._entry.413 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1816 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ma_intr_handler._entry.415 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.416 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1822 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pmtx_intr_handler.pmtx_intr_info to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.1823 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1825 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.418 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.419 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1831 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.420 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1834 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.421 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.422 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.423 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1843 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.424 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.425 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1849 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.426 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1852 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pmrx_intr_handler.pmrx_intr_info to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1853 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1855 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.427 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1858 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.428 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.429 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1864 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.430 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1867 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.431 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1870 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.432 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1873 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ulprx_intr_handler.ulprx_intr_info to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1874 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1876 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.433 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.434 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cplsw_intr_handler.cplsw_intr_info to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1883 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.435 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1888 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.436 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1891 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.437 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1894 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.438 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.439 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1900 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.440 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler.sge_intr_info to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1904 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1906 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.441 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.442 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1912 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.443 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1915 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.444 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1918 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.445 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1921 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.446 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1924 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.447 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.448 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1930 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.449 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1933 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.450 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1936 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.451 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1939 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler.t4t5_sge_intr_info to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1940 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.452 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1945 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.453 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.454 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1954 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler._entry.455 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.456 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler._entry.458 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.459 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1966 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler._entry.461 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.462 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sge_intr_handler._entry.464 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.465 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1978 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @ulptx_intr_handler.ulptx_intr_info to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.1979 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1981 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.467 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1984 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.468 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1987 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.469 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1990 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.470 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1993 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.471 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1996 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @compute_mps_bg_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.472 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.473 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2005 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_link_down_rc_str.reason to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.2006 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.474 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2011 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.475 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2014 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.476 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.477 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2020 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.478 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2023 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_flash_params._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.480 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.481 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2032 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_flash_params._entry.482 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.483 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2038 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @t4_get_tp_e2c_map._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.2039 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.485 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.486 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.2045 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.2047 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_get_regs_len to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2048 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_get_regs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2049 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_get_regs.487 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2050 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_prep_adapter to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.2051 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_prep_adapter.488 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.2052 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_prep_adapter.489 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2053 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.t4_prep_adapter.490 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.2054 to i32), i32 ptrtoint (ptr @___asan_gen_.2046 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_set_reg_field(ptr nocapture noundef readonly %adapter, i32 noundef %addr, i32 noundef %mask, i32 noundef %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 %addr
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %neg = xor i32 %mask, -1
  %and = and i32 %3, %neg
  %or = or i32 %and, %val
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %5 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adapter, align 128
  %add.ptr.i6 = getelementptr i8, ptr %6, i32 %addr
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6, i32 %4) #14, !srcloc !995
  %7 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adapter, align 128
  %add.ptr.i7 = getelementptr i8, ptr %8, i32 %addr
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_indirect(ptr nocapture noundef readonly %adap, i32 noundef %addr_reg, i32 noundef %data_reg, ptr nocapture noundef writeonly %vals, i32 noundef %nregs, i32 noundef %start_idx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nregs)
  %tobool.not4 = icmp eq i32 %nregs, 0
  br i1 %tobool.not4, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %start_idx.addr.07 = phi i32 [ %inc, %while.body.while.body_crit_edge ], [ %start_idx, %entry.while.body_crit_edge ]
  %nregs.addr.06 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %nregs, %entry.while.body_crit_edge ]
  %vals.addr.05 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %vals, %entry.while.body_crit_edge ]
  %dec = add i32 %nregs.addr.06, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %start_idx.addr.07) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 %addr_reg
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i3 = getelementptr i8, ptr %4, i32 %data_reg
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %vals.addr.05, i32 1
  %7 = ptrtoint ptr %vals.addr.05 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %vals.addr.05, align 4
  %inc = add i32 %start_idx.addr.07, 1
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_write_indirect(ptr nocapture noundef readonly %adap, i32 noundef %addr_reg, i32 noundef %data_reg, ptr nocapture noundef readonly %vals, i32 noundef %nregs, i32 noundef %start_idx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nregs)
  %tobool.not3 = icmp eq i32 %nregs, 0
  br i1 %tobool.not3, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %entry.while.body_crit_edge
  %start_idx.addr.06 = phi i32 [ %inc, %while.body.while.body_crit_edge ], [ %start_idx, %entry.while.body_crit_edge ]
  %nregs.addr.05 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %nregs, %entry.while.body_crit_edge ]
  %vals.addr.04 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %vals, %entry.while.body_crit_edge ]
  %dec = add i32 %nregs.addr.05, -1
  %inc = add i32 %start_idx.addr.06, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %start_idx.addr.06) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 %addr_reg
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %incdec.ptr = getelementptr i32, ptr %vals.addr.04, i32 1
  %3 = ptrtoint ptr %vals.addr.04 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %vals.addr.04, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #14
  %6 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adap, align 128
  %add.ptr.i2 = getelementptr i8, ptr %7, i32 %data_reg
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i2, i32 %5) #14, !srcloc !995
  %tobool.not = icmp eq i32 %dec, 0
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %entry.while.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_hw_pci_read_cfg4(ptr nocapture noundef readonly %adap, i32 noundef %reg, ptr nocapture noundef writeonly %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %0 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pf, align 4
  %shl = shl i32 %1, 12
  %or = or i32 %shl, %reg
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %chip, align 8
  %4 = and i32 %3, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %4)
  %cmp = icmp ult i32 %4, 96
  %req.0.v = select i1 %cmp, i32 1073741824, i32 -2147483648
  %req.0 = or i32 %or, %req.0.v
  %5 = and i32 %3, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %5)
  %cmp.i.not = icmp eq i32 %5, 64
  %or7 = or i32 %req.0, 268435456
  %req.1 = select i1 %cmp.i.not, i32 %or7, i32 %req.0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %6 = tail call i32 @llvm.bswap.i32(i32 %req.1) #14
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %8, i32 12384
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %6) #14, !srcloc !995
  %9 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adap, align 128
  %add.ptr.i18 = getelementptr i8, ptr %10, i32 12388
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18) #14, !srcloc !992
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %13 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %val, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %14 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adap, align 128
  %add.ptr.i19 = getelementptr i8, ptr %15, i32 12384
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19, i32 0) #14, !srcloc !995
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr nocapture noundef readonly %cmd, i32 noundef %size, ptr noundef writeonly %rpl, i1 noundef zeroext %sleep_ok, i32 noundef %timeout) local_unnamed_addr #0 align 64 {
entry:
  %asrt.i = alloca %struct.fw_debug_cmd, align 8
  %entry1 = alloca %struct.mbox_list, align 4
  %cmd_rpl = alloca [8 x i64], align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %entry1) #14
  %0 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %entry1, align 4, !annotation !996
  %1 = getelementptr inbounds %struct.list_head, ptr %entry1, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %1, align 4, !annotation !996
  %mul = shl i32 %mbox, 10
  %add2 = add i32 %mul, 123456
  %add5 = add i32 %mul, 123520
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %cmd_rpl) #14
  %3 = call ptr @memset(ptr %cmd_rpl, i32 255, i32 64)
  %and = and i32 %size, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp ne i32 %and, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %size)
  %cmp = icmp sgt i32 %size, 64
  %or.cond = or i1 %cmp, %tobool.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %pdev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 3
  %4 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev, align 4
  %error_state = getelementptr inbounds %struct.pci_dev, ptr %5, i32 0, i32 43
  %6 = ptrtoint ptr %error_state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %7)
  %cmp6.not = icmp eq i32 %7, 1
  br i1 %cmp6.not, label %if.end8, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %timeout)
  %cmp9 = icmp sgt i32 %timeout, -1
  %8 = tail call i32 @llvm.abs.i32(i32 %timeout, i1 false)
  %spec.select300 = and i1 %cmp9, %sleep_ok
  %mbox_lock = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 57
  tail call void @_raw_spin_lock_bh(ptr noundef %mbox_lock) #14
  %mlist = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 58
  %prev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 58, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef nonnull %entry1, ptr noundef %10, ptr noundef %mlist) #14
  br i1 %call.i.i, label %if.end.i.i, label %if.end8.list_add_tail.exit_crit_edge

if.end8.list_add_tail.exit_crit_edge:             ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %entry1, ptr %prev.i, align 4
  %12 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %mlist, ptr %entry1, align 4
  %13 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %1, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %entry1, ptr %10, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end8.list_add_tail.exit_crit_edge
  call void @_raw_spin_unlock_bh(ptr noundef %mbox_lock) #14
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i428 = getelementptr i8, ptr %16, i32 12472
  %17 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i428) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask429 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask429)
  %tobool17.not430 = icmp eq i32 %.mask429, 0
  br i1 %tobool17.not430, label %list_add_tail.exit.if.end24_crit_edge, label %list_add_tail.exit.if.then18_crit_edge

list_add_tail.exit.if.then18_crit_edge:           ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then18

list_add_tail.exit.if.end24_crit_edge:            ; preds = %list_add_tail.exit
  br label %if.end24

if.then18.loopexit:                               ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  %phi.sel = select i1 %tobool17.not, i32 -16, i32 -6
  br label %if.then18

if.then18:                                        ; preds = %if.then18.loopexit, %list_add_tail.exit.if.then18_crit_edge
  %tobool17.not.lcssa = phi i32 [ -6, %list_add_tail.exit.if.then18_crit_edge ], [ %phi.sel, %if.then18.loopexit ]
  call void @_raw_spin_lock_bh(ptr noundef %mbox_lock) #14
  %call.i.i307 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %entry1) #14
  br i1 %call.i.i307, label %if.end.i.i308, label %if.then18.list_del.exit_crit_edge

if.then18.list_del.exit_crit_edge:                ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit

if.end.i.i308:                                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #16
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 4
  %20 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %entry1, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %19, ptr %prev1.i.i.i, align 4
  %23 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %21, ptr %19, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i308, %if.then18.list_del.exit_crit_edge
  %24 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1, align 4
  %25 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 290 to ptr), ptr %1, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %mbox_lock) #14
  %mbox_log.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 59
  %26 = ptrtoint ptr %mbox_log.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %mbox_log.i, align 4
  %cursor.i = getelementptr inbounds %struct.mbox_cmd_log, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %cursor.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cursor.i, align 4
  %inc.i = add i32 %29, 1
  %arrayidx.i.i = getelementptr %struct.mbox_cmd_log, ptr %27, i32 1
  %arrayidx1.i.i = getelementptr %struct.mbox_cmd, ptr %arrayidx.i.i, i32 %29
  %30 = ptrtoint ptr %27 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %27, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i, i32 %31)
  %cmp.i = icmp eq i32 %inc.i, %31
  %spec.store.select.i = select i1 %cmp.i, i32 0, i32 %inc.i
  %32 = ptrtoint ptr %cursor.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %spec.store.select.i, ptr %cursor.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %size)
  %cmp52.not.i = icmp ult i32 %size, 8
  br i1 %cmp52.not.i, label %list_del.exit.while.body.preheader.i_crit_edge, label %for.body.preheader.i

list_del.exit.while.body.preheader.i_crit_edge:   ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i

for.body.preheader.i:                             ; preds = %list_del.exit
  %div1.i = lshr i32 %size, 3
  br label %for.body.i

while.cond.preheader.i:                           ; preds = %for.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %size)
  %cmp94.i = icmp ult i32 %size, 64
  br i1 %cmp94.i, label %while.cond.preheader.i.while.body.preheader.i_crit_edge, label %while.cond.preheader.i.t4_record_mbox.exit_crit_edge

while.cond.preheader.i.t4_record_mbox.exit_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_record_mbox.exit

while.cond.preheader.i.while.body.preheader.i_crit_edge: ; preds = %while.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i

while.body.preheader.i:                           ; preds = %while.cond.preheader.i.while.body.preheader.i_crit_edge, %list_del.exit.while.body.preheader.i_crit_edge
  %i.0.lcssa8.i = phi i32 [ %div1.i, %while.cond.preheader.i.while.body.preheader.i_crit_edge ], [ 0, %list_del.exit.while.body.preheader.i_crit_edge ]
  %33 = mul i32 %29, 80
  %34 = shl nuw i32 %i.0.lcssa8.i, 3
  %35 = or i32 %33, 12
  %36 = add i32 %35, %34
  %uglygep.i = getelementptr i8, ptr %27, i32 %36
  %37 = sub i32 64, %34
  %38 = call ptr @memset(ptr %uglygep.i, i32 0, i32 %37)
  br label %t4_record_mbox.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.03.i = phi i32 [ %inc8.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %arrayidx.i = getelementptr i64, ptr %cmd, i32 %i.03.i
  %39 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %arrayidx.i, align 8
  %arrayidx7.i = getelementptr [8 x i64], ptr %arrayidx1.i.i, i32 0, i32 %i.03.i
  %41 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_store8_noabort(i32 %41)
  store i64 %40, ptr %arrayidx7.i, align 8
  %inc8.i = add nuw nsw i32 %i.03.i, 1
  %exitcond.not.i = icmp eq i32 %inc8.i, %div1.i
  br i1 %exitcond.not.i, label %while.cond.preheader.i, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

t4_record_mbox.exit:                              ; preds = %while.body.preheader.i, %while.cond.preheader.i.t4_record_mbox.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %42 = load volatile i32, ptr @jiffies, align 128
  %conv.i = zext i32 %42 to i64
  %timestamp.i = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i, i32 0, i32 1
  %43 = ptrtoint ptr %timestamp.i to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %conv.i, ptr %timestamp.i, align 8
  %seqno.i = getelementptr inbounds %struct.mbox_cmd_log, ptr %27, i32 0, i32 2
  %44 = ptrtoint ptr %seqno.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %seqno.i, align 4
  %inc13.i = add i32 %45, 1
  store i32 %inc13.i, ptr %seqno.i, align 4
  %seqno14.i = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i, i32 0, i32 2
  %46 = ptrtoint ptr %seqno14.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %seqno14.i, align 8
  %access16.i = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i, i32 0, i32 3
  %47 = ptrtoint ptr %access16.i to i32
  call void @__asan_store2_noabort(i32 %47)
  store i16 0, ptr %access16.i, align 4
  %conv17.i = trunc i32 %tobool17.not.lcssa to i16
  %execute18.i = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i, i32 0, i32 4
  %48 = ptrtoint ptr %execute18.i to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %conv17.i, ptr %execute18.i, align 2
  br label %cleanup

if.end24:                                         ; preds = %for.inc.if.end24_crit_edge, %list_add_tail.exit.if.end24_crit_edge
  %delay_idx.0434 = phi i32 [ %delay_idx.2, %for.inc.if.end24_crit_edge ], [ 0, %list_add_tail.exit.if.end24_crit_edge ]
  %ms.0432 = phi i32 [ %ms.1, %for.inc.if.end24_crit_edge ], [ 1, %list_add_tail.exit.if.end24_crit_edge ]
  %i.0431 = phi i32 [ %add54, %for.inc.if.end24_crit_edge ], [ 0, %list_add_tail.exit.if.end24_crit_edge ]
  %49 = ptrtoint ptr %mlist to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %mlist, align 4
  %cmp27 = icmp eq ptr %50, %entry1
  br i1 %cmp27, label %for.end, label %if.end30

if.end30:                                         ; preds = %if.end24
  br i1 %spec.select300, label %if.then32, label %while.cond.preheader

if.then32:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx = getelementptr [10 x i32], ptr @t4_wr_mbox_meat_timeout.delay, i32 0, i32 %delay_idx.0434
  %51 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %delay_idx.0434)
  %cmp33 = icmp ult i32 %delay_idx.0434, 9
  %inc = zext i1 %cmp33 to i32
  %spec.select302 = add i32 %delay_idx.0434, %inc
  call void @msleep(i32 noundef %52) #14
  br label %for.inc

while.cond.preheader:                             ; preds = %if.end30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ms.0432)
  %tobool51.not426 = icmp eq i32 %ms.0432, 0
  br i1 %tobool51.not426, label %while.cond.preheader.for.inc_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.for.inc_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %__ms.0427 = phi i32 [ %dec, %while.body.while.body_crit_edge ], [ %ms.0432, %while.cond.preheader.while.body_crit_edge ]
  %dec = add i32 %__ms.0427, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %53 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %53(i32 noundef 214748000) #14
  %tobool51.not = icmp eq i32 %dec, 0
  br i1 %tobool51.not, label %while.body.for.inc_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.body.for.inc_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %while.body.for.inc_crit_edge, %while.cond.preheader.for.inc_crit_edge, %if.then32
  %ms.1 = phi i32 [ %52, %if.then32 ], [ 0, %while.cond.preheader.for.inc_crit_edge ], [ %ms.0432, %while.body.for.inc_crit_edge ]
  %delay_idx.2 = phi i32 [ %spec.select302, %if.then32 ], [ %delay_idx.0434, %while.cond.preheader.for.inc_crit_edge ], [ %delay_idx.0434, %while.body.for.inc_crit_edge ]
  %add54 = add i32 %ms.1, %i.0431
  %54 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %55, i32 12472
  %56 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 10001, i32 %add54)
  %cmp14 = icmp slt i32 %add54, 10001
  %.mask = and i32 %56, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool17.not = icmp eq i32 %.mask, 0
  %or.cond301 = select i1 %cmp14, i1 %tobool17.not, i1 false
  br i1 %or.cond301, label %for.inc.if.end24_crit_edge, label %if.then18.loopexit

for.inc.if.end24_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end24

for.end:                                          ; preds = %if.end24
  %57 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %adap, align 128
  %add.ptr.i310 = getelementptr i8, ptr %58, i32 %add5
  %59 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i310) #14, !srcloc !992
  %60 = lshr i32 %59, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %v.0435 = and i32 %60, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %v.0435)
  %cmp58436 = icmp eq i32 %v.0435, 0
  br i1 %cmp58436, label %for.body, label %for.end.for.end67_crit_edge

for.end.for.end67_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end67

for.body:                                         ; preds = %for.end
  %61 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %adap, align 128
  %add.ptr.i311 = getelementptr i8, ptr %62, i32 %add5
  %63 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i311) #14, !srcloc !992
  %64 = lshr i32 %63, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %v.0 = and i32 %64, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %v.0)
  %cmp58 = icmp eq i32 %v.0, 0
  br i1 %cmp58, label %for.body.1, label %for.body.for.end67_crit_edge

for.body.for.end67_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end67

for.body.1:                                       ; preds = %for.body
  %65 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %adap, align 128
  %add.ptr.i311.1 = getelementptr i8, ptr %66, i32 %add5
  %67 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i311.1) #14, !srcloc !992
  %68 = lshr i32 %67, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %v.0.1 = and i32 %68, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %v.0.1)
  %cmp58.1 = icmp eq i32 %v.0.1, 0
  br i1 %cmp58.1, label %for.body.2, label %for.body.1.for.end67_crit_edge

for.body.1.for.end67_crit_edge:                   ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end67

for.body.2:                                       ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  %69 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %adap, align 128
  %add.ptr.i311.2 = getelementptr i8, ptr %70, i32 %add5
  %71 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i311.2) #14, !srcloc !992
  %72 = lshr i32 %71, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %v.0.2 = and i32 %72, 3
  br label %for.end67

for.end67:                                        ; preds = %for.body.2, %for.body.1.for.end67_crit_edge, %for.body.for.end67_crit_edge, %for.end.for.end67_crit_edge
  %v.0.lcssa = phi i32 [ %v.0435, %for.end.for.end67_crit_edge ], [ %v.0, %for.body.for.end67_crit_edge ], [ %v.0.1, %for.body.1.for.end67_crit_edge ], [ %v.0.2, %for.body.2 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %v.0.lcssa)
  %cmp68.not = icmp eq i32 %v.0.lcssa, 2
  br i1 %cmp68.not, label %if.end78, label %if.then70

if.then70:                                        ; preds = %for.end67
  call void @_raw_spin_lock_bh(ptr noundef %mbox_lock) #14
  %call.i.i312 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %entry1) #14
  br i1 %call.i.i312, label %if.end.i.i315, label %if.then70.list_del.exit317_crit_edge

if.then70.list_del.exit317_crit_edge:             ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit317

if.end.i.i315:                                    ; preds = %if.then70
  call void @__sanitizer_cov_trace_pc() #16
  %73 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %1, align 4
  %75 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %entry1, align 4
  %prev1.i.i.i314 = getelementptr inbounds %struct.list_head, ptr %76, i32 0, i32 1
  %77 = ptrtoint ptr %prev1.i.i.i314 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %74, ptr %prev1.i.i.i314, align 4
  %78 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %78)
  store volatile ptr %76, ptr %74, align 4
  br label %list_del.exit317

list_del.exit317:                                 ; preds = %if.end.i.i315, %if.then70.list_del.exit317_crit_edge
  %79 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1, align 4
  %80 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr inttoptr (i32 290 to ptr), ptr %1, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %mbox_lock) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %v.0.lcssa)
  %cmp74 = icmp eq i32 %v.0.lcssa, 1
  %cond76 = select i1 %cmp74, i32 -16, i32 -110
  %mbox_log.i318 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 59
  %81 = ptrtoint ptr %mbox_log.i318 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %mbox_log.i318, align 4
  %cursor.i319 = getelementptr inbounds %struct.mbox_cmd_log, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %cursor.i319 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %cursor.i319, align 4
  %inc.i320 = add i32 %84, 1
  %arrayidx.i.i321 = getelementptr %struct.mbox_cmd_log, ptr %82, i32 1
  %arrayidx1.i.i322 = getelementptr %struct.mbox_cmd, ptr %arrayidx.i.i321, i32 %84
  %85 = ptrtoint ptr %82 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %82, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i320, i32 %86)
  %cmp.i323 = icmp eq i32 %inc.i320, %86
  %spec.store.select.i324 = select i1 %cmp.i323, i32 0, i32 %inc.i320
  %87 = ptrtoint ptr %cursor.i319 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %spec.store.select.i324, ptr %cursor.i319, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %size)
  %cmp52.not.i325 = icmp ult i32 %size, 8
  br i1 %cmp52.not.i325, label %list_del.exit317.while.body.preheader.i332_crit_edge, label %for.body.preheader.i327

list_del.exit317.while.body.preheader.i332_crit_edge: ; preds = %list_del.exit317
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i332

for.body.preheader.i327:                          ; preds = %list_del.exit317
  %div1.i326 = lshr i32 %size, 3
  br label %for.body.i338

while.cond.preheader.i329:                        ; preds = %for.body.i338
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %size)
  %cmp94.i328 = icmp ult i32 %size, 64
  br i1 %cmp94.i328, label %while.cond.preheader.i329.while.body.preheader.i332_crit_edge, label %while.cond.preheader.i329.t4_record_mbox.exit347_crit_edge

while.cond.preheader.i329.t4_record_mbox.exit347_crit_edge: ; preds = %while.cond.preheader.i329
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_record_mbox.exit347

while.cond.preheader.i329.while.body.preheader.i332_crit_edge: ; preds = %while.cond.preheader.i329
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i332

while.body.preheader.i332:                        ; preds = %while.cond.preheader.i329.while.body.preheader.i332_crit_edge, %list_del.exit317.while.body.preheader.i332_crit_edge
  %i.0.lcssa8.i330 = phi i32 [ %div1.i326, %while.cond.preheader.i329.while.body.preheader.i332_crit_edge ], [ 0, %list_del.exit317.while.body.preheader.i332_crit_edge ]
  %88 = mul i32 %84, 80
  %89 = shl nuw i32 %i.0.lcssa8.i330, 3
  %90 = or i32 %88, 12
  %91 = add i32 %90, %89
  %uglygep.i331 = getelementptr i8, ptr %82, i32 %91
  %92 = sub i32 64, %89
  %93 = call ptr @memset(ptr %uglygep.i331, i32 0, i32 %92)
  br label %t4_record_mbox.exit347

for.body.i338:                                    ; preds = %for.body.i338.for.body.i338_crit_edge, %for.body.preheader.i327
  %i.03.i333 = phi i32 [ %inc8.i336, %for.body.i338.for.body.i338_crit_edge ], [ 0, %for.body.preheader.i327 ]
  %arrayidx.i334 = getelementptr i64, ptr %cmd, i32 %i.03.i333
  %94 = ptrtoint ptr %arrayidx.i334 to i32
  call void @__asan_load8_noabort(i32 %94)
  %95 = load i64, ptr %arrayidx.i334, align 8
  %arrayidx7.i335 = getelementptr [8 x i64], ptr %arrayidx1.i.i322, i32 0, i32 %i.03.i333
  %96 = ptrtoint ptr %arrayidx7.i335 to i32
  call void @__asan_store8_noabort(i32 %96)
  store i64 %95, ptr %arrayidx7.i335, align 8
  %inc8.i336 = add nuw nsw i32 %i.03.i333, 1
  %exitcond.not.i337 = icmp eq i32 %inc8.i336, %div1.i326
  br i1 %exitcond.not.i337, label %while.cond.preheader.i329, label %for.body.i338.for.body.i338_crit_edge

for.body.i338.for.body.i338_crit_edge:            ; preds = %for.body.i338
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i338

t4_record_mbox.exit347:                           ; preds = %while.body.preheader.i332, %while.cond.preheader.i329.t4_record_mbox.exit347_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %97 = load volatile i32, ptr @jiffies, align 128
  %conv.i339 = zext i32 %97 to i64
  %timestamp.i340 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i322, i32 0, i32 1
  %98 = ptrtoint ptr %timestamp.i340 to i32
  call void @__asan_store8_noabort(i32 %98)
  store i64 %conv.i339, ptr %timestamp.i340, align 8
  %seqno.i341 = getelementptr inbounds %struct.mbox_cmd_log, ptr %82, i32 0, i32 2
  %99 = ptrtoint ptr %seqno.i341 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %seqno.i341, align 4
  %inc13.i342 = add i32 %100, 1
  store i32 %inc13.i342, ptr %seqno.i341, align 4
  %seqno14.i343 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i322, i32 0, i32 2
  %101 = ptrtoint ptr %seqno14.i343 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %100, ptr %seqno14.i343, align 8
  %access16.i344 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i322, i32 0, i32 3
  %102 = ptrtoint ptr %access16.i344 to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 0, ptr %access16.i344, align 4
  %conv17.i345 = trunc i32 %cond76 to i16
  %execute18.i346 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i322, i32 0, i32 4
  %103 = ptrtoint ptr %execute18.i346 to i32
  call void @__asan_store2_noabort(i32 %103)
  store i16 %conv17.i345, ptr %execute18.i346, align 2
  br label %cleanup

if.end78:                                         ; preds = %for.end67
  %mbox_log.i348 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 59
  %104 = ptrtoint ptr %mbox_log.i348 to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %mbox_log.i348, align 4
  %cursor.i349 = getelementptr inbounds %struct.mbox_cmd_log, ptr %105, i32 0, i32 1
  %106 = ptrtoint ptr %cursor.i349 to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load i32, ptr %cursor.i349, align 4
  %inc.i350 = add i32 %107, 1
  %arrayidx.i.i351 = getelementptr %struct.mbox_cmd_log, ptr %105, i32 1
  %arrayidx1.i.i352 = getelementptr %struct.mbox_cmd, ptr %arrayidx.i.i351, i32 %107
  %108 = ptrtoint ptr %105 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %105, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i350, i32 %109)
  %cmp.i353 = icmp eq i32 %inc.i350, %109
  %spec.store.select.i354 = select i1 %cmp.i353, i32 0, i32 %inc.i350
  %110 = ptrtoint ptr %cursor.i349 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %spec.store.select.i354, ptr %cursor.i349, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %size)
  %cmp52.not.i355 = icmp ult i32 %size, 8
  br i1 %cmp52.not.i355, label %if.end78.while.body.preheader.i362_crit_edge, label %for.body.preheader.i357

if.end78.while.body.preheader.i362_crit_edge:     ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i362

for.body.preheader.i357:                          ; preds = %if.end78
  %div1.i356 = lshr i32 %size, 3
  br label %for.body.i368

while.cond.preheader.i359:                        ; preds = %for.body.i368
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %size)
  %cmp94.i358 = icmp ult i32 %size, 64
  br i1 %cmp94.i358, label %while.cond.preheader.i359.while.body.preheader.i362_crit_edge, label %while.cond.preheader.i359.t4_record_mbox.exit376_crit_edge

while.cond.preheader.i359.t4_record_mbox.exit376_crit_edge: ; preds = %while.cond.preheader.i359
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_record_mbox.exit376

while.cond.preheader.i359.while.body.preheader.i362_crit_edge: ; preds = %while.cond.preheader.i359
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader.i362

while.body.preheader.i362:                        ; preds = %while.cond.preheader.i359.while.body.preheader.i362_crit_edge, %if.end78.while.body.preheader.i362_crit_edge
  %i.0.lcssa8.i360 = phi i32 [ %div1.i356, %while.cond.preheader.i359.while.body.preheader.i362_crit_edge ], [ 0, %if.end78.while.body.preheader.i362_crit_edge ]
  %111 = mul i32 %107, 80
  %112 = shl nuw i32 %i.0.lcssa8.i360, 3
  %113 = or i32 %111, 12
  %114 = add i32 %113, %112
  %uglygep.i361 = getelementptr i8, ptr %105, i32 %114
  %115 = sub i32 64, %112
  %116 = call ptr @memset(ptr %uglygep.i361, i32 0, i32 %115)
  br label %t4_record_mbox.exit376

for.body.i368:                                    ; preds = %for.body.i368.for.body.i368_crit_edge, %for.body.preheader.i357
  %i.03.i363 = phi i32 [ %inc8.i366, %for.body.i368.for.body.i368_crit_edge ], [ 0, %for.body.preheader.i357 ]
  %arrayidx.i364 = getelementptr i64, ptr %cmd, i32 %i.03.i363
  %117 = ptrtoint ptr %arrayidx.i364 to i32
  call void @__asan_load8_noabort(i32 %117)
  %118 = load i64, ptr %arrayidx.i364, align 8
  %arrayidx7.i365 = getelementptr [8 x i64], ptr %arrayidx1.i.i352, i32 0, i32 %i.03.i363
  %119 = ptrtoint ptr %arrayidx7.i365 to i32
  call void @__asan_store8_noabort(i32 %119)
  store i64 %118, ptr %arrayidx7.i365, align 8
  %inc8.i366 = add nuw nsw i32 %i.03.i363, 1
  %exitcond.not.i367 = icmp eq i32 %inc8.i366, %div1.i356
  br i1 %exitcond.not.i367, label %while.cond.preheader.i359, label %for.body.i368.for.body.i368_crit_edge

for.body.i368.for.body.i368_crit_edge:            ; preds = %for.body.i368
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i368

t4_record_mbox.exit376:                           ; preds = %while.body.preheader.i362, %while.cond.preheader.i359.t4_record_mbox.exit376_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %120 = load volatile i32, ptr @jiffies, align 128
  %conv.i369 = zext i32 %120 to i64
  %timestamp.i370 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i352, i32 0, i32 1
  %121 = ptrtoint ptr %timestamp.i370 to i32
  call void @__asan_store8_noabort(i32 %121)
  store i64 %conv.i369, ptr %timestamp.i370, align 8
  %seqno.i371 = getelementptr inbounds %struct.mbox_cmd_log, ptr %105, i32 0, i32 2
  %122 = ptrtoint ptr %seqno.i371 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %seqno.i371, align 4
  %inc13.i372 = add i32 %123, 1
  store i32 %inc13.i372, ptr %seqno.i371, align 4
  %seqno14.i373 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i352, i32 0, i32 2
  %124 = ptrtoint ptr %seqno14.i373 to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %123, ptr %seqno14.i373, align 8
  %access16.i374 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i352, i32 0, i32 3
  %125 = ptrtoint ptr %access16.i374 to i32
  call void @__asan_store2_noabort(i32 %125)
  store i16 0, ptr %access16.i374, align 4
  %execute18.i375 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i352, i32 0, i32 4
  %126 = ptrtoint ptr %execute18.i375 to i32
  call void @__asan_store2_noabort(i32 %126)
  store i16 0, ptr %execute18.i375, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp81439 = icmp sgt i32 %size, 0
  br i1 %cmp81439, label %t4_record_mbox.exit376.for.body83_crit_edge, label %t4_record_mbox.exit376.for.end87_crit_edge

t4_record_mbox.exit376.for.end87_crit_edge:       ; preds = %t4_record_mbox.exit376
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end87

t4_record_mbox.exit376.for.body83_crit_edge:      ; preds = %t4_record_mbox.exit376
  br label %for.body83

for.body83:                                       ; preds = %for.body83.for.body83_crit_edge, %t4_record_mbox.exit376.for.body83_crit_edge
  %p.0441 = phi ptr [ %incdec.ptr, %for.body83.for.body83_crit_edge ], [ %cmd, %t4_record_mbox.exit376.for.body83_crit_edge ]
  %i.2440 = phi i32 [ %add86, %for.body83.for.body83_crit_edge ], [ 0, %t4_record_mbox.exit376.for.body83_crit_edge ]
  %add84 = add i32 %i.2440, %add2
  %incdec.ptr = getelementptr i64, ptr %p.0441, i32 1
  %127 = ptrtoint ptr %p.0441 to i32
  call void @__asan_load8_noabort(i32 %127)
  %128 = load i64, ptr %p.0441, align 8
  %129 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %adap, align 128
  %add.ptr.i377 = getelementptr i8, ptr %130, i32 %add84
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !997
  call void @arm_heavy_mb() #14
  %conv.i.i = trunc i64 %128 to i32
  %131 = call i32 @llvm.bswap.i32(i32 %conv.i.i) #14
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i377, i32 %131) #14, !srcloc !995
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !998
  call void @arm_heavy_mb() #14
  %shr.i.i = lshr i64 %128, 32
  %conv3.i.i = trunc i64 %shr.i.i to i32
  %132 = call i32 @llvm.bswap.i32(i32 %conv3.i.i) #14
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i377, i32 4
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %132) #14, !srcloc !995
  %add86 = add i32 %i.2440, 8
  %cmp81 = icmp slt i32 %add86, %size
  br i1 %cmp81, label %for.body83.for.body83_crit_edge, label %for.body83.for.end87_crit_edge

for.body83.for.end87_crit_edge:                   ; preds = %for.body83
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end87

for.body83.for.body83_crit_edge:                  ; preds = %for.body83
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body83

for.end87:                                        ; preds = %for.body83.for.end87_crit_edge, %t4_record_mbox.exit376.for.end87_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %133 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %adap, align 128
  %add.ptr.i378 = getelementptr i8, ptr %134, i32 %add5
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i378, i32 150994944) #14, !srcloc !995
  %135 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %adap, align 128
  %add.ptr.i379 = getelementptr i8, ptr %136, i32 %add5
  %137 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i379) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %138 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load ptr, ptr %adap, align 128
  %add.ptr.i380444 = getelementptr i8, ptr %139, i32 12472
  %140 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i380444) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask423445 = and i32 %140, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask423445)
  %tobool92.not446 = icmp eq i32 %.mask423445, 0
  br i1 %tobool92.not446, label %for.end87.land.rhs93_crit_edge, label %for.end87.for.end171_crit_edge

for.end87.for.end171_crit_edge:                   ; preds = %for.end87
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end171

for.end87.land.rhs93_crit_edge:                   ; preds = %for.end87
  br label %land.rhs93

land.rhs93:                                       ; preds = %for.inc169.land.rhs93_crit_edge, %for.end87.land.rhs93_crit_edge
  %delay_idx.3451 = phi i32 [ %delay_idx.5, %for.inc169.land.rhs93_crit_edge ], [ 0, %for.end87.land.rhs93_crit_edge ]
  %ms.2449 = phi i32 [ %ms.3, %for.inc169.land.rhs93_crit_edge ], [ 1, %for.end87.land.rhs93_crit_edge ]
  %i.3447 = phi i32 [ %add170, %for.inc169.land.rhs93_crit_edge ], [ 0, %for.end87.land.rhs93_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %i.3447, i32 %8)
  %cmp94 = icmp slt i32 %i.3447, %8
  br i1 %cmp94, label %for.body97, label %land.rhs93.for.end171_crit_edge

land.rhs93.for.end171_crit_edge:                  ; preds = %land.rhs93
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end171

for.body97:                                       ; preds = %land.rhs93
  br i1 %spec.select300, label %if.then99, label %while.cond126.preheader

if.then99:                                        ; preds = %for.body97
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx100 = getelementptr [10 x i32], ptr @t4_wr_mbox_meat_timeout.delay, i32 0, i32 %delay_idx.3451
  %141 = ptrtoint ptr %arrayidx100 to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load i32, ptr %arrayidx100, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 9, i32 %delay_idx.3451)
  %cmp101 = icmp ult i32 %delay_idx.3451, 9
  %inc104 = zext i1 %cmp101 to i32
  %spec.select305 = add i32 %delay_idx.3451, %inc104
  call void @msleep(i32 noundef %142) #14
  br label %if.end132

while.cond126.preheader:                          ; preds = %for.body97
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ms.2449)
  %tobool128.not442 = icmp eq i32 %ms.2449, 0
  br i1 %tobool128.not442, label %while.cond126.preheader.if.end132_crit_edge, label %while.cond126.preheader.while.body129_crit_edge

while.cond126.preheader.while.body129_crit_edge:  ; preds = %while.cond126.preheader
  br label %while.body129

while.cond126.preheader.if.end132_crit_edge:      ; preds = %while.cond126.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end132

while.body129:                                    ; preds = %while.body129.while.body129_crit_edge, %while.cond126.preheader.while.body129_crit_edge
  %__ms125.0443 = phi i32 [ %dec127, %while.body129.while.body129_crit_edge ], [ %ms.2449, %while.cond126.preheader.while.body129_crit_edge ]
  %dec127 = add i32 %__ms125.0443, -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %143 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  call void %143(i32 noundef 214748000) #14
  %tobool128.not = icmp eq i32 %dec127, 0
  br i1 %tobool128.not, label %while.body129.if.end132_crit_edge, label %while.body129.while.body129_crit_edge

while.body129.while.body129_crit_edge:            ; preds = %while.body129
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body129

while.body129.if.end132_crit_edge:                ; preds = %while.body129
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end132

if.end132:                                        ; preds = %while.body129.if.end132_crit_edge, %while.cond126.preheader.if.end132_crit_edge, %if.then99
  %ms.3 = phi i32 [ %142, %if.then99 ], [ 0, %while.cond126.preheader.if.end132_crit_edge ], [ %ms.2449, %while.body129.if.end132_crit_edge ]
  %delay_idx.5 = phi i32 [ %spec.select305, %if.then99 ], [ %delay_idx.3451, %while.cond126.preheader.if.end132_crit_edge ], [ %delay_idx.3451, %while.body129.if.end132_crit_edge ]
  %144 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %adap, align 128
  %add.ptr.i381 = getelementptr i8, ptr %145, i32 %add5
  %146 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i381) #14, !srcloc !992
  %147 = call i32 @llvm.bswap.i32(i32 %146) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and135 = and i32 %147, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %and135)
  %cmp136 = icmp eq i32 %and135, 2
  br i1 %cmp136, label %if.then138, label %if.end132.for.inc169_crit_edge

if.end132.for.inc169_crit_edge:                   ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc169

if.then138:                                       ; preds = %if.end132
  %and139 = and i32 %147, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and139)
  %tobool140.not = icmp eq i32 %and139, 0
  br i1 %tobool140.not, label %if.then141, label %if.then138.for.body.i384_crit_edge

if.then138.for.body.i384_crit_edge:               ; preds = %if.then138
  br label %for.body.i384

if.then141:                                       ; preds = %if.then138
  call void @__sanitizer_cov_trace_pc() #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %148 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %adap, align 128
  %add.ptr.i382 = getelementptr i8, ptr %149, i32 %add5
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i382, i32 0) #14, !srcloc !995
  br label %for.inc169

for.body.i384:                                    ; preds = %for.body.i384.for.body.i384_crit_edge, %if.then138.for.body.i384_crit_edge
  %mbox_addr.addr.06.i = phi i32 [ %add.i, %for.body.i384.for.body.i384_crit_edge ], [ %add2, %if.then138.for.body.i384_crit_edge ]
  %nflit.addr.05.i = phi i32 [ %dec.i, %for.body.i384.for.body.i384_crit_edge ], [ 8, %if.then138.for.body.i384_crit_edge ]
  %rpl.addr.04.i = phi ptr [ %incdec.ptr.i, %for.body.i384.for.body.i384_crit_edge ], [ %cmd_rpl, %if.then138.for.body.i384_crit_edge ]
  %150 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %adap, align 128
  %add.ptr.i.i383 = getelementptr i8, ptr %151, i32 %mbox_addr.addr.06.i
  %152 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i383) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i = getelementptr i8, ptr %add.ptr.i.i383, i32 4
  %153 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %154 = zext i32 %153 to i64
  %155 = zext i32 %152 to i64
  %156 = shl nuw i64 %155, 32
  %157 = or i64 %156, %154
  %158 = call i64 @llvm.bswap.i64(i64 %157) #14
  %incdec.ptr.i = getelementptr i64, ptr %rpl.addr.04.i, i32 1
  %159 = ptrtoint ptr %rpl.addr.04.i to i32
  call void @__asan_store8_noabort(i32 %159)
  store i64 %158, ptr %rpl.addr.04.i, align 8
  %dec.i = add nsw i32 %nflit.addr.05.i, -1
  %add.i = add nuw nsw i32 %mbox_addr.addr.06.i, 8
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %get_mbox_rpl.exit, label %for.body.i384.for.body.i384_crit_edge

for.body.i384.for.body.i384_crit_edge:            ; preds = %for.body.i384
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i384

get_mbox_rpl.exit:                                ; preds = %for.body.i384
  %160 = ptrtoint ptr %cmd_rpl to i32
  call void @__asan_load8_noabort(i32 %160)
  %161 = load i64, ptr %cmd_rpl, align 8
  %shr144.mask = and i64 %161, -72057594037927936
  call void @__sanitizer_cov_trace_const_cmp8(i64 -9151314442816847872, i64 %shr144.mask)
  %cmp147 = icmp eq i64 %shr144.mask, -9151314442816847872
  br i1 %cmp147, label %if.then149, label %if.else150

if.then149:                                       ; preds = %get_mbox_rpl.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %asrt.i) #14
  %162 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i385 = getelementptr i8, ptr %163, i32 %add2
  %164 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i385) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.i = getelementptr i8, ptr %add.ptr.i.i.i385, i32 4
  %165 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %166 = zext i32 %165 to i64
  %167 = zext i32 %164 to i64
  %168 = shl nuw i64 %167, 32
  %169 = or i64 %168, %166
  %170 = call i64 @llvm.bswap.i64(i64 %169) #14
  %incdec.ptr.i.i = getelementptr inbounds i64, ptr %asrt.i, i32 1
  %171 = ptrtoint ptr %asrt.i to i32
  call void @__asan_store8_noabort(i32 %171)
  store i64 %170, ptr %asrt.i, align 8
  %add.i.i = add i32 %mul, 123464
  %172 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.1.i = getelementptr i8, ptr %173, i32 %add.i.i
  %174 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.1.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.1.i = getelementptr i8, ptr %add.ptr.i.i.1.i, i32 4
  %175 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %176 = zext i32 %175 to i64
  %177 = zext i32 %174 to i64
  %178 = shl nuw i64 %177, 32
  %179 = or i64 %178, %176
  %180 = call i64 @llvm.bswap.i64(i64 %179) #14
  %incdec.ptr.i.1.i = getelementptr inbounds i64, ptr %asrt.i, i32 2
  %181 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_store8_noabort(i32 %181)
  store i64 %180, ptr %incdec.ptr.i.i, align 8
  %add.i.1.i = add i32 %mul, 123472
  %182 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.2.i = getelementptr i8, ptr %183, i32 %add.i.1.i
  %184 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.2.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.2.i = getelementptr i8, ptr %add.ptr.i.i.2.i, i32 4
  %185 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.2.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %186 = zext i32 %185 to i64
  %187 = zext i32 %184 to i64
  %188 = shl nuw i64 %187, 32
  %189 = or i64 %188, %186
  %190 = call i64 @llvm.bswap.i64(i64 %189) #14
  %incdec.ptr.i.2.i = getelementptr inbounds i64, ptr %asrt.i, i32 3
  %191 = ptrtoint ptr %incdec.ptr.i.1.i to i32
  call void @__asan_store8_noabort(i32 %191)
  store i64 %190, ptr %incdec.ptr.i.1.i, align 8
  %add.i.2.i = add i32 %mul, 123480
  %192 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.3.i = getelementptr i8, ptr %193, i32 %add.i.2.i
  %194 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.3.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.3.i = getelementptr i8, ptr %add.ptr.i.i.3.i, i32 4
  %195 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.3.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %196 = zext i32 %195 to i64
  %197 = zext i32 %194 to i64
  %198 = shl nuw i64 %197, 32
  %199 = or i64 %198, %196
  %200 = call i64 @llvm.bswap.i64(i64 %199) #14
  %incdec.ptr.i.3.i = getelementptr inbounds i64, ptr %asrt.i, i32 4
  %201 = ptrtoint ptr %incdec.ptr.i.2.i to i32
  call void @__asan_store8_noabort(i32 %201)
  store i64 %200, ptr %incdec.ptr.i.2.i, align 8
  %add.i.3.i = add i32 %mul, 123488
  %202 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.4.i = getelementptr i8, ptr %203, i32 %add.i.3.i
  %204 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.4.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.4.i = getelementptr i8, ptr %add.ptr.i.i.4.i, i32 4
  %205 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.4.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %206 = zext i32 %205 to i64
  %207 = zext i32 %204 to i64
  %208 = shl nuw i64 %207, 32
  %209 = or i64 %208, %206
  %210 = call i64 @llvm.bswap.i64(i64 %209) #14
  %incdec.ptr.i.4.i = getelementptr inbounds i64, ptr %asrt.i, i32 5
  %211 = ptrtoint ptr %incdec.ptr.i.3.i to i32
  call void @__asan_store8_noabort(i32 %211)
  store i64 %210, ptr %incdec.ptr.i.3.i, align 8
  %add.i.4.i = add i32 %mul, 123496
  %212 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.5.i = getelementptr i8, ptr %213, i32 %add.i.4.i
  %214 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.5.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i.5.i = getelementptr i8, ptr %add.ptr.i.i.5.i, i32 4
  %215 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.5.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %216 = zext i32 %215 to i64
  %217 = zext i32 %214 to i64
  %218 = shl nuw i64 %217, 32
  %219 = or i64 %218, %216
  %220 = call i64 @llvm.bswap.i64(i64 %219) #14
  %221 = ptrtoint ptr %incdec.ptr.i.4.i to i32
  call void @__asan_store8_noabort(i32 %221)
  store i64 %220, ptr %incdec.ptr.i.4.i, align 8
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %222 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %pdev_dev.i, align 16
  %224 = trunc i64 %180 to i32
  %225 = lshr i64 %190, 32
  %226 = trunc i64 %225 to i32
  %227 = trunc i64 %190 to i32
  call void (ptr, ptr, ...) @_dev_alert(ptr noundef %223, ptr noundef nonnull @.str.229, ptr noundef %incdec.ptr.i.2.i, i32 noundef %224, i32 noundef %226, i32 noundef %227) #17
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %asrt.i) #14
  br label %if.end155

if.else150:                                       ; preds = %get_mbox_rpl.exit
  %tobool151.not = icmp eq ptr %rpl, null
  %extract.t299 = trunc i64 %161 to i32
  br i1 %tobool151.not, label %if.else150.if.end155_crit_edge, label %if.then152

if.else150.if.end155_crit_edge:                   ; preds = %if.else150
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end155

if.then152:                                       ; preds = %if.else150
  call void @__sanitizer_cov_trace_pc() #16
  %228 = call ptr @memcpy(ptr %rpl, ptr %cmd_rpl, i32 %size)
  br label %if.end155

if.end155:                                        ; preds = %if.then152, %if.else150.if.end155_crit_edge, %if.then149
  %res.0.off0 = phi i32 [ 1280, %if.then149 ], [ %extract.t299, %if.then152 ], [ %extract.t299, %if.else150.if.end155_crit_edge ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %229 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %229)
  %230 = load ptr, ptr %adap, align 128
  %add.ptr.i386 = getelementptr i8, ptr %230, i32 %add5
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i386, i32 0) #14, !srcloc !995
  %231 = ptrtoint ptr %mbox_log.i348 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load ptr, ptr %mbox_log.i348, align 4
  %cursor.i388 = getelementptr inbounds %struct.mbox_cmd_log, ptr %232, i32 0, i32 1
  %233 = ptrtoint ptr %cursor.i388 to i32
  call void @__asan_load4_noabort(i32 %233)
  %234 = load i32, ptr %cursor.i388, align 4
  %inc.i389 = add i32 %234, 1
  %arrayidx.i.i390 = getelementptr %struct.mbox_cmd_log, ptr %232, i32 1
  %arrayidx1.i.i391 = getelementptr %struct.mbox_cmd, ptr %arrayidx.i.i390, i32 %234
  %235 = ptrtoint ptr %232 to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %232, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc.i389, i32 %236)
  %cmp.i392 = icmp eq i32 %inc.i389, %236
  %spec.store.select.i393 = select i1 %cmp.i392, i32 0, i32 %inc.i389
  %237 = ptrtoint ptr %cursor.i388 to i32
  call void @__asan_store4_noabort(i32 %237)
  store i32 %spec.store.select.i393, ptr %cursor.i388, align 4
  %238 = call ptr @memcpy(ptr %arrayidx1.i.i391, ptr %cmd_rpl, i32 64)
  %add156 = add i32 %ms.3, %i.3447
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %239 = load volatile i32, ptr @jiffies, align 128
  %conv.i402 = zext i32 %239 to i64
  %timestamp.i403 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i391, i32 0, i32 1
  %240 = ptrtoint ptr %timestamp.i403 to i32
  call void @__asan_store8_noabort(i32 %240)
  store i64 %conv.i402, ptr %timestamp.i403, align 8
  %seqno.i404 = getelementptr inbounds %struct.mbox_cmd_log, ptr %232, i32 0, i32 2
  %241 = ptrtoint ptr %seqno.i404 to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load i32, ptr %seqno.i404, align 4
  %inc13.i405 = add i32 %242, 1
  store i32 %inc13.i405, ptr %seqno.i404, align 4
  %seqno14.i406 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i391, i32 0, i32 2
  %243 = ptrtoint ptr %seqno14.i406 to i32
  call void @__asan_store4_noabort(i32 %243)
  store i32 %242, ptr %seqno14.i406, align 8
  %access16.i407 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i391, i32 0, i32 3
  %244 = ptrtoint ptr %access16.i407 to i32
  call void @__asan_store2_noabort(i32 %244)
  store i16 0, ptr %access16.i407, align 4
  %conv17.i408 = trunc i32 %add156 to i16
  %execute18.i409 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i.i391, i32 0, i32 4
  %245 = ptrtoint ptr %execute18.i409 to i32
  call void @__asan_store2_noabort(i32 %245)
  store i16 %conv17.i408, ptr %execute18.i409, align 2
  call void @_raw_spin_lock_bh(ptr noundef %mbox_lock) #14
  %call.i.i411 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %entry1) #14
  br i1 %call.i.i411, label %if.end.i.i414, label %if.end155.list_del.exit416_crit_edge

if.end155.list_del.exit416_crit_edge:             ; preds = %if.end155
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit416

if.end.i.i414:                                    ; preds = %if.end155
  call void @__sanitizer_cov_trace_pc() #16
  %246 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %246)
  %247 = load ptr, ptr %1, align 4
  %248 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %248)
  %249 = load ptr, ptr %entry1, align 4
  %prev1.i.i.i413 = getelementptr inbounds %struct.list_head, ptr %249, i32 0, i32 1
  %250 = ptrtoint ptr %prev1.i.i.i413 to i32
  call void @__asan_store4_noabort(i32 %250)
  store ptr %247, ptr %prev1.i.i.i413, align 4
  %251 = ptrtoint ptr %247 to i32
  call void @__asan_store4_noabort(i32 %251)
  store volatile ptr %249, ptr %247, align 4
  br label %list_del.exit416

list_del.exit416:                                 ; preds = %if.end.i.i414, %if.end155.list_del.exit416_crit_edge
  %252 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %252)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1, align 4
  %253 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %253)
  store ptr inttoptr (i32 290 to ptr), ptr %1, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %mbox_lock) #14
  %254 = lshr i32 %res.0.off0, 8
  %and166 = and i32 %254, 255
  %sub167 = sub nsw i32 0, %and166
  br label %cleanup

for.inc169:                                       ; preds = %if.then141, %if.end132.for.inc169_crit_edge
  %add170 = add i32 %ms.3, %i.3447
  %255 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %255)
  %256 = load ptr, ptr %adap, align 128
  %add.ptr.i380 = getelementptr i8, ptr %256, i32 12472
  %257 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i380) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask423 = and i32 %257, 128
  %tobool92.not = icmp eq i32 %.mask423, 0
  br i1 %tobool92.not, label %for.inc169.land.rhs93_crit_edge, label %for.inc169.for.end171_crit_edge

for.inc169.for.end171_crit_edge:                  ; preds = %for.inc169
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end171

for.inc169.land.rhs93_crit_edge:                  ; preds = %for.inc169
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs93

for.end171:                                       ; preds = %for.inc169.for.end171_crit_edge, %land.rhs93.for.end171_crit_edge, %for.end87.for.end171_crit_edge
  %cond174 = phi i32 [ -6, %for.end87.for.end171_crit_edge ], [ -6, %for.inc169.for.end171_crit_edge ], [ -110, %land.rhs93.for.end171_crit_edge ]
  call fastcc void @t4_record_mbox(ptr noundef %adap, ptr noundef %cmd, i32 noundef %size, i32 noundef %cond174)
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %258 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %pdev_dev, align 16
  %260 = ptrtoint ptr %cmd to i32
  call void @__asan_load1_noabort(i32 %260)
  %261 = load i8, ptr %cmd, align 1
  %conv176 = zext i8 %261 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %259, ptr noundef nonnull @.str, i32 noundef %conv176, i32 noundef %mbox) #17
  call fastcc void @t4_report_fw_error(ptr noundef %adap)
  call void @_raw_spin_lock_bh(ptr noundef %mbox_lock) #14
  %call.i.i417 = call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %entry1) #14
  br i1 %call.i.i417, label %if.end.i.i420, label %for.end171.list_del.exit422_crit_edge

for.end171.list_del.exit422_crit_edge:            ; preds = %for.end171
  call void @__sanitizer_cov_trace_pc() #16
  br label %list_del.exit422

if.end.i.i420:                                    ; preds = %for.end171
  call void @__sanitizer_cov_trace_pc() #16
  %262 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %262)
  %263 = load ptr, ptr %1, align 4
  %264 = ptrtoint ptr %entry1 to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load ptr, ptr %entry1, align 4
  %prev1.i.i.i419 = getelementptr inbounds %struct.list_head, ptr %265, i32 0, i32 1
  %266 = ptrtoint ptr %prev1.i.i.i419 to i32
  call void @__asan_store4_noabort(i32 %266)
  store ptr %263, ptr %prev1.i.i.i419, align 4
  %267 = ptrtoint ptr %263 to i32
  call void @__asan_store4_noabort(i32 %267)
  store volatile ptr %265, ptr %263, align 4
  br label %list_del.exit422

list_del.exit422:                                 ; preds = %if.end.i.i420, %for.end171.list_del.exit422_crit_edge
  %268 = ptrtoint ptr %entry1 to i32
  call void @__asan_store4_noabort(i32 %268)
  store ptr inttoptr (i32 256 to ptr), ptr %entry1, align 4
  %269 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %269)
  store ptr inttoptr (i32 290 to ptr), ptr %1, align 4
  call void @_raw_spin_unlock_bh(ptr noundef %mbox_lock) #14
  call void @t4_fatal_err(ptr noundef %adap) #14
  br label %cleanup

cleanup:                                          ; preds = %list_del.exit422, %list_del.exit416, %t4_record_mbox.exit347, %t4_record_mbox.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %tobool17.not.lcssa, %t4_record_mbox.exit ], [ %cond76, %t4_record_mbox.exit347 ], [ %cond174, %list_del.exit422 ], [ %sub167, %list_del.exit416 ], [ -22, %entry.cleanup_crit_edge ], [ -5, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %cmd_rpl) #14
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %entry1) #14
  ret i32 %retval.0
}

; Function Attrs: nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @t4_record_mbox(ptr nocapture noundef readonly %adapter, ptr nocapture noundef readonly %cmd, i32 noundef %size, i32 noundef %execute) unnamed_addr #2 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mbox_log = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 59
  %0 = ptrtoint ptr %mbox_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %mbox_log, align 4
  %cursor = getelementptr inbounds %struct.mbox_cmd_log, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cursor to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cursor, align 4
  %inc = add i32 %3, 1
  %arrayidx.i = getelementptr %struct.mbox_cmd_log, ptr %1, i32 1
  %arrayidx1.i = getelementptr %struct.mbox_cmd, ptr %arrayidx.i, i32 %3
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %1, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %5)
  %cmp = icmp eq i32 %inc, %5
  %spec.store.select = select i1 %cmp, i32 0, i32 %inc
  %6 = ptrtoint ptr %cursor to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %spec.store.select, ptr %cursor, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %size)
  %cmp52.not = icmp ult i32 %size, 8
  br i1 %cmp52.not, label %entry.while.body.preheader_crit_edge, label %for.body.preheader

entry.while.body.preheader_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader

for.body.preheader:                               ; preds = %entry
  %div1 = lshr i32 %size, 3
  br label %for.body

while.cond.preheader:                             ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %size)
  %cmp94 = icmp ult i32 %size, 64
  br i1 %cmp94, label %while.cond.preheader.while.body.preheader_crit_edge, label %while.cond.preheader.while.end_crit_edge

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.cond.preheader.while.body.preheader_crit_edge: ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.preheader

while.body.preheader:                             ; preds = %while.cond.preheader.while.body.preheader_crit_edge, %entry.while.body.preheader_crit_edge
  %i.0.lcssa8 = phi i32 [ %div1, %while.cond.preheader.while.body.preheader_crit_edge ], [ 0, %entry.while.body.preheader_crit_edge ]
  %7 = mul i32 %3, 80
  %8 = shl nuw i32 %i.0.lcssa8, 3
  %9 = add i32 %7, %8
  %10 = add i32 %9, 12
  %uglygep = getelementptr i8, ptr %1, i32 %10
  %11 = sub i32 64, %8
  %12 = call ptr @memset(ptr %uglygep, i32 0, i32 %11)
  br label %while.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.03 = phi i32 [ %inc8, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr i64, ptr %cmd, i32 %i.03
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %arrayidx, align 8
  %arrayidx7 = getelementptr [8 x i64], ptr %arrayidx1.i, i32 0, i32 %i.03
  %15 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %arrayidx7, align 8
  %inc8 = add nuw nsw i32 %i.03, 1
  %exitcond.not = icmp eq i32 %inc8, %div1
  br i1 %exitcond.not, label %while.cond.preheader, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

while.end:                                        ; preds = %while.body.preheader, %while.cond.preheader.while.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %16 = load volatile i32, ptr @jiffies, align 128
  %conv = zext i32 %16 to i64
  %timestamp = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i, i32 0, i32 1
  %17 = ptrtoint ptr %timestamp to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %conv, ptr %timestamp, align 8
  %seqno = getelementptr inbounds %struct.mbox_cmd_log, ptr %1, i32 0, i32 2
  %18 = ptrtoint ptr %seqno to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %seqno, align 4
  %inc13 = add i32 %19, 1
  store i32 %inc13, ptr %seqno, align 4
  %seqno14 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i, i32 0, i32 2
  %20 = ptrtoint ptr %seqno14 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %seqno14, align 8
  %access16 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i, i32 0, i32 3
  %21 = ptrtoint ptr %access16 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 0, ptr %access16, align 4
  %conv17 = trunc i32 %execute to i16
  %execute18 = getelementptr inbounds %struct.mbox_cmd, ptr %arrayidx1.i, i32 0, i32 4
  %22 = ptrtoint ptr %execute18 to i32
  call void @__asan_store2_noabort(i32 %22)
  store i16 %conv17, ptr %execute18, align 2
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @msleep(i32 noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_err(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @t4_report_fw_error(ptr nocapture noundef %adap) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 12472
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %tobool.not = icmp sgt i32 %3, -1
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %4 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev_dev, align 16
  %shr = lshr i32 %3, 24
  %and1 = and i32 %shr, 7
  %arrayidx = getelementptr [8 x ptr], ptr @t4_report_fw_error.reason, i32 0, i32 %and1
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %5, ptr noundef nonnull @.str.240, ptr noundef %7) #17
  %flags = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 8
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 32
  %and2 = and i32 %9, -17
  store i32 %and2, ptr %flags, align 32
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @t4_fatal_err(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_wr_mbox_meat(ptr noundef %adap, i32 noundef %mbox, ptr nocapture noundef readonly %cmd, i32 noundef %size, ptr noundef %rpl, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef %cmd, i32 noundef %size, ptr noundef %rpl, i1 noundef zeroext %sleep_ok, i32 noundef 10000)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_memory_rw_init(ptr nocapture noundef readonly %adap, i32 noundef %win, i32 noundef %mtype, ptr nocapture noundef writeonly %mem_off, ptr nocapture noundef %mem_base, ptr nocapture noundef writeonly %mem_aperture) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 30656
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %4 = zext i32 %mtype to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i32 %mtype, label %if.then4 [
    i32 4, label %if.then
    i32 3, label %if.else8
  ]

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mul2 = shl i32 %3, 21
  br label %if.end15

if.then4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mul6 = shl i32 %mtype, 20
  %mul7 = mul i32 %mul6, %3
  br label %if.end15

if.else8:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i46 = getelementptr i8, ptr %6, i32 30664
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46) #14, !srcloc !992
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = shl i32 %3, 1
  %add = add i32 %8, %and
  %mul14 = shl i32 %add, 20
  br label %if.end15

if.end15:                                         ; preds = %if.else8, %if.then4, %if.then
  %mul7.sink = phi i32 [ %mul7, %if.then4 ], [ %mul14, %if.else8 ], [ %mul2, %if.then ]
  %9 = ptrtoint ptr %mem_off to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %mul7.sink, ptr %mem_off, align 4
  %mul16 = shl i32 %win, 3
  %add17 = add i32 %mul16, 12392
  %10 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adap, align 128
  %add.ptr.i47 = getelementptr i8, ptr %11, i32 %add17
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i47) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %12)
  %cmp19 = icmp eq i32 %12, -1
  br i1 %cmp19, label %if.end15.cleanup_crit_edge, label %if.end21

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end21:                                         ; preds = %if.end15
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #14
  %and23 = and i32 %13, 255
  %shl = shl i32 1024, %and23
  %14 = ptrtoint ptr %mem_aperture to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %shl, ptr %mem_aperture, align 4
  %shr25 = and i32 %13, -1024
  %15 = ptrtoint ptr %mem_base to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %shr25, ptr %mem_base, align 4
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %16 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %chip, align 8
  %18 = and i32 %17, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %18)
  %cmp.i.not = icmp eq i32 %18, 64
  br i1 %cmp.i.not, label %if.then29, label %if.end21.cleanup_crit_edge

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then29:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %t4_bar0 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 2
  %19 = ptrtoint ptr %t4_bar0 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %t4_bar0, align 8
  %sub = sub i32 %shr25, %20
  %21 = ptrtoint ptr %mem_base to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %sub, ptr %mem_base, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %if.end21.cleanup_crit_edge, %if.end15.cleanup_crit_edge
  %retval.0 = phi i32 [ -6, %if.end15.cleanup_crit_edge ], [ 0, %if.then29 ], [ 0, %if.end21.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_memory_update_win(ptr nocapture noundef readonly %adap, i32 noundef %win, i32 noundef %addr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %win, 3
  %add = add i32 %mul, 12396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %addr) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i5 = getelementptr i8, ptr %4, i32 %add
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i5) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_memory_rw_residual(ptr nocapture noundef readonly %adap, i32 noundef %off, i32 noundef %addr, ptr nocapture noundef %buf, i32 noundef %dir) local_unnamed_addr #0 align 64 {
entry:
  %last = alloca %union.anon.198, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %last) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp = icmp eq i32 %dir, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 %addr
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %3 = ptrtoint ptr %last to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %last, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %off)
  %cmp124 = icmp slt i32 %off, 4
  br i1 %cmp124, label %for.body.preheader, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

for.body.preheader:                               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %uglygep26 = getelementptr i8, ptr %buf, i32 %off
  %uglygep27 = getelementptr i8, ptr %last, i32 %off
  %4 = sub i32 4, %off
  %5 = call ptr @memcpy(ptr %uglygep26, ptr %uglygep27, i32 %4)
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = ptrtoint ptr %buf to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %buf, align 1
  %conv = zext i8 %7 to i32
  %8 = ptrtoint ptr %last to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv, ptr %last, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %off)
  %cmp422 = icmp slt i32 %off, 4
  br i1 %cmp422, label %for.body6.preheader, label %if.else.for.end10_crit_edge

if.else.for.end10_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end10

for.body6.preheader:                              ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %uglygep = getelementptr i8, ptr %last, i32 %off
  %9 = sub i32 4, %off
  %10 = call ptr @memset(ptr %uglygep, i32 0, i32 %9)
  br label %for.end10

for.end10:                                        ; preds = %for.body6.preheader, %if.else.for.end10_crit_edge
  %11 = ptrtoint ptr %last to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %last, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adap, align 128
  %add.ptr.i21 = getelementptr i8, ptr %14, i32 %addr
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i21, i32 %12) #14, !srcloc !995
  br label %if.end

if.end:                                           ; preds = %for.end10, %for.body.preheader, %if.then.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %last) #14
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_memory_rw(ptr nocapture noundef readonly %adap, i32 noundef %win, i32 noundef %mtype, i32 noundef %addr, i32 noundef %len, ptr noundef %hbuf, i32 noundef %dir) local_unnamed_addr #0 align 64 {
entry:
  %last.i = alloca %union.anon.198, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %hbuf to i32
  %1 = or i32 %0, %addr
  %2 = and i32 %1, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %and3 = and i32 %len, 3
  %sub = and i32 %len, -4
  %4 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 30656
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %7 = tail call i32 @llvm.bswap.i32(i32 %6) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %8 = zext i32 %mtype to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.491)
  switch i32 %mtype, label %if.then4.i [
    i32 4, label %if.then.i
    i32 3, label %if.else8.i
  ]

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mul2.i = shl i32 %7, 21
  br label %if.end15.i

if.then4.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %mul6.i = shl i32 %mtype, 20
  %mul7.i = mul i32 %mul6.i, %7
  br label %if.end15.i

if.else8.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adap, align 128
  %add.ptr.i46.i = getelementptr i8, ptr %10, i32 30664
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46.i) #14, !srcloc !992
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and.i = shl i32 %7, 1
  %add.i = add i32 %12, %and.i
  %mul14.i = shl i32 %add.i, 20
  br label %if.end15.i

if.end15.i:                                       ; preds = %if.else8.i, %if.then4.i, %if.then.i
  %mul7.sink.i = phi i32 [ %mul7.i, %if.then4.i ], [ %mul14.i, %if.else8.i ], [ %mul2.i, %if.then.i ]
  %mul16.i = shl i32 %win, 3
  %add17.i = add i32 %mul16.i, 12392
  %13 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adap, align 128
  %add.ptr.i47.i = getelementptr i8, ptr %14, i32 %add17.i
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i47.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp19.i = icmp eq i32 %15, -1
  br i1 %cmp19.i, label %if.end15.i.cleanup_crit_edge, label %if.end21.i

if.end15.i.cleanup_crit_edge:                     ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end21.i:                                       ; preds = %if.end15.i
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  %and23.i = and i32 %16, 255
  %shl.i = shl i32 1024, %and23.i
  %shr25.i = and i32 %16, -1024
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %17 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %chip.i, align 8
  %19 = and i32 %18, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %19)
  %cmp.i.not.i = icmp eq i32 %19, 64
  br i1 %cmp.i.not.i, label %if.then29.i, label %if.end21.i.if.end6_crit_edge

if.end21.i.if.end6_crit_edge:                     ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then29.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  %t4_bar0.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 2
  %20 = ptrtoint ptr %t4_bar0.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %t4_bar0.i, align 8
  %sub.i = sub i32 %shr25.i, %21
  br label %if.end6

if.end6:                                          ; preds = %if.then29.i, %if.end21.i.if.end6_crit_edge
  %mem_base.0.ph = phi i32 [ %shr25.i, %if.end21.i.if.end6_crit_edge ], [ %sub.i, %if.then29.i ]
  %add = add i32 %mul7.sink.i, %addr
  %22 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %chip.i, align 8
  %24 = and i32 %23, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %24)
  %cmp.i.not = icmp eq i32 %24, 64
  br i1 %cmp.i.not, label %if.end6.cond.end_crit_edge, label %cond.false

if.end6.cond.end_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.false:                                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %25 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %pf, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end6.cond.end_crit_edge
  %cond = phi i32 [ %26, %cond.false ], [ 0, %if.end6.cond.end_crit_edge ]
  %neg = sub i32 0, %shl.i
  %and10 = and i32 %add, %neg
  %sub11 = sub i32 %add, %and10
  %or = or i32 %cond, %and10
  %add.i68 = add i32 %mul16.i, 12396
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %27 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %28 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adap, align 128
  %add.ptr.i.i69 = getelementptr i8, ptr %29, i32 %add.i68
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i69, i32 %27) #14, !srcloc !995
  %30 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adap, align 128
  %add.ptr.i5.i = getelementptr i8, ptr %31, i32 %add.i68
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i5.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp.not88 = icmp eq i32 %sub, 0
  br i1 %cmp.not88, label %cond.end.while.end_crit_edge, label %while.body.lr.ph

cond.end.while.end_crit_edge:                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %cond.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp12 = icmp eq i32 %dir, 1
  br label %while.body

while.body:                                       ; preds = %if.end25.while.body_crit_edge, %while.body.lr.ph
  %buf.093 = phi ptr [ %hbuf, %while.body.lr.ph ], [ %buf.1, %if.end25.while.body_crit_edge ]
  %offset.091 = phi i32 [ %sub11, %while.body.lr.ph ], [ %offset.1, %if.end25.while.body_crit_edge ]
  %pos.090 = phi i32 [ %and10, %while.body.lr.ph ], [ %pos.1, %if.end25.while.body_crit_edge ]
  %len.addr.089 = phi i32 [ %sub, %while.body.lr.ph ], [ %sub20, %if.end25.while.body_crit_edge ]
  %add14 = add i32 %offset.091, %mem_base.0.ph
  br i1 %cmp12, label %if.then13, label %if.else

if.then13:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %34, i32 %add14
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %36 = ptrtoint ptr %buf.093 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %buf.093, align 4
  br label %if.end18

if.else:                                          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  %37 = ptrtoint ptr %buf.093 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %buf.093, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %39 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %adap, align 128
  %add.ptr.i70 = getelementptr i8, ptr %40, i32 %add14
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i70, i32 %38) #14, !srcloc !995
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then13
  %buf.1 = getelementptr i32, ptr %buf.093, i32 1
  %add19 = add i32 %offset.091, 4
  %sub20 = add i32 %len.addr.089, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %add19, i32 %shl.i)
  %cmp21 = icmp eq i32 %add19, %shl.i
  br i1 %cmp21, label %if.then22, label %if.end18.if.end25_crit_edge

if.end18.if.end25_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end25

if.then22:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  %add23 = add i32 %pos.090, %shl.i
  %or24 = or i32 %add23, %cond
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %41 = tail call i32 @llvm.bswap.i32(i32 %or24) #14
  %42 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %adap, align 128
  %add.ptr.i.i73 = getelementptr i8, ptr %43, i32 %add.i68
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i73, i32 %41) #14, !srcloc !995
  %44 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %adap, align 128
  %add.ptr.i5.i74 = getelementptr i8, ptr %45, i32 %add.i68
  %46 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i5.i74) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end18.if.end25_crit_edge
  %pos.1 = phi i32 [ %add23, %if.then22 ], [ %pos.090, %if.end18.if.end25_crit_edge ]
  %offset.1 = phi i32 [ 0, %if.then22 ], [ %add19, %if.end18.if.end25_crit_edge ]
  %cmp.not = icmp eq i32 %sub20, 0
  br i1 %cmp.not, label %if.end25.while.end_crit_edge, label %if.end25.while.body_crit_edge

if.end25.while.body_crit_edge:                    ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end25.while.end_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end25.while.end_crit_edge, %cond.end.while.end_crit_edge
  %offset.0.lcssa = phi i32 [ %sub11, %cond.end.while.end_crit_edge ], [ %offset.1, %if.end25.while.end_crit_edge ]
  %buf.0.lcssa = phi ptr [ %hbuf, %cond.end.while.end_crit_edge ], [ %buf.1, %if.end25.while.end_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool26.not = icmp eq i32 %and3, 0
  br i1 %tobool26.not, label %while.end.cleanup_crit_edge, label %if.then27

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then27:                                        ; preds = %while.end
  %add28 = add i32 %offset.0.lcssa, %mem_base.0.ph
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %last.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %dir)
  %cmp.i75 = icmp eq i32 %dir, 1
  br i1 %cmp.i75, label %if.then.i77, label %if.else.i

if.then.i77:                                      ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  %47 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %adap, align 128
  %add.ptr.i.i76 = getelementptr i8, ptr %48, i32 %add28
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i76) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %50 = ptrtoint ptr %last.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %last.i, align 4
  %uglygep26.i = getelementptr i8, ptr %buf.0.lcssa, i32 %and3
  %uglygep27.i = getelementptr i8, ptr %last.i, i32 %and3
  %51 = sub nuw nsw i32 4, %and3
  %52 = call ptr @memcpy(ptr %uglygep26.i, ptr %uglygep27.i, i32 %51)
  br label %t4_memory_rw_residual.exit

if.else.i:                                        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #16
  %53 = ptrtoint ptr %buf.0.lcssa to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %buf.0.lcssa, align 1
  %conv.i78 = zext i8 %54 to i32
  %55 = ptrtoint ptr %last.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %conv.i78, ptr %last.i, align 4
  %uglygep.i = getelementptr i8, ptr %last.i, i32 %and3
  %56 = sub nuw nsw i32 4, %and3
  %57 = call ptr @memset(ptr %uglygep.i, i32 0, i32 %56)
  %58 = load i32, ptr %last.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %59 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %adap, align 128
  %add.ptr.i21.i = getelementptr i8, ptr %60, i32 %add28
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i21.i, i32 %58) #14, !srcloc !995
  br label %t4_memory_rw_residual.exit

t4_memory_rw_residual.exit:                       ; preds = %if.else.i, %if.then.i77
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %last.i) #14
  br label %cleanup

cleanup:                                          ; preds = %t4_memory_rw_residual.exit, %while.end.cleanup_crit_edge, %if.end15.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ 0, %t4_memory_rw_residual.exit ], [ 0, %while.end.cleanup_crit_edge ], [ -6, %if.end15.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_pcie_cfg4(ptr noundef %adap, i32 noundef %reg) local_unnamed_addr #0 align 64 {
entry:
  %ldst_cmd = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ldst_cmd) #14
  %0 = getelementptr inbounds i8, ptr %ldst_cmd, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %2 = ptrtoint ptr %ldst_cmd to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 29360169, ptr %ldst_cmd, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2
  %select_naccess = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2, i32 0, i32 3
  %4 = ptrtoint ptr %select_naccess to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 1, ptr %select_naccess, align 4
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %5 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %pf, align 4
  %7 = trunc i32 %6 to i8
  %conv = or i8 %7, 16
  %8 = ptrtoint ptr %u to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv, ptr %u, align 8
  %conv3 = trunc i32 %reg to i8
  %r = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2, i32 0, i32 2
  %9 = ptrtoint ptr %r to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv3, ptr %r, align 2
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %10 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %11, ptr noundef nonnull %ldst_cmd, i32 noundef 64, ptr noundef nonnull %ldst_cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp = icmp eq i32 %call.i.i, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %data = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2, i32 0, i32 4
  %12 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %data, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %14 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pf, align 4
  %shl.i = shl i32 %15, 12
  %or.i = or i32 %shl.i, %reg
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %16 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %chip.i, align 8
  %18 = and i32 %17, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %18)
  %cmp.i = icmp ult i32 %18, 96
  %req.0.v.i = select i1 %cmp.i, i32 1073741824, i32 -2147483648
  %req.0.i = or i32 %or.i, %req.0.v.i
  %19 = and i32 %17, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %19)
  %cmp.i.not.i = icmp eq i32 %19, 64
  %or7.i = or i32 %req.0.i, 268435456
  %req.1.i = select i1 %cmp.i.not.i, i32 %or7.i, i32 %req.0.i
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %20 = call i32 @llvm.bswap.i32(i32 %req.1.i) #14
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 12384
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %20) #14, !srcloc !995
  %23 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %adap, align 128
  %add.ptr.i18.i = getelementptr i8, ptr %24, i32 12388
  %25 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18.i) #14, !srcloc !992
  %26 = call i32 @llvm.bswap.i32(i32 %25) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %27 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adap, align 128
  %add.ptr.i19.i = getelementptr i8, ptr %28, i32 12384
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19.i, i32 0) #14, !srcloc !995
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %val.0 = phi i32 [ %13, %if.then ], [ %26, %if.else ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ldst_cmd) #14
  ret i32 %val.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_util_window(ptr noundef %adap) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip.i, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not.i = icmp eq i32 %2, 64
  br i1 %cmp.i.not.i, label %if.then.i, label %entry.t4_get_window.exit_crit_edge

entry.t4_get_window.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_get_window.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call i32 @t4_read_pcie_cfg4(ptr noundef %adap, i32 noundef 16) #14
  %3 = and i32 %call1.i, -16
  %t4_bar0.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 2
  %4 = ptrtoint ptr %t4_bar0.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %t4_bar0.i, align 8
  %add.i = add i32 %3, 112640
  br label %t4_get_window.exit

t4_get_window.exit:                               ; preds = %if.then.i, %entry.t4_get_window.exit_crit_edge
  %ret.0.i = phi i32 [ %add.i, %if.then.i ], [ 112640, %entry.t4_get_window.exit_crit_edge ]
  ret i32 %ret.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_setup_memwin(ptr nocapture noundef readonly %adap, i32 noundef %memwin_base, i32 noundef %window) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %window, 3
  %add = add i32 %mul, 12392
  %or1 = or i32 %memwin_base, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %or1) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i6 = getelementptr i8, ptr %4, i32 %add
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i6) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_regs_len(ptr nocapture noundef readonly %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %shr = lshr i32 %1, 4
  %and = and i32 %shr, 15
  %switch.tableidx = add nsw i32 %and, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 3
  br i1 %2, label %switch.lookup, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %3 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %4, ptr noundef nonnull @.str.5, i32 noundef %and) #17
  br label %cleanup

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.t4_get_regs_len, i32 0, i32 %switch.tableidx
  %5 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %5)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ %switch.load, %switch.lookup ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_regs(ptr nocapture noundef readonly %adap, ptr noundef writeonly %buf, i32 noundef %buf_size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %buf, i32 %buf_size
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %shr = lshr i32 %1, 4
  %and = and i32 %shr, 15
  %switch.tableidx = add nsw i32 %and, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx)
  %2 = icmp ult i32 %switch.tableidx, 3
  br i1 %2, label %switch.lookup, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %3 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %4, ptr noundef nonnull @.str.5, i32 noundef %and) #17
  br label %cleanup

switch.lookup:                                    ; preds = %entry
  %switch.gep = getelementptr inbounds [3 x ptr], ptr @switch.table.t4_get_regs, i32 0, i32 %switch.tableidx
  %5 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %5)
  %switch.load = load ptr, ptr %switch.gep, align 4
  %switch.gep33 = getelementptr inbounds [3 x i32], ptr @switch.table.t4_get_regs.487, i32 0, i32 %switch.tableidx
  %6 = ptrtoint ptr %switch.gep33 to i32
  call void @__asan_load4_noabort(i32 %6)
  %switch.load34 = load i32, ptr %switch.gep33, align 4
  %7 = call ptr @memset(ptr %buf, i32 0, i32 %buf_size)
  br label %for.body

for.body:                                         ; preds = %while.end.for.body_crit_edge, %switch.lookup
  %range.032 = phi i32 [ 0, %switch.lookup ], [ %add8, %while.end.for.body_crit_edge ]
  %arrayidx = getelementptr i32, ptr %switch.load, i32 %range.032
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = or i32 %range.032, 1
  %arrayidx3 = getelementptr i32, ptr %switch.load, i32 %add
  %10 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx3, align 4
  %add.ptr4 = getelementptr i8, ptr %buf, i32 %9
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %11)
  %cmp5.not27 = icmp ule i32 %9, %11
  %cmp628 = icmp ult ptr %add.ptr4, %add.ptr
  %or.cond29 = and i1 %cmp5.not27, %cmp628
  br i1 %or.cond29, label %for.body.while.body_crit_edge, label %for.body.while.end_crit_edge

for.body.while.end_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

for.body.while.body_crit_edge:                    ; preds = %for.body
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %for.body.while.body_crit_edge
  %bufp.031 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %add.ptr4, %for.body.while.body_crit_edge ]
  %reg.030 = phi i32 [ %add7, %while.body.while.body_crit_edge ], [ %9, %for.body.while.body_crit_edge ]
  %12 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %13, i32 %reg.030
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %bufp.031, i32 1
  %16 = ptrtoint ptr %bufp.031 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %bufp.031, align 4
  %add7 = add i32 %reg.030, 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add7, i32 %11)
  %cmp5.not = icmp ule i32 %add7, %11
  %cmp6 = icmp ult ptr %incdec.ptr, %add.ptr
  %or.cond = select i1 %cmp5.not, i1 %cmp6, i1 false
  br i1 %or.cond, label %while.body.while.body_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.end:                                        ; preds = %while.body.while.end_crit_edge, %for.body.while.end_crit_edge
  %add8 = add nuw nsw i32 %range.032, 2
  %cmp = icmp ult i32 %add8, %switch.load34
  br i1 %cmp, label %while.end.for.body_crit_edge, label %while.end.cleanup_crit_edge

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.end.for.body_crit_edge:                     ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %while.end.cleanup_crit_edge, %do.end
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @t4_eeprom_ptov(i32 noundef %phys_addr, i32 noundef %fn, i32 noundef %sz) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = mul i32 %sz, %fn
  call void @__sanitizer_cov_trace_const_cmp4(i32 1024, i32 %phys_addr)
  %cmp = icmp ult i32 %phys_addr, 1024
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add = add nuw nsw i32 %phys_addr, 31744
  br label %return

if.end:                                           ; preds = %entry
  %add1 = add i32 %mul, 1024
  call void @__sanitizer_cov_trace_cmp4(i32 %add1, i32 %phys_addr)
  %cmp2 = icmp ugt i32 %add1, %phys_addr
  br i1 %cmp2, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %add4 = add i32 %phys_addr, 30720
  %sub5 = sub i32 %add4, %mul
  br label %return

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 17408, i32 %phys_addr)
  %cmp7 = icmp ult i32 %phys_addr, 17408
  br i1 %cmp7, label %if.then8, label %if.end6.return_crit_edge

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %sub9 = add nsw i32 %phys_addr, -1024
  %sub10 = sub i32 %sub9, %mul
  br label %return

return:                                           ; preds = %if.then8, %if.end6.return_crit_edge, %if.then3, %if.then
  %retval.0 = phi i32 [ %add, %if.then ], [ %sub5, %if.then3 ], [ %sub10, %if.then8 ], [ -22, %if.end6.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_seeprom_wp(ptr nocapture noundef readonly %adapter, i1 noundef zeroext %enable) local_unnamed_addr #0 align 64 {
entry:
  %v = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v) #14
  %cond = select i1 %enable, i32 12, i32 0
  %0 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %cond, ptr %v, align 4
  %pdev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 3
  %1 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pdev, align 4
  %call = call i32 @pci_write_vpd(ptr noundef %2, i64 noundef 31740, i32 noundef 4, ptr noundef nonnull %v) #14
  %3 = call i32 @llvm.smin.i32(i32 %call, i32 0)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v) #14
  ret i32 %3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_write_vpd(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_raw_vpd_params(ptr nocapture noundef readonly %adapter, ptr noundef %p) local_unnamed_addr #0 align 64 {
entry:
  %id_len = alloca i32, align 4
  %pn_len = alloca i32, align 4
  %sn_len = alloca i32, align 4
  %na_len = alloca i32, align 4
  %base_val = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %id_len) #14
  %0 = ptrtoint ptr %id_len to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %id_len, align 4, !annotation !996
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pn_len) #14
  %1 = ptrtoint ptr %pn_len to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %pn_len, align 4, !annotation !996
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sn_len) #14
  %2 = ptrtoint ptr %sn_len to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %sn_len, align 4, !annotation !996
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %na_len) #14
  %3 = ptrtoint ptr %na_len to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %na_len, align 4, !annotation !996
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %base_val) #14
  %4 = ptrtoint ptr %base_val to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 0, ptr %base_val, align 1
  %call = tail call noalias ptr @vmalloc(i32 noundef 1024) #18
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %pdev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 3
  %5 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev, align 4
  %call1 = call i32 @pci_read_vpd(ptr noundef %6, i64 noundef 1024, i32 noundef 1, ptr noundef nonnull %base_val) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.end.do.end88_crit_edge, label %if.end3

if.end.do.end88_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

if.end3:                                          ; preds = %if.end
  %7 = ptrtoint ptr %base_val to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %base_val, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -126, i8 %8)
  %cmp4 = icmp eq i8 %8, -126
  %9 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev, align 4
  %11 = select i1 %cmp4, i64 1024, i64 0
  %call8 = call i32 @pci_read_vpd(ptr noundef %10, i64 noundef %11, i32 noundef 1024, ptr noundef nonnull %call) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %if.end3.do.end88_crit_edge, label %if.end12

if.end3.do.end88_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

if.end12:                                         ; preds = %if.end3
  %call13 = call i32 @pci_vpd_find_id_string(ptr noundef nonnull %call, i32 noundef 1024, ptr noundef nonnull %id_len) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %if.end12.do.end88_crit_edge, label %if.end17

if.end12.do.end88_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

if.end17:                                         ; preds = %if.end12
  %call18 = call i32 @pci_vpd_check_csum(ptr noundef nonnull %call, i32 noundef 1024) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %do.end

do.end:                                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %12 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.8) #17
  br label %do.end88

if.end21:                                         ; preds = %if.end17
  %call22 = call i32 @pci_vpd_find_ro_info_keyword(ptr noundef nonnull %call, i32 noundef 1024, ptr noundef nonnull @.str.10, ptr noundef nonnull %sn_len) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %if.end21.do.end88_crit_edge, label %if.end26

if.end21.do.end88_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

if.end26:                                         ; preds = %if.end21
  %call27 = call i32 @pci_vpd_find_ro_info_keyword(ptr noundef nonnull %call, i32 noundef 1024, ptr noundef nonnull @.str.11, ptr noundef nonnull %pn_len) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %cmp28 = icmp slt i32 %call27, 0
  br i1 %cmp28, label %if.end26.do.end88_crit_edge, label %if.end31

if.end26.do.end88_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

if.end31:                                         ; preds = %if.end26
  %call32 = call i32 @pci_vpd_find_ro_info_keyword(ptr noundef nonnull %call, i32 noundef 1024, ptr noundef nonnull @.str.12, ptr noundef nonnull %na_len) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call32)
  %cmp33 = icmp slt i32 %call32, 0
  br i1 %cmp33, label %if.end31.do.end88_crit_edge, label %out

if.end31.do.end88_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end88

out:                                              ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %id37 = getelementptr inbounds %struct.vpd_params, ptr %p, i32 0, i32 2
  %add.ptr = getelementptr i8, ptr %call, i32 %call13
  %14 = ptrtoint ptr %id_len to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %id_len, align 4
  %16 = call i32 @llvm.smin.i32(i32 %15, i32 16)
  %17 = call ptr @memcpy(ptr %id37, ptr %add.ptr, i32 %16)
  %call43 = call ptr @strim(ptr noundef %id37) #14
  %sn44 = getelementptr inbounds %struct.vpd_params, ptr %p, i32 0, i32 1
  %add.ptr46 = getelementptr i8, ptr %call, i32 %call22
  %18 = ptrtoint ptr %sn_len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sn_len, align 4
  %20 = call i32 @llvm.smin.i32(i32 %19, i32 24)
  %21 = call ptr @memcpy(ptr %sn44, ptr %add.ptr46, i32 %20)
  %call56 = call ptr @strim(ptr noundef %sn44) #14
  %pn57 = getelementptr inbounds %struct.vpd_params, ptr %p, i32 0, i32 3
  %add.ptr59 = getelementptr i8, ptr %call, i32 %call27
  %22 = ptrtoint ptr %pn_len to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pn_len, align 4
  %24 = call i32 @llvm.smin.i32(i32 %23, i32 16)
  %25 = call ptr @memcpy(ptr %pn57, ptr %add.ptr59, i32 %24)
  %call69 = call ptr @strim(ptr noundef %pn57) #14
  %na70 = getelementptr inbounds %struct.vpd_params, ptr %p, i32 0, i32 4
  %add.ptr72 = getelementptr i8, ptr %call, i32 %call32
  %26 = ptrtoint ptr %na_len to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %na_len, align 4
  %28 = call i32 @llvm.smin.i32(i32 %27, i32 12)
  %29 = call ptr @memcpy(ptr %na70, ptr %add.ptr72, i32 %28)
  %call82 = call ptr @strim(ptr noundef %na70) #14
  call void @vfree(ptr noundef nonnull %call) #14
  br label %cleanup

do.end88:                                         ; preds = %if.end31.do.end88_crit_edge, %if.end26.do.end88_crit_edge, %if.end21.do.end88_crit_edge, %do.end, %if.end12.do.end88_crit_edge, %if.end3.do.end88_crit_edge, %if.end.do.end88_crit_edge
  %ret.0.ph = phi i32 [ %call32, %if.end31.do.end88_crit_edge ], [ %call27, %if.end26.do.end88_crit_edge ], [ %call22, %if.end21.do.end88_crit_edge ], [ -22, %do.end ], [ %call13, %if.end12.do.end88_crit_edge ], [ %call8, %if.end3.do.end88_crit_edge ], [ %call1, %if.end.do.end88_crit_edge ]
  call void @vfree(ptr noundef nonnull %call) #14
  %pdev_dev89 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %30 = ptrtoint ptr %pdev_dev89 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pdev_dev89, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %31, ptr noundef nonnull @.str.14) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end88, %out, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0.ph, %do.end88 ], [ -12, %entry.cleanup_crit_edge ], [ 0, %out ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %base_val) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %na_len) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sn_len) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pn_len) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %id_len) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @vmalloc(i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_vpd(ptr noundef, i64 noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_vpd_find_id_string(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_vpd_check_csum(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_vpd_find_ro_info_keyword(ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strim(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @vfree(ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_vpd_params(ptr noundef %adapter, ptr noundef %p) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_get_raw_vpd_params(ptr noundef %adapter, ptr noundef %p)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %0 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %4 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %5 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %6 = call ptr @memset(ptr %5, i32 0, i32 52)
  %shl.i.i = shl i32 %3, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %7 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %retval_len16.i.i, align 4
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 16777216, ptr %4, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %1, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %t4_query_params.exit

for.body16.preheader.i.i:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %10 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val13.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %12 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %p, align 4
  br label %cleanup

t4_query_params.exit:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %t4_query_params.exit, %for.body16.preheader.i.i, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.body16.preheader.i.i ], [ %call, %entry.cleanup_crit_edge ], [ %call.i.i.i, %t4_query_params.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_query_params(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %nparams, ptr nocapture noundef readonly %params, ptr nocapture noundef writeonly %val) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %nparams)
  %cmp.i = icmp ugt i32 %nparams, 7
  br i1 %cmp.i, label %entry.t4_query_params_rw.exit_crit_edge, label %if.end.i

entry.t4_query_params_rw.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

if.end.i:                                         ; preds = %entry
  %0 = getelementptr inbounds i8, ptr %c.i, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl.i = shl i32 %pf, 8
  %or.i = or i32 %shl.i, %vf
  %or2.i = or i32 %or.i, 146800640
  %2 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2.i, ptr %c.i, align 4
  %retval_len16.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp338.not.i = icmp eq i32 %nparams, 0
  br i1 %cmp338.not.i, label %if.end.i.for.end.i_crit_edge, label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i:                                       ; preds = %if.end.i
  %4 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %params, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nparams)
  %exitcond.not.i = icmp eq i32 %nparams, 1
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.1

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.1:                                     ; preds = %for.body.i
  %incdec.ptr7.i = getelementptr inbounds i8, ptr %c.i, i32 16
  %incdec.ptr.i = getelementptr i32, ptr %params, i32 1
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %incdec.ptr.i, align 4
  %9 = ptrtoint ptr %incdec.ptr7.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nparams)
  %exitcond.not.i.1 = icmp eq i32 %nparams, 2
  br i1 %exitcond.not.i.1, label %for.body.i.1.for.end.i_crit_edge, label %for.body.i.2

for.body.i.1.for.end.i_crit_edge:                 ; preds = %for.body.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.2:                                     ; preds = %for.body.i.1
  %incdec.ptr7.i.1 = getelementptr inbounds i8, ptr %c.i, i32 24
  %incdec.ptr.i.1 = getelementptr i32, ptr %params, i32 2
  %10 = ptrtoint ptr %incdec.ptr.i.1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %incdec.ptr.i.1, align 4
  %12 = ptrtoint ptr %incdec.ptr7.i.1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %incdec.ptr7.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %nparams)
  %exitcond.not.i.2 = icmp eq i32 %nparams, 3
  br i1 %exitcond.not.i.2, label %for.body.i.2.for.end.i_crit_edge, label %for.body.i.3

for.body.i.2.for.end.i_crit_edge:                 ; preds = %for.body.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.3:                                     ; preds = %for.body.i.2
  %incdec.ptr7.i.2 = getelementptr inbounds i8, ptr %c.i, i32 32
  %incdec.ptr.i.2 = getelementptr i32, ptr %params, i32 3
  %13 = ptrtoint ptr %incdec.ptr.i.2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr.i.2, align 4
  %15 = ptrtoint ptr %incdec.ptr7.i.2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr7.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %nparams)
  %exitcond.not.i.3 = icmp eq i32 %nparams, 4
  br i1 %exitcond.not.i.3, label %for.body.i.3.for.end.i_crit_edge, label %for.body.i.4

for.body.i.3.for.end.i_crit_edge:                 ; preds = %for.body.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.4:                                     ; preds = %for.body.i.3
  %incdec.ptr7.i.3 = getelementptr inbounds i8, ptr %c.i, i32 40
  %incdec.ptr.i.3 = getelementptr i32, ptr %params, i32 4
  %16 = ptrtoint ptr %incdec.ptr.i.3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %incdec.ptr.i.3, align 4
  %18 = ptrtoint ptr %incdec.ptr7.i.3 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr7.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %nparams)
  %exitcond.not.i.4 = icmp eq i32 %nparams, 5
  br i1 %exitcond.not.i.4, label %for.body.i.4.for.end.i_crit_edge, label %for.body.i.5

for.body.i.4.for.end.i_crit_edge:                 ; preds = %for.body.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.5:                                     ; preds = %for.body.i.4
  %incdec.ptr7.i.4 = getelementptr inbounds i8, ptr %c.i, i32 48
  %incdec.ptr.i.4 = getelementptr i32, ptr %params, i32 5
  %19 = ptrtoint ptr %incdec.ptr.i.4 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %incdec.ptr.i.4, align 4
  %21 = ptrtoint ptr %incdec.ptr7.i.4 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr7.i.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %nparams)
  %exitcond.not.i.5 = icmp eq i32 %nparams, 6
  br i1 %exitcond.not.i.5, label %for.body.i.5.for.end.i_crit_edge, label %for.body.i.6

for.body.i.5.for.end.i_crit_edge:                 ; preds = %for.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.6:                                     ; preds = %for.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr7.i.5 = getelementptr inbounds i8, ptr %c.i, i32 56
  %incdec.ptr.i.5 = getelementptr i32, ptr %params, i32 6
  %22 = ptrtoint ptr %incdec.ptr.i.5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %incdec.ptr.i.5, align 4
  %24 = ptrtoint ptr %incdec.ptr7.i.5 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr7.i.5, align 4
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.6, %for.body.i.5.for.end.i_crit_edge, %for.body.i.4.for.end.i_crit_edge, %for.body.i.3.for.end.i_crit_edge, %for.body.i.2.for.end.i_crit_edge, %for.body.i.1.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.i = icmp eq i32 %call.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp1543.i = icmp ne i32 %nparams, 0
  %or.cond.i = and i1 %cmp1543.i, %cmp9.i
  br i1 %or.cond.i, label %for.body16.preheader.i, label %for.end.i.t4_query_params_rw.exit_crit_edge

for.end.i.t4_query_params_rw.exit_crit_edge:      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

for.body16.preheader.i:                           ; preds = %for.end.i
  %val13.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 2, i32 0, i32 1
  br label %for.body16.i

for.body16.i:                                     ; preds = %for.body16.i.for.body16.i_crit_edge, %for.body16.preheader.i
  %p.146.i = phi ptr [ %add.ptr20.i, %for.body16.i.for.body16.i_crit_edge ], [ %val13.i, %for.body16.preheader.i ]
  %i.145.i = phi i32 [ %inc19.i, %for.body16.i.for.body16.i_crit_edge ], [ 0, %for.body16.preheader.i ]
  %val.addr.044.i = phi ptr [ %incdec.ptr17.i, %for.body16.i.for.body16.i_crit_edge ], [ %val, %for.body16.preheader.i ]
  %25 = ptrtoint ptr %p.146.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %p.146.i, align 4
  %incdec.ptr17.i = getelementptr i32, ptr %val.addr.044.i, i32 1
  %27 = ptrtoint ptr %val.addr.044.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %val.addr.044.i, align 4
  %inc19.i = add nuw i32 %i.145.i, 1
  %add.ptr20.i = getelementptr i32, ptr %p.146.i, i32 2
  %exitcond47.not.i = icmp eq i32 %inc19.i, %nparams
  br i1 %exitcond47.not.i, label %for.body16.i.t4_query_params_rw.exit_crit_edge, label %for.body16.i.for.body16.i_crit_edge

for.body16.i.for.body16.i_crit_edge:              ; preds = %for.body16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16.i

for.body16.i.t4_query_params_rw.exit_crit_edge:   ; preds = %for.body16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

t4_query_params_rw.exit:                          ; preds = %for.body16.i.t4_query_params_rw.exit_crit_edge, %for.end.i.t4_query_params_rw.exit_crit_edge, %entry.t4_query_params_rw.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.t4_query_params_rw.exit_crit_edge ], [ %call.i.i, %for.end.i.t4_query_params_rw.exit_crit_edge ], [ 0, %for.body16.i.t4_query_params_rw.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_pfres(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  %cmd = alloca %struct.fw_pfvf_cmd, align 4
  %rpl = alloca %struct.fw_pfvf_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %cmd) #14
  %0 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %cmd, i32 0, i32 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %rpl) #14
  %1 = call ptr @memset(ptr %rpl, i32 255, i32 32)
  %2 = getelementptr inbounds i8, ptr %cmd, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 24)
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %4 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf, align 4
  %shl = shl i32 %5, 8
  %or = or i32 %shl, 163577856
  %6 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or, ptr %cmd, align 4
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 2, ptr %0, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %8 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %9, ptr noundef nonnull %cmd, i32 noundef 32, ptr noundef nonnull %rpl, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %10 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %rpl, i32 0, i32 5
  %11 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %rpl, i32 0, i32 4
  %12 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %rpl, i32 0, i32 3
  %13 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %rpl, i32 0, i32 2
  %pfres1 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %shr = lshr i32 %15, 20
  %niqflint = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 3
  %16 = ptrtoint ptr %niqflint to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %shr, ptr %niqflint, align 4
  %and4 = and i32 %15, 1048575
  %niq = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 4
  %17 = ptrtoint ptr %niq to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %and4, ptr %niq, align 4
  %18 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %12, align 4
  %and6 = and i32 %19, 1048575
  %neq = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 1
  %20 = ptrtoint ptr %neq to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %and6, ptr %neq, align 4
  %shr7 = lshr i32 %19, 20
  %and8 = and i32 %shr7, 15
  %pmask = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 6
  %21 = ptrtoint ptr %pmask to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %and8, ptr %pmask, align 4
  %22 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %11, align 4
  %shr9 = lshr i32 %23, 24
  %tc = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 5
  %24 = ptrtoint ptr %tc to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %shr9, ptr %tc, align 4
  %shr11 = lshr i32 %23, 16
  %and12 = and i32 %shr11, 255
  %25 = ptrtoint ptr %pfres1 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and12, ptr %pfres1, align 4
  %and14 = and i32 %23, 65535
  %nexactf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 7
  %26 = ptrtoint ptr %nexactf to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %and14, ptr %nexactf, align 4
  %27 = ptrtoint ptr %10 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %10, align 4
  %shr15 = lshr i32 %28, 24
  %r_caps = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 8
  %29 = ptrtoint ptr %r_caps to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %shr15, ptr %r_caps, align 4
  %shr17 = lshr i32 %28, 16
  %and18 = and i32 %shr17, 255
  %wx_caps = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 9
  %30 = ptrtoint ptr %wx_caps to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %and18, ptr %wx_caps, align 4
  %and20 = and i32 %28, 65535
  %nethctrl = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 3, i32 2
  %31 = ptrtoint ptr %nethctrl to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %and20, ptr %nethctrl, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %rpl) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %cmd) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_flash(ptr nocapture noundef readonly %adapter, i32 noundef %addr, i32 noundef %nwords, ptr nocapture noundef writeonly %data, i32 noundef %byte_oriented) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %nwords, 2
  %add = add i32 %mul, %addr
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %1)
  %cmp = icmp ule i32 %add, %1
  %and = and i32 %addr, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or.cond = and i1 %tobool.not, %cmp
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = or i32 %addr, 184549376
  %3 = tail call i32 @llvm.bswap.i32(i32 %2)
  %call = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 4, i32 noundef 1, i32 noundef 0, i32 noundef %3)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp1.not = icmp eq i32 %call, 0
  br i1 %cmp1.not, label %lor.lhs.false2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false2:                                   ; preds = %if.end
  %call3 = tail call fastcc i32 @sf1_read(ptr noundef %adapter, i32 noundef 1, i32 noundef 1, i32 noundef 0, ptr noundef %data)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %for.cond.preheader, label %lor.lhs.false2.cleanup_crit_edge

lor.lhs.false2.cleanup_crit_edge:                 ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nwords)
  %tobool7.not40 = icmp eq i32 %nwords, 0
  br i1 %tobool7.not40, label %for.cond.preheader.cleanup_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %if.end18.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %data.addr.042 = phi ptr [ %incdec.ptr, %if.end18.for.body_crit_edge ], [ %data, %for.cond.preheader.for.body_crit_edge ]
  %nwords.addr.041 = phi i32 [ %dec, %if.end18.for.body_crit_edge ], [ %nwords, %for.cond.preheader.for.body_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nwords.addr.041)
  %cmp8 = icmp ne i32 %nwords.addr.041, 1
  %conv = zext i1 %cmp8 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nwords.addr.041)
  %cmp9 = icmp eq i32 %nwords.addr.041, 1
  %conv10 = zext i1 %cmp9 to i32
  %call11 = tail call fastcc i32 @sf1_read(ptr noundef %adapter, i32 noundef 4, i32 noundef %conv, i32 noundef %conv10, ptr noundef %data.addr.042)
  br i1 %cmp9, label %if.then14, label %for.body.if.end15_crit_edge

for.body.if.end15_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then14:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %5, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #14, !srcloc !995
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %for.body.if.end15_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool16.not = icmp eq i32 %call11, 0
  br i1 %tobool16.not, label %if.end18, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.end15
  %dec = add i32 %nwords.addr.041, -1
  %incdec.ptr = getelementptr i32, ptr %data.addr.042, i32 1
  %tobool7.not = icmp eq i32 %dec, 0
  br i1 %tobool7.not, label %if.end18.cleanup_crit_edge, label %if.end18.for.body_crit_edge

if.end18.for.body_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end18.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %lor.lhs.false2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %call3, %lor.lhs.false2.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ %call11, %if.end15.cleanup_crit_edge ], [ 0, %if.end18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sf1_write(ptr nocapture noundef readonly %adapter, i32 noundef %byte_cnt, i32 noundef %cont, i32 noundef %lock, i32 noundef %val) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %byte_cnt)
  %tobool.not = icmp eq i32 %byte_cnt, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 103420
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool1.not = icmp eq i32 %.mask, 0
  br i1 %tobool1.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end3:                                          ; preds = %if.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %3 = tail call i32 @llvm.bswap.i32(i32 %val) #14
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i14 = getelementptr i8, ptr %5, i32 103416
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14, i32 %3) #14, !srcloc !995
  %shl = shl i32 %lock, 4
  %shl4 = shl i32 %cont, 3
  %sub = shl i32 %byte_cnt, 1
  %shl5 = add i32 %sub, -2
  %or = or i32 %shl4, %shl5
  %or6 = or i32 %or, %shl
  %or7 = or i32 %or6, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %6 = tail call i32 @llvm.bswap.i32(i32 %or7) #14
  %7 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adapter, align 128
  %add.ptr.i15 = getelementptr i8, ptr %8, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i15, i32 %6) #14, !srcloc !995
  %9 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adapter, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %10, i32 103420
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask16 = and i32 %11, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask16)
  %tobool29.i.not.i = icmp eq i32 %.mask16, 0
  br i1 %tobool29.i.not.i, label %if.end3.return_crit_edge, label %if.end4.i.i.preheader

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.preheader:                            ; preds = %if.end3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 1073740) #14
  %12 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %13, i32 103420
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17)
  %tobool.i.not.i = icmp eq i32 %.mask17, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.return_crit_edge, label %if.end4.i.i.1

if.end4.i.i.preheader.return_crit_edge:           ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.1:                                    ; preds = %if.end4.i.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.1 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.1(i32 noundef 1073740) #14
  %15 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.1 = getelementptr i8, ptr %16, i32 103420
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.1 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.1)
  %tobool.i.not.i.1 = icmp eq i32 %.mask17.1, 0
  br i1 %tobool.i.not.i.1, label %if.end4.i.i.1.return_crit_edge, label %if.end4.i.i.2

if.end4.i.i.1.return_crit_edge:                   ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.2:                                    ; preds = %if.end4.i.i.1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.2 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.2(i32 noundef 1073740) #14
  %18 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.2 = getelementptr i8, ptr %19, i32 103420
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.2) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.2 = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.2)
  %tobool.i.not.i.2 = icmp eq i32 %.mask17.2, 0
  br i1 %tobool.i.not.i.2, label %if.end4.i.i.2.return_crit_edge, label %if.end4.i.i.3

if.end4.i.i.2.return_crit_edge:                   ; preds = %if.end4.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.3:                                    ; preds = %if.end4.i.i.2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.3 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.3(i32 noundef 1073740) #14
  %21 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.3 = getelementptr i8, ptr %22, i32 103420
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.3) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.3 = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.3)
  %tobool.i.not.i.3 = icmp eq i32 %.mask17.3, 0
  br i1 %tobool.i.not.i.3, label %if.end4.i.i.3.return_crit_edge, label %if.end4.i.i.4

if.end4.i.i.3.return_crit_edge:                   ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.4:                                    ; preds = %if.end4.i.i.3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.4 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.4(i32 noundef 1073740) #14
  %24 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.4 = getelementptr i8, ptr %25, i32 103420
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.4) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.4 = and i32 %26, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.4)
  %tobool.i.not.i.4 = icmp eq i32 %.mask17.4, 0
  br i1 %tobool.i.not.i.4, label %if.end4.i.i.4.return_crit_edge, label %if.end4.i.i.5

if.end4.i.i.4.return_crit_edge:                   ; preds = %if.end4.i.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.5:                                    ; preds = %if.end4.i.i.4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.5 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.5(i32 noundef 1073740) #14
  %27 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.5 = getelementptr i8, ptr %28, i32 103420
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.5) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.5 = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.5)
  %tobool.i.not.i.5 = icmp eq i32 %.mask17.5, 0
  br i1 %tobool.i.not.i.5, label %if.end4.i.i.5.return_crit_edge, label %if.end4.i.i.6

if.end4.i.i.5.return_crit_edge:                   ; preds = %if.end4.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.6:                                    ; preds = %if.end4.i.i.5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.6(i32 noundef 1073740) #14
  %30 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.6 = getelementptr i8, ptr %31, i32 103420
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.6) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.6 = and i32 %32, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.6)
  %tobool.i.not.i.6 = icmp eq i32 %.mask17.6, 0
  br i1 %tobool.i.not.i.6, label %if.end4.i.i.6.return_crit_edge, label %if.end4.i.i.7

if.end4.i.i.6.return_crit_edge:                   ; preds = %if.end4.i.i.6
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.7:                                    ; preds = %if.end4.i.i.6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.7(i32 noundef 1073740) #14
  %33 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.7 = getelementptr i8, ptr %34, i32 103420
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.7) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.7 = and i32 %35, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.7)
  %tobool.i.not.i.7 = icmp eq i32 %.mask17.7, 0
  br i1 %tobool.i.not.i.7, label %if.end4.i.i.7.return_crit_edge, label %if.end4.i.i.8

if.end4.i.i.7.return_crit_edge:                   ; preds = %if.end4.i.i.7
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.end4.i.i.8:                                    ; preds = %if.end4.i.i.7
  call void @__sanitizer_cov_trace_pc() #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.8 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.8(i32 noundef 1073740) #14
  %36 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.8 = getelementptr i8, ptr %37, i32 103420
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.8) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask17.8 = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask17.8)
  %tobool.i.not.i.8 = icmp eq i32 %.mask17.8, 0
  %spec.select = select i1 %tobool.i.not.i.8, i32 0, i32 -11
  br label %return

return:                                           ; preds = %if.end4.i.i.8, %if.end4.i.i.7.return_crit_edge, %if.end4.i.i.6.return_crit_edge, %if.end4.i.i.5.return_crit_edge, %if.end4.i.i.4.return_crit_edge, %if.end4.i.i.3.return_crit_edge, %if.end4.i.i.2.return_crit_edge, %if.end4.i.i.1.return_crit_edge, %if.end4.i.i.preheader.return_crit_edge, %if.end3.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ -22, %entry.return_crit_edge ], [ -16, %if.end.return_crit_edge ], [ 0, %if.end3.return_crit_edge ], [ 0, %if.end4.i.i.preheader.return_crit_edge ], [ 0, %if.end4.i.i.1.return_crit_edge ], [ 0, %if.end4.i.i.2.return_crit_edge ], [ 0, %if.end4.i.i.3.return_crit_edge ], [ 0, %if.end4.i.i.4.return_crit_edge ], [ 0, %if.end4.i.i.5.return_crit_edge ], [ 0, %if.end4.i.i.6.return_crit_edge ], [ 0, %if.end4.i.i.7.return_crit_edge ], [ %spec.select, %if.end4.i.i.8 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @sf1_read(ptr nocapture noundef readonly %adapter, i32 noundef %byte_cnt, i32 noundef %cont, i32 noundef %lock, ptr nocapture noundef writeonly %valp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 103420
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask = and i32 %2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool1.not = icmp eq i32 %.mask, 0
  br i1 %tobool1.not, label %if.end3, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end3:                                          ; preds = %entry
  %shl = shl i32 %lock, 4
  %shl4 = shl i32 %cont, 3
  %sub = shl i32 %byte_cnt, 1
  %shl5 = add i32 %sub, -2
  %or = or i32 %shl5, %shl4
  %or6 = or i32 %or, %shl
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %3 = tail call i32 @llvm.bswap.i32(i32 %or6) #14
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i18 = getelementptr i8, ptr %5, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i18, i32 %3) #14, !srcloc !995
  %6 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adapter, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %7, i32 103420
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask23 = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask23)
  %tobool29.i.not.i = icmp eq i32 %.mask23, 0
  br i1 %tobool29.i.not.i, label %if.end3.if.then9_crit_edge, label %if.end4.i.i.preheader

if.end3.if.then9_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.preheader:                            ; preds = %if.end3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 1073740) #14
  %9 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %10, i32 103420
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24 = and i32 %11, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24)
  %tobool.i.not.i = icmp eq i32 %.mask24, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.if.then9_crit_edge, label %if.end4.i.i.1

if.end4.i.i.preheader.if.then9_crit_edge:         ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.1:                                    ; preds = %if.end4.i.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.1 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.1(i32 noundef 1073740) #14
  %12 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.1 = getelementptr i8, ptr %13, i32 103420
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.1 = and i32 %14, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.1)
  %tobool.i.not.i.1 = icmp eq i32 %.mask24.1, 0
  br i1 %tobool.i.not.i.1, label %if.end4.i.i.1.if.then9_crit_edge, label %if.end4.i.i.2

if.end4.i.i.1.if.then9_crit_edge:                 ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.2:                                    ; preds = %if.end4.i.i.1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.2 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.2(i32 noundef 1073740) #14
  %15 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.2 = getelementptr i8, ptr %16, i32 103420
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.2) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.2 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.2)
  %tobool.i.not.i.2 = icmp eq i32 %.mask24.2, 0
  br i1 %tobool.i.not.i.2, label %if.end4.i.i.2.if.then9_crit_edge, label %if.end4.i.i.3

if.end4.i.i.2.if.then9_crit_edge:                 ; preds = %if.end4.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.3:                                    ; preds = %if.end4.i.i.2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.3 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.3(i32 noundef 1073740) #14
  %18 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.3 = getelementptr i8, ptr %19, i32 103420
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.3) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.3 = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.3)
  %tobool.i.not.i.3 = icmp eq i32 %.mask24.3, 0
  br i1 %tobool.i.not.i.3, label %if.end4.i.i.3.if.then9_crit_edge, label %if.end4.i.i.4

if.end4.i.i.3.if.then9_crit_edge:                 ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.4:                                    ; preds = %if.end4.i.i.3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.4 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.4(i32 noundef 1073740) #14
  %21 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.4 = getelementptr i8, ptr %22, i32 103420
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.4) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.4 = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.4)
  %tobool.i.not.i.4 = icmp eq i32 %.mask24.4, 0
  br i1 %tobool.i.not.i.4, label %if.end4.i.i.4.if.then9_crit_edge, label %if.end4.i.i.5

if.end4.i.i.4.if.then9_crit_edge:                 ; preds = %if.end4.i.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.5:                                    ; preds = %if.end4.i.i.4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.5 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.5(i32 noundef 1073740) #14
  %24 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.5 = getelementptr i8, ptr %25, i32 103420
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.5) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.5 = and i32 %26, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.5)
  %tobool.i.not.i.5 = icmp eq i32 %.mask24.5, 0
  br i1 %tobool.i.not.i.5, label %if.end4.i.i.5.if.then9_crit_edge, label %if.end4.i.i.6

if.end4.i.i.5.if.then9_crit_edge:                 ; preds = %if.end4.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.6:                                    ; preds = %if.end4.i.i.5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.6 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.6(i32 noundef 1073740) #14
  %27 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.6 = getelementptr i8, ptr %28, i32 103420
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.6) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.6 = and i32 %29, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.6)
  %tobool.i.not.i.6 = icmp eq i32 %.mask24.6, 0
  br i1 %tobool.i.not.i.6, label %if.end4.i.i.6.if.then9_crit_edge, label %if.end4.i.i.7

if.end4.i.i.6.if.then9_crit_edge:                 ; preds = %if.end4.i.i.6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.7:                                    ; preds = %if.end4.i.i.6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.7 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.7(i32 noundef 1073740) #14
  %30 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.7 = getelementptr i8, ptr %31, i32 103420
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.7) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.7 = and i32 %32, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.7)
  %tobool.i.not.i.7 = icmp eq i32 %.mask24.7, 0
  br i1 %tobool.i.not.i.7, label %if.end4.i.i.7.if.then9_crit_edge, label %if.end4.i.i.8

if.end4.i.i.7.if.then9_crit_edge:                 ; preds = %if.end4.i.i.7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.end4.i.i.8:                                    ; preds = %if.end4.i.i.7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.8 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.8(i32 noundef 1073740) #14
  %33 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i.8 = getelementptr i8, ptr %34, i32 103420
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.8) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask24.8 = and i32 %35, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask24.8)
  %tobool.i.not.i.8 = icmp eq i32 %.mask24.8, 0
  br i1 %tobool.i.not.i.8, label %if.end4.i.i.8.if.then9_crit_edge, label %if.end4.i.i.8.cleanup_crit_edge

if.end4.i.i.8.cleanup_crit_edge:                  ; preds = %if.end4.i.i.8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i.i.8.if.then9_crit_edge:                 ; preds = %if.end4.i.i.8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then9

if.then9:                                         ; preds = %if.end4.i.i.8.if.then9_crit_edge, %if.end4.i.i.7.if.then9_crit_edge, %if.end4.i.i.6.if.then9_crit_edge, %if.end4.i.i.5.if.then9_crit_edge, %if.end4.i.i.4.if.then9_crit_edge, %if.end4.i.i.3.if.then9_crit_edge, %if.end4.i.i.2.if.then9_crit_edge, %if.end4.i.i.1.if.then9_crit_edge, %if.end4.i.i.preheader.if.then9_crit_edge, %if.end3.if.then9_crit_edge
  %36 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adapter, align 128
  %add.ptr.i19 = getelementptr i8, ptr %37, i32 103416
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i19) #14, !srcloc !992
  %39 = tail call i32 @llvm.bswap.i32(i32 %38) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %40 = ptrtoint ptr %valp to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %valp, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.end4.i.i.8.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %entry.cleanup_crit_edge ], [ 0, %if.then9 ], [ -11, %if.end4.i.i.8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_fw_version(ptr nocapture noundef readonly %adapter, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 524292, i32 noundef 1, ptr noundef %vers, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_bs_version(ptr nocapture noundef readonly %adapter, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 1769476, i32 noundef 1, ptr noundef %vers, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_tp_version(ptr nocapture noundef readonly %adapter, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 524296, i32 noundef 1, ptr noundef %vers, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_exprom_version(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  %exprom_header_buf = alloca [5 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %exprom_header_buf) #14
  %0 = getelementptr inbounds [5 x i32], ptr %exprom_header_buf, i32 0, i32 4
  %1 = call ptr @memset(ptr %exprom_header_buf, i32 255, i32 20)
  %call = call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 0, i32 noundef 5, ptr noundef nonnull %exprom_header_buf, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %exprom_header_buf to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %exprom_header_buf, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 85, i8 %3)
  %cmp.not = icmp eq i8 %3, 85
  br i1 %cmp.not, label %lor.lhs.false, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx4 = getelementptr inbounds [16 x i8], ptr %exprom_header_buf, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx4, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -86, i8 %5)
  %cmp6.not = icmp eq i8 %5, -86
  br i1 %cmp6.not, label %if.end9, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %0, align 4
  %conv11 = zext i8 %7 to i32
  %shl = shl nuw i32 %conv11, 24
  %arrayidx13 = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx13, align 1
  %conv14 = zext i8 %9 to i32
  %shl15 = shl nuw nsw i32 %conv14, 16
  %or = or i32 %shl15, %shl
  %arrayidx17 = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf, i32 0, i32 1, i32 2
  %10 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx17, align 2
  %conv18 = zext i8 %11 to i32
  %shl19 = shl nuw nsw i32 %conv18, 8
  %or20 = or i32 %or, %shl19
  %arrayidx22 = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx22, align 1
  %conv23 = zext i8 %13 to i32
  %or25 = or i32 %or20, %conv23
  %14 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or25, ptr %vers, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %lor.lhs.false.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end9 ], [ %call, %entry.cleanup_crit_edge ], [ -2, %lor.lhs.false.cleanup_crit_edge ], [ -2, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %exprom_header_buf) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_vpd_version(ptr noundef %adapter, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %0 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %4 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %5 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %6 = call ptr @memset(ptr %5, i32 0, i32 52)
  %shl.i.i = shl i32 %3, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %7 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %retval_len16.i.i, align 4
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 18546688, ptr %4, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %1, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %if.then

for.body16.preheader.i.i:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %10 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val13.i.i, align 4
  %12 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %vers, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %13 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %vers, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body16.preheader.i.i
  ret i32 %call.i.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_scfg_version(ptr noundef %adapter, ptr nocapture noundef writeonly %vers) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %0 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %4 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %5 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %6 = call ptr @memset(ptr %5, i32 0, i32 52)
  %shl.i.i = shl i32 %3, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %7 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %8 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %retval_len16.i.i, align 4
  %9 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 18481152, ptr %4, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %1, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %if.then

for.body16.preheader.i.i:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %10 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val13.i.i, align 4
  %12 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %vers, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %13 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %vers, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body16.preheader.i.i
  ret i32 %call.i.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_version_info(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i.i88 = alloca %struct.fw_params_cmd, align 4
  %c.i.i.i = alloca %struct.fw_params_cmd, align 4
  %exprom_header_buf.i = alloca [5 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fw_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 10
  %call.i = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  %bs_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 11
  %call.i84 = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 1769476, i32 noundef 1, ptr noundef %bs_vers, i32 noundef 0) #14
  %tp_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 12
  %call.i85 = tail call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 524296, i32 noundef 1, ptr noundef %tp_vers, i32 noundef 0) #14
  %er_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 13
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %exprom_header_buf.i) #14
  %0 = getelementptr inbounds [5 x i32], ptr %exprom_header_buf.i, i32 0, i32 4
  %1 = call ptr @memset(ptr %exprom_header_buf.i, i32 255, i32 20)
  %call.i86 = call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef 0, i32 noundef 5, ptr noundef nonnull %exprom_header_buf.i, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i86)
  %tobool.not.i = icmp eq i32 %call.i86, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.t4_get_exprom_version.exit_crit_edge

entry.t4_get_exprom_version.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_get_exprom_version.exit

if.end.i:                                         ; preds = %entry
  %2 = ptrtoint ptr %exprom_header_buf.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %exprom_header_buf.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 85, i8 %3)
  %cmp.not.i = icmp eq i8 %3, 85
  br i1 %cmp.not.i, label %lor.lhs.false.i, label %if.end.i.t4_get_exprom_version.exit_crit_edge

if.end.i.t4_get_exprom_version.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_get_exprom_version.exit

lor.lhs.false.i:                                  ; preds = %if.end.i
  %arrayidx4.i = getelementptr inbounds [16 x i8], ptr %exprom_header_buf.i, i32 0, i32 1
  %4 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %arrayidx4.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -86, i8 %5)
  %cmp6.not.i = icmp eq i8 %5, -86
  br i1 %cmp6.not.i, label %if.end9.i, label %lor.lhs.false.i.t4_get_exprom_version.exit_crit_edge

lor.lhs.false.i.t4_get_exprom_version.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_get_exprom_version.exit

if.end9.i:                                        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #16
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %0, align 4
  %conv11.i = zext i8 %7 to i32
  %shl.i = shl nuw i32 %conv11.i, 24
  %arrayidx13.i = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf.i, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %arrayidx13.i, align 1
  %conv14.i = zext i8 %9 to i32
  %shl15.i = shl nuw nsw i32 %conv14.i, 16
  %or.i = or i32 %shl15.i, %shl.i
  %arrayidx17.i = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf.i, i32 0, i32 1, i32 2
  %10 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %arrayidx17.i, align 2
  %conv18.i = zext i8 %11 to i32
  %shl19.i = shl nuw nsw i32 %conv18.i, 8
  %or20.i = or i32 %or.i, %shl19.i
  %arrayidx22.i = getelementptr inbounds %struct.exprom_header, ptr %exprom_header_buf.i, i32 0, i32 1, i32 3
  %12 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %arrayidx22.i, align 1
  %conv23.i = zext i8 %13 to i32
  %or25.i = or i32 %or20.i, %conv23.i
  %14 = ptrtoint ptr %er_vers to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %or25.i, ptr %er_vers, align 4
  br label %t4_get_exprom_version.exit

t4_get_exprom_version.exit:                       ; preds = %if.end9.i, %lor.lhs.false.i.t4_get_exprom_version.exit_crit_edge, %if.end.i.t4_get_exprom_version.exit_crit_edge, %entry.t4_get_exprom_version.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end9.i ], [ %call.i86, %entry.t4_get_exprom_version.exit_crit_edge ], [ -2, %lor.lhs.false.i.t4_get_exprom_version.exit_crit_edge ], [ -2, %if.end.i.t4_get_exprom_version.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %exprom_header_buf.i) #14
  %scfg_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 14
  %mbox.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %15 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %mbox.i, align 8
  %pf.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %17 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pf.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i.i) #14
  %19 = getelementptr inbounds i8, ptr %c.i.i.i, i32 8
  %20 = getelementptr inbounds i8, ptr %c.i.i.i, i32 12
  %21 = call ptr @memset(ptr %20, i32 0, i32 52)
  %shl.i.i.i = shl i32 %18, 8
  %or2.i.i.i = or i32 %shl.i.i.i, 146800640
  %22 = ptrtoint ptr %c.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %or2.i.i.i, ptr %c.i.i.i, align 4
  %retval_len16.i.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i.i, i32 0, i32 1
  %23 = ptrtoint ptr %retval_len16.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 4, ptr %retval_len16.i.i.i, align 4
  %24 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 18481152, ptr %19, align 4
  %call.i.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %16, ptr noundef nonnull %c.i.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp9.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp9.i.i.i, label %for.body16.preheader.i.i.i, label %if.then.i

for.body16.preheader.i.i.i:                       ; preds = %t4_get_exprom_version.exit
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %20, align 4
  %27 = ptrtoint ptr %scfg_vers to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %scfg_vers, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  br label %t4_get_scfg_version.exit

if.then.i:                                        ; preds = %t4_get_exprom_version.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  %28 = ptrtoint ptr %scfg_vers to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 0, ptr %scfg_vers, align 4
  br label %t4_get_scfg_version.exit

t4_get_scfg_version.exit:                         ; preds = %if.then.i, %for.body16.preheader.i.i.i
  %vpd_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 15
  %29 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %mbox.i, align 8
  %31 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %pf.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i.i88) #14
  %33 = getelementptr inbounds i8, ptr %c.i.i.i88, i32 8
  %34 = getelementptr inbounds i8, ptr %c.i.i.i88, i32 12
  %35 = call ptr @memset(ptr %34, i32 0, i32 52)
  %shl.i.i.i91 = shl i32 %32, 8
  %or2.i.i.i92 = or i32 %shl.i.i.i91, 146800640
  %36 = ptrtoint ptr %c.i.i.i88 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %or2.i.i.i92, ptr %c.i.i.i88, align 4
  %retval_len16.i.i.i93 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i.i88, i32 0, i32 1
  %37 = ptrtoint ptr %retval_len16.i.i.i93 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 4, ptr %retval_len16.i.i.i93, align 4
  %38 = ptrtoint ptr %33 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 18546688, ptr %33, align 4
  %call.i.i.i.i94 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %30, ptr noundef nonnull %c.i.i.i88, i32 noundef 64, ptr noundef nonnull %c.i.i.i88, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i94)
  %cmp9.i.i.i95 = icmp eq i32 %call.i.i.i.i94, 0
  br i1 %cmp9.i.i.i95, label %for.body16.preheader.i.i.i97, label %if.then.i98

for.body16.preheader.i.i.i97:                     ; preds = %t4_get_scfg_version.exit
  call void @__sanitizer_cov_trace_pc() #16
  %39 = ptrtoint ptr %34 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %34, align 4
  %41 = ptrtoint ptr %vpd_vers to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %vpd_vers, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i88) #14
  br label %t4_get_vpd_version.exit

if.then.i98:                                      ; preds = %t4_get_scfg_version.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i88) #14
  %42 = ptrtoint ptr %vpd_vers to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 0, ptr %vpd_vers, align 4
  br label %t4_get_vpd_version.exit

t4_get_vpd_version.exit:                          ; preds = %if.then.i98, %for.body16.preheader.i.i.i97
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool39.not = icmp ne i32 %call.i.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool28.not = icmp ne i32 %retval.0.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i85)
  %tobool17.not = icmp ne i32 %call.i85, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i84)
  %tobool6.not = icmp ne i32 %call.i84, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not = icmp eq i32 %call.i, 0
  %or.cond = select i1 %tobool6.not, i1 %tobool.not, i1 false
  %ret.1 = select i1 %or.cond, i32 %call.i84, i32 %call.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %tobool19.not = icmp eq i32 %ret.1, 0
  %or.cond80 = select i1 %tobool17.not, i1 %tobool19.not, i1 false
  %ret.2 = select i1 %or.cond80, i32 %call.i85, i32 %ret.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool30.not = icmp eq i32 %ret.2, 0
  %or.cond81 = select i1 %tobool28.not, i1 %tobool30.not, i1 false
  %ret.3 = select i1 %or.cond81, i32 %retval.0.i, i32 %ret.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.3)
  %tobool41.not = icmp eq i32 %ret.3, 0
  %or.cond82 = select i1 %tobool39.not, i1 %tobool41.not, i1 false
  %ret.4 = select i1 %or.cond82, i32 %call.i.i.i.i, i32 %ret.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i94)
  %tobool50.not = icmp ne i32 %call.i.i.i.i94, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.4)
  %tobool52.not = icmp eq i32 %ret.4, 0
  %or.cond83 = select i1 %tobool50.not, i1 %tobool52.not, i1 false
  %ret.5 = select i1 %or.cond83, i32 %call.i.i.i.i94, i32 %ret.4
  ret i32 %ret.5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_dump_version_info(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %0 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev_dev, align 16
  %id = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 2, i32 2
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %2 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %chip, align 8
  %and = and i32 %3, 15
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %1, ptr noundef nonnull @.str.16, ptr noundef %id, i32 noundef %and) #17
  %4 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev_dev, align 16
  %sn = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 2, i32 1
  %pn = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 2, i32 3
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %5, ptr noundef nonnull @.str.20, ptr noundef %sn, ptr noundef %pn) #17
  %fw_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 10
  %6 = ptrtoint ptr %fw_vers to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fw_vers, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not = icmp eq i32 %7, 0
  %8 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev_dev, align 16
  br i1 %tobool.not, label %do.end13, label %do.end16

do.end13:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %9, ptr noundef nonnull @.str.23) #17
  br label %if.end

do.end16:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %shr = lshr i32 %7, 24
  %shr23 = lshr i32 %7, 16
  %and24 = and i32 %shr23, 255
  %shr27 = lshr i32 %7, 8
  %and28 = and i32 %shr27, 255
  %and32 = and i32 %7, 255
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %9, ptr noundef nonnull @.str.27, i32 noundef %shr, i32 noundef %and24, i32 noundef %and28, i32 noundef %and32) #17
  br label %if.end

if.end:                                           ; preds = %do.end16, %do.end13
  %bs_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 11
  %10 = ptrtoint ptr %bs_vers to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %bs_vers, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool34.not = icmp eq i32 %11, 0
  %12 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev, align 16
  br i1 %tobool34.not, label %do.end37, label %do.end41

do.end37:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %13, ptr noundef nonnull @.str.30) #17
  br label %if.end59

do.end41:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %shr45 = lshr i32 %11, 24
  %shr49 = lshr i32 %11, 16
  %and50 = and i32 %shr49, 255
  %shr53 = lshr i32 %11, 8
  %and54 = and i32 %shr53, 255
  %and58 = and i32 %11, 255
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %13, ptr noundef nonnull @.str.33, i32 noundef %shr45, i32 noundef %and50, i32 noundef %and54, i32 noundef %and58) #17
  br label %if.end59

if.end59:                                         ; preds = %do.end41, %do.end37
  %tp_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 12
  %14 = ptrtoint ptr %tp_vers to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %tp_vers, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool61.not = icmp eq i32 %15, 0
  %16 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev_dev, align 16
  br i1 %tobool61.not, label %do.end64, label %do.end68

do.end64:                                         ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.36) #17
  br label %if.end86

do.end68:                                         ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  %shr72 = lshr i32 %15, 24
  %shr76 = lshr i32 %15, 16
  %and77 = and i32 %shr76, 255
  %shr80 = lshr i32 %15, 8
  %and81 = and i32 %shr80, 255
  %and85 = and i32 %15, 255
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %17, ptr noundef nonnull @.str.39, i32 noundef %shr72, i32 noundef %and77, i32 noundef %and81, i32 noundef %and85) #17
  br label %if.end86

if.end86:                                         ; preds = %do.end68, %do.end64
  %er_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 13
  %18 = ptrtoint ptr %er_vers to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %er_vers, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool88.not = icmp eq i32 %19, 0
  %20 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev_dev, align 16
  br i1 %tobool88.not, label %do.end91, label %do.end95

do.end91:                                         ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #16
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %21, ptr noundef nonnull @.str.42) #17
  br label %do.end115

do.end95:                                         ; preds = %if.end86
  call void @__sanitizer_cov_trace_pc() #16
  %shr99 = lshr i32 %19, 24
  %shr103 = lshr i32 %19, 16
  %and104 = and i32 %shr103, 255
  %shr107 = lshr i32 %19, 8
  %and108 = and i32 %shr107, 255
  %and112 = and i32 %19, 255
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %21, ptr noundef nonnull @.str.45, i32 noundef %shr99, i32 noundef %and104, i32 noundef %and108, i32 noundef %and112) #17
  br label %do.end115

do.end115:                                        ; preds = %do.end95, %do.end91
  %22 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev_dev, align 16
  %scfg_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 14
  %24 = ptrtoint ptr %scfg_vers to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %scfg_vers, align 4
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %23, ptr noundef nonnull @.str.48, i32 noundef %25) #17
  %26 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev_dev, align 16
  %vpd_vers = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 15
  %28 = ptrtoint ptr %vpd_vers to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %vpd_vers, align 8
  tail call void (ptr, ptr, ...) @_dev_info(ptr noundef %27, ptr noundef nonnull @.str.51, i32 noundef %29) #17
  ret void
}

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_check_fw_version(ptr nocapture noundef %adap) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %shr = lshr i32 %1, 4
  %and = and i32 %shr, 15
  %fw_vers = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 10
  %call.i = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  %2 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.492)
  switch i32 %call.i, label %entry.cleanup_crit_edge [
    i32 -16, label %entry.land.rhs_crit_edge
    i32 -11, label %entry.land.rhs_crit_edge89
    i32 0, label %entry.if.end_crit_edge
  ]

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.land.rhs_crit_edge89:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

entry.land.rhs_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs:                                         ; preds = %entry.land.rhs_crit_edge, %entry.land.rhs_crit_edge89
  %call.i73 = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  %3 = zext i32 %call.i73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.493)
  switch i32 %call.i73, label %land.rhs.cleanup_crit_edge [
    i32 -16, label %land.rhs.land.rhs.1_crit_edge
    i32 -11, label %land.rhs.land.rhs.1_crit_edge90
    i32 0, label %land.rhs.if.end_crit_edge
  ]

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.rhs.land.rhs.1_crit_edge90:                  ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.1

land.rhs.land.rhs.1_crit_edge:                    ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.1

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs.1:                                       ; preds = %land.rhs.land.rhs.1_crit_edge, %land.rhs.land.rhs.1_crit_edge90
  %call.i73.1 = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  %4 = zext i32 %call.i73.1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.494)
  switch i32 %call.i73.1, label %land.rhs.1.cleanup_crit_edge [
    i32 -16, label %land.rhs.1.land.rhs.2_crit_edge
    i32 -11, label %land.rhs.1.land.rhs.2_crit_edge91
    i32 0, label %land.rhs.1.if.end_crit_edge
  ]

land.rhs.1.if.end_crit_edge:                      ; preds = %land.rhs.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.rhs.1.land.rhs.2_crit_edge91:                ; preds = %land.rhs.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.2

land.rhs.1.land.rhs.2_crit_edge:                  ; preds = %land.rhs.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.rhs.2

land.rhs.1.cleanup_crit_edge:                     ; preds = %land.rhs.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs.2:                                       ; preds = %land.rhs.1.land.rhs.2_crit_edge, %land.rhs.1.land.rhs.2_crit_edge91
  %call.i73.2 = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i73.2)
  %cond = icmp eq i32 %call.i73.2, 0
  br i1 %cond, label %land.rhs.2.if.end_crit_edge, label %land.rhs.2.cleanup_crit_edge

land.rhs.2.cleanup_crit_edge:                     ; preds = %land.rhs.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs.2.if.end_crit_edge:                      ; preds = %land.rhs.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end:                                           ; preds = %land.rhs.2.if.end_crit_edge, %land.rhs.1.if.end_crit_edge, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %5 = ptrtoint ptr %fw_vers to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %fw_vers, align 4
  %shr9 = lshr i32 %6, 24
  %shr13 = lshr i32 %6, 16
  %and14 = and i32 %shr13, 255
  %shr17 = lshr i32 %6, 8
  %and18 = and i32 %shr17, 255
  %7 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.495)
  switch i32 %and, label %do.end [
    i32 4, label %sw.epilog
    i32 5, label %if.end.cleanup_crit_edge
    i32 6, label %if.end.cleanup_crit_edge92
  ]

if.end.cleanup_crit_edge92:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %8 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev_dev, align 16
  %chip21 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 10
  %10 = ptrtoint ptr %chip21 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %chip21, align 8
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %9, ptr noundef nonnull @.str.53, i32 noundef %11) #17
  br label %cleanup

sw.epilog:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 16777216, i32 %6)
  %cmp22 = icmp ult i32 %6, 16777216
  br i1 %cmp22, label %sw.epilog.do.end35_crit_edge, label %lor.lhs.false23

sw.epilog.do.end35_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end35

lor.lhs.false23:                                  ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %shr9)
  %cmp24 = icmp eq i32 %shr9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %and14)
  %cmp25 = icmp ult i32 %and14, 4
  %or.cond = select i1 %cmp24, i1 %cmp25, i1 false
  br i1 %or.cond, label %lor.lhs.false23.do.end35_crit_edge, label %lor.lhs.false23.cleanup_crit_edge

lor.lhs.false23.cleanup_crit_edge:                ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false23.do.end35_crit_edge:               ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end35

do.end35:                                         ; preds = %lor.lhs.false23.do.end35_crit_edge, %sw.epilog.do.end35_crit_edge
  %pdev_dev36 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %12 = ptrtoint ptr %pdev_dev36 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev36, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.56, i32 noundef %shr9, i32 noundef %and14, i32 noundef %and18, i32 noundef 1, i32 noundef 4, i32 noundef 0) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end35, %lor.lhs.false23.cleanup_crit_edge, %do.end, %if.end.cleanup_crit_edge, %if.end.cleanup_crit_edge92, %land.rhs.2.cleanup_crit_edge, %land.rhs.1.cleanup_crit_edge, %land.rhs.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ -14, %do.end35 ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge92 ], [ 0, %lor.lhs.false23.cleanup_crit_edge ], [ %call.i, %entry.cleanup_crit_edge ], [ %call.i73, %land.rhs.cleanup_crit_edge ], [ %call.i73.1, %land.rhs.1.cleanup_crit_edge ], [ %call.i73.2, %land.rhs.2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_prep_fw(ptr noundef %adap, ptr nocapture noundef readonly %fw_info, ptr noundef readonly %fw_data, i32 noundef %fw_size, ptr nocapture noundef %card_fw, i32 noundef %state, ptr nocapture noundef writeonly %reset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524288, i32 noundef 32, ptr noundef %card_fw, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %chip.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 1
  %0 = ptrtoint ptr %chip.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %chip.i, align 1
  %chip1.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 1
  %2 = ptrtoint ptr %chip1.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %chip1.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %1, i8 %3)
  %cmp.i = icmp eq i8 %1, %3
  br i1 %cmp.i, label %land.lhs.true.i, label %if.then.if.end44.i_crit_edge

if.then.if.end44.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true.i:                                  ; preds = %if.then
  %fw_ver.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 3
  %4 = ptrtoint ptr %fw_ver.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fw_ver.i, align 4
  %fw_ver4.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 3
  %6 = ptrtoint ptr %fw_ver4.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fw_ver4.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp5.i = icmp eq i32 %5, %7
  br i1 %cmp5.i, label %land.lhs.true.i.if.end_crit_edge, label %land.lhs.true13.i

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true13.i:                                ; preds = %land.lhs.true.i
  %intfver_nic.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 5
  %8 = ptrtoint ptr %intfver_nic.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %intfver_nic.i, align 4
  %intfver_nic15.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 5
  %10 = ptrtoint ptr %intfver_nic15.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %intfver_nic15.i, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %9, i8 %11)
  %cmp17.i = icmp eq i8 %9, %11
  br i1 %cmp17.i, label %land.lhs.true19.i, label %land.lhs.true13.i.if.end44.i_crit_edge

land.lhs.true13.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true19.i:                                ; preds = %land.lhs.true13.i
  %intfver_vnic.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 6
  %12 = ptrtoint ptr %intfver_vnic.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %intfver_vnic.i, align 1
  %intfver_vnic21.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 6
  %14 = ptrtoint ptr %intfver_vnic21.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %intfver_vnic21.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %13, i8 %15)
  %cmp23.i = icmp eq i8 %13, %15
  br i1 %cmp23.i, label %land.lhs.true25.i, label %land.lhs.true19.i.if.end44.i_crit_edge

land.lhs.true19.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true25.i:                                ; preds = %land.lhs.true19.i
  %intfver_ri.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 8
  %16 = ptrtoint ptr %intfver_ri.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %intfver_ri.i, align 1
  %intfver_ri27.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 8
  %18 = ptrtoint ptr %intfver_ri27.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %intfver_ri27.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %17, i8 %19)
  %cmp29.i = icmp eq i8 %17, %19
  br i1 %cmp29.i, label %land.lhs.true31.i, label %land.lhs.true25.i.if.end44.i_crit_edge

land.lhs.true25.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true31.i:                                ; preds = %land.lhs.true25.i
  %intfver_iscsi.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 10
  %20 = ptrtoint ptr %intfver_iscsi.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %intfver_iscsi.i, align 1
  %intfver_iscsi33.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 10
  %22 = ptrtoint ptr %intfver_iscsi33.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %intfver_iscsi33.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %21, i8 %23)
  %cmp35.i = icmp eq i8 %21, %23
  br i1 %cmp35.i, label %land.lhs.true37.i, label %land.lhs.true31.i.if.end44.i_crit_edge

land.lhs.true31.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true37.i:                                ; preds = %land.lhs.true31.i
  %intfver_fcoe.i = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 12
  %24 = ptrtoint ptr %intfver_fcoe.i to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %intfver_fcoe.i, align 1
  %intfver_fcoe39.i = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 12
  %26 = ptrtoint ptr %intfver_fcoe39.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %intfver_fcoe39.i, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %25, i8 %27)
  %cmp41.i = icmp eq i8 %25, %27
  br i1 %cmp41.i, label %land.lhs.true37.i.if.end_crit_edge, label %land.lhs.true37.i.if.end44.i_crit_edge

land.lhs.true37.i.if.end44.i_crit_edge:           ; preds = %land.lhs.true37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i

land.lhs.true37.i.if.end_crit_edge:               ; preds = %land.lhs.true37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end44.i:                                       ; preds = %land.lhs.true37.i.if.end44.i_crit_edge, %land.lhs.true31.i.if.end44.i_crit_edge, %land.lhs.true25.i.if.end44.i_crit_edge, %land.lhs.true19.i.if.end44.i_crit_edge, %land.lhs.true13.i.if.end44.i_crit_edge, %if.then.if.end44.i_crit_edge
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %28 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %29, ptr noundef nonnull @.str.58, i32 noundef %call) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %if.end44.i, %land.lhs.true37.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge
  %tobool.not = phi i1 [ true, %if.end44.i ], [ false, %land.lhs.true37.i.if.end_crit_edge ], [ false, %land.lhs.true.i.if.end_crit_edge ], [ true, %do.end ]
  %cmp2.not = icmp eq ptr %fw_data, null
  br i1 %cmp2.not, label %if.end.if.end6_crit_edge, label %if.then3

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then3:                                         ; preds = %if.end
  %chip.i118 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 1
  %30 = ptrtoint ptr %chip.i118 to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %chip.i118, align 1
  %chip1.i119 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %32 = ptrtoint ptr %chip1.i119 to i32
  call void @__asan_load1_noabort(i32 %32)
  %33 = load i8, ptr %chip1.i119, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %31, i8 %33)
  %cmp.i120 = icmp eq i8 %31, %33
  br i1 %cmp.i120, label %land.lhs.true.i124, label %if.then3.if.end44.i145_crit_edge

if.then3.if.end44.i145_crit_edge:                 ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true.i124:                               ; preds = %if.then3
  %fw_ver.i121 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 3
  %34 = ptrtoint ptr %fw_ver.i121 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %fw_ver.i121, align 4
  %fw_ver4.i122 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %36 = ptrtoint ptr %fw_ver4.i122 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %fw_ver4.i122, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %35, i32 %37)
  %cmp5.i123 = icmp eq i32 %35, %37
  br i1 %cmp5.i123, label %land.lhs.true.i124.if.end6_crit_edge, label %land.lhs.true13.i128

land.lhs.true.i124.if.end6_crit_edge:             ; preds = %land.lhs.true.i124
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

land.lhs.true13.i128:                             ; preds = %land.lhs.true.i124
  %intfver_nic.i125 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 5
  %38 = ptrtoint ptr %intfver_nic.i125 to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %intfver_nic.i125, align 4
  %intfver_nic15.i126 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 5
  %40 = ptrtoint ptr %intfver_nic15.i126 to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %intfver_nic15.i126, align 4
  call void @__sanitizer_cov_trace_cmp1(i8 %39, i8 %41)
  %cmp17.i127 = icmp eq i8 %39, %41
  br i1 %cmp17.i127, label %land.lhs.true19.i132, label %land.lhs.true13.i128.if.end44.i145_crit_edge

land.lhs.true13.i128.if.end44.i145_crit_edge:     ; preds = %land.lhs.true13.i128
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true19.i132:                             ; preds = %land.lhs.true13.i128
  %intfver_vnic.i129 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 6
  %42 = ptrtoint ptr %intfver_vnic.i129 to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %intfver_vnic.i129, align 1
  %intfver_vnic21.i130 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 6
  %44 = ptrtoint ptr %intfver_vnic21.i130 to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %intfver_vnic21.i130, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %43, i8 %45)
  %cmp23.i131 = icmp eq i8 %43, %45
  br i1 %cmp23.i131, label %land.lhs.true25.i136, label %land.lhs.true19.i132.if.end44.i145_crit_edge

land.lhs.true19.i132.if.end44.i145_crit_edge:     ; preds = %land.lhs.true19.i132
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true25.i136:                             ; preds = %land.lhs.true19.i132
  %intfver_ri.i133 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 8
  %46 = ptrtoint ptr %intfver_ri.i133 to i32
  call void @__asan_load1_noabort(i32 %46)
  %47 = load i8, ptr %intfver_ri.i133, align 1
  %intfver_ri27.i134 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 8
  %48 = ptrtoint ptr %intfver_ri27.i134 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %intfver_ri27.i134, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %47, i8 %49)
  %cmp29.i135 = icmp eq i8 %47, %49
  br i1 %cmp29.i135, label %land.lhs.true31.i140, label %land.lhs.true25.i136.if.end44.i145_crit_edge

land.lhs.true25.i136.if.end44.i145_crit_edge:     ; preds = %land.lhs.true25.i136
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true31.i140:                             ; preds = %land.lhs.true25.i136
  %intfver_iscsi.i137 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 10
  %50 = ptrtoint ptr %intfver_iscsi.i137 to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %intfver_iscsi.i137, align 1
  %intfver_iscsi33.i138 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 10
  %52 = ptrtoint ptr %intfver_iscsi33.i138 to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %intfver_iscsi33.i138, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %51, i8 %53)
  %cmp35.i139 = icmp eq i8 %51, %53
  br i1 %cmp35.i139, label %land.lhs.true37.i144, label %land.lhs.true31.i140.if.end44.i145_crit_edge

land.lhs.true31.i140.if.end44.i145_crit_edge:     ; preds = %land.lhs.true31.i140
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true37.i144:                             ; preds = %land.lhs.true31.i140
  %intfver_fcoe.i141 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 12
  %54 = ptrtoint ptr %intfver_fcoe.i141 to i32
  call void @__asan_load1_noabort(i32 %54)
  %55 = load i8, ptr %intfver_fcoe.i141, align 1
  %intfver_fcoe39.i142 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 12
  %56 = ptrtoint ptr %intfver_fcoe39.i142 to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %intfver_fcoe39.i142, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %55, i8 %57)
  %cmp41.i143 = icmp eq i8 %55, %57
  br i1 %cmp41.i143, label %land.lhs.true37.i144.if.end6_crit_edge, label %land.lhs.true37.i144.if.end44.i145_crit_edge

land.lhs.true37.i144.if.end44.i145_crit_edge:     ; preds = %land.lhs.true37.i144
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44.i145

land.lhs.true37.i144.if.end6_crit_edge:           ; preds = %land.lhs.true37.i144
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.end44.i145:                                    ; preds = %land.lhs.true37.i144.if.end44.i145_crit_edge, %land.lhs.true31.i140.if.end44.i145_crit_edge, %land.lhs.true25.i136.if.end44.i145_crit_edge, %land.lhs.true19.i132.if.end44.i145_crit_edge, %land.lhs.true13.i128.if.end44.i145_crit_edge, %if.then3.if.end44.i145_crit_edge
  br label %if.end6

if.end6:                                          ; preds = %if.end44.i145, %land.lhs.true37.i144.if.end6_crit_edge, %land.lhs.true.i124.if.end6_crit_edge, %if.end.if.end6_crit_edge
  %tobool16.not = phi i1 [ false, %if.end44.i145 ], [ true, %land.lhs.true37.i144.if.end6_crit_edge ], [ true, %land.lhs.true.i124.if.end6_crit_edge ], [ false, %if.end.if.end6_crit_edge ]
  %tobool10.not = phi i1 [ true, %if.end44.i145 ], [ false, %land.lhs.true37.i144.if.end6_crit_edge ], [ false, %land.lhs.true.i124.if.end6_crit_edge ], [ true, %if.end.if.end6_crit_edge ]
  br i1 %tobool.not, label %if.else15.thread, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end6
  %fw_ver = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 3
  %58 = ptrtoint ptr %fw_ver to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %fw_ver, align 4
  %fw_ver7 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 3
  %60 = ptrtoint ptr %fw_ver7 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %fw_ver7, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %61)
  %cmp8 = icmp eq i32 %59, %61
  br i1 %cmp8, label %land.lhs.true9, label %if.else15

land.lhs.true9:                                   ; preds = %land.lhs.true
  br i1 %tobool10.not, label %land.lhs.true9.if.end67_crit_edge, label %lor.lhs.false

land.lhs.true9.if.end67_crit_edge:                ; preds = %land.lhs.true9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

lor.lhs.false:                                    ; preds = %land.lhs.true9
  %fw_ver11 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %62 = ptrtoint ptr %fw_ver11 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %fw_ver11, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %63, i32 %59)
  %cmp13 = icmp ne i32 %63, %59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp18 = icmp eq i32 %state, 0
  %or.cond = and i1 %cmp18, %tobool16.not
  %or.cond165 = and i1 %or.cond, %cmp13
  br i1 %or.cond165, label %lor.lhs.false.if.end.i_crit_edge, label %lor.lhs.false.if.end67_crit_edge

lor.lhs.false.if.end67_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

lor.lhs.false.if.end.i_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.else15:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp18.old = icmp eq i32 %state, 0
  %or.cond.old = and i1 %cmp18.old, %tobool16.not
  br i1 %or.cond.old, label %if.else15.if.end.i_crit_edge, label %if.else15.if.end67_crit_edge

if.else15.if.end67_crit_edge:                     ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.else15.if.end.i_crit_edge:                     ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.else15.thread:                                 ; preds = %if.end6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %state)
  %cmp18151 = icmp eq i32 %state, 0
  %or.cond152 = and i1 %cmp18151, %tobool16.not
  br i1 %or.cond152, label %land.lhs.true19.thread, label %if.then36

land.lhs.true19.thread:                           ; preds = %if.else15.thread
  call void @__sanitizer_cov_trace_pc() #16
  %fw_ver20153 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %64 = ptrtoint ptr %fw_ver20153 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %fw_ver20153, align 4
  %fw_ver21154 = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 3
  %66 = ptrtoint ptr %fw_ver21154 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %fw_ver21154, align 4
  br label %if.then24

if.end.i:                                         ; preds = %if.else15.if.end.i_crit_edge, %lor.lhs.false.if.end.i_crit_edge
  %68 = ptrtoint ptr %fw_ver to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %fw_ver, align 4
  %fw_ver20 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %70 = ptrtoint ptr %fw_ver20 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %fw_ver20, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %71, i32 %69)
  %cmp.i148 = icmp sgt i32 %71, %69
  br i1 %cmp.i148, label %if.end.i.if.then24_crit_edge, label %if.end.i.if.end67_crit_edge

if.end.i.if.end67_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end67

if.end.i.if.then24_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then24

if.then24:                                        ; preds = %if.end.i.if.then24_crit_edge, %land.lhs.true19.thread
  %72 = phi i32 [ %69, %if.end.i.if.then24_crit_edge ], [ %67, %land.lhs.true19.thread ]
  %73 = phi i32 [ %71, %if.end.i.if.then24_crit_edge ], [ %65, %land.lhs.true19.thread ]
  %reason.0.i = phi ptr [ @.str.243, %if.end.i.if.then24_crit_edge ], [ @.str.242, %land.lhs.true19.thread ]
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %74 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %pdev_dev.i, align 16
  %76 = lshr i32 %72, 24
  %77 = lshr i32 %72, 16
  %and4.i = and i32 %77, 255
  %78 = lshr i32 %72, 8
  %and6.i = and i32 %78, 255
  %and8.i = and i32 %72, 255
  %79 = lshr i32 %73, 24
  %80 = lshr i32 %73, 16
  %and12.i = and i32 %80, 255
  %81 = lshr i32 %73, 8
  %and14.i = and i32 %81, 255
  %and16.i = and i32 %73, 255
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %75, ptr noundef nonnull @.str.244, i32 noundef %76, i32 noundef %and4.i, i32 noundef %and6.i, i32 noundef %and8.i, ptr noundef nonnull %reason.0.i, i32 noundef %79, i32 noundef %and12.i, i32 noundef %and14.i, i32 noundef %and16.i) #17
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %82 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %mbox, align 8
  %call25 = tail call i32 @t4_fw_upgrade(ptr noundef %adap, i32 noundef %83, ptr noundef %fw_data, i32 noundef %fw_size, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25)
  %cmp26.not = icmp eq i32 %call25, 0
  br i1 %cmp26.not, label %if.end32, label %do.end30

do.end30:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  %84 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %pdev_dev.i, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %85, ptr noundef nonnull @.str.61, i32 noundef %call25) #17
  br label %cleanup

if.end32:                                         ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #16
  %86 = call ptr @memcpy(ptr %card_fw, ptr %fw_data, i32 128)
  %87 = ptrtoint ptr %reset to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 0, ptr %reset, align 4
  br label %if.end67

if.then36:                                        ; preds = %if.else15.thread
  %fw_ver37 = getelementptr inbounds %struct.fw_info, ptr %fw_info, i32 0, i32 3, i32 3
  %88 = ptrtoint ptr %fw_ver37 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %fw_ver37, align 4
  %fw_ver38 = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 3
  %90 = ptrtoint ptr %fw_ver38 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %fw_ver38, align 4
  br i1 %cmp2.not, label %if.then36.cond.end_crit_edge, label %cond.true

if.then36.cond.end_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end

cond.true:                                        ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #16
  %fw_ver40 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %92 = ptrtoint ptr %fw_ver40 to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %fw_ver40, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then36.cond.end_crit_edge
  %cond = phi i32 [ %93, %cond.true ], [ 0, %if.then36.cond.end_crit_edge ]
  %pdev_dev44 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %94 = ptrtoint ptr %pdev_dev44 to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %pdev_dev44, align 16
  %shr = lshr i32 %89, 24
  %shr45 = lshr i32 %89, 16
  %and46 = and i32 %shr45, 255
  %shr47 = lshr i32 %89, 8
  %and48 = and i32 %shr47, 255
  %and50 = and i32 %89, 255
  %shr51 = lshr i32 %91, 24
  %shr53 = lshr i32 %91, 16
  %and54 = and i32 %shr53, 255
  %shr55 = lshr i32 %91, 8
  %and56 = and i32 %shr55, 255
  %and58 = and i32 %91, 255
  %shr59 = lshr i32 %cond, 24
  %shr61 = lshr i32 %cond, 16
  %and62 = and i32 %shr61, 255
  %shr63 = lshr i32 %cond, 8
  %and64 = and i32 %shr63, 255
  %and66 = and i32 %cond, 255
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %95, ptr noundef nonnull @.str.64, i32 noundef %state, i32 noundef %shr, i32 noundef %and46, i32 noundef %and48, i32 noundef %and50, i32 noundef %shr51, i32 noundef %and54, i32 noundef %and56, i32 noundef %and58, i32 noundef %shr59, i32 noundef %and62, i32 noundef %and64, i32 noundef %and66) #17
  br label %cleanup

if.end67:                                         ; preds = %if.end32, %if.end.i.if.end67_crit_edge, %if.else15.if.end67_crit_edge, %lor.lhs.false.if.end67_crit_edge, %land.lhs.true9.if.end67_crit_edge
  %ret.0160 = phi i32 [ %call, %land.lhs.true9.if.end67_crit_edge ], [ 0, %if.end32 ], [ %call, %lor.lhs.false.if.end67_crit_edge ], [ %call, %if.end.i.if.end67_crit_edge ], [ %call, %if.else15.if.end67_crit_edge ]
  %fw_ver68 = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 3
  %96 = ptrtoint ptr %fw_ver68 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %fw_ver68, align 4
  %fw_vers = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 10
  %98 = ptrtoint ptr %fw_vers to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %97, ptr %fw_vers, align 4
  %tp_microcode_ver = getelementptr inbounds %struct.fw_hdr, ptr %card_fw, i32 0, i32 4
  %99 = ptrtoint ptr %tp_microcode_ver to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %tp_microcode_ver, align 4
  %tp_vers = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 12
  %101 = ptrtoint ptr %tp_vers to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %100, ptr %tp_vers, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end67, %cond.end, %do.end30
  %ret.1 = phi i32 [ %ret.0160, %if.end67 ], [ -22, %cond.end ], [ %call25, %do.end30 ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fw_upgrade(ptr noundef %adap, i32 noundef %mbox, ptr nocapture noundef readonly %fw_data, i32 noundef %size, i32 noundef %force) local_unnamed_addr #0 align 64 {
entry:
  %devlog_cmd.i = alloca %struct.fw_devlog_cmd, align 4
  %c.i.i = alloca %struct.fw_reset_cmd, align 4
  %c.i = alloca %struct.fw_reset_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip.i, align 8
  %2 = and i32 %1, 240
  %trunc.i = trunc i32 %2 to i8
  %3 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.496)
  switch i8 %trunc.i, label %entry.t4_fw_matches_chip.exit_crit_edge [
    i8 64, label %land.lhs.true.i
    i8 80, label %land.lhs.true7.i
    i8 96, label %entry.land.lhs.true17.i_crit_edge
  ]

entry.land.lhs.true17.i_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true17.i

entry.t4_fw_matches_chip.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

land.lhs.true.i:                                  ; preds = %entry
  %chip1.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %4 = ptrtoint ptr %chip1.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %chip1.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp.i = icmp eq i8 %5, 0
  br i1 %cmp.i, label %land.lhs.true.i.if.end_crit_edge, label %land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge

land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true7.i:                                 ; preds = %entry
  %chip8.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %6 = ptrtoint ptr %chip8.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %chip8.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %7)
  %cmp10.i = icmp eq i8 %7, 1
  br i1 %cmp10.i, label %land.lhs.true7.i.if.end_crit_edge, label %lor.lhs.false12.i

land.lhs.true7.i.if.end_crit_edge:                ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

lor.lhs.false12.i:                                ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %2)
  %cmp.i35.not.i = icmp eq i32 %2, 96
  br i1 %cmp.i35.not.i, label %lor.lhs.false12.i.land.lhs.true17.i_crit_edge, label %lor.lhs.false12.i.t4_fw_matches_chip.exit_crit_edge

lor.lhs.false12.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %lor.lhs.false12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

lor.lhs.false12.i.land.lhs.true17.i_crit_edge:    ; preds = %lor.lhs.false12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true17.i

land.lhs.true17.i:                                ; preds = %lor.lhs.false12.i.land.lhs.true17.i_crit_edge, %entry.land.lhs.true17.i_crit_edge
  %chip18.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %8 = ptrtoint ptr %chip18.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %chip18.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %9)
  %cmp20.i = icmp eq i8 %9, 2
  br i1 %cmp20.i, label %land.lhs.true17.i.if.end_crit_edge, label %land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge

land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

land.lhs.true17.i.if.end_crit_edge:               ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

t4_fw_matches_chip.exit:                          ; preds = %land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge, %lor.lhs.false12.i.t4_fw_matches_chip.exit_crit_edge, %land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge, %entry.t4_fw_matches_chip.exit_crit_edge
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %10 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev_dev.i, align 16
  %chip22.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %12 = ptrtoint ptr %chip22.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %chip22.i, align 1
  %conv23.i = zext i8 %13 to i32
  %shr.i = lshr i32 %1, 4
  %and.i = and i32 %shr.i, 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %11, ptr noundef nonnull @.str.246, i32 noundef %conv23.i, i32 noundef %and.i) #17
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true17.i.if.end_crit_edge, %land.lhs.true7.i.if.end_crit_edge, %land.lhs.true.i.if.end_crit_edge
  %flags = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 8
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 32
  %and = and i32 %15, -17
  store i32 %and, ptr %flags, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %mbox)
  %cmp.i30 = icmp ult i32 %mbox, 8
  br i1 %cmp.i30, label %if.end.i, label %if.end.if.then2.i_crit_edge

if.end.if.then2.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2.i

if.end.i:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c.i) #14
  %16 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c.i, i32 0, i32 1
  %17 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c.i, i32 0, i32 2
  %18 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c.i, i32 0, i32 3
  %19 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 60817408, ptr %c.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 1, ptr %16, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 3, ptr %17, align 4
  %22 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 -2147483648, ptr %18, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp1.i = icmp ne i32 %call.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %force)
  %tobool.not.i = icmp eq i32 %force, 0
  %or.cond.i = and i1 %tobool.not.i, %cmp1.i
  br i1 %or.cond.i, label %if.end.i.t4_fw_halt.exit_crit_edge, label %if.end.i.if.then2.i_crit_edge

if.end.i.if.then2.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then2.i

if.end.i.t4_fw_halt.exit_crit_edge:               ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_halt.exit

if.then2.i:                                       ; preds = %if.end.i.if.then2.i_crit_edge, %if.end.if.then2.i_crit_edge
  %ret.017.i = phi i32 [ %call.i.i.i, %if.end.i.if.then2.i_crit_edge ], [ 0, %if.end.if.then2.i_crit_edge ]
  %23 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %24, i32 31488
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %26 = or i32 %25, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %27 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i.i = getelementptr i8, ptr %28, i32 31488
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i.i, i32 %26) #14, !srcloc !995
  %29 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i.i = getelementptr i8, ptr %30, i32 31488
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %32 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adap, align 128
  %add.ptr.i.i8.i = getelementptr i8, ptr %33, i32 12472
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i8.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %35 = or i32 %34, 32
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %36 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i11.i = getelementptr i8, ptr %37, i32 12472
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i11.i, i32 %35) #14, !srcloc !995
  %38 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i12.i = getelementptr i8, ptr %39, i32 12472
  %40 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i12.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %t4_fw_halt.exit

t4_fw_halt.exit:                                  ; preds = %if.then2.i, %if.end.i.t4_fw_halt.exit_crit_edge
  %ret.018.i = phi i32 [ %call.i.i.i, %if.end.i.t4_fw_halt.exit_crit_edge ], [ %ret.017.i, %if.then2.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.018.i)
  %cmp = icmp slt i32 %ret.018.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %force)
  %tobool.not = icmp eq i32 %force, 0
  %or.cond = and i1 %tobool.not, %cmp
  br i1 %or.cond, label %t4_fw_halt.exit.out_crit_edge, label %if.end3

t4_fw_halt.exit.out_crit_edge:                    ; preds = %t4_fw_halt.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end3:                                          ; preds = %t4_fw_halt.exit
  %call4 = tail call i32 @t4_load_fw(ptr noundef %adap, ptr noundef %fw_data, i32 noundef %size)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5 = icmp slt i32 %call4, 0
  br i1 %cmp5, label %if.end3.out_crit_edge, label %if.end7

if.end3.out_crit_edge:                            ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #16
  br label %out

if.end7:                                          ; preds = %if.end3
  %sf_size.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 8
  %41 = ptrtoint ptr %sf_size.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %sf_size.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %42)
  %cmp.i.i = icmp eq i32 %42, 1048576
  %..i.i = select i1 %cmp.i.i, i32 15, i32 31
  %sf_nsec.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 9
  %43 = ptrtoint ptr %sf_nsec.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %sf_nsec.i, align 8
  %div.i = udiv i32 %42, %44
  %sub.i = add i32 %div.i, 65535
  %div6.i = udiv i32 %sub.i, %div.i
  %add7.i = add nsw i32 %..i.i, -1
  %sub8.i = add i32 %add7.i, %div6.i
  %call9.i = tail call fastcc i32 @t4_flash_erase_sectors(ptr noundef %adap, i32 noundef %..i.i, i32 noundef %sub8.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool.not.i31 = icmp eq i32 %call9.i, 0
  br i1 %tobool.not.i31, label %if.end7.t4_load_cfg.exit_crit_edge, label %do.end29.i

if.end7.t4_load_cfg.exit_crit_edge:               ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_load_cfg.exit

do.end29.i:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev30.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %45 = ptrtoint ptr %pdev_dev30.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %pdev_dev30.i, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %46, ptr noundef nonnull @.str.200, ptr noundef nonnull @.str.202, i32 noundef %call9.i) #17
  br label %t4_load_cfg.exit

t4_load_cfg.exit:                                 ; preds = %do.end29.i, %if.end7.t4_load_cfg.exit_crit_edge
  %flags9 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 16
  %47 = ptrtoint ptr %flags9 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %flags9, align 4
  %and10 = and i32 %48, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10)
  %tobool.not.i33.not = icmp eq i32 %and10, 0
  %49 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %adap, align 128
  br i1 %tobool.not.i33.not, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %t4_load_cfg.exit
  %add.ptr.i.i.i34 = getelementptr i8, ptr %50, i32 12472
  %51 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i34) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %52 = and i32 %51, -33
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %53 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i.i35 = getelementptr i8, ptr %54, i32 12472
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i.i35, i32 %52) #14, !srcloc !995
  %55 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i.i36 = getelementptr i8, ptr %56, i32 12472
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i.i36) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br i1 %cmp.i30, label %if.then1.i, label %if.then.i.if.end4.i_crit_edge

if.then.i.if.end4.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.then1.i:                                       ; preds = %if.then.i
  %58 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %adap, align 128
  %add.ptr.i.i18.i = getelementptr i8, ptr %59, i32 31488
  %60 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i18.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %61 = and i32 %60, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %62 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i20.i = getelementptr i8, ptr %63, i32 31488
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i20.i, i32 %61) #14, !srcloc !995
  %64 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i21.i = getelementptr i8, ptr %65, i32 31488
  %66 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i21.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void @msleep(i32 noundef 100) #14
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c.i.i) #14
  %67 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c.i.i, i32 0, i32 1
  %68 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c.i.i, i32 0, i32 2
  %69 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %70 = ptrtoint ptr %69 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 0, ptr %69, align 4
  %71 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 60817408, ptr %c.i.i, align 4
  %72 = ptrtoint ptr %67 to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 1, ptr %67, align 4
  %73 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 3, ptr %68, align 4
  %call.i.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i.i, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp2.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp2.i, label %if.then1.i.t4_fw_restart.exit_crit_edge, label %if.then1.i.if.end4.i_crit_edge

if.then1.i.if.end4.i_crit_edge:                   ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i

if.then1.i.t4_fw_restart.exit_crit_edge:          ; preds = %if.then1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_restart.exit

if.end4.i:                                        ; preds = %if.then1.i.if.end4.i_crit_edge, %if.then.i.if.end4.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %74 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %75, i32 103464
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 50331648) #14, !srcloc !995
  tail call void @msleep(i32 noundef 2000) #14
  br label %t4_fw_restart.exit

if.else.i:                                        ; preds = %t4_load_cfg.exit
  %add.ptr.i.i22.i = getelementptr i8, ptr %50, i32 31488
  %76 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i22.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %77 = and i32 %76, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %78 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i24.i = getelementptr i8, ptr %79, i32 31488
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i24.i, i32 %77) #14, !srcloc !995
  %80 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i25.i = getelementptr i8, ptr %81, i32 31488
  %82 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i25.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %for.body.i

for.body.i:                                       ; preds = %if.end9.i.for.body.i_crit_edge, %if.else.i
  %ms.027.i = phi i32 [ 0, %if.else.i ], [ %add.i, %if.end9.i.for.body.i_crit_edge ]
  %83 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %adap, align 128
  %add.ptr.i26.i = getelementptr i8, ptr %84, i32 12472
  %85 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %86 = and i32 %85, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %86)
  %tobool7.not.i = icmp eq i32 %86, 0
  br i1 %tobool7.not.i, label %for.body.i.t4_fw_restart.exit_crit_edge, label %if.end9.i

for.body.i.t4_fw_restart.exit_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_restart.exit

if.end9.i:                                        ; preds = %for.body.i
  tail call void @msleep(i32 noundef 100) #14
  %add.i = add nuw nsw i32 %ms.027.i, 100
  %cmp5.i = icmp ult i32 %ms.027.i, 9900
  br i1 %cmp5.i, label %if.end9.i.for.body.i_crit_edge, label %if.end9.i.t4_fw_restart.exit_crit_edge

if.end9.i.t4_fw_restart.exit_crit_edge:           ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_restart.exit

if.end9.i.for.body.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

t4_fw_restart.exit:                               ; preds = %if.end9.i.t4_fw_restart.exit_crit_edge, %for.body.i.t4_fw_restart.exit_crit_edge, %if.end4.i, %if.then1.i.t4_fw_restart.exit_crit_edge
  %retval.1.i = phi i32 [ 0, %if.end4.i ], [ 0, %if.then1.i.t4_fw_restart.exit_crit_edge ], [ 0, %for.body.i.t4_fw_restart.exit_crit_edge ], [ -110, %if.end9.i.t4_fw_restart.exit_crit_edge ]
  %devlog.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %devlog_cmd.i) #14
  %87 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd.i, i32 0, i32 4
  %88 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd.i, i32 0, i32 5
  %89 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %adap, align 128
  %add.ptr.i.i38 = getelementptr i8, ptr %90, i32 12504
  %91 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i38) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %91)
  %tobool.not.i39 = icmp eq i32 %91, 0
  br i1 %tobool.not.i39, label %if.end.i44, label %if.then.i41

if.then.i41:                                      ; preds = %t4_fw_restart.exit
  call void @__sanitizer_cov_trace_pc() #16
  %92 = tail call i32 @llvm.bswap.i32(i32 %91) #14
  %and.i40 = and i32 %92, 15
  %93 = ptrtoint ptr %devlog.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %and.i40, ptr %devlog.i, align 4
  %and2.i = and i32 %92, 268435440
  %start.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 1
  %94 = ptrtoint ptr %start.i to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %and2.i, ptr %start.i, align 4
  %95 = lshr i32 %92, 13
  %mul.i = and i32 %95, 491520
  %mul5.i = add nuw nsw i32 %mul.i, 32768
  br label %cleanup.sink.split.i

if.end.i44:                                       ; preds = %t4_fw_restart.exit
  %96 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd.i, i32 0, i32 1
  %97 = getelementptr inbounds i8, ptr %devlog_cmd.i, i32 8
  %98 = call ptr @memset(ptr %97, i32 0, i32 24)
  %99 = ptrtoint ptr %devlog_cmd.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 633339904, ptr %devlog_cmd.i, align 4
  %100 = ptrtoint ptr %96 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 2, ptr %96, align 4
  %mbox.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %101 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %mbox.i, align 8
  %call.i.i.i42 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %102, ptr noundef nonnull %devlog_cmd.i, i32 noundef 32, ptr noundef nonnull %devlog_cmd.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i42)
  %tobool7.not.i43 = icmp eq i32 %call.i.i.i42, 0
  br i1 %tobool7.not.i43, label %if.end9.i45, label %if.end.i44.t4_init_devlog_params.exit_crit_edge

if.end.i44.t4_init_devlog_params.exit_crit_edge:  ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_init_devlog_params.exit

if.end9.i45:                                      ; preds = %if.end.i44
  call void @__sanitizer_cov_trace_pc() #16
  %103 = ptrtoint ptr %87 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %87, align 4
  %shr10.i = lshr i32 %104, 28
  %105 = ptrtoint ptr %devlog.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %shr10.i, ptr %devlog.i, align 4
  %shl15.i = shl i32 %104, 4
  %start16.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 1
  %106 = ptrtoint ptr %start16.i to i32
  call void @__asan_store4_noabort(i32 %106)
  store i32 %shl15.i, ptr %start16.i, align 4
  %107 = ptrtoint ptr %88 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %88, align 4
  br label %cleanup.sink.split.i

cleanup.sink.split.i:                             ; preds = %if.end9.i45, %if.then.i41
  %.sink.i = phi i32 [ %108, %if.end9.i45 ], [ %mul5.i, %if.then.i41 ]
  %size17.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 2
  %109 = ptrtoint ptr %size17.i to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %.sink.i, ptr %size17.i, align 4
  br label %t4_init_devlog_params.exit

t4_init_devlog_params.exit:                       ; preds = %cleanup.sink.split.i, %if.end.i44.t4_init_devlog_params.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %devlog_cmd.i) #14
  br label %out

out:                                              ; preds = %t4_init_devlog_params.exit, %if.end3.out_crit_edge, %t4_fw_halt.exit.out_crit_edge
  %ret.0 = phi i32 [ %call4, %if.end3.out_crit_edge ], [ %retval.1.i, %t4_init_devlog_params.exit ], [ %ret.018.i, %t4_fw_halt.exit.out_crit_edge ]
  %110 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %flags, align 32
  %or = or i32 %111, 16
  store i32 %or, ptr %flags, align 32
  br label %cleanup

cleanup:                                          ; preds = %out, %t4_fw_matches_chip.exit
  %retval.0 = phi i32 [ %ret.0, %out ], [ -22, %t4_fw_matches_chip.exit ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @t4_flash_cfg_addr(ptr nocapture noundef readonly %adapter) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %1)
  %cmp = icmp eq i32 %1, 1048576
  %. = select i1 %cmp, i32 983040, i32 2031616
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_load_fw(ptr nocapture noundef %adap, ptr nocapture noundef readonly %fw_data, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  %first_page = alloca [256 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %first_page) #14
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  %sf_nsec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 9
  %2 = ptrtoint ptr %sf_nsec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sf_nsec, align 8
  %div = udiv i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %tobool.not = icmp eq i32 %size, 0
  br i1 %tobool.not, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %4 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %5, ptr noundef nonnull @.str.66) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %and = and i32 %size, 511
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end8, label %do.end6

do.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev7 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %6 = ptrtoint ptr %pdev_dev7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev_dev7, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %7, ptr noundef nonnull @.str.69) #17
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %len512 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 2
  %8 = ptrtoint ptr %len512 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %len512, align 2
  %conv = zext i16 %9 to i32
  %mul = shl nuw nsw i32 %conv, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %mul, i32 %size)
  %cmp.not = icmp eq i32 %mul, %size
  br i1 %cmp.not, label %if.end15, label %do.end13

do.end13:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev14 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %10 = ptrtoint ptr %pdev_dev14 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev_dev14, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %11, ptr noundef nonnull @.str.72) #17
  br label %cleanup

if.end15:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %size)
  %cmp16 = icmp ugt i32 %size, 1048576
  br i1 %cmp16, label %do.end21, label %if.end23

do.end21:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev22 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %12 = ptrtoint ptr %pdev_dev22 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev22, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.75, i32 noundef 1048576) #17
  br label %cleanup

if.end23:                                         ; preds = %if.end15
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %14 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %chip.i, align 8
  %16 = and i32 %15, 240
  %trunc.i = trunc i32 %16 to i8
  %17 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.497)
  switch i8 %trunc.i, label %if.end23.t4_fw_matches_chip.exit.thread_crit_edge [
    i8 64, label %land.lhs.true.i
    i8 80, label %land.lhs.true7.i
    i8 96, label %if.end23.land.lhs.true17.i_crit_edge
  ]

if.end23.land.lhs.true17.i_crit_edge:             ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true17.i

if.end23.t4_fw_matches_chip.exit.thread_crit_edge: ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit.thread

land.lhs.true.i:                                  ; preds = %if.end23
  %chip1.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %18 = ptrtoint ptr %chip1.i to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %chip1.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %cmp.i = icmp eq i8 %19, 0
  br i1 %cmp.i, label %land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge, label %land.lhs.true.i.t4_fw_matches_chip.exit.thread_crit_edge

land.lhs.true.i.t4_fw_matches_chip.exit.thread_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit.thread

land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

land.lhs.true7.i:                                 ; preds = %if.end23
  %chip8.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %20 = ptrtoint ptr %chip8.i to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %chip8.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %21)
  %cmp10.i = icmp eq i8 %21, 1
  br i1 %cmp10.i, label %land.lhs.true7.i.t4_fw_matches_chip.exit_crit_edge, label %lor.lhs.false12.i

land.lhs.true7.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

lor.lhs.false12.i:                                ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %16)
  %cmp.i35.not.i = icmp eq i32 %16, 96
  br i1 %cmp.i35.not.i, label %lor.lhs.false12.i.land.lhs.true17.i_crit_edge, label %lor.lhs.false12.i.t4_fw_matches_chip.exit.thread_crit_edge

lor.lhs.false12.i.t4_fw_matches_chip.exit.thread_crit_edge: ; preds = %lor.lhs.false12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit.thread

lor.lhs.false12.i.land.lhs.true17.i_crit_edge:    ; preds = %lor.lhs.false12.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true17.i

land.lhs.true17.i:                                ; preds = %lor.lhs.false12.i.land.lhs.true17.i_crit_edge, %if.end23.land.lhs.true17.i_crit_edge
  %chip18.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %22 = ptrtoint ptr %chip18.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %chip18.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 2, i8 %23)
  %cmp20.i = icmp eq i8 %23, 2
  br i1 %cmp20.i, label %land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge, label %land.lhs.true17.i.t4_fw_matches_chip.exit.thread_crit_edge

land.lhs.true17.i.t4_fw_matches_chip.exit.thread_crit_edge: ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit.thread

land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge: ; preds = %land.lhs.true17.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_fw_matches_chip.exit

t4_fw_matches_chip.exit.thread:                   ; preds = %land.lhs.true17.i.t4_fw_matches_chip.exit.thread_crit_edge, %lor.lhs.false12.i.t4_fw_matches_chip.exit.thread_crit_edge, %land.lhs.true.i.t4_fw_matches_chip.exit.thread_crit_edge, %if.end23.t4_fw_matches_chip.exit.thread_crit_edge
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %24 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev_dev.i, align 16
  %chip22.i = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 1
  %26 = ptrtoint ptr %chip22.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %chip22.i, align 1
  %conv23.i = zext i8 %27 to i32
  %shr.i = lshr i32 %15, 4
  %and.i = and i32 %shr.i, 15
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %25, ptr noundef nonnull @.str.246, i32 noundef %conv23.i, i32 noundef %and.i) #17
  br label %cleanup

t4_fw_matches_chip.exit:                          ; preds = %land.lhs.true17.i.t4_fw_matches_chip.exit_crit_edge, %land.lhs.true7.i.t4_fw_matches_chip.exit_crit_edge, %land.lhs.true.i.t4_fw_matches_chip.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %size)
  %cmp27134.not = icmp ult i32 %size, 4
  br i1 %cmp27134.not, label %t4_fw_matches_chip.exit.do.end34_crit_edge, label %for.body.preheader

t4_fw_matches_chip.exit.do.end34_crit_edge:       ; preds = %t4_fw_matches_chip.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end34

for.body.preheader:                               ; preds = %t4_fw_matches_chip.exit
  %div26129 = lshr i32 %size, 2
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.0136 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %csum.0135 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %arrayidx = getelementptr i32, ptr %fw_data, i32 %i.0136
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx, align 4
  %add = add i32 %29, %csum.0135
  %inc = add nuw nsw i32 %i.0136, 1
  %exitcond.not = icmp eq i32 %inc, %div26129
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %add)
  %cmp29.not = icmp eq i32 %add, -1
  br i1 %cmp29.not, label %if.end36, label %for.end.do.end34_crit_edge

for.end.do.end34_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end34

do.end34:                                         ; preds = %for.end.do.end34_crit_edge, %t4_fw_matches_chip.exit.do.end34_crit_edge
  %csum.0.lcssa139 = phi i32 [ %add, %for.end.do.end34_crit_edge ], [ 0, %t4_fw_matches_chip.exit.do.end34_crit_edge ]
  %pdev_dev35 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %30 = ptrtoint ptr %pdev_dev35 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %pdev_dev35, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %31, ptr noundef nonnull @.str.78, i32 noundef %csum.0.lcssa139) #17
  br label %cleanup

if.end36:                                         ; preds = %for.end
  %add37 = add i32 %size, -1
  %sub = add i32 %add37, %div
  %div38 = udiv i32 %sub, %div
  %sub40 = add i32 %div38, 7
  %call41 = tail call fastcc i32 @t4_flash_erase_sectors(ptr noundef %adap, i32 noundef 8, i32 noundef %sub40)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call41)
  %tobool42.not = icmp eq i32 %call41, 0
  br i1 %tobool42.not, label %if.end44, label %if.end36.do.end70_crit_edge

if.end36.do.end70_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end70

if.end44:                                         ; preds = %if.end36
  %32 = call ptr @memcpy(ptr %first_page, ptr %fw_data, i32 256)
  %fw_ver = getelementptr inbounds %struct.fw_hdr, ptr %first_page, i32 0, i32 3
  %33 = ptrtoint ptr %fw_ver to i32
  call void @__asan_storeN_noabort(i32 %33, i32 4)
  store i32 -1, ptr %fw_ver, align 1
  %call47 = call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef 524288, i32 noundef 256, ptr noundef nonnull %first_page, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %if.end44.for.cond52_crit_edge, label %if.end44.do.end70_crit_edge

if.end44.do.end70_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end70

if.end44.for.cond52_crit_edge:                    ; preds = %if.end44
  br label %for.cond52

for.cond52:                                       ; preds = %for.body54.for.cond52_crit_edge, %if.end44.for.cond52_crit_edge
  %fw_data.addr.0 = phi ptr [ %add.ptr, %for.body54.for.cond52_crit_edge ], [ %fw_data, %if.end44.for.cond52_crit_edge ]
  %size.addr.0.in = phi i32 [ %size.addr.0, %for.body54.for.cond52_crit_edge ], [ %size, %if.end44.for.cond52_crit_edge ]
  %addr.0 = phi i32 [ %add55, %for.body54.for.cond52_crit_edge ], [ 524288, %if.end44.for.cond52_crit_edge ]
  %size.addr.0 = add i32 %size.addr.0.in, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size.addr.0)
  %tobool53.not = icmp eq i32 %size.addr.0, 0
  br i1 %tobool53.not, label %out, label %for.body54

for.body54:                                       ; preds = %for.cond52
  %add55 = add i32 %addr.0, 256
  %add.ptr = getelementptr i8, ptr %fw_data.addr.0, i32 256
  %call56 = tail call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %add55, i32 noundef 256, ptr noundef %add.ptr, i1 noundef zeroext true)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %for.body54.for.cond52_crit_edge, label %for.body54.do.end70_crit_edge

for.body54.do.end70_crit_edge:                    ; preds = %for.body54
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end70

for.body54.for.cond52_crit_edge:                  ; preds = %for.body54
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond52

out:                                              ; preds = %for.cond52
  %fw_ver64 = getelementptr inbounds %struct.fw_hdr, ptr %fw_data, i32 0, i32 3
  %call65 = tail call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 4, ptr noundef %fw_ver64, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call65)
  %tobool66.not = icmp eq i32 %call65, 0
  br i1 %tobool66.not, label %if.else, label %out.do.end70_crit_edge

out.do.end70_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end70

do.end70:                                         ; preds = %out.do.end70_crit_edge, %for.body54.do.end70_crit_edge, %if.end44.do.end70_crit_edge, %if.end36.do.end70_crit_edge
  %ret.0133 = phi i32 [ %call65, %out.do.end70_crit_edge ], [ %call47, %if.end44.do.end70_crit_edge ], [ %call41, %if.end36.do.end70_crit_edge ], [ %call56, %for.body54.do.end70_crit_edge ]
  %pdev_dev71 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %34 = ptrtoint ptr %pdev_dev71 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pdev_dev71, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %35, ptr noundef nonnull @.str.81, i32 noundef %ret.0133) #17
  br label %cleanup

if.else:                                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  %fw_vers = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 10
  %call.i = tail call i32 @t4_read_flash(ptr noundef %adap, i32 noundef 524292, i32 noundef 1, ptr noundef %fw_vers, i32 noundef 0) #14
  br label %cleanup

cleanup:                                          ; preds = %if.else, %do.end70, %do.end34, %t4_fw_matches_chip.exit.thread, %do.end21, %do.end13, %do.end6, %do.end
  %retval.0 = phi i32 [ -22, %do.end6 ], [ -22, %do.end13 ], [ -27, %do.end21 ], [ -22, %do.end34 ], [ -22, %do.end ], [ %ret.0133, %do.end70 ], [ %call.i, %if.else ], [ -22, %t4_fw_matches_chip.exit.thread ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %first_page) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @t4_flash_erase_sectors(ptr nocapture noundef readonly %adapter, i32 noundef %start, i32 noundef %end) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sf_nsec = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 9
  %0 = ptrtoint ptr %sf_nsec to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_nsec, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %end)
  %cmp.not = icmp ugt i32 %1, %end
  br i1 %cmp.not, label %while.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

while.cond.preheader:                             ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %start, i32 %end)
  %cmp1.not21 = icmp sgt i32 %start, %end
  br i1 %cmp1.not21, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %if.end9.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %start.addr.022 = phi i32 [ %inc, %if.end9.while.body_crit_edge ], [ %start, %while.cond.preheader.while.body_crit_edge ]
  %call = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 1, i32 noundef 0, i32 noundef 1, i32 noundef 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2.not = icmp eq i32 %call, 0
  br i1 %cmp2.not, label %lor.lhs.false, label %while.body.do.end_crit_edge

while.body.do.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.lhs.false:                                    ; preds = %while.body
  %shl = shl i32 %start.addr.022, 8
  %or = or i32 %shl, 216
  %call3 = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 4, i32 noundef 0, i32 noundef 1, i32 noundef %or)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp4.not = icmp eq i32 %call3, 0
  br i1 %cmp4.not, label %lor.lhs.false5, label %lor.lhs.false.do.end_crit_edge

lor.lhs.false.do.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %call6 = tail call fastcc i32 @flash_wait_op(ptr noundef %adapter, i32 noundef 14, i32 noundef 500)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp7.not = icmp eq i32 %call6, 0
  br i1 %cmp7.not, label %if.end9, label %lor.lhs.false5.do.end_crit_edge

lor.lhs.false5.do.end_crit_edge:                  ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

do.end:                                           ; preds = %lor.lhs.false5.do.end_crit_edge, %lor.lhs.false.do.end_crit_edge, %while.body.do.end_crit_edge
  %ret.1 = phi i32 [ %call, %while.body.do.end_crit_edge ], [ %call3, %lor.lhs.false.do.end_crit_edge ], [ %call6, %lor.lhs.false5.do.end_crit_edge ]
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %2 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.248, i32 noundef %start.addr.022, i32 noundef %ret.1) #17
  br label %while.end

if.end9:                                          ; preds = %lor.lhs.false5
  %inc = add i32 %start.addr.022, 1
  %cmp1.not = icmp sgt i32 %inc, %end
  br i1 %cmp1.not, label %if.end9.while.end_crit_edge, label %if.end9.while.body_crit_edge

if.end9.while.body_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

if.end9.while.end_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.end:                                        ; preds = %if.end9.while.end_crit_edge, %do.end, %while.cond.preheader.while.end_crit_edge
  %ret.2 = phi i32 [ %ret.1, %do.end ], [ 0, %while.cond.preheader.while.end_crit_edge ], [ 0, %if.end9.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %5, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #14, !srcloc !995
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.2, %while.end ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @t4_write_flash(ptr nocapture noundef readonly %adapter, i32 noundef %addr, i32 noundef %n, ptr nocapture noundef readonly %data, i1 noundef zeroext %byte_oriented) unnamed_addr #0 align 64 {
entry:
  %buf = alloca [64 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %addr, 255
  call void @llvm.lifetime.start.p0(i64 256, ptr nonnull %buf) #14
  %0 = call ptr @memset(ptr %buf, i32 255, i32 256)
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %1 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %sf_size, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %addr)
  %cmp.not = icmp ule i32 %2, %addr
  %add = add i32 %and, %n
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %add)
  %cmp1 = icmp ugt i32 %add, 256
  %or.cond = or i1 %cmp1, %cmp.not
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 1, i32 noundef 0, i32 noundef 1, i32 noundef 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp2.not = icmp eq i32 %call, 0
  br i1 %cmp2.not, label %lor.lhs.false3, label %if.end.unlock_crit_edge

if.end.unlock_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

lor.lhs.false3:                                   ; preds = %if.end
  %3 = or i32 %addr, 33554432
  %4 = tail call i32 @llvm.bswap.i32(i32 %3)
  %call4 = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 4, i32 noundef 1, i32 noundef 1, i32 noundef %4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5.not = icmp eq i32 %call4, 0
  br i1 %cmp5.not, label %for.cond.preheader, label %lor.lhs.false3.unlock_crit_edge

lor.lhs.false3.unlock_crit_edge:                  ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

for.cond.preheader:                               ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n)
  %tobool.not100 = icmp eq i32 %n, 0
  br i1 %tobool.not100, label %for.cond.preheader.for.end29_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end29_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29

for.body:                                         ; preds = %for.inc27.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %left.0102 = phi i32 [ %sub28, %for.inc27.for.body_crit_edge ], [ %n, %for.cond.preheader.for.body_crit_edge ]
  %data.addr.0101 = phi ptr [ %add.ptr, %for.inc27.for.body_crit_edge ], [ %data, %for.cond.preheader.for.body_crit_edge ]
  %5 = tail call i32 @llvm.umin.i32(i32 %left.0102, i32 4)
  br label %for.body11

for.body11:                                       ; preds = %for.body11.for.body11_crit_edge, %for.body
  %val.099 = phi i32 [ %add14, %for.body11.for.body11_crit_edge ], [ 0, %for.body ]
  %i.097 = phi i32 [ %inc, %for.body11.for.body11_crit_edge ], [ 0, %for.body ]
  %shl = shl i32 %val.099, 8
  %6 = xor i32 %i.097, -1
  %sub16 = add nsw i32 %5, %6
  %i.097.sink = select i1 %byte_oriented, i32 %i.097, i32 %sub16
  %arrayidx = getelementptr i8, ptr %data.addr.0101, i32 %i.097.sink
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %arrayidx, align 1
  %conv = zext i8 %8 to i32
  %add14 = or i32 %shl, %conv
  %inc = add nuw nsw i32 %i.097, 1
  %exitcond.not = icmp eq i32 %inc, %5
  br i1 %exitcond.not, label %for.end, label %for.body11.for.body11_crit_edge

for.body11.for.body11_crit_edge:                  ; preds = %for.body11
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body11

for.end:                                          ; preds = %for.body11
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %left.0102)
  %cmp21 = icmp ugt i32 %left.0102, 4
  %conv22 = zext i1 %cmp21 to i32
  %call23 = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef %5, i32 noundef %conv22, i32 noundef 1, i32 noundef %add14)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %tobool24.not = icmp eq i32 %call23, 0
  br i1 %tobool24.not, label %for.inc27, label %for.end.unlock_crit_edge

for.end.unlock_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

for.inc27:                                        ; preds = %for.end
  %sub28 = sub i32 %left.0102, %5
  %add.ptr = getelementptr i8, ptr %data.addr.0101, i32 %5
  %tobool.not = icmp eq i32 %sub28, 0
  br i1 %tobool.not, label %for.inc27.for.end29_crit_edge, label %for.inc27.for.body_crit_edge

for.inc27.for.body_crit_edge:                     ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc27.for.end29_crit_edge:                    ; preds = %for.inc27
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end29

for.end29:                                        ; preds = %for.inc27.for.end29_crit_edge, %for.cond.preheader.for.end29_crit_edge
  %data.addr.0.lcssa = phi ptr [ %data, %for.cond.preheader.for.end29_crit_edge ], [ %add.ptr, %for.inc27.for.end29_crit_edge ]
  %call30 = tail call fastcc i32 @flash_wait_op(ptr noundef %adapter, i32 noundef 8, i32 noundef 1)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %for.end29.unlock_crit_edge

for.end29.unlock_crit_edge:                       ; preds = %for.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %unlock

if.end33:                                         ; preds = %for.end29
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %9 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %10, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #14, !srcloc !995
  %and34 = and i32 %addr, -256
  %conv36 = zext i1 %byte_oriented to i32
  %call37 = call i32 @t4_read_flash(ptr noundef %adapter, i32 noundef %and34, i32 noundef 64, ptr noundef nonnull %buf, i32 noundef %conv36)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end40, label %if.end33.cleanup_crit_edge

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end40:                                         ; preds = %if.end33
  %idx.neg = sub i32 0, %n
  %add.ptr41 = getelementptr i8, ptr %data.addr.0.lcssa, i32 %idx.neg
  %add.ptr43 = getelementptr i8, ptr %buf, i32 %and
  %bcmp = call i32 @bcmp(ptr %add.ptr41, ptr %add.ptr43, i32 %n) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %tobool45.not = icmp eq i32 %bcmp, 0
  br i1 %tobool45.not, label %if.end40.cleanup_crit_edge, label %do.end

if.end40.cleanup_crit_edge:                       ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %11 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %12, ptr noundef nonnull @.str.250, i32 noundef %addr) #17
  br label %cleanup

unlock:                                           ; preds = %for.end29.unlock_crit_edge, %for.end.unlock_crit_edge, %lor.lhs.false3.unlock_crit_edge, %if.end.unlock_crit_edge
  %ret.0 = phi i32 [ %call, %if.end.unlock_crit_edge ], [ %call4, %lor.lhs.false3.unlock_crit_edge ], [ %call30, %for.end29.unlock_crit_edge ], [ %call23, %for.end.unlock_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adapter, align 128
  %add.ptr.i94 = getelementptr i8, ptr %14, i32 103420
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i94, i32 0) #14, !srcloc !995
  br label %cleanup

cleanup:                                          ; preds = %unlock, %do.end, %if.end40.cleanup_crit_edge, %if.end33.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %ret.0, %unlock ], [ -5, %do.end ], [ -22, %entry.cleanup_crit_edge ], [ %call37, %if.end33.cleanup_crit_edge ], [ 0, %if.end40.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 256, ptr nonnull %buf) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_phy_fw_ver(ptr noundef %adap, ptr nocapture noundef writeonly %phy_fw_ver) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %portvec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 21
  %0 = ptrtoint ptr %portvec to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %portvec, align 1
  %conv = zext i8 %1 to i32
  %shl = shl nuw nsw i32 %conv, 8
  %or1 = or i32 %shl, 17760257
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %2 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %4 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %6 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %7 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %8 = call ptr @memset(ptr %7, i32 0, i32 52)
  %shl.i.i = shl i32 %5, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %9 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 4, ptr %retval_len16.i.i, align 4
  %11 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or1, ptr %6, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %3, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %t4_query_params.exit

for.body16.preheader.i.i:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %12 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %val13.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %14 = ptrtoint ptr %phy_fw_ver to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %phy_fw_ver, align 4
  br label %cleanup

t4_query_params.exit:                             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %cleanup

cleanup:                                          ; preds = %t4_query_params.exit, %for.body16.preheader.i.i
  ret i32 %call.i.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_load_phy_fw(ptr noundef %adap, i32 noundef %win, ptr noundef readonly %phy_fw_version, ptr noundef %phy_fw_data, i32 noundef %phy_fw_size) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i.i89 = alloca %struct.fw_params_cmd, align 4
  %c.i80 = alloca %struct.fw_params_cmd, align 4
  %c.i = alloca %struct.fw_params_cmd, align 4
  %c.i.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %phy_fw_version, null
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then:                                          ; preds = %entry
  %call = tail call i32 %phy_fw_version(ptr noundef %phy_fw_data, i32 noundef %phy_fw_size) #14
  %portvec.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 21
  %0 = ptrtoint ptr %portvec.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %portvec.i, align 1
  %conv.i = zext i8 %1 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 8
  %or1.i = or i32 %shl.i, 17760257
  %mbox.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %2 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %mbox.i, align 8
  %pf.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %4 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i.i) #14
  %6 = getelementptr inbounds i8, ptr %c.i.i.i, i32 8
  %7 = getelementptr inbounds i8, ptr %c.i.i.i, i32 12
  %8 = call ptr @memset(ptr %7, i32 0, i32 52)
  %shl.i.i.i = shl i32 %5, 8
  %or2.i.i.i = or i32 %shl.i.i.i, 146800640
  %9 = ptrtoint ptr %c.i.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or2.i.i.i, ptr %c.i.i.i, align 4
  %retval_len16.i.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i.i, i32 0, i32 1
  %10 = ptrtoint ptr %retval_len16.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 4, ptr %retval_len16.i.i.i, align 4
  %11 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or1.i, ptr %6, align 4
  %call.i.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %3, ptr noundef nonnull %c.i.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp9.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp9.i.i.i, label %t4_phy_fw_ver.exit.thread, label %t4_phy_fw_ver.exit

t4_phy_fw_ver.exit.thread:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %7, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  br label %if.end

t4_phy_fw_ver.exit:                               ; preds = %if.then
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp = icmp slt i32 %call.i.i.i.i, 0
  br i1 %cmp, label %t4_phy_fw_ver.exit.cleanup_crit_edge, label %t4_phy_fw_ver.exit.if.end_crit_edge

t4_phy_fw_ver.exit.if.end_crit_edge:              ; preds = %t4_phy_fw_ver.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

t4_phy_fw_ver.exit.cleanup_crit_edge:             ; preds = %t4_phy_fw_ver.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %t4_phy_fw_ver.exit.if.end_crit_edge, %t4_phy_fw_ver.exit.thread
  %cur_phy_fw_ver.0108 = phi i32 [ %13, %t4_phy_fw_ver.exit.thread ], [ 0, %t4_phy_fw_ver.exit.if.end_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cur_phy_fw_ver.0108, i32 %call)
  %cmp3.not = icmp slt i32 %cur_phy_fw_ver.0108, %call
  br i1 %cmp3.not, label %if.end.if.end6_crit_edge, label %do.end

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %14 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %pdev_dev, align 16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %15, ptr noundef nonnull @.str.83, i32 noundef %cur_phy_fw_ver.0108) #17
  br label %cleanup

if.end6:                                          ; preds = %if.end.if.end6_crit_edge, %entry.if.end6_crit_edge
  %cur_phy_fw_ver.1 = phi i32 [ 0, %entry.if.end6_crit_edge ], [ %cur_phy_fw_ver.0108, %if.end.if.end6_crit_edge ]
  %new_phy_fw_vers.0 = phi i32 [ 0, %entry.if.end6_crit_edge ], [ %call, %if.end.if.end6_crit_edge ]
  %portvec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 21
  %16 = ptrtoint ptr %portvec to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %portvec, align 1
  %conv = zext i8 %17 to i32
  %shl = shl nuw nsw i32 %conv, 8
  %or = or i32 %shl, 17760256
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %18 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %20 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  %22 = getelementptr inbounds i8, ptr %c.i, i32 8
  %23 = getelementptr inbounds i8, ptr %c.i, i32 16
  %24 = call ptr @memset(ptr %23, i32 0, i32 48)
  %shl.i79 = shl i32 %21, 8
  %or2.i = or i32 %shl.i79, 146800640
  %25 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %or2.i, ptr %c.i, align 4
  %retval_len16.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 1
  %26 = ptrtoint ptr %retval_len16.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 4, ptr %retval_len16.i, align 4
  %27 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or, ptr %22, align 4
  %incdec.ptr4.i = getelementptr inbounds i8, ptr %c.i, i32 12
  %28 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %phy_fw_size, ptr %incdec.ptr4.i, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %19, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp9.i, label %for.body16.preheader.i, label %t4_query_params_rw.exit

for.body16.preheader.i:                           ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 2, i32 0, i32 1
  %29 = ptrtoint ptr %val13.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %val13.i, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  br label %if.end12

t4_query_params_rw.exit:                          ; preds = %if.end6
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9 = icmp slt i32 %call.i.i, 0
  br i1 %cmp9, label %t4_query_params_rw.exit.cleanup_crit_edge, label %t4_query_params_rw.exit.if.end12_crit_edge

t4_query_params_rw.exit.if.end12_crit_edge:       ; preds = %t4_query_params_rw.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

t4_query_params_rw.exit.cleanup_crit_edge:        ; preds = %t4_query_params_rw.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end12:                                         ; preds = %t4_query_params_rw.exit.if.end12_crit_edge, %for.body16.preheader.i
  %val.0 = phi i32 [ %30, %for.body16.preheader.i ], [ %phy_fw_size, %t4_query_params_rw.exit.if.end12_crit_edge ]
  %shr = lshr i32 %val.0, 8
  %and = shl i32 %val.0, 16
  %shl13 = and i32 %and, 16711680
  %win0_lock = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 70
  call void @_raw_spin_lock_bh(ptr noundef %win0_lock) #14
  %call14 = call i32 @t4_memory_rw(ptr noundef %adap, i32 noundef %win, i32 noundef %shr, i32 noundef %shl13, i32 noundef %phy_fw_size, ptr noundef %phy_fw_data, i32 noundef 0)
  call void @_raw_spin_unlock_bh(ptr noundef %win0_lock) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool16.not = icmp eq i32 %call14, 0
  br i1 %tobool16.not, label %if.end18, label %if.end12.cleanup_crit_edge

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end18:                                         ; preds = %if.end12
  %31 = ptrtoint ptr %portvec to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load i8, ptr %portvec, align 1
  %conv21 = zext i8 %32 to i32
  %shl22 = shl nuw nsw i32 %conv21, 8
  %or23 = or i32 %shl22, 17760256
  %33 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %mbox, align 8
  %35 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i80) #14
  %37 = getelementptr inbounds i8, ptr %c.i80, i32 8
  %38 = getelementptr inbounds i8, ptr %c.i80, i32 16
  %39 = call ptr @memset(ptr %38, i32 0, i32 48)
  %shl.i81 = shl i32 %36, 8
  %or2.i82 = or i32 %shl.i81, 144703488
  %40 = ptrtoint ptr %c.i80 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %or2.i82, ptr %c.i80, align 4
  %retval_len16.i83 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i80, i32 0, i32 1
  %41 = ptrtoint ptr %retval_len16.i83 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 4, ptr %retval_len16.i83, align 4
  %incdec.ptr3.i = getelementptr inbounds i8, ptr %c.i80, i32 12
  %42 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %or23, ptr %37, align 4
  %43 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %val.0, ptr %incdec.ptr3.i, align 4
  %call.i.i87 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %34, ptr noundef nonnull %c.i80, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 30000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i80) #14
  br i1 %tobool.not, label %if.end18.cleanup_crit_edge, label %if.then29

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then29:                                        ; preds = %if.end18
  %44 = ptrtoint ptr %portvec to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %portvec, align 1
  %conv.i91 = zext i8 %45 to i32
  %shl.i92 = shl nuw nsw i32 %conv.i91, 8
  %or1.i93 = or i32 %shl.i92, 17760257
  %46 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %mbox, align 8
  %48 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i.i89) #14
  %50 = getelementptr inbounds i8, ptr %c.i.i.i89, i32 8
  %51 = getelementptr inbounds i8, ptr %c.i.i.i89, i32 12
  %52 = call ptr @memset(ptr %51, i32 0, i32 52)
  %shl.i.i.i96 = shl i32 %49, 8
  %or2.i.i.i97 = or i32 %shl.i.i.i96, 146800640
  %53 = ptrtoint ptr %c.i.i.i89 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %or2.i.i.i97, ptr %c.i.i.i89, align 4
  %retval_len16.i.i.i98 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i.i89, i32 0, i32 1
  %54 = ptrtoint ptr %retval_len16.i.i.i98 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 4, ptr %retval_len16.i.i.i98, align 4
  %55 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %or1.i93, ptr %50, align 4
  %call.i.i.i.i99 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %47, ptr noundef nonnull %c.i.i.i89, i32 noundef 64, ptr noundef nonnull %c.i.i.i89, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i99)
  %cmp9.i.i.i100 = icmp eq i32 %call.i.i.i.i99, 0
  br i1 %cmp9.i.i.i100, label %t4_phy_fw_ver.exit104.thread, label %t4_phy_fw_ver.exit104

t4_phy_fw_ver.exit104.thread:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #16
  %56 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %51, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i89) #14
  br label %if.end34

t4_phy_fw_ver.exit104:                            ; preds = %if.then29
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i89) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i99)
  %cmp31 = icmp slt i32 %call.i.i.i.i99, 0
  br i1 %cmp31, label %t4_phy_fw_ver.exit104.cleanup_crit_edge, label %t4_phy_fw_ver.exit104.if.end34_crit_edge

t4_phy_fw_ver.exit104.if.end34_crit_edge:         ; preds = %t4_phy_fw_ver.exit104
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

t4_phy_fw_ver.exit104.cleanup_crit_edge:          ; preds = %t4_phy_fw_ver.exit104
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end34:                                         ; preds = %t4_phy_fw_ver.exit104.if.end34_crit_edge, %t4_phy_fw_ver.exit104.thread
  %cur_phy_fw_ver.2113 = phi i32 [ %57, %t4_phy_fw_ver.exit104.thread ], [ %cur_phy_fw_ver.1, %t4_phy_fw_ver.exit104.if.end34_crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %cur_phy_fw_ver.2113, i32 %new_phy_fw_vers.0)
  %cmp35.not = icmp eq i32 %cur_phy_fw_ver.2113, %new_phy_fw_vers.0
  br i1 %cmp35.not, label %if.end34.cleanup_crit_edge, label %do.end40

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end40:                                         ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev41 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %58 = ptrtoint ptr %pdev_dev41 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %pdev_dev41, align 16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %59, ptr noundef nonnull @.str.86, i32 noundef %cur_phy_fw_ver.2113, i32 noundef %new_phy_fw_vers.0) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end40, %if.end34.cleanup_crit_edge, %t4_phy_fw_ver.exit104.cleanup_crit_edge, %if.end18.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %t4_query_params_rw.exit.cleanup_crit_edge, %do.end, %t4_phy_fw_ver.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end ], [ -6, %do.end40 ], [ %call.i.i.i.i, %t4_phy_fw_ver.exit.cleanup_crit_edge ], [ %call.i.i, %t4_query_params_rw.exit.cleanup_crit_edge ], [ %call14, %if.end12.cleanup_crit_edge ], [ %call.i.i.i.i99, %t4_phy_fw_ver.exit104.cleanup_crit_edge ], [ 1, %if.end34.cleanup_crit_edge ], [ 1, %if.end18.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_query_params_rw(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %nparams, ptr nocapture noundef readonly %params, ptr nocapture noundef %val, i32 noundef %rw, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %nparams)
  %cmp = icmp ugt i32 %nparams, 7
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 146800640
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 4
  %retval_len16 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp338.not = icmp eq i32 %nparams, 0
  br i1 %cmp338.not, label %if.end.for.end_crit_edge, label %for.body.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rw)
  %tobool.not = icmp eq i32 %rw, 0
  %param = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2
  %incdec.ptr = getelementptr i32, ptr %params, i32 1
  %4 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %params, align 4
  %6 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %param, align 4
  br i1 %tobool.not, label %for.body.lr.ph.if.end6_crit_edge, label %if.then5

for.body.lr.ph.if.end6_crit_edge:                 ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then5:                                         ; preds = %for.body.lr.ph
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val, align 4
  %9 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr4, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %for.body.lr.ph.if.end6_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nparams)
  %exitcond.not = icmp eq i32 %nparams, 1
  br i1 %exitcond.not, label %if.end6.for.end_crit_edge, label %for.body.1

if.end6.for.end_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.1:                                       ; preds = %if.end6
  %incdec.ptr7 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 1
  %incdec.ptr.1 = getelementptr i32, ptr %params, i32 2
  %10 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %incdec.ptr, align 4
  %12 = ptrtoint ptr %incdec.ptr7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %incdec.ptr7, align 4
  br i1 %tobool.not, label %for.body.1.if.end6.1_crit_edge, label %if.then5.1

for.body.1.if.end6.1_crit_edge:                   ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.1

if.then5.1:                                       ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.1 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 1, i32 1
  %add.ptr.1 = getelementptr i32, ptr %val, i32 1
  %13 = ptrtoint ptr %add.ptr.1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %add.ptr.1, align 4
  %15 = ptrtoint ptr %incdec.ptr4.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr4.1, align 4
  br label %if.end6.1

if.end6.1:                                        ; preds = %if.then5.1, %for.body.1.if.end6.1_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nparams)
  %exitcond.not.1 = icmp eq i32 %nparams, 2
  br i1 %exitcond.not.1, label %if.end6.1.for.end_crit_edge, label %for.body.2

if.end6.1.for.end_crit_edge:                      ; preds = %if.end6.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.2:                                       ; preds = %if.end6.1
  %incdec.ptr7.1 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 2
  %incdec.ptr.2 = getelementptr i32, ptr %params, i32 3
  %16 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %incdec.ptr.1, align 4
  %18 = ptrtoint ptr %incdec.ptr7.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr7.1, align 4
  br i1 %tobool.not, label %for.body.2.if.end6.2_crit_edge, label %if.then5.2

for.body.2.if.end6.2_crit_edge:                   ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.2

if.then5.2:                                       ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.2 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 2, i32 1
  %add.ptr.2 = getelementptr i32, ptr %val, i32 2
  %19 = ptrtoint ptr %add.ptr.2 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %add.ptr.2, align 4
  %21 = ptrtoint ptr %incdec.ptr4.2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr4.2, align 4
  br label %if.end6.2

if.end6.2:                                        ; preds = %if.then5.2, %for.body.2.if.end6.2_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %nparams)
  %exitcond.not.2 = icmp eq i32 %nparams, 3
  br i1 %exitcond.not.2, label %if.end6.2.for.end_crit_edge, label %for.body.3

if.end6.2.for.end_crit_edge:                      ; preds = %if.end6.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.3:                                       ; preds = %if.end6.2
  %incdec.ptr7.2 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 3
  %incdec.ptr.3 = getelementptr i32, ptr %params, i32 4
  %22 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %incdec.ptr.2, align 4
  %24 = ptrtoint ptr %incdec.ptr7.2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr7.2, align 4
  br i1 %tobool.not, label %for.body.3.if.end6.3_crit_edge, label %if.then5.3

for.body.3.if.end6.3_crit_edge:                   ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.3

if.then5.3:                                       ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 3, i32 1
  %add.ptr.3 = getelementptr i32, ptr %val, i32 3
  %25 = ptrtoint ptr %add.ptr.3 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %add.ptr.3, align 4
  %27 = ptrtoint ptr %incdec.ptr4.3 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %incdec.ptr4.3, align 4
  br label %if.end6.3

if.end6.3:                                        ; preds = %if.then5.3, %for.body.3.if.end6.3_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %nparams)
  %exitcond.not.3 = icmp eq i32 %nparams, 4
  br i1 %exitcond.not.3, label %if.end6.3.for.end_crit_edge, label %for.body.4

if.end6.3.for.end_crit_edge:                      ; preds = %if.end6.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.4:                                       ; preds = %if.end6.3
  %incdec.ptr7.3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 4
  %incdec.ptr.4 = getelementptr i32, ptr %params, i32 5
  %28 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %incdec.ptr.3, align 4
  %30 = ptrtoint ptr %incdec.ptr7.3 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %incdec.ptr7.3, align 4
  br i1 %tobool.not, label %for.body.4.if.end6.4_crit_edge, label %if.then5.4

for.body.4.if.end6.4_crit_edge:                   ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.4

if.then5.4:                                       ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 4, i32 1
  %add.ptr.4 = getelementptr i32, ptr %val, i32 4
  %31 = ptrtoint ptr %add.ptr.4 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %add.ptr.4, align 4
  %33 = ptrtoint ptr %incdec.ptr4.4 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %incdec.ptr4.4, align 4
  br label %if.end6.4

if.end6.4:                                        ; preds = %if.then5.4, %for.body.4.if.end6.4_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %nparams)
  %exitcond.not.4 = icmp eq i32 %nparams, 5
  br i1 %exitcond.not.4, label %if.end6.4.for.end_crit_edge, label %for.body.5

if.end6.4.for.end_crit_edge:                      ; preds = %if.end6.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.5:                                       ; preds = %if.end6.4
  %incdec.ptr7.4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 5
  %incdec.ptr.5 = getelementptr i32, ptr %params, i32 6
  %34 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %incdec.ptr.4, align 4
  %36 = ptrtoint ptr %incdec.ptr7.4 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %incdec.ptr7.4, align 4
  br i1 %tobool.not, label %for.body.5.if.end6.5_crit_edge, label %if.then5.5

for.body.5.if.end6.5_crit_edge:                   ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6.5

if.then5.5:                                       ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 5, i32 1
  %add.ptr.5 = getelementptr i32, ptr %val, i32 5
  %37 = ptrtoint ptr %add.ptr.5 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %add.ptr.5, align 4
  %39 = ptrtoint ptr %incdec.ptr4.5 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %incdec.ptr4.5, align 4
  br label %if.end6.5

if.end6.5:                                        ; preds = %if.then5.5, %for.body.5.if.end6.5_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %nparams)
  %exitcond.not.5 = icmp eq i32 %nparams, 6
  br i1 %exitcond.not.5, label %if.end6.5.for.end_crit_edge, label %for.body.6

if.end6.5.for.end_crit_edge:                      ; preds = %if.end6.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.6:                                       ; preds = %if.end6.5
  %incdec.ptr7.5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 6
  %40 = ptrtoint ptr %incdec.ptr.5 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %incdec.ptr.5, align 4
  %42 = ptrtoint ptr %incdec.ptr7.5 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %incdec.ptr7.5, align 4
  br i1 %tobool.not, label %for.body.6.for.end_crit_edge, label %if.then5.6

for.body.6.for.end_crit_edge:                     ; preds = %for.body.6
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

if.then5.6:                                       ; preds = %for.body.6
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr4.6 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 6, i32 1
  %add.ptr.6 = getelementptr i32, ptr %val, i32 6
  %43 = ptrtoint ptr %add.ptr.6 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %add.ptr.6, align 4
  %45 = ptrtoint ptr %incdec.ptr4.6 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %incdec.ptr4.6, align 4
  br label %for.end

for.end:                                          ; preds = %if.then5.6, %for.body.6.for.end_crit_edge, %if.end6.5.for.end_crit_edge, %if.end6.4.for.end_crit_edge, %if.end6.3.for.end_crit_edge, %if.end6.2.for.end_crit_edge, %if.end6.1.for.end_crit_edge, %if.end6.for.end_crit_edge, %if.end.for.end_crit_edge
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp9 = icmp eq i32 %call.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp1543 = icmp ne i32 %nparams, 0
  %or.cond = and i1 %cmp9, %cmp1543
  br i1 %or.cond, label %for.body16.preheader, label %for.end.cleanup_crit_edge

for.end.cleanup_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body16.preheader:                             ; preds = %for.end
  %val13 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  br label %for.body16

for.body16:                                       ; preds = %for.body16.for.body16_crit_edge, %for.body16.preheader
  %p.146 = phi ptr [ %add.ptr20, %for.body16.for.body16_crit_edge ], [ %val13, %for.body16.preheader ]
  %i.145 = phi i32 [ %inc19, %for.body16.for.body16_crit_edge ], [ 0, %for.body16.preheader ]
  %val.addr.044 = phi ptr [ %incdec.ptr17, %for.body16.for.body16_crit_edge ], [ %val, %for.body16.preheader ]
  %46 = ptrtoint ptr %p.146 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %p.146, align 4
  %incdec.ptr17 = getelementptr i32, ptr %val.addr.044, i32 1
  %48 = ptrtoint ptr %val.addr.044 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %val.addr.044, align 4
  %inc19 = add nuw i32 %i.145, 1
  %add.ptr20 = getelementptr i32, ptr %p.146, i32 2
  %exitcond47.not = icmp eq i32 %inc19, %nparams
  br i1 %exitcond47.not, label %for.body16.cleanup_crit_edge, label %for.body16.for.body16_crit_edge

for.body16.for.body16_crit_edge:                  ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16

for.body16.cleanup_crit_edge:                     ; preds = %for.body16
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.body16.cleanup_crit_edge, %for.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ %call.i, %for.end.cleanup_crit_edge ], [ 0, %for.body16.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_params_timeout(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %nparams, ptr nocapture noundef readonly %params, ptr nocapture noundef readonly %val, i32 noundef %timeout) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %nparams)
  %cmp = icmp ugt i32 %nparams, 7
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 144703488
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 4
  %retval_len16 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %tobool.not9 = icmp eq i32 %nparams, 0
  br i1 %tobool.not9, label %if.end.while.end_crit_edge, label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body:                                       ; preds = %if.end
  %param = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %params, align 4
  %incdec.ptr3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %6 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %param, align 4
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val, align 4
  %9 = ptrtoint ptr %incdec.ptr3 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nparams)
  %tobool.not = icmp eq i32 %nparams, 1
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.1

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.1:                                     ; preds = %while.body
  %incdec.ptr5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 1
  %incdec.ptr4 = getelementptr i32, ptr %val, i32 1
  %incdec.ptr = getelementptr i32, ptr %params, i32 1
  %10 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %incdec.ptr, align 4
  %incdec.ptr3.1 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 1, i32 1
  %12 = ptrtoint ptr %incdec.ptr5 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %incdec.ptr5, align 4
  %13 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr4, align 4
  %15 = ptrtoint ptr %incdec.ptr3.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr3.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nparams)
  %tobool.not.1 = icmp eq i32 %nparams, 2
  br i1 %tobool.not.1, label %while.body.1.while.end_crit_edge, label %while.body.2

while.body.1.while.end_crit_edge:                 ; preds = %while.body.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.2:                                     ; preds = %while.body.1
  %incdec.ptr5.1 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 2
  %incdec.ptr4.1 = getelementptr i32, ptr %val, i32 2
  %incdec.ptr.1 = getelementptr i32, ptr %params, i32 2
  %16 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %incdec.ptr.1, align 4
  %incdec.ptr3.2 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 2, i32 1
  %18 = ptrtoint ptr %incdec.ptr5.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr5.1, align 4
  %19 = ptrtoint ptr %incdec.ptr4.1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %incdec.ptr4.1, align 4
  %21 = ptrtoint ptr %incdec.ptr3.2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr3.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %nparams)
  %tobool.not.2 = icmp eq i32 %nparams, 3
  br i1 %tobool.not.2, label %while.body.2.while.end_crit_edge, label %while.body.3

while.body.2.while.end_crit_edge:                 ; preds = %while.body.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.3:                                     ; preds = %while.body.2
  %incdec.ptr5.2 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 3
  %incdec.ptr4.2 = getelementptr i32, ptr %val, i32 3
  %incdec.ptr.2 = getelementptr i32, ptr %params, i32 3
  %22 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %incdec.ptr.2, align 4
  %incdec.ptr3.3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 3, i32 1
  %24 = ptrtoint ptr %incdec.ptr5.2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr5.2, align 4
  %25 = ptrtoint ptr %incdec.ptr4.2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %incdec.ptr4.2, align 4
  %27 = ptrtoint ptr %incdec.ptr3.3 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %incdec.ptr3.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %nparams)
  %tobool.not.3 = icmp eq i32 %nparams, 4
  br i1 %tobool.not.3, label %while.body.3.while.end_crit_edge, label %while.body.4

while.body.3.while.end_crit_edge:                 ; preds = %while.body.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.4:                                     ; preds = %while.body.3
  %incdec.ptr5.3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 4
  %incdec.ptr4.3 = getelementptr i32, ptr %val, i32 4
  %incdec.ptr.3 = getelementptr i32, ptr %params, i32 4
  %28 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %incdec.ptr.3, align 4
  %incdec.ptr3.4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 4, i32 1
  %30 = ptrtoint ptr %incdec.ptr5.3 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %incdec.ptr5.3, align 4
  %31 = ptrtoint ptr %incdec.ptr4.3 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %incdec.ptr4.3, align 4
  %33 = ptrtoint ptr %incdec.ptr3.4 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %incdec.ptr3.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %nparams)
  %tobool.not.4 = icmp eq i32 %nparams, 5
  br i1 %tobool.not.4, label %while.body.4.while.end_crit_edge, label %while.body.5

while.body.4.while.end_crit_edge:                 ; preds = %while.body.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.5:                                     ; preds = %while.body.4
  %incdec.ptr5.4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 5
  %incdec.ptr4.4 = getelementptr i32, ptr %val, i32 5
  %incdec.ptr.4 = getelementptr i32, ptr %params, i32 5
  %34 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %incdec.ptr.4, align 4
  %incdec.ptr3.5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 5, i32 1
  %36 = ptrtoint ptr %incdec.ptr5.4 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %incdec.ptr5.4, align 4
  %37 = ptrtoint ptr %incdec.ptr4.4 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %incdec.ptr4.4, align 4
  %39 = ptrtoint ptr %incdec.ptr3.5 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %incdec.ptr3.5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %nparams)
  %tobool.not.5 = icmp eq i32 %nparams, 6
  br i1 %tobool.not.5, label %while.body.5.while.end_crit_edge, label %while.body.6

while.body.5.while.end_crit_edge:                 ; preds = %while.body.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.6:                                     ; preds = %while.body.5
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr5.5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 6
  %incdec.ptr4.5 = getelementptr i32, ptr %val, i32 6
  %incdec.ptr.5 = getelementptr i32, ptr %params, i32 6
  %40 = ptrtoint ptr %incdec.ptr.5 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %incdec.ptr.5, align 4
  %incdec.ptr3.6 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 6, i32 1
  %42 = ptrtoint ptr %incdec.ptr5.5 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %incdec.ptr5.5, align 4
  %43 = ptrtoint ptr %incdec.ptr4.5 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %incdec.ptr4.5, align 4
  %45 = ptrtoint ptr %incdec.ptr3.6 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %incdec.ptr3.6, align 4
  br label %while.end

while.end:                                        ; preds = %while.body.6, %while.body.5.while.end_crit_edge, %while.body.4.while.end_crit_edge, %while.body.3.while.end_crit_edge, %while.body.2.while.end_crit_edge, %while.body.1.while.end_crit_edge, %while.body.while.end_crit_edge, %if.end.while.end_crit_edge
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef %timeout) #14
  br label %cleanup

cleanup:                                          ; preds = %while.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %while.end ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fwcache(ptr noundef %adap, i32 noundef %op) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  %shl = shl i32 %3, 8
  %or = or i32 %shl, 144703488
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %c, align 4
  %retval_len16 = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 1
  %5 = ptrtoint ptr %retval_len16 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 4, ptr %retval_len16, align 4
  %param = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2
  %6 = ptrtoint ptr %param to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 18350080, ptr %param, align 4
  %val = getelementptr inbounds %struct.fw_params_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %7 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %op, ptr %val, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %8 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %9, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_cim_read_pif_la(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %pif_req, ptr nocapture noundef writeonly %pif_rsp, ptr noundef writeonly %pif_req_wrptr, ptr noundef writeonly %pif_rsp_wrptr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 31600
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %xor = xor i32 %3, 4096
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = tail call i32 @llvm.bswap.i32(i32 %xor) #14
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i45 = getelementptr i8, ptr %6, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i45, i32 %4) #14, !srcloc !995
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i46 = getelementptr i8, ptr %8, i32 31604
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i46) #14, !srcloc !992
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %shr = lshr i32 %10, 16
  %and2 = and i32 %shr, 511
  %and4 = and i32 %10, 511
  %tobool5.not = icmp eq ptr %pif_req_wrptr, null
  br i1 %tobool5.not, label %if.end.if.end7_crit_edge, label %if.then6

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %pif_req_wrptr to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and2, ptr %pif_req_wrptr, align 4
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end.if.end7_crit_edge
  %tobool8.not = icmp eq ptr %pif_rsp_wrptr, null
  br i1 %tobool8.not, label %if.end7.for.cond11.preheader.preheader_crit_edge, label %if.then9

if.end7.for.cond11.preheader.preheader_crit_edge: ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond11.preheader.preheader

if.then9:                                         ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %pif_rsp_wrptr to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %and4, ptr %pif_rsp_wrptr, align 4
  br label %for.cond11.preheader.preheader

for.cond11.preheader.preheader:                   ; preds = %if.then9, %if.end7.for.cond11.preheader.preheader_crit_edge
  br label %for.cond11.preheader

for.cond11.preheader:                             ; preds = %for.end.for.cond11.preheader_crit_edge, %for.cond11.preheader.preheader
  %rsp.060 = phi i32 [ %and22, %for.end.for.cond11.preheader_crit_edge ], [ %and4, %for.cond11.preheader.preheader ]
  %req.059 = phi i32 [ %and20, %for.end.for.cond11.preheader_crit_edge ], [ %and2, %for.cond11.preheader.preheader ]
  %i.058 = phi i32 [ %inc24, %for.end.for.cond11.preheader_crit_edge ], [ 0, %for.cond11.preheader.preheader ]
  %pif_req.addr.057 = phi ptr [ %incdec.ptr, %for.end.for.cond11.preheader_crit_edge ], [ %pif_req, %for.cond11.preheader.preheader ]
  %pif_rsp.addr.056 = phi ptr [ %incdec.ptr17, %for.end.for.cond11.preheader_crit_edge ], [ %pif_rsp, %for.cond11.preheader.preheader ]
  br label %for.body13

for.body13:                                       ; preds = %for.body13.for.body13_crit_edge, %for.cond11.preheader
  %rsp.155 = phi i32 [ %rsp.060, %for.cond11.preheader ], [ %inc18, %for.body13.for.body13_crit_edge ]
  %req.154 = phi i32 [ %req.059, %for.cond11.preheader ], [ %inc, %for.body13.for.body13_crit_edge ]
  %j.053 = phi i32 [ 0, %for.cond11.preheader ], [ %inc19, %for.body13.for.body13_crit_edge ]
  %pif_req.addr.152 = phi ptr [ %pif_req.addr.057, %for.cond11.preheader ], [ %incdec.ptr, %for.body13.for.body13_crit_edge ]
  %pif_rsp.addr.151 = phi ptr [ %pif_rsp.addr.056, %for.cond11.preheader ], [ %incdec.ptr17, %for.body13.for.body13_crit_edge ]
  %shl = shl i32 %req.154, 23
  %shl14 = shl i32 %rsp.155, 14
  %or = or i32 %shl14, %shl
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %14 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adap, align 128
  %add.ptr.i47 = getelementptr i8, ptr %15, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i47, i32 %13) #14, !srcloc !995
  %16 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %adap, align 128
  %add.ptr.i48 = getelementptr i8, ptr %17, i32 31608
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i48) #14, !srcloc !992
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %pif_req.addr.152, i32 1
  %20 = ptrtoint ptr %pif_req.addr.152 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %pif_req.addr.152, align 4
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i49 = getelementptr i8, ptr %22, i32 31612
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i49) #14, !srcloc !992
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr17 = getelementptr i32, ptr %pif_rsp.addr.151, i32 1
  %25 = ptrtoint ptr %pif_rsp.addr.151 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %pif_rsp.addr.151, align 4
  %inc = add nuw nsw i32 %req.154, 1
  %inc18 = add nuw nsw i32 %rsp.155, 1
  %inc19 = add nuw nsw i32 %j.053, 1
  %exitcond.not = icmp eq i32 %inc19, 6
  br i1 %exitcond.not, label %for.end, label %for.body13.for.body13_crit_edge

for.body13.for.body13_crit_edge:                  ; preds = %for.body13
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body13

for.end:                                          ; preds = %for.body13
  %add = add nuw i32 %req.154, 3
  %and20 = and i32 %add, 511
  %add21 = add nuw i32 %rsp.155, 3
  %and22 = and i32 %add21, 511
  %inc24 = add nuw nsw i32 %i.058, 1
  %exitcond61.not = icmp eq i32 %inc24, 64
  br i1 %exitcond61.not, label %for.end25, label %for.end.for.cond11.preheader_crit_edge

for.end.for.cond11.preheader_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond11.preheader

for.end25:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %26 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %adap, align 128
  %add.ptr.i50 = getelementptr i8, ptr %27, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i50, i32 %2) #14, !srcloc !995
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_cim_read_ma_la(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %ma_req, ptr nocapture noundef writeonly %ma_rsp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 31600
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.for.cond1.preheader.preheader_crit_edge, label %if.then

entry.for.cond1.preheader.preheader_crit_edge:    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader.preheader

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %xor = xor i32 %3, 4096
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = tail call i32 @llvm.bswap.i32(i32 %xor) #14
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i23 = getelementptr i8, ptr %6, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i23, i32 %4) #14, !srcloc !995
  br label %for.cond1.preheader.preheader

for.cond1.preheader.preheader:                    ; preds = %if.then, %entry.for.cond1.preheader.preheader_crit_edge
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.cond1.preheader.for.cond1.preheader_crit_edge, %for.cond1.preheader.preheader
  %i.033 = phi i32 [ %inc9, %for.cond1.preheader.for.cond1.preheader_crit_edge ], [ 0, %for.cond1.preheader.preheader ]
  %ma_rsp.addr.032 = phi ptr [ %incdec.ptr7.4, %for.cond1.preheader.for.cond1.preheader_crit_edge ], [ %ma_rsp, %for.cond1.preheader.preheader ]
  %ma_req.addr.031 = phi ptr [ %incdec.ptr.4, %for.cond1.preheader.for.cond1.preheader_crit_edge ], [ %ma_req, %for.cond1.preheader.preheader ]
  %mul = shl i32 %i.033, 3
  %shl = shl i32 %i.033, 26
  %shl4 = shl i32 %i.033, 17
  %or = or i32 %shl, %shl4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %7 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i24 = getelementptr i8, ptr %9, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24, i32 %7) #14, !srcloc !995
  %10 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adap, align 128
  %add.ptr.i25 = getelementptr i8, ptr %11, i32 31616
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25) #14, !srcloc !992
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %ma_req.addr.031, i32 1
  %14 = ptrtoint ptr %ma_req.addr.031 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %ma_req.addr.031, align 4
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i26 = getelementptr i8, ptr %16, i32 31620
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26) #14, !srcloc !992
  %18 = tail call i32 @llvm.bswap.i32(i32 %17) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr7 = getelementptr i32, ptr %ma_rsp.addr.032, i32 1
  %19 = ptrtoint ptr %ma_rsp.addr.032 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %ma_rsp.addr.032, align 4
  %add.1 = or i32 %mul, 1
  %shl.1 = shl i32 %add.1, 23
  %shl4.1 = shl i32 %add.1, 14
  %or.1 = or i32 %shl.1, %shl4.1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %20 = tail call i32 @llvm.bswap.i32(i32 %or.1) #14
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i24.1 = getelementptr i8, ptr %22, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.1, i32 %20) #14, !srcloc !995
  %23 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %adap, align 128
  %add.ptr.i25.1 = getelementptr i8, ptr %24, i32 31616
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25.1) #14, !srcloc !992
  %26 = tail call i32 @llvm.bswap.i32(i32 %25) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.1 = getelementptr i32, ptr %ma_req.addr.031, i32 2
  %27 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %incdec.ptr, align 4
  %28 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adap, align 128
  %add.ptr.i26.1 = getelementptr i8, ptr %29, i32 31620
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26.1) #14, !srcloc !992
  %31 = tail call i32 @llvm.bswap.i32(i32 %30) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr7.1 = getelementptr i32, ptr %ma_rsp.addr.032, i32 2
  %32 = ptrtoint ptr %incdec.ptr7 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %incdec.ptr7, align 4
  %add.2 = or i32 %mul, 2
  %shl.2 = shl i32 %add.2, 23
  %shl4.2 = shl i32 %add.2, 14
  %or.2 = or i32 %shl.2, %shl4.2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %33 = tail call i32 @llvm.bswap.i32(i32 %or.2) #14
  %34 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %adap, align 128
  %add.ptr.i24.2 = getelementptr i8, ptr %35, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.2, i32 %33) #14, !srcloc !995
  %36 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adap, align 128
  %add.ptr.i25.2 = getelementptr i8, ptr %37, i32 31616
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25.2) #14, !srcloc !992
  %39 = tail call i32 @llvm.bswap.i32(i32 %38) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.2 = getelementptr i32, ptr %ma_req.addr.031, i32 3
  %40 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %incdec.ptr.1, align 4
  %41 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %adap, align 128
  %add.ptr.i26.2 = getelementptr i8, ptr %42, i32 31620
  %43 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26.2) #14, !srcloc !992
  %44 = tail call i32 @llvm.bswap.i32(i32 %43) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr7.2 = getelementptr i32, ptr %ma_rsp.addr.032, i32 3
  %45 = ptrtoint ptr %incdec.ptr7.1 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %incdec.ptr7.1, align 4
  %add.3 = or i32 %mul, 3
  %shl.3 = shl i32 %add.3, 23
  %shl4.3 = shl i32 %add.3, 14
  %or.3 = or i32 %shl.3, %shl4.3
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %46 = tail call i32 @llvm.bswap.i32(i32 %or.3) #14
  %47 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %adap, align 128
  %add.ptr.i24.3 = getelementptr i8, ptr %48, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.3, i32 %46) #14, !srcloc !995
  %49 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %adap, align 128
  %add.ptr.i25.3 = getelementptr i8, ptr %50, i32 31616
  %51 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25.3) #14, !srcloc !992
  %52 = tail call i32 @llvm.bswap.i32(i32 %51) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.3 = getelementptr i32, ptr %ma_req.addr.031, i32 4
  %53 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %incdec.ptr.2, align 4
  %54 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %adap, align 128
  %add.ptr.i26.3 = getelementptr i8, ptr %55, i32 31620
  %56 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26.3) #14, !srcloc !992
  %57 = tail call i32 @llvm.bswap.i32(i32 %56) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr7.3 = getelementptr i32, ptr %ma_rsp.addr.032, i32 4
  %58 = ptrtoint ptr %incdec.ptr7.2 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %incdec.ptr7.2, align 4
  %add.4 = or i32 %mul, 4
  %shl.4 = shl i32 %add.4, 23
  %shl4.4 = shl i32 %add.4, 14
  %or.4 = or i32 %shl.4, %shl4.4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %59 = tail call i32 @llvm.bswap.i32(i32 %or.4) #14
  %60 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %adap, align 128
  %add.ptr.i24.4 = getelementptr i8, ptr %61, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i24.4, i32 %59) #14, !srcloc !995
  %62 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %adap, align 128
  %add.ptr.i25.4 = getelementptr i8, ptr %63, i32 31616
  %64 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25.4) #14, !srcloc !992
  %65 = tail call i32 @llvm.bswap.i32(i32 %64) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.4 = getelementptr i32, ptr %ma_req.addr.031, i32 5
  %66 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %incdec.ptr.3, align 4
  %67 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %adap, align 128
  %add.ptr.i26.4 = getelementptr i8, ptr %68, i32 31620
  %69 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26.4) #14, !srcloc !992
  %70 = tail call i32 @llvm.bswap.i32(i32 %69) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr7.4 = getelementptr i32, ptr %ma_rsp.addr.032, i32 5
  %71 = ptrtoint ptr %incdec.ptr7.3 to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %incdec.ptr7.3, align 4
  %inc9 = add nuw nsw i32 %i.033, 1
  %exitcond.not = icmp eq i32 %inc9, 64
  br i1 %exitcond.not, label %for.end10, label %for.cond1.preheader.for.cond1.preheader_crit_edge

for.cond1.preheader.for.cond1.preheader_crit_edge: ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader

for.end10:                                        ; preds = %for.cond1.preheader
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %72 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %adap, align 128
  %add.ptr.i27 = getelementptr i8, ptr %73, i32 31600
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i27, i32 %2) #14, !srcloc !995
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_ulprx_read_la(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %la_buf) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %for.end.for.body_crit_edge, %entry
  %i.023 = phi i32 [ 0, %entry ], [ %inc7, %for.end.for.body_crit_edge ]
  %add.ptr = getelementptr i32, ptr %la_buf, i32 %i.023
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %i.023) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 102972
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i18 = getelementptr i8, ptr %4, i32 102984
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %6 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adap, align 128
  %add.ptr.i19 = getelementptr i8, ptr %7, i32 102976
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19, i32 %5) #14, !srcloc !995
  br label %for.body3

for.body3:                                        ; preds = %for.body3.for.body3_crit_edge, %for.body
  %p.022 = phi ptr [ %add.ptr, %for.body ], [ %add.ptr5, %for.body3.for.body3_crit_edge ]
  %j.021 = phi i32 [ 0, %for.body ], [ %inc, %for.body3.for.body3_crit_edge ]
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i20 = getelementptr i8, ptr %9, i32 102980
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i20) #14, !srcloc !992
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %12 = ptrtoint ptr %p.022 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %p.022, align 4
  %inc = add nuw nsw i32 %j.021, 1
  %add.ptr5 = getelementptr i32, ptr %p.022, i32 8
  %exitcond.not = icmp eq i32 %inc, 512
  br i1 %exitcond.not, label %for.end, label %for.body3.for.body3_crit_edge

for.body3.for.body3_crit_edge:                    ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body3

for.end:                                          ; preds = %for.body3
  %inc7 = add nuw nsw i32 %i.023, 1
  %exitcond24.not = icmp eq i32 %inc7, 8
  br i1 %exitcond24.not, label %for.end8, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end8:                                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_link_acaps(ptr nocapture noundef readonly %adapter, i32 %port, ptr nocapture noundef %lc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %lc to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %lc, align 4
  %and = and i32 %1, 2097152
  %requested_fc = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 6
  %2 = ptrtoint ptr %requested_fc to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %requested_fc, align 4
  %and.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %3, 2
  %4 = shl i32 %3, 16
  %5 = and i32 %4, 196608
  %and6.i = shl i32 %3, 26
  %6 = and i32 %and6.i, 268435456
  %7 = or i32 %6, %5
  %8 = shl nuw nsw i32 %and1.i, 18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %..i = select i1 %tobool2.not.i, i32 786432, i32 262144
  %.sink.i = select i1 %tobool.not.i, i32 %8, i32 %..i
  %9 = or i32 %7, %.sink.i
  %10 = xor i32 %9, 268435456
  %requested_fec = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 9
  %11 = ptrtoint ptr %requested_fec to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %requested_fec, align 4
  %and1 = and i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %def_acaps = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 1
  %13 = ptrtoint ptr %def_acaps to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %def_acaps, align 4
  %and.i72 = lshr i32 %14, 22
  %15 = and i32 %and.i72, 6
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %cc_fec.0.in = phi i32 [ %15, %if.then ], [ %12, %entry.if.end_crit_edge ]
  %conv5 = and i32 %cc_fec.0.in, 255
  %and.i73 = shl nuw nsw i32 %conv5, 22
  %16 = and i32 %and.i73, 25165824
  %and8 = and i32 %1, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8)
  %tobool9.not = icmp eq i32 %and8, 0
  br i1 %tobool9.not, label %if.then10, label %if.else16

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %acaps11 = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 2
  %17 = ptrtoint ptr %acaps11 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %acaps11, align 4
  %or = or i32 %16, %10
  %or12 = or i32 %or, %18
  %and14 = and i32 %3, -5
  %fc = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 7
  %19 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %and14, ptr %fc, align 4
  %fec = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 10
  %20 = ptrtoint ptr %fec to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %conv5, ptr %fec, align 4
  br label %if.end34

if.else16:                                        ; preds = %if.end
  %autoneg = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 11
  %21 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %cmp = icmp eq i8 %22, 0
  br i1 %cmp, label %if.then19, label %if.else28

if.then19:                                        ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #16
  %speed_caps = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 4
  %23 = ptrtoint ptr %speed_caps to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %speed_caps, align 4
  %or20 = or i32 %16, %10
  %or21 = or i32 %or20, %and
  %or22 = or i32 %or21, %24
  %and24 = and i32 %3, -5
  %fc25 = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 7
  %25 = ptrtoint ptr %fc25 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %and24, ptr %fc25, align 4
  %fec27 = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 10
  %26 = ptrtoint ptr %fec27 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %conv5, ptr %fec27, align 4
  br label %if.end34

if.else28:                                        ; preds = %if.else16
  call void @__sanitizer_cov_trace_pc() #16
  %acaps29 = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 2
  %27 = ptrtoint ptr %acaps29 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %acaps29, align 4
  %or30 = or i32 %16, %10
  %or31 = or i32 %or30, %and
  %or32 = or i32 %or31, %28
  br label %if.end34

if.end34:                                         ; preds = %if.else28, %if.then19, %if.then10
  %acaps.0 = phi i32 [ %or22, %if.then19 ], [ %or32, %if.else28 ], [ %or12, %if.then10 ]
  %neg = and i32 %1, -268435457
  %and36 = xor i32 %neg, -268435457
  %and37 = and i32 %and36, %acaps.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and37)
  %tobool38.not = icmp eq i32 %and37, 0
  br i1 %tobool38.not, label %if.end34.cleanup_crit_edge, label %do.end

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %29 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %30, ptr noundef nonnull @.str.88, i32 noundef %acaps.0, i32 noundef %1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end34.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %do.end ], [ %acaps.0, %if.end34.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_link_l1cfg_core(ptr noundef %adapter, i32 noundef %mbox, i32 noundef %port, ptr nocapture noundef %lc, i8 noundef zeroext %sleep_ok, i32 noundef %timeout) local_unnamed_addr #0 align 64 {
entry:
  %cmd = alloca %struct.fw_port_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fw_caps_support = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 35
  %0 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %fw_caps_support, align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %cmd) #14
  %2 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 1
  %3 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2
  %4 = ptrtoint ptr %lc to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %lc, align 4
  %and = and i32 %5, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %autoneg = getelementptr inbounds %struct.link_config, ptr %lc, i32 0, i32 11
  %6 = ptrtoint ptr %autoneg to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %autoneg, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %7)
  %cmp = icmp eq i8 %7, 1
  br i1 %cmp, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %call = tail call i32 @t4_link_acaps(ptr noundef %adapter, i32 undef, ptr noundef %lc)
  %8 = getelementptr inbounds i8, ptr %cmd, i32 8
  %9 = call ptr @memset(ptr %8, i32 0, i32 24)
  %or = or i32 %port, 462422016
  %10 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or, ptr %cmd, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp3 = icmp eq i8 %1, 1
  %or6 = select i1 %cmp3, i32 65538, i32 589826
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or6, ptr %2, align 4
  br i1 %cmp3, label %if.then9, label %if.end.if.end14_crit_edge

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %12 = trunc i32 %call to i16
  %13 = shl i16 %12, 1
  %14 = and i16 %13, 8
  %15 = lshr i16 %12, 1
  %16 = and i16 %15, 4
  %17 = and i16 %15, 32
  %and53.i = lshr i32 %call, 10
  %18 = trunc i32 %and53.i to i16
  %19 = and i16 %18, 64
  %20 = and i16 %18, 128
  %and73.i = lshr i32 %call, 4
  %21 = trunc i32 %and73.i to i16
  %22 = and i16 %21, 16384
  %23 = and i16 %21, -32768
  %and93.i = lshr i32 %call, 12
  %24 = trunc i32 %and93.i to i16
  %25 = and i16 %24, 256
  %and103.i = lshr i32 %call, 15
  %26 = trunc i32 %and103.i to i16
  %27 = and i16 %26, 8192
  %28 = and i16 %24, 512
  %29 = and i16 %24, 1024
  %30 = and i16 %24, 2048
  %31 = and i16 %24, 4096
  %32 = and i16 %12, 19
  %33 = or i16 %14, %32
  %34 = or i16 %33, %16
  %35 = or i16 %34, %17
  %36 = or i16 %35, %19
  %37 = or i16 %36, %20
  %38 = or i16 %37, %22
  %39 = or i16 %38, %23
  %40 = or i16 %39, %25
  %41 = or i16 %40, %27
  %42 = or i16 %41, %28
  %43 = or i16 %42, %29
  %44 = or i16 %43, %30
  %45 = or i16 %44, %31
  %conv11 = zext i16 %45 to i32
  br label %if.end14

if.end14:                                         ; preds = %if.then9, %if.end.if.end14_crit_edge
  %storemerge = phi i32 [ %conv11, %if.then9 ], [ %call, %if.end.if.end14_crit_edge ]
  %46 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %storemerge, ptr %3, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %sleep_ok)
  %tobool15 = icmp ne i8 %sleep_ok, 0
  %call16 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %mbox, ptr noundef nonnull %cmd, i32 noundef 32, ptr noundef null, i1 noundef zeroext %tobool15, i32 noundef %timeout)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end14.cleanup_crit_edge, label %do.end

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end:                                           ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %47 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %pdev_dev, align 16
  %sub = sub i32 0, %call16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %48, ptr noundef nonnull @.str.90, i32 noundef %call, i32 noundef %sub) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %if.end14.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %do.end ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end14.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %cmd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_restart_aneg(ptr noundef %adap, i32 noundef %mbox, i32 noundef %port) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_port_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %fw_caps_support = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 35
  %0 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %fw_caps_support, align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %2 = getelementptr inbounds %struct.fw_port_cmd, ptr %c, i32 0, i32 1
  %3 = getelementptr inbounds %struct.fw_port_cmd, ptr %c, i32 0, i32 2
  %4 = getelementptr inbounds i8, ptr %c, i32 8
  %5 = call ptr @memset(ptr %4, i32 0, i32 24)
  %or = or i32 %port, 462422016
  %6 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or, ptr %c, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %1)
  %cmp = icmp eq i8 %1, 1
  %or3 = select i1 %cmp, i32 65538, i32 589826
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or3, ptr %2, align 4
  %. = select i1 %cmp, i32 256, i32 1048576
  %8 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %., ptr %3, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_slow_intr_handler(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 103436
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %3 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adapter, align 128
  %add.ptr.i152 = getelementptr i8, ptr %4, i32 103440
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i152) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %6 = and i32 %5, %2
  %7 = tail call i32 @llvm.bswap.i32(i32 %6)
  %and2 = and i32 %7, 234864849
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2)
  %tobool.not = icmp eq i32 %and2, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %and3 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %if.end.if.end6_crit_edge, label %if.then5

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then5:                                         ; preds = %if.end
  %8 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %9, i32 12472
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %tobool.not.i = icmp sgt i32 %11, -1
  br i1 %tobool.not.i, label %if.then5.if.end.i_crit_edge, label %if.then.i

if.then5.if.end.i_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i:                                        ; preds = %if.then5
  %12 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %13, i32 12472
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %tobool.not.i.i = icmp sgt i32 %15, -1
  br i1 %tobool.not.i.i, label %if.then.i.if.end.i_crit_edge, label %do.end.i.i

if.then.i.if.end.i_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

do.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev.i.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %16 = ptrtoint ptr %pdev_dev.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev_dev.i.i, align 16
  %shr.i.i = lshr i32 %15, 24
  %and1.i.i = and i32 %shr.i.i, 7
  %arrayidx.i.i = getelementptr [8 x ptr], ptr @t4_report_fw_error.reason, i32 0, i32 %and1.i.i
  %18 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.i.i, align 4
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %17, ptr noundef nonnull @.str.240, ptr noundef %19) #17
  %flags.i.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 8
  %20 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i.i, align 32
  %and2.i.i = and i32 %21, -17
  store i32 %and2.i.i, ptr %flags.i.i, align 32
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i.i, %if.then.i.if.end.i_crit_edge, %if.then5.if.end.i_crit_edge
  %22 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %adapter, align 128
  %add.ptr.i24.i = getelementptr i8, ptr %23, i32 31532
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i24.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %25 = and i32 %24, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool3.not.i = icmp eq i32 %25, 0
  %26 = and i32 %11, -2030043136
  call void @__sanitizer_cov_trace_const_cmp4(i32 -2147483648, i32 %26)
  %.not.i = icmp eq i32 %26, -2147483648
  %or.cond.i = select i1 %tobool3.not.i, i1 true, i1 %.not.i
  br i1 %or.cond.i, label %if.end.i.if.end10.i_crit_edge, label %if.then8.i

if.end.i.if.end10.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %27 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adapter, align 128
  %add.ptr.i25.i = getelementptr i8, ptr %28, i32 31532
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i25.i, i32 67108864) #14, !srcloc !995
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.end.i.if.end10.i_crit_edge
  %call11.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 31532, ptr noundef nonnull @cim_intr_handler.cim_intr_info) #14
  %call12.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 31540, ptr noundef nonnull @cim_intr_handler.cim_upintr_info) #14
  %add.i = sub i32 0, %call12.i
  call void @__sanitizer_cov_trace_cmp4(i32 %call11.i, i32 %add.i)
  %tobool13.not.i = icmp eq i32 %call11.i, %add.i
  br i1 %tobool13.not.i, label %if.end10.i.if.end6_crit_edge, label %if.then14.i

if.end10.i.if.end6_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end6

if.then14.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end6

if.end6:                                          ; preds = %if.then14.i, %if.end10.i.if.end6_crit_edge, %if.end.if.end6_crit_edge
  %and7 = and i32 %7, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end6.if.end10_crit_edge, label %if.then9

if.end6.if.end10_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then9:                                         ; preds = %if.end6
  %call.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 69748, ptr noundef nonnull @mps_intr_handler.mps_rx_intr_info) #14
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %29 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %chip.i, align 8
  %31 = and i32 %30, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %31)
  %cmp.i.not.i = icmp eq i32 %31, 96
  %cond.i = select i1 %cmp.i.not.i, ptr @mps_intr_handler.t6_mps_tx_intr_info, ptr @mps_intr_handler.mps_tx_intr_info
  %call2.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 37896, ptr noundef nonnull %cond.i) #14
  %add.i153 = add i32 %call2.i, %call.i
  %call3.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 39004, ptr noundef nonnull @mps_intr_handler.mps_trc_intr_info) #14
  %add4.i = add i32 %add.i153, %call3.i
  %call5.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 38420, ptr noundef nonnull @mps_intr_handler.mps_stat_sram_intr_info) #14
  %add6.i = add i32 %add4.i, %call5.i
  %call7.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 38432, ptr noundef nonnull @mps_intr_handler.mps_stat_tx_intr_info) #14
  %add8.i = add i32 %add6.i, %call7.i
  %call9.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 38444, ptr noundef nonnull @mps_intr_handler.mps_stat_rx_intr_info) #14
  %add10.i = add i32 %add8.i, %call9.i
  %call11.i154 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 53288, ptr noundef nonnull @mps_intr_handler.mps_cls_intr_info) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %32 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i155 = getelementptr i8, ptr %33, i32 36872
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i155, i32 0) #14, !srcloc !995
  %34 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %adapter, align 128
  %add.ptr.i25.i156 = getelementptr i8, ptr %35, i32 36872
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i25.i156) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %add12.i = sub i32 0, %call11.i154
  call void @__sanitizer_cov_trace_cmp4(i32 %add10.i, i32 %add12.i)
  %tobool14.not.i = icmp eq i32 %add10.i, %add12.i
  br i1 %tobool14.not.i, label %if.then9.if.end10_crit_edge, label %if.then.i157

if.then9.if.end10_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.then.i157:                                     ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end10

if.end10:                                         ; preds = %if.then.i157, %if.then9.if.end10_crit_edge, %if.end6.if.end10_crit_edge
  %and11 = and i32 %7, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.end10.if.end14_crit_edge, label %if.then13

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then13:                                        ; preds = %if.end10
  %call.i159 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 106712, ptr noundef nonnull @ncsi_intr_handler.ncsi_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i159)
  %tobool.not.i160 = icmp eq i32 %call.i159, 0
  br i1 %tobool.not.i160, label %if.then13.if.end14_crit_edge, label %if.then.i161

if.then13.if.end14_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then.i161:                                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end14

if.end14:                                         ; preds = %if.then.i161, %if.then13.if.end14_crit_edge, %if.end10.if.end14_crit_edge
  %and15 = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.end14.if.end18_crit_edge, label %if.then17

if.end14.if.end18_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.then17:                                        ; preds = %if.end14
  %call.i163 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 103472, ptr noundef nonnull @pl_intr_handler.pl_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i163)
  %tobool.not.i164 = icmp eq i32 %call.i163, 0
  br i1 %tobool.not.i164, label %if.then17.if.end18_crit_edge, label %if.then.i165

if.then17.if.end18_crit_edge:                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end18

if.then.i165:                                     ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end18

if.end18:                                         ; preds = %if.then.i165, %if.then17.if.end18_crit_edge, %if.end14.if.end18_crit_edge
  %and19 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  br i1 %tobool20.not, label %if.end18.if.end22_crit_edge, label %if.then21

if.end18.if.end22_crit_edge:                      ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then21:                                        ; preds = %if.end18
  %call.i167 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 102544, ptr noundef nonnull @smb_intr_handler.smb_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i167)
  %tobool.not.i168 = icmp eq i32 %call.i167, 0
  br i1 %tobool.not.i168, label %if.then21.if.end22_crit_edge, label %if.then.i169

if.then21.if.end22_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then.i169:                                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end22

if.end22:                                         ; preds = %if.then.i169, %if.then21.if.end22_crit_edge, %if.end18.if.end22_crit_edge
  %and23 = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %if.end22.if.end26_crit_edge, label %if.then25

if.end22.if.end26_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then25:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @xgmac_intr_handler(ptr noundef %adapter, i32 noundef 0)
  br label %if.end26

if.end26:                                         ; preds = %if.then25, %if.end22.if.end26_crit_edge
  %and27 = and i32 %7, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and27)
  %tobool28.not = icmp eq i32 %and27, 0
  br i1 %tobool28.not, label %if.end26.if.end30_crit_edge, label %if.then29

if.end26.if.end30_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then29:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @xgmac_intr_handler(ptr noundef %adapter, i32 noundef 1)
  br label %if.end30

if.end30:                                         ; preds = %if.then29, %if.end26.if.end30_crit_edge
  %and31 = and i32 %7, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %if.end30.if.end34_crit_edge, label %if.then33

if.end30.if.end34_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end34

if.then33:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @xgmac_intr_handler(ptr noundef %adapter, i32 noundef 2)
  br label %if.end34

if.end34:                                         ; preds = %if.then33, %if.end30.if.end34_crit_edge
  %and35 = and i32 %7, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and35)
  %tobool36.not = icmp eq i32 %and35, 0
  br i1 %tobool36.not, label %if.end34.if.end38_crit_edge, label %if.then37

if.end34.if.end38_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then37:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @xgmac_intr_handler(ptr noundef %adapter, i32 noundef 3)
  br label %if.end38

if.end38:                                         ; preds = %if.then37, %if.end34.if.end38_crit_edge
  %and39 = and i32 %7, 16384
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39)
  %tobool40.not = icmp eq i32 %and39, 0
  br i1 %tobool40.not, label %if.end38.if.end42_crit_edge, label %if.then41

if.end38.if.end42_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42

if.then41:                                        ; preds = %if.end38
  %chip.i171 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %37 = ptrtoint ptr %chip.i171 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %chip.i171, align 8
  %39 = and i32 %38, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %39)
  %cmp.i.not.i172 = icmp eq i32 %39, 64
  br i1 %cmp.i.not.i172, label %if.then.i177, label %if.else.i

if.then.i177:                                     ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 22792, ptr noundef nonnull @pcie_intr_handler.sysbus_intr_info) #14
  %call2.i173 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 22948, ptr noundef nonnull @pcie_intr_handler.pcie_port_intr_info) #14
  %add.i174 = add i32 %call2.i173, %call1.i
  %call3.i175 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 12292, ptr noundef nonnull @pcie_intr_handler.pcie_intr_info) #14
  %add4.i176 = add i32 %add.i174, %call3.i175
  br label %if.end.i179

if.else.i:                                        ; preds = %if.then41
  call void @__sanitizer_cov_trace_pc() #16
  %call5.i178 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 12292, ptr noundef nonnull @pcie_intr_handler.t5_pcie_intr_info) #14
  br label %if.end.i179

if.end.i179:                                      ; preds = %if.else.i, %if.then.i177
  %fat.0.i = phi i32 [ %add4.i176, %if.then.i177 ], [ %call5.i178, %if.else.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %fat.0.i)
  %tobool6.not.i = icmp eq i32 %fat.0.i, 0
  br i1 %tobool6.not.i, label %if.end.i179.if.end42_crit_edge, label %if.then7.i

if.end.i179.if.end42_crit_edge:                   ; preds = %if.end.i179
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42

if.then7.i:                                       ; preds = %if.end.i179
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end42

if.end42:                                         ; preds = %if.then7.i, %if.end.i179.if.end42_crit_edge, %if.end38.if.end42_crit_edge
  %and43 = and i32 %7, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool44.not = icmp eq i32 %and43, 0
  br i1 %tobool44.not, label %if.end42.if.end46_crit_edge, label %if.then45

if.end42.if.end46_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @mem_intr_handler(ptr noundef %adapter, i32 noundef 2)
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end42.if.end46_crit_edge
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %40 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %chip, align 8
  %42 = and i32 %41, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 80, i32 %42)
  %cmp.i = icmp ne i32 %42, 80
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %tobool50.not = icmp sgt i32 %7, -1
  %or.cond = select i1 %cmp.i, i1 true, i1 %tobool50.not
  br i1 %or.cond, label %if.end46.if.end52_crit_edge, label %if.then51

if.end46.if.end52_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end52

if.then51:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @mem_intr_handler(ptr noundef %adapter, i32 noundef 3)
  br label %if.end52

if.end52:                                         ; preds = %if.then51, %if.end46.if.end52_crit_edge
  %and53 = and i32 %7, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and53)
  %tobool54.not = icmp eq i32 %and53, 0
  br i1 %tobool54.not, label %if.end52.if.end56_crit_edge, label %if.then55

if.end52.if.end56_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end56

if.then55:                                        ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @mem_intr_handler(ptr noundef %adapter, i32 noundef 0)
  br label %if.end56

if.end56:                                         ; preds = %if.then55, %if.end52.if.end56_crit_edge
  %and57 = and i32 %7, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp eq i32 %and57, 0
  br i1 %tobool58.not, label %if.end56.if.end60_crit_edge, label %if.then59

if.end56.if.end60_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end60

if.then59:                                        ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #16
  tail call fastcc void @mem_intr_handler(ptr noundef %adapter, i32 noundef 1)
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %if.end56.if.end60_crit_edge
  %and61 = and i32 %7, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %if.end60.if.end64_crit_edge, label %if.then63

if.end60.if.end64_crit_edge:                      ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

if.then63:                                        ; preds = %if.end60
  %43 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %chip, align 8
  %45 = and i32 %44, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %45)
  %cmp.i180 = icmp ult i32 %45, 96
  %cond.i181 = select i1 %cmp.i180, ptr @le_intr_handler.le_intr_info, ptr @le_intr_handler.t6_le_intr_info
  %call.i182 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 105532, ptr noundef nonnull %cond.i181) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i182)
  %tobool.not.i183 = icmp eq i32 %call.i182, 0
  br i1 %tobool.not.i183, label %if.then63.if.end64_crit_edge, label %if.then.i184

if.then63.if.end64_crit_edge:                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end64

if.then.i184:                                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end64

if.end64:                                         ; preds = %if.then.i184, %if.then63.if.end64_crit_edge, %if.end60.if.end64_crit_edge
  %and65 = and i32 %7, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %if.end64.if.end68_crit_edge, label %if.then67

if.end64.if.end68_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end68

if.then67:                                        ; preds = %if.end64
  %call.i186 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 32372, ptr noundef nonnull @tp_intr_handler.tp_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i186)
  %tobool.not.i187 = icmp eq i32 %call.i186, 0
  br i1 %tobool.not.i187, label %if.then67.if.end68_crit_edge, label %if.then.i188

if.then67.if.end68_crit_edge:                     ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end68

if.then.i188:                                     ; preds = %if.then67
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end68

if.end68:                                         ; preds = %if.then.i188, %if.then67.if.end68_crit_edge, %if.end64.if.end68_crit_edge
  %and69 = and i32 %7, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and69)
  %tobool70.not = icmp eq i32 %and69, 0
  br i1 %tobool70.not, label %if.end68.if.end72_crit_edge, label %if.then71

if.end68.if.end72_crit_edge:                      ; preds = %if.end68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end72

if.then71:                                        ; preds = %if.end68
  %46 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i190 = getelementptr i8, ptr %47, i32 30688
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i190) #14, !srcloc !992
  %49 = tail call i32 @llvm.bswap.i32(i32 %48) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and.i = and i32 %49, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i191 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i191, label %if.then71.if.end10.i194_crit_edge, label %do.end.i

if.then71.if.end10.i194_crit_edge:                ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i194

do.end.i:                                         ; preds = %if.then71
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %50 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %pdev_dev.i, align 16
  %52 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %adapter, align 128
  %add.ptr.i35.i = getelementptr i8, ptr %53, i32 30708
  %54 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i35.i) #14, !srcloc !992
  %55 = tail call i32 @llvm.bswap.i32(i32 %54) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %51, ptr noundef nonnull @.str.411, i32 noundef %55) #17
  %56 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %chip, align 8
  %58 = and i32 %57, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 80, i32 %58)
  %cmp.i.not.i193 = icmp eq i32 %58, 80
  br i1 %cmp.i.not.i193, label %do.end7.i, label %do.end.i.if.end10.i194_crit_edge

do.end.i.if.end10.i194_crit_edge:                 ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10.i194

do.end7.i:                                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %59 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %pdev_dev.i, align 16
  %61 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %adapter, align 128
  %add.ptr.i36.i = getelementptr i8, ptr %62, i32 30724
  %63 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i36.i) #14, !srcloc !992
  %64 = tail call i32 @llvm.bswap.i32(i32 %63) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %60, ptr noundef nonnull @.str.411, i32 noundef %64) #17
  br label %if.end10.i194

if.end10.i194:                                    ; preds = %do.end7.i, %do.end.i.if.end10.i194_crit_edge, %if.then71.if.end10.i194_crit_edge
  %and11.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11.i)
  %tobool12.not.i = icmp eq i32 %and11.i, 0
  br i1 %tobool12.not.i, label %if.end10.i194.ma_intr_handler.exit_crit_edge, label %if.then13.i

if.end10.i194.ma_intr_handler.exit_crit_edge:     ; preds = %if.end10.i194
  call void @__sanitizer_cov_trace_pc() #16
  br label %ma_intr_handler.exit

if.then13.i:                                      ; preds = %if.end10.i194
  call void @__sanitizer_cov_trace_pc() #16
  %65 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %adapter, align 128
  %add.ptr.i37.i = getelementptr i8, ptr %66, i32 30692
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i37.i) #14, !srcloc !992
  %68 = tail call i32 @llvm.bswap.i32(i32 %67) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %pdev_dev18.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %69 = ptrtoint ptr %pdev_dev18.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %pdev_dev18.i, align 16
  %and19.i = and i32 %68, 15
  %shr20.i = and i32 %68, -16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %70, ptr noundef nonnull @.str.416, i32 noundef %and19.i, i32 noundef %shr20.i) #17
  br label %ma_intr_handler.exit

ma_intr_handler.exit:                             ; preds = %if.then13.i, %if.end10.i194.ma_intr_handler.exit_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %71 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %adapter, align 128
  %add.ptr.i38.i = getelementptr i8, ptr %72, i32 30688
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i38.i, i32 %48) #14, !srcloc !995
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end72

if.end72:                                         ; preds = %ma_intr_handler.exit, %if.end68.if.end72_crit_edge
  %and73 = and i32 %7, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %if.end72.if.end76_crit_edge, label %if.then75

if.end72.if.end76_crit_edge:                      ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end76

if.then75:                                        ; preds = %if.end72
  %call.i195 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 36860, ptr noundef nonnull @pmtx_intr_handler.pmtx_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i195)
  %tobool.not.i196 = icmp eq i32 %call.i195, 0
  br i1 %tobool.not.i196, label %if.then75.if.end76_crit_edge, label %if.then.i197

if.then75.if.end76_crit_edge:                     ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end76

if.then.i197:                                     ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end76

if.end76:                                         ; preds = %if.then.i197, %if.then75.if.end76_crit_edge, %if.end72.if.end76_crit_edge
  %and77 = and i32 %7, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.end76.if.end80_crit_edge, label %if.then79

if.end76.if.end80_crit_edge:                      ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end80

if.then79:                                        ; preds = %if.end76
  %call.i199 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 36828, ptr noundef nonnull @pmrx_intr_handler.pmrx_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i199)
  %tobool.not.i200 = icmp eq i32 %call.i199, 0
  br i1 %tobool.not.i200, label %if.then79.if.end80_crit_edge, label %if.then.i201

if.then79.if.end80_crit_edge:                     ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end80

if.then.i201:                                     ; preds = %if.then79
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end80

if.end80:                                         ; preds = %if.then.i201, %if.then79.if.end80_crit_edge, %if.end76.if.end80_crit_edge
  %and81 = and i32 %7, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and81)
  %tobool82.not = icmp eq i32 %and81, 0
  br i1 %tobool82.not, label %if.end80.if.end84_crit_edge, label %if.then83

if.end80.if.end84_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

if.then83:                                        ; preds = %if.end80
  %call.i203 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 102744, ptr noundef nonnull @ulprx_intr_handler.ulprx_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i203)
  %tobool.not.i204 = icmp eq i32 %call.i203, 0
  br i1 %tobool.not.i204, label %if.then83.if.end84_crit_edge, label %if.then.i205

if.then83.if.end84_crit_edge:                     ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

if.then.i205:                                     ; preds = %if.then83
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end84

if.end84:                                         ; preds = %if.then.i205, %if.then83.if.end84_crit_edge, %if.end80.if.end84_crit_edge
  %and85 = and i32 %7, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and85)
  %tobool86.not = icmp eq i32 %and85, 0
  br i1 %tobool86.not, label %if.end84.if.end88_crit_edge, label %if.then87

if.end84.if.end88_crit_edge:                      ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end88

if.then87:                                        ; preds = %if.end84
  %call.i207 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 102484, ptr noundef nonnull @cplsw_intr_handler.cplsw_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i207)
  %tobool.not.i208 = icmp eq i32 %call.i207, 0
  br i1 %tobool.not.i208, label %if.then87.if.end88_crit_edge, label %if.then.i209

if.then87.if.end88_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end88

if.then.i209:                                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end88

if.end88:                                         ; preds = %if.then.i209, %if.then87.if.end88_crit_edge, %if.end84.if.end88_crit_edge
  %and89 = and i32 %7, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %if.end88.if.end92_crit_edge, label %if.then91

if.end88.if.end92_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92

if.then91:                                        ; preds = %if.end88
  %73 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i211 = getelementptr i8, ptr %74, i32 4132
  %75 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i211) #14, !srcloc !992
  %76 = tail call i32 @llvm.bswap.i32(i32 %75) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool.not.i212 = icmp eq i32 %75, 0
  br i1 %tobool.not.i212, label %if.then91.if.end.i215_crit_edge, label %if.then.i214

if.then91.if.end.i215_crit_edge:                  ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i215

if.then.i214:                                     ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev.i213 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %77 = ptrtoint ptr %pdev_dev.i213 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %pdev_dev.i213, align 16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %78, ptr noundef nonnull @.str.453, i32 noundef %76) #17
  br label %if.end.i215

if.end.i215:                                      ; preds = %if.then.i214, %if.then91.if.end.i215_crit_edge
  %79 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %adapter, align 128
  %add.ptr.i85.i = getelementptr i8, ptr %80, i32 4144
  %81 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i85.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool2.not.i = icmp eq i32 %81, 0
  br i1 %tobool2.not.i, label %if.end.i215.if.end9.i_crit_edge, label %if.then3.i

if.end.i215.if.end9.i_crit_edge:                  ; preds = %if.end.i215
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9.i

if.then3.i:                                       ; preds = %if.end.i215
  call void @__sanitizer_cov_trace_pc() #16
  %82 = tail call i32 @llvm.bswap.i32(i32 %81) #14
  %or4.i = or i32 %82, %76
  %pdev_dev8.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %83 = ptrtoint ptr %pdev_dev8.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %pdev_dev8.i, align 16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %84, ptr noundef nonnull @.str.456, i32 noundef %82) #17
  br label %if.end9.i

if.end9.i:                                        ; preds = %if.then3.i, %if.end.i215.if.end9.i_crit_edge
  %v.1.i = phi i32 [ %or4.i, %if.then3.i ], [ %76, %if.end.i215.if.end9.i_crit_edge ]
  %85 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %chip, align 8
  %87 = and i32 %86, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %87)
  %cmp.i217 = icmp ugt i32 %87, 64
  br i1 %cmp.i217, label %if.then10.i, label %if.end9.i.if.end21.i_crit_edge

if.end9.i.if.end21.i_crit_edge:                   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21.i

if.then10.i:                                      ; preds = %if.end9.i
  %88 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %adapter, align 128
  %add.ptr.i86.i = getelementptr i8, ptr %89, i32 4364
  %90 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i86.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %91 = and i32 %90, -129
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %91)
  %tobool13.not.i218 = icmp eq i32 %91, 0
  br i1 %tobool13.not.i218, label %if.then10.i.if.end21.i_crit_edge, label %if.then14.i219

if.then10.i.if.end21.i_crit_edge:                 ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end21.i

if.then14.i219:                                   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #16
  %92 = tail call i32 @llvm.bswap.i32(i32 %91) #14
  %or15.i = or i32 %92, %v.1.i
  %pdev_dev19.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %93 = ptrtoint ptr %pdev_dev19.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %pdev_dev19.i, align 16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %94, ptr noundef nonnull @.str.459, i32 noundef %92) #17
  br label %if.end21.i

if.end21.i:                                       ; preds = %if.then14.i219, %if.then10.i.if.end21.i_crit_edge, %if.end9.i.if.end21.i_crit_edge
  %v.2.i = phi i32 [ %or15.i, %if.then14.i219 ], [ %v.1.i, %if.then10.i.if.end21.i_crit_edge ], [ %v.1.i, %if.end9.i.if.end21.i_crit_edge ]
  %call22.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 4156, ptr noundef nonnull @sge_intr_handler.sge_intr_info) #14
  %or23.i = or i32 %call22.i, %v.2.i
  %95 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %chip, align 8
  %97 = and i32 %96, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %97)
  %cmp28.i = icmp ult i32 %97, 96
  br i1 %cmp28.i, label %if.then29.i, label %if.end21.i.if.end32.i_crit_edge

if.end21.i.if.end32.i_crit_edge:                  ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32.i

if.then29.i:                                      ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #16
  %call30.i = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 4156, ptr noundef nonnull @sge_intr_handler.t4t5_sge_intr_info) #14
  %or31.i = or i32 %call30.i, %or23.i
  br label %if.end32.i

if.end32.i:                                       ; preds = %if.then29.i, %if.end21.i.if.end32.i_crit_edge
  %v.3.i = phi i32 [ %or31.i, %if.then29.i ], [ %or23.i, %if.end21.i.if.end32.i_crit_edge ]
  %98 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %adapter, align 128
  %add.ptr.i87.i = getelementptr i8, ptr %99, i32 4352
  %100 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i87.i) #14, !srcloc !992
  %101 = tail call i32 @llvm.bswap.i32(i32 %100) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and34.i = and i32 %101, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34.i)
  %tobool35.not.i = icmp eq i32 %and34.i, 0
  br i1 %tobool35.not.i, label %if.end32.i.if.end51.i_crit_edge, label %do.end39.i

if.end32.i.if.end51.i_crit_edge:                  ; preds = %if.end32.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end51.i

do.end39.i:                                       ; preds = %if.end32.i
  %pdev_dev40.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %102 = ptrtoint ptr %pdev_dev40.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load ptr, ptr %pdev_dev40.i, align 16
  %and42.i = and i32 %101, 131071
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %103, ptr noundef nonnull @.str.462, i32 noundef %and42.i) #17
  %and43.i = and i32 %101, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43.i)
  %tobool44.not.i = icmp eq i32 %and43.i, 0
  br i1 %tobool44.not.i, label %do.end39.i.if.end50.i_crit_edge, label %do.end48.i

do.end39.i.if.end50.i_crit_edge:                  ; preds = %do.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end50.i

do.end48.i:                                       ; preds = %do.end39.i
  call void @__sanitizer_cov_trace_pc() #16
  %104 = ptrtoint ptr %pdev_dev40.i to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %pdev_dev40.i, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %105, ptr noundef nonnull @.str.465) #17
  br label %if.end50.i

if.end50.i:                                       ; preds = %do.end48.i, %do.end39.i.if.end50.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %106 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %adapter, align 128
  %add.ptr.i88.i = getelementptr i8, ptr %107, i32 4352
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i88.i, i32 1536) #14, !srcloc !995
  br label %if.end51.i

if.end51.i:                                       ; preds = %if.end50.i, %if.end32.i.if.end51.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %v.3.i)
  %cmp52.not.i = icmp eq i32 %v.3.i, 0
  br i1 %cmp52.not.i, label %if.end51.i.if.end92_crit_edge, label %if.then53.i

if.end51.i.if.end92_crit_edge:                    ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end92

if.then53.i:                                      ; preds = %if.end51.i
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end92

if.end92:                                         ; preds = %if.then53.i, %if.end51.i.if.end92_crit_edge, %if.end88.if.end92_crit_edge
  %and93 = and i32 %7, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and93)
  %tobool94.not = icmp eq i32 %and93, 0
  br i1 %tobool94.not, label %if.end92.if.end96_crit_edge, label %if.then95

if.end92.if.end96_crit_edge:                      ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end96

if.then95:                                        ; preds = %if.end92
  %call.i220 = tail call fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef 36300, ptr noundef nonnull @ulptx_intr_handler.ulptx_intr_info) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i220)
  %tobool.not.i221 = icmp eq i32 %call.i220, 0
  br i1 %tobool.not.i221, label %if.then95.if.end96_crit_edge, label %if.then.i222

if.then95.if.end96_crit_edge:                     ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end96

if.then.i222:                                     ; preds = %if.then95
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end96

if.end96:                                         ; preds = %if.then.i222, %if.then95.if.end96_crit_edge, %if.end92.if.end96_crit_edge
  %108 = and i32 %2, -775880947
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %109 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %adapter, align 128
  %add.ptr.i224 = getelementptr i8, ptr %110, i32 103436
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i224, i32 %108) #14, !srcloc !995
  %111 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %adapter, align 128
  %add.ptr.i225 = getelementptr i8, ptr %112, i32 103436
  %113 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i225) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %cleanup

cleanup:                                          ; preds = %if.end96, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 1, %if.end96 ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xgmac_intr_handler(ptr noundef %adap, i32 noundef %port) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  %mul = shl i32 %port, 13
  %add1 = add i32 %mul, 135388
  %mul2 = shl i32 %port, 14
  %add4 = add i32 %mul2, 198876
  %int_cause_reg.0 = select i1 %cmp.i.not, i32 %add1, i32 %add4
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 %int_cause_reg.0
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %6, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool6.not = icmp eq i32 %and, 0
  br i1 %tobool6.not, label %entry.cleanup_crit_edge, label %if.end8

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end8:                                          ; preds = %entry
  %and9 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %tobool10.not = icmp eq i32 %and9, 0
  br i1 %tobool10.not, label %if.end8.if.end12_crit_edge, label %do.end

if.end8.if.end12_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end12

do.end:                                           ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %7 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %8, ptr noundef nonnull @.str.318, i32 noundef %port) #17
  br label %if.end12

if.end12:                                         ; preds = %do.end, %if.end8.if.end12_crit_edge
  %and13 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end12.if.end20_crit_edge, label %do.end18

if.end12.if.end20_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end20

do.end18:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev19 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %9 = ptrtoint ptr %pdev_dev19 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev_dev19, align 16
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %10, ptr noundef nonnull @.str.321, i32 noundef %port) #17
  br label %if.end20

if.end20:                                         ; preds = %do.end18, %if.end12.if.end20_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %11 = shl nuw nsw i32 %and, 24
  %12 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adap, align 128
  %add.ptr.i38 = getelementptr i8, ptr %13, i32 %add1
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i38, i32 %11) #14, !srcloc !995
  tail call void @t4_fatal_err(ptr noundef %adap) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @mem_intr_handler(ptr noundef %adapter, i32 noundef %idx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %cmp = icmp slt i32 %idx, 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %mul = shl i32 %idx, 7
  %add = add i32 %mul, 31096
  %add2 = add i32 %mul, 31100
  br label %if.end9

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %cmp3 = icmp eq i32 %idx, 2
  br i1 %cmp3, label %if.then4, label %if.else.if.end9_crit_edge

if.else.if.end9_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end9

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  %. = select i1 %cmp.i.not, i32 29976, i32 267032
  %.70 = select i1 %cmp.i.not, i32 29980, i32 267036
  br label %if.end9

if.end9:                                          ; preds = %if.then4, %if.else.if.end9_crit_edge, %if.then
  %addr.0 = phi i32 [ %add, %if.then ], [ %., %if.then4 ], [ 299800, %if.else.if.end9_crit_edge ]
  %cnt_addr.0 = phi i32 [ %add2, %if.then ], [ %.70, %if.then4 ], [ 299804, %if.else.if.end9_crit_edge ]
  %3 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 %addr.0
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and11 = and i32 %6, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.end9.if.end14_crit_edge, label %do.end

if.end9.if.end14_crit_edge:                       ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

do.end:                                           ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %7 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pdev_dev, align 16
  %arrayidx = getelementptr [4 x [7 x i8]], ptr @mem_intr_handler.name, i32 0, i32 %idx
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %8, ptr noundef nonnull @.str.381, ptr noundef %arrayidx) #17
  br label %if.end14

if.end14:                                         ; preds = %do.end, %if.end9.if.end14_crit_edge
  %and15 = and i32 %6, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15)
  %tobool16.not = icmp eq i32 %and15, 0
  br i1 %tobool16.not, label %if.end14.if.end32_crit_edge, label %if.then17

if.end14.if.end32_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

if.then17:                                        ; preds = %if.end14
  %9 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adapter, align 128
  %add.ptr.i71 = getelementptr i8, ptr %10, i32 %cnt_addr.0
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i71) #14, !srcloc !992
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %13 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %chip.i, align 8
  %15 = and i32 %14, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %15)
  %cmp.i.not.i = icmp eq i32 %15, 64
  br i1 %cmp.i.not.i, label %do.end.i, label %if.end.i

do.end.i:                                         ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %16 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev_dev.i, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %17, ptr noundef nonnull @.str.391, ptr noundef nonnull @.str.392) #17
  br label %t4_edc_err_read.exit

if.end.i:                                         ; preds = %if.then17
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %idx)
  %switch.i = icmp ult i32 %idx, 2
  br i1 %switch.i, label %if.end7.i, label %do.end5.i

do.end5.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev6.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %18 = ptrtoint ptr %pdev_dev6.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pdev_dev6.i, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %19, ptr noundef nonnull @.str.394, ptr noundef nonnull @.str.392, i32 noundef %idx) #17
  br label %t4_edc_err_read.exit

if.end7.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul.i = shl nuw nsw i32 %idx, 11
  %add.i = add nuw nsw i32 %mul.i, 327812
  %add9.i = add nuw nsw i32 %mul.i, 327720
  %pdev_dev13.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %20 = ptrtoint ptr %pdev_dev13.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev_dev13.i, align 16
  %22 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %23, i32 %add.i
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %21, ptr noundef nonnull @.str.397, i32 noundef %idx, i32 noundef %add.i, i32 noundef %25) #17
  %26 = ptrtoint ptr %pdev_dev13.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev_dev13.i, align 16
  %28 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adapter, align 128
  %add.ptr.i1.i = getelementptr i8, ptr %29, i32 %add9.i
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i.i = getelementptr i8, ptr %add.ptr.i1.i, i32 4
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %32 = zext i32 %31 to i64
  %33 = zext i32 %30 to i64
  %34 = shl nuw i64 %33, 32
  %35 = or i64 %34, %32
  %36 = tail call i64 @llvm.bswap.i64(i64 %35) #14
  %add20.i = add nuw nsw i32 %mul.i, 327728
  %37 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %adapter, align 128
  %add.ptr.i2.i = getelementptr i8, ptr %38, i32 %add20.i
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i2.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i3.i = getelementptr i8, ptr %add.ptr.i2.i, i32 4
  %40 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i3.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %41 = zext i32 %40 to i64
  %42 = zext i32 %39 to i64
  %43 = shl nuw i64 %42, 32
  %44 = or i64 %43, %41
  %45 = tail call i64 @llvm.bswap.i64(i64 %44) #14
  %add22.i = add nuw nsw i32 %mul.i, 327736
  %46 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %adapter, align 128
  %add.ptr.i4.i = getelementptr i8, ptr %47, i32 %add22.i
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i4.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i5.i = getelementptr i8, ptr %add.ptr.i4.i, i32 4
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i5.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %50 = zext i32 %49 to i64
  %51 = zext i32 %48 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, %50
  %54 = tail call i64 @llvm.bswap.i64(i64 %53) #14
  %add24.i = add nuw nsw i32 %mul.i, 327744
  %55 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %adapter, align 128
  %add.ptr.i6.i = getelementptr i8, ptr %56, i32 %add24.i
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i6.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i7.i = getelementptr i8, ptr %add.ptr.i6.i, i32 4
  %58 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i7.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %59 = zext i32 %58 to i64
  %60 = zext i32 %57 to i64
  %61 = shl nuw i64 %60, 32
  %62 = or i64 %61, %59
  %63 = tail call i64 @llvm.bswap.i64(i64 %62) #14
  %add26.i = add nuw nsw i32 %mul.i, 327752
  %64 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %adapter, align 128
  %add.ptr.i8.i = getelementptr i8, ptr %65, i32 %add26.i
  %66 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i9.i = getelementptr i8, ptr %add.ptr.i8.i, i32 4
  %67 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i9.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %68 = zext i32 %67 to i64
  %69 = zext i32 %66 to i64
  %70 = shl nuw i64 %69, 32
  %71 = or i64 %70, %68
  %72 = tail call i64 @llvm.bswap.i64(i64 %71) #14
  %add28.i = add nuw nsw i32 %mul.i, 327760
  %73 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %adapter, align 128
  %add.ptr.i10.i = getelementptr i8, ptr %74, i32 %add28.i
  %75 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i10.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i11.i = getelementptr i8, ptr %add.ptr.i10.i, i32 4
  %76 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i11.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %77 = zext i32 %76 to i64
  %78 = zext i32 %75 to i64
  %79 = shl nuw i64 %78, 32
  %80 = or i64 %79, %77
  %81 = tail call i64 @llvm.bswap.i64(i64 %80) #14
  %add30.i = add nuw nsw i32 %mul.i, 327768
  %82 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %adapter, align 128
  %add.ptr.i12.i = getelementptr i8, ptr %83, i32 %add30.i
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i12.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i13.i = getelementptr i8, ptr %add.ptr.i12.i, i32 4
  %85 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i13.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %86 = zext i32 %85 to i64
  %87 = zext i32 %84 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, %86
  %90 = tail call i64 @llvm.bswap.i64(i64 %89) #14
  %add32.i = add nuw nsw i32 %mul.i, 327776
  %91 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %adapter, align 128
  %add.ptr.i14.i = getelementptr i8, ptr %92, i32 %add32.i
  %93 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i14.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i15.i = getelementptr i8, ptr %add.ptr.i14.i, i32 4
  %94 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i15.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %95 = zext i32 %94 to i64
  %96 = zext i32 %93 to i64
  %97 = shl nuw i64 %96, 32
  %98 = or i64 %97, %95
  %99 = tail call i64 @llvm.bswap.i64(i64 %98) #14
  %add34.i = add nuw nsw i32 %mul.i, 327784
  %100 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %adapter, align 128
  %add.ptr.i16.i = getelementptr i8, ptr %101, i32 %add34.i
  %102 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i16.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i17.i = getelementptr i8, ptr %add.ptr.i16.i, i32 4
  %103 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i17.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %104 = zext i32 %103 to i64
  %105 = zext i32 %102 to i64
  %106 = shl nuw i64 %105, 32
  %107 = or i64 %106, %104
  %108 = tail call i64 @llvm.bswap.i64(i64 %107) #14
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %27, ptr noundef nonnull @.str.400, i32 noundef %add9.i, i64 noundef %36, i64 noundef %45, i64 noundef %54, i64 noundef %63, i64 noundef %72, i64 noundef %81, i64 noundef %90, i64 noundef %99, i64 noundef %108) #17
  br label %t4_edc_err_read.exit

t4_edc_err_read.exit:                             ; preds = %if.end7.i, %do.end5.i, %do.end.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %109 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %adapter, align 128
  %add.ptr.i72 = getelementptr i8, ptr %110, i32 %cnt_addr.0
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i72, i32 65535) #14, !srcloc !995
  %call21 = tail call i32 @__printk_ratelimit(ptr noundef nonnull @.str.382) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %t4_edc_err_read.exit.if.end32_crit_edge, label %do.end26

t4_edc_err_read.exit.if.end32_crit_edge:          ; preds = %t4_edc_err_read.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end32

do.end26:                                         ; preds = %t4_edc_err_read.exit
  call void @__sanitizer_cov_trace_pc() #16
  %shr = lshr i32 %12, 16
  %pdev_dev27 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %111 = ptrtoint ptr %pdev_dev27 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %pdev_dev27, align 16
  %arrayidx28 = getelementptr [4 x [7 x i8]], ptr @mem_intr_handler.name, i32 0, i32 %idx
  call void @__sanitizer_cov_trace_const_cmp4(i32 131071, i32 %12)
  %cmp30 = icmp ugt i32 %12, 131071
  %cond = select i1 %cmp30, ptr @.str.386, ptr @.str.387
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %112, ptr noundef nonnull @.str.384, i32 noundef %shr, ptr noundef %arrayidx28, ptr noundef nonnull %cond) #17
  br label %if.end32

if.end32:                                         ; preds = %do.end26, %t4_edc_err_read.exit.if.end32_crit_edge, %if.end14.if.end32_crit_edge
  %and33 = and i32 %6, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33)
  %tobool34.not = icmp eq i32 %and33, 0
  br i1 %tobool34.not, label %if.end32.if.end42_crit_edge, label %do.end38

if.end32.if.end42_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end42

do.end38:                                         ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev39 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %113 = ptrtoint ptr %pdev_dev39 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %pdev_dev39, align 16
  %arrayidx40 = getelementptr [4 x [7 x i8]], ptr @mem_intr_handler.name, i32 0, i32 %idx
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %114, ptr noundef nonnull @.str.389, ptr noundef %arrayidx40) #17
  br label %if.end42

if.end42:                                         ; preds = %do.end38, %if.end32.if.end42_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %and = shl i32 %6, 24
  %115 = and i32 %and, 117440512
  %116 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %116)
  %117 = load ptr, ptr %adapter, align 128
  %add.ptr.i73 = getelementptr i8, ptr %117, i32 %addr.0
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i73, i32 %115) #14, !srcloc !995
  %and43 = and i32 %6, 5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43)
  %tobool44.not = icmp eq i32 %and43, 0
  br i1 %tobool44.not, label %if.end42.if.end46_crit_edge, label %if.then45

if.end42.if.end46_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end46

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #16
  tail call void @t4_fatal_err(ptr noundef %adapter) #14
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end42.if.end46_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_intr_enable(ptr nocapture noundef readonly %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 103424
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip, align 8
  %6 = and i32 %5, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %6)
  %cmp = icmp ult i32 %6, 96
  %cond.in.v = select i1 %cmp, i32 8, i32 9
  %cond.in = lshr i32 %3, %cond.in.v
  %val.0 = select i1 %cmp, i32 7337904, i32 7074992
  %cond = and i32 %cond.in, 7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %7 = tail call i32 @llvm.bswap.i32(i32 %val.0) #14
  %8 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adapter, align 128
  %add.ptr.i16 = getelementptr i8, ptr %9, i32 4160
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i16, i32 %7) #14, !srcloc !995
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %10 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adapter, align 128
  %add.ptr.i17 = getelementptr i8, ptr %11, i32 111556
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i17, i32 134217728) #14, !srcloc !995
  %shl = shl nuw nsw i32 1, %cond
  %12 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %13, i32 103444
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %or.i = or i32 %15, %shl
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %16 = tail call i32 @llvm.bswap.i32(i32 %or.i) #14
  %17 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %adapter, align 128
  %add.ptr.i6.i = getelementptr i8, ptr %18, i32 103444
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i, i32 %16) #14, !srcloc !995
  %19 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adapter, align 128
  %add.ptr.i7.i = getelementptr i8, ptr %20, i32 103444
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_intr_disable(ptr nocapture noundef readonly %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pdev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 3
  %0 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pdev, align 4
  %error_state.i = getelementptr inbounds %struct.pci_dev, ptr %1, i32 0, i32 43
  %2 = ptrtoint ptr %error_state.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %error_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp.i.not = icmp eq i32 %3, 1
  br i1 %cmp.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %5, i32 103424
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %7 = tail call i32 @llvm.bswap.i32(i32 %6) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %8 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %chip, align 8
  %10 = and i32 %9, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %10)
  %cmp = icmp ult i32 %10, 96
  %cond.in.v = select i1 %cmp, i32 8, i32 9
  %cond.in = lshr i32 %7, %cond.in.v
  %cond = and i32 %cond.in, 7
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %11 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adapter, align 128
  %add.ptr.i12 = getelementptr i8, ptr %12, i32 111556
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i12, i32 0) #14, !srcloc !995
  %shl = shl nuw nsw i32 1, %cond
  %13 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %14, i32 103444
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %neg.i = xor i32 %shl, -1
  %and.i = and i32 %16, %neg.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %17 = tail call i32 @llvm.bswap.i32(i32 %and.i) #14
  %18 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adapter, align 128
  %add.ptr.i6.i = getelementptr i8, ptr %19, i32 103444
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i, i32 %17) #14, !srcloc !995
  %20 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adapter, align 128
  %add.ptr.i7.i = getelementptr i8, ptr %21, i32 103444
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @t4_chip_rss_size(ptr nocapture noundef readonly %adap) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %2)
  %cmp = icmp ult i32 %2, 96
  %. = select i1 %cmp, i32 2048, i32 4096
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_config_rss_range(ptr noundef %adapter, i32 noundef %mbox, i32 noundef %viid, i32 noundef %start, i32 noundef %n, ptr noundef readonly %rspq, i32 noundef %nrspq) local_unnamed_addr #0 align 64 {
entry:
  %cmd = alloca %struct.fw_rss_ind_tbl_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i16, ptr %rspq, i32 %nrspq
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %cmd) #14
  %0 = getelementptr inbounds i8, ptr %cmd, i32 12
  %1 = call ptr @memset(ptr %0, i32 0, i32 52)
  %or = or i32 %viid, 547356672
  %2 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %cmd, align 4
  %retval_len16 = getelementptr inbounds %struct.fw_rss_ind_tbl_cmd, ptr %cmd, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16, align 4
  %iq0_to_iq2 = getelementptr inbounds %struct.fw_rss_ind_tbl_cmd, ptr %cmd, i32 0, i32 5
  %niqid = getelementptr inbounds %struct.fw_rss_ind_tbl_cmd, ptr %cmd, i32 0, i32 2
  %startidx = getelementptr inbounds %struct.fw_rss_ind_tbl_cmd, ptr %cmd, i32 0, i32 3
  br label %while.cond

while.cond:                                       ; preds = %while.end.while.cond_crit_edge, %entry
  %n.addr.0 = phi i32 [ %n, %entry ], [ %sub, %while.end.while.cond_crit_edge ]
  %start.addr.0 = phi i32 [ %start, %entry ], [ %add, %while.end.while.cond_crit_edge ]
  %rsp.0 = phi ptr [ %rspq, %entry ], [ %rsp.4, %while.end.while.cond_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0)
  %cmp = icmp sgt i32 %n.addr.0, 0
  br i1 %cmp, label %while.body, label %while.cond.cleanup33_crit_edge

while.cond.cleanup33_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup33

while.body:                                       ; preds = %while.cond
  %4 = tail call i32 @llvm.umin.i32(i32 %n.addr.0, i32 32)
  %conv = trunc i32 %4 to i16
  %5 = ptrtoint ptr %niqid to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %niqid, align 4
  %conv2 = trunc i32 %start.addr.0 to i16
  %6 = ptrtoint ptr %startidx to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv2, ptr %startidx, align 2
  %add = add i32 %start.addr.0, %4
  %sub = sub nsw i32 %n.addr.0, %4
  br label %while.body6

while.body6:                                      ; preds = %while.body6.while.body6_crit_edge, %while.body
  %qp.064 = phi ptr [ %incdec.ptr27, %while.body6.while.body6_crit_edge ], [ %iq0_to_iq2, %while.body ]
  %nq.063 = phi i32 [ %sub28, %while.body6.while.body6_crit_edge ], [ %4, %while.body ]
  %rsp.162 = phi ptr [ %rsp.4, %while.body6.while.body6_crit_edge ], [ %rsp.0, %while.body ]
  %7 = ptrtoint ptr %rsp.162 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %rsp.162, align 2
  %conv7 = zext i16 %8 to i32
  %shl8 = shl i32 %conv7, 20
  %incdec.ptr = getelementptr i16, ptr %rsp.162, i32 1
  %cmp9.not = icmp ult ptr %incdec.ptr, %add.ptr
  %spec.select = select i1 %cmp9.not, ptr %incdec.ptr, ptr %rspq
  %9 = ptrtoint ptr %spec.select to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %spec.select, align 2
  %conv11 = zext i16 %10 to i32
  %shl12 = shl nuw nsw i32 %conv11, 10
  %or13 = or i32 %shl12, %shl8
  %incdec.ptr14 = getelementptr i16, ptr %spec.select, i32 1
  %cmp15.not = icmp ult ptr %incdec.ptr14, %add.ptr
  %rsp.3 = select i1 %cmp15.not, ptr %incdec.ptr14, ptr %rspq
  %11 = ptrtoint ptr %rsp.3 to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %rsp.3, align 2
  %conv19 = zext i16 %12 to i32
  %or21 = or i32 %or13, %conv19
  %incdec.ptr22 = getelementptr i16, ptr %rsp.3, i32 1
  %cmp23.not = icmp ult ptr %incdec.ptr22, %add.ptr
  %rsp.4 = select i1 %cmp23.not, ptr %incdec.ptr22, ptr %rspq
  %incdec.ptr27 = getelementptr i32, ptr %qp.064, i32 1
  %13 = ptrtoint ptr %qp.064 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or21, ptr %qp.064, align 4
  %sub28 = add nsw i32 %nq.063, -3
  %cmp4 = icmp ugt i32 %nq.063, 3
  br i1 %cmp4, label %while.body6.while.body6_crit_edge, label %while.end

while.body6.while.body6_crit_edge:                ; preds = %while.body6
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body6

while.end:                                        ; preds = %while.body6
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %mbox, ptr noundef nonnull %cmd, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %while.end.while.cond_crit_edge, label %while.end.cleanup33_crit_edge

while.end.cleanup33_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup33

while.end.while.cond_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

cleanup33:                                        ; preds = %while.end.cleanup33_crit_edge, %while.cond.cleanup33_crit_edge
  %retval.2 = phi i32 [ %call.i.i, %while.end.cleanup33_crit_edge ], [ 0, %while.cond.cleanup33_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %cmd) #14
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_config_glbl_rss(ptr noundef %adapter, i32 noundef %mbox, i32 noundef %mode, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_rss_glb_config_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_rss_glb_config_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c, i32 8
  %2 = call ptr @memset(ptr %1, i32 0, i32 24)
  %3 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 580911104, ptr %c, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 2, ptr %0, align 4
  %5 = zext i32 %mode to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.498)
  switch i32 %mode, label %entry.cleanup_crit_edge [
    i32 0, label %entry.if.end8_crit_edge
    i32 1, label %if.then2
  ]

entry.if.end8_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end8

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %6 = getelementptr inbounds %struct.fw_rss_glb_config_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %7 = getelementptr inbounds %struct.fw_rss_glb_config_cmd, ptr %c, i32 0, i32 2
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 268435456, ptr %7, align 8
  %9 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %flags, ptr %6, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.then2, %entry.if.end8_crit_edge
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i, %if.end8 ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_config_vi_rss(ptr noundef %adapter, i32 noundef %mbox, i32 noundef %viid, i32 noundef %flags, i32 noundef %defq) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_rss_vi_config_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_rss_vi_config_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_rss_vi_config_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %c, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 24)
  %or = or i32 %viid, 597688320
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %c, align 8
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 2, ptr %0, align 4
  %shl1 = shl i32 %defq, 16
  %or2 = or i32 %shl1, %flags
  %defaultq_to_udpen = getelementptr inbounds %struct.fw_rss_vi_config_basicvirtual, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %defaultq_to_udpen to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or2, ptr %defaultq_to_udpen, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_rss(ptr nocapture noundef readonly %adapter, ptr nocapture noundef writeonly %map) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip.i, align 8
  %2 = and i32 %1, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %2)
  %cmp.i = icmp ult i32 %2, 96
  %div = select i1 %cmp.i, i32 1024, i32 2048
  br label %for.body

for.body:                                         ; preds = %if.end.for.body_crit_edge, %entry
  %i.019 = phi i32 [ 0, %entry ], [ %inc, %if.end.for.body_crit_edge ]
  %map.addr.018 = phi ptr [ %map, %entry ], [ %incdec.ptr5, %if.end.for.body_crit_edge ]
  %or.i = or i32 %i.019, -1048576
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %3 = tail call i32 @llvm.bswap.i32(i32 %or.i) #14
  %4 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %5, i32 32236
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %3) #14, !srcloc !995
  %6 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adapter, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %7, i32 32236
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %tobool29.i.not.i = icmp sgt i32 %9, -1
  br i1 %tobool29.i.not.i, label %if.end4.i.preheader.i, label %for.body.if.end_crit_edge

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.preheader.i:                            ; preds = %for.body
  %10 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %11, i32 32236
  %12 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %tobool.i.not.i = icmp sgt i32 %13, -1
  br i1 %tobool.i.not.i, label %if.end4.i.1.i, label %if.end4.i.preheader.i.if.end_crit_edge

if.end4.i.preheader.i.if.end_crit_edge:           ; preds = %if.end4.i.preheader.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.1.i:                                    ; preds = %if.end4.i.preheader.i
  %14 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.1.i = getelementptr i8, ptr %15, i32 32236
  %16 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.1.i) #14, !srcloc !992
  %17 = tail call i32 @llvm.bswap.i32(i32 %16) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %17)
  %tobool.i.not.1.i = icmp sgt i32 %17, -1
  br i1 %tobool.i.not.1.i, label %if.end4.i.2.i, label %if.end4.i.1.i.if.end_crit_edge

if.end4.i.1.i.if.end_crit_edge:                   ; preds = %if.end4.i.1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.2.i:                                    ; preds = %if.end4.i.1.i
  %18 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.2.i = getelementptr i8, ptr %19, i32 32236
  %20 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.2.i) #14, !srcloc !992
  %21 = tail call i32 @llvm.bswap.i32(i32 %20) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %21)
  %tobool.i.not.2.i = icmp sgt i32 %21, -1
  br i1 %tobool.i.not.2.i, label %if.end4.i.3.i, label %if.end4.i.2.i.if.end_crit_edge

if.end4.i.2.i.if.end_crit_edge:                   ; preds = %if.end4.i.2.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.3.i:                                    ; preds = %if.end4.i.2.i
  %22 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i.3.i = getelementptr i8, ptr %23, i32 32236
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.3.i) #14, !srcloc !992
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %25)
  %tobool.i.not.3.i = icmp sgt i32 %25, -1
  br i1 %tobool.i.not.3.i, label %if.end4.i.3.i.cleanup_crit_edge, label %if.end4.i.3.i.if.end_crit_edge

if.end4.i.3.i.if.end_crit_edge:                   ; preds = %if.end4.i.3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.3.i.cleanup_crit_edge:                  ; preds = %if.end4.i.3.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %if.end4.i.3.i.if.end_crit_edge, %if.end4.i.2.i.if.end_crit_edge, %if.end4.i.1.i.if.end_crit_edge, %if.end4.i.preheader.i.if.end_crit_edge, %for.body.if.end_crit_edge
  %.lcssa.i.i = phi i32 [ %9, %for.body.if.end_crit_edge ], [ %13, %if.end4.i.preheader.i.if.end_crit_edge ], [ %17, %if.end4.i.1.i.if.end_crit_edge ], [ %21, %if.end4.i.2.i.if.end_crit_edge ], [ %25, %if.end4.i.3.i.if.end_crit_edge ]
  %26 = trunc i32 %.lcssa.i.i to i16
  %conv = and i16 %26, 1023
  %incdec.ptr = getelementptr i16, ptr %map.addr.018, i32 1
  %27 = ptrtoint ptr %map.addr.018 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %conv, ptr %map.addr.018, align 2
  %shr2 = lshr i32 %.lcssa.i.i, 10
  %28 = trunc i32 %shr2 to i16
  %conv4 = and i16 %28, 1023
  %incdec.ptr5 = getelementptr i16, ptr %map.addr.018, i32 2
  %29 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %conv4, ptr %incdec.ptr, align 2
  %inc = add nuw nsw i32 %i.019, 1
  %exitcond.not = icmp eq i32 %inc, %div
  br i1 %exitcond.not, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %if.end4.i.3.i.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.cleanup_crit_edge ], [ -11, %if.end4.i.3.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_pio_read(ptr noundef %adap, ptr nocapture noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32320, i32 noundef 32324, ptr noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i32 noundef 1, i1 noundef zeroext %sleep_ok)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef %reg_addr, i32 noundef %reg_data, ptr nocapture noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i32 noundef %rw, i1 noundef zeroext %sleep_ok) unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %reg_addr to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.499)
  switch i32 %reg_addr, label %entry.if.then6_crit_edge [
    i32 32320, label %entry.sw.epilog_crit_edge
    i32 32280, label %sw.bb1
    i32 32336, label %sw.bb2
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

entry.if.then6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %entry.sw.epilog_crit_edge
  %cmd.0 = phi i32 [ 18, %sw.bb2 ], [ 17, %sw.bb1 ], [ 16, %entry.sw.epilog_crit_edge ]
  %flags.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 8
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 32
  %and.i = and i32 %2, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %sw.epilog.if.then6_crit_edge, label %t4_use_ldst.exit

sw.epilog.if.then6_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

t4_use_ldst.exit:                                 ; preds = %sw.epilog
  %use_bd.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 62
  %3 = ptrtoint ptr %use_bd.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %use_bd.i, align 128, !range !1001
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %4)
  %tobool.not = icmp eq i8 %4, 1
  br i1 %tobool.not, label %t4_use_ldst.exit.if.then6_crit_edge, label %if.then

t4_use_ldst.exit.if.then6_crit_edge:              ; preds = %t4_use_ldst.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then6

if.then:                                          ; preds = %t4_use_ldst.exit
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nregs)
  %cmp24.not.i = icmp eq i32 %nregs, 0
  br i1 %cmp24.not.i, label %if.then.t4_tp_fw_ldst_rw.exit.thread_crit_edge, label %for.body.lr.ph.i

if.then.t4_tp_fw_ldst_rw.exit.thread_crit_edge:   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_tp_fw_ldst_rw.exit.thread

for.body.lr.ph.i:                                 ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rw)
  %tobool.not.i25 = icmp eq i32 %rw, 0
  %or.i = select i1 %tobool.not.i25, i32 27262976, i32 29360128
  %or1.i = or i32 %cmd.0, %or.i
  %cycles_to_len16.i = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c.i, i32 0, i32 1
  %u.i = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c.i, i32 0, i32 2
  %val.i = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c.i, i32 0, i32 2, i32 0, i32 3
  %mbox.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %5 = getelementptr inbounds i8, ptr %c.i, i32 16
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %i.025.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %6 = call ptr @memset(ptr %5, i32 0, i32 48)
  %7 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or1.i, ptr %c.i, align 8
  %8 = ptrtoint ptr %cycles_to_len16.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 4, ptr %cycles_to_len16.i, align 4
  %add.i = add i32 %i.025.i, %start_index
  %9 = ptrtoint ptr %u.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %add.i, ptr %u.i, align 8
  br i1 %tobool.not.i25, label %cond.false.i, label %for.body.i.cond.end.i_crit_edge

for.body.i.cond.end.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end.i

cond.false.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx.i = getelementptr i32, ptr %buff, i32 %i.025.i
  %10 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx.i, align 4
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %for.body.i.cond.end.i_crit_edge
  %cond3.i = phi i32 [ %11, %cond.false.i ], [ 0, %for.body.i.cond.end.i_crit_edge ]
  %12 = ptrtoint ptr %val.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %cond3.i, ptr %val.i, align 4
  %13 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mbox.i, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %14, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool6.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool6.not.i, label %if.end.i, label %t4_tp_fw_ldst_rw.exit

if.end.i:                                         ; preds = %cond.end.i
  br i1 %tobool.not.i25, label %if.end.i.for.inc.i_crit_edge, label %if.then8.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc.i

if.then8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %val.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %val.i, align 4
  %arrayidx11.i = getelementptr i32, ptr %buff, i32 %i.025.i
  %17 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %arrayidx11.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then8.i, %if.end.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.025.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %nregs
  br i1 %exitcond.not.i, label %for.inc.i.t4_tp_fw_ldst_rw.exit.thread_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.inc.i.t4_tp_fw_ldst_rw.exit.thread_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_tp_fw_ldst_rw.exit.thread

t4_tp_fw_ldst_rw.exit.thread:                     ; preds = %for.inc.i.t4_tp_fw_ldst_rw.exit.thread_crit_edge, %if.then.t4_tp_fw_ldst_rw.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  br label %if.end10

t4_tp_fw_ldst_rw.exit:                            ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  br label %if.then6

if.then6:                                         ; preds = %t4_tp_fw_ldst_rw.exit, %t4_use_ldst.exit.if.then6_crit_edge, %sw.epilog.if.then6_crit_edge, %entry.if.then6_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rw)
  %tobool7.not = icmp eq i32 %rw, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nregs)
  %tobool.not3.i = icmp eq i32 %nregs, 0
  br i1 %tobool7.not, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.then6
  br i1 %tobool.not3.i, label %if.then8.if.end10_crit_edge, label %if.then8.while.body.i_crit_edge

if.then8.while.body.i_crit_edge:                  ; preds = %if.then8
  br label %while.body.i

if.then8.if.end10_crit_edge:                      ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then8.while.body.i_crit_edge
  %start_idx.addr.07.i = phi i32 [ %inc.i26, %while.body.i.while.body.i_crit_edge ], [ %start_index, %if.then8.while.body.i_crit_edge ]
  %nregs.addr.06.i = phi i32 [ %dec.i, %while.body.i.while.body.i_crit_edge ], [ %nregs, %if.then8.while.body.i_crit_edge ]
  %vals.addr.05.i = phi ptr [ %incdec.ptr.i, %while.body.i.while.body.i_crit_edge ], [ %buff, %if.then8.while.body.i_crit_edge ]
  %dec.i = add i32 %nregs.addr.06.i, -1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %18 = call i32 @llvm.bswap.i32(i32 %start_idx.addr.07.i) #14
  %19 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %20, i32 %reg_addr
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 %18) #14, !srcloc !995
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i3.i = getelementptr i8, ptr %22, i32 %reg_data
  %23 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3.i) #14, !srcloc !992
  %24 = call i32 @llvm.bswap.i32(i32 %23) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.i = getelementptr i32, ptr %vals.addr.05.i, i32 1
  %25 = ptrtoint ptr %vals.addr.05.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %vals.addr.05.i, align 4
  %inc.i26 = add i32 %start_idx.addr.07.i, 1
  %tobool.not.i27 = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i27, label %while.body.i.if.end10_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i

while.body.i.if.end10_crit_edge:                  ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.else:                                          ; preds = %if.then6
  br i1 %tobool.not3.i, label %if.else.if.end10_crit_edge, label %if.else.while.body.i33_crit_edge

if.else.while.body.i33_crit_edge:                 ; preds = %if.else
  br label %while.body.i33

if.else.if.end10_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

while.body.i33:                                   ; preds = %while.body.i33.while.body.i33_crit_edge, %if.else.while.body.i33_crit_edge
  %start_idx.addr.06.i = phi i32 [ %inc.i29, %while.body.i33.while.body.i33_crit_edge ], [ %start_index, %if.else.while.body.i33_crit_edge ]
  %nregs.addr.05.i = phi i32 [ %dec.i28, %while.body.i33.while.body.i33_crit_edge ], [ %nregs, %if.else.while.body.i33_crit_edge ]
  %vals.addr.04.i = phi ptr [ %incdec.ptr.i31, %while.body.i33.while.body.i33_crit_edge ], [ %buff, %if.else.while.body.i33_crit_edge ]
  %dec.i28 = add i32 %nregs.addr.05.i, -1
  %inc.i29 = add i32 %start_idx.addr.06.i, 1
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %26 = call i32 @llvm.bswap.i32(i32 %start_idx.addr.06.i) #14
  %27 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adap, align 128
  %add.ptr.i.i30 = getelementptr i8, ptr %28, i32 %reg_addr
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i30, i32 %26) #14, !srcloc !995
  %incdec.ptr.i31 = getelementptr i32, ptr %vals.addr.04.i, i32 1
  %29 = ptrtoint ptr %vals.addr.04.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %vals.addr.04.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %31 = call i32 @llvm.bswap.i32(i32 %30) #14
  %32 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adap, align 128
  %add.ptr.i2.i = getelementptr i8, ptr %33, i32 %reg_data
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i2.i, i32 %31) #14, !srcloc !995
  %tobool.not.i32 = icmp eq i32 %dec.i28, 0
  br i1 %tobool.not.i32, label %while.body.i33.if.end10_crit_edge, label %while.body.i33.while.body.i33_crit_edge

while.body.i33.while.body.i33_crit_edge:          ; preds = %while.body.i33
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body.i33

while.body.i33.if.end10_crit_edge:                ; preds = %while.body.i33
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end10

if.end10:                                         ; preds = %while.body.i33.if.end10_crit_edge, %if.else.if.end10_crit_edge, %while.body.i.if.end10_crit_edge, %if.then8.if.end10_crit_edge, %t4_tp_fw_ldst_rw.exit.thread
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_tm_pio_read(ptr noundef %adap, ptr nocapture noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32280, i32 noundef 32284, ptr noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i32 noundef 1, i1 noundef zeroext %sleep_ok)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_mib_read(ptr noundef %adap, ptr nocapture noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %buff, i32 noundef %nregs, i32 noundef %start_index, i32 noundef 1, i1 noundef zeroext %sleep_ok)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_rss_key(ptr noundef %adap, ptr nocapture noundef %key, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32320, i32 noundef 32324, ptr noundef %key, i32 noundef 10, i32 noundef 64, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_write_rss_key(ptr noundef %adap, ptr nocapture noundef %key, i32 noundef %idx, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 32256
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip, align 8
  %6 = and i32 %5, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 80, i32 %6)
  %cmp = icmp ugt i32 %6, 80
  %and1 = and i32 %3, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp ne i32 %and1, 0
  %or.cond = select i1 %cmp, i1 %tobool.not, i1 false
  %7 = and i32 %3, 192
  call void @__sanitizer_cov_trace_const_cmp4(i32 192, i32 %7)
  %cmp5 = icmp eq i32 %7, 192
  %or.cond33 = select i1 %or.cond, i1 %cmp5, i1 false
  %spec.select35 = select i1 %or.cond33, i32 32, i32 16
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32320, i32 noundef 32324, ptr noundef %key, i32 noundef 10, i32 noundef 64, i32 noundef 0, i1 noundef zeroext %sleep_ok) #14
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select35, i32 %idx)
  %8 = icmp ugt i32 %spec.select35, %idx
  br i1 %8, label %if.then11, label %entry.if.end22_crit_edge

entry.if.end22_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then11:                                        ; preds = %entry
  br i1 %or.cond33, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  %9 = shl i32 %idx, 26
  %shl = and i32 %9, -1073741824
  %shl17 = shl i32 %idx, 8
  %or = or i32 %shl17, %shl
  %or18 = or i32 %or, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %10 = tail call i32 @llvm.bswap.i32(i32 %or18) #14
  %11 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adap, align 128
  %add.ptr.i36 = getelementptr i8, ptr %12, i32 32256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i36, i32 %10) #14, !srcloc !995
  br label %if.end22

if.else:                                          ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #16
  %or20 = or i32 %idx, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = tail call i32 @llvm.bswap.i32(i32 %or20) #14
  %14 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adap, align 128
  %add.ptr.i37 = getelementptr i8, ptr %15, i32 32256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i37, i32 %13) #14, !srcloc !995
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then15, %entry.if.end22_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_rss_pf_config(ptr noundef %adapter, i32 noundef %index, ptr nocapture noundef %valp, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %index, 48
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adapter, i32 noundef 32320, i32 noundef 32324, ptr noundef %valp, i32 noundef 1, i32 noundef %add, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_rss_vf_config(ptr noundef %adapter, i32 noundef %index, ptr nocapture noundef %vfl, ptr nocapture noundef %vfh, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %2)
  %cmp = icmp ult i32 %2, 96
  %. = select i1 %cmp, i32 -50364209, i32 -50396977
  %data.0 = shl i32 %index, 8
  %3 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 32256
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and2 = and i32 %6, %.
  %or3 = or i32 %data.0, %and2
  %or4 = or i32 %or3, 16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %7 = tail call i32 @llvm.bswap.i32(i32 %or4) #14
  %8 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adapter, align 128
  %add.ptr.i14 = getelementptr i8, ptr %9, i32 32256
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14, i32 %7) #14, !srcloc !995
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adapter, i32 noundef 32320, i32 noundef 32324, ptr noundef %vfl, i32 noundef 1, i32 noundef 58, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adapter, i32 noundef 32320, i32 noundef 32324, ptr noundef %vfh, i32 noundef 1, i32 noundef 59, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_rss_pf_map(ptr noundef %adapter, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %pfmap = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pfmap) #14
  %0 = ptrtoint ptr %pfmap to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pfmap, align 4, !annotation !996
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adapter, i32 noundef 32320, i32 noundef 32324, ptr noundef nonnull %pfmap, i32 noundef 1, i32 noundef 56, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %1 = ptrtoint ptr %pfmap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pfmap, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pfmap) #14
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_rss_pf_mask(ptr noundef %adapter, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %pfmask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pfmask) #14
  %0 = ptrtoint ptr %pfmask to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pfmask, align 4, !annotation !996
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adapter, i32 noundef 32320, i32 noundef 32324, ptr noundef nonnull %pfmask, i32 noundef 1, i32 noundef 57, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %1 = ptrtoint ptr %pfmask to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pfmask, align 4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pfmask) #14
  ret i32 %2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_get_tcp_stats(ptr noundef %adap, ptr noundef writeonly %v4, ptr noundef writeonly %v6, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca [10 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %val) #14
  %0 = call ptr @memset(ptr %val, i32 255, i32 40)
  %tobool.not = icmp eq ptr %v4, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef nonnull %val, i32 noundef 10, i32 noundef 12, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %1 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %val, align 4
  %3 = ptrtoint ptr %v4 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %2, ptr %v4, align 8
  %arrayidx2 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 4
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2, align 4
  %conv = zext i32 %5 to i64
  %shl = shl nuw i64 %conv, 32
  %arrayidx3 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 5
  %6 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %arrayidx3, align 4
  %conv4 = zext i32 %7 to i64
  %or = or i64 %shl, %conv4
  %tcp_in_segs = getelementptr inbounds %struct.tp_tcp_stats, ptr %v4, i32 0, i32 1
  %8 = ptrtoint ptr %tcp_in_segs to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %or, ptr %tcp_in_segs, align 8
  %arrayidx5 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 6
  %9 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx5, align 4
  %conv6 = zext i32 %10 to i64
  %shl7 = shl nuw i64 %conv6, 32
  %arrayidx8 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 7
  %11 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx8, align 4
  %conv9 = zext i32 %12 to i64
  %or10 = or i64 %shl7, %conv9
  %tcp_out_segs = getelementptr inbounds %struct.tp_tcp_stats, ptr %v4, i32 0, i32 2
  %13 = ptrtoint ptr %tcp_out_segs to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %or10, ptr %tcp_out_segs, align 8
  %arrayidx11 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 8
  %14 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx11, align 4
  %conv12 = zext i32 %15 to i64
  %shl13 = shl nuw i64 %conv12, 32
  %arrayidx14 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 9
  %16 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx14, align 4
  %conv15 = zext i32 %17 to i64
  %or16 = or i64 %shl13, %conv15
  %tcp_retrans_segs = getelementptr inbounds %struct.tp_tcp_stats, ptr %v4, i32 0, i32 3
  %18 = ptrtoint ptr %tcp_retrans_segs to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %or16, ptr %tcp_retrans_segs, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %tobool17.not = icmp eq ptr %v6, null
  br i1 %tobool17.not, label %if.end.if.end44_crit_edge, label %if.then18

if.end.if.end44_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

if.then18:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef nonnull %val, i32 noundef 10, i32 noundef 44, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %19 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %val, align 4
  %21 = ptrtoint ptr %v6 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %v6, align 8
  %arrayidx23 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 4
  %22 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx23, align 4
  %conv24 = zext i32 %23 to i64
  %shl25 = shl nuw i64 %conv24, 32
  %arrayidx26 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 5
  %24 = ptrtoint ptr %arrayidx26 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx26, align 4
  %conv27 = zext i32 %25 to i64
  %or28 = or i64 %shl25, %conv27
  %tcp_in_segs29 = getelementptr inbounds %struct.tp_tcp_stats, ptr %v6, i32 0, i32 1
  %26 = ptrtoint ptr %tcp_in_segs29 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %or28, ptr %tcp_in_segs29, align 8
  %arrayidx30 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 6
  %27 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx30, align 4
  %conv31 = zext i32 %28 to i64
  %shl32 = shl nuw i64 %conv31, 32
  %arrayidx33 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 7
  %29 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx33, align 4
  %conv34 = zext i32 %30 to i64
  %or35 = or i64 %shl32, %conv34
  %tcp_out_segs36 = getelementptr inbounds %struct.tp_tcp_stats, ptr %v6, i32 0, i32 2
  %31 = ptrtoint ptr %tcp_out_segs36 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %or35, ptr %tcp_out_segs36, align 8
  %arrayidx37 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 8
  %32 = ptrtoint ptr %arrayidx37 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %arrayidx37, align 4
  %conv38 = zext i32 %33 to i64
  %shl39 = shl nuw i64 %conv38, 32
  %arrayidx40 = getelementptr inbounds [10 x i32], ptr %val, i32 0, i32 9
  %34 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx40, align 4
  %conv41 = zext i32 %35 to i64
  %or42 = or i64 %shl39, %conv41
  %tcp_retrans_segs43 = getelementptr inbounds %struct.tp_tcp_stats, ptr %v6, i32 0, i32 3
  %36 = ptrtoint ptr %tcp_retrans_segs43 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %or42, ptr %tcp_retrans_segs43, align 8
  br label %if.end44

if.end44:                                         ; preds = %if.then18, %if.end.if.end44_crit_edge
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_get_err_stats(ptr noundef %adap, ptr nocapture noundef %st, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %arch = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23
  %0 = ptrtoint ptr %arch to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arch, align 4
  %conv = zext i8 %1 to i32
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %st, i32 noundef %conv, i32 noundef 0, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %hdr_in_errs = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 1
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %hdr_in_errs, i32 noundef %conv, i32 noundef 4, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %tcp_in_errs = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 2
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %tcp_in_errs, i32 noundef %conv, i32 noundef 8, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %tnl_cong_drops = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 3
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %tnl_cong_drops, i32 noundef %conv, i32 noundef 24, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %ofld_chan_drops = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 4
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %ofld_chan_drops, i32 noundef %conv, i32 noundef 28, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %tnl_tx_drops = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 5
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %tnl_tx_drops, i32 noundef %conv, i32 noundef 68, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %ofld_vlan_drops = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 6
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %ofld_vlan_drops, i32 noundef %conv, i32 noundef 88, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %tcp6_in_errs = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 7
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %tcp6_in_errs, i32 noundef %conv, i32 noundef 40, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %ofld_no_neigh = getelementptr inbounds %struct.tp_err_stats, ptr %st, i32 0, i32 8
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %ofld_no_neigh, i32 noundef 2, i32 noundef 54, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_get_cpl_stats(ptr noundef %adap, ptr nocapture noundef %st, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %arch = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23
  %0 = ptrtoint ptr %arch to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %arch, align 4
  %conv = zext i8 %1 to i32
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %st, i32 noundef %conv, i32 noundef 56, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %rsp = getelementptr inbounds %struct.tp_cpl_stats, ptr %st, i32 0, i32 1
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %rsp, i32 noundef %conv, i32 noundef 60, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_get_rdma_stats(ptr noundef %adap, ptr nocapture noundef %st, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %st, i32 noundef 2, i32 noundef 100, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_fcoe_stats(ptr noundef %adap, i32 noundef %idx, ptr nocapture noundef %st, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %val) #14
  %0 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %val, align 4, !annotation !996
  %1 = getelementptr inbounds [2 x i32], ptr %val, i32 0, i32 1
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %1, align 4, !annotation !996
  %add = add i32 %idx, 72
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %st, i32 noundef 1, i32 noundef %add, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %frames_drop = getelementptr inbounds %struct.tp_fcoe_stats, ptr %st, i32 0, i32 1
  %add1 = add i32 %idx, 76
  tail call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef %frames_drop, i32 noundef 1, i32 noundef %add1, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %mul = shl i32 %idx, 1
  %add3 = add i32 %mul, 80
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef nonnull %val, i32 noundef 2, i32 noundef %add3, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %3 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %val, align 4
  %conv = zext i32 %4 to i64
  %shl = shl nuw i64 %conv, 32
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %1, align 4
  %conv6 = zext i32 %6 to i64
  %or = or i64 %shl, %conv6
  %octets_ddp = getelementptr inbounds %struct.tp_fcoe_stats, ptr %st, i32 0, i32 2
  %7 = ptrtoint ptr %octets_ddp to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 %or, ptr %octets_ddp, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_usm_stats(ptr noundef %adap, ptr nocapture noundef writeonly %st, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %val = alloca [4 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %val) #14
  %0 = getelementptr inbounds [4 x i32], ptr %val, i32 0, i32 1
  %1 = getelementptr inbounds [4 x i32], ptr %val, i32 0, i32 2
  %2 = getelementptr inbounds [4 x i32], ptr %val, i32 0, i32 3
  %3 = call ptr @memset(ptr %val, i32 255, i32 16)
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32336, i32 noundef 32340, ptr noundef nonnull %val, i32 noundef 4, i32 noundef 92, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %4 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %val, align 4
  %6 = ptrtoint ptr %st to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %st, align 8
  %7 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %0, align 4
  %drops = getelementptr inbounds %struct.tp_usm_stats, ptr %st, i32 0, i32 1
  %9 = ptrtoint ptr %drops to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %drops, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %1, align 4
  %conv = zext i32 %11 to i64
  %shl = shl nuw i64 %conv, 32
  %12 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %2, align 4
  %conv4 = zext i32 %13 to i64
  %or = or i64 %shl, %conv4
  %octets = getelementptr inbounds %struct.tp_usm_stats, ptr %st, i32 0, i32 2
  %14 = ptrtoint ptr %octets to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %or, ptr %octets, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %val) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_mtu_tbl(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %mtus, ptr noundef writeonly %mtu_log) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %mtu_log, null
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry
  %i.013 = phi i32 [ 0, %entry ], [ %inc, %for.inc.for.body_crit_edge ]
  %or = or i32 %i.013, -16777216
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 32228
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i12 = getelementptr i8, ptr %4, i32 32228
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i12) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %7 = trunc i32 %6 to i16
  %conv = and i16 %7, 16383
  %arrayidx = getelementptr i16, ptr %mtus, i32 %i.013
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv, ptr %arrayidx, align 2
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %shr1 = lshr i32 %6, 16
  %9 = trunc i32 %shr1 to i8
  %conv3 = and i8 %9, 15
  %arrayidx4 = getelementptr i8, ptr %mtu_log, i32 %i.013
  %10 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 %conv3, ptr %arrayidx4, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.013, 1
  %exitcond.not = icmp eq i32 %inc, 16
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_cong_tbl(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %incr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.inc8.for.cond1.preheader_crit_edge, %entry
  %mtu.020 = phi i32 [ 0, %entry ], [ %inc9, %for.inc8.for.cond1.preheader_crit_edge ]
  %shl = shl i32 %mtu.020, 5
  br label %for.body3

for.body3:                                        ; preds = %for.body3.for.body3_crit_edge, %for.cond1.preheader
  %w.019 = phi i32 [ 0, %for.cond1.preheader ], [ %inc, %for.body3.for.body3_crit_edge ]
  %or = or i32 %shl, %w.019
  %or4 = or i32 %or, -65536
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %or4) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 32220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i18 = getelementptr i8, ptr %4, i32 32220
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %7 = trunc i32 %6 to i16
  %conv6 = and i16 %7, 8191
  %arrayidx7 = getelementptr [32 x i16], ptr %incr, i32 %mtu.020, i32 %w.019
  %8 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %conv6, ptr %arrayidx7, align 2
  %inc = add nuw nsw i32 %w.019, 1
  %exitcond.not = icmp eq i32 %inc, 32
  br i1 %exitcond.not, label %for.inc8, label %for.body3.for.body3_crit_edge

for.body3.for.body3_crit_edge:                    ; preds = %for.body3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body3

for.inc8:                                         ; preds = %for.body3
  %inc9 = add nuw nsw i32 %mtu.020, 1
  %exitcond21.not = icmp eq i32 %inc9, 16
  br i1 %exitcond21.not, label %for.end10, label %for.inc8.for.cond1.preheader_crit_edge

for.inc8.for.cond1.preheader_crit_edge:           ; preds = %for.inc8
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond1.preheader

for.end10:                                        ; preds = %for.inc8
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_wr_bits_indirect(ptr nocapture noundef readonly %adap, i32 noundef %addr, i32 noundef %mask, i32 noundef %val) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %addr) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 32320
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i4 = getelementptr i8, ptr %4, i32 32324
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i4) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %neg = xor i32 %mask, -1
  %and = and i32 %6, %neg
  %or = or i32 %and, %val
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %7 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i5 = getelementptr i8, ptr %9, i32 32324
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i5, i32 %7) #14, !srcloc !995
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_load_mtus(ptr nocapture noundef readonly %adap, ptr nocapture noundef readonly %mtus, ptr nocapture noundef readonly %alpha, ptr nocapture noundef readonly %beta) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  br label %for.body

for.body:                                         ; preds = %for.end.for.body_crit_edge, %entry
  %i.045 = phi i32 [ 0, %entry ], [ %inc24, %for.end.for.body_crit_edge ]
  %arrayidx = getelementptr i16, ptr %mtus, i32 %i.045
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %arrayidx, align 2
  %conv = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %tobool.not.i = icmp eq i16 %1, 0
  %2 = tail call i32 @llvm.ctlz.i32(i32 %conv, i1 true) #14, !range !1002
  %sub.i = sub nuw nsw i32 32, %2
  %cond.i = select i1 %tobool.not.i, i32 0, i32 %sub.i
  %shl = shl nuw i32 1, %cond.i
  %3 = lshr i32 %shl, 2
  %and = and i32 %3, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %dec = sext i1 %tobool.not to i32
  %spec.select = add nsw i32 %cond.i, %dec
  %shl1 = shl nuw nsw i32 %i.045, 24
  %shl2 = shl nsw i32 %spec.select, 16
  %or = or i32 %shl1, %conv
  %or4 = or i32 %or, %shl2
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = tail call i32 @llvm.bswap.i32(i32 %or4) #14
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %6, i32 32228
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %4) #14, !srcloc !995
  %sub = add nsw i32 %conv, -40
  %shl14 = shl i32 %i.045, 21
  br label %for.body8

for.body8:                                        ; preds = %for.body8.for.body8_crit_edge, %for.body
  %w.044 = phi i32 [ 0, %for.body ], [ %inc22, %for.body8.for.body8_crit_edge ]
  %arrayidx9 = getelementptr i16, ptr %alpha, i32 %w.044
  %7 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %arrayidx9, align 2
  %conv10 = zext i16 %8 to i32
  %mul = mul i32 %sub, %conv10
  %arrayidx11 = getelementptr [32 x i32], ptr @t4_load_mtus.avg_pkts, i32 0, i32 %w.044
  %9 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx11, align 4
  %div = udiv i32 %mul, %10
  %11 = tail call i32 @llvm.umax.i32(i32 %div, i32 2)
  %shl15 = shl nuw nsw i32 %w.044, 16
  %or16 = or i32 %shl15, %shl14
  %arrayidx17 = getelementptr i16, ptr %beta, i32 %w.044
  %12 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load2_noabort(i32 %12)
  %13 = load i16, ptr %arrayidx17, align 2
  %conv18 = zext i16 %13 to i32
  %shl19 = shl nuw nsw i32 %conv18, 13
  %or20 = or i32 %or16, %11
  %or21 = or i32 %or20, %shl19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %14 = tail call i32 @llvm.bswap.i32(i32 %or21) #14
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i43 = getelementptr i8, ptr %16, i32 32220
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i43, i32 %14) #14, !srcloc !995
  %inc22 = add nuw nsw i32 %w.044, 1
  %exitcond.not = icmp eq i32 %inc22, 32
  br i1 %exitcond.not, label %for.end, label %for.body8.for.body8_crit_edge

for.body8.for.body8_crit_edge:                    ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body8

for.end:                                          ; preds = %for.body8
  %inc24 = add nuw nsw i32 %i.045, 1
  %exitcond46.not = icmp eq i32 %inc24, 16
  br i1 %exitcond46.not, label %for.end25, label %for.end.for.body_crit_edge

for.end.for.body_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end25:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_chan_txrate(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %nic_rate, ptr nocapture noundef writeonly %ofld_rate) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 32464
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %3, 255
  %vpd.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 2
  %4 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vpd.i, align 8
  %mul.i = mul i32 %5, %and
  %conv.i = zext i32 %mul.i to i64
  %mul1.i = mul nuw nsw i64 %conv.i, 62
  %div3.i = lshr i64 %conv.i, 1
  %add.i = add nuw nsw i64 %mul1.i, %div3.i
  %6 = ptrtoint ptr %nic_rate to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %add.i, ptr %nic_rate, align 8
  %shr2 = lshr i32 %3, 8
  %and3 = and i32 %shr2, 255
  %7 = load i32, ptr %vpd.i, align 8
  %mul.i65 = mul i32 %7, %and3
  %conv.i66 = zext i32 %mul.i65 to i64
  %mul1.i67 = mul nuw nsw i64 %conv.i66, 62
  %div3.i68 = lshr i64 %conv.i66, 1
  %add.i69 = add nuw nsw i64 %mul1.i67, %div3.i68
  %arrayidx5 = getelementptr i64, ptr %nic_rate, i32 1
  %8 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %add.i69, ptr %arrayidx5, align 8
  %arch = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23
  %9 = ptrtoint ptr %arch to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %10)
  %cmp = icmp eq i8 %10, 4
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %shr7 = lshr i32 %3, 16
  %and8 = and i32 %shr7, 255
  %11 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %vpd.i, align 8
  %mul.i71 = mul i32 %12, %and8
  %conv.i72 = zext i32 %mul.i71 to i64
  %mul1.i73 = mul nuw nsw i64 %conv.i72, 62
  %div3.i74 = lshr i64 %conv.i72, 1
  %add.i75 = add nuw nsw i64 %mul1.i73, %div3.i74
  %arrayidx10 = getelementptr i64, ptr %nic_rate, i32 2
  %13 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %add.i75, ptr %arrayidx10, align 8
  %shr11 = lshr i32 %3, 24
  %14 = load i32, ptr %vpd.i, align 8
  %mul.i77 = mul i32 %14, %shr11
  %conv.i78 = zext i32 %mul.i77 to i64
  %mul1.i79 = mul nuw nsw i64 %conv.i78, 62
  %div3.i80 = lshr i64 %conv.i78, 1
  %add.i81 = add nuw nsw i64 %mul1.i79, %div3.i80
  %arrayidx14 = getelementptr i64, ptr %nic_rate, i32 3
  %15 = ptrtoint ptr %arrayidx14 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %add.i81, ptr %arrayidx14, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %16 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %adap, align 128
  %add.ptr.i82 = getelementptr i8, ptr %17, i32 32444
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i82) #14, !srcloc !992
  %19 = tail call i32 @llvm.bswap.i32(i32 %18) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and17 = and i32 %19, 255
  %20 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %vpd.i, align 8
  %mul.i84 = mul i32 %21, %and17
  %conv.i85 = zext i32 %mul.i84 to i64
  %mul1.i86 = mul nuw nsw i64 %conv.i85, 62
  %div3.i87 = lshr i64 %conv.i85, 1
  %add.i88 = add nuw nsw i64 %mul1.i86, %div3.i87
  %22 = ptrtoint ptr %ofld_rate to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %add.i88, ptr %ofld_rate, align 8
  %shr20 = lshr i32 %19, 8
  %and21 = and i32 %shr20, 255
  %23 = load i32, ptr %vpd.i, align 8
  %mul.i90 = mul i32 %23, %and21
  %conv.i91 = zext i32 %mul.i90 to i64
  %mul1.i92 = mul nuw nsw i64 %conv.i91, 62
  %div3.i93 = lshr i64 %conv.i91, 1
  %add.i94 = add nuw nsw i64 %mul1.i92, %div3.i93
  %arrayidx23 = getelementptr i64, ptr %ofld_rate, i32 1
  %24 = ptrtoint ptr %arrayidx23 to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %add.i94, ptr %arrayidx23, align 8
  %25 = ptrtoint ptr %arch to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %arch, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 4, i8 %26)
  %cmp28 = icmp eq i8 %26, 4
  br i1 %cmp28, label %if.then30, label %if.end.if.end39_crit_edge

if.end.if.end39_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end39

if.then30:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %shr31 = lshr i32 %19, 16
  %and32 = and i32 %shr31, 255
  %27 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %vpd.i, align 8
  %mul.i96 = mul i32 %28, %and32
  %conv.i97 = zext i32 %mul.i96 to i64
  %mul1.i98 = mul nuw nsw i64 %conv.i97, 62
  %div3.i99 = lshr i64 %conv.i97, 1
  %add.i100 = add nuw nsw i64 %mul1.i98, %div3.i99
  %arrayidx34 = getelementptr i64, ptr %ofld_rate, i32 2
  %29 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %add.i100, ptr %arrayidx34, align 8
  %shr35 = lshr i32 %19, 24
  %30 = load i32, ptr %vpd.i, align 8
  %mul.i102 = mul i32 %30, %shr35
  %conv.i103 = zext i32 %mul.i102 to i64
  %mul1.i104 = mul nuw nsw i64 %conv.i103, 62
  %div3.i105 = lshr i64 %conv.i103, 1
  %add.i106 = add nuw nsw i64 %mul1.i104, %div3.i105
  %arrayidx38 = getelementptr i64, ptr %ofld_rate, i32 3
  %31 = ptrtoint ptr %arrayidx38 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 %add.i106, ptr %arrayidx38, align 8
  br label %if.end39

if.end39:                                         ; preds = %if.then30, %if.end.if.end39_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_trace_filter(ptr nocapture noundef readonly %adap, ptr nocapture noundef readonly %tp, i32 noundef %idx, i32 noundef %enable) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %idx, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %enable)
  %tobool.not = icmp eq i32 %enable, 0
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %add = add i32 %mul, 38928
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 %add
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #14, !srcloc !995
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adap, align 128
  %add.ptr.i122 = getelementptr i8, ptr %3, i32 38912
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i122) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %5 = and i32 %4, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool1.not = icmp eq i32 %5, 0
  %snap_len6 = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 2
  %6 = ptrtoint ptr %snap_len6 to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %snap_len6, align 4
  br i1 %tobool1.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 2544, i16 %7)
  %cmp = icmp ugt i16 %7, 2544
  br i1 %cmp, label %if.then2.cleanup_crit_edge, label %if.then2.if.end13_crit_edge

if.then2.if.end13_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp2(i16 9601, i16 %7)
  %cmp8 = icmp ult i16 %7, 9601
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %idx)
  %tobool10.not = icmp eq i32 %idx, 0
  %or.cond = and i1 %tobool10.not, %cmp8
  br i1 %or.cond, label %if.else.if.end13_crit_edge, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.else.if.end13_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.end13:                                         ; preds = %if.else.if.end13_crit_edge, %if.then2.if.end13_crit_edge
  %port = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 7
  %8 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %port, align 1
  %conv14 = zext i8 %9 to i32
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %10 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %chip, align 8
  %12 = and i32 %11, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %12)
  %cmp.i.not = icmp eq i32 %12, 64
  %cond = select i1 %cmp.i.not, i32 11, i32 19
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv14)
  %cmp17 = icmp ult i32 %cond, %conv14
  br i1 %cmp17, label %if.end13.cleanup_crit_edge, label %lor.lhs.false19

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false19:                                  ; preds = %if.end13
  %invert = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 6
  %13 = ptrtoint ptr %invert to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %invert, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %14)
  %cmp21 = icmp ugt i8 %14, 1
  br i1 %cmp21, label %lor.lhs.false19.cleanup_crit_edge, label %lor.lhs.false23

lor.lhs.false19.cleanup_crit_edge:                ; preds = %lor.lhs.false19
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %skip_len = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 5
  %15 = ptrtoint ptr %skip_len to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %skip_len, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 31, i8 %16)
  %cmp25 = icmp ugt i8 %16, 31
  br i1 %cmp25, label %lor.lhs.false23.cleanup_crit_edge, label %lor.lhs.false27

lor.lhs.false23.cleanup_crit_edge:                ; preds = %lor.lhs.false23
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false27:                                  ; preds = %lor.lhs.false23
  %skip_ofst = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 4
  %17 = ptrtoint ptr %skip_ofst to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %skip_ofst, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 31, i8 %18)
  %cmp29 = icmp ugt i8 %18, 31
  br i1 %cmp29, label %lor.lhs.false27.cleanup_crit_edge, label %lor.lhs.false31

lor.lhs.false27.cleanup_crit_edge:                ; preds = %lor.lhs.false27
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

lor.lhs.false31:                                  ; preds = %lor.lhs.false27
  %min_len = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 3
  %19 = ptrtoint ptr %min_len to i32
  call void @__asan_load2_noabort(i32 %19)
  %20 = load i16, ptr %min_len, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 511, i16 %20)
  %cmp33 = icmp ugt i16 %20, 511
  br i1 %cmp33, label %lor.lhs.false31.cleanup_crit_edge, label %if.end36

lor.lhs.false31.cleanup_crit_edge:                ; preds = %lor.lhs.false31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end36:                                         ; preds = %lor.lhs.false31
  %add37 = add i32 %mul, 38928
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i123 = getelementptr i8, ptr %22, i32 %add37
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i123, i32 0) #14, !srcloc !995
  %mul38 = shl i32 %idx, 8
  %add39 = add i32 %mul38, 39936
  %add40 = add i32 %mul38, 40064
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end36
  %mask_reg.0132 = phi i32 [ %add40, %if.end36 ], [ %add45, %for.body.for.body_crit_edge ]
  %data_reg.0131 = phi i32 [ %add39, %if.end36 ], [ %add44, %for.body.for.body_crit_edge ]
  %i.0130 = phi i32 [ 0, %if.end36 ], [ %inc, %for.body.for.body_crit_edge ]
  %arrayidx = getelementptr [28 x i32], ptr %tp, i32 0, i32 %i.0130
  %23 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #14
  %26 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %adap, align 128
  %add.ptr.i124 = getelementptr i8, ptr %27, i32 %data_reg.0131
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i124, i32 %25) #14, !srcloc !995
  %arrayidx43 = getelementptr %struct.trace_params, ptr %tp, i32 0, i32 1, i32 %i.0130
  %28 = ptrtoint ptr %arrayidx43 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx43, align 4
  %neg = xor i32 %29, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %30 = tail call i32 @llvm.bswap.i32(i32 %neg) #14
  %31 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %adap, align 128
  %add.ptr.i125 = getelementptr i8, ptr %32, i32 %mask_reg.0132
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i125, i32 %30) #14, !srcloc !995
  %inc = add nuw nsw i32 %i.0130, 1
  %add44 = add nuw nsw i32 %data_reg.0131, 4
  %add45 = add nuw nsw i32 %mask_reg.0132, 4
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add46 = add i32 %mul, 38944
  %snap_len47 = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 2
  %33 = ptrtoint ptr %snap_len47 to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %snap_len47, align 4
  %conv48 = zext i16 %34 to i32
  %35 = ptrtoint ptr %min_len to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %min_len, align 2
  %conv50 = zext i16 %36 to i32
  %shl51 = shl nuw i32 %conv50, 16
  %or = or i32 %shl51, %conv48
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %37 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %38 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %adap, align 128
  %add.ptr.i126 = getelementptr i8, ptr %39, i32 %add46
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i126, i32 %37) #14, !srcloc !995
  %40 = ptrtoint ptr %skip_ofst to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %skip_ofst, align 4
  %conv54 = zext i8 %41 to i32
  %42 = ptrtoint ptr %skip_len to i32
  call void @__asan_load1_noabort(i32 %42)
  %43 = load i8, ptr %skip_len, align 1
  %conv57 = zext i8 %43 to i32
  %shl58 = shl nuw nsw i32 %conv57, 8
  %or59 = or i32 %shl58, %conv54
  %44 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %chip, align 8
  %46 = and i32 %45, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %46)
  %cmp.i127.not = icmp eq i32 %46, 64
  %47 = ptrtoint ptr %port to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %port, align 1
  %conv65 = zext i8 %48 to i32
  %shl66 = shl nuw nsw i32 %conv65, 18
  %49 = ptrtoint ptr %invert to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %invert, align 2
  %conv69 = zext i8 %50 to i32
  %. = select i1 %cmp.i127.not, i32 24, i32 25
  %.134 = select i1 %cmp.i127.not, i32 4194304, i32 8388608
  %shl78 = shl i32 %conv69, %.
  %or75 = or i32 %shl66, %shl78
  %or79 = or i32 %or75, %.134
  %or81 = or i32 %or59, %or79
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %51 = tail call i32 @llvm.bswap.i32(i32 %or81) #14
  %52 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %adap, align 128
  %add.ptr.i129 = getelementptr i8, ptr %53, i32 %add37
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i129, i32 %51) #14, !srcloc !995
  br label %cleanup

cleanup:                                          ; preds = %for.end, %lor.lhs.false31.cleanup_crit_edge, %lor.lhs.false27.cleanup_crit_edge, %lor.lhs.false23.cleanup_crit_edge, %lor.lhs.false19.cleanup_crit_edge, %if.end13.cleanup_crit_edge, %if.else.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ 0, %for.end ], [ 0, %if.then ], [ -22, %if.then2.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -22, %lor.lhs.false31.cleanup_crit_edge ], [ -22, %lor.lhs.false27.cleanup_crit_edge ], [ -22, %lor.lhs.false23.cleanup_crit_edge ], [ -22, %lor.lhs.false19.cleanup_crit_edge ], [ -22, %if.end13.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_trace_filter(ptr nocapture noundef readonly %adap, ptr nocapture noundef %tp, i32 noundef %idx, ptr nocapture noundef writeonly %enabled) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %mul = shl i32 %idx, 2
  %add = add i32 %mul, 38928
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 %add
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %add1 = add i32 %mul, 38944
  %4 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adap, align 128
  %add.ptr.i89 = getelementptr i8, ptr %5, i32 %add1
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i89) #14, !srcloc !992
  %7 = tail call i32 @llvm.bswap.i32(i32 %6) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %8 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %chip, align 8
  %10 = and i32 %9, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %10)
  %cmp.i.not = icmp eq i32 %10, 64
  %. = select i1 %cmp.i.not, i32 22, i32 23
  %.99 = select i1 %cmp.i.not, i8 15, i8 31
  %.100 = select i1 %cmp.i.not, i32 24, i32 25
  %and14 = lshr i32 %3, %.
  %and14.lobit = and i32 %and14, 1
  %11 = ptrtoint ptr %enabled to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and14.lobit, ptr %enabled, align 4
  %shr20 = lshr i32 %3, 18
  %12 = trunc i32 %shr20 to i8
  %conv22 = and i8 %.99, %12
  %and24 = lshr i32 %3, %.100
  %.sink.in = trunc i32 %and24 to i8
  %.sink = and i8 %.sink.in, 1
  %13 = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 7
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %conv22, ptr %13, align 1
  %15 = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 6
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_store1_noabort(i32 %16)
  store i8 %.sink, ptr %15, align 2
  %17 = trunc i32 %7 to i16
  %conv34 = and i16 %17, 16383
  %snap_len = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 2
  %18 = ptrtoint ptr %snap_len to i32
  call void @__asan_store2_noabort(i32 %18)
  store i16 %conv34, ptr %snap_len, align 4
  %shr35 = lshr i32 %7, 16
  %19 = trunc i32 %shr35 to i16
  %conv37 = and i16 %19, 511
  %min_len = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 3
  %20 = ptrtoint ptr %min_len to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 %conv37, ptr %min_len, align 2
  %21 = trunc i32 %3 to i8
  %conv40 = and i8 %21, 31
  %skip_ofst = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 4
  %22 = ptrtoint ptr %skip_ofst to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %conv40, ptr %skip_ofst, align 4
  %shr41 = lshr i32 %3, 8
  %23 = trunc i32 %shr41 to i8
  %conv43 = and i8 %23, 31
  %skip_len = getelementptr inbounds %struct.trace_params, ptr %tp, i32 0, i32 5
  %24 = ptrtoint ptr %skip_len to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %conv43, ptr %skip_len, align 1
  %mul44 = shl i32 %idx, 8
  %add45 = add i32 %mul44, 39936
  %add46 = add i32 %mul44, 40064
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %mask_reg.094 = phi i32 [ %add46, %entry ], [ %add55, %for.body.for.body_crit_edge ]
  %data_reg.093 = phi i32 [ %add45, %entry ], [ %add54, %for.body.for.body_crit_edge ]
  %i.092 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %25 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %adap, align 128
  %add.ptr.i90 = getelementptr i8, ptr %26, i32 %mask_reg.094
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i90) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %28 = xor i32 %27, -1
  %29 = tail call i32 @llvm.bswap.i32(i32 %28)
  %arrayidx = getelementptr %struct.trace_params, ptr %tp, i32 0, i32 1, i32 %i.092
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %arrayidx, align 4
  %31 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %adap, align 128
  %add.ptr.i91 = getelementptr i8, ptr %32, i32 %data_reg.093
  %33 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i91) #14, !srcloc !992
  %34 = tail call i32 @llvm.bswap.i32(i32 %33) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %35 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx, align 4
  %and52 = and i32 %36, %34
  %arrayidx53 = getelementptr [28 x i32], ptr %tp, i32 0, i32 %i.092
  %37 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and52, ptr %arrayidx53, align 4
  %inc = add nuw nsw i32 %i.092, 1
  %add54 = add nuw nsw i32 %data_reg.093, 4
  %add55 = add nuw nsw i32 %mask_reg.094, 4
  %exitcond.not = icmp eq i32 %inc, 28
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_pmtx_get_stats(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %cnt, ptr nocapture noundef writeonly %cycles) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_stats_cnt = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23, i32 1
  %0 = ptrtoint ptr %pm_stats_cnt to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_stats_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp26.not = icmp eq i8 %1, 0
  br i1 %cmp26.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %for.inc.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.027, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %2 = tail call i32 @llvm.bswap.i32(i32 %add) #14
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 36840
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %2) #14, !srcloc !995
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i22 = getelementptr i8, ptr %6, i32 36844
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i22) #14, !srcloc !992
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %arrayidx = getelementptr i32, ptr %cnt, i32 %i.027
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %chip, align 8
  %12 = and i32 %11, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %12)
  %cmp.i.not = icmp eq i32 %12, 64
  br i1 %cmp.i.not, label %if.then, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adap, align 128
  %add.ptr.i.i24 = getelementptr i8, ptr %14, i32 36848
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i24, i32 436207872) #14, !srcloc !995
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i3.i = getelementptr i8, ptr %16, i32 36852
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %18 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adap, align 128
  %add.ptr.i.i24.1 = getelementptr i8, ptr %19, i32 36848
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i24.1, i32 452985088) #14, !srcloc !995
  %20 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adap, align 128
  %add.ptr.i3.i.1 = getelementptr i8, ptr %21, i32 36852
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %23 = zext i32 %17 to i64
  %24 = zext i32 %22 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, %23
  %27 = call i64 @llvm.bswap.i64(i64 %26)
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adap, align 128
  %add.ptr.i23 = getelementptr i8, ptr %29, i32 36848
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i23) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i = getelementptr i8, ptr %29, i32 36852
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %32 = zext i32 %31 to i64
  %33 = zext i32 %30 to i64
  %34 = shl nuw i64 %33, 32
  %35 = or i64 %34, %32
  %36 = tail call i64 @llvm.bswap.i64(i64 %35) #14
  br label %for.inc

for.inc:                                          ; preds = %if.then, %while.body.i.preheader
  %.sink = phi i64 [ %36, %if.then ], [ %27, %while.body.i.preheader ]
  %arrayidx5 = getelementptr i64, ptr %cycles, i32 %i.027
  %37 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %.sink, ptr %arrayidx5, align 8
  %38 = ptrtoint ptr %pm_stats_cnt to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %pm_stats_cnt, align 1
  %conv = zext i8 %39 to i32
  %cmp = icmp ult i32 %add, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_pmrx_get_stats(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %cnt, ptr nocapture noundef writeonly %cycles) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %pm_stats_cnt = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23, i32 1
  %0 = ptrtoint ptr %pm_stats_cnt to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %pm_stats_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp26.not = icmp eq i8 %1, 0
  br i1 %cmp26.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %add, %for.inc.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.027, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %2 = tail call i32 @llvm.bswap.i32(i32 %add) #14
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 36808
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %2) #14, !srcloc !995
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i22 = getelementptr i8, ptr %6, i32 36812
  %7 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i22) #14, !srcloc !992
  %8 = tail call i32 @llvm.bswap.i32(i32 %7) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %arrayidx = getelementptr i32, ptr %cnt, i32 %i.027
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %arrayidx, align 4
  %10 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %chip, align 8
  %12 = and i32 %11, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %12)
  %cmp.i.not = icmp eq i32 %12, 64
  br i1 %cmp.i.not, label %if.then, label %while.body.i.preheader

while.body.i.preheader:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adap, align 128
  %add.ptr.i.i24 = getelementptr i8, ptr %14, i32 36816
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i24, i32 318767360) #14, !srcloc !995
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i3.i = getelementptr i8, ptr %16, i32 36820
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %18 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adap, align 128
  %add.ptr.i.i24.1 = getelementptr i8, ptr %19, i32 36816
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i24.1, i32 335544576) #14, !srcloc !995
  %20 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adap, align 128
  %add.ptr.i3.i.1 = getelementptr i8, ptr %21, i32 36820
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i3.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %23 = zext i32 %17 to i64
  %24 = zext i32 %22 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, %23
  %27 = call i64 @llvm.bswap.i64(i64 %26)
  br label %for.inc

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %28 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adap, align 128
  %add.ptr.i23 = getelementptr i8, ptr %29, i32 36816
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i23) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i = getelementptr i8, ptr %29, i32 36820
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %32 = zext i32 %31 to i64
  %33 = zext i32 %30 to i64
  %34 = shl nuw i64 %33, 32
  %35 = or i64 %34, %32
  %36 = tail call i64 @llvm.bswap.i64(i64 %35) #14
  br label %for.inc

for.inc:                                          ; preds = %if.then, %while.body.i.preheader
  %.sink = phi i64 [ %36, %if.then ], [ %27, %while.body.i.preheader ]
  %arrayidx5 = getelementptr i64, ptr %cycles, i32 %i.027
  %37 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %.sink, ptr %arrayidx5, align 8
  %38 = ptrtoint ptr %pm_stats_cnt to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %pm_stats_cnt, align 1
  %conv = zext i8 %39 to i32
  %cmp = icmp ult i32 %add, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_mps_bg_map(ptr noundef %adapter, i32 noundef %pidx) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 36864
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = lshr i32 %2, 24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %3, 3
  %shl = shl nuw nsw i32 1, %and
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %pidx)
  %cmp.not = icmp ugt i32 %shl, %pidx
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %4 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %5, ptr noundef nonnull @.str.92, i32 noundef %pidx, i32 noundef %shl) #17
  br label %cleanup28

if.end:                                           ; preds = %entry
  %mps_bg_map1 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 38
  %arrayidx = getelementptr i8, ptr %mps_bg_map1, i32 %pidx
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %arrayidx, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv = zext i8 %7 to i32
  br label %cleanup28

if.end4:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 8
  %8 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags, align 32
  %and5 = and i32 %9, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.end4.if.end22_crit_edge, label %if.then7

if.end4.if.end22_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

if.then7:                                         ; preds = %if.end4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %10 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %12 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %14 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %15 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %16 = call ptr @memset(ptr %15, i32 0, i32 52)
  %shl.i.i = shl i32 %13, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %17 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 4, ptr %retval_len16.i.i, align 4
  %19 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 18743296, ptr %14, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %11, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %cleanup

for.body16.preheader.i.i:                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %20 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %val13.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %conv14 = trunc i32 %21 to i8
  %22 = ptrtoint ptr %mps_bg_map1 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %conv14, ptr %mps_bg_map1, align 1
  %shr16 = lshr i32 %21, 8
  %conv14.1 = trunc i32 %shr16 to i8
  %arrayidx15.1 = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 38, i32 1
  %23 = ptrtoint ptr %arrayidx15.1 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %conv14.1, ptr %arrayidx15.1, align 1
  %shr16.1 = lshr i32 %21, 16
  %conv14.2 = trunc i32 %shr16.1 to i8
  %arrayidx15.2 = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 38, i32 2
  %24 = ptrtoint ptr %arrayidx15.2 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %conv14.2, ptr %arrayidx15.2, align 1
  %shr16.2 = lshr i32 %21, 24
  %conv14.3 = trunc i32 %shr16.2 to i8
  %arrayidx15.3 = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 38, i32 3
  %25 = ptrtoint ptr %arrayidx15.3 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %conv14.3, ptr %arrayidx15.3, align 1
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %arrayidx, align 1
  %conv18 = zext i8 %27 to i32
  br label %cleanup28

cleanup:                                          ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %if.end22

if.end22:                                         ; preds = %cleanup, %if.end4.if.end22_crit_edge
  %chip.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %28 = ptrtoint ptr %chip.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %chip.i, align 8
  %shr.i = lshr i32 %29, 4
  %and.i = and i32 %shr.i, 15
  %30 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %31, i32 36864
  %32 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %33 = lshr i32 %32, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and2.i = and i32 %33, 3
  %shl.i = shl nuw nsw i32 1, %and2.i
  %34 = zext i32 %and.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.500)
  switch i32 %and.i, label %if.end22.do.end.i_crit_edge [
    i32 4, label %if.end22.sw.bb.i_crit_edge
    i32 5, label %if.end22.sw.bb.i_crit_edge60
    i32 6, label %sw.bb8.i
  ]

if.end22.sw.bb.i_crit_edge60:                     ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.end22.sw.bb.i_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb.i

if.end22.do.end.i_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb.i:                                          ; preds = %if.end22.sw.bb.i_crit_edge, %if.end22.sw.bb.i_crit_edge60
  %35 = zext i32 %shl.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.501)
  switch i32 %shl.i, label %sw.bb.i.do.end.i_crit_edge [
    i32 1, label %sw.bb.i.compute_mps_bg_map.exit_crit_edge
    i32 2, label %sw.bb4.i
    i32 4, label %sw.bb6.i
  ]

sw.bb.i.compute_mps_bg_map.exit_crit_edge:        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %compute_mps_bg_map.exit

sw.bb.i.do.end.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb4.i:                                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul.i = shl i32 %pidx, 1
  %shl5.i = shl i32 3, %mul.i
  br label %compute_mps_bg_map.exit

sw.bb6.i:                                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  %shl7.i = shl nuw i32 1, %pidx
  br label %compute_mps_bg_map.exit

sw.bb8.i:                                         ; preds = %if.end22
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and2.i)
  %cond.i = icmp eq i32 %and2.i, 1
  br i1 %cond.i, label %sw.bb9.i, label %sw.bb8.i.do.end.i_crit_edge

sw.bb8.i.do.end.i_crit_edge:                      ; preds = %sw.bb8.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb9.i:                                         ; preds = %sw.bb8.i
  call void @__sanitizer_cov_trace_pc() #16
  %mul10.i = shl i32 %pidx, 1
  %shl11.i = shl nuw i32 1, %mul10.i
  br label %compute_mps_bg_map.exit

do.end.i:                                         ; preds = %sw.bb8.i.do.end.i_crit_edge, %sw.bb.i.do.end.i_crit_edge, %if.end22.do.end.i_crit_edge
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %36 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %pdev_dev.i, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %37, ptr noundef nonnull @.str.472, i32 noundef %and.i, i32 noundef %shl.i) #17
  br label %compute_mps_bg_map.exit

compute_mps_bg_map.exit:                          ; preds = %do.end.i, %sw.bb9.i, %sw.bb6.i, %sw.bb4.i, %sw.bb.i.compute_mps_bg_map.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %do.end.i ], [ %shl11.i, %sw.bb9.i ], [ %shl7.i, %sw.bb6.i ], [ %shl5.i, %sw.bb4.i ], [ 15, %sw.bb.i.compute_mps_bg_map.exit_crit_edge ]
  %conv24 = trunc i32 %retval.0.i to i8
  %38 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 %conv24, ptr %arrayidx, align 1
  %conv27 = and i32 %retval.0.i, 255
  br label %cleanup28

cleanup28:                                        ; preds = %compute_mps_bg_map.exit, %for.body16.preheader.i.i, %if.then2, %do.end
  %retval.1 = phi i32 [ 0, %do.end ], [ %conv, %if.then2 ], [ %conv27, %compute_mps_bg_map.exit ], [ %conv18, %for.body16.preheader.i.i ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_query_params_ns(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %nparams, ptr nocapture noundef readonly %params, ptr nocapture noundef writeonly %val) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %nparams)
  %cmp.i = icmp ugt i32 %nparams, 7
  br i1 %cmp.i, label %entry.t4_query_params_rw.exit_crit_edge, label %if.end.i

entry.t4_query_params_rw.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

if.end.i:                                         ; preds = %entry
  %0 = getelementptr inbounds i8, ptr %c.i, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl.i = shl i32 %pf, 8
  %or.i = or i32 %shl.i, %vf
  %or2.i = or i32 %or.i, 146800640
  %2 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2.i, ptr %c.i, align 4
  %retval_len16.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp338.not.i = icmp eq i32 %nparams, 0
  br i1 %cmp338.not.i, label %if.end.i.for.end.i_crit_edge, label %for.body.i

if.end.i.for.end.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i:                                       ; preds = %if.end.i
  %4 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %params, align 4
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nparams)
  %exitcond.not.i = icmp eq i32 %nparams, 1
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.1

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.1:                                     ; preds = %for.body.i
  %incdec.ptr7.i = getelementptr inbounds i8, ptr %c.i, i32 16
  %incdec.ptr.i = getelementptr i32, ptr %params, i32 1
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %incdec.ptr.i, align 4
  %9 = ptrtoint ptr %incdec.ptr7.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr7.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nparams)
  %exitcond.not.i.1 = icmp eq i32 %nparams, 2
  br i1 %exitcond.not.i.1, label %for.body.i.1.for.end.i_crit_edge, label %for.body.i.2

for.body.i.1.for.end.i_crit_edge:                 ; preds = %for.body.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.2:                                     ; preds = %for.body.i.1
  %incdec.ptr7.i.1 = getelementptr inbounds i8, ptr %c.i, i32 24
  %incdec.ptr.i.1 = getelementptr i32, ptr %params, i32 2
  %10 = ptrtoint ptr %incdec.ptr.i.1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %incdec.ptr.i.1, align 4
  %12 = ptrtoint ptr %incdec.ptr7.i.1 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %incdec.ptr7.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %nparams)
  %exitcond.not.i.2 = icmp eq i32 %nparams, 3
  br i1 %exitcond.not.i.2, label %for.body.i.2.for.end.i_crit_edge, label %for.body.i.3

for.body.i.2.for.end.i_crit_edge:                 ; preds = %for.body.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.3:                                     ; preds = %for.body.i.2
  %incdec.ptr7.i.2 = getelementptr inbounds i8, ptr %c.i, i32 32
  %incdec.ptr.i.2 = getelementptr i32, ptr %params, i32 3
  %13 = ptrtoint ptr %incdec.ptr.i.2 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr.i.2, align 4
  %15 = ptrtoint ptr %incdec.ptr7.i.2 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr7.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %nparams)
  %exitcond.not.i.3 = icmp eq i32 %nparams, 4
  br i1 %exitcond.not.i.3, label %for.body.i.3.for.end.i_crit_edge, label %for.body.i.4

for.body.i.3.for.end.i_crit_edge:                 ; preds = %for.body.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.4:                                     ; preds = %for.body.i.3
  %incdec.ptr7.i.3 = getelementptr inbounds i8, ptr %c.i, i32 40
  %incdec.ptr.i.3 = getelementptr i32, ptr %params, i32 4
  %16 = ptrtoint ptr %incdec.ptr.i.3 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %incdec.ptr.i.3, align 4
  %18 = ptrtoint ptr %incdec.ptr7.i.3 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr7.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %nparams)
  %exitcond.not.i.4 = icmp eq i32 %nparams, 5
  br i1 %exitcond.not.i.4, label %for.body.i.4.for.end.i_crit_edge, label %for.body.i.5

for.body.i.4.for.end.i_crit_edge:                 ; preds = %for.body.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.5:                                     ; preds = %for.body.i.4
  %incdec.ptr7.i.4 = getelementptr inbounds i8, ptr %c.i, i32 48
  %incdec.ptr.i.4 = getelementptr i32, ptr %params, i32 5
  %19 = ptrtoint ptr %incdec.ptr.i.4 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %incdec.ptr.i.4, align 4
  %21 = ptrtoint ptr %incdec.ptr7.i.4 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr7.i.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %nparams)
  %exitcond.not.i.5 = icmp eq i32 %nparams, 6
  br i1 %exitcond.not.i.5, label %for.body.i.5.for.end.i_crit_edge, label %for.body.i.6

for.body.i.5.for.end.i_crit_edge:                 ; preds = %for.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.i.6:                                     ; preds = %for.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr7.i.5 = getelementptr inbounds i8, ptr %c.i, i32 56
  %incdec.ptr.i.5 = getelementptr i32, ptr %params, i32 6
  %22 = ptrtoint ptr %incdec.ptr.i.5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %incdec.ptr.i.5, align 4
  %24 = ptrtoint ptr %incdec.ptr7.i.5 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr7.i.5, align 4
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.6, %for.body.i.5.for.end.i_crit_edge, %for.body.i.4.for.end.i_crit_edge, %for.body.i.3.for.end.i_crit_edge, %for.body.i.2.for.end.i_crit_edge, %for.body.i.1.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %if.end.i.for.end.i_crit_edge
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp9.i = icmp eq i32 %call.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %cmp1543.i = icmp ne i32 %nparams, 0
  %or.cond.i = and i1 %cmp1543.i, %cmp9.i
  br i1 %or.cond.i, label %for.body16.preheader.i, label %for.end.i.t4_query_params_rw.exit_crit_edge

for.end.i.t4_query_params_rw.exit_crit_edge:      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

for.body16.preheader.i:                           ; preds = %for.end.i
  %val13.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 2, i32 0, i32 1
  br label %for.body16.i

for.body16.i:                                     ; preds = %for.body16.i.for.body16.i_crit_edge, %for.body16.preheader.i
  %p.146.i = phi ptr [ %add.ptr20.i, %for.body16.i.for.body16.i_crit_edge ], [ %val13.i, %for.body16.preheader.i ]
  %i.145.i = phi i32 [ %inc19.i, %for.body16.i.for.body16.i_crit_edge ], [ 0, %for.body16.preheader.i ]
  %val.addr.044.i = phi ptr [ %incdec.ptr17.i, %for.body16.i.for.body16.i_crit_edge ], [ %val, %for.body16.preheader.i ]
  %25 = ptrtoint ptr %p.146.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %p.146.i, align 4
  %incdec.ptr17.i = getelementptr i32, ptr %val.addr.044.i, i32 1
  %27 = ptrtoint ptr %val.addr.044.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %val.addr.044.i, align 4
  %inc19.i = add nuw i32 %i.145.i, 1
  %add.ptr20.i = getelementptr i32, ptr %p.146.i, i32 2
  %exitcond47.not.i = icmp eq i32 %inc19.i, %nparams
  br i1 %exitcond47.not.i, label %for.body16.i.t4_query_params_rw.exit_crit_edge, label %for.body16.i.for.body16.i_crit_edge

for.body16.i.for.body16.i_crit_edge:              ; preds = %for.body16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body16.i

for.body16.i.t4_query_params_rw.exit_crit_edge:   ; preds = %for.body16.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params_rw.exit

t4_query_params_rw.exit:                          ; preds = %for.body16.i.t4_query_params_rw.exit_crit_edge, %for.end.i.t4_query_params_rw.exit_crit_edge, %entry.t4_query_params_rw.exit_crit_edge
  %retval.0.i = phi i32 [ -22, %entry.t4_query_params_rw.exit_crit_edge ], [ %call.i.i, %for.end.i.t4_query_params_rw.exit_crit_edge ], [ 0, %for.body16.i.t4_query_params_rw.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_tp_ch_map(ptr nocapture noundef readonly %adap, i32 noundef %pidx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %shr = lshr i32 %1, 4
  %and = and i32 %shr, 15
  %2 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %3, i32 36864
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %5 = lshr i32 %4, 24
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and2 = and i32 %5, 3
  %shl = shl nuw nsw i32 1, %and2
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %pidx)
  %cmp.not = icmp ugt i32 %shl, %pidx
  br i1 %cmp.not, label %if.end, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %6 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %7, ptr noundef nonnull @.str.94, i32 noundef %pidx, i32 noundef %shl) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = zext i32 %and to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.502)
  switch i32 %and, label %if.end.do.end15_crit_edge [
    i32 4, label %if.end.sw.bb_crit_edge
    i32 5, label %if.end.sw.bb_crit_edge30
    i32 6, label %sw.bb8
  ]

if.end.sw.bb_crit_edge30:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb

if.end.do.end15_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge30
  %9 = zext i32 %shl to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.503)
  switch i32 %shl, label %sw.bb.do.end15_crit_edge [
    i32 1, label %sw.bb.cleanup_crit_edge
    i32 2, label %sw.bb4
    i32 4, label %sw.bb6
  ]

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

sw.bb.do.end15_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15

sw.bb4:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %mul = shl i32 %pidx, 1
  %shl5 = shl i32 3, %mul
  br label %cleanup

sw.bb6:                                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #16
  %shl7 = shl nuw i32 1, %pidx
  br label %cleanup

sw.bb8:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %and2)
  %switch.not = icmp ugt i32 %and2, 1
  br i1 %switch.not, label %sw.bb8.do.end15_crit_edge, label %sw.bb9

sw.bb8.do.end15_crit_edge:                        ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end15

sw.bb9:                                           ; preds = %sw.bb8
  call void @__sanitizer_cov_trace_pc() #16
  %shl10 = shl nuw i32 1, %pidx
  br label %cleanup

do.end15:                                         ; preds = %sw.bb8.do.end15_crit_edge, %sw.bb.do.end15_crit_edge, %if.end.do.end15_crit_edge
  %pdev_dev16 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %10 = ptrtoint ptr %pdev_dev16 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pdev_dev16, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %11, ptr noundef nonnull @.str.97, i32 noundef %and, i32 noundef %shl) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end15, %sw.bb9, %sw.bb6, %sw.bb4, %sw.bb.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %do.end15 ], [ %shl10, %sw.bb9 ], [ %shl7, %sw.bb6 ], [ %shl5, %sw.bb4 ], [ 15, %sw.bb.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @t4_get_port_type_description(i32 noundef %port_type) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %port_type)
  %cmp = icmp ult i32 %port_type, 23
  br i1 %cmp, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %return

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx = getelementptr [23 x ptr], ptr @t4_get_port_type_description.port_type_description, i32 0, i32 %port_type
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  br label %return

return:                                           ; preds = %if.then, %entry.return_crit_edge
  %retval.0 = phi ptr [ %1, %if.then ], [ @.str.122, %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_port_stats_offset(ptr noundef %adap, i32 noundef %idx, ptr noundef %stats, ptr nocapture noundef readonly %offset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @t4_get_port_stats(ptr noundef %adap, i32 noundef %idx, ptr noundef %stats)
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %i.08 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %o.07 = phi ptr [ %offset, %entry ], [ %incdec.ptr1, %for.body.for.body_crit_edge ]
  %s.06 = phi ptr [ %stats, %entry ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %0 = ptrtoint ptr %o.07 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %o.07, align 8
  %2 = ptrtoint ptr %s.06 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %s.06, align 8
  %sub = sub i64 %3, %1
  store i64 %sub, ptr %s.06, align 8
  %inc = add nuw nsw i32 %i.08, 1
  %incdec.ptr = getelementptr i64, ptr %s.06, i32 1
  %incdec.ptr1 = getelementptr i64, ptr %o.07, i32 1
  %exitcond.not = icmp eq i32 %inc, 58
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_port_stats(ptr noundef %adap, i32 noundef %idx, ptr noundef %p) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_get_mps_bg_map(ptr noundef %adap, i32 noundef %idx)
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 38400
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip, align 8
  %6 = and i32 %5, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %6)
  %cmp.i.not = icmp eq i32 %6, 64
  %mul = shl i32 %idx, 13
  %add3 = add i32 %mul, 132096
  %mul4 = shl i32 %idx, 14
  %add6 = add i32 %mul4, 197632
  %cond = select i1 %cmp.i.not, i32 %add3, i32 %add6
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i1121 = getelementptr i8, ptr %8, i32 %cond
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1121) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i1121, i32 4
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %11 = zext i32 %10 to i64
  %12 = zext i32 %9 to i64
  %13 = shl nuw i64 %12, 32
  %14 = or i64 %13, %11
  %15 = tail call i64 @llvm.bswap.i64(i64 %14) #14
  %16 = ptrtoint ptr %p to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %p, align 8
  %17 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %chip, align 8
  %19 = and i32 %18, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %19)
  %cmp.i1122.not = icmp eq i32 %19, 64
  %add15 = add i32 %mul, 132104
  %add19 = add i32 %mul4, 197640
  %cond21 = select i1 %cmp.i1122.not, i32 %add15, i32 %add19
  %20 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adap, align 128
  %add.ptr.i1124 = getelementptr i8, ptr %21, i32 %cond21
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1124) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1125 = getelementptr i8, ptr %add.ptr.i1124, i32 4
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1125) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %24 = zext i32 %23 to i64
  %25 = zext i32 %22 to i64
  %26 = shl nuw i64 %25, 32
  %27 = or i64 %26, %24
  %28 = tail call i64 @llvm.bswap.i64(i64 %27) #14
  %tx_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 1
  %29 = ptrtoint ptr %tx_frames to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %tx_frames, align 8
  %30 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %chip, align 8
  %32 = and i32 %31, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %32)
  %cmp.i1126.not = icmp eq i32 %32, 64
  %add30 = add i32 %mul, 132112
  %add34 = add i32 %mul4, 197648
  %cond36 = select i1 %cmp.i1126.not, i32 %add30, i32 %add34
  %33 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %adap, align 128
  %add.ptr.i1128 = getelementptr i8, ptr %34, i32 %cond36
  %35 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1128) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1129 = getelementptr i8, ptr %add.ptr.i1128, i32 4
  %36 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1129) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %37 = zext i32 %36 to i64
  %38 = zext i32 %35 to i64
  %39 = shl nuw i64 %38, 32
  %40 = or i64 %39, %37
  %41 = tail call i64 @llvm.bswap.i64(i64 %40) #14
  %tx_bcast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 2
  %42 = ptrtoint ptr %tx_bcast_frames to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %tx_bcast_frames, align 8
  %43 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %chip, align 8
  %45 = and i32 %44, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %45)
  %cmp.i1130.not = icmp eq i32 %45, 64
  %add45 = add i32 %mul, 132120
  %add49 = add i32 %mul4, 197656
  %cond51 = select i1 %cmp.i1130.not, i32 %add45, i32 %add49
  %46 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %adap, align 128
  %add.ptr.i1132 = getelementptr i8, ptr %47, i32 %cond51
  %48 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1132) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1133 = getelementptr i8, ptr %add.ptr.i1132, i32 4
  %49 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1133) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %50 = zext i32 %49 to i64
  %51 = zext i32 %48 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, %50
  %54 = tail call i64 @llvm.bswap.i64(i64 %53) #14
  %tx_mcast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 3
  %55 = ptrtoint ptr %tx_mcast_frames to i32
  call void @__asan_store8_noabort(i32 %55)
  store i64 %54, ptr %tx_mcast_frames, align 8
  %56 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %chip, align 8
  %58 = and i32 %57, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %58)
  %cmp.i1134.not = icmp eq i32 %58, 64
  %add60 = add i32 %mul, 132128
  %add64 = add i32 %mul4, 197664
  %cond66 = select i1 %cmp.i1134.not, i32 %add60, i32 %add64
  %59 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %adap, align 128
  %add.ptr.i1136 = getelementptr i8, ptr %60, i32 %cond66
  %61 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1136) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1137 = getelementptr i8, ptr %add.ptr.i1136, i32 4
  %62 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1137) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %63 = zext i32 %62 to i64
  %64 = zext i32 %61 to i64
  %65 = shl nuw i64 %64, 32
  %66 = or i64 %65, %63
  %67 = tail call i64 @llvm.bswap.i64(i64 %66) #14
  %tx_ucast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 4
  %68 = ptrtoint ptr %tx_ucast_frames to i32
  call void @__asan_store8_noabort(i32 %68)
  store i64 %67, ptr %tx_ucast_frames, align 8
  %69 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %chip, align 8
  %71 = and i32 %70, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %71)
  %cmp.i1138.not = icmp eq i32 %71, 64
  %add75 = add i32 %mul, 132136
  %add79 = add i32 %mul4, 197672
  %cond81 = select i1 %cmp.i1138.not, i32 %add75, i32 %add79
  %72 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %adap, align 128
  %add.ptr.i1140 = getelementptr i8, ptr %73, i32 %cond81
  %74 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1140) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1141 = getelementptr i8, ptr %add.ptr.i1140, i32 4
  %75 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1141) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %76 = zext i32 %75 to i64
  %77 = zext i32 %74 to i64
  %78 = shl nuw i64 %77, 32
  %79 = or i64 %78, %76
  %80 = tail call i64 @llvm.bswap.i64(i64 %79) #14
  %tx_error_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 5
  %81 = ptrtoint ptr %tx_error_frames to i32
  call void @__asan_store8_noabort(i32 %81)
  store i64 %80, ptr %tx_error_frames, align 8
  %82 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %chip, align 8
  %84 = and i32 %83, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %84)
  %cmp.i1142.not = icmp eq i32 %84, 64
  %add90 = add i32 %mul, 132144
  %add94 = add i32 %mul4, 197680
  %cond96 = select i1 %cmp.i1142.not, i32 %add90, i32 %add94
  %85 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %adap, align 128
  %add.ptr.i1144 = getelementptr i8, ptr %86, i32 %cond96
  %87 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1144) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1145 = getelementptr i8, ptr %add.ptr.i1144, i32 4
  %88 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1145) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %89 = zext i32 %88 to i64
  %90 = zext i32 %87 to i64
  %91 = shl nuw i64 %90, 32
  %92 = or i64 %91, %89
  %93 = tail call i64 @llvm.bswap.i64(i64 %92) #14
  %tx_frames_64 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 6
  %94 = ptrtoint ptr %tx_frames_64 to i32
  call void @__asan_store8_noabort(i32 %94)
  store i64 %93, ptr %tx_frames_64, align 8
  %95 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %chip, align 8
  %97 = and i32 %96, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %97)
  %cmp.i1146.not = icmp eq i32 %97, 64
  %add105 = add i32 %mul, 132152
  %add109 = add i32 %mul4, 197688
  %cond111 = select i1 %cmp.i1146.not, i32 %add105, i32 %add109
  %98 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %adap, align 128
  %add.ptr.i1148 = getelementptr i8, ptr %99, i32 %cond111
  %100 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1148) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1149 = getelementptr i8, ptr %add.ptr.i1148, i32 4
  %101 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1149) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %102 = zext i32 %101 to i64
  %103 = zext i32 %100 to i64
  %104 = shl nuw i64 %103, 32
  %105 = or i64 %104, %102
  %106 = tail call i64 @llvm.bswap.i64(i64 %105) #14
  %tx_frames_65_127 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 7
  %107 = ptrtoint ptr %tx_frames_65_127 to i32
  call void @__asan_store8_noabort(i32 %107)
  store i64 %106, ptr %tx_frames_65_127, align 8
  %108 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %chip, align 8
  %110 = and i32 %109, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %110)
  %cmp.i1150.not = icmp eq i32 %110, 64
  %add120 = add i32 %mul, 132160
  %add124 = add i32 %mul4, 197696
  %cond126 = select i1 %cmp.i1150.not, i32 %add120, i32 %add124
  %111 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %adap, align 128
  %add.ptr.i1152 = getelementptr i8, ptr %112, i32 %cond126
  %113 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1152) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1153 = getelementptr i8, ptr %add.ptr.i1152, i32 4
  %114 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1153) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %115 = zext i32 %114 to i64
  %116 = zext i32 %113 to i64
  %117 = shl nuw i64 %116, 32
  %118 = or i64 %117, %115
  %119 = tail call i64 @llvm.bswap.i64(i64 %118) #14
  %tx_frames_128_255 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 8
  %120 = ptrtoint ptr %tx_frames_128_255 to i32
  call void @__asan_store8_noabort(i32 %120)
  store i64 %119, ptr %tx_frames_128_255, align 8
  %121 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %chip, align 8
  %123 = and i32 %122, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %123)
  %cmp.i1154.not = icmp eq i32 %123, 64
  %add135 = add i32 %mul, 132168
  %add139 = add i32 %mul4, 197704
  %cond141 = select i1 %cmp.i1154.not, i32 %add135, i32 %add139
  %124 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %adap, align 128
  %add.ptr.i1156 = getelementptr i8, ptr %125, i32 %cond141
  %126 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1156) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1157 = getelementptr i8, ptr %add.ptr.i1156, i32 4
  %127 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1157) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %128 = zext i32 %127 to i64
  %129 = zext i32 %126 to i64
  %130 = shl nuw i64 %129, 32
  %131 = or i64 %130, %128
  %132 = tail call i64 @llvm.bswap.i64(i64 %131) #14
  %tx_frames_256_511 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 9
  %133 = ptrtoint ptr %tx_frames_256_511 to i32
  call void @__asan_store8_noabort(i32 %133)
  store i64 %132, ptr %tx_frames_256_511, align 8
  %134 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %chip, align 8
  %136 = and i32 %135, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %136)
  %cmp.i1158.not = icmp eq i32 %136, 64
  %add150 = add i32 %mul, 132176
  %add154 = add i32 %mul4, 197712
  %cond156 = select i1 %cmp.i1158.not, i32 %add150, i32 %add154
  %137 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %adap, align 128
  %add.ptr.i1160 = getelementptr i8, ptr %138, i32 %cond156
  %139 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1160) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1161 = getelementptr i8, ptr %add.ptr.i1160, i32 4
  %140 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1161) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %141 = zext i32 %140 to i64
  %142 = zext i32 %139 to i64
  %143 = shl nuw i64 %142, 32
  %144 = or i64 %143, %141
  %145 = tail call i64 @llvm.bswap.i64(i64 %144) #14
  %tx_frames_512_1023 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 10
  %146 = ptrtoint ptr %tx_frames_512_1023 to i32
  call void @__asan_store8_noabort(i32 %146)
  store i64 %145, ptr %tx_frames_512_1023, align 8
  %147 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load i32, ptr %chip, align 8
  %149 = and i32 %148, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %149)
  %cmp.i1162.not = icmp eq i32 %149, 64
  %add165 = add i32 %mul, 132184
  %add169 = add i32 %mul4, 197720
  %cond171 = select i1 %cmp.i1162.not, i32 %add165, i32 %add169
  %150 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %adap, align 128
  %add.ptr.i1164 = getelementptr i8, ptr %151, i32 %cond171
  %152 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1164) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1165 = getelementptr i8, ptr %add.ptr.i1164, i32 4
  %153 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1165) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %154 = zext i32 %153 to i64
  %155 = zext i32 %152 to i64
  %156 = shl nuw i64 %155, 32
  %157 = or i64 %156, %154
  %158 = tail call i64 @llvm.bswap.i64(i64 %157) #14
  %tx_frames_1024_1518 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 11
  %159 = ptrtoint ptr %tx_frames_1024_1518 to i32
  call void @__asan_store8_noabort(i32 %159)
  store i64 %158, ptr %tx_frames_1024_1518, align 8
  %160 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load i32, ptr %chip, align 8
  %162 = and i32 %161, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %162)
  %cmp.i1166.not = icmp eq i32 %162, 64
  %add180 = add i32 %mul, 132192
  %add184 = add i32 %mul4, 197728
  %cond186 = select i1 %cmp.i1166.not, i32 %add180, i32 %add184
  %163 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %163)
  %164 = load ptr, ptr %adap, align 128
  %add.ptr.i1168 = getelementptr i8, ptr %164, i32 %cond186
  %165 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1168) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1169 = getelementptr i8, ptr %add.ptr.i1168, i32 4
  %166 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1169) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %167 = zext i32 %166 to i64
  %168 = zext i32 %165 to i64
  %169 = shl nuw i64 %168, 32
  %170 = or i64 %169, %167
  %171 = tail call i64 @llvm.bswap.i64(i64 %170) #14
  %tx_frames_1519_max = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 12
  %172 = ptrtoint ptr %tx_frames_1519_max to i32
  call void @__asan_store8_noabort(i32 %172)
  store i64 %171, ptr %tx_frames_1519_max, align 8
  %173 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load i32, ptr %chip, align 8
  %175 = and i32 %174, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %175)
  %cmp.i1170.not = icmp eq i32 %175, 64
  %add195 = add i32 %mul, 132200
  %add199 = add i32 %mul4, 197736
  %cond201 = select i1 %cmp.i1170.not, i32 %add195, i32 %add199
  %176 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %adap, align 128
  %add.ptr.i1172 = getelementptr i8, ptr %177, i32 %cond201
  %178 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1172) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1173 = getelementptr i8, ptr %add.ptr.i1172, i32 4
  %179 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1173) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %180 = zext i32 %179 to i64
  %181 = zext i32 %178 to i64
  %182 = shl nuw i64 %181, 32
  %183 = or i64 %182, %180
  %184 = tail call i64 @llvm.bswap.i64(i64 %183) #14
  %tx_drop = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 13
  %185 = ptrtoint ptr %tx_drop to i32
  call void @__asan_store8_noabort(i32 %185)
  store i64 %184, ptr %tx_drop, align 8
  %186 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %186)
  %187 = load i32, ptr %chip, align 8
  %188 = and i32 %187, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %188)
  %cmp.i1174.not = icmp eq i32 %188, 64
  %add210 = add i32 %mul, 132208
  %add214 = add i32 %mul4, 197744
  %cond216 = select i1 %cmp.i1174.not, i32 %add210, i32 %add214
  %189 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load ptr, ptr %adap, align 128
  %add.ptr.i1176 = getelementptr i8, ptr %190, i32 %cond216
  %191 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1176) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1177 = getelementptr i8, ptr %add.ptr.i1176, i32 4
  %192 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1177) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %193 = zext i32 %192 to i64
  %194 = zext i32 %191 to i64
  %195 = shl nuw i64 %194, 32
  %196 = or i64 %195, %193
  %197 = tail call i64 @llvm.bswap.i64(i64 %196) #14
  %tx_pause = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 14
  %198 = ptrtoint ptr %tx_pause to i32
  call void @__asan_store8_noabort(i32 %198)
  store i64 %197, ptr %tx_pause, align 8
  %199 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %chip, align 8
  %201 = and i32 %200, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %201)
  %cmp.i1178.not = icmp eq i32 %201, 64
  %add225 = add i32 %mul, 132216
  %add229 = add i32 %mul4, 197752
  %cond231 = select i1 %cmp.i1178.not, i32 %add225, i32 %add229
  %202 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %adap, align 128
  %add.ptr.i1180 = getelementptr i8, ptr %203, i32 %cond231
  %204 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1180) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1181 = getelementptr i8, ptr %add.ptr.i1180, i32 4
  %205 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1181) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %206 = zext i32 %205 to i64
  %207 = zext i32 %204 to i64
  %208 = shl nuw i64 %207, 32
  %209 = or i64 %208, %206
  %210 = tail call i64 @llvm.bswap.i64(i64 %209) #14
  %tx_ppp0 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 15
  %211 = ptrtoint ptr %tx_ppp0 to i32
  call void @__asan_store8_noabort(i32 %211)
  store i64 %210, ptr %tx_ppp0, align 8
  %212 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %chip, align 8
  %214 = and i32 %213, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %214)
  %cmp.i1182.not = icmp eq i32 %214, 64
  %add240 = add i32 %mul, 132224
  %add244 = add i32 %mul4, 197760
  %cond246 = select i1 %cmp.i1182.not, i32 %add240, i32 %add244
  %215 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %215)
  %216 = load ptr, ptr %adap, align 128
  %add.ptr.i1184 = getelementptr i8, ptr %216, i32 %cond246
  %217 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1184) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1185 = getelementptr i8, ptr %add.ptr.i1184, i32 4
  %218 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1185) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %219 = zext i32 %218 to i64
  %220 = zext i32 %217 to i64
  %221 = shl nuw i64 %220, 32
  %222 = or i64 %221, %219
  %223 = tail call i64 @llvm.bswap.i64(i64 %222) #14
  %tx_ppp1 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 16
  %224 = ptrtoint ptr %tx_ppp1 to i32
  call void @__asan_store8_noabort(i32 %224)
  store i64 %223, ptr %tx_ppp1, align 8
  %225 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %225)
  %226 = load i32, ptr %chip, align 8
  %227 = and i32 %226, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %227)
  %cmp.i1186.not = icmp eq i32 %227, 64
  %add255 = add i32 %mul, 132232
  %add259 = add i32 %mul4, 197768
  %cond261 = select i1 %cmp.i1186.not, i32 %add255, i32 %add259
  %228 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %228)
  %229 = load ptr, ptr %adap, align 128
  %add.ptr.i1188 = getelementptr i8, ptr %229, i32 %cond261
  %230 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1188) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1189 = getelementptr i8, ptr %add.ptr.i1188, i32 4
  %231 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1189) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %232 = zext i32 %231 to i64
  %233 = zext i32 %230 to i64
  %234 = shl nuw i64 %233, 32
  %235 = or i64 %234, %232
  %236 = tail call i64 @llvm.bswap.i64(i64 %235) #14
  %tx_ppp2 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 17
  %237 = ptrtoint ptr %tx_ppp2 to i32
  call void @__asan_store8_noabort(i32 %237)
  store i64 %236, ptr %tx_ppp2, align 8
  %238 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %238)
  %239 = load i32, ptr %chip, align 8
  %240 = and i32 %239, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %240)
  %cmp.i1190.not = icmp eq i32 %240, 64
  %add270 = add i32 %mul, 132240
  %add274 = add i32 %mul4, 197776
  %cond276 = select i1 %cmp.i1190.not, i32 %add270, i32 %add274
  %241 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %241)
  %242 = load ptr, ptr %adap, align 128
  %add.ptr.i1192 = getelementptr i8, ptr %242, i32 %cond276
  %243 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1192) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1193 = getelementptr i8, ptr %add.ptr.i1192, i32 4
  %244 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1193) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %245 = zext i32 %244 to i64
  %246 = zext i32 %243 to i64
  %247 = shl nuw i64 %246, 32
  %248 = or i64 %247, %245
  %249 = tail call i64 @llvm.bswap.i64(i64 %248) #14
  %tx_ppp3 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 18
  %250 = ptrtoint ptr %tx_ppp3 to i32
  call void @__asan_store8_noabort(i32 %250)
  store i64 %249, ptr %tx_ppp3, align 8
  %251 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %251)
  %252 = load i32, ptr %chip, align 8
  %253 = and i32 %252, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %253)
  %cmp.i1194.not = icmp eq i32 %253, 64
  %add285 = add i32 %mul, 132248
  %add289 = add i32 %mul4, 197784
  %cond291 = select i1 %cmp.i1194.not, i32 %add285, i32 %add289
  %254 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %adap, align 128
  %add.ptr.i1196 = getelementptr i8, ptr %255, i32 %cond291
  %256 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1196) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1197 = getelementptr i8, ptr %add.ptr.i1196, i32 4
  %257 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1197) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %258 = zext i32 %257 to i64
  %259 = zext i32 %256 to i64
  %260 = shl nuw i64 %259, 32
  %261 = or i64 %260, %258
  %262 = tail call i64 @llvm.bswap.i64(i64 %261) #14
  %tx_ppp4 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 19
  %263 = ptrtoint ptr %tx_ppp4 to i32
  call void @__asan_store8_noabort(i32 %263)
  store i64 %262, ptr %tx_ppp4, align 8
  %264 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %264)
  %265 = load i32, ptr %chip, align 8
  %266 = and i32 %265, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %266)
  %cmp.i1198.not = icmp eq i32 %266, 64
  %add300 = add i32 %mul, 132256
  %add304 = add i32 %mul4, 197792
  %cond306 = select i1 %cmp.i1198.not, i32 %add300, i32 %add304
  %267 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %267)
  %268 = load ptr, ptr %adap, align 128
  %add.ptr.i1200 = getelementptr i8, ptr %268, i32 %cond306
  %269 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1200) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1201 = getelementptr i8, ptr %add.ptr.i1200, i32 4
  %270 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1201) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %271 = zext i32 %270 to i64
  %272 = zext i32 %269 to i64
  %273 = shl nuw i64 %272, 32
  %274 = or i64 %273, %271
  %275 = tail call i64 @llvm.bswap.i64(i64 %274) #14
  %tx_ppp5 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 20
  %276 = ptrtoint ptr %tx_ppp5 to i32
  call void @__asan_store8_noabort(i32 %276)
  store i64 %275, ptr %tx_ppp5, align 8
  %277 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %277)
  %278 = load i32, ptr %chip, align 8
  %279 = and i32 %278, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %279)
  %cmp.i1202.not = icmp eq i32 %279, 64
  %add315 = add i32 %mul, 132264
  %add319 = add i32 %mul4, 197800
  %cond321 = select i1 %cmp.i1202.not, i32 %add315, i32 %add319
  %280 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %adap, align 128
  %add.ptr.i1204 = getelementptr i8, ptr %281, i32 %cond321
  %282 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1204) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1205 = getelementptr i8, ptr %add.ptr.i1204, i32 4
  %283 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1205) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %284 = zext i32 %283 to i64
  %285 = zext i32 %282 to i64
  %286 = shl nuw i64 %285, 32
  %287 = or i64 %286, %284
  %288 = tail call i64 @llvm.bswap.i64(i64 %287) #14
  %tx_ppp6 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 21
  %289 = ptrtoint ptr %tx_ppp6 to i32
  call void @__asan_store8_noabort(i32 %289)
  store i64 %288, ptr %tx_ppp6, align 8
  %290 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %chip, align 8
  %292 = and i32 %291, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %292)
  %cmp.i1206.not = icmp eq i32 %292, 64
  %add330 = add i32 %mul, 132272
  %add334 = add i32 %mul4, 197808
  %cond336 = select i1 %cmp.i1206.not, i32 %add330, i32 %add334
  %293 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load ptr, ptr %adap, align 128
  %add.ptr.i1208 = getelementptr i8, ptr %294, i32 %cond336
  %295 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1208) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1209 = getelementptr i8, ptr %add.ptr.i1208, i32 4
  %296 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1209) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %297 = zext i32 %296 to i64
  %298 = zext i32 %295 to i64
  %299 = shl nuw i64 %298, 32
  %300 = or i64 %299, %297
  %301 = tail call i64 @llvm.bswap.i64(i64 %300) #14
  %tx_ppp7 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 22
  %302 = ptrtoint ptr %tx_ppp7 to i32
  call void @__asan_store8_noabort(i32 %302)
  store i64 %301, ptr %tx_ppp7, align 8
  %303 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load i32, ptr %chip, align 8
  %305 = and i32 %304, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %305)
  %cmp = icmp ugt i32 %305, 64
  br i1 %cmp, label %if.then, label %entry.if.end352_crit_edge

entry.if.end352_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end352

if.then:                                          ; preds = %entry
  %and340 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and340)
  %tobool341.not = icmp eq i32 %and340, 0
  br i1 %tobool341.not, label %if.then.if.end_crit_edge, label %if.then342

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then342:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %306 = ptrtoint ptr %tx_pause to i32
  call void @__asan_load8_noabort(i32 %306)
  %307 = load i64, ptr %tx_pause, align 8
  %308 = ptrtoint ptr %tx_frames_64 to i32
  call void @__asan_load8_noabort(i32 %308)
  %309 = load i64, ptr %tx_frames_64, align 8
  %sub = sub i64 %309, %307
  store i64 %sub, ptr %tx_frames_64, align 8
  br label %if.end

if.end:                                           ; preds = %if.then342, %if.then.if.end_crit_edge
  %and345 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and345)
  %tobool346.not = icmp eq i32 %and345, 0
  br i1 %tobool346.not, label %if.end.if.end352_crit_edge, label %if.then347

if.end.if.end352_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end352

if.then347:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %310 = ptrtoint ptr %tx_pause to i32
  call void @__asan_load8_noabort(i32 %310)
  %311 = load i64, ptr %tx_pause, align 8
  %312 = ptrtoint ptr %tx_mcast_frames to i32
  call void @__asan_load8_noabort(i32 %312)
  %313 = load i64, ptr %tx_mcast_frames, align 8
  %sub350 = sub i64 %313, %311
  store i64 %sub350, ptr %tx_mcast_frames, align 8
  br label %if.end352

if.end352:                                        ; preds = %if.then347, %if.end.if.end352_crit_edge, %entry.if.end352_crit_edge
  %314 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %314)
  %315 = load i32, ptr %chip, align 8
  %316 = and i32 %315, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %316)
  %cmp.i1210.not = icmp eq i32 %316, 64
  %add360 = add i32 %mul, 132416
  %add364 = add i32 %mul4, 197952
  %cond366 = select i1 %cmp.i1210.not, i32 %add360, i32 %add364
  %317 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %317)
  %318 = load ptr, ptr %adap, align 128
  %add.ptr.i1212 = getelementptr i8, ptr %318, i32 %cond366
  %319 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1212) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1213 = getelementptr i8, ptr %add.ptr.i1212, i32 4
  %320 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1213) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %321 = zext i32 %320 to i64
  %322 = zext i32 %319 to i64
  %323 = shl nuw i64 %322, 32
  %324 = or i64 %323, %321
  %325 = tail call i64 @llvm.bswap.i64(i64 %324) #14
  %rx_octets = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 23
  %326 = ptrtoint ptr %rx_octets to i32
  call void @__asan_store8_noabort(i32 %326)
  store i64 %325, ptr %rx_octets, align 8
  %327 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %327)
  %328 = load i32, ptr %chip, align 8
  %329 = and i32 %328, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %329)
  %cmp.i1214.not = icmp eq i32 %329, 64
  %add375 = add i32 %mul, 132424
  %add379 = add i32 %mul4, 197960
  %cond381 = select i1 %cmp.i1214.not, i32 %add375, i32 %add379
  %330 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %adap, align 128
  %add.ptr.i1216 = getelementptr i8, ptr %331, i32 %cond381
  %332 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1216) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1217 = getelementptr i8, ptr %add.ptr.i1216, i32 4
  %333 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1217) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %334 = zext i32 %333 to i64
  %335 = zext i32 %332 to i64
  %336 = shl nuw i64 %335, 32
  %337 = or i64 %336, %334
  %338 = tail call i64 @llvm.bswap.i64(i64 %337) #14
  %rx_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 24
  %339 = ptrtoint ptr %rx_frames to i32
  call void @__asan_store8_noabort(i32 %339)
  store i64 %338, ptr %rx_frames, align 8
  %340 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load i32, ptr %chip, align 8
  %342 = and i32 %341, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %342)
  %cmp.i1218.not = icmp eq i32 %342, 64
  %add390 = add i32 %mul, 132432
  %add394 = add i32 %mul4, 197968
  %cond396 = select i1 %cmp.i1218.not, i32 %add390, i32 %add394
  %343 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %343)
  %344 = load ptr, ptr %adap, align 128
  %add.ptr.i1220 = getelementptr i8, ptr %344, i32 %cond396
  %345 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1220) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1221 = getelementptr i8, ptr %add.ptr.i1220, i32 4
  %346 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1221) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %347 = zext i32 %346 to i64
  %348 = zext i32 %345 to i64
  %349 = shl nuw i64 %348, 32
  %350 = or i64 %349, %347
  %351 = tail call i64 @llvm.bswap.i64(i64 %350) #14
  %rx_bcast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 25
  %352 = ptrtoint ptr %rx_bcast_frames to i32
  call void @__asan_store8_noabort(i32 %352)
  store i64 %351, ptr %rx_bcast_frames, align 8
  %353 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load i32, ptr %chip, align 8
  %355 = and i32 %354, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %355)
  %cmp.i1222.not = icmp eq i32 %355, 64
  %add405 = add i32 %mul, 132440
  %add409 = add i32 %mul4, 197976
  %cond411 = select i1 %cmp.i1222.not, i32 %add405, i32 %add409
  %356 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %356)
  %357 = load ptr, ptr %adap, align 128
  %add.ptr.i1224 = getelementptr i8, ptr %357, i32 %cond411
  %358 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1224) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1225 = getelementptr i8, ptr %add.ptr.i1224, i32 4
  %359 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1225) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %360 = zext i32 %359 to i64
  %361 = zext i32 %358 to i64
  %362 = shl nuw i64 %361, 32
  %363 = or i64 %362, %360
  %364 = tail call i64 @llvm.bswap.i64(i64 %363) #14
  %rx_mcast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 26
  %365 = ptrtoint ptr %rx_mcast_frames to i32
  call void @__asan_store8_noabort(i32 %365)
  store i64 %364, ptr %rx_mcast_frames, align 8
  %366 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %366)
  %367 = load i32, ptr %chip, align 8
  %368 = and i32 %367, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %368)
  %cmp.i1226.not = icmp eq i32 %368, 64
  %add420 = add i32 %mul, 132448
  %add424 = add i32 %mul4, 197984
  %cond426 = select i1 %cmp.i1226.not, i32 %add420, i32 %add424
  %369 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load ptr, ptr %adap, align 128
  %add.ptr.i1228 = getelementptr i8, ptr %370, i32 %cond426
  %371 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1228) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1229 = getelementptr i8, ptr %add.ptr.i1228, i32 4
  %372 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1229) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %373 = zext i32 %372 to i64
  %374 = zext i32 %371 to i64
  %375 = shl nuw i64 %374, 32
  %376 = or i64 %375, %373
  %377 = tail call i64 @llvm.bswap.i64(i64 %376) #14
  %rx_ucast_frames = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 27
  %378 = ptrtoint ptr %rx_ucast_frames to i32
  call void @__asan_store8_noabort(i32 %378)
  store i64 %377, ptr %rx_ucast_frames, align 8
  %379 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %379)
  %380 = load i32, ptr %chip, align 8
  %381 = and i32 %380, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %381)
  %cmp.i1230.not = icmp eq i32 %381, 64
  %add435 = add i32 %mul, 132456
  %add439 = add i32 %mul4, 197992
  %cond441 = select i1 %cmp.i1230.not, i32 %add435, i32 %add439
  %382 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %382)
  %383 = load ptr, ptr %adap, align 128
  %add.ptr.i1232 = getelementptr i8, ptr %383, i32 %cond441
  %384 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1232) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1233 = getelementptr i8, ptr %add.ptr.i1232, i32 4
  %385 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1233) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %386 = zext i32 %385 to i64
  %387 = zext i32 %384 to i64
  %388 = shl nuw i64 %387, 32
  %389 = or i64 %388, %386
  %390 = tail call i64 @llvm.bswap.i64(i64 %389) #14
  %rx_too_long = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 28
  %391 = ptrtoint ptr %rx_too_long to i32
  call void @__asan_store8_noabort(i32 %391)
  store i64 %390, ptr %rx_too_long, align 8
  %392 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %392)
  %393 = load i32, ptr %chip, align 8
  %394 = and i32 %393, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %394)
  %cmp.i1234.not = icmp eq i32 %394, 64
  %add450 = add i32 %mul, 132464
  %add454 = add i32 %mul4, 198000
  %cond456 = select i1 %cmp.i1234.not, i32 %add450, i32 %add454
  %395 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %395)
  %396 = load ptr, ptr %adap, align 128
  %add.ptr.i1236 = getelementptr i8, ptr %396, i32 %cond456
  %397 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1236) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1237 = getelementptr i8, ptr %add.ptr.i1236, i32 4
  %398 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1237) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %399 = zext i32 %398 to i64
  %400 = zext i32 %397 to i64
  %401 = shl nuw i64 %400, 32
  %402 = or i64 %401, %399
  %403 = tail call i64 @llvm.bswap.i64(i64 %402) #14
  %rx_jabber = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 29
  %404 = ptrtoint ptr %rx_jabber to i32
  call void @__asan_store8_noabort(i32 %404)
  store i64 %403, ptr %rx_jabber, align 8
  %405 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %405)
  %406 = load i32, ptr %chip, align 8
  %407 = and i32 %406, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %407)
  %cmp.i1238.not = icmp eq i32 %407, 64
  %add465 = add i32 %mul, 132472
  %add469 = add i32 %mul4, 198008
  %cond471 = select i1 %cmp.i1238.not, i32 %add465, i32 %add469
  %408 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %adap, align 128
  %add.ptr.i1240 = getelementptr i8, ptr %409, i32 %cond471
  %410 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1240) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1241 = getelementptr i8, ptr %add.ptr.i1240, i32 4
  %411 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1241) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %412 = zext i32 %411 to i64
  %413 = zext i32 %410 to i64
  %414 = shl nuw i64 %413, 32
  %415 = or i64 %414, %412
  %416 = tail call i64 @llvm.bswap.i64(i64 %415) #14
  %rx_fcs_err = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 30
  %417 = ptrtoint ptr %rx_fcs_err to i32
  call void @__asan_store8_noabort(i32 %417)
  store i64 %416, ptr %rx_fcs_err, align 8
  %418 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %418)
  %419 = load i32, ptr %chip, align 8
  %420 = and i32 %419, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %420)
  %cmp.i1242.not = icmp eq i32 %420, 64
  %add480 = add i32 %mul, 132480
  %add484 = add i32 %mul4, 198016
  %cond486 = select i1 %cmp.i1242.not, i32 %add480, i32 %add484
  %421 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %421)
  %422 = load ptr, ptr %adap, align 128
  %add.ptr.i1244 = getelementptr i8, ptr %422, i32 %cond486
  %423 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1244) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1245 = getelementptr i8, ptr %add.ptr.i1244, i32 4
  %424 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1245) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %425 = zext i32 %424 to i64
  %426 = zext i32 %423 to i64
  %427 = shl nuw i64 %426, 32
  %428 = or i64 %427, %425
  %429 = tail call i64 @llvm.bswap.i64(i64 %428) #14
  %rx_len_err = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 31
  %430 = ptrtoint ptr %rx_len_err to i32
  call void @__asan_store8_noabort(i32 %430)
  store i64 %429, ptr %rx_len_err, align 8
  %431 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %431)
  %432 = load i32, ptr %chip, align 8
  %433 = and i32 %432, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %433)
  %cmp.i1246.not = icmp eq i32 %433, 64
  %add495 = add i32 %mul, 132488
  %add499 = add i32 %mul4, 198024
  %cond501 = select i1 %cmp.i1246.not, i32 %add495, i32 %add499
  %434 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %434)
  %435 = load ptr, ptr %adap, align 128
  %add.ptr.i1248 = getelementptr i8, ptr %435, i32 %cond501
  %436 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1248) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1249 = getelementptr i8, ptr %add.ptr.i1248, i32 4
  %437 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1249) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %438 = zext i32 %437 to i64
  %439 = zext i32 %436 to i64
  %440 = shl nuw i64 %439, 32
  %441 = or i64 %440, %438
  %442 = tail call i64 @llvm.bswap.i64(i64 %441) #14
  %rx_symbol_err = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 32
  %443 = ptrtoint ptr %rx_symbol_err to i32
  call void @__asan_store8_noabort(i32 %443)
  store i64 %442, ptr %rx_symbol_err, align 8
  %444 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load i32, ptr %chip, align 8
  %446 = and i32 %445, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %446)
  %cmp.i1250.not = icmp eq i32 %446, 64
  %add510 = add i32 %mul, 132624
  %add514 = add i32 %mul4, 198160
  %cond516 = select i1 %cmp.i1250.not, i32 %add510, i32 %add514
  %447 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %447)
  %448 = load ptr, ptr %adap, align 128
  %add.ptr.i1252 = getelementptr i8, ptr %448, i32 %cond516
  %449 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1252) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1253 = getelementptr i8, ptr %add.ptr.i1252, i32 4
  %450 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1253) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %451 = zext i32 %450 to i64
  %452 = zext i32 %449 to i64
  %453 = shl nuw i64 %452, 32
  %454 = or i64 %453, %451
  %455 = tail call i64 @llvm.bswap.i64(i64 %454) #14
  %rx_runt = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 33
  %456 = ptrtoint ptr %rx_runt to i32
  call void @__asan_store8_noabort(i32 %456)
  store i64 %455, ptr %rx_runt, align 8
  %457 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %457)
  %458 = load i32, ptr %chip, align 8
  %459 = and i32 %458, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %459)
  %cmp.i1254.not = icmp eq i32 %459, 64
  %add525 = add i32 %mul, 132496
  %add529 = add i32 %mul4, 198032
  %cond531 = select i1 %cmp.i1254.not, i32 %add525, i32 %add529
  %460 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %460)
  %461 = load ptr, ptr %adap, align 128
  %add.ptr.i1256 = getelementptr i8, ptr %461, i32 %cond531
  %462 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1256) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1257 = getelementptr i8, ptr %add.ptr.i1256, i32 4
  %463 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1257) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %464 = zext i32 %463 to i64
  %465 = zext i32 %462 to i64
  %466 = shl nuw i64 %465, 32
  %467 = or i64 %466, %464
  %468 = tail call i64 @llvm.bswap.i64(i64 %467) #14
  %rx_frames_64 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 34
  %469 = ptrtoint ptr %rx_frames_64 to i32
  call void @__asan_store8_noabort(i32 %469)
  store i64 %468, ptr %rx_frames_64, align 8
  %470 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %470)
  %471 = load i32, ptr %chip, align 8
  %472 = and i32 %471, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %472)
  %cmp.i1258.not = icmp eq i32 %472, 64
  %add540 = add i32 %mul, 132504
  %add544 = add i32 %mul4, 198040
  %cond546 = select i1 %cmp.i1258.not, i32 %add540, i32 %add544
  %473 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %473)
  %474 = load ptr, ptr %adap, align 128
  %add.ptr.i1260 = getelementptr i8, ptr %474, i32 %cond546
  %475 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1260) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1261 = getelementptr i8, ptr %add.ptr.i1260, i32 4
  %476 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1261) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %477 = zext i32 %476 to i64
  %478 = zext i32 %475 to i64
  %479 = shl nuw i64 %478, 32
  %480 = or i64 %479, %477
  %481 = tail call i64 @llvm.bswap.i64(i64 %480) #14
  %rx_frames_65_127 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 35
  %482 = ptrtoint ptr %rx_frames_65_127 to i32
  call void @__asan_store8_noabort(i32 %482)
  store i64 %481, ptr %rx_frames_65_127, align 8
  %483 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %483)
  %484 = load i32, ptr %chip, align 8
  %485 = and i32 %484, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %485)
  %cmp.i1262.not = icmp eq i32 %485, 64
  %add555 = add i32 %mul, 132512
  %add559 = add i32 %mul4, 198048
  %cond561 = select i1 %cmp.i1262.not, i32 %add555, i32 %add559
  %486 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %486)
  %487 = load ptr, ptr %adap, align 128
  %add.ptr.i1264 = getelementptr i8, ptr %487, i32 %cond561
  %488 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1264) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1265 = getelementptr i8, ptr %add.ptr.i1264, i32 4
  %489 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1265) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %490 = zext i32 %489 to i64
  %491 = zext i32 %488 to i64
  %492 = shl nuw i64 %491, 32
  %493 = or i64 %492, %490
  %494 = tail call i64 @llvm.bswap.i64(i64 %493) #14
  %rx_frames_128_255 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 36
  %495 = ptrtoint ptr %rx_frames_128_255 to i32
  call void @__asan_store8_noabort(i32 %495)
  store i64 %494, ptr %rx_frames_128_255, align 8
  %496 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %496)
  %497 = load i32, ptr %chip, align 8
  %498 = and i32 %497, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %498)
  %cmp.i1266.not = icmp eq i32 %498, 64
  %add570 = add i32 %mul, 132520
  %add574 = add i32 %mul4, 198056
  %cond576 = select i1 %cmp.i1266.not, i32 %add570, i32 %add574
  %499 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %499)
  %500 = load ptr, ptr %adap, align 128
  %add.ptr.i1268 = getelementptr i8, ptr %500, i32 %cond576
  %501 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1268) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1269 = getelementptr i8, ptr %add.ptr.i1268, i32 4
  %502 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1269) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %503 = zext i32 %502 to i64
  %504 = zext i32 %501 to i64
  %505 = shl nuw i64 %504, 32
  %506 = or i64 %505, %503
  %507 = tail call i64 @llvm.bswap.i64(i64 %506) #14
  %rx_frames_256_511 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 37
  %508 = ptrtoint ptr %rx_frames_256_511 to i32
  call void @__asan_store8_noabort(i32 %508)
  store i64 %507, ptr %rx_frames_256_511, align 8
  %509 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %509)
  %510 = load i32, ptr %chip, align 8
  %511 = and i32 %510, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %511)
  %cmp.i1270.not = icmp eq i32 %511, 64
  %add585 = add i32 %mul, 132528
  %add589 = add i32 %mul4, 198064
  %cond591 = select i1 %cmp.i1270.not, i32 %add585, i32 %add589
  %512 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %512)
  %513 = load ptr, ptr %adap, align 128
  %add.ptr.i1272 = getelementptr i8, ptr %513, i32 %cond591
  %514 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1272) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1273 = getelementptr i8, ptr %add.ptr.i1272, i32 4
  %515 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1273) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %516 = zext i32 %515 to i64
  %517 = zext i32 %514 to i64
  %518 = shl nuw i64 %517, 32
  %519 = or i64 %518, %516
  %520 = tail call i64 @llvm.bswap.i64(i64 %519) #14
  %rx_frames_512_1023 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 38
  %521 = ptrtoint ptr %rx_frames_512_1023 to i32
  call void @__asan_store8_noabort(i32 %521)
  store i64 %520, ptr %rx_frames_512_1023, align 8
  %522 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %522)
  %523 = load i32, ptr %chip, align 8
  %524 = and i32 %523, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %524)
  %cmp.i1274.not = icmp eq i32 %524, 64
  %add600 = add i32 %mul, 132536
  %add604 = add i32 %mul4, 198072
  %cond606 = select i1 %cmp.i1274.not, i32 %add600, i32 %add604
  %525 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %525)
  %526 = load ptr, ptr %adap, align 128
  %add.ptr.i1276 = getelementptr i8, ptr %526, i32 %cond606
  %527 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1276) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1277 = getelementptr i8, ptr %add.ptr.i1276, i32 4
  %528 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1277) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %529 = zext i32 %528 to i64
  %530 = zext i32 %527 to i64
  %531 = shl nuw i64 %530, 32
  %532 = or i64 %531, %529
  %533 = tail call i64 @llvm.bswap.i64(i64 %532) #14
  %rx_frames_1024_1518 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 39
  %534 = ptrtoint ptr %rx_frames_1024_1518 to i32
  call void @__asan_store8_noabort(i32 %534)
  store i64 %533, ptr %rx_frames_1024_1518, align 8
  %535 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %535)
  %536 = load i32, ptr %chip, align 8
  %537 = and i32 %536, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %537)
  %cmp.i1278.not = icmp eq i32 %537, 64
  %add615 = add i32 %mul, 132544
  %add619 = add i32 %mul4, 198080
  %cond621 = select i1 %cmp.i1278.not, i32 %add615, i32 %add619
  %538 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %538)
  %539 = load ptr, ptr %adap, align 128
  %add.ptr.i1280 = getelementptr i8, ptr %539, i32 %cond621
  %540 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1280) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1281 = getelementptr i8, ptr %add.ptr.i1280, i32 4
  %541 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1281) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %542 = zext i32 %541 to i64
  %543 = zext i32 %540 to i64
  %544 = shl nuw i64 %543, 32
  %545 = or i64 %544, %542
  %546 = tail call i64 @llvm.bswap.i64(i64 %545) #14
  %rx_frames_1519_max = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 40
  %547 = ptrtoint ptr %rx_frames_1519_max to i32
  call void @__asan_store8_noabort(i32 %547)
  store i64 %546, ptr %rx_frames_1519_max, align 8
  %548 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %548)
  %549 = load i32, ptr %chip, align 8
  %550 = and i32 %549, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %550)
  %cmp.i1282.not = icmp eq i32 %550, 64
  %add630 = add i32 %mul, 132552
  %add634 = add i32 %mul4, 198088
  %cond636 = select i1 %cmp.i1282.not, i32 %add630, i32 %add634
  %551 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %551)
  %552 = load ptr, ptr %adap, align 128
  %add.ptr.i1284 = getelementptr i8, ptr %552, i32 %cond636
  %553 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1284) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1285 = getelementptr i8, ptr %add.ptr.i1284, i32 4
  %554 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1285) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %555 = zext i32 %554 to i64
  %556 = zext i32 %553 to i64
  %557 = shl nuw i64 %556, 32
  %558 = or i64 %557, %555
  %559 = tail call i64 @llvm.bswap.i64(i64 %558) #14
  %rx_pause = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 41
  %560 = ptrtoint ptr %rx_pause to i32
  call void @__asan_store8_noabort(i32 %560)
  store i64 %559, ptr %rx_pause, align 8
  %561 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %561)
  %562 = load i32, ptr %chip, align 8
  %563 = and i32 %562, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %563)
  %cmp.i1286.not = icmp eq i32 %563, 64
  %add645 = add i32 %mul, 132560
  %add649 = add i32 %mul4, 198096
  %cond651 = select i1 %cmp.i1286.not, i32 %add645, i32 %add649
  %564 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %564)
  %565 = load ptr, ptr %adap, align 128
  %add.ptr.i1288 = getelementptr i8, ptr %565, i32 %cond651
  %566 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1288) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1289 = getelementptr i8, ptr %add.ptr.i1288, i32 4
  %567 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1289) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %568 = zext i32 %567 to i64
  %569 = zext i32 %566 to i64
  %570 = shl nuw i64 %569, 32
  %571 = or i64 %570, %568
  %572 = tail call i64 @llvm.bswap.i64(i64 %571) #14
  %rx_ppp0 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 42
  %573 = ptrtoint ptr %rx_ppp0 to i32
  call void @__asan_store8_noabort(i32 %573)
  store i64 %572, ptr %rx_ppp0, align 8
  %574 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %574)
  %575 = load i32, ptr %chip, align 8
  %576 = and i32 %575, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %576)
  %cmp.i1290.not = icmp eq i32 %576, 64
  %add660 = add i32 %mul, 132568
  %add664 = add i32 %mul4, 198104
  %cond666 = select i1 %cmp.i1290.not, i32 %add660, i32 %add664
  %577 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %577)
  %578 = load ptr, ptr %adap, align 128
  %add.ptr.i1292 = getelementptr i8, ptr %578, i32 %cond666
  %579 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1292) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1293 = getelementptr i8, ptr %add.ptr.i1292, i32 4
  %580 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1293) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %581 = zext i32 %580 to i64
  %582 = zext i32 %579 to i64
  %583 = shl nuw i64 %582, 32
  %584 = or i64 %583, %581
  %585 = tail call i64 @llvm.bswap.i64(i64 %584) #14
  %rx_ppp1 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 43
  %586 = ptrtoint ptr %rx_ppp1 to i32
  call void @__asan_store8_noabort(i32 %586)
  store i64 %585, ptr %rx_ppp1, align 8
  %587 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %587)
  %588 = load i32, ptr %chip, align 8
  %589 = and i32 %588, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %589)
  %cmp.i1294.not = icmp eq i32 %589, 64
  %add675 = add i32 %mul, 132576
  %add679 = add i32 %mul4, 198112
  %cond681 = select i1 %cmp.i1294.not, i32 %add675, i32 %add679
  %590 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %590)
  %591 = load ptr, ptr %adap, align 128
  %add.ptr.i1296 = getelementptr i8, ptr %591, i32 %cond681
  %592 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1296) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1297 = getelementptr i8, ptr %add.ptr.i1296, i32 4
  %593 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1297) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %594 = zext i32 %593 to i64
  %595 = zext i32 %592 to i64
  %596 = shl nuw i64 %595, 32
  %597 = or i64 %596, %594
  %598 = tail call i64 @llvm.bswap.i64(i64 %597) #14
  %rx_ppp2 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 44
  %599 = ptrtoint ptr %rx_ppp2 to i32
  call void @__asan_store8_noabort(i32 %599)
  store i64 %598, ptr %rx_ppp2, align 8
  %600 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %600)
  %601 = load i32, ptr %chip, align 8
  %602 = and i32 %601, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %602)
  %cmp.i1298.not = icmp eq i32 %602, 64
  %add690 = add i32 %mul, 132584
  %add694 = add i32 %mul4, 198120
  %cond696 = select i1 %cmp.i1298.not, i32 %add690, i32 %add694
  %603 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %603)
  %604 = load ptr, ptr %adap, align 128
  %add.ptr.i1300 = getelementptr i8, ptr %604, i32 %cond696
  %605 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1300) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1301 = getelementptr i8, ptr %add.ptr.i1300, i32 4
  %606 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1301) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %607 = zext i32 %606 to i64
  %608 = zext i32 %605 to i64
  %609 = shl nuw i64 %608, 32
  %610 = or i64 %609, %607
  %611 = tail call i64 @llvm.bswap.i64(i64 %610) #14
  %rx_ppp3 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 45
  %612 = ptrtoint ptr %rx_ppp3 to i32
  call void @__asan_store8_noabort(i32 %612)
  store i64 %611, ptr %rx_ppp3, align 8
  %613 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %613)
  %614 = load i32, ptr %chip, align 8
  %615 = and i32 %614, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %615)
  %cmp.i1302.not = icmp eq i32 %615, 64
  %add705 = add i32 %mul, 132592
  %add709 = add i32 %mul4, 198128
  %cond711 = select i1 %cmp.i1302.not, i32 %add705, i32 %add709
  %616 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %616)
  %617 = load ptr, ptr %adap, align 128
  %add.ptr.i1304 = getelementptr i8, ptr %617, i32 %cond711
  %618 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1304) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1305 = getelementptr i8, ptr %add.ptr.i1304, i32 4
  %619 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1305) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %620 = zext i32 %619 to i64
  %621 = zext i32 %618 to i64
  %622 = shl nuw i64 %621, 32
  %623 = or i64 %622, %620
  %624 = tail call i64 @llvm.bswap.i64(i64 %623) #14
  %rx_ppp4 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 46
  %625 = ptrtoint ptr %rx_ppp4 to i32
  call void @__asan_store8_noabort(i32 %625)
  store i64 %624, ptr %rx_ppp4, align 8
  %626 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %626)
  %627 = load i32, ptr %chip, align 8
  %628 = and i32 %627, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %628)
  %cmp.i1306.not = icmp eq i32 %628, 64
  %add720 = add i32 %mul, 132600
  %add724 = add i32 %mul4, 198136
  %cond726 = select i1 %cmp.i1306.not, i32 %add720, i32 %add724
  %629 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %629)
  %630 = load ptr, ptr %adap, align 128
  %add.ptr.i1308 = getelementptr i8, ptr %630, i32 %cond726
  %631 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1308) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1309 = getelementptr i8, ptr %add.ptr.i1308, i32 4
  %632 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1309) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %633 = zext i32 %632 to i64
  %634 = zext i32 %631 to i64
  %635 = shl nuw i64 %634, 32
  %636 = or i64 %635, %633
  %637 = tail call i64 @llvm.bswap.i64(i64 %636) #14
  %rx_ppp5 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 47
  %638 = ptrtoint ptr %rx_ppp5 to i32
  call void @__asan_store8_noabort(i32 %638)
  store i64 %637, ptr %rx_ppp5, align 8
  %639 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %639)
  %640 = load i32, ptr %chip, align 8
  %641 = and i32 %640, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %641)
  %cmp.i1310.not = icmp eq i32 %641, 64
  %add735 = add i32 %mul, 132608
  %add739 = add i32 %mul4, 198144
  %cond741 = select i1 %cmp.i1310.not, i32 %add735, i32 %add739
  %642 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %642)
  %643 = load ptr, ptr %adap, align 128
  %add.ptr.i1312 = getelementptr i8, ptr %643, i32 %cond741
  %644 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1312) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1313 = getelementptr i8, ptr %add.ptr.i1312, i32 4
  %645 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1313) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %646 = zext i32 %645 to i64
  %647 = zext i32 %644 to i64
  %648 = shl nuw i64 %647, 32
  %649 = or i64 %648, %646
  %650 = tail call i64 @llvm.bswap.i64(i64 %649) #14
  %rx_ppp6 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 48
  %651 = ptrtoint ptr %rx_ppp6 to i32
  call void @__asan_store8_noabort(i32 %651)
  store i64 %650, ptr %rx_ppp6, align 8
  %652 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %652)
  %653 = load i32, ptr %chip, align 8
  %654 = and i32 %653, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %654)
  %cmp.i1314.not = icmp eq i32 %654, 64
  %add750 = add i32 %mul, 132616
  %add754 = add i32 %mul4, 198152
  %cond756 = select i1 %cmp.i1314.not, i32 %add750, i32 %add754
  %655 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %655)
  %656 = load ptr, ptr %adap, align 128
  %add.ptr.i1316 = getelementptr i8, ptr %656, i32 %cond756
  %657 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1316) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1317 = getelementptr i8, ptr %add.ptr.i1316, i32 4
  %658 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1317) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %659 = zext i32 %658 to i64
  %660 = zext i32 %657 to i64
  %661 = shl nuw i64 %660, 32
  %662 = or i64 %661, %659
  %663 = tail call i64 @llvm.bswap.i64(i64 %662) #14
  %rx_ppp7 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 49
  %664 = ptrtoint ptr %rx_ppp7 to i32
  call void @__asan_store8_noabort(i32 %664)
  store i64 %663, ptr %rx_ppp7, align 8
  %665 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %665)
  %666 = load i32, ptr %chip, align 8
  %667 = and i32 %666, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %667)
  %cmp762 = icmp ugt i32 %667, 64
  br i1 %cmp762, label %if.then763, label %if.end352.if.end778_crit_edge

if.end352.if.end778_crit_edge:                    ; preds = %if.end352
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end778

if.then763:                                       ; preds = %if.end352
  %and764 = and i32 %3, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and764)
  %tobool765.not = icmp eq i32 %and764, 0
  br i1 %tobool765.not, label %if.then763.if.end770_crit_edge, label %if.then766

if.then763.if.end770_crit_edge:                   ; preds = %if.then763
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end770

if.then766:                                       ; preds = %if.then763
  call void @__sanitizer_cov_trace_pc() #16
  %668 = ptrtoint ptr %rx_pause to i32
  call void @__asan_load8_noabort(i32 %668)
  %669 = load i64, ptr %rx_pause, align 8
  %670 = ptrtoint ptr %rx_frames_64 to i32
  call void @__asan_load8_noabort(i32 %670)
  %671 = load i64, ptr %rx_frames_64, align 8
  %sub769 = sub i64 %671, %669
  store i64 %sub769, ptr %rx_frames_64, align 8
  br label %if.end770

if.end770:                                        ; preds = %if.then766, %if.then763.if.end770_crit_edge
  %and771 = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and771)
  %tobool772.not = icmp eq i32 %and771, 0
  br i1 %tobool772.not, label %if.end770.if.end778_crit_edge, label %if.then773

if.end770.if.end778_crit_edge:                    ; preds = %if.end770
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end778

if.then773:                                       ; preds = %if.end770
  call void @__sanitizer_cov_trace_pc() #16
  %672 = ptrtoint ptr %rx_pause to i32
  call void @__asan_load8_noabort(i32 %672)
  %673 = load i64, ptr %rx_pause, align 8
  %674 = ptrtoint ptr %rx_mcast_frames to i32
  call void @__asan_load8_noabort(i32 %674)
  %675 = load i64, ptr %rx_mcast_frames, align 8
  %sub776 = sub i64 %675, %673
  store i64 %sub776, ptr %rx_mcast_frames, align 8
  br label %if.end778

if.end778:                                        ; preds = %if.then773, %if.end770.if.end778_crit_edge, %if.end352.if.end778_crit_edge
  %and779 = and i32 %call, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and779)
  %tobool780.not = icmp eq i32 %and779, 0
  br i1 %tobool780.not, label %if.end778.cond.end784_crit_edge, label %cond.true781

if.end778.cond.end784_crit_edge:                  ; preds = %if.end778
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end784

cond.true781:                                     ; preds = %if.end778
  call void @__sanitizer_cov_trace_pc() #16
  %676 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %676)
  %677 = load ptr, ptr %adap, align 128
  %add.ptr.i1318 = getelementptr i8, ptr %677, i32 38464
  %678 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1318) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1319 = getelementptr i8, ptr %677, i32 38468
  %679 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1319) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %680 = zext i32 %679 to i64
  %681 = zext i32 %678 to i64
  %682 = shl nuw i64 %681, 32
  %683 = or i64 %682, %680
  %684 = tail call i64 @llvm.bswap.i64(i64 %683) #14
  br label %cond.end784

cond.end784:                                      ; preds = %cond.true781, %if.end778.cond.end784_crit_edge
  %cond785 = phi i64 [ %684, %cond.true781 ], [ 0, %if.end778.cond.end784_crit_edge ]
  %rx_ovflow0 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 50
  %685 = ptrtoint ptr %rx_ovflow0 to i32
  call void @__asan_store8_noabort(i32 %685)
  store i64 %cond785, ptr %rx_ovflow0, align 8
  %and786 = and i32 %call, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and786)
  %tobool787.not = icmp eq i32 %and786, 0
  br i1 %tobool787.not, label %cond.end784.cond.end791_crit_edge, label %cond.true788

cond.end784.cond.end791_crit_edge:                ; preds = %cond.end784
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end791

cond.true788:                                     ; preds = %cond.end784
  call void @__sanitizer_cov_trace_pc() #16
  %686 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %686)
  %687 = load ptr, ptr %adap, align 128
  %add.ptr.i1320 = getelementptr i8, ptr %687, i32 38472
  %688 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1320) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1321 = getelementptr i8, ptr %687, i32 38476
  %689 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1321) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %690 = zext i32 %689 to i64
  %691 = zext i32 %688 to i64
  %692 = shl nuw i64 %691, 32
  %693 = or i64 %692, %690
  %694 = tail call i64 @llvm.bswap.i64(i64 %693) #14
  br label %cond.end791

cond.end791:                                      ; preds = %cond.true788, %cond.end784.cond.end791_crit_edge
  %cond792 = phi i64 [ %694, %cond.true788 ], [ 0, %cond.end784.cond.end791_crit_edge ]
  %rx_ovflow1 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 51
  %695 = ptrtoint ptr %rx_ovflow1 to i32
  call void @__asan_store8_noabort(i32 %695)
  store i64 %cond792, ptr %rx_ovflow1, align 8
  %and793 = and i32 %call, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and793)
  %tobool794.not = icmp eq i32 %and793, 0
  br i1 %tobool794.not, label %cond.end791.cond.end798_crit_edge, label %cond.true795

cond.end791.cond.end798_crit_edge:                ; preds = %cond.end791
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end798

cond.true795:                                     ; preds = %cond.end791
  call void @__sanitizer_cov_trace_pc() #16
  %696 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %696)
  %697 = load ptr, ptr %adap, align 128
  %add.ptr.i1322 = getelementptr i8, ptr %697, i32 38480
  %698 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1322) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1323 = getelementptr i8, ptr %697, i32 38484
  %699 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1323) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %700 = zext i32 %699 to i64
  %701 = zext i32 %698 to i64
  %702 = shl nuw i64 %701, 32
  %703 = or i64 %702, %700
  %704 = tail call i64 @llvm.bswap.i64(i64 %703) #14
  br label %cond.end798

cond.end798:                                      ; preds = %cond.true795, %cond.end791.cond.end798_crit_edge
  %cond799 = phi i64 [ %704, %cond.true795 ], [ 0, %cond.end791.cond.end798_crit_edge ]
  %rx_ovflow2 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 52
  %705 = ptrtoint ptr %rx_ovflow2 to i32
  call void @__asan_store8_noabort(i32 %705)
  store i64 %cond799, ptr %rx_ovflow2, align 8
  %and800 = and i32 %call, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and800)
  %tobool801.not = icmp eq i32 %and800, 0
  br i1 %tobool801.not, label %cond.end798.cond.end805_crit_edge, label %cond.true802

cond.end798.cond.end805_crit_edge:                ; preds = %cond.end798
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end805

cond.true802:                                     ; preds = %cond.end798
  call void @__sanitizer_cov_trace_pc() #16
  %706 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %706)
  %707 = load ptr, ptr %adap, align 128
  %add.ptr.i1324 = getelementptr i8, ptr %707, i32 38488
  %708 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1324) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1325 = getelementptr i8, ptr %707, i32 38492
  %709 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1325) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %710 = zext i32 %709 to i64
  %711 = zext i32 %708 to i64
  %712 = shl nuw i64 %711, 32
  %713 = or i64 %712, %710
  %714 = tail call i64 @llvm.bswap.i64(i64 %713) #14
  br label %cond.end805

cond.end805:                                      ; preds = %cond.true802, %cond.end798.cond.end805_crit_edge
  %cond806 = phi i64 [ %714, %cond.true802 ], [ 0, %cond.end798.cond.end805_crit_edge ]
  %rx_ovflow3 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 53
  %715 = ptrtoint ptr %rx_ovflow3 to i32
  call void @__asan_store8_noabort(i32 %715)
  store i64 %cond806, ptr %rx_ovflow3, align 8
  br i1 %tobool780.not, label %cond.end805.cond.end812_crit_edge, label %cond.true809

cond.end805.cond.end812_crit_edge:                ; preds = %cond.end805
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end812

cond.true809:                                     ; preds = %cond.end805
  call void @__sanitizer_cov_trace_pc() #16
  %716 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %716)
  %717 = load ptr, ptr %adap, align 128
  %add.ptr.i1326 = getelementptr i8, ptr %717, i32 38528
  %718 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1326) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1327 = getelementptr i8, ptr %717, i32 38532
  %719 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1327) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %720 = zext i32 %719 to i64
  %721 = zext i32 %718 to i64
  %722 = shl nuw i64 %721, 32
  %723 = or i64 %722, %720
  %724 = tail call i64 @llvm.bswap.i64(i64 %723) #14
  br label %cond.end812

cond.end812:                                      ; preds = %cond.true809, %cond.end805.cond.end812_crit_edge
  %cond813 = phi i64 [ %724, %cond.true809 ], [ 0, %cond.end805.cond.end812_crit_edge ]
  %rx_trunc0 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 54
  %725 = ptrtoint ptr %rx_trunc0 to i32
  call void @__asan_store8_noabort(i32 %725)
  store i64 %cond813, ptr %rx_trunc0, align 8
  br i1 %tobool787.not, label %cond.end812.cond.end819_crit_edge, label %cond.true816

cond.end812.cond.end819_crit_edge:                ; preds = %cond.end812
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end819

cond.true816:                                     ; preds = %cond.end812
  call void @__sanitizer_cov_trace_pc() #16
  %726 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %726)
  %727 = load ptr, ptr %adap, align 128
  %add.ptr.i1328 = getelementptr i8, ptr %727, i32 38536
  %728 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1328) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1329 = getelementptr i8, ptr %727, i32 38540
  %729 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1329) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %730 = zext i32 %729 to i64
  %731 = zext i32 %728 to i64
  %732 = shl nuw i64 %731, 32
  %733 = or i64 %732, %730
  %734 = tail call i64 @llvm.bswap.i64(i64 %733) #14
  br label %cond.end819

cond.end819:                                      ; preds = %cond.true816, %cond.end812.cond.end819_crit_edge
  %cond820 = phi i64 [ %734, %cond.true816 ], [ 0, %cond.end812.cond.end819_crit_edge ]
  %rx_trunc1 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 55
  %735 = ptrtoint ptr %rx_trunc1 to i32
  call void @__asan_store8_noabort(i32 %735)
  store i64 %cond820, ptr %rx_trunc1, align 8
  br i1 %tobool794.not, label %cond.end819.cond.end826_crit_edge, label %cond.true823

cond.end819.cond.end826_crit_edge:                ; preds = %cond.end819
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end826

cond.true823:                                     ; preds = %cond.end819
  call void @__sanitizer_cov_trace_pc() #16
  %736 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %736)
  %737 = load ptr, ptr %adap, align 128
  %add.ptr.i1330 = getelementptr i8, ptr %737, i32 38544
  %738 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1330) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1331 = getelementptr i8, ptr %737, i32 38548
  %739 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1331) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %740 = zext i32 %739 to i64
  %741 = zext i32 %738 to i64
  %742 = shl nuw i64 %741, 32
  %743 = or i64 %742, %740
  %744 = tail call i64 @llvm.bswap.i64(i64 %743) #14
  br label %cond.end826

cond.end826:                                      ; preds = %cond.true823, %cond.end819.cond.end826_crit_edge
  %cond827 = phi i64 [ %744, %cond.true823 ], [ 0, %cond.end819.cond.end826_crit_edge ]
  %rx_trunc2 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 56
  %745 = ptrtoint ptr %rx_trunc2 to i32
  call void @__asan_store8_noabort(i32 %745)
  store i64 %cond827, ptr %rx_trunc2, align 8
  br i1 %tobool801.not, label %cond.end826.cond.end833_crit_edge, label %cond.true830

cond.end826.cond.end833_crit_edge:                ; preds = %cond.end826
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end833

cond.true830:                                     ; preds = %cond.end826
  call void @__sanitizer_cov_trace_pc() #16
  %746 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %746)
  %747 = load ptr, ptr %adap, align 128
  %add.ptr.i1332 = getelementptr i8, ptr %747, i32 38552
  %748 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i1332) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i1333 = getelementptr i8, ptr %747, i32 38556
  %749 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i1333) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %750 = zext i32 %749 to i64
  %751 = zext i32 %748 to i64
  %752 = shl nuw i64 %751, 32
  %753 = or i64 %752, %750
  %754 = tail call i64 @llvm.bswap.i64(i64 %753) #14
  br label %cond.end833

cond.end833:                                      ; preds = %cond.true830, %cond.end826.cond.end833_crit_edge
  %cond834 = phi i64 [ %754, %cond.true830 ], [ 0, %cond.end826.cond.end833_crit_edge ]
  %rx_trunc3 = getelementptr inbounds %struct.port_stats, ptr %p, i32 0, i32 57
  %755 = ptrtoint ptr %rx_trunc3 to i32
  call void @__asan_store8_noabort(i32 %755)
  store i64 %cond834, ptr %rx_trunc3, align 8
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_lb_stats(ptr noundef %adap, i32 noundef %idx, ptr noundef writeonly %p) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @t4_get_mps_bg_map(ptr noundef %adap, i32 noundef %idx)
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  %mul = shl i32 %idx, 13
  %add2 = add i32 %mul, 132288
  %mul3 = shl i32 %idx, 14
  %add5 = add i32 %mul3, 197824
  %cond = select i1 %cmp.i.not, i32 %add2, i32 %add5
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 %cond
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i = getelementptr i8, ptr %add.ptr.i, i32 4
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %7 = zext i32 %6 to i64
  %8 = zext i32 %5 to i64
  %9 = shl nuw i64 %8, 32
  %10 = or i64 %9, %7
  %11 = tail call i64 @llvm.bswap.i64(i64 %10) #14
  %12 = ptrtoint ptr %p to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %p, align 8
  %13 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %chip, align 8
  %15 = and i32 %14, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %15)
  %cmp.i349.not = icmp eq i32 %15, 64
  %add14 = add i32 %mul, 132296
  %add18 = add i32 %mul3, 197832
  %cond20 = select i1 %cmp.i349.not, i32 %add14, i32 %add18
  %16 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %adap, align 128
  %add.ptr.i351 = getelementptr i8, ptr %17, i32 %cond20
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i351) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i352 = getelementptr i8, ptr %add.ptr.i351, i32 4
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i352) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %20 = zext i32 %19 to i64
  %21 = zext i32 %18 to i64
  %22 = shl nuw i64 %21, 32
  %23 = or i64 %22, %20
  %24 = tail call i64 @llvm.bswap.i64(i64 %23) #14
  %frames = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 1
  %25 = ptrtoint ptr %frames to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %frames, align 8
  %26 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %chip, align 8
  %28 = and i32 %27, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %28)
  %cmp.i353.not = icmp eq i32 %28, 64
  %add29 = add i32 %mul, 132304
  %add33 = add i32 %mul3, 197840
  %cond35 = select i1 %cmp.i353.not, i32 %add29, i32 %add33
  %29 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %adap, align 128
  %add.ptr.i355 = getelementptr i8, ptr %30, i32 %cond35
  %31 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i355) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i356 = getelementptr i8, ptr %add.ptr.i355, i32 4
  %32 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i356) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %33 = zext i32 %32 to i64
  %34 = zext i32 %31 to i64
  %35 = shl nuw i64 %34, 32
  %36 = or i64 %35, %33
  %37 = tail call i64 @llvm.bswap.i64(i64 %36) #14
  %bcast_frames = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 2
  %38 = ptrtoint ptr %bcast_frames to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %bcast_frames, align 8
  %39 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %chip, align 8
  %41 = and i32 %40, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %41)
  %cmp.i357.not = icmp eq i32 %41, 64
  %add44 = add i32 %mul, 132312
  %add48 = add i32 %mul3, 197848
  %cond50 = select i1 %cmp.i357.not, i32 %add44, i32 %add48
  %42 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %adap, align 128
  %add.ptr.i359 = getelementptr i8, ptr %43, i32 %cond50
  %44 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i359) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i360 = getelementptr i8, ptr %add.ptr.i359, i32 4
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i360) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %46 = zext i32 %45 to i64
  %47 = zext i32 %44 to i64
  %48 = shl nuw i64 %47, 32
  %49 = or i64 %48, %46
  %50 = tail call i64 @llvm.bswap.i64(i64 %49) #14
  %mcast_frames = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 3
  %51 = ptrtoint ptr %mcast_frames to i32
  call void @__asan_store8_noabort(i32 %51)
  store i64 %50, ptr %mcast_frames, align 8
  %52 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %chip, align 8
  %54 = and i32 %53, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %54)
  %cmp.i361.not = icmp eq i32 %54, 64
  %add59 = add i32 %mul, 132320
  %add63 = add i32 %mul3, 197856
  %cond65 = select i1 %cmp.i361.not, i32 %add59, i32 %add63
  %55 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %adap, align 128
  %add.ptr.i363 = getelementptr i8, ptr %56, i32 %cond65
  %57 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i363) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i364 = getelementptr i8, ptr %add.ptr.i363, i32 4
  %58 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i364) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %59 = zext i32 %58 to i64
  %60 = zext i32 %57 to i64
  %61 = shl nuw i64 %60, 32
  %62 = or i64 %61, %59
  %63 = tail call i64 @llvm.bswap.i64(i64 %62) #14
  %ucast_frames = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 4
  %64 = ptrtoint ptr %ucast_frames to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %63, ptr %ucast_frames, align 8
  %65 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %chip, align 8
  %67 = and i32 %66, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %67)
  %cmp.i365.not = icmp eq i32 %67, 64
  %add74 = add i32 %mul, 132328
  %add78 = add i32 %mul3, 197864
  %cond80 = select i1 %cmp.i365.not, i32 %add74, i32 %add78
  %68 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %adap, align 128
  %add.ptr.i367 = getelementptr i8, ptr %69, i32 %cond80
  %70 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i367) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i368 = getelementptr i8, ptr %add.ptr.i367, i32 4
  %71 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i368) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %72 = zext i32 %71 to i64
  %73 = zext i32 %70 to i64
  %74 = shl nuw i64 %73, 32
  %75 = or i64 %74, %72
  %76 = tail call i64 @llvm.bswap.i64(i64 %75) #14
  %error_frames = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 5
  %77 = ptrtoint ptr %error_frames to i32
  call void @__asan_store8_noabort(i32 %77)
  store i64 %76, ptr %error_frames, align 8
  %78 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %chip, align 8
  %80 = and i32 %79, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %80)
  %cmp.i369.not = icmp eq i32 %80, 64
  %add89 = add i32 %mul, 132336
  %add93 = add i32 %mul3, 197872
  %cond95 = select i1 %cmp.i369.not, i32 %add89, i32 %add93
  %81 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %adap, align 128
  %add.ptr.i371 = getelementptr i8, ptr %82, i32 %cond95
  %83 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i371) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i372 = getelementptr i8, ptr %add.ptr.i371, i32 4
  %84 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i372) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %85 = zext i32 %84 to i64
  %86 = zext i32 %83 to i64
  %87 = shl nuw i64 %86, 32
  %88 = or i64 %87, %85
  %89 = tail call i64 @llvm.bswap.i64(i64 %88) #14
  %frames_64 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 6
  %90 = ptrtoint ptr %frames_64 to i32
  call void @__asan_store8_noabort(i32 %90)
  store i64 %89, ptr %frames_64, align 8
  %91 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %chip, align 8
  %93 = and i32 %92, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %93)
  %cmp.i373.not = icmp eq i32 %93, 64
  %add104 = add i32 %mul, 132344
  %add108 = add i32 %mul3, 197880
  %cond110 = select i1 %cmp.i373.not, i32 %add104, i32 %add108
  %94 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %adap, align 128
  %add.ptr.i375 = getelementptr i8, ptr %95, i32 %cond110
  %96 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i375) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i376 = getelementptr i8, ptr %add.ptr.i375, i32 4
  %97 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i376) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %98 = zext i32 %97 to i64
  %99 = zext i32 %96 to i64
  %100 = shl nuw i64 %99, 32
  %101 = or i64 %100, %98
  %102 = tail call i64 @llvm.bswap.i64(i64 %101) #14
  %frames_65_127 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 7
  %103 = ptrtoint ptr %frames_65_127 to i32
  call void @__asan_store8_noabort(i32 %103)
  store i64 %102, ptr %frames_65_127, align 8
  %104 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load i32, ptr %chip, align 8
  %106 = and i32 %105, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %106)
  %cmp.i377.not = icmp eq i32 %106, 64
  %add119 = add i32 %mul, 132352
  %add123 = add i32 %mul3, 197888
  %cond125 = select i1 %cmp.i377.not, i32 %add119, i32 %add123
  %107 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %adap, align 128
  %add.ptr.i379 = getelementptr i8, ptr %108, i32 %cond125
  %109 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i379) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i380 = getelementptr i8, ptr %add.ptr.i379, i32 4
  %110 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i380) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %111 = zext i32 %110 to i64
  %112 = zext i32 %109 to i64
  %113 = shl nuw i64 %112, 32
  %114 = or i64 %113, %111
  %115 = tail call i64 @llvm.bswap.i64(i64 %114) #14
  %frames_128_255 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 8
  %116 = ptrtoint ptr %frames_128_255 to i32
  call void @__asan_store8_noabort(i32 %116)
  store i64 %115, ptr %frames_128_255, align 8
  %117 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %chip, align 8
  %119 = and i32 %118, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %119)
  %cmp.i381.not = icmp eq i32 %119, 64
  %add134 = add i32 %mul, 132360
  %add138 = add i32 %mul3, 197896
  %cond140 = select i1 %cmp.i381.not, i32 %add134, i32 %add138
  %120 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %adap, align 128
  %add.ptr.i383 = getelementptr i8, ptr %121, i32 %cond140
  %122 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i383) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i384 = getelementptr i8, ptr %add.ptr.i383, i32 4
  %123 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i384) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %124 = zext i32 %123 to i64
  %125 = zext i32 %122 to i64
  %126 = shl nuw i64 %125, 32
  %127 = or i64 %126, %124
  %128 = tail call i64 @llvm.bswap.i64(i64 %127) #14
  %frames_256_511 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 9
  %129 = ptrtoint ptr %frames_256_511 to i32
  call void @__asan_store8_noabort(i32 %129)
  store i64 %128, ptr %frames_256_511, align 8
  %130 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %chip, align 8
  %132 = and i32 %131, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %132)
  %cmp.i385.not = icmp eq i32 %132, 64
  %add149 = add i32 %mul, 132368
  %add153 = add i32 %mul3, 197904
  %cond155 = select i1 %cmp.i385.not, i32 %add149, i32 %add153
  %133 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %adap, align 128
  %add.ptr.i387 = getelementptr i8, ptr %134, i32 %cond155
  %135 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i387) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i388 = getelementptr i8, ptr %add.ptr.i387, i32 4
  %136 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i388) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %137 = zext i32 %136 to i64
  %138 = zext i32 %135 to i64
  %139 = shl nuw i64 %138, 32
  %140 = or i64 %139, %137
  %141 = tail call i64 @llvm.bswap.i64(i64 %140) #14
  %frames_512_1023 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 10
  %142 = ptrtoint ptr %frames_512_1023 to i32
  call void @__asan_store8_noabort(i32 %142)
  store i64 %141, ptr %frames_512_1023, align 8
  %143 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load i32, ptr %chip, align 8
  %145 = and i32 %144, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %145)
  %cmp.i389.not = icmp eq i32 %145, 64
  %add164 = add i32 %mul, 132376
  %add168 = add i32 %mul3, 197912
  %cond170 = select i1 %cmp.i389.not, i32 %add164, i32 %add168
  %146 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %adap, align 128
  %add.ptr.i391 = getelementptr i8, ptr %147, i32 %cond170
  %148 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i391) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i392 = getelementptr i8, ptr %add.ptr.i391, i32 4
  %149 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i392) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %150 = zext i32 %149 to i64
  %151 = zext i32 %148 to i64
  %152 = shl nuw i64 %151, 32
  %153 = or i64 %152, %150
  %154 = tail call i64 @llvm.bswap.i64(i64 %153) #14
  %frames_1024_1518 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 11
  %155 = ptrtoint ptr %frames_1024_1518 to i32
  call void @__asan_store8_noabort(i32 %155)
  store i64 %154, ptr %frames_1024_1518, align 8
  %156 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %chip, align 8
  %158 = and i32 %157, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %158)
  %cmp.i393.not = icmp eq i32 %158, 64
  %add179 = add i32 %mul, 132384
  %add183 = add i32 %mul3, 197920
  %cond185 = select i1 %cmp.i393.not, i32 %add179, i32 %add183
  %159 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load ptr, ptr %adap, align 128
  %add.ptr.i395 = getelementptr i8, ptr %160, i32 %cond185
  %161 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i395) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i396 = getelementptr i8, ptr %add.ptr.i395, i32 4
  %162 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i396) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %163 = zext i32 %162 to i64
  %164 = zext i32 %161 to i64
  %165 = shl nuw i64 %164, 32
  %166 = or i64 %165, %163
  %167 = tail call i64 @llvm.bswap.i64(i64 %166) #14
  %frames_1519_max = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 12
  %168 = ptrtoint ptr %frames_1519_max to i32
  call void @__asan_store8_noabort(i32 %168)
  store i64 %167, ptr %frames_1519_max, align 8
  %169 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %chip, align 8
  %171 = and i32 %170, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %171)
  %cmp.i397.not = icmp eq i32 %171, 64
  %add194 = add i32 %mul, 132392
  %add198 = add i32 %mul3, 197928
  %cond200 = select i1 %cmp.i397.not, i32 %add194, i32 %add198
  %172 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %adap, align 128
  %add.ptr.i399 = getelementptr i8, ptr %173, i32 %cond200
  %174 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i399) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i400 = getelementptr i8, ptr %add.ptr.i399, i32 4
  %175 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i400) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %176 = zext i32 %175 to i64
  %177 = zext i32 %174 to i64
  %178 = shl nuw i64 %177, 32
  %179 = or i64 %178, %176
  %180 = tail call i64 @llvm.bswap.i64(i64 %179) #14
  %drop = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 13
  %181 = ptrtoint ptr %drop to i32
  call void @__asan_store8_noabort(i32 %181)
  store i64 %180, ptr %drop, align 8
  %and = and i32 %call, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool202.not = icmp eq i32 %and, 0
  br i1 %tobool202.not, label %entry.cond.end206_crit_edge, label %cond.true203

entry.cond.end206_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end206

cond.true203:                                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %182 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %adap, align 128
  %add.ptr.i401 = getelementptr i8, ptr %183, i32 38496
  %184 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i401) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i402 = getelementptr i8, ptr %183, i32 38500
  %185 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i402) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %186 = zext i32 %185 to i64
  %187 = zext i32 %184 to i64
  %188 = shl nuw i64 %187, 32
  %189 = or i64 %188, %186
  %190 = tail call i64 @llvm.bswap.i64(i64 %189) #14
  br label %cond.end206

cond.end206:                                      ; preds = %cond.true203, %entry.cond.end206_crit_edge
  %cond207 = phi i64 [ %190, %cond.true203 ], [ 0, %entry.cond.end206_crit_edge ]
  %ovflow0 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 14
  %191 = ptrtoint ptr %ovflow0 to i32
  call void @__asan_store8_noabort(i32 %191)
  store i64 %cond207, ptr %ovflow0, align 8
  %and208 = and i32 %call, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and208)
  %tobool209.not = icmp eq i32 %and208, 0
  br i1 %tobool209.not, label %cond.end206.cond.end213_crit_edge, label %cond.true210

cond.end206.cond.end213_crit_edge:                ; preds = %cond.end206
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end213

cond.true210:                                     ; preds = %cond.end206
  call void @__sanitizer_cov_trace_pc() #16
  %192 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load ptr, ptr %adap, align 128
  %add.ptr.i403 = getelementptr i8, ptr %193, i32 38504
  %194 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i403) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i404 = getelementptr i8, ptr %193, i32 38508
  %195 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i404) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %196 = zext i32 %195 to i64
  %197 = zext i32 %194 to i64
  %198 = shl nuw i64 %197, 32
  %199 = or i64 %198, %196
  %200 = tail call i64 @llvm.bswap.i64(i64 %199) #14
  br label %cond.end213

cond.end213:                                      ; preds = %cond.true210, %cond.end206.cond.end213_crit_edge
  %cond214 = phi i64 [ %200, %cond.true210 ], [ 0, %cond.end206.cond.end213_crit_edge ]
  %ovflow1 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 15
  %201 = ptrtoint ptr %ovflow1 to i32
  call void @__asan_store8_noabort(i32 %201)
  store i64 %cond214, ptr %ovflow1, align 8
  %and215 = and i32 %call, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and215)
  %tobool216.not = icmp eq i32 %and215, 0
  br i1 %tobool216.not, label %cond.end213.cond.end220_crit_edge, label %cond.true217

cond.end213.cond.end220_crit_edge:                ; preds = %cond.end213
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end220

cond.true217:                                     ; preds = %cond.end213
  call void @__sanitizer_cov_trace_pc() #16
  %202 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %adap, align 128
  %add.ptr.i405 = getelementptr i8, ptr %203, i32 38512
  %204 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i405) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i406 = getelementptr i8, ptr %203, i32 38516
  %205 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i406) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %206 = zext i32 %205 to i64
  %207 = zext i32 %204 to i64
  %208 = shl nuw i64 %207, 32
  %209 = or i64 %208, %206
  %210 = tail call i64 @llvm.bswap.i64(i64 %209) #14
  br label %cond.end220

cond.end220:                                      ; preds = %cond.true217, %cond.end213.cond.end220_crit_edge
  %cond221 = phi i64 [ %210, %cond.true217 ], [ 0, %cond.end213.cond.end220_crit_edge ]
  %ovflow2 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 16
  %211 = ptrtoint ptr %ovflow2 to i32
  call void @__asan_store8_noabort(i32 %211)
  store i64 %cond221, ptr %ovflow2, align 8
  %and222 = and i32 %call, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and222)
  %tobool223.not = icmp eq i32 %and222, 0
  br i1 %tobool223.not, label %cond.end220.cond.end227_crit_edge, label %cond.true224

cond.end220.cond.end227_crit_edge:                ; preds = %cond.end220
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end227

cond.true224:                                     ; preds = %cond.end220
  call void @__sanitizer_cov_trace_pc() #16
  %212 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load ptr, ptr %adap, align 128
  %add.ptr.i407 = getelementptr i8, ptr %213, i32 38520
  %214 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i407) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i408 = getelementptr i8, ptr %213, i32 38524
  %215 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i408) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %216 = zext i32 %215 to i64
  %217 = zext i32 %214 to i64
  %218 = shl nuw i64 %217, 32
  %219 = or i64 %218, %216
  %220 = tail call i64 @llvm.bswap.i64(i64 %219) #14
  br label %cond.end227

cond.end227:                                      ; preds = %cond.true224, %cond.end220.cond.end227_crit_edge
  %cond228 = phi i64 [ %220, %cond.true224 ], [ 0, %cond.end220.cond.end227_crit_edge ]
  %ovflow3 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 17
  %221 = ptrtoint ptr %ovflow3 to i32
  call void @__asan_store8_noabort(i32 %221)
  store i64 %cond228, ptr %ovflow3, align 8
  br i1 %tobool202.not, label %cond.end227.cond.end234_crit_edge, label %cond.true231

cond.end227.cond.end234_crit_edge:                ; preds = %cond.end227
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end234

cond.true231:                                     ; preds = %cond.end227
  call void @__sanitizer_cov_trace_pc() #16
  %222 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %222)
  %223 = load ptr, ptr %adap, align 128
  %add.ptr.i409 = getelementptr i8, ptr %223, i32 38560
  %224 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i409) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i410 = getelementptr i8, ptr %223, i32 38564
  %225 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i410) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %226 = zext i32 %225 to i64
  %227 = zext i32 %224 to i64
  %228 = shl nuw i64 %227, 32
  %229 = or i64 %228, %226
  %230 = tail call i64 @llvm.bswap.i64(i64 %229) #14
  br label %cond.end234

cond.end234:                                      ; preds = %cond.true231, %cond.end227.cond.end234_crit_edge
  %cond235 = phi i64 [ %230, %cond.true231 ], [ 0, %cond.end227.cond.end234_crit_edge ]
  %trunc0 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 18
  %231 = ptrtoint ptr %trunc0 to i32
  call void @__asan_store8_noabort(i32 %231)
  store i64 %cond235, ptr %trunc0, align 8
  br i1 %tobool209.not, label %cond.end234.cond.end241_crit_edge, label %cond.true238

cond.end234.cond.end241_crit_edge:                ; preds = %cond.end234
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end241

cond.true238:                                     ; preds = %cond.end234
  call void @__sanitizer_cov_trace_pc() #16
  %232 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %232)
  %233 = load ptr, ptr %adap, align 128
  %add.ptr.i411 = getelementptr i8, ptr %233, i32 38568
  %234 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i411) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i412 = getelementptr i8, ptr %233, i32 38572
  %235 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i412) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %236 = zext i32 %235 to i64
  %237 = zext i32 %234 to i64
  %238 = shl nuw i64 %237, 32
  %239 = or i64 %238, %236
  %240 = tail call i64 @llvm.bswap.i64(i64 %239) #14
  br label %cond.end241

cond.end241:                                      ; preds = %cond.true238, %cond.end234.cond.end241_crit_edge
  %cond242 = phi i64 [ %240, %cond.true238 ], [ 0, %cond.end234.cond.end241_crit_edge ]
  %trunc1 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 19
  %241 = ptrtoint ptr %trunc1 to i32
  call void @__asan_store8_noabort(i32 %241)
  store i64 %cond242, ptr %trunc1, align 8
  br i1 %tobool216.not, label %cond.end241.cond.end248_crit_edge, label %cond.true245

cond.end241.cond.end248_crit_edge:                ; preds = %cond.end241
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end248

cond.true245:                                     ; preds = %cond.end241
  call void @__sanitizer_cov_trace_pc() #16
  %242 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %adap, align 128
  %add.ptr.i413 = getelementptr i8, ptr %243, i32 38576
  %244 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i413) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i414 = getelementptr i8, ptr %243, i32 38580
  %245 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i414) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %246 = zext i32 %245 to i64
  %247 = zext i32 %244 to i64
  %248 = shl nuw i64 %247, 32
  %249 = or i64 %248, %246
  %250 = tail call i64 @llvm.bswap.i64(i64 %249) #14
  br label %cond.end248

cond.end248:                                      ; preds = %cond.true245, %cond.end241.cond.end248_crit_edge
  %cond249 = phi i64 [ %250, %cond.true245 ], [ 0, %cond.end241.cond.end248_crit_edge ]
  %trunc2 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 20
  %251 = ptrtoint ptr %trunc2 to i32
  call void @__asan_store8_noabort(i32 %251)
  store i64 %cond249, ptr %trunc2, align 8
  br i1 %tobool223.not, label %cond.end248.cond.end255_crit_edge, label %cond.true252

cond.end248.cond.end255_crit_edge:                ; preds = %cond.end248
  call void @__sanitizer_cov_trace_pc() #16
  br label %cond.end255

cond.true252:                                     ; preds = %cond.end248
  call void @__sanitizer_cov_trace_pc() #16
  %252 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load ptr, ptr %adap, align 128
  %add.ptr.i415 = getelementptr i8, ptr %253, i32 38584
  %254 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i415) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i416 = getelementptr i8, ptr %253, i32 38588
  %255 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i416) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %256 = zext i32 %255 to i64
  %257 = zext i32 %254 to i64
  %258 = shl nuw i64 %257, 32
  %259 = or i64 %258, %256
  %260 = tail call i64 @llvm.bswap.i64(i64 %259) #14
  br label %cond.end255

cond.end255:                                      ; preds = %cond.true252, %cond.end248.cond.end255_crit_edge
  %cond256 = phi i64 [ %260, %cond.true252 ], [ 0, %cond.end248.cond.end255_crit_edge ]
  %trunc3 = getelementptr inbounds %struct.lb_port_stats, ptr %p, i32 0, i32 21
  %261 = ptrtoint ptr %trunc3 to i32
  call void @__asan_store8_noabort(i32 %261)
  store i64 %cond256, ptr %trunc3, align 8
  ret void
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync)
define dso_local void @t4_mk_filtdelwr(i32 noundef %ftid, ptr nocapture noundef writeonly %wr, i32 noundef %qid) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds i8, ptr %wr, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 120)
  %2 = ptrtoint ptr %wr to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 33554432, ptr %wr, align 8
  %len16_pkd = getelementptr inbounds %struct.fw_filter_wr, ptr %wr, i32 0, i32 1
  %3 = ptrtoint ptr %len16_pkd to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 8, ptr %len16_pkd, align 4
  %shl = shl i32 %ftid, 12
  %4 = lshr i32 %qid, 21
  %shl1 = and i32 %4, 1024
  %or = or i32 %shl1, %shl
  %tid_to_iq = getelementptr inbounds %struct.fw_filter_wr, ptr %wr, i32 0, i32 3
  %5 = ptrtoint ptr %tid_to_iq to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or, ptr %tid_to_iq, align 8
  %del_filter_to_l2tix = getelementptr inbounds %struct.fw_filter_wr, ptr %wr, i32 0, i32 4
  %6 = ptrtoint ptr %del_filter_to_l2tix to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -2147483648, ptr %del_filter_to_l2tix, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %qid)
  %cmp2 = icmp sgt i32 %qid, -1
  br i1 %cmp2, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %conv5 = trunc i32 %qid to i16
  %rx_chan_rx_rpl_iq = getelementptr inbounds %struct.fw_filter_wr, ptr %wr, i32 0, i32 9
  %7 = ptrtoint ptr %rx_chan_rx_rpl_iq to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv5, ptr %rx_chan_rx_rpl_iq, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fwaddrspace_write(ptr noundef %adap, i32 noundef %mbox, i32 noundef %addr, i32 noundef %val) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 27262977, ptr %c, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %addr, ptr %u, align 8
  %val3 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %5 = ptrtoint ptr %val3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %val, ptr %val3, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_mdio_rd(ptr noundef %adap, i32 noundef %mbox, i32 noundef %phy_addr, i32 noundef %mmd, i32 noundef %reg, ptr nocapture noundef writeonly %valp) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 29360152, ptr %c, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %shl = shl i32 %phy_addr, 8
  %or2 = or i32 %shl, %mmd
  %conv = trunc i32 %or2 to i16
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %conv, ptr %u, align 8
  %conv3 = trunc i32 %reg to i16
  %raddr = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %5 = ptrtoint ptr %raddr to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv3, ptr %raddr, align 2
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp = icmp eq i32 %call.i.i, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %rval = getelementptr inbounds %struct.fw_ldst_mdio, ptr %u, i32 0, i32 3
  %6 = ptrtoint ptr %rval to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %rval, align 2
  %8 = ptrtoint ptr %valp to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %7, ptr %valp, align 2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_mdio_wr(ptr noundef %adap, i32 noundef %mbox, i32 noundef %phy_addr, i32 noundef %mmd, i32 noundef %reg, i16 noundef zeroext %val) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 27263000, ptr %c, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %shl = shl i32 %phy_addr, 8
  %or2 = or i32 %shl, %mmd
  %conv = trunc i32 %or2 to i16
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %conv, ptr %u, align 8
  %conv3 = trunc i32 %reg to i16
  %raddr = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %5 = ptrtoint ptr %raddr to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv3, ptr %raddr, align 2
  %rval = getelementptr inbounds %struct.fw_ldst_mdio, ptr %u, i32 0, i32 3
  %6 = ptrtoint ptr %rval to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %val, ptr %rval, align 2
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_sge_decode_idma_state(ptr nocapture noundef readonly %adapter, i32 noundef %state) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %shr = lshr i32 %1, 4
  %and = and i32 %shr, 15
  %and.off = add nsw i32 %and, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and.off)
  %switch = icmp ult i32 %and.off, 3
  br i1 %switch, label %sw.epilog, label %do.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %2 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.5, i32 noundef %and) #17
  br label %cleanup

sw.epilog:                                        ; preds = %entry
  %4 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %4)
  %cmp.i.not = icmp eq i32 %4, 64
  %. = select i1 %cmp.i.not, i32 35, i32 33
  call void @__sanitizer_cov_trace_cmp4(i32 %., i32 %state)
  %cmp = icmp sgt i32 %., %state
  br i1 %cmp, label %do.end8, label %do.end13

do.end8:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %t4_sge_decode_idma_state.t5_decode.t4_sge_decode_idma_state.t4_decode = select i1 %cmp.i.not, ptr @t4_sge_decode_idma_state.t4_decode, ptr @t4_sge_decode_idma_state.t5_decode
  %pdev_dev9 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %5 = ptrtoint ptr %pdev_dev9 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev_dev9, align 16
  %arrayidx = getelementptr ptr, ptr %t4_sge_decode_idma_state.t5_decode.t4_sge_decode_idma_state.t4_decode, i32 %state
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %6, ptr noundef nonnull @.str.163, ptr noundef %8) #17
  br label %if.end15

do.end13:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev14 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %9 = ptrtoint ptr %pdev_dev14 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev_dev14, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %10, ptr noundef nonnull @.str.166, i32 noundef %state) #17
  br label %if.end15

if.end15:                                         ; preds = %do.end13, %do.end8
  %pdev_dev20 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %11 = ptrtoint ptr %pdev_dev20 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pdev_dev20, align 16
  %13 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %14, i32 4808
  %15 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %16 = tail call i32 @llvm.bswap.i32(i32 %15) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %12, ptr noundef nonnull @.str.169, i32 noundef 4808, i32 noundef %16) #17
  %17 = ptrtoint ptr %pdev_dev20 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pdev_dev20, align 16
  %19 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adapter, align 128
  %add.ptr.i.1 = getelementptr i8, ptr %20, i32 4812
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.1) #14, !srcloc !992
  %22 = tail call i32 @llvm.bswap.i32(i32 %21) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %18, ptr noundef nonnull @.str.169, i32 noundef 4812, i32 noundef %22) #17
  %23 = ptrtoint ptr %pdev_dev20 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %pdev_dev20, align 16
  %25 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %adapter, align 128
  %add.ptr.i.2 = getelementptr i8, ptr %26, i32 4776
  %27 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.2) #14, !srcloc !992
  %28 = tail call i32 @llvm.bswap.i32(i32 %27) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %24, ptr noundef nonnull @.str.169, i32 noundef 4776, i32 noundef %28) #17
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %do.end
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_sge_ctxt_flush(ptr noundef %adap, i32 noundef %mbox, i32 noundef %ctxt_type) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ctxt_type)
  %cmp = icmp eq i32 %ctxt_type, 0
  %or = select i1 %cmp, i32 29360136, i32 29360137
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %msg_ctxtflush = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %4 = ptrtoint ptr %msg_ctxtflush to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1073741824, ptr %msg_ctxtflush, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_sge_dbqtimers(ptr noundef %adap, i32 noundef %ndbqtimers, ptr nocapture noundef writeonly %dbqtimers) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  %params = alloca [7 x i32], align 4
  %vals = alloca [7 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ndbqtimers)
  %cmp45.not = icmp eq i32 %ndbqtimers, 0
  br i1 %cmp45.not, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %0 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %arrayidx.1 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 1
  %arrayidx.2 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 2
  %arrayidx.3 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 3
  %arrayidx.4 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 4
  %arrayidx.5 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 5
  %arrayidx.6 = getelementptr inbounds [7 x i32], ptr %params, i32 0, i32 6
  %incdec.ptr7.i.i = getelementptr inbounds i8, ptr %c.i.i, i32 16
  %incdec.ptr.i.i = getelementptr inbounds i32, ptr %params, i32 1
  %incdec.ptr7.i.i.1 = getelementptr inbounds i8, ptr %c.i.i, i32 24
  %incdec.ptr.i.i.1 = getelementptr inbounds i32, ptr %params, i32 2
  %incdec.ptr7.i.i.2 = getelementptr inbounds i8, ptr %c.i.i, i32 32
  %incdec.ptr.i.i.2 = getelementptr inbounds i32, ptr %params, i32 3
  %incdec.ptr7.i.i.3 = getelementptr inbounds i8, ptr %c.i.i, i32 40
  %incdec.ptr.i.i.3 = getelementptr inbounds i32, ptr %params, i32 4
  %incdec.ptr7.i.i.4 = getelementptr inbounds i8, ptr %c.i.i, i32 48
  %incdec.ptr.i.i.4 = getelementptr inbounds i32, ptr %params, i32 5
  %incdec.ptr7.i.i.5 = getelementptr inbounds i8, ptr %c.i.i, i32 56
  %incdec.ptr.i.i.5 = getelementptr inbounds i32, ptr %params, i32 6
  %add.ptr20.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 1, i32 1
  %incdec.ptr17.i.i = getelementptr inbounds i32, ptr %vals, i32 1
  %add.ptr20.i.i.1 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 2, i32 1
  %incdec.ptr17.i.i.1 = getelementptr inbounds i32, ptr %vals, i32 2
  %add.ptr20.i.i.2 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 3, i32 1
  %incdec.ptr17.i.i.2 = getelementptr inbounds i32, ptr %vals, i32 3
  %add.ptr20.i.i.3 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 4, i32 1
  %incdec.ptr17.i.i.3 = getelementptr inbounds i32, ptr %vals, i32 4
  %add.ptr20.i.i.4 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 5, i32 1
  %incdec.ptr17.i.i.4 = getelementptr inbounds i32, ptr %vals, i32 5
  %add.ptr20.i.i.5 = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 6, i32 1
  %incdec.ptr17.i.i.5 = getelementptr inbounds i32, ptr %vals, i32 6
  %arrayidx9.1 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 1
  %arrayidx9.2 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 2
  %arrayidx9.3 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 3
  %arrayidx9.4 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 4
  %arrayidx9.5 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 5
  %arrayidx9.6 = getelementptr inbounds [7 x i32], ptr %vals, i32 0, i32 6
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %dbqtimerix.046 = phi i32 [ 0, %while.body.lr.ph ], [ %dbqtimerix.1.lcssa, %cleanup.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %params) #14
  %1 = call ptr @memset(ptr %params, i32 255, i32 28)
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %vals) #14
  %sub = sub i32 %ndbqtimers, %dbqtimerix.046
  %2 = call i32 @llvm.umin.i32(i32 %sub, i32 7)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp240.not = icmp eq i32 %2, 0
  %3 = call ptr @memset(ptr %vals, i32 255, i32 28)
  br i1 %cmp240.not, label %while.body.for.end_crit_edge, label %for.body

while.body.for.end_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %while.body
  %shl = shl i32 %dbqtimerix.046, 8
  %or = or i32 %shl, 19464192
  %4 = ptrtoint ptr %params to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %params, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %exitcond.not = icmp eq i32 %2, 1
  br i1 %exitcond.not, label %for.body.for.end_crit_edge, label %for.body.1

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.1:                                       ; preds = %for.body
  %add.1 = shl i32 %dbqtimerix.046, 8
  %shl.1 = add i32 %add.1, 256
  %or.1 = or i32 %shl.1, 19464192
  %5 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.1, ptr %arrayidx.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %exitcond.not.1 = icmp eq i32 %2, 2
  br i1 %exitcond.not.1, label %for.body.1.for.end_crit_edge, label %for.body.2

for.body.1.for.end_crit_edge:                     ; preds = %for.body.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.2:                                       ; preds = %for.body.1
  %add.2 = shl i32 %dbqtimerix.046, 8
  %shl.2 = add i32 %add.2, 512
  %or.2 = or i32 %shl.2, 19464192
  %6 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or.2, ptr %arrayidx.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %exitcond.not.2 = icmp eq i32 %2, 3
  br i1 %exitcond.not.2, label %for.body.2.for.end_crit_edge, label %for.body.3

for.body.2.for.end_crit_edge:                     ; preds = %for.body.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.3:                                       ; preds = %for.body.2
  %add.3 = shl i32 %dbqtimerix.046, 8
  %shl.3 = add i32 %add.3, 768
  %or.3 = or i32 %shl.3, 19464192
  %7 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.3, ptr %arrayidx.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %exitcond.not.3 = icmp eq i32 %2, 4
  br i1 %exitcond.not.3, label %for.body.3.for.end_crit_edge, label %for.body.4

for.body.3.for.end_crit_edge:                     ; preds = %for.body.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.4:                                       ; preds = %for.body.3
  %add.4 = shl i32 %dbqtimerix.046, 8
  %shl.4 = add i32 %add.4, 1024
  %or.4 = or i32 %shl.4, 19464192
  %8 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or.4, ptr %arrayidx.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %exitcond.not.4 = icmp eq i32 %2, 5
  br i1 %exitcond.not.4, label %for.body.4.for.end_crit_edge, label %for.body.5

for.body.4.for.end_crit_edge:                     ; preds = %for.body.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.5:                                       ; preds = %for.body.4
  %add.5 = shl i32 %dbqtimerix.046, 8
  %shl.5 = add i32 %add.5, 1280
  %or.5 = or i32 %shl.5, 19464192
  %9 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or.5, ptr %arrayidx.5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %2)
  %exitcond.not.5 = icmp eq i32 %2, 6
  br i1 %exitcond.not.5, label %for.body.5.for.end_crit_edge, label %for.body.6

for.body.5.for.end_crit_edge:                     ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.6:                                       ; preds = %for.body.5
  call void @__sanitizer_cov_trace_pc() #16
  %add.6 = shl i32 %dbqtimerix.046, 8
  %shl.6 = add i32 %add.6, 1536
  %or.6 = or i32 %shl.6, 19464192
  %10 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or.6, ptr %arrayidx.6, align 4
  br label %for.end

for.end:                                          ; preds = %for.body.6, %for.body.5.for.end_crit_edge, %for.body.4.for.end_crit_edge, %for.body.3.for.end_crit_edge, %for.body.2.for.end_crit_edge, %for.body.1.for.end_crit_edge, %for.body.for.end_crit_edge, %while.body.for.end_crit_edge
  %11 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mbox, align 8
  %13 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %15 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl.i.i = shl i32 %14, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %16 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %17 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 4, ptr %retval_len16.i.i, align 4
  br i1 %cmp240.not, label %for.end.for.end.i.i_crit_edge, label %for.body.i.i

for.end.for.end.i.i_crit_edge:                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %for.end
  %18 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %params, align 4
  %20 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %0, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %exitcond.not.i.i = icmp eq i32 %2, 1
  br i1 %exitcond.not.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %for.body.i.i.1

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.1:                                   ; preds = %for.body.i.i
  %21 = ptrtoint ptr %incdec.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %incdec.ptr.i.i, align 4
  %23 = ptrtoint ptr %incdec.ptr7.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %incdec.ptr7.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %exitcond.not.i.i.1 = icmp eq i32 %2, 2
  br i1 %exitcond.not.i.i.1, label %for.body.i.i.1.for.end.i.i_crit_edge, label %for.body.i.i.2

for.body.i.i.1.for.end.i.i_crit_edge:             ; preds = %for.body.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.2:                                   ; preds = %for.body.i.i.1
  %24 = ptrtoint ptr %incdec.ptr.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %incdec.ptr.i.i.1, align 4
  %26 = ptrtoint ptr %incdec.ptr7.i.i.1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %incdec.ptr7.i.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %exitcond.not.i.i.2 = icmp eq i32 %2, 3
  br i1 %exitcond.not.i.i.2, label %for.body.i.i.2.for.end.i.i_crit_edge, label %for.body.i.i.3

for.body.i.i.2.for.end.i.i_crit_edge:             ; preds = %for.body.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.3:                                   ; preds = %for.body.i.i.2
  %27 = ptrtoint ptr %incdec.ptr.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %incdec.ptr.i.i.2, align 4
  %29 = ptrtoint ptr %incdec.ptr7.i.i.2 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %incdec.ptr7.i.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %exitcond.not.i.i.3 = icmp eq i32 %2, 4
  br i1 %exitcond.not.i.i.3, label %for.body.i.i.3.for.end.i.i_crit_edge, label %for.body.i.i.4

for.body.i.i.3.for.end.i.i_crit_edge:             ; preds = %for.body.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.4:                                   ; preds = %for.body.i.i.3
  %30 = ptrtoint ptr %incdec.ptr.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %incdec.ptr.i.i.3, align 4
  %32 = ptrtoint ptr %incdec.ptr7.i.i.3 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %incdec.ptr7.i.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %exitcond.not.i.i.4 = icmp eq i32 %2, 5
  br i1 %exitcond.not.i.i.4, label %for.body.i.i.4.for.end.i.i_crit_edge, label %for.body.i.i.5

for.body.i.i.4.for.end.i.i_crit_edge:             ; preds = %for.body.i.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.5:                                   ; preds = %for.body.i.i.4
  %33 = ptrtoint ptr %incdec.ptr.i.i.4 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %incdec.ptr.i.i.4, align 4
  %35 = ptrtoint ptr %incdec.ptr7.i.i.4 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %incdec.ptr7.i.i.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %2)
  %exitcond.not.i.i.5 = icmp eq i32 %2, 6
  br i1 %exitcond.not.i.i.5, label %for.body.i.i.5.for.end.i.i_crit_edge, label %for.body.i.i.6

for.body.i.i.5.for.end.i.i_crit_edge:             ; preds = %for.body.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i.i

for.body.i.i.6:                                   ; preds = %for.body.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  %36 = ptrtoint ptr %incdec.ptr.i.i.5 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %incdec.ptr.i.i.5, align 4
  %38 = ptrtoint ptr %incdec.ptr7.i.i.5 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %incdec.ptr7.i.i.5, align 4
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %for.body.i.i.6, %for.body.i.i.5.for.end.i.i_crit_edge, %for.body.i.i.4.for.end.i.i_crit_edge, %for.body.i.i.3.for.end.i.i_crit_edge, %for.body.i.i.2.for.end.i.i_crit_edge, %for.body.i.i.1.for.end.i.i_crit_edge, %for.body.i.i.for.end.i.i_crit_edge, %for.end.for.end.i.i_crit_edge
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %12, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp1543.i.i = icmp ne i32 %2, 0
  %or.cond.i.i = and i1 %cmp1543.i.i, %cmp9.i.i
  br i1 %or.cond.i.i, label %for.body16.i.i, label %t4_query_params.exit

for.body16.i.i:                                   ; preds = %for.end.i.i
  %39 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %val13.i.i, align 4
  %41 = ptrtoint ptr %vals to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %vals, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %exitcond47.not.i.i = icmp eq i32 %2, 1
  br i1 %exitcond47.not.i.i, label %for.body16.i.i.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.1

for.body16.i.i.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.1:                                 ; preds = %for.body16.i.i
  %42 = ptrtoint ptr %add.ptr20.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %add.ptr20.i.i, align 4
  %44 = ptrtoint ptr %incdec.ptr17.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %incdec.ptr17.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %exitcond47.not.i.i.1 = icmp eq i32 %2, 2
  br i1 %exitcond47.not.i.i.1, label %for.body16.i.i.1.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.2

for.body16.i.i.1.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.2:                                 ; preds = %for.body16.i.i.1
  %45 = ptrtoint ptr %add.ptr20.i.i.1 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %add.ptr20.i.i.1, align 4
  %47 = ptrtoint ptr %incdec.ptr17.i.i.1 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %46, ptr %incdec.ptr17.i.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %exitcond47.not.i.i.2 = icmp eq i32 %2, 3
  br i1 %exitcond47.not.i.i.2, label %for.body16.i.i.2.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.3

for.body16.i.i.2.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.3:                                 ; preds = %for.body16.i.i.2
  %48 = ptrtoint ptr %add.ptr20.i.i.2 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %add.ptr20.i.i.2, align 4
  %50 = ptrtoint ptr %incdec.ptr17.i.i.2 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %incdec.ptr17.i.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %exitcond47.not.i.i.3 = icmp eq i32 %2, 4
  br i1 %exitcond47.not.i.i.3, label %for.body16.i.i.3.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.4

for.body16.i.i.3.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.4:                                 ; preds = %for.body16.i.i.3
  %51 = ptrtoint ptr %add.ptr20.i.i.3 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %add.ptr20.i.i.3, align 4
  %53 = ptrtoint ptr %incdec.ptr17.i.i.3 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %incdec.ptr17.i.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %exitcond47.not.i.i.4 = icmp eq i32 %2, 5
  br i1 %exitcond47.not.i.i.4, label %for.body16.i.i.4.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.5

for.body16.i.i.4.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.5:                                 ; preds = %for.body16.i.i.4
  %54 = ptrtoint ptr %add.ptr20.i.i.4 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %add.ptr20.i.i.4, align 4
  %56 = ptrtoint ptr %incdec.ptr17.i.i.4 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %incdec.ptr17.i.i.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %2)
  %exitcond47.not.i.i.5 = icmp eq i32 %2, 6
  br i1 %exitcond47.not.i.i.5, label %for.body16.i.i.5.t4_query_params.exit.thread_crit_edge, label %for.body16.i.i.6

for.body16.i.i.5.t4_query_params.exit.thread_crit_edge: ; preds = %for.body16.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_query_params.exit.thread

for.body16.i.i.6:                                 ; preds = %for.body16.i.i.5
  call void @__sanitizer_cov_trace_pc() #16
  %57 = ptrtoint ptr %add.ptr20.i.i.5 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %add.ptr20.i.i.5, align 4
  %59 = ptrtoint ptr %incdec.ptr17.i.i.5 to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %incdec.ptr17.i.i.5, align 4
  br label %t4_query_params.exit.thread

t4_query_params.exit.thread:                      ; preds = %for.body16.i.i.6, %for.body16.i.i.5.t4_query_params.exit.thread_crit_edge, %for.body16.i.i.4.t4_query_params.exit.thread_crit_edge, %for.body16.i.i.3.t4_query_params.exit.thread_crit_edge, %for.body16.i.i.2.t4_query_params.exit.thread_crit_edge, %for.body16.i.i.1.t4_query_params.exit.thread_crit_edge, %for.body16.i.i.t4_query_params.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  br label %for.cond6.preheader

t4_query_params.exit:                             ; preds = %for.end.i.i
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not, label %t4_query_params.exit.for.cond6.preheader_crit_edge, label %cleanup.thread

t4_query_params.exit.for.cond6.preheader_crit_edge: ; preds = %t4_query_params.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond6.preheader

for.cond6.preheader:                              ; preds = %t4_query_params.exit.for.cond6.preheader_crit_edge, %t4_query_params.exit.thread
  br i1 %cmp240.not, label %for.cond6.preheader.cleanup_crit_edge, label %for.body8

for.cond6.preheader.cleanup_crit_edge:            ; preds = %for.cond6.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup.thread:                                   ; preds = %t4_query_params.exit
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %vals) #14
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %params) #14
  br label %while.end

for.body8:                                        ; preds = %for.cond6.preheader
  %60 = ptrtoint ptr %vals to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %vals, align 4
  %conv = trunc i32 %61 to i16
  %inc10 = add i32 %dbqtimerix.046, 1
  %arrayidx11 = getelementptr i16, ptr %dbqtimers, i32 %dbqtimerix.046
  %62 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store2_noabort(i32 %62)
  store i16 %conv, ptr %arrayidx11, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %exitcond49.not = icmp eq i32 %2, 1
  br i1 %exitcond49.not, label %for.body8.cleanup_crit_edge, label %for.body8.1

for.body8.cleanup_crit_edge:                      ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.1:                                      ; preds = %for.body8
  %63 = ptrtoint ptr %arrayidx9.1 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx9.1, align 4
  %conv.1 = trunc i32 %64 to i16
  %inc10.1 = add i32 %dbqtimerix.046, 2
  %arrayidx11.1 = getelementptr i16, ptr %dbqtimers, i32 %inc10
  %65 = ptrtoint ptr %arrayidx11.1 to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 %conv.1, ptr %arrayidx11.1, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %2)
  %exitcond49.not.1 = icmp eq i32 %2, 2
  br i1 %exitcond49.not.1, label %for.body8.1.cleanup_crit_edge, label %for.body8.2

for.body8.1.cleanup_crit_edge:                    ; preds = %for.body8.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.2:                                      ; preds = %for.body8.1
  %66 = ptrtoint ptr %arrayidx9.2 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx9.2, align 4
  %conv.2 = trunc i32 %67 to i16
  %inc10.2 = add i32 %dbqtimerix.046, 3
  %arrayidx11.2 = getelementptr i16, ptr %dbqtimers, i32 %inc10.1
  %68 = ptrtoint ptr %arrayidx11.2 to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 %conv.2, ptr %arrayidx11.2, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %2)
  %exitcond49.not.2 = icmp eq i32 %2, 3
  br i1 %exitcond49.not.2, label %for.body8.2.cleanup_crit_edge, label %for.body8.3

for.body8.2.cleanup_crit_edge:                    ; preds = %for.body8.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.3:                                      ; preds = %for.body8.2
  %69 = ptrtoint ptr %arrayidx9.3 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %arrayidx9.3, align 4
  %conv.3 = trunc i32 %70 to i16
  %inc10.3 = add i32 %dbqtimerix.046, 4
  %arrayidx11.3 = getelementptr i16, ptr %dbqtimers, i32 %inc10.2
  %71 = ptrtoint ptr %arrayidx11.3 to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 %conv.3, ptr %arrayidx11.3, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %2)
  %exitcond49.not.3 = icmp eq i32 %2, 4
  br i1 %exitcond49.not.3, label %for.body8.3.cleanup_crit_edge, label %for.body8.4

for.body8.3.cleanup_crit_edge:                    ; preds = %for.body8.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.4:                                      ; preds = %for.body8.3
  %72 = ptrtoint ptr %arrayidx9.4 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %arrayidx9.4, align 4
  %conv.4 = trunc i32 %73 to i16
  %inc10.4 = add i32 %dbqtimerix.046, 5
  %arrayidx11.4 = getelementptr i16, ptr %dbqtimers, i32 %inc10.3
  %74 = ptrtoint ptr %arrayidx11.4 to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 %conv.4, ptr %arrayidx11.4, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %2)
  %exitcond49.not.4 = icmp eq i32 %2, 5
  br i1 %exitcond49.not.4, label %for.body8.4.cleanup_crit_edge, label %for.body8.5

for.body8.4.cleanup_crit_edge:                    ; preds = %for.body8.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.5:                                      ; preds = %for.body8.4
  %75 = ptrtoint ptr %arrayidx9.5 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx9.5, align 4
  %conv.5 = trunc i32 %76 to i16
  %inc10.5 = add i32 %dbqtimerix.046, 6
  %arrayidx11.5 = getelementptr i16, ptr %dbqtimers, i32 %inc10.4
  %77 = ptrtoint ptr %arrayidx11.5 to i32
  call void @__asan_store2_noabort(i32 %77)
  store i16 %conv.5, ptr %arrayidx11.5, align 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %2)
  %exitcond49.not.5 = icmp eq i32 %2, 6
  br i1 %exitcond49.not.5, label %for.body8.5.cleanup_crit_edge, label %for.body8.6

for.body8.5.cleanup_crit_edge:                    ; preds = %for.body8.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body8.6:                                      ; preds = %for.body8.5
  call void @__sanitizer_cov_trace_pc() #16
  %78 = ptrtoint ptr %arrayidx9.6 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx9.6, align 4
  %conv.6 = trunc i32 %79 to i16
  %inc10.6 = add i32 %dbqtimerix.046, 7
  %arrayidx11.6 = getelementptr i16, ptr %dbqtimers, i32 %inc10.5
  %80 = ptrtoint ptr %arrayidx11.6 to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 %conv.6, ptr %arrayidx11.6, align 2
  br label %cleanup

cleanup:                                          ; preds = %for.body8.6, %for.body8.5.cleanup_crit_edge, %for.body8.4.cleanup_crit_edge, %for.body8.3.cleanup_crit_edge, %for.body8.2.cleanup_crit_edge, %for.body8.1.cleanup_crit_edge, %for.body8.cleanup_crit_edge, %for.cond6.preheader.cleanup_crit_edge
  %dbqtimerix.1.lcssa = phi i32 [ %dbqtimerix.046, %for.cond6.preheader.cleanup_crit_edge ], [ %inc10, %for.body8.cleanup_crit_edge ], [ %inc10.1, %for.body8.1.cleanup_crit_edge ], [ %inc10.2, %for.body8.2.cleanup_crit_edge ], [ %inc10.3, %for.body8.3.cleanup_crit_edge ], [ %inc10.4, %for.body8.4.cleanup_crit_edge ], [ %inc10.5, %for.body8.5.cleanup_crit_edge ], [ %inc10.6, %for.body8.6 ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %vals) #14
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %params) #14
  %cmp = icmp ult i32 %dbqtimerix.1.lcssa, %ndbqtimers
  br i1 %cmp, label %cleanup.while.body_crit_edge, label %cleanup.while.end_crit_edge

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %cleanup.thread, %entry.while.end_crit_edge
  %ret.1 = phi i32 [ %call.i.i.i, %cleanup.thread ], [ 0, %entry.while.end_crit_edge ], [ 0, %cleanup.while.end_crit_edge ]
  ret i32 %ret.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fw_hello(ptr noundef %adap, i32 noundef %mbox, i32 noundef %evt_mbox, i32 noundef %master, ptr noundef writeonly %state) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_hello_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_hello_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_hello_cmd, ptr %c, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %master)
  %cmp = icmp eq i32 %master, 0
  %shl = select i1 %cmp, i32 536870912, i32 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %master)
  %cmp1 = icmp eq i32 %master, 2
  %shl3 = select i1 %cmp1, i32 268435456, i32 0
  %mbox.op = shl i32 %mbox, 24
  %shl6 = select i1 %cmp1, i32 %mbox.op, i32 251658240
  %shl8 = shl i32 %evt_mbox, 20
  %or = or i32 %shl8, %shl3
  %or7 = or i32 %or, %shl
  %or9 = or i32 %or7, %shl6
  %or11 = or i32 %or9, 65536
  %tobool27.not = icmp eq ptr %state, null
  %2 = getelementptr inbounds i8, ptr %c, i32 12
  br label %retry

retry:                                            ; preds = %retry.backedge, %entry
  %retries.0 = phi i32 [ 3, %entry ], [ %retries.0.be, %retry.backedge ]
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %2, align 4
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 77594624, ptr %c, align 4
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or11, ptr %1, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp12 = icmp slt i32 %call.i.i, 0
  br i1 %cmp12, label %if.then, label %if.end24

if.then:                                          ; preds = %retry
  %7 = zext i32 %call.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.504)
  switch i32 %call.i.i, label %if.then.if.end_crit_edge [
    i32 -16, label %if.then.land.lhs.true_crit_edge
    i32 -110, label %if.then.land.lhs.true_crit_edge189
  ]

if.then.land.lhs.true_crit_edge189:               ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.then.land.lhs.true_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.lhs.true

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %if.then.land.lhs.true_crit_edge, %if.then.land.lhs.true_crit_edge189
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retries.0)
  %cmp18 = icmp sgt i32 %retries.0, 0
  br i1 %cmp18, label %land.lhs.true.retry.backedge_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.retry.backedge_crit_edge:           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %retry.backedge

retry.backedge:                                   ; preds = %if.then52.retry.backedge_crit_edge, %land.lhs.true.retry.backedge_crit_edge
  %retries.0.be = add nsw i32 %retries.0, -1
  br label %retry

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %if.then.if.end_crit_edge
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %9, i32 12472
  %10 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool.not = icmp eq i32 %.mask, 0
  br i1 %tobool.not, label %if.end.cleanup84_crit_edge, label %if.then22

if.end.cleanup84_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

if.then22:                                        ; preds = %if.end
  %11 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %12, i32 12472
  %13 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %14 = call i32 @llvm.bswap.i32(i32 %13) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %14)
  %tobool.not.i = icmp sgt i32 %14, -1
  br i1 %tobool.not.i, label %if.then22.cleanup84_crit_edge, label %do.end.i

if.then22.cleanup84_crit_edge:                    ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

do.end.i:                                         ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %15 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev_dev.i, align 16
  %shr.i = lshr i32 %14, 24
  %and1.i = and i32 %shr.i, 7
  %arrayidx.i = getelementptr [8 x ptr], ptr @t4_report_fw_error.reason, i32 0, i32 %and1.i
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.i, align 4
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %16, ptr noundef nonnull @.str.240, ptr noundef %18) #17
  %flags.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 8
  %19 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i, align 32
  %and2.i = and i32 %20, -17
  store i32 %and2.i, ptr %flags.i, align 32
  br label %cleanup84

if.end24:                                         ; preds = %retry
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %1, align 4
  %shr = lshr i32 %22, 24
  %and26 = and i32 %shr, 15
  br i1 %tobool27.not, label %if.end24.if.end38_crit_edge, label %if.then28

if.end24.if.end38_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end38

if.then28:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %22)
  %tobool30.not = icmp sgt i32 %22, -1
  br i1 %tobool30.not, label %if.else, label %if.then31

if.then31:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #16
  %23 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2, ptr %state, align 4
  br label %cleanup84

if.else:                                          ; preds = %if.then28
  %and32 = and i32 %22, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  br i1 %tobool33.not, label %if.else35, label %if.then34

if.then34:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 1, ptr %state, align 4
  br label %cleanup84

if.else35:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %25 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %state, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else35, %if.end24.if.end38_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %22)
  %cmp40 = icmp ugt i32 %22, 1073741823
  call void @__sanitizer_cov_trace_cmp4(i32 %and26, i32 %mbox)
  %cmp43.not = icmp eq i32 %and26, %mbox
  %or.cond = select i1 %cmp40, i1 true, i1 %cmp43.not
  br i1 %or.cond, label %if.end38.cleanup84_crit_edge, label %if.end38.for.cond_crit_edge

if.end38.for.cond_crit_edge:                      ; preds = %if.end38
  br label %for.cond

if.end38.cleanup84_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

for.cond:                                         ; preds = %if.then49.for.cond_crit_edge, %if.end38.for.cond_crit_edge
  %waiting.0 = phi i32 [ %sub, %if.then49.for.cond_crit_edge ], [ 30000, %if.end38.for.cond_crit_edge ]
  call void @msleep(i32 noundef 50) #14
  %26 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %adap, align 128
  %add.ptr.i117 = getelementptr i8, ptr %27, i32 12472
  %28 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i117) #14, !srcloc !992
  %29 = call i32 @llvm.bswap.i32(i32 %28) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741824, i32 %29)
  %tobool48.not = icmp ult i32 %29, 1073741824
  br i1 %tobool48.not, label %if.then49, label %if.end59

if.then49:                                        ; preds = %for.cond
  %sub = add nsw i32 %waiting.0, -50
  %cmp50 = icmp eq i32 %sub, 0
  br i1 %cmp50, label %if.then52, label %if.then49.for.cond_crit_edge

if.then49.for.cond_crit_edge:                     ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

if.then52:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retries.0)
  %cmp54 = icmp sgt i32 %retries.0, 0
  br i1 %cmp54, label %if.then52.retry.backedge_crit_edge, label %if.then52.cleanup84_crit_edge

if.then52.cleanup84_crit_edge:                    ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

if.then52.retry.backedge_crit_edge:               ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #16
  br label %retry.backedge

if.end59:                                         ; preds = %for.cond
  br i1 %tobool27.not, label %if.end59.if.end71_crit_edge, label %if.then61

if.end59.if.end71_crit_edge:                      ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

if.then61:                                        ; preds = %if.end59
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %tobool63.not = icmp sgt i32 %29, -1
  br i1 %tobool63.not, label %if.else65, label %if.then61.if.end71.sink.split_crit_edge

if.then61.if.end71.sink.split_crit_edge:          ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71.sink.split

if.else65:                                        ; preds = %if.then61
  %and66 = and i32 %29, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66)
  %tobool67.not = icmp eq i32 %and66, 0
  br i1 %tobool67.not, label %if.else65.if.end71_crit_edge, label %if.else65.if.end71.sink.split_crit_edge

if.else65.if.end71.sink.split_crit_edge:          ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71.sink.split

if.else65.if.end71_crit_edge:                     ; preds = %if.else65
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end71

if.end71.sink.split:                              ; preds = %if.else65.if.end71.sink.split_crit_edge, %if.then61.if.end71.sink.split_crit_edge
  %.sink = phi i32 [ 2, %if.then61.if.end71.sink.split_crit_edge ], [ 1, %if.else65.if.end71.sink.split_crit_edge ]
  %30 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %.sink, ptr %state, align 4
  br label %if.end71

if.end71:                                         ; preds = %if.end71.sink.split, %if.else65.if.end71_crit_edge, %if.end59.if.end71_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %and26)
  %cmp72 = icmp eq i32 %and26, 7
  br i1 %cmp72, label %land.lhs.true74, label %if.end71.cleanup84_crit_edge

if.end71.cleanup84_crit_edge:                     ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

land.lhs.true74:                                  ; preds = %if.end71
  %and75 = and i32 %29, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %land.lhs.true74.cleanup84_crit_edge, label %if.then77

land.lhs.true74.cleanup84_crit_edge:              ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup84

if.then77:                                        ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #16
  %shr78 = lshr i32 %29, 12
  %and79 = and i32 %shr78, 7
  br label %cleanup84

cleanup84:                                        ; preds = %if.then77, %land.lhs.true74.cleanup84_crit_edge, %if.end71.cleanup84_crit_edge, %if.then52.cleanup84_crit_edge, %if.end38.cleanup84_crit_edge, %if.then34, %if.then31, %do.end.i, %if.then22.cleanup84_crit_edge, %if.end.cleanup84_crit_edge
  %retval.3 = phi i32 [ %call.i.i, %if.end.cleanup84_crit_edge ], [ %call.i.i, %if.then22.cleanup84_crit_edge ], [ %call.i.i, %do.end.i ], [ %and26, %if.then31 ], [ %and26, %if.then34 ], [ %and79, %if.then77 ], [ 7, %land.lhs.true74.cleanup84_crit_edge ], [ %and26, %if.end71.cleanup84_crit_edge ], [ -110, %if.then52.cleanup84_crit_edge ], [ %and26, %if.end38.cleanup84_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %retval.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fw_bye(ptr noundef %adap, i32 noundef %mbox) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_bye_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_bye_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c, i32 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 0, ptr %1, align 8
  %3 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 94371840, ptr %c, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %0, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_early_init(ptr noundef %adap, i32 noundef %mbox) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_initialize_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_initialize_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c, i32 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 0, ptr %1, align 8
  %3 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 111149056, ptr %c, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %0, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fw_reset(ptr noundef %adap, i32 noundef %mbox, i32 noundef %reset) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_reset_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_reset_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %c, i32 12
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %2, align 4
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 60817408, ptr %c, align 4
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %reset, ptr %1, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_load_cfg(ptr nocapture noundef readonly %adap, ptr nocapture noundef readonly %cfg_data, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %1)
  %cmp.i = icmp eq i32 %1, 1048576
  %..i = select i1 %cmp.i, i32 983040, i32 2031616
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %size)
  %cmp3 = icmp ugt i32 %size, 65536
  br i1 %cmp3, label %do.end, label %if.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %2 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %3, ptr noundef nonnull @.str.197, i32 noundef 65536) #17
  br label %cleanup

if.end5:                                          ; preds = %entry
  %sf_nsec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 9
  %4 = ptrtoint ptr %sf_nsec to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %sf_nsec, align 8
  %div = udiv i32 %1, %5
  %div265 = lshr exact i32 %..i, 16
  %sub = add i32 %div, 65535
  %div6 = udiv i32 %sub, %div
  %add7 = add nsw i32 %div265, -1
  %sub8 = add i32 %add7, %div6
  %call9 = tail call fastcc i32 @t4_flash_erase_sectors(ptr noundef %adap, i32 noundef %div265, i32 noundef %sub8)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool.not = icmp eq i32 %call9, 0
  br i1 %tobool.not, label %lor.lhs.false, label %if.end5.do.end29_crit_edge

if.end5.do.end29_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end29

lor.lhs.false:                                    ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp10.not = icmp eq i32 %size, 0
  br i1 %cmp10.not, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.for.body_crit_edge

lor.lhs.false.for.body_crit_edge:                 ; preds = %lor.lhs.false
  br label %for.body

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %if.end22.for.body_crit_edge, %lor.lhs.false.for.body_crit_edge
  %addr.071 = phi i32 [ %add23, %if.end22.for.body_crit_edge ], [ %..i, %lor.lhs.false.for.body_crit_edge ]
  %i.070 = phi i32 [ %add24, %if.end22.for.body_crit_edge ], [ 0, %lor.lhs.false.for.body_crit_edge ]
  %cfg_data.addr.069 = phi ptr [ %add.ptr, %if.end22.for.body_crit_edge ], [ %cfg_data, %lor.lhs.false.for.body_crit_edge ]
  %sub14 = sub i32 %size, %i.070
  %6 = tail call i32 @llvm.umin.i32(i32 %sub14, i32 256)
  %call19 = tail call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %addr.071, i32 noundef %6, ptr noundef %cfg_data.addr.069, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.end22, label %for.body.do.end29_crit_edge

for.body.do.end29_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end29

if.end22:                                         ; preds = %for.body
  %add23 = add i32 %addr.071, 256
  %add.ptr = getelementptr i8, ptr %cfg_data.addr.069, i32 256
  %add24 = add i32 %i.070, 256
  %cmp13 = icmp ult i32 %add24, %size
  br i1 %cmp13, label %if.end22.for.body_crit_edge, label %if.end22.cleanup_crit_edge

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end22.for.body_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

do.end29:                                         ; preds = %for.body.do.end29_crit_edge, %if.end5.do.end29_crit_edge
  %ret.1 = phi i32 [ %call9, %if.end5.do.end29_crit_edge ], [ %call19, %for.body.do.end29_crit_edge ]
  %pdev_dev30 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %7 = ptrtoint ptr %pdev_dev30 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %pdev_dev30, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp31 = icmp eq i32 %size, 0
  %cond = select i1 %cmp31, ptr @.str.202, ptr @.str.203
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %8, ptr noundef nonnull @.str.200, ptr noundef nonnull %cond, i32 noundef %ret.1) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end29, %if.end22.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %do.end
  %retval.0 = phi i32 [ -27, %do.end ], [ %ret.1, %do.end29 ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_devlog_params(ptr noundef %adap) local_unnamed_addr #0 align 64 {
entry:
  %devlog_cmd = alloca %struct.fw_devlog_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %devlog = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %devlog_cmd) #14
  %0 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd, i32 0, i32 4
  %1 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd, i32 0, i32 5
  %2 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %3, i32 12504
  %4 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %5 = tail call i32 @llvm.bswap.i32(i32 %4) #14
  %and = and i32 %5, 15
  %6 = ptrtoint ptr %devlog to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and, ptr %devlog, align 4
  %and2 = and i32 %5, 268435440
  %start = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 1
  %7 = ptrtoint ptr %start to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and2, ptr %start, align 4
  %8 = lshr i32 %5, 13
  %mul = and i32 %8, 491520
  %mul5 = add nuw nsw i32 %mul, 32768
  br label %cleanup.sink.split

if.end:                                           ; preds = %entry
  %9 = getelementptr inbounds %struct.fw_devlog_cmd, ptr %devlog_cmd, i32 0, i32 1
  %10 = getelementptr inbounds i8, ptr %devlog_cmd, i32 8
  %11 = call ptr @memset(ptr %10, i32 0, i32 24)
  %12 = ptrtoint ptr %devlog_cmd to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 633339904, ptr %devlog_cmd, align 4
  %13 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2, ptr %9, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %14 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %15, ptr noundef nonnull %devlog_cmd, i32 noundef 32, ptr noundef nonnull %devlog_cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool7.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool7.not, label %if.end9, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end9:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %0, align 4
  %shr10 = lshr i32 %17, 28
  %18 = ptrtoint ptr %devlog to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %shr10, ptr %devlog, align 4
  %shl15 = shl i32 %17, 4
  %start16 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 1
  %19 = ptrtoint ptr %start16 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %shl15, ptr %start16, align 4
  %20 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %1, align 4
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end9, %if.then
  %.sink = phi i32 [ %21, %if.end9 ], [ %mul5, %if.then ]
  %size17 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 5, i32 2
  %22 = ptrtoint ptr %size17 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %.sink, ptr %size17, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i, %if.end.cleanup_crit_edge ], [ 0, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %devlog_cmd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fl_pkt_align(ptr nocapture noundef readonly %adap) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 4104
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = lshr i32 %2, 28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip, align 8
  %6 = and i32 %5, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %6)
  %cmp = icmp ult i32 %6, 96
  %. = select i1 %cmp, i32 5, i32 3
  %and2 = and i32 %3, 7
  %add = add nuw nsw i32 %., %and2
  %shl = shl nuw nsw i32 1, %add
  %7 = and i32 %5, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %7)
  %cmp.i.not = icmp eq i32 %7, 64
  br i1 %cmp.i.not, label %entry.if.end17_crit_edge, label %if.then6

entry.if.end17_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end17

if.then6:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i26 = getelementptr i8, ptr %9, i32 4388
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i26) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %11 = lshr i32 %10, 8
  %and9 = and i32 %11, 7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9)
  %cmp10 = icmp eq i32 %and9, 0
  %shl14 = shl nuw nsw i32 32, %and9
  %ingpackboundary.0 = select i1 %cmp10, i32 16, i32 %shl14
  %12 = tail call i32 @llvm.umax.i32(i32 %shl, i32 %ingpackboundary.0)
  br label %if.end17

if.end17:                                         ; preds = %if.then6, %entry.if.end17_crit_edge
  %fl_align.0 = phi i32 [ %shl, %entry.if.end17_crit_edge ], [ %12, %if.then6 ]
  ret i32 %fl_align.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fixup_host_params(ptr nocapture noundef readonly %adap, i32 noundef %page_size, i32 noundef %cache_line_size) local_unnamed_addr #0 align 64 {
entry:
  %devctl = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %page_size)
  %tobool.not.i = icmp eq i32 %page_size, 0
  %0 = tail call i32 @llvm.ctlz.i32(i32 %page_size, i1 true) #14, !range !1002
  %sub.i = sub nuw nsw i32 32, %0
  %cond.i = select i1 %tobool.not.i, i32 0, i32 %sub.i
  %sub1 = add nsw i32 %cond.i, -11
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %cache_line_size)
  %cmp = icmp ugt i32 %cache_line_size, 64
  %1 = tail call i32 @llvm.umax.i32(i32 %cache_line_size, i32 32)
  %shl6 = shl nsw i32 %sub1, 4
  %or = or i32 %shl6, %sub1
  %shl7 = shl nsw i32 %sub1, 8
  %or8 = or i32 %or, %shl7
  %shl9 = shl nsw i32 %sub1, 12
  %or10 = or i32 %or8, %shl9
  %shl11 = shl nsw i32 %sub1, 16
  %or12 = or i32 %or10, %shl11
  %shl13 = shl nsw i32 %sub1, 20
  %or14 = or i32 %or12, %shl13
  %shl15 = shl nsw i32 %sub1, 24
  %or16 = or i32 %or14, %shl15
  %shl17 = shl i32 %sub1, 28
  %or18 = or i32 %or16, %shl17
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %2 = tail call i32 @llvm.bswap.i32(i32 %or18) #14
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %4, i32 4108
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %2) #14, !srcloc !995
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %5 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %chip, align 8
  %7 = and i32 %6, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %7)
  %cmp.i.not = icmp eq i32 %7, 64
  br i1 %cmp.i.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %8 = tail call i32 @llvm.ctlz.i32(i32 %1, i1 true) #14, !range !1002
  %.neg = mul nsw i32 %8, -16
  %shl21 = add nsw i32 %.neg, 416
  %shl23 = select i1 %cmp, i32 131072, i32 0
  %or24 = or i32 %shl21, %shl23
  %9 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adap, align 128
  %add.ptr.i.i = getelementptr i8, ptr %10, i32 4104
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %12 = and i32 %11, -1879048705
  %13 = tail call i32 @llvm.bswap.i32(i32 %12)
  %or.i = or i32 %or24, %13
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %14 = tail call i32 @llvm.bswap.i32(i32 %or.i) #14
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i = getelementptr i8, ptr %16, i32 4104
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i, i32 %14) #14, !srcloc !995
  %17 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i = getelementptr i8, ptr %18, i32 4104
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %if.end61

if.else:                                          ; preds = %entry
  %pdev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 3
  %20 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev, align 4
  %pcie_cap.i.i = getelementptr inbounds %struct.pci_dev, ptr %21, i32 0, i32 19
  %22 = ptrtoint ptr %pcie_cap.i.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %pcie_cap.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool.i.not = icmp eq i8 %23, 0
  br i1 %tobool.i.not, label %if.else.if.else38_crit_edge, label %if.then26

if.else.if.else38_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else38

if.then26:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %devctl) #14
  %24 = ptrtoint ptr %devctl to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 -1, ptr %devctl, align 2, !annotation !996
  %call28 = call i32 @pcie_capability_read_word(ptr noundef %21, i32 noundef 8, ptr noundef nonnull %devctl) #14
  %25 = ptrtoint ptr %devctl to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %devctl, align 2
  %27 = lshr i16 %26, 5
  %28 = and i16 %27, 7
  %narrow = add nuw nsw i16 %28, 7
  %add = zext i16 %narrow to i32
  %shl30 = shl nuw nsw i32 1, %add
  call void @__sanitizer_cov_trace_cmp4(i32 %shl30, i32 %1)
  %cmp31 = icmp ugt i32 %shl30, %1
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %devctl) #14
  br i1 %cmp31, label %if.then26.if.else42_crit_edge, label %if.then26.if.else38_crit_edge

if.then26.if.else38_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else38

if.then26.if.else42_crit_edge:                    ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else42

if.else38:                                        ; preds = %if.then26.if.else38_crit_edge, %if.else.if.else38_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 33, i32 %cache_line_size)
  %cmp39 = icmp ult i32 %cache_line_size, 33
  br i1 %cmp39, label %if.else38.if.end47_crit_edge, label %if.else38.if.else42_crit_edge

if.else38.if.else42_crit_edge:                    ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.else42

if.else38.if.end47_crit_edge:                     ; preds = %if.else38
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end47

if.else42:                                        ; preds = %if.else38.if.else42_crit_edge, %if.then26.if.else42_crit_edge
  %pack_align.1133 = phi i32 [ %1, %if.else38.if.else42_crit_edge ], [ %shl30, %if.then26.if.else42_crit_edge ]
  %29 = call i32 @llvm.ctlz.i32(i32 %pack_align.1133, i1 true) #14, !range !1002
  %.neg134 = mul nsw i32 %29, -65536
  %phi.bo = add nsw i32 %.neg134, 1703936
  br label %if.end47

if.end47:                                         ; preds = %if.else42, %if.else38.if.end47_crit_edge
  %fl_align.0 = phi i32 [ %pack_align.1133, %if.else42 ], [ 64, %if.else38.if.end47_crit_edge ]
  %ingpack.0 = phi i32 [ %phi.bo, %if.else42 ], [ 65536, %if.else38.if.end47_crit_edge ]
  %shl58 = select i1 %cmp, i32 131072, i32 0
  %30 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %adap, align 128
  %add.ptr.i.i115 = getelementptr i8, ptr %31, i32 4104
  %32 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i115) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %33 = and i32 %32, -1879048705
  %34 = call i32 @llvm.bswap.i32(i32 %33)
  %or.i117 = or i32 %34, %shl58
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %35 = call i32 @llvm.bswap.i32(i32 %or.i117) #14
  %36 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i118 = getelementptr i8, ptr %37, i32 4104
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i118, i32 %35) #14, !srcloc !995
  %38 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i119 = getelementptr i8, ptr %39, i32 4104
  %40 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i119) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %41 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %adap, align 128
  %add.ptr.i.i120 = getelementptr i8, ptr %42, i32 4388
  %43 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i120) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %44 = and i32 %43, -1793
  %45 = call i32 @llvm.bswap.i32(i32 %44)
  %or.i122 = or i32 %45, %ingpack.0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %46 = call i32 @llvm.bswap.i32(i32 %or.i122) #14
  %47 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %adap, align 128
  %add.ptr.i6.i123 = getelementptr i8, ptr %48, i32 4388
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i123, i32 %46) #14, !srcloc !995
  %49 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %adap, align 128
  %add.ptr.i7.i124 = getelementptr i8, ptr %50, i32 4388
  %51 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i124) #14, !srcloc !992
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  br label %if.end61

if.end61:                                         ; preds = %if.end47, %if.then
  %fl_align.1 = phi i32 [ %1, %if.then ], [ %fl_align.0, %if.end47 ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %52 = call i32 @llvm.bswap.i32(i32 %page_size) #14
  %53 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %adap, align 128
  %add.ptr.i125 = getelementptr i8, ptr %54, i32 4164
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i125, i32 %52) #14, !srcloc !995
  %55 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %adap, align 128
  %add.ptr.i126 = getelementptr i8, ptr %56, i32 4172
  %57 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i126) #14, !srcloc !992
  %58 = call i32 @llvm.bswap.i32(i32 %57) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %add63 = add i32 %fl_align.1, -1
  %sub64 = add i32 %add63, %58
  %neg = sub i32 0, %fl_align.1
  %and66 = and i32 %sub64, %neg
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %59 = call i32 @llvm.bswap.i32(i32 %and66) #14
  %60 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %adap, align 128
  %add.ptr.i127 = getelementptr i8, ptr %61, i32 4172
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i127, i32 %59) #14, !srcloc !995
  %62 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %adap, align 128
  %add.ptr.i128 = getelementptr i8, ptr %63, i32 4176
  %64 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i128) #14, !srcloc !992
  %65 = call i32 @llvm.bswap.i32(i32 %64) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %sub69 = add i32 %add63, %65
  %and72 = and i32 %sub69, %neg
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %66 = call i32 @llvm.bswap.i32(i32 %and72) #14
  %67 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %adap, align 128
  %add.ptr.i129 = getelementptr i8, ptr %68, i32 4176
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i129, i32 %66) #14, !srcloc !995
  %sub73 = add nsw i32 %cond.i, -13
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %69 = call i32 @llvm.bswap.i32(i32 %sub73) #14
  %70 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %adap, align 128
  %add.ptr.i130 = getelementptr i8, ptr %71, i32 102776
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i130, i32 %69) #14, !srcloc !995
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_read_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_fw_initialize(ptr noundef %adap, i32 noundef %mbox) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_initialize_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_initialize_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c, i32 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 0, ptr %1, align 8
  %3 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 111149056, ptr %c, align 8
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 1, ptr %0, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_params(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %nparams, ptr nocapture noundef readonly %params, ptr nocapture noundef readonly %val) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 7, i32 %nparams)
  %cmp.i = icmp ugt i32 %nparams, 7
  br i1 %cmp.i, label %entry.t4_set_params_timeout.exit_crit_edge, label %if.end.i

entry.t4_set_params_timeout.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_set_params_timeout.exit

if.end.i:                                         ; preds = %entry
  %0 = getelementptr inbounds i8, ptr %c.i, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl.i = shl i32 %pf, 8
  %or.i = or i32 %shl.i, %vf
  %or2.i = or i32 %or.i, 144703488
  %2 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2.i, ptr %c.i, align 4
  %retval_len16.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i, i32 0, i32 1
  %3 = ptrtoint ptr %retval_len16.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %retval_len16.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nparams)
  %tobool.not9.i = icmp eq i32 %nparams, 0
  br i1 %tobool.not9.i, label %if.end.i.while.end.i_crit_edge, label %while.body.i

if.end.i.while.end.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i:                                     ; preds = %if.end.i
  %4 = ptrtoint ptr %params to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %params, align 4
  %incdec.ptr3.i = getelementptr inbounds i8, ptr %c.i, i32 12
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %0, align 4
  %7 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %val, align 4
  %9 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %nparams)
  %tobool.not.i = icmp eq i32 %nparams, 1
  br i1 %tobool.not.i, label %while.body.i.while.end.i_crit_edge, label %while.body.i.1

while.body.i.while.end.i_crit_edge:               ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.1:                                   ; preds = %while.body.i
  %incdec.ptr5.i = getelementptr inbounds i8, ptr %c.i, i32 16
  %incdec.ptr4.i = getelementptr i32, ptr %val, i32 1
  %incdec.ptr.i = getelementptr i32, ptr %params, i32 1
  %10 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %incdec.ptr.i, align 4
  %incdec.ptr3.i.1 = getelementptr inbounds i8, ptr %c.i, i32 20
  %12 = ptrtoint ptr %incdec.ptr5.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %incdec.ptr5.i, align 4
  %13 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %incdec.ptr4.i, align 4
  %15 = ptrtoint ptr %incdec.ptr3.i.1 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr3.i.1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %nparams)
  %tobool.not.i.1 = icmp eq i32 %nparams, 2
  br i1 %tobool.not.i.1, label %while.body.i.1.while.end.i_crit_edge, label %while.body.i.2

while.body.i.1.while.end.i_crit_edge:             ; preds = %while.body.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.2:                                   ; preds = %while.body.i.1
  %incdec.ptr5.i.1 = getelementptr inbounds i8, ptr %c.i, i32 24
  %incdec.ptr4.i.1 = getelementptr i32, ptr %val, i32 2
  %incdec.ptr.i.1 = getelementptr i32, ptr %params, i32 2
  %16 = ptrtoint ptr %incdec.ptr.i.1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %incdec.ptr.i.1, align 4
  %incdec.ptr3.i.2 = getelementptr inbounds i8, ptr %c.i, i32 28
  %18 = ptrtoint ptr %incdec.ptr5.i.1 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr5.i.1, align 4
  %19 = ptrtoint ptr %incdec.ptr4.i.1 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %incdec.ptr4.i.1, align 4
  %21 = ptrtoint ptr %incdec.ptr3.i.2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr3.i.2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %nparams)
  %tobool.not.i.2 = icmp eq i32 %nparams, 3
  br i1 %tobool.not.i.2, label %while.body.i.2.while.end.i_crit_edge, label %while.body.i.3

while.body.i.2.while.end.i_crit_edge:             ; preds = %while.body.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.3:                                   ; preds = %while.body.i.2
  %incdec.ptr5.i.2 = getelementptr inbounds i8, ptr %c.i, i32 32
  %incdec.ptr4.i.2 = getelementptr i32, ptr %val, i32 3
  %incdec.ptr.i.2 = getelementptr i32, ptr %params, i32 3
  %22 = ptrtoint ptr %incdec.ptr.i.2 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %incdec.ptr.i.2, align 4
  %incdec.ptr3.i.3 = getelementptr inbounds i8, ptr %c.i, i32 36
  %24 = ptrtoint ptr %incdec.ptr5.i.2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr5.i.2, align 4
  %25 = ptrtoint ptr %incdec.ptr4.i.2 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %incdec.ptr4.i.2, align 4
  %27 = ptrtoint ptr %incdec.ptr3.i.3 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %incdec.ptr3.i.3, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %nparams)
  %tobool.not.i.3 = icmp eq i32 %nparams, 4
  br i1 %tobool.not.i.3, label %while.body.i.3.while.end.i_crit_edge, label %while.body.i.4

while.body.i.3.while.end.i_crit_edge:             ; preds = %while.body.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.4:                                   ; preds = %while.body.i.3
  %incdec.ptr5.i.3 = getelementptr inbounds i8, ptr %c.i, i32 40
  %incdec.ptr4.i.3 = getelementptr i32, ptr %val, i32 4
  %incdec.ptr.i.3 = getelementptr i32, ptr %params, i32 4
  %28 = ptrtoint ptr %incdec.ptr.i.3 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %incdec.ptr.i.3, align 4
  %incdec.ptr3.i.4 = getelementptr inbounds i8, ptr %c.i, i32 44
  %30 = ptrtoint ptr %incdec.ptr5.i.3 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %incdec.ptr5.i.3, align 4
  %31 = ptrtoint ptr %incdec.ptr4.i.3 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %incdec.ptr4.i.3, align 4
  %33 = ptrtoint ptr %incdec.ptr3.i.4 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %incdec.ptr3.i.4, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %nparams)
  %tobool.not.i.4 = icmp eq i32 %nparams, 5
  br i1 %tobool.not.i.4, label %while.body.i.4.while.end.i_crit_edge, label %while.body.i.5

while.body.i.4.while.end.i_crit_edge:             ; preds = %while.body.i.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.5:                                   ; preds = %while.body.i.4
  %incdec.ptr5.i.4 = getelementptr inbounds i8, ptr %c.i, i32 48
  %incdec.ptr4.i.4 = getelementptr i32, ptr %val, i32 5
  %incdec.ptr.i.4 = getelementptr i32, ptr %params, i32 5
  %34 = ptrtoint ptr %incdec.ptr.i.4 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %incdec.ptr.i.4, align 4
  %incdec.ptr3.i.5 = getelementptr inbounds i8, ptr %c.i, i32 52
  %36 = ptrtoint ptr %incdec.ptr5.i.4 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %incdec.ptr5.i.4, align 4
  %37 = ptrtoint ptr %incdec.ptr4.i.4 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %incdec.ptr4.i.4, align 4
  %39 = ptrtoint ptr %incdec.ptr3.i.5 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %incdec.ptr3.i.5, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %nparams)
  %tobool.not.i.5 = icmp eq i32 %nparams, 6
  br i1 %tobool.not.i.5, label %while.body.i.5.while.end.i_crit_edge, label %while.body.i.6

while.body.i.5.while.end.i_crit_edge:             ; preds = %while.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.end.i

while.body.i.6:                                   ; preds = %while.body.i.5
  call void @__sanitizer_cov_trace_pc() #16
  %incdec.ptr5.i.5 = getelementptr inbounds i8, ptr %c.i, i32 56
  %incdec.ptr4.i.5 = getelementptr i32, ptr %val, i32 6
  %incdec.ptr.i.5 = getelementptr i32, ptr %params, i32 6
  %40 = ptrtoint ptr %incdec.ptr.i.5 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %incdec.ptr.i.5, align 4
  %incdec.ptr3.i.6 = getelementptr inbounds i8, ptr %c.i, i32 60
  %42 = ptrtoint ptr %incdec.ptr5.i.5 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %incdec.ptr5.i.5, align 4
  %43 = ptrtoint ptr %incdec.ptr4.i.5 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %incdec.ptr4.i.5, align 4
  %45 = ptrtoint ptr %incdec.ptr3.i.6 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %incdec.ptr3.i.6, align 4
  br label %while.end.i

while.end.i:                                      ; preds = %while.body.i.6, %while.body.i.5.while.end.i_crit_edge, %while.body.i.4.while.end.i_crit_edge, %while.body.i.3.while.end.i_crit_edge, %while.body.i.2.while.end.i_crit_edge, %while.body.i.1.while.end.i_crit_edge, %while.body.i.while.end.i_crit_edge, %if.end.i.while.end.i_crit_edge
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  br label %t4_set_params_timeout.exit

t4_set_params_timeout.exit:                       ; preds = %while.end.i, %entry.t4_set_params_timeout.exit_crit_edge
  %retval.0.i = phi i32 [ %call.i.i, %while.end.i ], [ -22, %entry.t4_set_params_timeout.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_cfg_pfvf(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %txq, i32 noundef %txq_eth_ctrl, i32 noundef %rxqi, i32 noundef %rxq, i32 noundef %tc, i32 noundef %vi, i32 noundef %cmask, i32 noundef %pmask, i32 noundef %nexact, i32 noundef %rcaps, i32 noundef %wxcaps) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_pfvf_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %c, i32 0, i32 3
  %3 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %c, i32 0, i32 4
  %4 = getelementptr inbounds %struct.fw_pfvf_cmd, ptr %c, i32 0, i32 5
  %5 = getelementptr inbounds i8, ptr %c, i32 24
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 0, ptr %5, align 4
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 161480704
  %7 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or2, ptr %c, align 4
  %8 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 2, ptr %0, align 4
  %shl3 = shl i32 %rxqi, 20
  %or5 = or i32 %shl3, %rxq
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or5, ptr %1, align 4
  %shl6 = shl i32 %cmask, 24
  %shl7 = shl i32 %pmask, 20
  %or8 = or i32 %shl6, %txq
  %or10 = or i32 %or8, %shl7
  %10 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or10, ptr %2, align 4
  %shl11 = shl i32 %tc, 24
  %shl12 = shl i32 %vi, 16
  %or13 = or i32 %shl12, %shl11
  %or15 = or i32 %or13, %nexact
  %11 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or15, ptr %3, align 4
  %shl16 = shl i32 %rcaps, 24
  %shl17 = shl i32 %wxcaps, 16
  %or18 = or i32 %shl16, %txq_eth_ctrl
  %or20 = or i32 %or18, %shl17
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or20, ptr %4, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_alloc_vi(ptr noundef %adap, i32 noundef %mbox, i32 noundef %port, i32 noundef %pf, i32 noundef %vf, i32 noundef %nmac, ptr noundef writeonly %mac, ptr noundef writeonly %rss_size, ptr noundef writeonly %vivld, ptr noundef writeonly %vin) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 347078656
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 8
  %alloc_to_len16 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -2147483644, ptr %alloc_to_len16, align 4
  %port.tr = trunc i32 %port to i8
  %conv = shl i8 %port.tr, 4
  %portid_pkd = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 4
  %4 = ptrtoint ptr %portid_pkd to i32
  call void @__asan_store1_noabort(i32 %4)
  store i8 %conv, ptr %portid_pkd, align 8
  %5 = trunc i32 %nmac to i8
  %conv4 = add i8 %5, -1
  %nmac5 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 5
  %6 = ptrtoint ptr %nmac5 to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv4, ptr %nmac5, align 1
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %tobool6.not = icmp eq ptr %mac, null
  br i1 %tobool6.not, label %if.end.if.end19_crit_edge, label %if.then7

if.end.if.end19_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

if.then7:                                         ; preds = %if.end
  %mac8 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 3
  %7 = call ptr @memcpy(ptr %mac, ptr %mac8, i32 6)
  %8 = zext i32 %nmac to i64
  call void @__sanitizer_cov_trace_switch(i64 %8, ptr @__sancov_gen_cov_switch_values.505)
  switch i32 %nmac, label %if.then7.if.end19_crit_edge [
    i32 5, label %sw.bb
    i32 4, label %if.then7.sw.bb10_crit_edge
    i32 3, label %if.then7.sw.bb13_crit_edge
    i32 2, label %if.then7.sw.bb16_crit_edge
  ]

if.then7.sw.bb16_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb16

if.then7.sw.bb13_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb13

if.then7.sw.bb10_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.bb10

if.then7.if.end19_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end19

sw.bb:                                            ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr = getelementptr i8, ptr %mac, i32 24
  %nmac3 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 12
  %9 = call ptr @memcpy(ptr %add.ptr, ptr %nmac3, i32 6)
  br label %sw.bb10

sw.bb10:                                          ; preds = %sw.bb, %if.then7.sw.bb10_crit_edge
  %add.ptr11 = getelementptr i8, ptr %mac, i32 18
  %nmac2 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 10
  %10 = call ptr @memcpy(ptr %add.ptr11, ptr %nmac2, i32 6)
  br label %sw.bb13

sw.bb13:                                          ; preds = %sw.bb10, %if.then7.sw.bb13_crit_edge
  %add.ptr14 = getelementptr i8, ptr %mac, i32 12
  %nmac1 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 8
  %11 = call ptr @memcpy(ptr %add.ptr14, ptr %nmac1, i32 6)
  br label %sw.bb16

sw.bb16:                                          ; preds = %sw.bb13, %if.then7.sw.bb16_crit_edge
  %add.ptr17 = getelementptr i8, ptr %mac, i32 6
  %nmac0 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 6
  %12 = call ptr @memcpy(ptr %add.ptr17, ptr %nmac0, i32 6)
  br label %if.end19

if.end19:                                         ; preds = %sw.bb16, %if.then7.if.end19_crit_edge, %if.end.if.end19_crit_edge
  %tobool20.not = icmp eq ptr %rss_size, null
  br i1 %tobool20.not, label %if.end19.if.end23_crit_edge, label %if.then21

if.end19.if.end23_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then21:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  %rsssize_pkd = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 7
  %13 = ptrtoint ptr %rsssize_pkd to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %rsssize_pkd, align 8
  %15 = and i16 %14, 2047
  %and = zext i16 %15 to i32
  %16 = ptrtoint ptr %rss_size to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and, ptr %rss_size, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.end19.if.end23_crit_edge
  %tobool24.not = icmp eq ptr %vivld, null
  br i1 %tobool24.not, label %if.end23.if.end30_crit_edge, label %if.then25

if.end23.if.end30_crit_edge:                      ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end30

if.then25:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  %17 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %alloc_to_len16, align 4
  %shr27 = lshr i32 %18, 24
  %19 = trunc i32 %shr27 to i8
  %conv29 = and i8 %19, 1
  %20 = ptrtoint ptr %vivld to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %conv29, ptr %vivld, align 1
  br label %if.end30

if.end30:                                         ; preds = %if.then25, %if.end23.if.end30_crit_edge
  %tobool31.not = icmp eq ptr %vin, null
  br i1 %tobool31.not, label %if.end30.if.end37_crit_edge, label %if.then32

if.end30.if.end37_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

if.then32:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %21 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %alloc_to_len16, align 4
  %shr34 = lshr i32 %22, 16
  %conv36 = trunc i32 %shr34 to i8
  %23 = ptrtoint ptr %vin to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %conv36, ptr %vin, align 1
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end30.if.end37_crit_edge
  %type_viid = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 2
  %24 = ptrtoint ptr %type_viid to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %type_viid, align 8
  %26 = and i16 %25, 4095
  %and40 = zext i16 %26 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %and40, %if.end37 ], [ %call.i.i, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_free_vi(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %viid) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 344981504
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 8
  %alloc_to_len16 = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1073741828, ptr %alloc_to_len16, align 4
  %conv = trunc i32 %viid to i16
  %type_viid = getelementptr inbounds %struct.fw_vi_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %type_viid to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 %conv, ptr %type_viid, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_rxmode(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i32 noundef %viid_mirror, i32 noundef %mtu, i32 noundef %promisc, i32 noundef %all_multi, i32 noundef %bcast, i32 noundef %vlanex, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_rxmode_cmd, align 4
  %c_mirror = alloca %struct.fw_vi_rxmode_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_vi_rxmode_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_vi_rxmode_cmd, ptr %c, i32 0, i32 2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c_mirror) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mtu)
  %cmp = icmp slt i32 %mtu, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %promisc)
  %cmp1 = icmp slt i32 %promisc, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %all_multi)
  %cmp4 = icmp slt i32 %all_multi, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcast)
  %cmp7 = icmp slt i32 %bcast, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %vlanex)
  %cmp10 = icmp slt i32 %vlanex, 0
  %2 = getelementptr inbounds i8, ptr %c, i32 12
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %2, align 4
  %or = or i32 %viid, 379584512
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %c, align 4
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %0, align 4
  %mtu.op = shl i32 %mtu, 16
  %shl13 = select i1 %cmp, i32 -65536, i32 %mtu.op
  %promisc.op = shl i32 %promisc, 14
  %shl14 = select i1 %cmp1, i32 49152, i32 %promisc.op
  %or15 = or i32 %shl14, %shl13
  %all_multi.op = shl i32 %all_multi, 12
  %shl16 = select i1 %cmp4, i32 12288, i32 %all_multi.op
  %or17 = or i32 %or15, %shl16
  %bcast.op = shl i32 %bcast, 10
  %shl18 = select i1 %cmp7, i32 3072, i32 %bcast.op
  %or19 = or i32 %or17, %shl18
  %vlanex.op = shl i32 %vlanex, 8
  %shl20 = select i1 %cmp10, i32 768, i32 %vlanex.op
  %or21 = or i32 %or19, %shl20
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or21, ptr %1, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %viid_mirror)
  %tobool.not = icmp eq i32 %viid_mirror, 0
  br i1 %tobool.not, label %entry.cleanup.sink.split_crit_edge, label %if.end26

entry.cleanup.sink.split_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end26:                                         ; preds = %entry
  %7 = call ptr @memcpy(ptr %c_mirror, ptr %c, i32 16)
  %or24 = or i32 %viid_mirror, 379584512
  %8 = ptrtoint ptr %c_mirror to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or24, ptr %c_mirror, align 4
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool28.not = icmp ne i32 %call.i, 0
  %brmerge = or i1 %tobool.not, %tobool28.not
  br i1 %brmerge, label %if.end26.cleanup_crit_edge, label %if.end26.cleanup.sink.split_crit_edge

if.end26.cleanup.sink.split_crit_edge:            ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup.sink.split

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end26.cleanup.sink.split_crit_edge, %entry.cleanup.sink.split_crit_edge
  %c.sink = phi ptr [ %c, %entry.cleanup.sink.split_crit_edge ], [ %c_mirror, %if.end26.cleanup.sink.split_crit_edge ]
  %call.i55 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.sink, i32 noundef 16, ptr noundef null, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end26.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.end26.cleanup_crit_edge ], [ %call.i55, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c_mirror) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_free_encap_mac_filt(ptr noundef %adap, i32 noundef %viid, i32 noundef %idx, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1, ptr %freemacs_to_len16, align 4
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %4 = trunc i32 %idx to i16
  %conv = or i16 %4, -32768
  %5 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %u, align 8
  %macaddr = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %u, i32 0, i32 1
  %6 = call ptr @memset(ptr %macaddr, i32 0, i32 6)
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %7 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %mbox, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %8, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_free_raw_mac_filt(ptr noundef %adap, i32 noundef %viid, ptr nocapture noundef readonly %addr, ptr nocapture noundef readonly %mask, i32 noundef %idx, i8 noundef zeroext %lookup_type, i8 noundef zeroext %port_id, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 16777217, ptr %freemacs_to_len16, align 4
  %shl3 = shl i32 %idx, 16
  %or4 = or i32 %shl3, 1020
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or4, ptr %u, align 8
  %conv = zext i8 %lookup_type to i32
  %shl5 = shl nuw nsw i32 %conv, 10
  %conv6 = zext i8 %port_id to i32
  %shl7 = shl nuw nsw i32 %conv6, 12
  %or8 = or i32 %shl7, %shl5
  %data0_pkd = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %5 = ptrtoint ptr %data0_pkd to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or8, ptr %data0_pkd, align 4
  %data0m_pkd = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %6 = ptrtoint ptr %data0m_pkd to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 64512, ptr %data0m_pkd, align 8
  %data1 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %add.ptr = getelementptr inbounds i8, ptr %data1, i32 2
  %7 = call ptr @memcpy(ptr %add.ptr, ptr %addr, i32 6)
  %data1m = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 4
  %add.ptr10 = getelementptr inbounds i8, ptr %data1m, i32 2
  %8 = call ptr @memcpy(ptr %add.ptr10, ptr %mask, i32 6)
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %9 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mbox, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %10, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_alloc_encap_mac_filt(ptr noundef %adap, i32 noundef %viid, ptr nocapture noundef readonly %addr, ptr nocapture noundef readonly %mask, i32 noundef %vni, i32 noundef %vni_mask, i8 noundef zeroext %dip_hit, i8 noundef zeroext %lookup_type, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 25165825, ptr %freemacs_to_len16, align 4
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -31745, ptr %u, align 8
  %macaddr = getelementptr inbounds %struct.fw_vi_mac_vni, ptr %u, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %macaddr, ptr %addr, i32 6)
  %macaddr_mask = getelementptr inbounds %struct.fw_vi_mac_vni, ptr %u, i32 0, i32 3
  %6 = call ptr @memcpy(ptr %macaddr_mask, ptr %mask, i32 6)
  %conv = zext i8 %dip_hit to i32
  %shl4 = shl i32 %conv, 30
  %or5 = or i32 %shl4, %vni
  %conv6 = zext i8 %lookup_type to i32
  %shl7 = shl i32 %conv6, 31
  %or8 = or i32 %or5, %shl7
  %lookup_type_to_vni = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %7 = ptrtoint ptr %lookup_type_to_vni to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or8, ptr %lookup_type_to_vni, align 8
  %vni_mask_pkd = getelementptr inbounds %struct.fw_vi_mac_vni, ptr %u, i32 0, i32 5
  %8 = ptrtoint ptr %vni_mask_pkd to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %vni_mask, ptr %vni_mask_pkd, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %9 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mbox, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %10, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp eq i32 %call.i, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %u to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %u, align 8
  %13 = and i16 %12, 1023
  %and = zext i16 %13 to i32
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %ret.0 = phi i32 [ %and, %if.then ], [ %call.i, %entry.if.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_alloc_raw_mac_filt(ptr noundef %adap, i32 noundef %viid, ptr nocapture noundef readonly %addr, ptr nocapture noundef readonly %mask, i32 noundef %idx, i8 noundef zeroext %lookup_type, i8 noundef zeroext %port_id, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 16777217, ptr %freemacs_to_len16, align 4
  %shl1 = shl i32 %idx, 16
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %shl1, ptr %u, align 8
  %conv = zext i8 %lookup_type to i32
  %shl2 = shl nuw nsw i32 %conv, 10
  %conv3 = zext i8 %port_id to i32
  %shl4 = shl nuw nsw i32 %conv3, 12
  %or5 = or i32 %shl4, %shl2
  %data0_pkd = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 1
  %5 = ptrtoint ptr %data0_pkd to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or5, ptr %data0_pkd, align 4
  %data0m_pkd = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %6 = ptrtoint ptr %data0m_pkd to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 64512, ptr %data0m_pkd, align 8
  %data1 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %add.ptr = getelementptr inbounds i8, ptr %data1, i32 2
  %7 = call ptr @memcpy(ptr %add.ptr, ptr %addr, i32 6)
  %data1m = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 4
  %add.ptr7 = getelementptr inbounds i8, ptr %data1m, i32 2
  %8 = call ptr @memcpy(ptr %add.ptr7, ptr %mask, i32 6)
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %9 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mbox, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %10, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp eq i32 %call.i, 0
  br i1 %cmp, label %if.then, label %entry.if.end13_crit_edge

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %11 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %u, align 8
  %shr = lshr i32 %12, 16
  call void @__sanitizer_cov_trace_cmp4(i32 %shr, i32 %idx)
  %cmp10.not = icmp eq i32 %shr, %idx
  %spec.store.select = select i1 %cmp10.not, i32 %shr, i32 -12
  br label %if.end13

if.end13:                                         ; preds = %if.then, %entry.if.end13_crit_edge
  %ret.0 = phi i32 [ %spec.store.select, %if.then ], [ %call.i, %entry.if.end13_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_alloc_mac_filt(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i1 noundef zeroext %free, i32 noundef %naddr, ptr nocapture noundef readonly %addr, ptr noundef writeonly %idx, ptr noundef %hash, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %mps_tcam_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23, i32 6
  %0 = ptrtoint ptr %mps_tcam_size to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %mps_tcam_size, align 4
  %conv = zext i16 %1 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv, i32 %naddr)
  %cmp = icmp ult i32 %conv, %naddr
  br i1 %cmp, label %entry.cleanup80_crit_edge, label %for.cond.preheader

entry.cleanup80_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup80

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %naddr)
  %cmp3140.not = icmp eq i32 %naddr, 0
  br i1 %cmp3140.not, label %for.cond.preheader.if.then78_crit_edge, label %for.body.lr.ph

for.cond.preheader.if.then78_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then78

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %tobool36.not = icmp eq ptr %idx, null
  %tobool55.not = icmp eq ptr %hash, null
  %2 = getelementptr inbounds i8, ptr %c, i32 8
  %macaddr = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %u, i32 0, i32 1
  %incdec.ptr = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %macaddr.1 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr, i32 0, i32 1
  %incdec.ptr.1 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %macaddr.2 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr.1, i32 0, i32 1
  %incdec.ptr.2 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 4
  %macaddr.3 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr.2, i32 0, i32 1
  %incdec.ptr.3 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1
  %macaddr.4 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 2
  %incdec.ptr.4 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 8
  %macaddr.5 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 10
  %incdec.ptr.5 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 16
  %macaddr.6 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 18
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %rem.0146 = phi i32 [ %naddr, %for.body.lr.ph ], [ %sub69, %cleanup.for.body_crit_edge ]
  %nfilters.0145 = phi i32 [ 0, %for.body.lr.ph ], [ %nfilters.1.lcssa, %cleanup.for.body_crit_edge ]
  %offset.0142 = phi i32 [ 0, %for.body.lr.ph ], [ %add68, %cleanup.for.body_crit_edge ]
  %free.addr.0.off0141 = phi i1 [ %free, %for.body.lr.ph ], [ false, %cleanup.for.body_crit_edge ]
  %3 = call i32 @llvm.umin.i32(i32 %rem.0146, i32 7)
  %4 = shl nuw nsw i32 %3, 3
  %sub = add nuw nsw i32 %4, 23
  %div124 = lshr i32 %sub, 4
  %5 = call ptr @memset(ptr %2, i32 0, i32 56)
  %or = select i1 %free.addr.0.off0141, i32 363855872, i32 362807296
  %or9 = or i32 %or, %viid
  %6 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or9, ptr %c, align 8
  %shl12 = select i1 %free.addr.0.off0141, i32 -2147483648, i32 0
  %or14 = or i32 %div124, %shl12
  %7 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or14, ptr %freemacs_to_len16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp16132.not = icmp eq i32 %3, 0
  br i1 %cmp16132.not, label %for.body.for.end_crit_edge, label %for.body18

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18:                                       ; preds = %for.body
  %8 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 -31745, ptr %u, align 8
  %arrayidx = getelementptr ptr, ptr %addr, i32 %offset.0142
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx, align 4
  %11 = call ptr @memcpy(ptr %macaddr, ptr %10, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %exitcond.not = icmp eq i32 %3, 1
  br i1 %exitcond.not, label %for.body18.for.end_crit_edge, label %for.body18.1

for.body18.for.end_crit_edge:                     ; preds = %for.body18
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.1:                                     ; preds = %for.body18
  %12 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 -31745, ptr %incdec.ptr, align 8
  %add20.1 = add i32 %offset.0142, 1
  %arrayidx.1 = getelementptr ptr, ptr %addr, i32 %add20.1
  %13 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx.1, align 4
  %15 = call ptr @memcpy(ptr %macaddr.1, ptr %14, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %exitcond.not.1 = icmp eq i32 %3, 2
  br i1 %exitcond.not.1, label %for.body18.1.for.end_crit_edge, label %for.body18.2

for.body18.1.for.end_crit_edge:                   ; preds = %for.body18.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.2:                                     ; preds = %for.body18.1
  %16 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_store2_noabort(i32 %16)
  store i16 -31745, ptr %incdec.ptr.1, align 8
  %add20.2 = add i32 %offset.0142, 2
  %arrayidx.2 = getelementptr ptr, ptr %addr, i32 %add20.2
  %17 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx.2, align 4
  %19 = call ptr @memcpy(ptr %macaddr.2, ptr %18, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %exitcond.not.2 = icmp eq i32 %3, 3
  br i1 %exitcond.not.2, label %for.body18.2.for.end_crit_edge, label %for.body18.3

for.body18.2.for.end_crit_edge:                   ; preds = %for.body18.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.3:                                     ; preds = %for.body18.2
  %20 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_store2_noabort(i32 %20)
  store i16 -31745, ptr %incdec.ptr.2, align 8
  %add20.3 = add i32 %offset.0142, 3
  %arrayidx.3 = getelementptr ptr, ptr %addr, i32 %add20.3
  %21 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.3, align 4
  %23 = call ptr @memcpy(ptr %macaddr.3, ptr %22, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %3)
  %exitcond.not.3 = icmp eq i32 %3, 4
  br i1 %exitcond.not.3, label %for.body18.3.for.end_crit_edge, label %for.body18.4

for.body18.3.for.end_crit_edge:                   ; preds = %for.body18.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.4:                                     ; preds = %for.body18.3
  %24 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_store2_noabort(i32 %24)
  store i16 -31745, ptr %incdec.ptr.3, align 8
  %add20.4 = add i32 %offset.0142, 4
  %arrayidx.4 = getelementptr ptr, ptr %addr, i32 %add20.4
  %25 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx.4, align 4
  %27 = call ptr @memcpy(ptr %macaddr.4, ptr %26, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %3)
  %exitcond.not.4 = icmp eq i32 %3, 5
  br i1 %exitcond.not.4, label %for.body18.4.for.end_crit_edge, label %for.body18.5

for.body18.4.for.end_crit_edge:                   ; preds = %for.body18.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.5:                                     ; preds = %for.body18.4
  %28 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 -31745, ptr %incdec.ptr.4, align 8
  %add20.5 = add i32 %offset.0142, 5
  %arrayidx.5 = getelementptr ptr, ptr %addr, i32 %add20.5
  %29 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.5, align 4
  %31 = call ptr @memcpy(ptr %macaddr.5, ptr %30, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %3)
  %exitcond.not.5 = icmp eq i32 %3, 6
  br i1 %exitcond.not.5, label %for.body18.5.for.end_crit_edge, label %for.body18.6

for.body18.5.for.end_crit_edge:                   ; preds = %for.body18.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body18.6:                                     ; preds = %for.body18.5
  call void @__sanitizer_cov_trace_pc() #16
  %32 = ptrtoint ptr %incdec.ptr.5 to i32
  call void @__asan_store2_noabort(i32 %32)
  store i16 -31745, ptr %incdec.ptr.5, align 8
  %add20.6 = add i32 %offset.0142, 6
  %arrayidx.6 = getelementptr ptr, ptr %addr, i32 %add20.6
  %33 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx.6, align 4
  %35 = call ptr @memcpy(ptr %macaddr.6, ptr %34, i32 6)
  br label %for.end

for.end:                                          ; preds = %for.body18.6, %for.body18.5.for.end_crit_edge, %for.body18.4.for.end_crit_edge, %for.body18.3.for.end_crit_edge, %for.body18.2.for.end_crit_edge, %for.body18.1.for.end_crit_edge, %for.body18.for.end_crit_edge, %for.body.for.end_crit_edge
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  %36 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.506)
  switch i32 %call.i, label %for.end.for.end73_crit_edge [
    i32 0, label %for.end.if.end26_crit_edge
    i32 -12, label %for.end.if.end26_crit_edge155
  ]

for.end.if.end26_crit_edge155:                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

for.end.if.end26_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

for.end.for.end73_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end73

if.end26:                                         ; preds = %for.end.if.end26_crit_edge, %for.end.if.end26_crit_edge155
  br i1 %cmp16132.not, label %if.end26.cleanup_crit_edge, label %if.end26.for.body32_crit_edge

if.end26.for.body32_crit_edge:                    ; preds = %if.end26
  br label %for.body32

if.end26.cleanup_crit_edge:                       ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body32:                                       ; preds = %if.end63.for.body32_crit_edge, %if.end26.for.body32_crit_edge
  %i.1138 = phi i32 [ %inc65, %if.end63.for.body32_crit_edge ], [ 0, %if.end26.for.body32_crit_edge ]
  %p.1137 = phi ptr [ %incdec.ptr66, %if.end63.for.body32_crit_edge ], [ %u, %if.end26.for.body32_crit_edge ]
  %nfilters.1136 = phi i32 [ %nfilters.2, %if.end63.for.body32_crit_edge ], [ %nfilters.0145, %if.end26.for.body32_crit_edge ]
  %37 = ptrtoint ptr %p.1137 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %p.1137, align 2
  %39 = and i16 %38, 1023
  br i1 %tobool36.not, label %for.body32.if.end49_crit_edge, label %if.then37

for.body32.if.end49_crit_edge:                    ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then37:                                        ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_cmp2(i16 %39, i16 %1)
  %cmp39.not = icmp ult i16 %39, %1
  %spec.select125 = select i1 %cmp39.not, i16 %39, i16 -1
  %add47 = add i32 %i.1138, %offset.0142
  %arrayidx48 = getelementptr i16, ptr %idx, i32 %add47
  %40 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store2_noabort(i32 %40)
  store i16 %spec.select125, ptr %arrayidx48, align 2
  br label %if.end49

if.end49:                                         ; preds = %if.then37, %for.body32.if.end49_crit_edge
  call void @__sanitizer_cov_trace_cmp2(i16 %39, i16 %1)
  %cmp51 = icmp ult i16 %39, %1
  br i1 %cmp51, label %if.then53, label %if.else

if.then53:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  %inc54 = add i32 %nfilters.1136, 1
  br label %if.end63

if.else:                                          ; preds = %if.end49
  br i1 %tobool55.not, label %if.else.if.end63_crit_edge, label %if.then56

if.else.if.end63_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end63

if.then56:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %add57 = add i32 %i.1138, %offset.0142
  %arrayidx58 = getelementptr ptr, ptr %addr, i32 %add57
  %41 = ptrtoint ptr %arrayidx58 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx58, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %42, align 1
  %conv.i = zext i8 %44 to i32
  %shl.i = shl nuw nsw i32 %conv.i, 16
  %arrayidx1.i = getelementptr i8, ptr %42, i32 1
  %45 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx1.i, align 1
  %conv2.i = zext i8 %46 to i32
  %shl3.i = shl nuw nsw i32 %conv2.i, 8
  %or.i = or i32 %shl3.i, %shl.i
  %arrayidx4.i = getelementptr i8, ptr %42, i32 2
  %47 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %arrayidx4.i, align 1
  %conv5.i = zext i8 %48 to i32
  %or6.i = or i32 %or.i, %conv5.i
  %arrayidx7.i = getelementptr i8, ptr %42, i32 3
  %49 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %arrayidx7.i, align 1
  %conv8.i = zext i8 %50 to i32
  %shl9.i = shl nuw nsw i32 %conv8.i, 16
  %arrayidx10.i = getelementptr i8, ptr %42, i32 4
  %51 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %arrayidx10.i, align 1
  %conv11.i = zext i8 %52 to i32
  %shl12.i = shl nuw nsw i32 %conv11.i, 8
  %or13.i = or i32 %shl12.i, %shl9.i
  %arrayidx14.i = getelementptr i8, ptr %42, i32 5
  %53 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_load1_noabort(i32 %53)
  %54 = load i8, ptr %arrayidx14.i, align 1
  %conv15.i = zext i8 %54 to i32
  %or16.i = or i32 %or13.i, %conv15.i
  %xor.i = xor i32 %or16.i, %or6.i
  %shr.i = lshr i32 %xor.i, 12
  %xor17.i = xor i32 %shr.i, %xor.i
  %shr18.i = lshr i32 %xor17.i, 6
  %xor19.i = xor i32 %shr18.i, %xor17.i
  %and.i = and i32 %xor19.i, 63
  %sh_prom = zext i32 %and.i to i64
  %shl60 = shl nuw i64 1, %sh_prom
  %55 = ptrtoint ptr %hash to i32
  call void @__asan_load8_noabort(i32 %55)
  %56 = load i64, ptr %hash, align 8
  %or61 = or i64 %shl60, %56
  store i64 %or61, ptr %hash, align 8
  br label %if.end63

if.end63:                                         ; preds = %if.then56, %if.else.if.end63_crit_edge, %if.then53
  %nfilters.2 = phi i32 [ %inc54, %if.then53 ], [ %nfilters.1136, %if.then56 ], [ %nfilters.1136, %if.else.if.end63_crit_edge ]
  %inc65 = add nuw nsw i32 %i.1138, 1
  %incdec.ptr66 = getelementptr %struct.fw_vi_mac_exact, ptr %p.1137, i32 1
  %exitcond151.not = icmp eq i32 %inc65, %3
  br i1 %exitcond151.not, label %if.end63.cleanup_crit_edge, label %if.end63.for.body32_crit_edge

if.end63.for.body32_crit_edge:                    ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body32

if.end63.cleanup_crit_edge:                       ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %if.end63.cleanup_crit_edge, %if.end26.cleanup_crit_edge
  %nfilters.1.lcssa = phi i32 [ %nfilters.0145, %if.end26.cleanup_crit_edge ], [ %nfilters.2, %if.end63.cleanup_crit_edge ]
  %add68 = add i32 %3, %offset.0142
  %sub69 = sub i32 %rem.0146, %3
  %cmp3 = icmp ult i32 %add68, %naddr
  br i1 %cmp3, label %cleanup.for.body_crit_edge, label %cleanup.for.end73_crit_edge

cleanup.for.end73_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end73

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end73:                                        ; preds = %cleanup.for.end73_crit_edge, %for.end.for.end73_crit_edge
  %nfilters.0.lcssa = phi i32 [ %nfilters.1.lcssa, %cleanup.for.end73_crit_edge ], [ %nfilters.0145, %for.end.for.end73_crit_edge ]
  %57 = zext i32 %call.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %57, ptr @__sancov_gen_cov_switch_values.507)
  switch i32 %call.i, label %for.end73.cleanup80_crit_edge [
    i32 0, label %for.end73.if.then78_crit_edge
    i32 -12, label %for.end73.if.then78_crit_edge156
  ]

for.end73.if.then78_crit_edge156:                 ; preds = %for.end73
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then78

for.end73.if.then78_crit_edge:                    ; preds = %for.end73
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then78

for.end73.cleanup80_crit_edge:                    ; preds = %for.end73
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup80

if.then78:                                        ; preds = %for.end73.if.then78_crit_edge, %for.end73.if.then78_crit_edge156, %for.cond.preheader.if.then78_crit_edge
  %nfilters.0.lcssa154 = phi i32 [ %nfilters.0.lcssa, %for.end73.if.then78_crit_edge ], [ %nfilters.0.lcssa, %for.end73.if.then78_crit_edge156 ], [ 0, %for.cond.preheader.if.then78_crit_edge ]
  br label %cleanup80

cleanup80:                                        ; preds = %if.then78, %for.end73.cleanup80_crit_edge, %entry.cleanup80_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup80_crit_edge ], [ %nfilters.0.lcssa154, %if.then78 ], [ %call.i, %for.end73.cleanup80_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_free_mac_filt(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i32 noundef %naddr, ptr nocapture noundef readonly %addr, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  %cond = select i1 %cmp.i.not, i32 336, i32 512
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %naddr)
  %cmp = icmp ult i32 %cond, %naddr
  br i1 %cmp, label %entry.cleanup43_crit_edge, label %for.cond.preheader

entry.cleanup43_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup43

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %naddr)
  %cmp187 = icmp sgt i32 %naddr, 0
  br i1 %cmp187, label %for.body.lr.ph, label %for.cond.preheader.cleanup43_crit_edge

for.cond.preheader.cleanup43_crit_edge:           ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup43

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %or = or i32 %viid, 362807296
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %3 = getelementptr inbounds i8, ptr %c, i32 8
  %macaddr = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %u, i32 0, i32 1
  %incdec.ptr = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %macaddr.1 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr, i32 0, i32 1
  %incdec.ptr.1 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %macaddr.2 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr.1, i32 0, i32 1
  %incdec.ptr.2 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 4
  %macaddr.3 = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %incdec.ptr.2, i32 0, i32 1
  %incdec.ptr.3 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1
  %macaddr.4 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 2
  %incdec.ptr.4 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 8
  %macaddr.5 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 10
  %incdec.ptr.5 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 16
  %macaddr.6 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 18
  %incdec.ptr31 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 2
  %incdec.ptr31.1 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 3
  %incdec.ptr31.2 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 0, i32 4
  %incdec.ptr31.3 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1
  %incdec.ptr31.4 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 8
  %incdec.ptr31.5 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2, i32 1, i32 16
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %for.body.lr.ph
  %offset.090 = phi i32 [ 0, %for.body.lr.ph ], [ %add33, %cleanup.for.body_crit_edge ]
  %rem.089 = phi i32 [ %naddr, %for.body.lr.ph ], [ %sub34, %cleanup.for.body_crit_edge ]
  %nfilters.088 = phi i32 [ 0, %for.body.lr.ph ], [ %nfilters.1.lcssa, %cleanup.for.body_crit_edge ]
  %4 = call i32 @llvm.umin.i32(i32 %rem.089, i32 7)
  %5 = shl nuw nsw i32 %4, 3
  %sub = add nuw nsw i32 %5, 23
  %div72 = lshr i32 %sub, 4
  %6 = call ptr @memset(ptr %3, i32 0, i32 56)
  %7 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or, ptr %c, align 8
  %8 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %div72, ptr %freemacs_to_len16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp780.not = icmp eq i32 %4, 0
  br i1 %cmp780.not, label %for.end.thread, label %for.body8

for.body8:                                        ; preds = %for.body
  %9 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 -31747, ptr %u, align 8
  %arrayidx = getelementptr ptr, ptr %addr, i32 %offset.090
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %12 = call ptr @memcpy(ptr %macaddr, ptr %11, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %exitcond.not = icmp eq i32 %4, 1
  br i1 %exitcond.not, label %for.body8.for.end_crit_edge, label %for.body8.1

for.body8.for.end_crit_edge:                      ; preds = %for.body8
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.1:                                      ; preds = %for.body8
  %13 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store2_noabort(i32 %13)
  store i16 -31747, ptr %incdec.ptr, align 8
  %add10.1 = add i32 %offset.090, 1
  %arrayidx.1 = getelementptr ptr, ptr %addr, i32 %add10.1
  %14 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx.1, align 4
  %16 = call ptr @memcpy(ptr %macaddr.1, ptr %15, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %exitcond.not.1 = icmp eq i32 %4, 2
  br i1 %exitcond.not.1, label %for.body8.1.for.end_crit_edge, label %for.body8.2

for.body8.1.for.end_crit_edge:                    ; preds = %for.body8.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.2:                                      ; preds = %for.body8.1
  %17 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 -31747, ptr %incdec.ptr.1, align 8
  %add10.2 = add i32 %offset.090, 2
  %arrayidx.2 = getelementptr ptr, ptr %addr, i32 %add10.2
  %18 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx.2, align 4
  %20 = call ptr @memcpy(ptr %macaddr.2, ptr %19, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %exitcond.not.2 = icmp eq i32 %4, 3
  br i1 %exitcond.not.2, label %for.body8.2.for.end_crit_edge, label %for.body8.3

for.body8.2.for.end_crit_edge:                    ; preds = %for.body8.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.3:                                      ; preds = %for.body8.2
  %21 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_store2_noabort(i32 %21)
  store i16 -31747, ptr %incdec.ptr.2, align 8
  %add10.3 = add i32 %offset.090, 3
  %arrayidx.3 = getelementptr ptr, ptr %addr, i32 %add10.3
  %22 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx.3, align 4
  %24 = call ptr @memcpy(ptr %macaddr.3, ptr %23, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %exitcond.not.3 = icmp eq i32 %4, 4
  br i1 %exitcond.not.3, label %for.body8.3.for.end_crit_edge, label %for.body8.4

for.body8.3.for.end_crit_edge:                    ; preds = %for.body8.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.4:                                      ; preds = %for.body8.3
  %25 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_store2_noabort(i32 %25)
  store i16 -31747, ptr %incdec.ptr.3, align 8
  %add10.4 = add i32 %offset.090, 4
  %arrayidx.4 = getelementptr ptr, ptr %addr, i32 %add10.4
  %26 = ptrtoint ptr %arrayidx.4 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.4, align 4
  %28 = call ptr @memcpy(ptr %macaddr.4, ptr %27, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %4)
  %exitcond.not.4 = icmp eq i32 %4, 5
  br i1 %exitcond.not.4, label %for.body8.4.for.end_crit_edge, label %for.body8.5

for.body8.4.for.end_crit_edge:                    ; preds = %for.body8.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.5:                                      ; preds = %for.body8.4
  %29 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 -31747, ptr %incdec.ptr.4, align 8
  %add10.5 = add i32 %offset.090, 5
  %arrayidx.5 = getelementptr ptr, ptr %addr, i32 %add10.5
  %30 = ptrtoint ptr %arrayidx.5 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx.5, align 4
  %32 = call ptr @memcpy(ptr %macaddr.5, ptr %31, i32 6)
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %4)
  %exitcond.not.5 = icmp eq i32 %4, 6
  br i1 %exitcond.not.5, label %for.body8.5.for.end_crit_edge, label %for.body8.6

for.body8.5.for.end_crit_edge:                    ; preds = %for.body8.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body8.6:                                      ; preds = %for.body8.5
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %incdec.ptr.5 to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 -31747, ptr %incdec.ptr.5, align 8
  %add10.6 = add i32 %offset.090, 6
  %arrayidx.6 = getelementptr ptr, ptr %addr, i32 %add10.6
  %34 = ptrtoint ptr %arrayidx.6 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %arrayidx.6, align 4
  %36 = call ptr @memcpy(ptr %macaddr.6, ptr %35, i32 6)
  br label %for.end

for.end:                                          ; preds = %for.body8.6, %for.body8.5.for.end_crit_edge, %for.body8.4.for.end_crit_edge, %for.body8.3.for.end_crit_edge, %for.body8.2.for.end_crit_edge, %for.body8.1.for.end_crit_edge, %for.body8.for.end_crit_edge
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool13.not = icmp eq i32 %call.i, 0
  br i1 %tobool13.not, label %for.cond18.preheader, label %for.end.cleanup43_crit_edge

for.end.cleanup43_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup43

for.end.thread:                                   ; preds = %for.body
  %call.i97 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i97)
  %tobool13.not98 = icmp eq i32 %call.i97, 0
  br i1 %tobool13.not98, label %for.end.thread.cleanup_crit_edge, label %for.end.thread.cleanup43_crit_edge

for.end.thread.cleanup43_crit_edge:               ; preds = %for.end.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup43

for.end.thread.cleanup_crit_edge:                 ; preds = %for.end.thread
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond18.preheader:                             ; preds = %for.end
  br i1 %cmp780.not, label %for.cond18.preheader.cleanup_crit_edge, label %for.body20

for.cond18.preheader.cleanup_crit_edge:           ; preds = %for.cond18.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20:                                       ; preds = %for.cond18.preheader
  %37 = ptrtoint ptr %u to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %u, align 8
  %39 = and i16 %38, 1023
  %conv23 = zext i16 %39 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23)
  %cmp24 = icmp ugt i32 %cond, %conv23
  %inc27 = zext i1 %cmp24 to i32
  %spec.select73 = add i32 %nfilters.088, %inc27
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %exitcond96.not = icmp eq i32 %4, 1
  br i1 %exitcond96.not, label %for.body20.cleanup_crit_edge, label %for.body20.1

for.body20.cleanup_crit_edge:                     ; preds = %for.body20
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.1:                                     ; preds = %for.body20
  %40 = ptrtoint ptr %incdec.ptr31 to i32
  call void @__asan_load2_noabort(i32 %40)
  %41 = load i16, ptr %incdec.ptr31, align 8
  %42 = and i16 %41, 1023
  %conv23.1 = zext i16 %42 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.1)
  %cmp24.1 = icmp ugt i32 %cond, %conv23.1
  %inc27.1 = zext i1 %cmp24.1 to i32
  %spec.select73.1 = add i32 %spec.select73, %inc27.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %4)
  %exitcond96.not.1 = icmp eq i32 %4, 2
  br i1 %exitcond96.not.1, label %for.body20.1.cleanup_crit_edge, label %for.body20.2

for.body20.1.cleanup_crit_edge:                   ; preds = %for.body20.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.2:                                     ; preds = %for.body20.1
  %43 = ptrtoint ptr %incdec.ptr31.1 to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %incdec.ptr31.1, align 8
  %45 = and i16 %44, 1023
  %conv23.2 = zext i16 %45 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.2)
  %cmp24.2 = icmp ugt i32 %cond, %conv23.2
  %inc27.2 = zext i1 %cmp24.2 to i32
  %spec.select73.2 = add i32 %spec.select73.1, %inc27.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %exitcond96.not.2 = icmp eq i32 %4, 3
  br i1 %exitcond96.not.2, label %for.body20.2.cleanup_crit_edge, label %for.body20.3

for.body20.2.cleanup_crit_edge:                   ; preds = %for.body20.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.3:                                     ; preds = %for.body20.2
  %46 = ptrtoint ptr %incdec.ptr31.2 to i32
  call void @__asan_load2_noabort(i32 %46)
  %47 = load i16, ptr %incdec.ptr31.2, align 8
  %48 = and i16 %47, 1023
  %conv23.3 = zext i16 %48 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.3)
  %cmp24.3 = icmp ugt i32 %cond, %conv23.3
  %inc27.3 = zext i1 %cmp24.3 to i32
  %spec.select73.3 = add i32 %spec.select73.2, %inc27.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %4)
  %exitcond96.not.3 = icmp eq i32 %4, 4
  br i1 %exitcond96.not.3, label %for.body20.3.cleanup_crit_edge, label %for.body20.4

for.body20.3.cleanup_crit_edge:                   ; preds = %for.body20.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.4:                                     ; preds = %for.body20.3
  %49 = ptrtoint ptr %incdec.ptr31.3 to i32
  call void @__asan_load2_noabort(i32 %49)
  %50 = load i16, ptr %incdec.ptr31.3, align 8
  %51 = and i16 %50, 1023
  %conv23.4 = zext i16 %51 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.4)
  %cmp24.4 = icmp ugt i32 %cond, %conv23.4
  %inc27.4 = zext i1 %cmp24.4 to i32
  %spec.select73.4 = add i32 %spec.select73.3, %inc27.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %4)
  %exitcond96.not.4 = icmp eq i32 %4, 5
  br i1 %exitcond96.not.4, label %for.body20.4.cleanup_crit_edge, label %for.body20.5

for.body20.4.cleanup_crit_edge:                   ; preds = %for.body20.4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.5:                                     ; preds = %for.body20.4
  %52 = ptrtoint ptr %incdec.ptr31.4 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %incdec.ptr31.4, align 8
  %54 = and i16 %53, 1023
  %conv23.5 = zext i16 %54 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.5)
  %cmp24.5 = icmp ugt i32 %cond, %conv23.5
  %inc27.5 = zext i1 %cmp24.5 to i32
  %spec.select73.5 = add i32 %spec.select73.4, %inc27.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %4)
  %exitcond96.not.5 = icmp eq i32 %4, 6
  br i1 %exitcond96.not.5, label %for.body20.5.cleanup_crit_edge, label %for.body20.6

for.body20.5.cleanup_crit_edge:                   ; preds = %for.body20.5
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body20.6:                                     ; preds = %for.body20.5
  call void @__sanitizer_cov_trace_pc() #16
  %55 = ptrtoint ptr %incdec.ptr31.5 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %incdec.ptr31.5, align 8
  %57 = and i16 %56, 1023
  %conv23.6 = zext i16 %57 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %cond, i32 %conv23.6)
  %cmp24.6 = icmp ugt i32 %cond, %conv23.6
  %inc27.6 = zext i1 %cmp24.6 to i32
  %spec.select73.6 = add i32 %spec.select73.5, %inc27.6
  br label %cleanup

cleanup:                                          ; preds = %for.body20.6, %for.body20.5.cleanup_crit_edge, %for.body20.4.cleanup_crit_edge, %for.body20.3.cleanup_crit_edge, %for.body20.2.cleanup_crit_edge, %for.body20.1.cleanup_crit_edge, %for.body20.cleanup_crit_edge, %for.cond18.preheader.cleanup_crit_edge, %for.end.thread.cleanup_crit_edge
  %nfilters.1.lcssa = phi i32 [ %nfilters.088, %for.cond18.preheader.cleanup_crit_edge ], [ %nfilters.088, %for.end.thread.cleanup_crit_edge ], [ %spec.select73, %for.body20.cleanup_crit_edge ], [ %spec.select73.1, %for.body20.1.cleanup_crit_edge ], [ %spec.select73.2, %for.body20.2.cleanup_crit_edge ], [ %spec.select73.3, %for.body20.3.cleanup_crit_edge ], [ %spec.select73.4, %for.body20.4.cleanup_crit_edge ], [ %spec.select73.5, %for.body20.5.cleanup_crit_edge ], [ %spec.select73.6, %for.body20.6 ]
  %add33 = add i32 %offset.090, %4
  %sub34 = sub i32 %rem.089, %4
  %cmp1 = icmp slt i32 %add33, %naddr
  br i1 %cmp1, label %cleanup.for.body_crit_edge, label %cleanup.cleanup43_crit_edge

cleanup.cleanup43_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup43

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup43:                                        ; preds = %cleanup.cleanup43_crit_edge, %for.end.thread.cleanup43_crit_edge, %for.end.cleanup43_crit_edge, %for.cond.preheader.cleanup43_crit_edge, %entry.cleanup43_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup43_crit_edge ], [ 0, %for.cond.preheader.cleanup43_crit_edge ], [ %nfilters.1.lcssa, %cleanup.cleanup43_crit_edge ], [ %call.i97, %for.end.thread.cleanup43_crit_edge ], [ %call.i, %for.end.cleanup43_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_change_mac(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i32 noundef %idx, ptr nocapture noundef readonly %addr, i1 noundef zeroext %persist, ptr noundef writeonly %smt_idx) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %mps_tcam_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 23, i32 6
  %0 = ptrtoint ptr %mps_tcam_size to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %mps_tcam_size, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %idx)
  %cmp = icmp slt i32 %idx, 0
  %cond = select i1 %persist, i32 1022, i32 1023
  %spec.select = select i1 %cmp, i32 %cond, i32 %idx
  %tobool3.not = icmp eq ptr %smt_idx, null
  %2 = getelementptr inbounds i8, ptr %c, i32 16
  %3 = call ptr @memset(ptr %2, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %c, align 8
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %5 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %freemacs_to_len16, align 4
  %or6 = select i1 %tobool3.not, i32 32768, i32 35840
  %or8 = or i32 %or6, %spec.select
  %conv9 = trunc i32 %or8 to i16
  %6 = ptrtoint ptr %u to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv9, ptr %u, align 8
  %macaddr = getelementptr inbounds %struct.fw_vi_mac_exact, ptr %u, i32 0, i32 1
  %7 = call ptr @memcpy(ptr %macaddr, ptr %addr, i32 6)
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp11 = icmp eq i32 %call.i.i, 0
  br i1 %cmp11, label %if.then13, label %entry.if.end44_crit_edge

entry.if.end44_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

if.then13:                                        ; preds = %entry
  %8 = ptrtoint ptr %u to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %u, align 8
  %10 = and i16 %9, 1023
  %and = zext i16 %10 to i32
  call void @__sanitizer_cov_trace_cmp2(i16 %10, i16 %1)
  %cmp16.not = icmp ult i16 %10, %1
  %spec.store.select = select i1 %cmp16.not, i32 %and, i32 -12
  br i1 %tobool3.not, label %if.then13.if.end44_crit_edge, label %if.then21

if.then13.if.end44_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end44

if.then21:                                        ; preds = %if.then13
  %viid_smt_extn_support = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 37
  %11 = ptrtoint ptr %viid_smt_extn_support to i32
  call void @__asan_load1_noabort(i32 %11)
  %bf.load = load i8, ptr %viid_smt_extn_support, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool23.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool23.not, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #16
  %12 = ptrtoint ptr %c to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %c, align 8
  %shr26 = lshr i32 %13, 12
  %conv28 = trunc i32 %shr26 to i8
  br label %if.end44.sink.split

if.else:                                          ; preds = %if.then21
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %14 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %chip, align 8
  %16 = and i32 %15, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %16)
  %cmp32 = icmp ult i32 %16, 96
  %viid.tr = trunc i32 %viid to i8
  br i1 %cmp32, label %if.then34, label %if.else38

if.then34:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %conv37 = shl i8 %viid.tr, 1
  br label %if.end44.sink.split

if.else38:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  %conv40 = and i8 %viid.tr, 127
  br label %if.end44.sink.split

if.end44.sink.split:                              ; preds = %if.else38, %if.then34, %if.then24
  %conv37.sink = phi i8 [ %conv37, %if.then34 ], [ %conv40, %if.else38 ], [ %conv28, %if.then24 ]
  %17 = ptrtoint ptr %smt_idx to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv37.sink, ptr %smt_idx, align 1
  br label %if.end44

if.end44:                                         ; preds = %if.end44.sink.split, %if.then13.if.end44_crit_edge, %entry.if.end44_crit_edge
  %ret.0 = phi i32 [ %spec.store.select, %if.then13.if.end44_crit_edge ], [ %call.i.i, %entry.if.end44_crit_edge ], [ %spec.store.select, %if.end44.sink.split ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %ret.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_addr_hash(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i1 noundef zeroext %ucast, i64 noundef %vec, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_mac_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 16
  %1 = call ptr @memset(ptr %0, i32 0, i32 48)
  %or = or i32 %viid, 362807296
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or, ptr %c, align 8
  %or4 = select i1 %ucast, i32 12582913, i32 8388609
  %freemacs_to_len16 = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %freemacs_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or4, ptr %freemacs_to_len16, align 4
  %u = getelementptr inbounds %struct.fw_vi_mac_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %vec, ptr %u, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext %sleep_ok, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_enable_vi_params(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i1 noundef zeroext %rx_en, i1 noundef zeroext %tx_en, i1 noundef zeroext %dcb_en) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_enable_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_vi_enable_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c, i32 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %2, i32 8)
  store i64 0, ptr %1, align 4
  %or = or i32 %viid, 395313152
  %3 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or, ptr %c, align 4
  %shl6 = select i1 %tx_en, i32 1073741824, i32 0
  %shl10 = select i1 %dcb_en, i32 268435456, i32 0
  %or7 = select i1 %rx_en, i32 -2147483647, i32 1
  %or11 = or i32 %or7, %shl6
  %or12 = or i32 %or11, %shl10
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or12, ptr %0, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_enable_vi(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i1 noundef zeroext %rx_en, i1 noundef zeroext %tx_en) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_vi_enable_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c.i) #14
  %0 = getelementptr inbounds %struct.fw_vi_enable_cmd, ptr %c.i, i32 0, i32 1
  %1 = getelementptr inbounds i8, ptr %c.i, i32 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_storeN_noabort(i32 %2, i32 8)
  store i64 0, ptr %1, align 4
  %or.i = or i32 %viid, 395313152
  %3 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %c.i, align 4
  %shl6.i = select i1 %tx_en, i32 1073741824, i32 0
  %or7.i = select i1 %rx_en, i32 -2147483647, i32 1
  %or11.i = or i32 %shl6.i, %or7.i
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or11.i, ptr %0, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 16, ptr noundef null, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c.i) #14
  ret i32 %call.i.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_enable_pi_params(ptr noundef %adap, i32 noundef %mbox, ptr nocapture noundef readonly %pi, i1 noundef zeroext %rx_en, i1 noundef zeroext %tx_en, i1 noundef zeroext %dcb_en) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_vi_enable_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %viid = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 1
  %0 = ptrtoint ptr %viid to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %viid, align 4
  %conv = zext i16 %1 to i32
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c.i) #14
  %2 = getelementptr inbounds %struct.fw_vi_enable_cmd, ptr %c.i, i32 0, i32 1
  %3 = getelementptr inbounds i8, ptr %c.i, i32 8
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 0, ptr %3, align 4
  %or.i = or i32 %conv, 395313152
  %5 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %c.i, align 4
  %shl6.i = select i1 %tx_en, i32 1073741824, i32 0
  %shl10.i = select i1 %dcb_en, i32 268435456, i32 0
  %or7.i = select i1 %rx_en, i32 -2147483647, i32 1
  %or11.i = or i32 %shl6.i, %or7.i
  %or12.i = or i32 %or11.i, %shl10.i
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %or12.i, ptr %2, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 16, ptr noundef null, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool5.not = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool5.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %port_id = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 7
  %7 = ptrtoint ptr %port_id to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %port_id, align 1
  %conv6 = zext i8 %8 to i32
  %brmerge.demorgan = and i1 %rx_en, %tx_en
  br i1 %brmerge.demorgan, label %land.rhs, label %if.end.land.end_crit_edge

if.end.land.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %land.end

land.rhs:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %link_ok = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 12
  %9 = ptrtoint ptr %link_ok to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %link_ok, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool12 = icmp ne i8 %10, 0
  %phi.cast = zext i1 %tobool12 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end.land.end_crit_edge
  %11 = phi i32 [ 0, %if.end.land.end_crit_edge ], [ %phi.cast, %land.rhs ]
  tail call void @t4_os_link_changed(ptr noundef %adap, i32 noundef %conv6, i32 noundef %11) #14
  br label %cleanup

cleanup:                                          ; preds = %land.end, %entry.cleanup_crit_edge
  ret i32 %call.i.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @t4_os_link_changed(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_identify_port(ptr noundef %adap, i32 noundef %mbox, i32 noundef %viid, i32 noundef %nblinks) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_vi_enable_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_vi_enable_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_vi_enable_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %c, i32 8
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_storeN_noabort(i32 %3, i32 8)
  store i64 0, ptr %2, align 4
  %or = or i32 %viid, 395313152
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or, ptr %c, align 4
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 536870913, ptr %0, align 4
  %conv = trunc i32 %nblinks to i16
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv, ptr %1, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 16, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_iq_stop(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %iqtype, i32 noundef %iqid, i32 noundef %fl0id, i32 noundef %fl1id) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_iq_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 277872640
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 8
  %alloc_to_len16 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 134217732, ptr %alloc_to_len16, align 4
  %shl3 = shl i32 %iqtype, 29
  %type_to_iqandstindex = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 6
  %4 = ptrtoint ptr %type_to_iqandstindex to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %shl3, ptr %type_to_iqandstindex, align 8
  %conv = trunc i32 %iqid to i16
  %iqid4 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 3
  %5 = ptrtoint ptr %iqid4 to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %iqid4, align 2
  %conv5 = trunc i32 %fl0id to i16
  %fl0id6 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 4
  %6 = ptrtoint ptr %fl0id6 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv5, ptr %fl0id6, align 4
  %conv7 = trunc i32 %fl1id to i16
  %fl1id8 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 5
  %7 = ptrtoint ptr %fl1id8 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv7, ptr %fl1id8, align 2
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_iq_free(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %iqtype, i32 noundef %iqid, i32 noundef %fl0id, i32 noundef %fl1id) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_iq_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 277872640
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 8
  %alloc_to_len16 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1073741828, ptr %alloc_to_len16, align 4
  %shl3 = shl i32 %iqtype, 29
  %type_to_iqandstindex = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 6
  %4 = ptrtoint ptr %type_to_iqandstindex to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %shl3, ptr %type_to_iqandstindex, align 8
  %conv = trunc i32 %iqid to i16
  %iqid4 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 3
  %5 = ptrtoint ptr %iqid4 to i32
  call void @__asan_store2_noabort(i32 %5)
  store i16 %conv, ptr %iqid4, align 2
  %conv5 = trunc i32 %fl0id to i16
  %fl0id6 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 4
  %6 = ptrtoint ptr %fl0id6 to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 %conv5, ptr %fl0id6, align 4
  %conv7 = trunc i32 %fl1id to i16
  %fl1id8 = getelementptr inbounds %struct.fw_iq_cmd, ptr %c, i32 0, i32 5
  %7 = ptrtoint ptr %fl1id8 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %conv7, ptr %fl1id8, align 2
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_eth_eq_free(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %eqid) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_eq_eth_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %c) #14
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 40)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 311427072
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %or2, ptr %c, align 8
  %alloc_to_len16 = getelementptr inbounds %struct.fw_eq_eth_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %alloc_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 1073741827, ptr %alloc_to_len16, align 4
  %eqid_pkd = getelementptr inbounds %struct.fw_eq_eth_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %eqid_pkd to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %eqid, ptr %eqid_pkd, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 48, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_ctrl_eq_free(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %eqid) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_eq_ctrl_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_eq_ctrl_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_eq_ctrl_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %c, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 24)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 328204288
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or2, ptr %c, align 8
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1073741826, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %eqid, ptr %1, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_ofld_eq_free(ptr noundef %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf, i32 noundef %eqid) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_eq_ofld_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %c) #14
  %0 = getelementptr inbounds %struct.fw_eq_ofld_cmd, ptr %c, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_eq_ofld_cmd, ptr %c, i32 0, i32 2
  %2 = getelementptr inbounds i8, ptr %c, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 24)
  %shl = shl i32 %pf, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 563085312
  %4 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or2, ptr %c, align 8
  %5 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1073741826, ptr %0, align 4
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %eqid, ptr %1, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_handle_get_port_info(ptr noundef %pi, ptr nocapture noundef readonly %rpl) local_unnamed_addr #0 align 64 {
entry:
  %old_lc = alloca %struct.link_config, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %link_cfg = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pi, align 8
  %action_to_len16 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 1
  %2 = ptrtoint ptr %action_to_len16 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %action_to_len16, align 4
  %shr = lshr i32 %3, 16
  %trunc = trunc i32 %shr to i16
  %4 = zext i16 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.508)
  switch i16 %trunc, label %do.end [
    i16 3, label %sw.bb
    i16 10, label %sw.bb15
  ]

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %u = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2
  %5 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %u, align 8
  %shr3 = lshr i32 %6, 5
  %shr5 = lshr i32 %6, 8
  %and6 = and i32 %shr5, 31
  %pcap = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 1
  %7 = ptrtoint ptr %pcap to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %pcap, align 4
  %conv.i = zext i16 %8 to i32
  %and12.i = shl nuw nsw i32 %conv.i, 1
  %9 = and i32 %and12.i, 8
  %and21.i = lshr i32 %conv.i, 1
  %10 = and i32 %and21.i, 4
  %11 = and i32 %and12.i, 64
  %and48.i = shl nuw nsw i32 %conv.i, 10
  %12 = and i32 %and48.i, 65536
  %13 = and i32 %and48.i, 131072
  %and66.i = shl nuw nsw i32 %conv.i, 12
  %14 = and i32 %and66.i, 1048576
  %and75.i = shl nuw nsw i32 %conv.i, 15
  %15 = and i32 %and75.i, 268435456
  %16 = and i32 %and66.i, 2097152
  %17 = and i32 %and66.i, 4194304
  %18 = and i32 %and66.i, 8388608
  %19 = and i32 %and66.i, 16777216
  %and120.i = shl nuw nsw i32 %conv.i, 4
  %20 = and i32 %and120.i, 262144
  %21 = and i32 %and120.i, 524288
  %22 = and i32 %conv.i, 19
  %23 = or i32 %9, %22
  %24 = or i32 %23, %10
  %25 = or i32 %24, %11
  %26 = or i32 %25, %12
  %27 = or i32 %26, %13
  %28 = or i32 %27, %14
  %29 = or i32 %28, %15
  %30 = or i32 %29, %16
  %31 = or i32 %30, %17
  %32 = or i32 %31, %18
  %33 = or i32 %32, %19
  %34 = or i32 %33, %20
  %35 = or i32 %34, %21
  %acap = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 2
  %36 = ptrtoint ptr %acap to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %acap, align 2
  %conv.i226 = zext i16 %37 to i32
  %and12.i227 = shl nuw nsw i32 %conv.i226, 1
  %38 = and i32 %and12.i227, 8
  %and21.i228 = lshr i32 %conv.i226, 1
  %39 = and i32 %and21.i228, 4
  %40 = and i32 %and12.i227, 64
  %and48.i229 = shl nuw nsw i32 %conv.i226, 10
  %41 = and i32 %and48.i229, 65536
  %42 = and i32 %and48.i229, 131072
  %and66.i230 = shl nuw nsw i32 %conv.i226, 12
  %43 = and i32 %and66.i230, 1048576
  %and75.i231 = shl nuw nsw i32 %conv.i226, 15
  %44 = and i32 %and75.i231, 268435456
  %45 = and i32 %and66.i230, 2097152
  %46 = and i32 %and66.i230, 4194304
  %47 = and i32 %and66.i230, 8388608
  %48 = and i32 %and66.i230, 16777216
  %and120.i232 = shl nuw nsw i32 %conv.i226, 4
  %49 = and i32 %and120.i232, 262144
  %50 = and i32 %and120.i232, 524288
  %51 = and i32 %conv.i226, 19
  %52 = or i32 %38, %51
  %53 = or i32 %52, %39
  %54 = or i32 %53, %40
  %55 = or i32 %54, %41
  %56 = or i32 %55, %42
  %57 = or i32 %56, %43
  %58 = or i32 %57, %44
  %59 = or i32 %58, %45
  %60 = or i32 %59, %46
  %61 = or i32 %60, %47
  %62 = or i32 %61, %48
  %63 = or i32 %62, %49
  %64 = or i32 %63, %50
  %lpacap = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 8
  %65 = ptrtoint ptr %lpacap to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %lpacap, align 2
  %conv.i233 = zext i16 %66 to i32
  %and12.i234 = shl nuw nsw i32 %conv.i233, 1
  %67 = and i32 %and12.i234, 8
  %and21.i235 = lshr i32 %conv.i233, 1
  %68 = and i32 %and21.i235, 4
  %69 = and i32 %and12.i234, 64
  %and48.i236 = shl nuw nsw i32 %conv.i233, 10
  %70 = and i32 %and48.i236, 65536
  %71 = and i32 %and48.i236, 131072
  %and66.i237 = shl nuw nsw i32 %conv.i233, 12
  %72 = and i32 %and66.i237, 1048576
  %and75.i238 = shl nuw nsw i32 %conv.i233, 15
  %73 = and i32 %and75.i238, 268435456
  %74 = and i32 %and66.i237, 2097152
  %75 = and i32 %and66.i237, 4194304
  %76 = and i32 %and66.i237, 8388608
  %77 = and i32 %and66.i237, 16777216
  %and120.i239 = shl nuw nsw i32 %conv.i233, 4
  %78 = and i32 %and120.i239, 262144
  %79 = and i32 %and120.i239, 524288
  %80 = and i32 %conv.i233, 19
  %81 = or i32 %67, %80
  %82 = or i32 %81, %68
  %83 = or i32 %82, %69
  %84 = or i32 %83, %70
  %85 = or i32 %84, %71
  %86 = or i32 %85, %72
  %87 = or i32 %86, %73
  %88 = or i32 %87, %74
  %89 = or i32 %88, %75
  %90 = or i32 %89, %76
  %91 = or i32 %90, %77
  %92 = or i32 %91, %78
  %93 = or i32 %92, %79
  %and.i = lshr i32 %6, 6
  %94 = and i32 %and.i, 196608
  %and6.i = lshr i32 %6, 24
  %95 = and i32 %and6.i, 1
  %96 = or i32 %94, %95
  %97 = and i32 %and6.i, 2
  %98 = or i32 %96, %97
  %and16.i = lshr i32 %6, 25
  %99 = and i32 %and16.i, 4
  %100 = or i32 %98, %99
  %and21.i240 = lshr i32 %6, 23
  %101 = and i32 %and21.i240, 8
  %102 = or i32 %100, %101
  %103 = and i32 %and6.i, 16
  %104 = or i32 %102, %103
  %105 = and i32 %and21.i240, 64
  %106 = or i32 %104, %105
  br label %sw.epilog

sw.bb15:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %u16 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2
  %107 = ptrtoint ptr %u16 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load i32, ptr %u16, align 8
  %shr20 = lshr i32 %108, 28
  %shr22 = lshr i32 %108, 13
  %and23 = and i32 %shr22, 255
  %shr24 = lshr i32 %108, 8
  %pcaps32 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 6
  %109 = ptrtoint ptr %pcaps32 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load i32, ptr %pcaps32, align 4
  %acaps32 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 9
  %111 = ptrtoint ptr %acaps32 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %acaps32, align 8
  %lpacaps32 = getelementptr inbounds %struct.fw_port_info32, ptr %u16, i32 0, i32 5
  %113 = ptrtoint ptr %lpacaps32 to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load i32, ptr %lpacaps32, align 4
  %linkattr32 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 2, i32 0, i32 3
  %115 = ptrtoint ptr %linkattr32 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %linkattr32, align 8
  br label %sw.epilog

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 4
  %117 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %118, ptr noundef nonnull @.str.171, i32 noundef %3) #17
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb15, %sw.bb
  %linkattr.0 = phi i32 [ %116, %sw.bb15 ], [ %106, %sw.bb ]
  %mod_type.0.in = phi i32 [ %shr24, %sw.bb15 ], [ %6, %sw.bb ]
  %lpacaps.0 = phi i32 [ %114, %sw.bb15 ], [ %93, %sw.bb ]
  %link_ok.0.in = phi i32 [ %108, %sw.bb15 ], [ %6, %sw.bb ]
  %linkdnrc.0.in = phi i32 [ %shr20, %sw.bb15 ], [ %shr3, %sw.bb ]
  %port_type.0 = phi i32 [ %and23, %sw.bb15 ], [ %and6, %sw.bb ]
  %acaps.0 = phi i32 [ %112, %sw.bb15 ], [ %64, %sw.bb ]
  %pcaps.0 = phi i32 [ %110, %sw.bb15 ], [ %35, %sw.bb ]
  %link_ok.0 = lshr i32 %link_ok.0.in, 31
  %mod_type.0 = and i32 %mod_type.0.in, 31
  %and.i241 = lshr i32 %acaps.0, 22
  %119 = and i32 %and.i241, 6
  %and.i242 = lshr i32 %acaps.0, 16
  %120 = and i32 %and.i242, 3
  %and.i243 = lshr i32 %linkattr.0, 16
  %121 = and i32 %and.i243, 3
  %and.i244 = and i32 %linkattr.0, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i244)
  %tobool.not.i = icmp eq i32 %and.i244, 0
  br i1 %tobool.not.i, label %do.body1.i, label %sw.epilog.fwcap_to_speed.exit_crit_edge

sw.epilog.fwcap_to_speed.exit_crit_edge:          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body1.i:                                       ; preds = %sw.epilog
  %and2.i = and i32 %linkattr.0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %do.body7.i, label %do.body1.i.fwcap_to_speed.exit_crit_edge

do.body1.i.fwcap_to_speed.exit_crit_edge:         ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body7.i:                                       ; preds = %do.body1.i
  %and8.i = and i32 %linkattr.0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %do.body13.i, label %do.body7.i.fwcap_to_speed.exit_crit_edge

do.body7.i.fwcap_to_speed.exit_crit_edge:         ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body13.i:                                      ; preds = %do.body7.i
  %and14.i = and i32 %linkattr.0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %do.body19.i, label %do.body13.i.fwcap_to_speed.exit_crit_edge

do.body13.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body19.i:                                      ; preds = %do.body13.i
  %and20.i = and i32 %linkattr.0, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %do.body25.i, label %do.body19.i.fwcap_to_speed.exit_crit_edge

do.body19.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body25.i:                                      ; preds = %do.body19.i
  %and26.i = and i32 %linkattr.0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i)
  %tobool27.not.i = icmp eq i32 %and26.i, 0
  br i1 %tobool27.not.i, label %do.body31.i, label %do.body25.i.fwcap_to_speed.exit_crit_edge

do.body25.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body31.i:                                      ; preds = %do.body25.i
  %and32.i = and i32 %linkattr.0, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %do.body37.i, label %do.body31.i.fwcap_to_speed.exit_crit_edge

do.body31.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body37.i:                                      ; preds = %do.body31.i
  %and38.i = and i32 %linkattr.0, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %do.body43.i, label %do.body37.i.fwcap_to_speed.exit_crit_edge

do.body37.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body43.i:                                      ; preds = %do.body37.i
  call void @__sanitizer_cov_trace_pc() #16
  %and44.i = and i32 %linkattr.0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i)
  %tobool45.not.i = icmp eq i32 %and44.i, 0
  %..i = select i1 %tobool45.not.i, i32 0, i32 100
  br label %fwcap_to_speed.exit

fwcap_to_speed.exit:                              ; preds = %do.body43.i, %do.body37.i.fwcap_to_speed.exit_crit_edge, %do.body31.i.fwcap_to_speed.exit_crit_edge, %do.body25.i.fwcap_to_speed.exit_crit_edge, %do.body19.i.fwcap_to_speed.exit_crit_edge, %do.body13.i.fwcap_to_speed.exit_crit_edge, %do.body7.i.fwcap_to_speed.exit_crit_edge, %do.body1.i.fwcap_to_speed.exit_crit_edge, %sw.epilog.fwcap_to_speed.exit_crit_edge
  %retval.0.i = phi i32 [ 400000, %sw.epilog.fwcap_to_speed.exit_crit_edge ], [ 200000, %do.body1.i.fwcap_to_speed.exit_crit_edge ], [ 100000, %do.body7.i.fwcap_to_speed.exit_crit_edge ], [ 50000, %do.body13.i.fwcap_to_speed.exit_crit_edge ], [ 40000, %do.body19.i.fwcap_to_speed.exit_crit_edge ], [ 25000, %do.body25.i.fwcap_to_speed.exit_crit_edge ], [ 10000, %do.body31.i.fwcap_to_speed.exit_crit_edge ], [ 1000, %do.body37.i.fwcap_to_speed.exit_crit_edge ], [ %..i, %do.body43.i ]
  %new_module = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 14
  %122 = ptrtoint ptr %new_module to i32
  call void @__asan_store1_noabort(i32 %122)
  store i8 0, ptr %new_module, align 1
  %redo_l1cfg = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 15
  %123 = ptrtoint ptr %redo_l1cfg to i32
  call void @__asan_store1_noabort(i32 %123)
  store i8 0, ptr %redo_l1cfg, align 4
  %mod_type35 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 6
  %124 = ptrtoint ptr %mod_type35 to i32
  call void @__asan_load1_noabort(i32 %124)
  %125 = load i8, ptr %mod_type35, align 4
  %conv36 = zext i8 %125 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %mod_type.0, i32 %conv36)
  %cmp37.not = icmp eq i32 %mod_type.0, %conv36
  br i1 %cmp37.not, label %fwcap_to_speed.exit.if.end_crit_edge, label %if.then

fwcap_to_speed.exit.if.end_crit_edge:             ; preds = %fwcap_to_speed.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %fwcap_to_speed.exit
  call void @__sanitizer_cov_trace_pc() #16
  %126 = ptrtoint ptr %link_cfg to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 %pcaps.0, ptr %link_cfg, align 4
  %def_acaps = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 1
  %127 = ptrtoint ptr %def_acaps to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %acaps.0, ptr %def_acaps, align 4
  %port_type40 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 5
  %128 = ptrtoint ptr %port_type40 to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %port_type.0, ptr %port_type40, align 8
  %conv41 = trunc i32 %mod_type.0 to i8
  %129 = ptrtoint ptr %mod_type35 to i32
  call void @__asan_store1_noabort(i32 %129)
  store i8 %conv41, ptr %mod_type35, align 4
  %130 = and i32 %mod_type.0.in, 28
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %130)
  %switch.selectcmp.i = icmp ne i32 %130, 28
  %frombool = zext i1 %switch.selectcmp.i to i8
  %131 = ptrtoint ptr %new_module to i32
  call void @__asan_store1_noabort(i32 %131)
  store i8 %frombool, ptr %new_module, align 1
  %port_id = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 7
  %132 = ptrtoint ptr %port_id to i32
  call void @__asan_load1_noabort(i32 %132)
  %133 = load i8, ptr %port_id, align 1
  %conv45 = zext i8 %133 to i32
  tail call void @t4_os_portmod_changed(ptr noundef %1, i32 noundef %conv45) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %fwcap_to_speed.exit.if.end_crit_edge
  %link_ok46 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 12
  %134 = ptrtoint ptr %link_ok46 to i32
  call void @__asan_load1_noabort(i32 %134)
  %135 = load i8, ptr %link_ok46, align 1
  %conv47 = zext i8 %135 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %link_ok.0, i32 %conv47)
  %cmp48.not = icmp eq i32 %link_ok.0, %conv47
  br i1 %cmp48.not, label %lor.lhs.false, label %if.end.if.then64_crit_edge

if.end.if.then64_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then64

lor.lhs.false:                                    ; preds = %if.end
  %speed50 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 5
  %136 = ptrtoint ptr %speed50 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %speed50, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %retval.0.i, i32 %137)
  %cmp51.not = icmp eq i32 %retval.0.i, %137
  br i1 %cmp51.not, label %lor.lhs.false53, label %lor.lhs.false.if.then64_crit_edge

lor.lhs.false.if.then64_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then64

lor.lhs.false53:                                  ; preds = %lor.lhs.false
  %fc54 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 7
  %138 = ptrtoint ptr %fc54 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %fc54, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %121, i32 %139)
  %cmp55.not = icmp eq i32 %121, %139
  br i1 %cmp55.not, label %lor.lhs.false57, label %lor.lhs.false53.if.then64_crit_edge

lor.lhs.false53.if.then64_crit_edge:              ; preds = %lor.lhs.false53
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then64

lor.lhs.false57:                                  ; preds = %lor.lhs.false53
  %advertised_fc = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 8
  %140 = ptrtoint ptr %advertised_fc to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load i32, ptr %advertised_fc, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %120, i32 %141)
  %cmp58.not = icmp eq i32 %120, %141
  br i1 %cmp58.not, label %lor.lhs.false60, label %lor.lhs.false57.if.then64_crit_edge

lor.lhs.false57.if.then64_crit_edge:              ; preds = %lor.lhs.false57
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then64

lor.lhs.false60:                                  ; preds = %lor.lhs.false57
  %fec61 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 10
  %142 = ptrtoint ptr %fec61 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %fec61, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %119, i32 %143)
  %cmp62.not = icmp eq i32 %119, %143
  br i1 %cmp62.not, label %lor.lhs.false60.if.end111_crit_edge, label %lor.lhs.false60.if.then64_crit_edge

lor.lhs.false60.if.then64_crit_edge:              ; preds = %lor.lhs.false60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then64

lor.lhs.false60.if.end111_crit_edge:              ; preds = %lor.lhs.false60
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end111

if.then64:                                        ; preds = %lor.lhs.false60.if.then64_crit_edge, %lor.lhs.false57.if.then64_crit_edge, %lor.lhs.false53.if.then64_crit_edge, %lor.lhs.false.if.then64_crit_edge, %if.end.if.then64_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %link_ok.0.in)
  %tobool.not = icmp slt i32 %link_ok.0.in, 0
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %135)
  %tobool67.not = icmp eq i8 %135, 0
  %or.cond = select i1 %tobool.not, i1 true, i1 %tobool67.not
  br i1 %or.cond, label %if.then64.if.end84_crit_edge, label %if.then68

if.then64.if.end84_crit_edge:                     ; preds = %if.then64
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

if.then68:                                        ; preds = %if.then64
  %144 = trunc i32 %linkdnrc.0.in to i8
  %conv69 = and i8 %144, 7
  %link_down_rc = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 13
  %145 = ptrtoint ptr %link_down_rc to i32
  call void @__asan_store1_noabort(i32 %145)
  store i8 %conv69, ptr %link_down_rc, align 2
  %call71 = tail call i32 @___ratelimit(ptr noundef nonnull @t4_handle_get_port_info._rs, ptr noundef nonnull @.str.172) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %if.then68.if.end84_crit_edge, label %do.end76

if.then68.if.end84_crit_edge:                     ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end84

do.end76:                                         ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev77 = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 4
  %146 = ptrtoint ptr %pdev_dev77 to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %pdev_dev77, align 16
  %tx_chan = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 8
  %148 = ptrtoint ptr %tx_chan to i32
  call void @__asan_load1_noabort(i32 %148)
  %149 = load i8, ptr %tx_chan, align 2
  %conv78 = zext i8 %149 to i32
  %conv.i245 = zext i8 %conv69 to i32
  %arrayidx.i = getelementptr [8 x ptr], ptr @t4_link_down_rc_str.reason, i32 0, i32 %conv.i245
  %150 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %arrayidx.i, align 4
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %147, ptr noundef nonnull @.str.175, i32 noundef %conv78, ptr noundef %151) #17
  br label %if.end84

if.end84:                                         ; preds = %do.end76, %if.then68.if.end84_crit_edge, %if.then64.if.end84_crit_edge
  %conv85 = trunc i32 %link_ok.0 to i8
  %152 = ptrtoint ptr %link_ok46 to i32
  call void @__asan_store1_noabort(i32 %152)
  store i8 %conv85, ptr %link_ok46, align 1
  %speed87 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 5
  %153 = ptrtoint ptr %speed87 to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %retval.0.i, ptr %speed87, align 4
  %advertised_fc88 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 8
  %154 = ptrtoint ptr %advertised_fc88 to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 %120, ptr %advertised_fc88, align 4
  %fc89 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 7
  %155 = ptrtoint ptr %fc89 to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 %121, ptr %fc89, align 4
  %fec90 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 10
  %156 = ptrtoint ptr %fec90 to i32
  call void @__asan_store4_noabort(i32 %156)
  store i32 %119, ptr %fec90, align 4
  %lpacaps91 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 3
  %157 = ptrtoint ptr %lpacaps91 to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %lpacaps.0, ptr %lpacaps91, align 4
  %and92 = and i32 %acaps.0, 1052671
  %acaps93 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 2
  %158 = ptrtoint ptr %acaps93 to i32
  call void @__asan_store4_noabort(i32 %158)
  store i32 %and92, ptr %acaps93, align 4
  %and95 = lshr i32 %acaps.0, 20
  %159 = trunc i32 %and95 to i8
  %160 = and i8 %159, 1
  %161 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 11
  %162 = ptrtoint ptr %161 to i32
  call void @__asan_store1_noabort(i32 %162)
  store i8 %160, ptr %161, align 4
  %port_id109 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 7
  %163 = ptrtoint ptr %port_id109 to i32
  call void @__asan_load1_noabort(i32 %163)
  %164 = load i8, ptr %port_id109, align 1
  %conv110 = zext i8 %164 to i32
  tail call void @t4_os_link_changed(ptr noundef %1, i32 noundef %conv110, i32 noundef %link_ok.0) #14
  br label %if.end111

if.end111:                                        ; preds = %if.end84, %lor.lhs.false60.if.end111_crit_edge
  %165 = ptrtoint ptr %new_module to i32
  call void @__asan_load1_noabort(i32 %165)
  %166 = load i8, ptr %new_module, align 1, !range !1001
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %166)
  %tobool113.not = icmp eq i8 %166, 0
  br i1 %tobool113.not, label %if.end111.if.end129_crit_edge, label %land.lhs.true115

if.end111.if.end129_crit_edge:                    ; preds = %if.end111
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end129

land.lhs.true115:                                 ; preds = %if.end111
  %167 = ptrtoint ptr %redo_l1cfg to i32
  call void @__asan_load1_noabort(i32 %167)
  %168 = load i8, ptr %redo_l1cfg, align 4, !range !1001
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %168)
  %tobool117.not = icmp eq i8 %168, 0
  br i1 %tobool117.not, label %land.lhs.true115.if.end129_crit_edge, label %if.then119

land.lhs.true115.if.end129_crit_edge:             ; preds = %land.lhs.true115
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end129

if.then119:                                       ; preds = %land.lhs.true115
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %old_lc)
  %169 = call ptr @memcpy(ptr %old_lc, ptr %link_cfg, i32 52)
  %mbox = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 6
  %170 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load i32, ptr %mbox, align 8
  %lport = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 9
  %172 = ptrtoint ptr %lport to i32
  call void @__asan_load1_noabort(i32 %172)
  %173 = load i8, ptr %lport, align 1
  %conv120 = zext i8 %173 to i32
  %call.i = tail call i32 @t4_link_l1cfg_core(ptr noundef %1, i32 noundef %171, i32 noundef %conv120, ptr noundef %link_cfg, i8 noundef zeroext 0, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool122.not = icmp eq i32 %call.i, 0
  br i1 %tobool122.not, label %if.then119.if.end128_crit_edge, label %if.then123

if.then119.if.end128_crit_edge:                   ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end128

if.then123:                                       ; preds = %if.then119
  call void @__sanitizer_cov_trace_pc() #16
  %174 = call ptr @memcpy(ptr %link_cfg, ptr %old_lc, i32 52)
  %pdev_dev127 = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 4
  %175 = ptrtoint ptr %pdev_dev127 to i32
  call void @__asan_load4_noabort(i32 %175)
  %176 = load ptr, ptr %pdev_dev127, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %176, ptr noundef nonnull @.str.178) #17
  br label %if.end128

if.end128:                                        ; preds = %if.then123, %if.then119.if.end128_crit_edge
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %old_lc)
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %land.lhs.true115.if.end129_crit_edge, %if.end111.if.end129_crit_edge
  %177 = ptrtoint ptr %new_module to i32
  call void @__asan_store1_noabort(i32 %177)
  store i8 0, ptr %new_module, align 1
  %178 = ptrtoint ptr %redo_l1cfg to i32
  call void @__asan_store1_noabort(i32 %178)
  store i8 0, ptr %redo_l1cfg, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end129, %do.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @t4_os_portmod_changed(ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @___ratelimit(ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_update_port_info(ptr noundef %pi) local_unnamed_addr #0 align 64 {
entry:
  %port_cmd = alloca %struct.fw_port_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pi, align 8
  %fw_caps_support = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 15, i32 35
  %2 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fw_caps_support, align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %port_cmd) #14
  %4 = getelementptr inbounds %struct.fw_port_cmd, ptr %port_cmd, i32 0, i32 1
  %5 = getelementptr inbounds i8, ptr %port_cmd, i32 8
  %6 = call ptr @memset(ptr %5, i32 0, i32 24)
  %tx_chan = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 8
  %7 = ptrtoint ptr %tx_chan to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %tx_chan, align 2
  %conv1 = zext i8 %8 to i32
  %or = or i32 %conv1, 465567744
  %9 = ptrtoint ptr %port_cmd to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or, ptr %port_cmd, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %3)
  %cmp = icmp eq i8 %3, 1
  %or4 = select i1 %cmp, i32 196610, i32 655362
  %10 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or4, ptr %4, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 6
  %11 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %1, i32 noundef %12, ptr noundef nonnull %port_cmd, i32 noundef 32, ptr noundef nonnull %port_cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @t4_handle_get_port_info(ptr noundef %pi, ptr noundef nonnull %port_cmd)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %port_cmd) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_get_link_params(ptr nocapture noundef readonly %pi, ptr noundef writeonly %link_okp, ptr noundef writeonly %speedp, ptr noundef writeonly %mtup) local_unnamed_addr #0 align 64 {
entry:
  %port_cmd = alloca %struct.fw_port_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pi, align 8
  %fw_caps_support = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 15, i32 35
  %2 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fw_caps_support, align 1
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %port_cmd) #14
  %4 = getelementptr inbounds %struct.fw_port_cmd, ptr %port_cmd, i32 0, i32 1
  %5 = getelementptr inbounds %struct.fw_port_cmd, ptr %port_cmd, i32 0, i32 2, i32 0, i32 1
  %6 = getelementptr inbounds %struct.fw_port_cmd, ptr %port_cmd, i32 0, i32 2, i32 0, i32 3
  %7 = getelementptr inbounds i8, ptr %port_cmd, i32 8
  %8 = call ptr @memset(ptr %7, i32 0, i32 24)
  %tx_chan = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 8
  %9 = ptrtoint ptr %tx_chan to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %tx_chan, align 2
  %conv1 = zext i8 %10 to i32
  %or = or i32 %conv1, 465567744
  %11 = ptrtoint ptr %port_cmd to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or, ptr %port_cmd, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 1, i8 %3)
  %cmp = icmp eq i8 %3, 1
  %or4 = select i1 %cmp, i32 196610, i32 655362
  %12 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or4, ptr %4, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 6
  %13 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %1, i32 noundef %14, ptr noundef nonnull %port_cmd, i32 noundef 32, ptr noundef nonnull %port_cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %15 = getelementptr inbounds %struct.fw_port_cmd, ptr %port_cmd, i32 0, i32 2
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 8
  br i1 %cmp, label %if.then9, label %if.else

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %and6.i = lshr i32 %17, 24
  %18 = and i32 %and6.i, 3
  %and16.i = lshr i32 %17, 25
  %19 = and i32 %and16.i, 4
  %20 = or i32 %18, %19
  %and21.i = lshr i32 %17, 23
  %21 = and i32 %and21.i, 8
  %22 = or i32 %20, %21
  %23 = and i32 %and6.i, 16
  %24 = or i32 %22, %23
  %25 = and i32 %and21.i, 64
  %26 = or i32 %24, %25
  %27 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %27)
  %28 = load i16, ptr %6, align 8
  %conv15 = zext i16 %28 to i32
  br label %if.end26

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %29 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %6, align 8
  %31 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %5, align 4
  %and25 = and i32 %32, 65535
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.then9
  %mtu.0 = phi i32 [ %conv15, %if.then9 ], [ %and25, %if.else ]
  %linkattr.0 = phi i32 [ %26, %if.then9 ], [ %30, %if.else ]
  %tobool27.not = icmp eq ptr %link_okp, null
  br i1 %tobool27.not, label %if.end26.if.end29_crit_edge, label %if.then28

if.end26.if.end29_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #16
  %link_ok.0 = lshr i32 %17, 31
  %33 = ptrtoint ptr %link_okp to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %link_ok.0, ptr %link_okp, align 4
  br label %if.end29

if.end29:                                         ; preds = %if.then28, %if.end26.if.end29_crit_edge
  %tobool30.not = icmp eq ptr %speedp, null
  br i1 %tobool30.not, label %if.end29.if.end33_crit_edge, label %if.then31

if.end29.if.end33_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end33

if.then31:                                        ; preds = %if.end29
  %and.i53 = and i32 %linkattr.0, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i53)
  %tobool.not.i = icmp eq i32 %and.i53, 0
  br i1 %tobool.not.i, label %do.body1.i, label %if.then31.fwcap_to_speed.exit_crit_edge

if.then31.fwcap_to_speed.exit_crit_edge:          ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body1.i:                                       ; preds = %if.then31
  %and2.i = and i32 %linkattr.0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i)
  %tobool3.not.i = icmp eq i32 %and2.i, 0
  br i1 %tobool3.not.i, label %do.body7.i, label %do.body1.i.fwcap_to_speed.exit_crit_edge

do.body1.i.fwcap_to_speed.exit_crit_edge:         ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body7.i:                                       ; preds = %do.body1.i
  %and8.i = and i32 %linkattr.0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i)
  %tobool9.not.i = icmp eq i32 %and8.i, 0
  br i1 %tobool9.not.i, label %do.body13.i, label %do.body7.i.fwcap_to_speed.exit_crit_edge

do.body7.i.fwcap_to_speed.exit_crit_edge:         ; preds = %do.body7.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body13.i:                                      ; preds = %do.body7.i
  %and14.i = and i32 %linkattr.0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i)
  %tobool15.not.i = icmp eq i32 %and14.i, 0
  br i1 %tobool15.not.i, label %do.body19.i, label %do.body13.i.fwcap_to_speed.exit_crit_edge

do.body13.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body13.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body19.i:                                      ; preds = %do.body13.i
  %and20.i = and i32 %linkattr.0, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i)
  %tobool21.not.i = icmp eq i32 %and20.i, 0
  br i1 %tobool21.not.i, label %do.body25.i, label %do.body19.i.fwcap_to_speed.exit_crit_edge

do.body19.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body19.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body25.i:                                      ; preds = %do.body19.i
  %and26.i = and i32 %linkattr.0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i)
  %tobool27.not.i = icmp eq i32 %and26.i, 0
  br i1 %tobool27.not.i, label %do.body31.i, label %do.body25.i.fwcap_to_speed.exit_crit_edge

do.body25.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body25.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body31.i:                                      ; preds = %do.body25.i
  %and32.i = and i32 %linkattr.0, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i)
  %tobool33.not.i = icmp eq i32 %and32.i, 0
  br i1 %tobool33.not.i, label %do.body37.i, label %do.body31.i.fwcap_to_speed.exit_crit_edge

do.body31.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body31.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body37.i:                                      ; preds = %do.body31.i
  %and38.i = and i32 %linkattr.0, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i)
  %tobool39.not.i = icmp eq i32 %and38.i, 0
  br i1 %tobool39.not.i, label %do.body43.i, label %do.body37.i.fwcap_to_speed.exit_crit_edge

do.body37.i.fwcap_to_speed.exit_crit_edge:        ; preds = %do.body37.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_speed.exit

do.body43.i:                                      ; preds = %do.body37.i
  call void @__sanitizer_cov_trace_pc() #16
  %and44.i = and i32 %linkattr.0, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i)
  %tobool45.not.i = icmp eq i32 %and44.i, 0
  %..i = select i1 %tobool45.not.i, i32 0, i32 100
  br label %fwcap_to_speed.exit

fwcap_to_speed.exit:                              ; preds = %do.body43.i, %do.body37.i.fwcap_to_speed.exit_crit_edge, %do.body31.i.fwcap_to_speed.exit_crit_edge, %do.body25.i.fwcap_to_speed.exit_crit_edge, %do.body19.i.fwcap_to_speed.exit_crit_edge, %do.body13.i.fwcap_to_speed.exit_crit_edge, %do.body7.i.fwcap_to_speed.exit_crit_edge, %do.body1.i.fwcap_to_speed.exit_crit_edge, %if.then31.fwcap_to_speed.exit_crit_edge
  %retval.0.i = phi i32 [ 400000, %if.then31.fwcap_to_speed.exit_crit_edge ], [ 200000, %do.body1.i.fwcap_to_speed.exit_crit_edge ], [ 100000, %do.body7.i.fwcap_to_speed.exit_crit_edge ], [ 50000, %do.body13.i.fwcap_to_speed.exit_crit_edge ], [ 40000, %do.body19.i.fwcap_to_speed.exit_crit_edge ], [ 25000, %do.body25.i.fwcap_to_speed.exit_crit_edge ], [ 10000, %do.body31.i.fwcap_to_speed.exit_crit_edge ], [ 1000, %do.body37.i.fwcap_to_speed.exit_crit_edge ], [ %..i, %do.body43.i ]
  %34 = ptrtoint ptr %speedp to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %retval.0.i, ptr %speedp, align 4
  br label %if.end33

if.end33:                                         ; preds = %fwcap_to_speed.exit, %if.end29.if.end33_crit_edge
  %tobool34.not = icmp eq ptr %mtup, null
  br i1 %tobool34.not, label %if.end33.cleanup_crit_edge, label %if.then35

if.end33.cleanup_crit_edge:                       ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then35:                                        ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #16
  %35 = ptrtoint ptr %mtup to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %mtu.0, ptr %mtup, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %if.end33.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %port_cmd) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_handle_fw_rpl(ptr nocapture noundef readonly %adap, ptr nocapture noundef readonly %rpl) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %rpl to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %rpl, align 1
  %conv = zext i8 %1 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 27, i8 %1)
  %cmp = icmp eq i8 %1, 27
  br i1 %cmp, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %action_to_len16 = getelementptr inbounds %struct.fw_port_cmd, ptr %rpl, i32 0, i32 1
  %2 = ptrtoint ptr %action_to_len16 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %action_to_len16, align 4
  %shr = lshr i32 %3, 16
  %trunc = trunc i32 %shr to i16
  %4 = zext i16 %trunc to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.509)
  switch i16 %trunc, label %land.lhs.true.do.end_crit_edge [
    i16 3, label %land.lhs.true.if.then_crit_edge
    i16 10, label %land.lhs.true.if.then_crit_edge32
  ]

land.lhs.true.if.then_crit_edge32:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.then

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end

if.then:                                          ; preds = %land.lhs.true.if.then_crit_edge, %land.lhs.true.if.then_crit_edge32
  %5 = ptrtoint ptr %rpl to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %rpl, align 8
  %and7 = and i32 %6, 15
  %nports = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 20
  %7 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %nports, align 4
  %conv8 = zext i8 %8 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %8)
  %cmp929.not = icmp eq i8 %8, 0
  br i1 %cmp929.not, label %if.then.for.end_crit_edge, label %if.then.for.body_crit_edge

if.then.for.body_crit_edge:                       ; preds = %if.then
  br label %for.body

if.then.for.end_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.then.for.body_crit_edge
  %i.030 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %if.then.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.adapter, ptr %adap, i32 0, i32 23, i32 %i.030
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  %tx_chan = getelementptr i8, ptr %10, i32 2326
  %11 = ptrtoint ptr %tx_chan to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %tx_chan, align 2
  %conv11 = zext i8 %12 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %and7, i32 %conv11)
  %cmp12 = icmp eq i32 %and7, %conv11
  %inc = add nuw nsw i32 %i.030, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %inc, i32 %conv8)
  %exitcond.not = icmp eq i32 %inc, %conv8
  %or.cond = select i1 %cmp12, i1 true, i1 %exitcond.not
  br i1 %or.cond, label %for.end.loopexit, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end.loopexit:                                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add.ptr.i.i.le = getelementptr i8, ptr %10, i32 2304
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then.for.end_crit_edge
  %pi.1 = phi ptr [ null, %if.then.for.end_crit_edge ], [ %add.ptr.i.i.le, %for.end.loopexit ]
  tail call void @t4_handle_get_port_info(ptr noundef %pi.1, ptr noundef %rpl)
  br label %cleanup

do.end:                                           ; preds = %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %13 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %14, ptr noundef nonnull @.str.180, i32 noundef %conv) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end, %for.end
  %retval.0 = phi i32 [ 0, %for.end ], [ -22, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_wait_dev_ready(ptr noundef %regs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %regs, i32 103424
  %0 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1003
  %1 = zext i32 %0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.510)
  switch i32 %0, label %entry.cleanup_crit_edge [
    i32 -1, label %entry.if.end_crit_edge
    i32 -286331154, label %entry.if.end_crit_edge16
  ]

entry.if.end_crit_edge16:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry.if.end_crit_edge, %entry.if.end_crit_edge16
  tail call void @msleep(i32 noundef 500) #14
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1004
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %cmp9.not = icmp eq i32 %2, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -286331154, i32 %2)
  %cmp10.not = icmp eq i32 %2, -286331154
  %3 = or i1 %cmp9.not, %cmp10.not
  %4 = select i1 %3, i32 -5, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %4, %if.end ], [ 0, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_prep_adapter(ptr noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  %flashid.i = alloca i32, align 4
  %val.i = alloca i16, align 2
  %device_id = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %device_id) #14
  %0 = ptrtoint ptr %device_id to i32
  call void @__asan_store2_noabort(i32 %0)
  store i16 -1, ptr %device_id, align 2, !annotation !996
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %val.i) #14
  %1 = ptrtoint ptr %val.i to i32
  call void @__asan_store2_noabort(i32 %1)
  store i16 -1, ptr %val.i, align 2, !annotation !996
  %pdev.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 3
  %2 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %pdev.i, align 4
  %pcie_cap.i.i.i = getelementptr inbounds %struct.pci_dev, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %pcie_cap.i.i.i to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %pcie_cap.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %tobool.i.not.i = icmp eq i8 %5, 0
  br i1 %tobool.i.not.i, label %entry.get_pci_mode.exit_crit_edge, label %if.then.i

entry.get_pci_mode.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %get_pci_mode.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pci = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 4
  %call2.i = call i32 @pcie_capability_read_word(ptr noundef %3, i32 noundef 18, ptr noundef nonnull %val.i) #14
  %6 = ptrtoint ptr %val.i to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %val.i, align 2
  %8 = trunc i16 %7 to i8
  %conv3.i = and i8 %8, 15
  %9 = ptrtoint ptr %pci to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv3.i, ptr %pci, align 1
  %10 = lshr i16 %7, 4
  %11 = trunc i16 %10 to i8
  %conv6.i = and i8 %11, 63
  %width.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 4, i32 1
  %12 = ptrtoint ptr %width.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %conv6.i, ptr %width.i, align 1
  br label %get_pci_mode.exit

get_pci_mode.exit:                                ; preds = %if.then.i, %entry.get_pci_mode.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %val.i) #14
  %13 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %14, i32 103484
  %15 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %16 = lshr i32 %15, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %16, 15
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %flashid.i) #14
  %17 = ptrtoint ptr %flashid.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %flashid.i, align 4
  %call.i = call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 1, i32 noundef 1, i32 noundef 0, i32 noundef 159) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then.i132, label %get_pci_mode.exit.if.end.i_crit_edge

get_pci_mode.exit.if.end.i_crit_edge:             ; preds = %get_pci_mode.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end.i

if.then.i132:                                     ; preds = %get_pci_mode.exit
  call void @__sanitizer_cov_trace_pc() #16
  %call1.i = call fastcc i32 @sf1_read(ptr noundef %adapter, i32 noundef 3, i32 noundef 0, i32 noundef 1, ptr noundef nonnull %flashid.i) #14
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i132, %get_pci_mode.exit.if.end.i_crit_edge
  %ret.0.i = phi i32 [ %call.i, %get_pci_mode.exit.if.end.i_crit_edge ], [ %call1.i, %if.then.i132 ]
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  call void @arm_heavy_mb() #14
  %18 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %19, i32 103420
  call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i.i, i32 0) #14, !srcloc !995
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool2.not.i = icmp eq i32 %ret.0.i, 0
  br i1 %tobool2.not.i, label %for.body.i, label %t4_get_flash_params.exit

for.body.i:                                       ; preds = %if.end.i
  %20 = ptrtoint ptr %flashid.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flashid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1376769, i32 %21)
  %cmp5.i = icmp eq i32 %21, 1376769
  br i1 %cmp5.i, label %if.then6.i, label %for.end.i

if.then6.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %sf_size.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %22 = ptrtoint ptr %sf_size.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 4194304, ptr %sf_size.i, align 4
  br label %found.i

for.end.i:                                        ; preds = %for.body.i
  %trunc.i = trunc i32 %21 to i8
  %23 = zext i8 %trunc.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.511)
  switch i8 %trunc.i, label %for.end.i.do.end.i_crit_edge [
    i8 32, label %sw.bb.i
    i8 -99, label %sw.bb22.i
    i8 -62, label %sw.bb28.i
    i8 -17, label %sw.bb34.i
  ]

for.end.i.do.end.i_crit_edge:                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb.i:                                          ; preds = %for.end.i
  %shr.i = lshr i32 %21, 16
  %trunc90.i = trunc i32 %shr.i to i8
  %switch.tableidx = add i8 %trunc90.i, -20
  call void @__sanitizer_cov_trace_const_cmp1(i8 15, i8 %switch.tableidx)
  %24 = icmp ult i8 %switch.tableidx, 15
  br i1 %24, label %switch.hole_check, label %sw.bb.i.do.end.i_crit_edge

sw.bb.i.do.end.i_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb22.i:                                        ; preds = %for.end.i
  %shr23.i = lshr i32 %21, 16
  %trunc89.i = trunc i32 %shr23.i to i8
  %25 = zext i8 %trunc89.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values.512)
  switch i8 %trunc89.i, label %sw.bb22.i.do.end.i_crit_edge [
    i8 22, label %sw.bb22.i.if.end43.i_crit_edge
    i8 23, label %sw.bb26.i
  ]

sw.bb22.i.if.end43.i_crit_edge:                   ; preds = %sw.bb22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

sw.bb22.i.do.end.i_crit_edge:                     ; preds = %sw.bb22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb26.i:                                        ; preds = %sw.bb22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

sw.bb28.i:                                        ; preds = %for.end.i
  %shr29.i = lshr i32 %21, 16
  %trunc88.i = trunc i32 %shr29.i to i8
  %26 = zext i8 %trunc88.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.513)
  switch i8 %trunc88.i, label %sw.bb28.i.do.end.i_crit_edge [
    i8 23, label %sw.bb28.i.if.end43.i_crit_edge
    i8 24, label %sw.bb32.i
  ]

sw.bb28.i.if.end43.i_crit_edge:                   ; preds = %sw.bb28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

sw.bb28.i.do.end.i_crit_edge:                     ; preds = %sw.bb28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb32.i:                                        ; preds = %sw.bb28.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

sw.bb34.i:                                        ; preds = %for.end.i
  %shr35.i = lshr i32 %21, 16
  %trunc86.i = trunc i32 %shr35.i to i8
  %27 = zext i8 %trunc86.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %27, ptr @__sancov_gen_cov_switch_values.514)
  switch i8 %trunc86.i, label %sw.bb34.i.do.end.i_crit_edge [
    i8 23, label %sw.bb34.i.if.end43.i_crit_edge
    i8 24, label %sw.bb38.i
  ]

sw.bb34.i.if.end43.i_crit_edge:                   ; preds = %sw.bb34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

sw.bb34.i.do.end.i_crit_edge:                     ; preds = %sw.bb34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

sw.bb38.i:                                        ; preds = %sw.bb34.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end43.i

do.end.i:                                         ; preds = %switch.hole_check.do.end.i_crit_edge, %sw.bb34.i.do.end.i_crit_edge, %sw.bb28.i.do.end.i_crit_edge, %sw.bb22.i.do.end.i_crit_edge, %sw.bb.i.do.end.i_crit_edge, %for.end.i.do.end.i_crit_edge
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %28 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %pdev_dev.i, align 16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %29, ptr noundef nonnull @.str.480, i32 noundef %21) #17
  br label %if.end43.i

switch.hole_check:                                ; preds = %sw.bb.i
  %switch.maskindex = zext i8 %switch.tableidx to i16
  %switch.shifted = lshr i16 28735, %switch.maskindex
  %30 = and i16 %switch.shifted, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %30)
  %switch.lobit.not = icmp eq i16 %30, 0
  br i1 %switch.lobit.not, label %switch.hole_check.do.end.i_crit_edge, label %switch.lookup

switch.hole_check.do.end.i_crit_edge:             ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end.i

switch.lookup:                                    ; preds = %switch.hole_check
  call void @__sanitizer_cov_trace_pc() #16
  %31 = sext i8 %switch.tableidx to i32
  %switch.gep = getelementptr inbounds [15 x i32], ptr @switch.table.t4_prep_adapter, i32 0, i32 %31
  %32 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %32)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %if.end43.i

if.end43.i:                                       ; preds = %switch.lookup, %do.end.i, %sw.bb38.i, %sw.bb34.i.if.end43.i_crit_edge, %sw.bb32.i, %sw.bb28.i.if.end43.i_crit_edge, %sw.bb26.i, %sw.bb22.i.if.end43.i_crit_edge
  %size.1.i = phi i32 [ 4194304, %do.end.i ], [ 67108864, %sw.bb26.i ], [ 16777216, %sw.bb32.i ], [ 16777216, %sw.bb38.i ], [ 33554432, %sw.bb22.i.if.end43.i_crit_edge ], [ 8388608, %sw.bb28.i.if.end43.i_crit_edge ], [ 8388608, %sw.bb34.i.if.end43.i_crit_edge ], [ %switch.load, %switch.lookup ]
  %sf_size45.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %33 = ptrtoint ptr %sf_size45.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %size.1.i, ptr %sf_size45.i, align 4
  %div4687.i = lshr exact i32 %size.1.i, 16
  br label %found.i

found.i:                                          ; preds = %if.end43.i, %if.then6.i
  %div4687.sink.i = phi i32 [ %div4687.i, %if.end43.i ], [ 64, %if.then6.i ]
  %sf_nsec48.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 9
  %34 = ptrtoint ptr %sf_nsec48.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %div4687.sink.i, ptr %sf_nsec48.i, align 8
  %sf_size50.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 8
  %35 = ptrtoint ptr %sf_size50.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %sf_size50.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2097152, i32 %36)
  %cmp51.i = icmp ult i32 %36, 2097152
  br i1 %cmp51.i, label %do.end55.i, label %found.i.t4_get_flash_params.exit.thread_crit_edge

found.i.t4_get_flash_params.exit.thread_crit_edge: ; preds = %found.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_get_flash_params.exit.thread

do.end55.i:                                       ; preds = %found.i
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev56.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %37 = ptrtoint ptr %pdev_dev56.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pdev_dev56.i, align 16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %38, ptr noundef nonnull @.str.483, i32 noundef %21, i32 noundef %36, i32 noundef 2097152) #17
  br label %t4_get_flash_params.exit.thread

t4_get_flash_params.exit.thread:                  ; preds = %do.end55.i, %found.i.t4_get_flash_params.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flashid.i) #14
  br label %if.end

t4_get_flash_params.exit:                         ; preds = %if.end.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %flashid.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %cmp = icmp slt i32 %ret.0.i, 0
  br i1 %cmp, label %do.end, label %t4_get_flash_params.exit.if.end_crit_edge

t4_get_flash_params.exit.if.end_crit_edge:        ; preds = %t4_get_flash_params.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %t4_get_flash_params.exit
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %39 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %pdev_dev, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %40, ptr noundef nonnull @.str.182, i32 noundef %ret.0.i) #17
  br label %cleanup

if.end:                                           ; preds = %t4_get_flash_params.exit.if.end_crit_edge, %t4_get_flash_params.exit.thread
  %41 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %pdev.i, align 4
  %call2 = call i32 @pci_read_config_word(ptr noundef %42, i32 noundef 2, ptr noundef nonnull %device_id) #14
  %43 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %43)
  %44 = load i16, ptr %device_id, align 2
  %45 = lshr i16 %44, 12
  %46 = zext i16 %45 to i32
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %47 = ptrtoint ptr %chip to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 0, ptr %chip, align 8
  %switch.tableidx142 = add nsw i32 %46, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %switch.tableidx142)
  %48 = icmp ult i32 %switch.tableidx142, 3
  br i1 %48, label %switch.lookup141, label %do.end75

do.end75:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev76 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  %49 = ptrtoint ptr %pdev_dev76 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %pdev_dev76, align 16
  %conv77 = zext i16 %44 to i32
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %50, ptr noundef nonnull @.str.185, i32 noundef %conv77) #17
  br label %cleanup

switch.lookup141:                                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %switch.idx.mult = shl nsw i32 %switch.tableidx142, 4
  %switch.offset = add nsw i32 %switch.idx.mult, 64
  %switch.gep143 = getelementptr inbounds [3 x i32], ptr @switch.table.t4_prep_adapter.488, i32 0, i32 %switch.tableidx142
  %51 = ptrtoint ptr %switch.gep143 to i32
  call void @__asan_load4_noabort(i32 %51)
  %switch.load144 = load i32, ptr %switch.gep143, align 4
  %switch.gep145 = getelementptr inbounds [3 x i16], ptr @switch.table.t4_prep_adapter.489, i32 0, i32 %switch.tableidx142
  %52 = ptrtoint ptr %switch.gep145 to i32
  call void @__asan_load2_noabort(i32 %52)
  %switch.load146 = load i16, ptr %switch.gep145, align 2
  %switch.gep147 = getelementptr inbounds [3 x i16], ptr @switch.table.t4_prep_adapter.490, i32 0, i32 %switch.tableidx142
  %53 = ptrtoint ptr %switch.gep147 to i32
  call void @__asan_load2_noabort(i32 %53)
  %switch.load148 = load i16, ptr %switch.gep147, align 2
  %switch.cast = trunc i32 %switch.tableidx142 to i24
  %switch.shiftamt = shl i24 %switch.cast, 3
  %switch.downshift = lshr i24 132100, %switch.shiftamt
  %switch.masked = trunc i24 %switch.downshift to i8
  %switch.cast149 = trunc i32 %switch.tableidx142 to i24
  %switch.shiftamt150 = shl i24 %switch.cast149, 3
  %switch.downshift151 = lshr i24 460037, %switch.shiftamt150
  %switch.masked152 = trunc i24 %switch.downshift151 to i8
  %switch.cast153 = trunc i32 %switch.tableidx142 to i24
  %switch.shiftamt154 = shl i24 %switch.cast153, 3
  %switch.downshift155 = lshr i24 197122, %switch.shiftamt154
  %switch.masked156 = trunc i24 %switch.downshift155 to i8
  %or48 = or i32 %and, %switch.offset
  %54 = ptrtoint ptr %chip to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %or48, ptr %chip, align 8
  %arch53 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23
  %sge_fl_db54 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 5
  %55 = ptrtoint ptr %sge_fl_db54 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %switch.load144, ptr %sge_fl_db54, align 4
  %mps_tcam_size57 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 6
  %56 = ptrtoint ptr %mps_tcam_size57 to i32
  call void @__asan_store2_noabort(i32 %56)
  store i16 %switch.load146, ptr %mps_tcam_size57, align 4
  %mps_rplc_size60 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 3
  %57 = ptrtoint ptr %mps_rplc_size60 to i32
  call void @__asan_store2_noabort(i32 %57)
  store i16 %switch.load148, ptr %mps_rplc_size60, align 4
  %58 = ptrtoint ptr %arch53 to i32
  call void @__asan_store1_noabort(i32 %58)
  store i8 %switch.masked, ptr %arch53, align 4
  %pm_stats_cnt66 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 1
  %59 = ptrtoint ptr %pm_stats_cnt66 to i32
  call void @__asan_store1_noabort(i32 %59)
  store i8 %switch.masked152, ptr %pm_stats_cnt66, align 1
  %vfcount69 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 4
  %60 = ptrtoint ptr %vfcount69 to i32
  call void @__asan_store2_noabort(i32 %60)
  store i16 %switch.load148, ptr %vfcount69, align 2
  %cng_ch_bits_log72 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 23, i32 2
  %61 = ptrtoint ptr %cng_ch_bits_log72 to i32
  call void @__asan_store1_noabort(i32 %61)
  store i8 %switch.masked156, ptr %cng_ch_bits_log72, align 2
  %cim_la_size = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 7
  %62 = ptrtoint ptr %cim_la_size to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 2048, ptr %cim_la_size, align 8
  %a_wnd = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18
  %b_wnd = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19
  %arrayidx.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 8
  %63 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store2_noabort(i32 %63)
  store i16 1, ptr %arrayidx.i, align 2
  %arrayidx1.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 7
  %64 = ptrtoint ptr %arrayidx1.i to i32
  call void @__asan_store2_noabort(i32 %64)
  store i16 1, ptr %arrayidx1.i, align 2
  %arrayidx2.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 6
  %65 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store2_noabort(i32 %65)
  store i16 1, ptr %arrayidx2.i, align 2
  %arrayidx3.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 5
  %66 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store2_noabort(i32 %66)
  store i16 1, ptr %arrayidx3.i, align 2
  %arrayidx4.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 4
  %67 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store2_noabort(i32 %67)
  store i16 1, ptr %arrayidx4.i, align 2
  %arrayidx5.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 3
  %68 = ptrtoint ptr %arrayidx5.i to i32
  call void @__asan_store2_noabort(i32 %68)
  store i16 1, ptr %arrayidx5.i, align 2
  %arrayidx6.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 2
  %69 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store2_noabort(i32 %69)
  store i16 1, ptr %arrayidx6.i, align 2
  %arrayidx7.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 1
  %70 = ptrtoint ptr %arrayidx7.i to i32
  call void @__asan_store2_noabort(i32 %70)
  store i16 1, ptr %arrayidx7.i, align 2
  %71 = ptrtoint ptr %a_wnd to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 1, ptr %a_wnd, align 2
  %arrayidx9.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 9
  %72 = ptrtoint ptr %arrayidx9.i to i32
  call void @__asan_store2_noabort(i32 %72)
  store i16 2, ptr %arrayidx9.i, align 2
  %arrayidx10.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 10
  %73 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_store2_noabort(i32 %73)
  store i16 3, ptr %arrayidx10.i, align 2
  %arrayidx11.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 11
  %74 = ptrtoint ptr %arrayidx11.i to i32
  call void @__asan_store2_noabort(i32 %74)
  store i16 4, ptr %arrayidx11.i, align 2
  %arrayidx12.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 12
  %75 = ptrtoint ptr %arrayidx12.i to i32
  call void @__asan_store2_noabort(i32 %75)
  store i16 5, ptr %arrayidx12.i, align 2
  %arrayidx13.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 13
  %76 = ptrtoint ptr %arrayidx13.i to i32
  call void @__asan_store2_noabort(i32 %76)
  store i16 6, ptr %arrayidx13.i, align 2
  %arrayidx14.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 14
  %77 = ptrtoint ptr %arrayidx14.i to i32
  call void @__asan_store2_noabort(i32 %77)
  store i16 7, ptr %arrayidx14.i, align 2
  %arrayidx15.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 15
  %78 = ptrtoint ptr %arrayidx15.i to i32
  call void @__asan_store2_noabort(i32 %78)
  store i16 8, ptr %arrayidx15.i, align 2
  %arrayidx16.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 16
  %79 = ptrtoint ptr %arrayidx16.i to i32
  call void @__asan_store2_noabort(i32 %79)
  store i16 9, ptr %arrayidx16.i, align 2
  %arrayidx17.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 17
  %80 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 10, ptr %arrayidx17.i, align 2
  %arrayidx18.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 18
  %81 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_store2_noabort(i32 %81)
  store i16 14, ptr %arrayidx18.i, align 2
  %arrayidx19.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 19
  %82 = ptrtoint ptr %arrayidx19.i to i32
  call void @__asan_store2_noabort(i32 %82)
  store i16 17, ptr %arrayidx19.i, align 2
  %arrayidx20.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 20
  %83 = ptrtoint ptr %arrayidx20.i to i32
  call void @__asan_store2_noabort(i32 %83)
  store i16 21, ptr %arrayidx20.i, align 2
  %arrayidx21.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 21
  %84 = ptrtoint ptr %arrayidx21.i to i32
  call void @__asan_store2_noabort(i32 %84)
  store i16 25, ptr %arrayidx21.i, align 2
  %arrayidx22.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 22
  %85 = ptrtoint ptr %arrayidx22.i to i32
  call void @__asan_store2_noabort(i32 %85)
  store i16 30, ptr %arrayidx22.i, align 2
  %arrayidx23.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 23
  %86 = ptrtoint ptr %arrayidx23.i to i32
  call void @__asan_store2_noabort(i32 %86)
  store i16 35, ptr %arrayidx23.i, align 2
  %arrayidx24.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 24
  %87 = ptrtoint ptr %arrayidx24.i to i32
  call void @__asan_store2_noabort(i32 %87)
  store i16 45, ptr %arrayidx24.i, align 2
  %arrayidx25.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 25
  %88 = ptrtoint ptr %arrayidx25.i to i32
  call void @__asan_store2_noabort(i32 %88)
  store i16 60, ptr %arrayidx25.i, align 2
  %arrayidx26.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 26
  %89 = ptrtoint ptr %arrayidx26.i to i32
  call void @__asan_store2_noabort(i32 %89)
  store i16 80, ptr %arrayidx26.i, align 2
  %arrayidx27.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 27
  %90 = ptrtoint ptr %arrayidx27.i to i32
  call void @__asan_store2_noabort(i32 %90)
  store i16 100, ptr %arrayidx27.i, align 2
  %arrayidx28.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 28
  %91 = ptrtoint ptr %arrayidx28.i to i32
  call void @__asan_store2_noabort(i32 %91)
  store i16 200, ptr %arrayidx28.i, align 2
  %arrayidx29.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 29
  %92 = ptrtoint ptr %arrayidx29.i to i32
  call void @__asan_store2_noabort(i32 %92)
  store i16 300, ptr %arrayidx29.i, align 2
  %arrayidx30.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 30
  %93 = ptrtoint ptr %arrayidx30.i to i32
  call void @__asan_store2_noabort(i32 %93)
  store i16 400, ptr %arrayidx30.i, align 2
  %arrayidx31.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 18, i32 31
  %94 = ptrtoint ptr %arrayidx31.i to i32
  call void @__asan_store2_noabort(i32 %94)
  store i16 500, ptr %arrayidx31.i, align 2
  %arrayidx41.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 10
  %95 = call ptr @memset(ptr %b_wnd, i32 0, i32 18)
  %96 = ptrtoint ptr %arrayidx41.i to i32
  call void @__asan_store2_noabort(i32 %96)
  store i16 1, ptr %arrayidx41.i, align 2
  %arrayidx42.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 9
  %97 = ptrtoint ptr %arrayidx42.i to i32
  call void @__asan_store2_noabort(i32 %97)
  store i16 1, ptr %arrayidx42.i, align 2
  %arrayidx43.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 12
  %98 = ptrtoint ptr %arrayidx43.i to i32
  call void @__asan_store2_noabort(i32 %98)
  store i16 2, ptr %arrayidx43.i, align 2
  %arrayidx44.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 11
  %99 = ptrtoint ptr %arrayidx44.i to i32
  call void @__asan_store2_noabort(i32 %99)
  store i16 2, ptr %arrayidx44.i, align 2
  %arrayidx45.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 16
  %100 = ptrtoint ptr %arrayidx45.i to i32
  call void @__asan_store2_noabort(i32 %100)
  store i16 3, ptr %arrayidx45.i, align 2
  %arrayidx46.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 15
  %101 = ptrtoint ptr %arrayidx46.i to i32
  call void @__asan_store2_noabort(i32 %101)
  store i16 3, ptr %arrayidx46.i, align 2
  %arrayidx47.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 14
  %102 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_store2_noabort(i32 %102)
  store i16 3, ptr %arrayidx47.i, align 2
  %arrayidx48.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 13
  %103 = ptrtoint ptr %arrayidx48.i to i32
  call void @__asan_store2_noabort(i32 %103)
  store i16 3, ptr %arrayidx48.i, align 2
  %arrayidx49.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 21
  %104 = ptrtoint ptr %arrayidx49.i to i32
  call void @__asan_store2_noabort(i32 %104)
  store i16 4, ptr %arrayidx49.i, align 2
  %arrayidx50.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 20
  %105 = ptrtoint ptr %arrayidx50.i to i32
  call void @__asan_store2_noabort(i32 %105)
  store i16 4, ptr %arrayidx50.i, align 2
  %arrayidx51.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 19
  %106 = ptrtoint ptr %arrayidx51.i to i32
  call void @__asan_store2_noabort(i32 %106)
  store i16 4, ptr %arrayidx51.i, align 2
  %arrayidx52.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 18
  %107 = ptrtoint ptr %arrayidx52.i to i32
  call void @__asan_store2_noabort(i32 %107)
  store i16 4, ptr %arrayidx52.i, align 2
  %arrayidx53.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 17
  %108 = ptrtoint ptr %arrayidx53.i to i32
  call void @__asan_store2_noabort(i32 %108)
  store i16 4, ptr %arrayidx53.i, align 2
  %arrayidx54.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 27
  %109 = ptrtoint ptr %arrayidx54.i to i32
  call void @__asan_store2_noabort(i32 %109)
  store i16 5, ptr %arrayidx54.i, align 2
  %arrayidx55.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 26
  %110 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_store2_noabort(i32 %110)
  store i16 5, ptr %arrayidx55.i, align 2
  %arrayidx56.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 25
  %111 = ptrtoint ptr %arrayidx56.i to i32
  call void @__asan_store2_noabort(i32 %111)
  store i16 5, ptr %arrayidx56.i, align 2
  %arrayidx57.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 24
  %112 = ptrtoint ptr %arrayidx57.i to i32
  call void @__asan_store2_noabort(i32 %112)
  store i16 5, ptr %arrayidx57.i, align 2
  %arrayidx58.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 23
  %113 = ptrtoint ptr %arrayidx58.i to i32
  call void @__asan_store2_noabort(i32 %113)
  store i16 5, ptr %arrayidx58.i, align 2
  %arrayidx59.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 22
  %114 = ptrtoint ptr %arrayidx59.i to i32
  call void @__asan_store2_noabort(i32 %114)
  store i16 5, ptr %arrayidx59.i, align 2
  %arrayidx60.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 29
  %115 = ptrtoint ptr %arrayidx60.i to i32
  call void @__asan_store2_noabort(i32 %115)
  store i16 6, ptr %arrayidx60.i, align 2
  %arrayidx61.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 28
  %116 = ptrtoint ptr %arrayidx61.i to i32
  call void @__asan_store2_noabort(i32 %116)
  store i16 6, ptr %arrayidx61.i, align 2
  %arrayidx62.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 31
  %117 = ptrtoint ptr %arrayidx62.i to i32
  call void @__asan_store2_noabort(i32 %117)
  store i16 7, ptr %arrayidx62.i, align 2
  %arrayidx63.i = getelementptr %struct.adapter, ptr %adapter, i32 0, i32 15, i32 19, i32 30
  %118 = ptrtoint ptr %arrayidx63.i to i32
  call void @__asan_store2_noabort(i32 %118)
  store i16 7, ptr %arrayidx63.i, align 2
  %nports = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 20
  %119 = ptrtoint ptr %nports to i32
  call void @__asan_store1_noabort(i32 %119)
  store i8 1, ptr %nports, align 4
  %portvec = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 21
  %120 = ptrtoint ptr %portvec to i32
  call void @__asan_store1_noabort(i32 %120)
  store i8 1, ptr %portvec, align 1
  %vpd = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 2
  %121 = ptrtoint ptr %vpd to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 50000, ptr %vpd, align 8
  %122 = ptrtoint ptr %pdev.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %pdev.i, align 4
  %call86 = call i32 @pcie_capability_clear_and_set_word(ptr noundef %123, i32 noundef 40, i16 noundef zeroext 15, i16 noundef zeroext 13) #14
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup141, %do.end75, %do.end
  %retval.0 = phi i32 [ %ret.0.i, %do.end ], [ -22, %do.end75 ], [ 0, %switch.lookup141 ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %device_id) #14
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pci_read_config_word(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @pcie_capability_clear_and_set_word(ptr noundef, i32 noundef, i16 noundef zeroext, i16 noundef zeroext) local_unnamed_addr #3

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_shutdown_adapter(ptr nocapture noundef readonly %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @t4_intr_disable(ptr noundef %adapter)
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 24592
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 0) #14, !srcloc !995
  %nports = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 20
  %2 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nports, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp21.not = icmp eq i8 %3, 0
  br i1 %cmp21.not, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.lr.ph
  %port.022 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.body.for.body_crit_edge ]
  %4 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %chip, align 8
  %6 = and i32 %5, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %6)
  %cmp.i.not = icmp eq i32 %6, 64
  %mul = shl i32 %port.022, 13
  %add3 = add nuw nsw i32 %mul, 135168
  %mul4 = shl i32 %port.022, 14
  %add6 = add nuw nsw i32 %mul4, 198656
  %cond = select i1 %cmp.i.not, i32 %add3, i32 %add6
  %7 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adapter, align 128
  %add.ptr.i18 = getelementptr i8, ptr %8, i32 %cond
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i18) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %10 = and i32 %9, -4194305
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %11 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adapter, align 128
  %add.ptr.i19 = getelementptr i8, ptr %12, i32 %cond
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i19, i32 %10) #14, !srcloc !995
  %inc = add nuw nsw i32 %port.022, 1
  %13 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %nports, align 4
  %conv = zext i8 %14 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  %15 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adapter, align 128
  %add.ptr.i.i = getelementptr i8, ptr %16, i32 4104
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %18 = and i32 %17, -16777217
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %19 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adapter, align 128
  %add.ptr.i6.i = getelementptr i8, ptr %20, i32 4104
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i6.i, i32 %18) #14, !srcloc !995
  %21 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adapter, align 128
  %add.ptr.i7.i = getelementptr i8, ptr %22, i32 4104
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  ret i32 0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @t4_bar2_sge_qregs(ptr nocapture noundef readonly %adapter, i32 noundef %qid, i32 noundef %qtype, i32 noundef %user, ptr nocapture noundef writeonly %pbar2_qoffset, ptr nocapture noundef writeonly %pbar2_qid) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %user)
  %tobool.not = icmp eq i32 %user, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %chip = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  br i1 %cmp.i.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %params2 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15
  %3 = ptrtoint ptr %params2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %params2, align 8
  %add = add i32 %4, 10
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %qtype)
  %cmp = icmp eq i32 %qtype, 0
  %eq_qpp = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 0, i32 1
  %iq_qpp = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 0, i32 2
  %cond.in = select i1 %cmp, ptr %eq_qpp, ptr %iq_qpp
  %5 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cond = load i32, ptr %cond.in, align 4
  %notmask = shl nsw i32 -1, %cond
  %sub = xor i32 %notmask, -1
  %shr = lshr i32 %qid, %cond
  %conv = zext i32 %shr to i64
  %sh_prom = zext i32 %add to i64
  %shl8 = shl i64 %conv, %sh_prom
  %and = and i32 %sub, %qid
  %mul = shl i32 %and, 7
  %mul.highbits = lshr i32 %mul, %add
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.highbits)
  %cmp9 = icmp eq i32 %mul.highbits, 0
  %narrow = select i1 %cmp9, i32 %mul, i32 0
  %add14 = zext i32 %narrow to i64
  %bar2_qoffset.0 = add i64 %shl8, %add14
  %bar2_qid.0 = select i1 %cmp9, i32 0, i32 %and
  %6 = ptrtoint ptr %pbar2_qoffset to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 %bar2_qoffset.0, ptr %pbar2_qoffset, align 8
  %7 = ptrtoint ptr %pbar2_qid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %bar2_qid.0, ptr %pbar2_qid, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %land.lhs.true.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_sge_params(ptr nocapture noundef %adapter) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %params = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 4108
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %4 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pf, align 4
  %mul = shl i32 %5, 2
  %shr = lshr i32 %3, %mul
  %and = and i32 %shr, 15
  %6 = ptrtoint ptr %params to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and, ptr %params, align 4
  %7 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adapter, align 128
  %add.ptr.i20 = getelementptr i8, ptr %8, i32 4112
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i20) #14, !srcloc !992
  %10 = tail call i32 @llvm.bswap.i32(i32 %9) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %shr6 = lshr i32 %10, %mul
  %and7 = and i32 %shr6, 15
  %eq_qpp = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 0, i32 1
  %11 = ptrtoint ptr %eq_qpp to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %and7, ptr %eq_qpp, align 4
  %12 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adapter, align 128
  %add.ptr.i21 = getelementptr i8, ptr %13, i32 4340
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i21) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %shr9 = lshr i32 %15, %mul
  %and10 = and i32 %shr9, 15
  %iq_qpp = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 0, i32 2
  %16 = ptrtoint ptr %iq_qpp to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and10, ptr %iq_qpp, align 4
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_tp_params(ptr noundef %adap, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 32144
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %shr = lshr i32 %3, 16
  %and = and i32 %shr, 255
  %tp = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1
  %4 = ptrtoint ptr %tp to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %and, ptr %tp, align 8
  %and2 = and i32 %3, 255
  %dack_re = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 3
  %5 = ptrtoint ptr %dack_re to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %and2, ptr %dack_re, align 4
  %arrayidx = getelementptr %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 4, i32 0
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store2_noabort(i32 %6)
  store i16 0, ptr %arrayidx, align 2
  %arrayidx.1 = getelementptr %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 4, i32 1
  %7 = ptrtoint ptr %arrayidx.1 to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 1, ptr %arrayidx.1, align 2
  %arrayidx.2 = getelementptr %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 4, i32 2
  %8 = ptrtoint ptr %arrayidx.2 to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 2, ptr %arrayidx.2, align 2
  %arrayidx.3 = getelementptr %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 4, i32 3
  %9 = ptrtoint ptr %arrayidx.3 to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 3, ptr %arrayidx.3, align 2
  %mbox = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %10 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %mbox, align 8
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %12 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %pf, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %14 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %15 = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %16 = call ptr @memset(ptr %15, i32 0, i32 52)
  %shl.i.i = shl i32 %13, 8
  %or2.i.i = or i32 %shl.i.i, 146800640
  %17 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %18 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 4, ptr %retval_len16.i.i, align 4
  %19 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 19792128, ptr %14, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %11, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp9.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp9.i.i, label %for.body16.preheader.i.i, label %do.end24

for.body16.preheader.i.i:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %val13.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 2, i32 0, i32 1
  %20 = ptrtoint ptr %val13.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %val13.i.i, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %22 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pdev_dev, align 16
  %shr10 = lshr i32 %21, 16
  %and13 = and i32 %21, 65535
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %23, ptr noundef nonnull @.str.187, i32 noundef %shr10, i32 noundef %and13) #17
  %vlan_pri_map = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 5
  %24 = ptrtoint ptr %vlan_pri_map to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %shr10, ptr %vlan_pri_map, align 8
  br label %if.end

do.end24:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  %pdev_dev25 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %25 = ptrtoint ptr %pdev_dev25 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %pdev_dev25, align 16
  call void (ptr, ptr, ...) @_dev_info(ptr noundef %26, ptr noundef nonnull @.str.190) #17
  %vlan_pri_map28 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 5
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32320, i32 noundef 32324, ptr noundef %vlan_pri_map28, i32 noundef 1, i32 noundef 320, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %27 = ptrtoint ptr %vlan_pri_map28 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %vlan_pri_map28, align 8
  br label %if.end

if.end:                                           ; preds = %do.end24, %for.body16.preheader.i.i
  %.sink = phi i32 [ %28, %do.end24 ], [ %and13, %for.body16.preheader.i.i ]
  %filter_mask34 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 6
  %29 = ptrtoint ptr %filter_mask34 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %.sink, ptr %filter_mask34, align 4
  %ingress_config = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 7
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32320, i32 noundef 32324, ptr noundef %ingress_config, i32 noundef 1, i32 noundef 321, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %30 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %chip, align 8
  %32 = and i32 %31, 224
  call void @__sanitizer_cov_trace_const_cmp4(i32 80, i32 %32)
  %cmp41 = icmp ugt i32 %32, 80
  br i1 %cmp41, label %if.then43, label %if.end.if.end49_crit_edge

if.end.if.end49_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end49

if.then43:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %adap, align 128
  %add.ptr.i153 = getelementptr i8, ptr %34, i32 32004
  %35 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i153) #14, !srcloc !992
  %36 = lshr i32 %35, 27
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and45.lobit = and i32 %36, 1
  %rx_pkt_encap = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 8
  %37 = ptrtoint ptr %rx_pkt_encap to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %and45.lobit, ptr %rx_pkt_encap, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.then43, %if.end.if.end49_crit_edge
  %vlan_pri_map.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 5
  %38 = ptrtoint ptr %vlan_pri_map.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %vlan_pri_map.i, align 8
  %and.i = and i32 %39, 1
  %sext = add nsw i32 %and.i, -1
  %fcoe_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 9
  %40 = ptrtoint ptr %fcoe_shift to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %sext, ptr %fcoe_shift, align 8
  %and.i155 = and i32 %39, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cmp.i156 = icmp eq i32 %and.i155, 0
  %spec.select = select i1 %cmp.i156, i32 -1, i32 %and.i
  %port_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 10
  %41 = ptrtoint ptr %port_shift to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %spec.select, ptr %port_shift, align 4
  %and.i161 = and i32 %39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cmp.i162 = icmp eq i32 %and.i161, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond492.not = icmp eq i32 %and.i155, 0
  %add4.i170.1 = add nuw nsw i32 %and.i, 3
  %spec.select493 = select i1 %cond492.not, i32 %and.i, i32 %add4.i170.1
  %retval.0.i192 = select i1 %cmp.i162, i32 -1, i32 %spec.select493
  %vnic_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 11
  %42 = ptrtoint ptr %vnic_shift to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %retval.0.i192, ptr %vnic_shift, align 8
  %and.i195 = and i32 %39, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cmp.i196 = icmp eq i32 %and.i195, 0
  br i1 %cmp.i196, label %if.end49.t4_filter_field_shift.exit227_crit_edge, label %for.body.i201.preheader

if.end49.t4_filter_field_shift.exit227_crit_edge: ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit227

for.body.i201.preheader:                          ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond494.not = icmp eq i32 %and.i155, 0
  %add4.i204.1 = add nuw nsw i32 %and.i, 3
  %spec.select495 = select i1 %cond494.not, i32 %and.i, i32 %add4.i204.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond448.not = icmp eq i32 %and.i161, 0
  %add6.i206.2 = add nuw nsw i32 %spec.select495, 17
  %spec.select449 = select i1 %cond448.not, i32 %spec.select495, i32 %add6.i206.2
  br label %t4_filter_field_shift.exit227

t4_filter_field_shift.exit227:                    ; preds = %for.body.i201.preheader, %if.end49.t4_filter_field_shift.exit227_crit_edge
  %retval.0.i226 = phi i32 [ -1, %if.end49.t4_filter_field_shift.exit227_crit_edge ], [ %spec.select449, %for.body.i201.preheader ]
  %vlan_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 12
  %43 = ptrtoint ptr %vlan_shift to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %retval.0.i226, ptr %vlan_shift, align 4
  %and.i229 = and i32 %39, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cmp.i230 = icmp eq i32 %and.i229, 0
  br i1 %cmp.i230, label %t4_filter_field_shift.exit227.t4_filter_field_shift.exit261_crit_edge, label %for.body.i235.preheader

t4_filter_field_shift.exit227.t4_filter_field_shift.exit261_crit_edge: ; preds = %t4_filter_field_shift.exit227
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit261

for.body.i235.preheader:                          ; preds = %t4_filter_field_shift.exit227
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond496.not = icmp eq i32 %and.i155, 0
  %add4.i238.1 = add nuw nsw i32 %and.i, 3
  %spec.select497 = select i1 %cond496.not, i32 %and.i, i32 %add4.i238.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond452.not = icmp eq i32 %and.i161, 0
  %add6.i240.2 = add nuw nsw i32 %spec.select497, 17
  %spec.select453 = select i1 %cond452.not, i32 %spec.select497, i32 %add6.i240.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond516.not = icmp eq i32 %and.i195, 0
  %add8.i242.3 = add nuw nsw i32 %spec.select453, 17
  %spec.select517 = select i1 %cond516.not, i32 %spec.select453, i32 %add8.i242.3
  br label %t4_filter_field_shift.exit261

t4_filter_field_shift.exit261:                    ; preds = %for.body.i235.preheader, %t4_filter_field_shift.exit227.t4_filter_field_shift.exit261_crit_edge
  %retval.0.i260 = phi i32 [ -1, %t4_filter_field_shift.exit227.t4_filter_field_shift.exit261_crit_edge ], [ %spec.select517, %for.body.i235.preheader ]
  %tos_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 13
  %44 = ptrtoint ptr %tos_shift to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %retval.0.i260, ptr %tos_shift, align 8
  %and.i263 = and i32 %39, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i263)
  %cmp.i264 = icmp eq i32 %and.i263, 0
  br i1 %cmp.i264, label %t4_filter_field_shift.exit261.t4_filter_field_shift.exit295_crit_edge, label %for.body.i269.preheader

t4_filter_field_shift.exit261.t4_filter_field_shift.exit295_crit_edge: ; preds = %t4_filter_field_shift.exit261
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit295

for.body.i269.preheader:                          ; preds = %t4_filter_field_shift.exit261
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond498.not = icmp eq i32 %and.i155, 0
  %add4.i272.1 = add nuw nsw i32 %and.i, 3
  %spec.select499 = select i1 %cond498.not, i32 %and.i, i32 %add4.i272.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond456.not = icmp eq i32 %and.i161, 0
  %add6.i274.2 = add nuw nsw i32 %spec.select499, 17
  %spec.select457 = select i1 %cond456.not, i32 %spec.select499, i32 %add6.i274.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond518.not = icmp eq i32 %and.i195, 0
  %add8.i276.3 = add nuw nsw i32 %spec.select457, 17
  %spec.select519 = select i1 %cond518.not, i32 %spec.select457, i32 %add8.i276.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cond458.not = icmp eq i32 %and.i229, 0
  %add10.i278.4 = add nuw nsw i32 %spec.select519, 8
  %spec.select459 = select i1 %cond458.not, i32 %spec.select519, i32 %add10.i278.4
  br label %t4_filter_field_shift.exit295

t4_filter_field_shift.exit295:                    ; preds = %for.body.i269.preheader, %t4_filter_field_shift.exit261.t4_filter_field_shift.exit295_crit_edge
  %retval.0.i294 = phi i32 [ -1, %t4_filter_field_shift.exit261.t4_filter_field_shift.exit295_crit_edge ], [ %spec.select459, %for.body.i269.preheader ]
  %protocol_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 14
  %45 = ptrtoint ptr %protocol_shift to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %retval.0.i294, ptr %protocol_shift, align 4
  %and.i297 = and i32 %39, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i297)
  %cmp.i298 = icmp eq i32 %and.i297, 0
  br i1 %cmp.i298, label %t4_filter_field_shift.exit295.t4_filter_field_shift.exit329_crit_edge, label %for.body.i303.preheader

t4_filter_field_shift.exit295.t4_filter_field_shift.exit329_crit_edge: ; preds = %t4_filter_field_shift.exit295
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit329

for.body.i303.preheader:                          ; preds = %t4_filter_field_shift.exit295
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond500.not = icmp eq i32 %and.i155, 0
  %add4.i306.1 = add nuw nsw i32 %and.i, 3
  %spec.select501 = select i1 %cond500.not, i32 %and.i, i32 %add4.i306.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond462.not = icmp eq i32 %and.i161, 0
  %add6.i308.2 = add nuw nsw i32 %spec.select501, 17
  %spec.select463 = select i1 %cond462.not, i32 %spec.select501, i32 %add6.i308.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond520.not = icmp eq i32 %and.i195, 0
  %add8.i310.3 = add nuw nsw i32 %spec.select463, 17
  %spec.select521 = select i1 %cond520.not, i32 %spec.select463, i32 %add8.i310.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cond464.not = icmp eq i32 %and.i229, 0
  %add10.i312.4 = add nuw nsw i32 %spec.select521, 8
  %spec.select465 = select i1 %cond464.not, i32 %spec.select521, i32 %add10.i312.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i263)
  %cond502.not = icmp eq i32 %and.i263, 0
  %add12.i314.5 = add nuw nsw i32 %spec.select465, 8
  %spec.select503 = select i1 %cond502.not, i32 %spec.select465, i32 %add12.i314.5
  br label %t4_filter_field_shift.exit329

t4_filter_field_shift.exit329:                    ; preds = %for.body.i303.preheader, %t4_filter_field_shift.exit295.t4_filter_field_shift.exit329_crit_edge
  %retval.0.i328 = phi i32 [ -1, %t4_filter_field_shift.exit295.t4_filter_field_shift.exit329_crit_edge ], [ %spec.select503, %for.body.i303.preheader ]
  %ethertype_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 15
  %46 = ptrtoint ptr %ethertype_shift to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %retval.0.i328, ptr %ethertype_shift, align 8
  %and.i331 = and i32 %39, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i331)
  %cmp.i332 = icmp eq i32 %and.i331, 0
  br i1 %cmp.i332, label %t4_filter_field_shift.exit329.t4_filter_field_shift.exit363_crit_edge, label %for.body.i337.preheader

t4_filter_field_shift.exit329.t4_filter_field_shift.exit363_crit_edge: ; preds = %t4_filter_field_shift.exit329
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit363

for.body.i337.preheader:                          ; preds = %t4_filter_field_shift.exit329
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond504.not = icmp eq i32 %and.i155, 0
  %add4.i340.1 = add nuw nsw i32 %and.i, 3
  %spec.select505 = select i1 %cond504.not, i32 %and.i, i32 %add4.i340.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond468.not = icmp eq i32 %and.i161, 0
  %add6.i342.2 = add nuw nsw i32 %spec.select505, 17
  %spec.select469 = select i1 %cond468.not, i32 %spec.select505, i32 %add6.i342.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond522.not = icmp eq i32 %and.i195, 0
  %add8.i344.3 = add nuw nsw i32 %spec.select469, 17
  %spec.select523 = select i1 %cond522.not, i32 %spec.select469, i32 %add8.i344.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cond470.not = icmp eq i32 %and.i229, 0
  %add10.i346.4 = add nuw nsw i32 %spec.select523, 8
  %spec.select471 = select i1 %cond470.not, i32 %spec.select523, i32 %add10.i346.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i263)
  %cond506.not = icmp eq i32 %and.i263, 0
  %add12.i348.5 = add nuw nsw i32 %spec.select471, 8
  %spec.select507 = select i1 %cond506.not, i32 %spec.select471, i32 %add12.i348.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i297)
  %cond472.not = icmp eq i32 %and.i297, 0
  %add14.i350.6 = add nuw nsw i32 %spec.select507, 16
  %spec.select473 = select i1 %cond472.not, i32 %spec.select507, i32 %add14.i350.6
  br label %t4_filter_field_shift.exit363

t4_filter_field_shift.exit363:                    ; preds = %for.body.i337.preheader, %t4_filter_field_shift.exit329.t4_filter_field_shift.exit363_crit_edge
  %retval.0.i362 = phi i32 [ -1, %t4_filter_field_shift.exit329.t4_filter_field_shift.exit363_crit_edge ], [ %spec.select473, %for.body.i337.preheader ]
  %macmatch_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 16
  %47 = ptrtoint ptr %macmatch_shift to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %retval.0.i362, ptr %macmatch_shift, align 4
  %and.i365 = and i32 %39, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i365)
  %cmp.i366 = icmp eq i32 %and.i365, 0
  br i1 %cmp.i366, label %t4_filter_field_shift.exit363.t4_filter_field_shift.exit397_crit_edge, label %for.body.i371.preheader

t4_filter_field_shift.exit363.t4_filter_field_shift.exit397_crit_edge: ; preds = %t4_filter_field_shift.exit363
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit397

for.body.i371.preheader:                          ; preds = %t4_filter_field_shift.exit363
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond508.not = icmp eq i32 %and.i155, 0
  %add4.i374.1 = add nuw nsw i32 %and.i, 3
  %spec.select509 = select i1 %cond508.not, i32 %and.i, i32 %add4.i374.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond476.not = icmp eq i32 %and.i161, 0
  %add6.i376.2 = add nuw nsw i32 %spec.select509, 17
  %spec.select477 = select i1 %cond476.not, i32 %spec.select509, i32 %add6.i376.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond524.not = icmp eq i32 %and.i195, 0
  %add8.i378.3 = add nuw nsw i32 %spec.select477, 17
  %spec.select525 = select i1 %cond524.not, i32 %spec.select477, i32 %add8.i378.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cond478.not = icmp eq i32 %and.i229, 0
  %add10.i380.4 = add nuw nsw i32 %spec.select525, 8
  %spec.select479 = select i1 %cond478.not, i32 %spec.select525, i32 %add10.i380.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i263)
  %cond510.not = icmp eq i32 %and.i263, 0
  %add12.i382.5 = add nuw nsw i32 %spec.select479, 8
  %spec.select511 = select i1 %cond510.not, i32 %spec.select479, i32 %add12.i382.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i297)
  %cond480.not = icmp eq i32 %and.i297, 0
  %add14.i384.6 = add nuw nsw i32 %spec.select511, 16
  %spec.select481 = select i1 %cond480.not, i32 %spec.select511, i32 %add14.i384.6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i331)
  %cond528.not = icmp eq i32 %and.i331, 0
  %add16.i386.7 = add nuw nsw i32 %spec.select481, 9
  %spec.select529 = select i1 %cond528.not, i32 %spec.select481, i32 %add16.i386.7
  br label %t4_filter_field_shift.exit397

t4_filter_field_shift.exit397:                    ; preds = %for.body.i371.preheader, %t4_filter_field_shift.exit363.t4_filter_field_shift.exit397_crit_edge
  %retval.0.i396 = phi i32 [ -1, %t4_filter_field_shift.exit363.t4_filter_field_shift.exit397_crit_edge ], [ %spec.select529, %for.body.i371.preheader ]
  %matchtype_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 17
  %48 = ptrtoint ptr %matchtype_shift to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %retval.0.i396, ptr %matchtype_shift, align 8
  %and.i399 = and i32 %39, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i399)
  %cmp.i400 = icmp eq i32 %and.i399, 0
  br i1 %cmp.i400, label %t4_filter_field_shift.exit397.t4_filter_field_shift.exit431_crit_edge, label %for.body.i405.preheader

t4_filter_field_shift.exit397.t4_filter_field_shift.exit431_crit_edge: ; preds = %t4_filter_field_shift.exit397
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_filter_field_shift.exit431

for.body.i405.preheader:                          ; preds = %t4_filter_field_shift.exit397
  call void @__sanitizer_cov_trace_pc() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i155)
  %cond512.not = icmp eq i32 %and.i155, 0
  %add4.i408.1 = add nuw nsw i32 %and.i, 3
  %spec.select513 = select i1 %cond512.not, i32 %and.i, i32 %add4.i408.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %cond484.not = icmp eq i32 %and.i161, 0
  %add6.i410.2 = add nuw nsw i32 %spec.select513, 17
  %spec.select485 = select i1 %cond484.not, i32 %spec.select513, i32 %add6.i410.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i195)
  %cond526.not = icmp eq i32 %and.i195, 0
  %add8.i412.3 = add nuw nsw i32 %spec.select485, 17
  %spec.select527 = select i1 %cond526.not, i32 %spec.select485, i32 %add8.i412.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i229)
  %cond486.not = icmp eq i32 %and.i229, 0
  %add10.i414.4 = add nuw nsw i32 %spec.select527, 8
  %spec.select487 = select i1 %cond486.not, i32 %spec.select527, i32 %add10.i414.4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i263)
  %cond514.not = icmp eq i32 %and.i263, 0
  %add12.i416.5 = add nuw nsw i32 %spec.select487, 8
  %spec.select515 = select i1 %cond514.not, i32 %spec.select487, i32 %add12.i416.5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i297)
  %cond488.not = icmp eq i32 %and.i297, 0
  %add14.i418.6 = add nuw nsw i32 %spec.select515, 16
  %spec.select489 = select i1 %cond488.not, i32 %spec.select515, i32 %add14.i418.6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i331)
  %cond530.not = icmp eq i32 %and.i331, 0
  %add16.i420.7 = add nuw nsw i32 %spec.select489, 9
  %spec.select531 = select i1 %cond530.not, i32 %spec.select489, i32 %add16.i420.7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i365)
  %cond490.not = icmp eq i32 %and.i365, 0
  %add18.i422.8 = add nuw nsw i32 %spec.select531, 3
  %spec.select491 = select i1 %cond490.not, i32 %spec.select531, i32 %add18.i422.8
  br label %t4_filter_field_shift.exit431

t4_filter_field_shift.exit431:                    ; preds = %for.body.i405.preheader, %t4_filter_field_shift.exit397.t4_filter_field_shift.exit431_crit_edge
  %retval.0.i430 = phi i32 [ -1, %t4_filter_field_shift.exit397.t4_filter_field_shift.exit431_crit_edge ], [ %spec.select491, %for.body.i405.preheader ]
  %frag_shift = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 18
  %49 = ptrtoint ptr %frag_shift to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %retval.0.i430, ptr %frag_shift, align 4
  %50 = ptrtoint ptr %ingress_config to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %ingress_config, align 8
  %and83 = and i32 %51, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and83)
  %cmp84 = icmp eq i32 %and83, 0
  br i1 %cmp84, label %if.then86, label %t4_filter_field_shift.exit431.if.end90_crit_edge

t4_filter_field_shift.exit431.if.end90_crit_edge: ; preds = %t4_filter_field_shift.exit431
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end90

if.then86:                                        ; preds = %t4_filter_field_shift.exit431
  call void @__sanitizer_cov_trace_pc() #16
  %52 = ptrtoint ptr %vnic_shift to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 -1, ptr %vnic_shift, align 8
  br label %if.end90

if.end90:                                         ; preds = %if.then86, %t4_filter_field_shift.exit431.if.end90_crit_edge
  %53 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %adap, align 128
  %add.ptr.i432 = getelementptr i8, ptr %54, i32 106156
  %55 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i432) #14, !srcloc !992
  %56 = call i32 @llvm.bswap.i32(i32 %55) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %conv92 = zext i32 %56 to i64
  %hash_filter_mask = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 19
  %57 = ptrtoint ptr %hash_filter_mask to i32
  call void @__asan_store8_noabort(i32 %57)
  store i64 %conv92, ptr %hash_filter_mask, align 8
  %58 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %adap, align 128
  %add.ptr.i433 = getelementptr i8, ptr %59, i32 106160
  %60 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i433) #14, !srcloc !992
  %61 = call i32 @llvm.bswap.i32(i32 %60) #14
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %conv96 = zext i32 %61 to i64
  %shl = shl nuw i64 %conv96, 32
  %62 = ptrtoint ptr %hash_filter_mask to i32
  call void @__asan_load8_noabort(i32 %62)
  %63 = load i64, ptr %hash_filter_mask, align 8
  %or = or i64 %shl, %63
  store i64 %or, ptr %hash_filter_mask, align 8
  ret i32 0
}

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_filter_field_shift(ptr nocapture noundef readonly %adap, i32 noundef %filter_sel) local_unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vlan_pri_map = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 5
  %0 = ptrtoint ptr %vlan_pri_map to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vlan_pri_map, align 8
  %and = and i32 %1, %filter_sel
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %filter_sel)
  %cmp137 = icmp ugt i32 %filter_sel, 1
  br i1 %cmp137, label %for.cond.preheader.for.body_crit_edge, label %for.cond.preheader.cleanup_crit_edge

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %field_shift.039 = phi i32 [ %field_shift.1, %for.inc.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %sel.038 = phi i32 [ %shl, %for.inc.for.body_crit_edge ], [ 1, %for.cond.preheader.for.body_crit_edge ]
  %and2 = and i32 %sel.038, %1
  %2 = zext i32 %and2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.515)
  switch i32 %and2, label %for.body.for.inc_crit_edge [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 4, label %sw.bb5
    i32 8, label %sw.bb7
    i32 16, label %sw.bb9
    i32 32, label %sw.bb11
    i32 64, label %sw.bb13
    i32 128, label %sw.bb15
    i32 256, label %sw.bb17
    i32 512, label %sw.bb19
  ]

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

sw.bb:                                            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add = add i32 %field_shift.039, 1
  br label %for.inc

sw.bb3:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add4 = add i32 %field_shift.039, 3
  br label %for.inc

sw.bb5:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add6 = add i32 %field_shift.039, 17
  br label %for.inc

sw.bb7:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add8 = add i32 %field_shift.039, 17
  br label %for.inc

sw.bb9:                                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add10 = add i32 %field_shift.039, 8
  br label %for.inc

sw.bb11:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add12 = add i32 %field_shift.039, 8
  br label %for.inc

sw.bb13:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add14 = add i32 %field_shift.039, 16
  br label %for.inc

sw.bb15:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add16 = add i32 %field_shift.039, 9
  br label %for.inc

sw.bb17:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add18 = add i32 %field_shift.039, 3
  br label %for.inc

sw.bb19:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  %add20 = add i32 %field_shift.039, 1
  br label %for.inc

for.inc:                                          ; preds = %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5, %sw.bb3, %sw.bb, %for.body.for.inc_crit_edge
  %field_shift.1 = phi i32 [ %field_shift.039, %for.body.for.inc_crit_edge ], [ %add20, %sw.bb19 ], [ %add18, %sw.bb17 ], [ %add16, %sw.bb15 ], [ %add14, %sw.bb13 ], [ %add12, %sw.bb11 ], [ %add10, %sw.bb9 ], [ %add8, %sw.bb7 ], [ %add6, %sw.bb5 ], [ %add4, %sw.bb3 ], [ %add, %sw.bb ]
  %shl = shl i32 %sel.038, 1
  %cmp1 = icmp ult i32 %shl, %filter_sel
  br i1 %cmp1, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ %field_shift.1, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_rss_mode(ptr noundef %adap, i32 noundef %mbox) local_unnamed_addr #0 align 64 {
entry:
  %rvc = alloca %struct.fw_rss_vi_config_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %rvc) #14
  %0 = getelementptr inbounds %struct.fw_rss_vi_config_cmd, ptr %rvc, i32 0, i32 1
  %1 = call ptr @memset(ptr %rvc, i32 0, i32 32)
  %nports = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 20
  %2 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %nports, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp17.not = icmp eq i8 %3, 0
  br i1 %cmp17.not, label %entry.cleanup5_crit_edge, label %for.body.lr.ph

entry.cleanup5_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup5

for.body.lr.ph:                                   ; preds = %entry
  %4 = getelementptr inbounds %struct.fw_rss_vi_config_cmd, ptr %rvc, i32 0, i32 2
  %defaultq_to_udpen = getelementptr inbounds %struct.fw_rss_vi_config_basicvirtual, ptr %4, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.018 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.adapter, ptr %adap, i32 0, i32 23, i32 %i.018
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 4
  %viid = getelementptr i8, ptr %6, i32 2308
  %7 = ptrtoint ptr %viid to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %viid, align 4
  %conv2 = zext i16 %8 to i32
  %or = or i32 %conv2, 599785472
  %9 = ptrtoint ptr %rvc to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %or, ptr %rvc, align 8
  %10 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 2, ptr %0, align 4
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %rvc, i32 noundef 32, ptr noundef nonnull %rvc, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %for.inc, label %for.body.cleanup5_crit_edge

for.body.cleanup5_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup5

for.inc:                                          ; preds = %for.body
  %11 = ptrtoint ptr %defaultq_to_udpen to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %defaultq_to_udpen, align 4
  %conv4 = trunc i32 %12 to i8
  %rss_mode = getelementptr i8, ptr %6, i32 2330
  %13 = ptrtoint ptr %rss_mode to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 %conv4, ptr %rss_mode, align 2
  %inc = add nuw nsw i32 %i.018, 1
  %14 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %nports, align 4
  %conv = zext i8 %15 to i32
  %cmp = icmp ult i32 %inc, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup5_crit_edge

for.inc.cleanup5_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup5

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup5:                                         ; preds = %for.inc.cleanup5_crit_edge, %for.body.cleanup5_crit_edge, %entry.cleanup5_crit_edge
  %retval.2 = phi i32 [ 0, %entry.cleanup5_crit_edge ], [ %call.i.i, %for.body.cleanup5_crit_edge ], [ 0, %for.inc.cleanup5_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %rvc) #14
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_portinfo(ptr nocapture noundef %pi, i32 noundef %mbox, i32 noundef %port, i32 noundef %pf, i32 noundef %vf, ptr noundef writeonly %mac) local_unnamed_addr #0 align 64 {
entry:
  %c.i.i.i = alloca %struct.fw_params_cmd, align 4
  %c.i = alloca %struct.fw_vi_cmd, align 8
  %c.i.i = alloca %struct.fw_params_cmd, align 4
  %cmd = alloca %struct.fw_port_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pi, align 8
  %fw_caps_support = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 15, i32 35
  %2 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %fw_caps_support, align 1
  %conv = zext i8 %3 to i32
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %cmd) #14
  %4 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 1
  %5 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2
  %6 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 1
  %7 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 2
  %8 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 6
  %9 = getelementptr inbounds %struct.fw_port_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 9
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %cmp = icmp eq i8 %3, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i) #14
  %10 = getelementptr inbounds i8, ptr %c.i.i, i32 8
  %11 = getelementptr inbounds i8, ptr %c.i.i, i32 16
  %12 = call ptr @memset(ptr %11, i32 0, i32 48)
  %shl.i.i = shl i32 %pf, 8
  %or.i.i = or i32 %shl.i.i, %vf
  %or2.i.i = or i32 %or.i.i, 144703488
  %13 = ptrtoint ptr %c.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %or2.i.i, ptr %c.i.i, align 4
  %retval_len16.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i, i32 0, i32 1
  %14 = ptrtoint ptr %retval_len16.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 4, ptr %retval_len16.i.i, align 4
  %incdec.ptr3.i.i = getelementptr inbounds i8, ptr %c.i.i, i32 12
  %15 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 37355520, ptr %10, align 4
  %16 = ptrtoint ptr %incdec.ptr3.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %incdec.ptr3.i.i, align 4
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %1, i32 noundef %mbox, ptr noundef nonnull %c.i.i, i32 noundef 64, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp3 = icmp eq i32 %call.i.i.i, 0
  %cond = select i1 %cmp3, i32 2, i32 1
  %conv5 = trunc i32 %cond to i8
  %17 = ptrtoint ptr %fw_caps_support to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv5, ptr %fw_caps_support, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %fw_caps.0 = phi i32 [ %cond, %if.then ], [ %conv, %entry.if.end_crit_edge ]
  %18 = getelementptr inbounds i8, ptr %cmd, i32 8
  %19 = call ptr @memset(ptr %18, i32 0, i32 24)
  %or = or i32 %port, 465567744
  %20 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %or, ptr %cmd, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %fw_caps.0)
  %cmp8 = icmp eq i32 %fw_caps.0, 1
  %or12 = select i1 %cmp8, i32 196610, i32 655362
  %21 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %or12, ptr %4, align 4
  %22 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %pi, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %23, i32 noundef %mbox, ptr noundef nonnull %cmd, i32 noundef 32, ptr noundef nonnull %cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %if.end16, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %24 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %5, align 8
  br i1 %cmp8, label %if.then19, label %if.else

if.then19:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %shr = lshr i32 %25, 8
  %and = and i32 %shr, 31
  %and20 = and i32 %25, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  %shr22 = lshr i32 %25, 16
  %and23 = and i32 %shr22, 31
  %cond24 = select i1 %tobool21.not, i32 -1, i32 %and23
  %26 = ptrtoint ptr %6 to i32
  call void @__asan_load2_noabort(i32 %26)
  %27 = load i16, ptr %6, align 4
  %conv.i = zext i16 %27 to i32
  %and12.i = shl nuw nsw i32 %conv.i, 1
  %28 = and i32 %and12.i, 8
  %and21.i = lshr i32 %conv.i, 1
  %29 = and i32 %and21.i, 4
  %30 = and i32 %and12.i, 64
  %and48.i = shl nuw nsw i32 %conv.i, 10
  %31 = and i32 %and48.i, 65536
  %32 = and i32 %and48.i, 131072
  %and66.i = shl nuw nsw i32 %conv.i, 12
  %33 = and i32 %and66.i, 1048576
  %and75.i = shl nuw nsw i32 %conv.i, 15
  %34 = and i32 %and75.i, 268435456
  %35 = and i32 %and66.i, 2097152
  %36 = and i32 %and66.i, 4194304
  %37 = and i32 %and66.i, 8388608
  %38 = and i32 %and66.i, 16777216
  %and120.i = shl nuw nsw i32 %conv.i, 4
  %39 = and i32 %and120.i, 262144
  %40 = and i32 %and120.i, 524288
  %41 = and i32 %conv.i, 19
  %42 = or i32 %28, %41
  %43 = or i32 %42, %29
  %44 = or i32 %43, %30
  %45 = or i32 %44, %31
  %46 = or i32 %45, %32
  %47 = or i32 %46, %33
  %48 = or i32 %47, %34
  %49 = or i32 %48, %35
  %50 = or i32 %49, %36
  %51 = or i32 %50, %37
  %52 = or i32 %51, %38
  %53 = or i32 %52, %39
  %54 = or i32 %53, %40
  %55 = ptrtoint ptr %7 to i32
  call void @__asan_load2_noabort(i32 %55)
  %56 = load i16, ptr %7, align 2
  %conv.i130 = zext i16 %56 to i32
  %and12.i131 = shl nuw nsw i32 %conv.i130, 1
  %57 = and i32 %and12.i131, 8
  %and21.i132 = lshr i32 %conv.i130, 1
  %58 = and i32 %and21.i132, 4
  %59 = and i32 %and12.i131, 64
  %and48.i133 = shl nuw nsw i32 %conv.i130, 10
  %60 = and i32 %and48.i133, 65536
  %61 = and i32 %and48.i133, 131072
  %and66.i134 = shl nuw nsw i32 %conv.i130, 12
  %62 = and i32 %and66.i134, 1048576
  %and75.i135 = shl nuw nsw i32 %conv.i130, 15
  %63 = and i32 %and75.i135, 268435456
  %64 = and i32 %and66.i134, 2097152
  %65 = and i32 %and66.i134, 4194304
  %66 = and i32 %and66.i134, 8388608
  %67 = and i32 %and66.i134, 16777216
  %and120.i136 = shl nuw nsw i32 %conv.i130, 4
  %68 = and i32 %and120.i136, 262144
  %69 = and i32 %and120.i136, 524288
  %70 = and i32 %conv.i130, 19
  %71 = or i32 %57, %70
  %72 = or i32 %71, %58
  %73 = or i32 %72, %59
  %74 = or i32 %73, %60
  %75 = or i32 %74, %61
  %76 = or i32 %75, %62
  %77 = or i32 %76, %63
  %78 = or i32 %77, %64
  %79 = or i32 %78, %65
  %80 = or i32 %79, %66
  %81 = or i32 %80, %67
  %82 = or i32 %81, %68
  %83 = or i32 %82, %69
  br label %if.end42

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  %shr30 = lshr i32 %25, 13
  %and31 = and i32 %shr30, 255
  %and32 = and i32 %25, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32)
  %tobool33.not = icmp eq i32 %and32, 0
  %shr35 = lshr i32 %25, 21
  %and36 = and i32 %shr35, 31
  %cond39 = select i1 %tobool33.not, i32 -1, i32 %and36
  %84 = ptrtoint ptr %8 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %8, align 4
  %86 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %9, align 8
  br label %if.end42

if.end42:                                         ; preds = %if.else, %if.then19
  %port_type.0 = phi i32 [ %and, %if.then19 ], [ %and31, %if.else ]
  %mdio_addr.0 = phi i32 [ %cond24, %if.then19 ], [ %cond39, %if.else ]
  %pcaps.0 = phi i32 [ %54, %if.then19 ], [ %85, %if.else ]
  %acaps.0 = phi i32 [ %83, %if.then19 ], [ %87, %if.else ]
  %88 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %pi, align 8
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  %90 = getelementptr inbounds i8, ptr %c.i, i32 8
  %91 = call ptr @memset(ptr %90, i32 0, i32 56)
  %shl.i = shl i32 %pf, 8
  %or.i = or i32 %shl.i, %vf
  %or2.i = or i32 %or.i, 347078656
  %92 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %or2.i, ptr %c.i, align 8
  %alloc_to_len16.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 1
  %93 = ptrtoint ptr %alloc_to_len16.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 -2147483644, ptr %alloc_to_len16.i, align 4
  %port.tr.i = trunc i32 %port to i8
  %conv.i137 = shl i8 %port.tr.i, 4
  %portid_pkd.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 4
  %94 = ptrtoint ptr %portid_pkd.i to i32
  call void @__asan_store1_noabort(i32 %94)
  store i8 %conv.i137, ptr %portid_pkd.i, align 8
  %call.i.i.i138 = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %89, i32 noundef %mbox, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i138)
  %tobool.not.i = icmp eq i32 %call.i.i.i138, 0
  br i1 %tobool.not.i, label %if.end.i, label %t4_alloc_vi.exit

if.end.i:                                         ; preds = %if.end42
  %tobool6.not.i = icmp eq ptr %mac, null
  br i1 %tobool6.not.i, label %if.end.i.t4_alloc_vi.exit.thread_crit_edge, label %if.then7.i

if.end.i.t4_alloc_vi.exit.thread_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_alloc_vi.exit.thread

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #16
  %mac8.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 3
  %95 = call ptr @memcpy(ptr %mac, ptr %mac8.i, i32 6)
  br label %t4_alloc_vi.exit.thread

t4_alloc_vi.exit.thread:                          ; preds = %if.then7.i, %if.end.i.t4_alloc_vi.exit.thread_crit_edge
  %rsssize_pkd.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 7
  %96 = ptrtoint ptr %rsssize_pkd.i to i32
  call void @__asan_load2_noabort(i32 %96)
  %97 = load i16, ptr %rsssize_pkd.i, align 8
  %98 = and i16 %97, 2047
  %99 = ptrtoint ptr %alloc_to_len16.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %alloc_to_len16.i, align 4
  %shr27.i = lshr i32 %100, 24
  %101 = trunc i32 %shr27.i to i8
  %conv29.i = and i8 %101, 1
  %shr34.i = lshr i32 %100, 16
  %conv36.i = trunc i32 %shr34.i to i8
  %102 = ptrtoint ptr %90 to i32
  call void @__asan_load2_noabort(i32 %102)
  %103 = load i16, ptr %90, align 8
  %104 = and i16 %103, 4095
  %and40.i = zext i16 %104 to i32
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  br label %if.end48

t4_alloc_vi.exit:                                 ; preds = %if.end42
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i138)
  %cmp45 = icmp slt i32 %call.i.i.i138, 0
  br i1 %cmp45, label %t4_alloc_vi.exit.cleanup_crit_edge, label %t4_alloc_vi.exit.if.end48_crit_edge

t4_alloc_vi.exit.if.end48_crit_edge:              ; preds = %t4_alloc_vi.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end48

t4_alloc_vi.exit.cleanup_crit_edge:               ; preds = %t4_alloc_vi.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end48:                                         ; preds = %t4_alloc_vi.exit.if.end48_crit_edge, %t4_alloc_vi.exit.thread
  %retval.0.i155 = phi i32 [ %and40.i, %t4_alloc_vi.exit.thread ], [ %call.i.i.i138, %t4_alloc_vi.exit.if.end48_crit_edge ]
  %vin.0154 = phi i8 [ %conv36.i, %t4_alloc_vi.exit.thread ], [ 0, %t4_alloc_vi.exit.if.end48_crit_edge ]
  %vivld.0153 = phi i8 [ %conv29.i, %t4_alloc_vi.exit.thread ], [ 0, %t4_alloc_vi.exit.if.end48_crit_edge ]
  %rss_size.0152 = phi i16 [ %98, %t4_alloc_vi.exit.thread ], [ -1, %t4_alloc_vi.exit.if.end48_crit_edge ]
  %conv49 = trunc i32 %retval.0.i155 to i16
  %viid = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 1
  %105 = ptrtoint ptr %viid to i32
  call void @__asan_store2_noabort(i32 %105)
  store i16 %conv49, ptr %viid, align 4
  %tx_chan = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 8
  %106 = ptrtoint ptr %tx_chan to i32
  call void @__asan_store1_noabort(i32 %106)
  store i8 %port.tr.i, ptr %tx_chan, align 2
  %lport = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 9
  %107 = ptrtoint ptr %lport to i32
  call void @__asan_store1_noabort(i32 %107)
  store i8 %port.tr.i, ptr %lport, align 1
  %rss_size53 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 3
  %108 = ptrtoint ptr %rss_size53 to i32
  call void @__asan_store2_noabort(i32 %108)
  store i16 %rss_size.0152, ptr %rss_size53, align 4
  %109 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %pi, align 8
  %111 = ptrtoint ptr %110 to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load ptr, ptr %110, align 128
  %add.ptr.i.i = getelementptr i8, ptr %112, i32 36864
  %113 = call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  %114 = lshr i32 %113, 24
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and.i139 = and i32 %114, 3
  %shl.i140 = shl nuw nsw i32 1, %and.i139
  call void @__sanitizer_cov_trace_cmp4(i32 %shl.i140, i32 %port)
  %cmp.not.i = icmp ugt i32 %shl.i140, %port
  br i1 %cmp.not.i, label %if.end.i141, label %do.end.i

do.end.i:                                         ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev.i = getelementptr inbounds %struct.adapter, ptr %110, i32 0, i32 4
  %115 = ptrtoint ptr %pdev_dev.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %pdev_dev.i, align 16
  call void (ptr, ptr, ...) @_dev_warn(ptr noundef %116, ptr noundef nonnull @.str.485, i32 noundef %port, i32 noundef %shl.i140) #17
  br label %t4_get_tp_e2c_map.exit

if.end.i141:                                      ; preds = %if.end48
  %mbox.i = getelementptr inbounds %struct.adapter, ptr %110, i32 0, i32 6
  %117 = ptrtoint ptr %mbox.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %mbox.i, align 8
  %pf.i = getelementptr inbounds %struct.adapter, ptr %110, i32 0, i32 7
  %119 = ptrtoint ptr %pf.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %pf.i, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i.i.i) #14
  %121 = getelementptr inbounds i8, ptr %c.i.i.i, i32 8
  %122 = getelementptr inbounds i8, ptr %c.i.i.i, i32 12
  %123 = call ptr @memset(ptr %122, i32 0, i32 52)
  %shl.i.i.i = shl i32 %120, 8
  %or2.i.i.i = or i32 %shl.i.i.i, 146800640
  %124 = ptrtoint ptr %c.i.i.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store i32 %or2.i.i.i, ptr %c.i.i.i, align 4
  %retval_len16.i.i.i = getelementptr inbounds %struct.fw_params_cmd, ptr %c.i.i.i, i32 0, i32 1
  %125 = ptrtoint ptr %retval_len16.i.i.i to i32
  call void @__asan_store4_noabort(i32 %125)
  store i32 4, ptr %retval_len16.i.i.i, align 4
  %126 = ptrtoint ptr %121 to i32
  call void @__asan_store4_noabort(i32 %126)
  store i32 18808832, ptr %121, align 4
  %call.i.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %110, i32 noundef %118, ptr noundef nonnull %c.i.i.i, i32 noundef 64, ptr noundef nonnull %c.i.i.i, i1 noundef zeroext false, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %cmp9.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %cmp9.i.i.i, label %for.body16.preheader.i.i.i, label %t4_query_params_ns.exit.i

for.body16.preheader.i.i.i:                       ; preds = %if.end.i141
  call void @__sanitizer_cov_trace_pc() #16
  %127 = ptrtoint ptr %122 to i32
  call void @__asan_load4_noabort(i32 %127)
  %128 = load i32, ptr %122, align 4
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  %mul.i = shl i32 %port, 3
  %shr3.i = lshr i32 %128, %mul.i
  %phi.cast = trunc i32 %shr3.i to i8
  br label %t4_get_tp_e2c_map.exit

t4_query_params_ns.exit.i:                        ; preds = %if.end.i141
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i.i.i) #14
  br label %t4_get_tp_e2c_map.exit

t4_get_tp_e2c_map.exit:                           ; preds = %t4_query_params_ns.exit.i, %for.body16.preheader.i.i.i, %do.end.i
  %retval.0.i142 = phi i8 [ 0, %do.end.i ], [ %phi.cast, %for.body16.preheader.i.i.i ], [ 0, %t4_query_params_ns.exit.i ]
  %rx_cchan = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 26
  %129 = ptrtoint ptr %rx_cchan to i32
  call void @__asan_store1_noabort(i32 %129)
  store i8 %retval.0.i142, ptr %rx_cchan, align 1
  %viid_smt_extn_support = getelementptr inbounds %struct.adapter, ptr %1, i32 0, i32 15, i32 37
  %130 = ptrtoint ptr %viid_smt_extn_support to i32
  call void @__asan_load1_noabort(i32 %130)
  %bf.load = load i8, ptr %viid_smt_extn_support, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %tobool58.not = icmp sgt i8 %bf.load, -1
  br i1 %tobool58.not, label %if.else62, label %t4_get_tp_e2c_map.exit.if.end75_crit_edge

t4_get_tp_e2c_map.exit.if.end75_crit_edge:        ; preds = %t4_get_tp_e2c_map.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end75

if.else62:                                        ; preds = %t4_get_tp_e2c_map.exit
  call void @__sanitizer_cov_trace_pc() #16
  %131 = ptrtoint ptr %viid to i32
  call void @__asan_load2_noabort(i32 %131)
  %132 = load i16, ptr %viid, align 4
  %133 = trunc i16 %132 to i8
  %134 = lshr i8 %133, 7
  %conv73 = and i8 %133, 127
  br label %if.end75

if.end75:                                         ; preds = %if.else62, %t4_get_tp_e2c_map.exit.if.end75_crit_edge
  %vivld.0153.sink = phi i8 [ %134, %if.else62 ], [ %vivld.0153, %t4_get_tp_e2c_map.exit.if.end75_crit_edge ]
  %vin.0154.sink = phi i8 [ %conv73, %if.else62 ], [ %vin.0154, %t4_get_tp_e2c_map.exit.if.end75_crit_edge ]
  %135 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 24
  %136 = ptrtoint ptr %135 to i32
  call void @__asan_store1_noabort(i32 %136)
  store i8 %vivld.0153.sink, ptr %135, align 1
  %137 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 23
  %138 = ptrtoint ptr %137 to i32
  call void @__asan_store1_noabort(i32 %138)
  store i8 %vin.0154.sink, ptr %137, align 4
  %port_type76 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 5
  %139 = ptrtoint ptr %port_type76 to i32
  call void @__asan_store4_noabort(i32 %139)
  store i32 %port_type.0, ptr %port_type76, align 8
  %conv77 = trunc i32 %mdio_addr.0 to i8
  %mdio_addr78 = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 4
  %140 = ptrtoint ptr %mdio_addr78 to i32
  call void @__asan_store1_noabort(i32 %140)
  store i8 %conv77, ptr %mdio_addr78, align 2
  %mod_type = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 6
  %141 = ptrtoint ptr %mod_type to i32
  call void @__asan_store1_noabort(i32 %141)
  store i8 0, ptr %mod_type, align 4
  %link_cfg = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13
  %142 = ptrtoint ptr %link_cfg to i32
  call void @__asan_store4_noabort(i32 %142)
  store i32 %pcaps.0, ptr %link_cfg, align 4
  %def_acaps.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 1
  %143 = ptrtoint ptr %def_acaps.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %acaps.0, ptr %def_acaps.i, align 4
  %lpacaps.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 3
  %144 = ptrtoint ptr %lpacaps.i to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 0, ptr %lpacaps.i, align 4
  %speed_caps.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 4
  %145 = ptrtoint ptr %speed_caps.i to i32
  call void @__asan_store4_noabort(i32 %145)
  store i32 0, ptr %speed_caps.i, align 4
  %speed.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 5
  %146 = ptrtoint ptr %speed.i to i32
  call void @__asan_store4_noabort(i32 %146)
  store i32 0, ptr %speed.i, align 4
  %fc.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 7
  %147 = ptrtoint ptr %fc.i to i32
  call void @__asan_store4_noabort(i32 %147)
  store i32 3, ptr %fc.i, align 4
  %requested_fc.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 6
  %148 = ptrtoint ptr %requested_fc.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 3, ptr %requested_fc.i, align 4
  %requested_fec.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 9
  %149 = ptrtoint ptr %requested_fec.i to i32
  call void @__asan_store4_noabort(i32 %149)
  store i32 1, ptr %requested_fec.i, align 4
  %and.i.i = lshr i32 %acaps.0, 22
  %150 = and i32 %and.i.i, 6
  %fec.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 10
  %151 = ptrtoint ptr %fec.i to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %150, ptr %fec.i, align 4
  %and.i143 = and i32 %pcaps.0, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i143)
  %tobool.not.i144 = icmp eq i32 %and.i143, 0
  br i1 %tobool.not.i144, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end75
  call void @__sanitizer_cov_trace_pc() #16
  %and5.i = and i32 %pcaps.0, 1052671
  %acaps6.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 2
  %152 = ptrtoint ptr %acaps6.i to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 %and5.i, ptr %acaps6.i, align 4
  %autoneg.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 11
  %153 = ptrtoint ptr %autoneg.i to i32
  call void @__asan_store1_noabort(i32 %153)
  store i8 1, ptr %autoneg.i, align 4
  %154 = ptrtoint ptr %requested_fc.i to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 7, ptr %requested_fc.i, align 4
  br label %cleanup

if.else.i:                                        ; preds = %if.end75
  %acaps8.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 2
  %155 = ptrtoint ptr %acaps8.i to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 0, ptr %acaps8.i, align 4
  %autoneg9.i = getelementptr inbounds %struct.port_info, ptr %pi, i32 0, i32 13, i32 11
  %156 = ptrtoint ptr %autoneg9.i to i32
  call void @__asan_store1_noabort(i32 %156)
  store i8 0, ptr %autoneg9.i, align 4
  %and.i30.i = and i32 %acaps.0, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i30.i)
  %tobool.not.i.i145 = icmp eq i32 %and.i30.i, 0
  br i1 %tobool.not.i.i145, label %do.body1.i.i, label %if.else.i.fwcap_to_fwspeed.exit.i_crit_edge

if.else.i.fwcap_to_fwspeed.exit.i_crit_edge:      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body1.i.i:                                     ; preds = %if.else.i
  %and2.i.i = and i32 %acaps.0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool3.not.i.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool3.not.i.i, label %do.body7.i.i, label %do.body1.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body1.i.i.fwcap_to_fwspeed.exit.i_crit_edge:   ; preds = %do.body1.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body7.i.i:                                     ; preds = %do.body1.i.i
  %and8.i.i = and i32 %acaps.0, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and8.i.i)
  %tobool9.not.i.i = icmp eq i32 %and8.i.i, 0
  br i1 %tobool9.not.i.i, label %do.body13.i.i, label %do.body7.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body7.i.i.fwcap_to_fwspeed.exit.i_crit_edge:   ; preds = %do.body7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body13.i.i:                                    ; preds = %do.body7.i.i
  %and14.i.i = and i32 %acaps.0, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i.i)
  %tobool15.not.i.i = icmp eq i32 %and14.i.i, 0
  br i1 %tobool15.not.i.i, label %do.body19.i.i, label %do.body13.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body13.i.i.fwcap_to_fwspeed.exit.i_crit_edge:  ; preds = %do.body13.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body19.i.i:                                    ; preds = %do.body13.i.i
  %and20.i.i = and i32 %acaps.0, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20.i.i)
  %tobool21.not.i.i = icmp eq i32 %and20.i.i, 0
  br i1 %tobool21.not.i.i, label %do.body25.i.i, label %do.body19.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body19.i.i.fwcap_to_fwspeed.exit.i_crit_edge:  ; preds = %do.body19.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body25.i.i:                                    ; preds = %do.body19.i.i
  %and26.i.i = and i32 %acaps.0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26.i.i)
  %tobool27.not.i.i = icmp eq i32 %and26.i.i, 0
  br i1 %tobool27.not.i.i, label %do.body31.i.i, label %do.body25.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body25.i.i.fwcap_to_fwspeed.exit.i_crit_edge:  ; preds = %do.body25.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body31.i.i:                                    ; preds = %do.body25.i.i
  %and32.i.i = and i32 %acaps.0, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and32.i.i)
  %tobool33.not.i.i = icmp eq i32 %and32.i.i, 0
  br i1 %tobool33.not.i.i, label %do.body37.i.i, label %do.body31.i.i.fwcap_to_fwspeed.exit.i_crit_edge

do.body31.i.i.fwcap_to_fwspeed.exit.i_crit_edge:  ; preds = %do.body31.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %fwcap_to_fwspeed.exit.i

do.body37.i.i:                                    ; preds = %do.body31.i.i
  call void @__sanitizer_cov_trace_pc() #16
  %and38.i.i = and i32 %acaps.0, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and38.i.i)
  %tobool39.not.i.i = icmp eq i32 %and38.i.i, 0
  %and44.i.i = and i32 %acaps.0, 1
  %spec.select.i.i = select i1 %tobool39.not.i.i, i32 %and44.i.i, i32 2
  br label %fwcap_to_fwspeed.exit.i

fwcap_to_fwspeed.exit.i:                          ; preds = %do.body37.i.i, %do.body31.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %do.body25.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %do.body19.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %do.body13.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %do.body7.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %do.body1.i.i.fwcap_to_fwspeed.exit.i_crit_edge, %if.else.i.fwcap_to_fwspeed.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ 256, %if.else.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 128, %do.body1.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 64, %do.body7.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 32, %do.body13.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 16, %do.body19.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 8, %do.body25.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ 4, %do.body31.i.i.fwcap_to_fwspeed.exit.i_crit_edge ], [ %spec.select.i.i, %do.body37.i.i ]
  %157 = ptrtoint ptr %speed_caps.i to i32
  call void @__asan_store4_noabort(i32 %157)
  store i32 %retval.0.i.i, ptr %speed_caps.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %fwcap_to_fwspeed.exit.i, %if.then.i, %t4_alloc_vi.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i, %if.end.cleanup_crit_edge ], [ %call.i.i.i138, %t4_alloc_vi.exit.cleanup_crit_edge ], [ 0, %if.then.i ], [ 0, %fwcap_to_fwspeed.exit.i ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %cmd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_port_init(ptr nocapture noundef readonly %adap, i32 noundef %mbox, i32 noundef %pf, i32 noundef %vf) local_unnamed_addr #0 align 64 {
entry:
  %addr = alloca [6 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 6, ptr nonnull %addr) #14
  %nports = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 20
  %0 = call ptr @memset(ptr %addr, i32 255, i32 6)
  %1 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %nports, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp29.not = icmp eq i8 %2, 0
  br i1 %cmp29.not, label %entry.cleanup10_crit_edge, label %for.body.lr.ph

entry.cleanup10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

for.body.lr.ph:                                   ; preds = %entry
  %portvec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 21
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %j.031 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %i.030 = phi i32 [ 0, %for.body.lr.ph ], [ %inc9, %for.inc.for.body_crit_edge ]
  %arrayidx.i = getelementptr %struct.adapter, ptr %adap, i32 0, i32 23, i32 %i.030
  %3 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx.i, align 4
  %5 = ptrtoint ptr %portvec to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %portvec, align 1
  %conv3 = zext i8 %6 to i32
  br label %while.cond

while.cond:                                       ; preds = %while.cond.while.cond_crit_edge, %for.body
  %j.1 = phi i32 [ %j.031, %for.body ], [ %inc, %while.cond.while.cond_crit_edge ]
  %shl = shl nuw i32 1, %j.1
  %and = and i32 %shl, %conv3
  %cmp4 = icmp eq i32 %and, 0
  %inc = add i32 %j.1, 1
  br i1 %cmp4, label %while.cond.while.cond_crit_edge, label %while.end

while.cond.while.cond_crit_edge:                  ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %add.ptr.i.i = getelementptr i8, ptr %4, i32 2304
  %call6 = call i32 @t4_init_portinfo(ptr noundef %add.ptr.i.i, i32 noundef %mbox, i32 noundef %j.1, i32 noundef %pf, i32 noundef %vf, ptr noundef nonnull %addr)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool.not = icmp eq i32 %call6, 0
  br i1 %tobool.not, label %for.inc, label %while.end.cleanup10_crit_edge

while.end.cleanup10_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

for.inc:                                          ; preds = %while.end
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  call void @dev_addr_mod(ptr noundef %8, i32 noundef 0, ptr noundef nonnull %addr, i32 noundef 6) #14
  %inc9 = add nuw nsw i32 %i.030, 1
  %9 = ptrtoint ptr %nports to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %nports, align 4
  %conv = zext i8 %10 to i32
  %cmp = icmp ult i32 %inc9, %conv
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup10_crit_edge

for.inc.cleanup10_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup10

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

cleanup10:                                        ; preds = %for.inc.cleanup10_crit_edge, %while.end.cleanup10_crit_edge, %entry.cleanup10_crit_edge
  %retval.2 = phi i32 [ 0, %entry.cleanup10_crit_edge ], [ %call6, %while.end.cleanup10_crit_edge ], [ 0, %for.inc.cleanup10_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 6, ptr nonnull %addr) #14
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_init_port_mirror(ptr nocapture noundef readonly %pi, i8 noundef zeroext %mbox, i8 noundef zeroext %port, i8 noundef zeroext %pf, i8 noundef zeroext %vf, ptr noundef writeonly %mirror_viid) local_unnamed_addr #0 align 64 {
entry:
  %c.i = alloca %struct.fw_vi_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %pi to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pi, align 8
  %conv = zext i8 %mbox to i32
  %conv2 = zext i8 %pf to i32
  %conv3 = zext i8 %vf to i32
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c.i) #14
  %2 = getelementptr inbounds i8, ptr %c.i, i32 8
  %3 = call ptr @memset(ptr %2, i32 0, i32 56)
  %shl.i = shl nuw nsw i32 %conv2, 8
  %or.i = or i32 %shl.i, %conv3
  %or2.i = or i32 %or.i, 347078656
  %4 = ptrtoint ptr %c.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or2.i, ptr %c.i, align 8
  %alloc_to_len16.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 1
  %5 = ptrtoint ptr %alloc_to_len16.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 -2147483644, ptr %alloc_to_len16.i, align 4
  %conv.i = shl i8 %port, 4
  %portid_pkd.i = getelementptr inbounds %struct.fw_vi_cmd, ptr %c.i, i32 0, i32 4
  %6 = ptrtoint ptr %portid_pkd.i to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv.i, ptr %portid_pkd.i, align 8
  %call.i.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %1, i32 noundef %conv, ptr noundef nonnull %c.i, i32 noundef 64, ptr noundef nonnull %c.i, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i, label %t4_alloc_vi.exit.thread, label %t4_alloc_vi.exit

t4_alloc_vi.exit.thread:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %2 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %2, align 8
  %9 = and i16 %8, 4095
  %and40.i = zext i16 %9 to i32
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  br label %if.end

t4_alloc_vi.exit:                                 ; preds = %entry
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c.i) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp = icmp slt i32 %call.i.i.i, 0
  br i1 %cmp, label %t4_alloc_vi.exit.cleanup_crit_edge, label %t4_alloc_vi.exit.if.end_crit_edge

t4_alloc_vi.exit.if.end_crit_edge:                ; preds = %t4_alloc_vi.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

t4_alloc_vi.exit.cleanup_crit_edge:               ; preds = %t4_alloc_vi.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %t4_alloc_vi.exit.if.end_crit_edge, %t4_alloc_vi.exit.thread
  %retval.0.i13 = phi i32 [ %and40.i, %t4_alloc_vi.exit.thread ], [ %call.i.i.i, %t4_alloc_vi.exit.if.end_crit_edge ]
  %tobool.not = icmp eq ptr %mirror_viid, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.then5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %conv6 = trunc i32 %retval.0.i13 to i16
  %10 = ptrtoint ptr %mirror_viid to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %conv6, ptr %mirror_viid, align 2
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %if.end.cleanup_crit_edge, %t4_alloc_vi.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i.i.i, %t4_alloc_vi.exit.cleanup_crit_edge ], [ 0, %if.then5 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_cimq_cfg(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %base, ptr nocapture noundef writeonly %size, ptr nocapture noundef writeonly %thres) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %i.053 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %thres.addr.052 = phi ptr [ %thres, %entry ], [ %incdec.ptr11, %for.body.for.body_crit_edge ]
  %size.addr.051 = phi ptr [ %size, %entry ], [ %incdec.ptr6, %for.body.for.body_crit_edge ]
  %base.addr.050 = phi ptr [ %base, %entry ], [ %incdec.ptr, %for.body.for.body_crit_edge ]
  %or = or i32 %i.053, 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %3 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %4 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %5, i32 31560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %3) #14, !srcloc !995
  %6 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adap, align 128
  %add.ptr.i47 = getelementptr i8, ptr %7, i32 31564
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i47) #14, !srcloc !992
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %10 = lshr i32 %9, 8
  %11 = trunc i32 %10 to i16
  %conv = and i16 %11, 16128
  %incdec.ptr = getelementptr i16, ptr %base.addr.050, i32 1
  %12 = ptrtoint ptr %base.addr.050 to i32
  call void @__asan_store2_noabort(i32 %12)
  store i16 %conv, ptr %base.addr.050, align 2
  %13 = lshr i32 %9, 16
  %14 = trunc i32 %13 to i16
  %conv5 = and i16 %14, 16128
  %incdec.ptr6 = getelementptr i16, ptr %size.addr.051, i32 1
  %15 = ptrtoint ptr %size.addr.051 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %conv5, ptr %size.addr.051, align 2
  %call1.tr = trunc i32 %9 to i16
  %16 = shl i16 %call1.tr, 3
  %conv10 = and i16 %16, 4088
  %incdec.ptr11 = getelementptr i16, ptr %thres.addr.052, i32 1
  %17 = ptrtoint ptr %thres.addr.052 to i32
  call void @__asan_store2_noabort(i32 %17)
  store i16 %conv10, ptr %thres.addr.052, align 2
  %inc = add nuw nsw i32 %i.053, 1
  %exitcond.not = icmp eq i32 %inc, 6
  br i1 %exitcond.not, label %for.body15.preheader, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.body15.preheader:                             ; preds = %for.body
  %cond = select i1 %cmp.i.not, i32 6, i32 8
  br label %for.body15

for.body15:                                       ; preds = %for.body15.for.body15_crit_edge, %for.body15.preheader
  %i.156 = phi i32 [ %inc30, %for.body15.for.body15_crit_edge ], [ 0, %for.body15.preheader ]
  %size.addr.155 = phi ptr [ %incdec.ptr28, %for.body15.for.body15_crit_edge ], [ %incdec.ptr6, %for.body15.preheader ]
  %base.addr.154 = phi ptr [ %incdec.ptr23, %for.body15.for.body15_crit_edge ], [ %incdec.ptr, %for.body15.preheader ]
  %or17 = or i32 %i.156, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %18 = tail call i32 @llvm.bswap.i32(i32 %or17) #14
  %19 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adap, align 128
  %add.ptr.i48 = getelementptr i8, ptr %20, i32 31560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i48, i32 %18) #14, !srcloc !995
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i49 = getelementptr i8, ptr %22, i32 31564
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i49) #14, !srcloc !992
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %25 = lshr i32 %24, 8
  %26 = trunc i32 %25 to i16
  %conv22 = and i16 %26, 16128
  %incdec.ptr23 = getelementptr i16, ptr %base.addr.154, i32 1
  %27 = ptrtoint ptr %base.addr.154 to i32
  call void @__asan_store2_noabort(i32 %27)
  store i16 %conv22, ptr %base.addr.154, align 2
  %28 = lshr i32 %24, 16
  %29 = trunc i32 %28 to i16
  %conv27 = and i16 %29, 16128
  %incdec.ptr28 = getelementptr i16, ptr %size.addr.155, i32 1
  %30 = ptrtoint ptr %size.addr.155 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %conv27, ptr %size.addr.155, align 2
  %inc30 = add nuw nsw i32 %i.156, 1
  %exitcond57.not = icmp eq i32 %inc30, %cond
  br i1 %exitcond57.not, label %for.end31, label %for.body15.for.body15_crit_edge

for.body15.for.body15_crit_edge:                  ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body15

for.end31:                                        ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_cim_ibq(ptr nocapture noundef readonly %adap, i32 noundef %qid, ptr nocapture noundef writeonly %data, i32 noundef %n) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 6, i32 %qid)
  %cmp = icmp ult i32 %qid, 6
  %and = and i32 %n, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %or.cond = and i1 %cmp, %tobool.not
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.umin.i32(i32 %n, i32 512)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp429.not = icmp eq i32 %0, 0
  br i1 %cmp429.not, label %if.end.for.end_crit_edge, label %for.body.preheader

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.preheader:                               ; preds = %if.end
  %mul = shl nuw nsw i32 %qid, 9
  br label %for.body

for.body:                                         ; preds = %if.end7.for.body_crit_edge, %for.body.preheader
  %addr.032 = phi i32 [ %inc9, %if.end7.for.body_crit_edge ], [ %mul, %for.body.preheader ]
  %i.031 = phi i32 [ %inc, %if.end7.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %data.addr.030 = phi ptr [ %incdec.ptr, %if.end7.for.body_crit_edge ], [ %data, %for.body.preheader ]
  %shl = shl i32 %addr.032, 16
  %or = or i32 %shl, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %1 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %2 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %3, i32 31584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %1) #14, !srcloc !995
  %4 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adap, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %5, i32 31584
  %6 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %7 = and i32 %6, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool29.i.not.i = icmp eq i32 %7, 0
  br i1 %tobool29.i.not.i, label %for.body.if.end7_crit_edge, label %for.body.if.end4.i.i_crit_edge

for.body.if.end4.i.i_crit_edge:                   ; preds = %for.body
  br label %if.end4.i.i

for.body.if.end7_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.end4.i.i:                                      ; preds = %if.end7.i.i.if.end4.i.i_crit_edge, %for.body.if.end4.i.i_crit_edge
  %attempts.addr.032.i.i = phi i32 [ %dec.i.i, %if.end7.i.i.if.end4.i.i_crit_edge ], [ 1000000, %for.body.if.end4.i.i_crit_edge ]
  %dec.i.i = add nsw i32 %attempts.addr.032.i.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec.i.i)
  %cmp5.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp5.i.i, label %if.end4.i.i.cleanup_crit_edge, label %if.end7.i.i

if.end4.i.i.cleanup_crit_edge:                    ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end7.i.i:                                      ; preds = %if.end4.i.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 214748) #14
  %8 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %9, i32 31584
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %11 = and i32 %10, 33554432
  %tobool.i.not.i = icmp eq i32 %11, 0
  br i1 %tobool.i.not.i, label %if.end7.i.i.if.end7_crit_edge, label %if.end7.i.i.if.end4.i.i_crit_edge

if.end7.i.i.if.end4.i.i_crit_edge:                ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end4.i.i

if.end7.i.i.if.end7_crit_edge:                    ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.end7:                                          ; preds = %if.end7.i.i.if.end7_crit_edge, %for.body.if.end7_crit_edge
  %12 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adap, align 128
  %add.ptr.i24 = getelementptr i8, ptr %13, i32 31592
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i24) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %data.addr.030, i32 1
  %16 = ptrtoint ptr %data.addr.030 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %data.addr.030, align 4
  %inc = add nuw nsw i32 %i.031, 1
  %inc9 = add i32 %addr.032, 1
  %exitcond.not = icmp eq i32 %inc, %0
  br i1 %exitcond.not, label %if.end7.for.end_crit_edge, label %if.end7.for.body_crit_edge

if.end7.for.body_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end7.for.end_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end7.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %17 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %adap, align 128
  %add.ptr.i25 = getelementptr i8, ptr %18, i32 31584
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i25, i32 0) #14, !srcloc !995
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end4.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %0, %for.end ], [ -22, %entry.cleanup_crit_edge ], [ -11, %if.end4.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_read_cim_obq(ptr nocapture noundef readonly %adap, i32 noundef %qid, ptr nocapture noundef writeonly %data, i32 noundef %n) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  %0 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %chip, align 8
  %2 = and i32 %1, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 64, i32 %2)
  %cmp.i.not = icmp eq i32 %2, 64
  %sub = select i1 %cmp.i.not, i32 5, i32 7
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %qid)
  %cmp = icmp uge i32 %sub, %qid
  %and = and i32 %n, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  %or.cond = and i1 %tobool1.not, %cmp
  br i1 %or.cond, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %or = or i32 %qid, 16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %3 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %4 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %5, i32 31560
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %3) #14, !srcloc !995
  %6 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adap, align 128
  %add.ptr.i39 = getelementptr i8, ptr %7, i32 31564
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i39) #14, !srcloc !992
  %9 = tail call i32 @llvm.bswap.i32(i32 %8) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %10 = lshr i32 %9, 18
  %mul6 = and i32 %10, 4032
  %11 = tail call i32 @llvm.umin.i32(i32 %mul6, i32 %n)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp1046.not = icmp eq i32 %11, 0
  br i1 %cmp1046.not, label %if.end.for.end_crit_edge, label %for.body.preheader

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.preheader:                               ; preds = %if.end
  %12 = lshr i32 %9, 10
  %mul = and i32 %12, 4032
  br label %for.body

for.body:                                         ; preds = %if.end16.for.body_crit_edge, %for.body.preheader
  %addr.049 = phi i32 [ %inc18, %if.end16.for.body_crit_edge ], [ %mul, %for.body.preheader ]
  %i.048 = phi i32 [ %inc, %if.end16.for.body_crit_edge ], [ 0, %for.body.preheader ]
  %data.addr.047 = phi ptr [ %incdec.ptr, %if.end16.for.body_crit_edge ], [ %data, %for.body.preheader ]
  %shl11 = shl i32 %addr.049, 16
  %or12 = or i32 %shl11, 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %13 = tail call i32 @llvm.bswap.i32(i32 %or12) #14
  %14 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %adap, align 128
  %add.ptr.i40 = getelementptr i8, ptr %15, i32 31588
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i40, i32 %13) #14, !srcloc !995
  %16 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %adap, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %17, i32 31588
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %19 = and i32 %18, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool29.i.not.i = icmp eq i32 %19, 0
  br i1 %tobool29.i.not.i, label %for.body.if.end16_crit_edge, label %if.end4.i.i.preheader

for.body.if.end16_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.end4.i.i.preheader:                            ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 214748) #14
  %20 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %21, i32 31588
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %23 = and i32 %22, 33554432
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not.i = icmp eq i32 %23, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.if.end16_crit_edge, label %if.end4.i.i.preheader.cleanup_crit_edge

if.end4.i.i.preheader.cleanup_crit_edge:          ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i.i.preheader.if.end16_crit_edge:         ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end16

if.end16:                                         ; preds = %if.end4.i.i.preheader.if.end16_crit_edge, %for.body.if.end16_crit_edge
  %24 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %adap, align 128
  %add.ptr.i41 = getelementptr i8, ptr %25, i32 31596
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i41) #14, !srcloc !992
  %27 = tail call i32 @llvm.bswap.i32(i32 %26) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %data.addr.047, i32 1
  %28 = ptrtoint ptr %data.addr.047 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %data.addr.047, align 4
  %inc = add nuw nsw i32 %i.048, 1
  %inc18 = add nuw nsw i32 %addr.049, 1
  %exitcond.not = icmp eq i32 %inc, %11
  br i1 %exitcond.not, label %if.end16.for.end_crit_edge, label %if.end16.for.body_crit_edge

if.end16.for.body_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

if.end16.for.end_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %if.end16.for.end_crit_edge, %if.end.for.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %29 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %adap, align 128
  %add.ptr.i42 = getelementptr i8, ptr %30, i32 31588
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i42, i32 0) #14, !srcloc !995
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end4.i.i.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %11, %for.end ], [ -22, %entry.cleanup_crit_edge ], [ -11, %if.end4.i.i.preheader.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_cim_read(ptr nocapture noundef readonly %adap, i32 noundef %addr, i32 noundef %n, ptr nocapture noundef writeonly %valp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 31568
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %3 = and i32 %2, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %land.rhs.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

land.rhs.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n)
  %tobool2.not29 = icmp eq i32 %n, 0
  br i1 %tobool2.not29, label %land.rhs.preheader.cleanup_crit_edge, label %land.rhs.preheader.for.body_crit_edge

land.rhs.preheader.for.body_crit_edge:            ; preds = %land.rhs.preheader
  br label %for.body

land.rhs.preheader.cleanup_crit_edge:             ; preds = %land.rhs.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %land.rhs.preheader.for.body_crit_edge
  %dec32.in = phi i32 [ %dec32, %for.inc.for.body_crit_edge ], [ %n, %land.rhs.preheader.for.body_crit_edge ]
  %addr.addr.02031 = phi i32 [ %add, %for.inc.for.body_crit_edge ], [ %addr, %land.rhs.preheader.for.body_crit_edge ]
  %valp.addr.02230 = phi ptr [ %incdec.ptr, %for.inc.for.body_crit_edge ], [ %valp, %land.rhs.preheader.for.body_crit_edge ]
  %dec32 = add i32 %dec32.in, -1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %4 = tail call i32 @llvm.bswap.i32(i32 %addr.addr.02031) #14
  %5 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %adap, align 128
  %add.ptr.i14 = getelementptr i8, ptr %6, i32 31568
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i14, i32 %4) #14, !srcloc !995
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %8, i32 31568
  %9 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %10 = and i32 %9, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool29.i.not.i = icmp eq i32 %10, 0
  br i1 %tobool29.i.not.i, label %for.body.for.inc_crit_edge, label %if.end4.i.i.preheader

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4.i.i.preheader:                            ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 429496) #14
  %11 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %12, i32 31568
  %13 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %14 = and i32 %13, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.i.not.i = icmp eq i32 %14, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.for.inc_crit_edge, label %if.end4.i.i.1

if.end4.i.i.preheader.for.inc_crit_edge:          ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4.i.i.1:                                    ; preds = %if.end4.i.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.1 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.1(i32 noundef 429496) #14
  %15 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.1 = getelementptr i8, ptr %16, i32 31568
  %17 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %18 = and i32 %17, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.i.not.i.1 = icmp eq i32 %18, 0
  br i1 %tobool.i.not.i.1, label %if.end4.i.i.1.for.inc_crit_edge, label %if.end4.i.i.2

if.end4.i.i.1.for.inc_crit_edge:                  ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4.i.i.2:                                    ; preds = %if.end4.i.i.1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.2 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.2(i32 noundef 429496) #14
  %19 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.2 = getelementptr i8, ptr %20, i32 31568
  %21 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.2) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %22 = and i32 %21, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.i.not.i.2 = icmp eq i32 %22, 0
  br i1 %tobool.i.not.i.2, label %if.end4.i.i.2.for.inc_crit_edge, label %if.end4.i.i.3

if.end4.i.i.2.for.inc_crit_edge:                  ; preds = %if.end4.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end4.i.i.3:                                    ; preds = %if.end4.i.i.2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.3 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.3(i32 noundef 429496) #14
  %23 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.3 = getelementptr i8, ptr %24, i32 31568
  %25 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.3) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %26 = and i32 %25, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i.not.i.3 = icmp eq i32 %26, 0
  br i1 %tobool.i.not.i.3, label %if.end4.i.i.3.for.inc_crit_edge, label %if.end4.i.i.3.cleanup_crit_edge

if.end4.i.i.3.cleanup_crit_edge:                  ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i.i.3.for.inc_crit_edge:                  ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

for.inc:                                          ; preds = %if.end4.i.i.3.for.inc_crit_edge, %if.end4.i.i.2.for.inc_crit_edge, %if.end4.i.i.1.for.inc_crit_edge, %if.end4.i.i.preheader.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %27 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adap, align 128
  %add.ptr.i15 = getelementptr i8, ptr %28, i32 31572
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i15) #14, !srcloc !992
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %valp.addr.02230, i32 1
  %31 = ptrtoint ptr %valp.addr.02230 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %valp.addr.02230, align 4
  %add = add i32 %addr.addr.02031, 4
  %tobool2.not = icmp eq i32 %dec32, 0
  br i1 %tobool2.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end4.i.i.3.cleanup_crit_edge, %land.rhs.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %entry.cleanup_crit_edge ], [ 0, %land.rhs.preheader.cleanup_crit_edge ], [ -11, %if.end4.i.i.3.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_cim_write(ptr nocapture noundef readonly %adap, i32 noundef %addr, i32 noundef %n, ptr nocapture noundef readonly %valp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 31568
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %3 = and i32 %2, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %for.cond.preheader, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n)
  %tobool2.not11 = icmp eq i32 %n, 0
  br i1 %tobool2.not11, label %for.cond.preheader.cleanup_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

for.body:                                         ; preds = %t4_wait_op_done.exit.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %valp.addr.014 = phi ptr [ %incdec.ptr, %t4_wait_op_done.exit.for.body_crit_edge ], [ %valp, %for.cond.preheader.for.body_crit_edge ]
  %n.addr.013 = phi i32 [ %dec, %t4_wait_op_done.exit.for.body_crit_edge ], [ %n, %for.cond.preheader.for.body_crit_edge ]
  %addr.addr.012 = phi i32 [ %add, %t4_wait_op_done.exit.for.body_crit_edge ], [ %addr, %for.cond.preheader.for.body_crit_edge ]
  %dec = add i32 %n.addr.013, -1
  %incdec.ptr = getelementptr i32, ptr %valp.addr.014, i32 1
  %4 = ptrtoint ptr %valp.addr.014 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %valp.addr.014, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i9 = getelementptr i8, ptr %8, i32 31572
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i9, i32 %6) #14, !srcloc !995
  %or = or i32 %addr.addr.012, 65536
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %9 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %10 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %adap, align 128
  %add.ptr.i10 = getelementptr i8, ptr %11, i32 31568
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i10, i32 %9) #14, !srcloc !995
  %12 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adap, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %13, i32 31568
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %15 = and i32 %14, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool29.i.not.i = icmp eq i32 %15, 0
  br i1 %tobool29.i.not.i, label %for.body.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.preheader

for.body.t4_wait_op_done.exit_crit_edge:          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.preheader:                            ; preds = %for.body
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 429496) #14
  %16 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %17, i32 31568
  %18 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %19 = and i32 %18, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.i.not.i = icmp eq i32 %19, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.1

if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge: ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.1:                                    ; preds = %if.end4.i.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.1 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.1(i32 noundef 429496) #14
  %20 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.1 = getelementptr i8, ptr %21, i32 31568
  %22 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %23 = and i32 %22, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not.i.1 = icmp eq i32 %23, 0
  br i1 %tobool.i.not.i.1, label %if.end4.i.i.1.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.2

if.end4.i.i.1.t4_wait_op_done.exit_crit_edge:     ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.2:                                    ; preds = %if.end4.i.i.1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.2 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.2(i32 noundef 429496) #14
  %24 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.2 = getelementptr i8, ptr %25, i32 31568
  %26 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.2) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %27 = and i32 %26, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.i.not.i.2 = icmp eq i32 %27, 0
  br i1 %tobool.i.not.i.2, label %if.end4.i.i.2.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.3

if.end4.i.i.2.t4_wait_op_done.exit_crit_edge:     ; preds = %if.end4.i.i.2
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.3:                                    ; preds = %if.end4.i.i.2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.3 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.3(i32 noundef 429496) #14
  %28 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.3 = getelementptr i8, ptr %29, i32 31568
  %30 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.3) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %31 = and i32 %30, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.i.not.i.3 = icmp eq i32 %31, 0
  br i1 %tobool.i.not.i.3, label %if.end4.i.i.3.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.3.cleanup_crit_edge

if.end4.i.i.3.cleanup_crit_edge:                  ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4.i.i.3.t4_wait_op_done.exit_crit_edge:     ; preds = %if.end4.i.i.3
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

t4_wait_op_done.exit:                             ; preds = %if.end4.i.i.3.t4_wait_op_done.exit_crit_edge, %if.end4.i.i.2.t4_wait_op_done.exit_crit_edge, %if.end4.i.i.1.t4_wait_op_done.exit_crit_edge, %if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge, %for.body.t4_wait_op_done.exit_crit_edge
  %add = add i32 %addr.addr.012, 4
  %tobool2.not = icmp eq i32 %dec, 0
  br i1 %tobool2.not, label %t4_wait_op_done.exit.cleanup_crit_edge, label %t4_wait_op_done.exit.for.body_crit_edge

t4_wait_op_done.exit.for.body_crit_edge:          ; preds = %t4_wait_op_done.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

t4_wait_op_done.exit.cleanup_crit_edge:           ; preds = %t4_wait_op_done.exit
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

cleanup:                                          ; preds = %t4_wait_op_done.exit.cleanup_crit_edge, %if.end4.i.i.3.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -16, %entry.cleanup_crit_edge ], [ 0, %for.cond.preheader.cleanup_crit_edge ], [ -11, %if.end4.i.i.3.cleanup_crit_edge ], [ 0, %t4_wait_op_done.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_cim_read_la(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %la_buf, ptr noundef writeonly %wrptr) local_unnamed_addr #0 align 64 {
entry:
  %val.addr.i82 = alloca i32, align 4
  %val.addr.i80 = alloca i32, align 4
  %val.addr.i = alloca i32, align 4
  %cfg = alloca i32, align 4
  %val = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cfg) #14
  %0 = ptrtoint ptr %cfg to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %cfg, align 4, !annotation !996
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val) #14
  %1 = ptrtoint ptr %val to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %val, align 4, !annotation !996
  %call = call i32 @t4_cim_read(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %cfg)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %cfg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cfg, align 4
  %and = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %if.end.if.end7_crit_edge, label %if.then2

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.then2:                                         ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.addr.i)
  %4 = ptrtoint ptr %val.addr.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %val.addr.i, align 4
  %call.i = call i32 @t4_cim_write(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %val.addr.i) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.addr.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool4.not = icmp eq i32 %call.i, 0
  br i1 %tobool4.not, label %if.then2.if.end7_crit_edge, label %if.then2.cleanup_crit_edge

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then2.if.end7_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end7

if.end7:                                          ; preds = %if.then2.if.end7_crit_edge, %if.end.if.end7_crit_edge
  %call8 = call i32 @t4_cim_read(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.restart_crit_edge

if.end7.restart_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end11:                                         ; preds = %if.end7
  %5 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %val, align 4
  %shr = lshr i32 %6, 16
  %and12 = and i32 %shr, 4095
  %tobool13.not = icmp eq ptr %wrptr, null
  br i1 %tobool13.not, label %if.end11.if.end15_crit_edge, label %if.then14

if.end11.if.end15_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end15

if.then14:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #16
  %7 = ptrtoint ptr %wrptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %and12, ptr %wrptr, align 4
  br label %if.end15

if.end15:                                         ; preds = %if.then14, %if.end11.if.end15_crit_edge
  %cim_la_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 7
  %8 = ptrtoint ptr %cim_la_size to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cim_la_size, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp84.not = icmp eq i32 %9, 0
  br i1 %cmp84.not, label %if.end15.restart_crit_edge, label %for.body.lr.ph

if.end15.restart_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

for.body.lr.ph:                                   ; preds = %if.end15
  %chip = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 22
  br label %for.body

for.body:                                         ; preds = %if.end31.for.body_crit_edge, %for.body.lr.ph
  %idx.086 = phi i32 [ %and12, %for.body.lr.ph ], [ %and40, %if.end31.for.body_crit_edge ]
  %i.085 = phi i32 [ 0, %for.body.lr.ph ], [ %inc41, %if.end31.for.body_crit_edge ]
  %shl = shl nuw nsw i32 %idx.086, 2
  %or = or i32 %shl, 2
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.addr.i80)
  %10 = ptrtoint ptr %val.addr.i80 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %or, ptr %val.addr.i80, align 4
  %call.i81 = call i32 @t4_cim_write(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %val.addr.i80) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.addr.i80)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i81)
  %tobool17.not = icmp eq i32 %call.i81, 0
  br i1 %tobool17.not, label %if.end19, label %for.body.restart_crit_edge

for.body.restart_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end19:                                         ; preds = %for.body
  %call20 = call i32 @t4_cim_read(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %val)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.end23, label %if.end19.restart_crit_edge

if.end19.restart_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end23:                                         ; preds = %if.end19
  %11 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %val, align 4
  %and24 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end23.restart_crit_edge

if.end23.restart_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end27:                                         ; preds = %if.end23
  %arrayidx = getelementptr i32, ptr %la_buf, i32 %i.085
  %call28 = tail call i32 @t4_cim_read(ptr noundef %adap, i32 noundef 324, i32 noundef 1, ptr noundef %arrayidx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %if.end27.restart_crit_edge

if.end27.restart_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end31:                                         ; preds = %if.end27
  %13 = ptrtoint ptr %chip to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %chip, align 8
  %15 = and i32 %14, 240
  call void @__sanitizer_cov_trace_const_cmp4(i32 96, i32 %15)
  %cmp.i = icmp eq i32 %15, 96
  %and35 = and i32 %idx.086, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %and35)
  %cmp36 = icmp ugt i32 %and35, 8
  %or.cond = select i1 %cmp.i, i1 %cmp36, i1 false
  %and38 = and i32 %idx.086, 4080
  %add = add nuw nsw i32 %and38, 16
  %inc = add nuw nsw i32 %idx.086, 1
  %idx.1 = select i1 %or.cond, i32 %add, i32 %inc
  %and40 = and i32 %idx.1, 4095
  %inc41 = add nuw i32 %i.085, 1
  %16 = ptrtoint ptr %cim_la_size to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cim_la_size, align 8
  %cmp = icmp ult i32 %inc41, %17
  br i1 %cmp, label %if.end31.for.body_crit_edge, label %if.end31.restart_crit_edge

if.end31.restart_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %restart

if.end31.for.body_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

restart:                                          ; preds = %if.end31.restart_crit_edge, %if.end27.restart_crit_edge, %if.end23.restart_crit_edge, %if.end19.restart_crit_edge, %for.body.restart_crit_edge, %if.end15.restart_crit_edge, %if.end7.restart_crit_edge
  %ret.1 = phi i32 [ %call8, %if.end7.restart_crit_edge ], [ 0, %if.end15.restart_crit_edge ], [ %call28, %if.end27.restart_crit_edge ], [ %call20, %if.end19.restart_crit_edge ], [ %call.i81, %for.body.restart_crit_edge ], [ 0, %if.end31.restart_crit_edge ], [ -110, %if.end23.restart_crit_edge ]
  br i1 %tobool1.not, label %restart.cleanup_crit_edge, label %if.then44

restart.cleanup_crit_edge:                        ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then44:                                        ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #16
  %and45 = and i32 %3, -3
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %val.addr.i82)
  %18 = ptrtoint ptr %val.addr.i82 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %and45, ptr %val.addr.i82, align 4
  %call.i83 = call i32 @t4_cim_write(ptr noundef %adap, i32 noundef 320, i32 noundef 1, ptr noundef nonnull %val.addr.i82) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val.addr.i82)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.1)
  %tobool47.not = icmp eq i32 %ret.1, 0
  %spec.select = select i1 %tobool47.not, i32 %call.i83, i32 %ret.1
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %restart.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %call.i, %if.then2.cleanup_crit_edge ], [ %spec.select, %if.then44 ], [ %ret.1, %restart.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %val) #14
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cfg) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_tp_read_la(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %la_buf, ptr noundef writeonly %wrptr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 32468
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %and = and i32 %3, 65535
  %and1 = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool.not = icmp eq i32 %and1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %la_mask = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 1
  %4 = ptrtoint ptr %la_mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %la_mask, align 4
  %xor = xor i32 %and, 4096
  %or = or i32 %5, %xor
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %6 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %7 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %adap, align 128
  %add.ptr.i63 = getelementptr i8, ptr %8, i32 32468
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i63, i32 %6) #14, !srcloc !995
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %9 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adap, align 128
  %add.ptr.i64 = getelementptr i8, ptr %10, i32 32468
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i64) #14, !srcloc !992
  %12 = tail call i32 @llvm.bswap.i32(i32 %11) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %shr = lshr i32 %12, 16
  %13 = and i32 %12, 8421376
  call void @__sanitizer_cov_trace_const_cmp4(i32 32768, i32 %13)
  %14 = icmp eq i32 %13, 32768
  %add = zext i1 %14 to i32
  %idx.0.in = add nuw nsw i32 %shr, %add
  %idx.0 = and i32 %idx.0.in, 127
  %tobool12.not = icmp eq ptr %wrptr, null
  br i1 %tobool12.not, label %if.end.if.end14_crit_edge, label %if.then13

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then13:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %wrptr to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %idx.0, ptr %wrptr, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end.if.end14_crit_edge
  %and16 = and i32 %12, 65408
  %la_mask19 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 1
  %16 = ptrtoint ptr %la_mask19 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %la_mask19, align 4
  %or20 = or i32 %17, %and16
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end14
  %idx.169 = phi i32 [ %idx.0, %if.end14 ], [ %and25, %for.body.for.body_crit_edge ]
  %i.068 = phi i32 [ 0, %if.end14 ], [ %inc, %for.body.for.body_crit_edge ]
  %or22 = or i32 %or20, %idx.169
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %18 = tail call i32 @llvm.bswap.i32(i32 %or22) #14
  %19 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %adap, align 128
  %add.ptr.i65 = getelementptr i8, ptr %20, i32 32468
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i65, i32 %18) #14, !srcloc !995
  %21 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %adap, align 128
  %add.ptr.i66 = getelementptr i8, ptr %22, i32 32472
  %23 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i66) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !999
  %add.ptr.i.i = getelementptr i8, ptr %22, i32 32476
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !1000
  %25 = zext i32 %24 to i64
  %26 = zext i32 %23 to i64
  %27 = shl nuw i64 %26, 32
  %28 = or i64 %27, %25
  %29 = tail call i64 @llvm.bswap.i64(i64 %28) #14
  %arrayidx = getelementptr i64, ptr %la_buf, i32 %i.068
  %30 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %arrayidx, align 8
  %add24 = add nuw nsw i32 %idx.169, 1
  %and25 = and i32 %add24, 127
  %inc = add nuw nsw i32 %i.068, 1
  %exitcond.not = icmp eq i32 %inc, 128
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  br i1 %14, label %if.then27, label %for.end.if.end29_crit_edge

for.end.if.end29_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end29

if.then27:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  %arrayidx28 = getelementptr i64, ptr %la_buf, i32 127
  %31 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 -1, ptr %arrayidx28, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %for.end.if.end29_crit_edge
  br i1 %tobool.not, label %if.end29.if.end37_crit_edge, label %if.then32

if.end29.if.end37_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end37

if.then32:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #16
  %32 = ptrtoint ptr %la_mask19 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %la_mask19, align 4
  %or36 = or i32 %33, %and
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %34 = tail call i32 @llvm.bswap.i32(i32 %or36) #14
  %35 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %adap, align 128
  %add.ptr.i67 = getelementptr i8, ptr %36, i32 32468
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i67, i32 %34) #14, !srcloc !995
  br label %if.end37

if.end37:                                         ; preds = %if.then32, %if.end29.if.end37_crit_edge
  ret void
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @t4_idma_monitor_init(ptr nocapture noundef readonly %adapter, ptr nocapture noundef writeonly %idma) local_unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %vpd.i = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 15, i32 2
  %0 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vpd.i, align 8
  %div.i = udiv i32 %1, 1000
  %mul = mul i32 %div.i, 1000000
  %2 = ptrtoint ptr %idma to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %mul, ptr %idma, align 4
  %idma_stalled = getelementptr inbounds %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 1
  %3 = ptrtoint ptr %idma_stalled to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %idma_stalled, align 4
  %arrayidx2 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 1, i32 1
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %arrayidx2, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_idma_monitor(ptr nocapture noundef readonly %adapter, ptr nocapture noundef %idma, i32 noundef %hz, i32 noundef %ticks) local_unnamed_addr #0 align 64 {
entry:
  %idma_same_state_cnt = alloca [2 x i32], align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %idma_same_state_cnt) #14
  %0 = getelementptr inbounds [2 x i32], ptr %idma_same_state_cnt, i32 0, i32 1
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %1 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 4300
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 218103808) #14, !srcloc !995
  %3 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adapter, align 128
  %add.ptr.i123 = getelementptr i8, ptr %4, i32 4304
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i123) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %7 = ptrtoint ptr %idma_same_state_cnt to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %idma_same_state_cnt, align 4
  %8 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %adapter, align 128
  %add.ptr.i124 = getelementptr i8, ptr %9, i32 4308
  %10 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i124) #14, !srcloc !992
  %11 = tail call i32 @llvm.bswap.i32(i32 %10) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %0, align 4
  %mul37 = mul i32 %hz, 300
  %pdev_dev52 = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry
  %cmp = phi i1 [ true, %entry ], [ false, %cleanup.for.body_crit_edge ]
  %i.0129 = phi i32 [ 0, %entry ], [ 1, %cleanup.for.body_crit_edge ]
  %arrayidx3 = getelementptr [2 x i32], ptr %idma_same_state_cnt, i32 0, i32 %i.0129
  %13 = ptrtoint ptr %arrayidx3 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx3, align 4
  %15 = ptrtoint ptr %idma to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %idma, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %14, i32 %16)
  %cmp4 = icmp ult i32 %14, %16
  %arrayidx5 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 1, i32 %i.0129
  %17 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx5, align 4
  br i1 %cmp4, label %if.then, label %if.end13

if.then:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %hz)
  %cmp6.not = icmp ult i32 %18, %hz
  br i1 %cmp6.not, label %if.then.if.end_crit_edge, label %do.end

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %19 = ptrtoint ptr %pdev_dev52 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pdev_dev52, align 16
  %arrayidx8 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 3, i32 %i.0129
  %21 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx8, align 4
  %div = udiv i32 %18, %hz
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %20, ptr noundef nonnull @.str.192, i32 noundef %i.0129, i32 noundef %22, i32 noundef %div) #17
  br label %if.end

if.end:                                           ; preds = %do.end, %if.then.if.end_crit_edge
  %23 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %arrayidx5, align 4
  br label %cleanup

if.end13:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp16 = icmp eq i32 %18, 0
  br i1 %cmp16, label %if.then17, label %if.else

if.then17:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  %24 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %hz, ptr %arrayidx5, align 4
  %arrayidx20 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 4, i32 %i.0129
  %25 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %arrayidx20, align 4
  br label %if.end25

if.else:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  %add = add i32 %18, %ticks
  %26 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %add, ptr %arrayidx5, align 4
  %arrayidx24 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 4, i32 %i.0129
  %27 = ptrtoint ptr %arrayidx24 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx24, align 4
  %sub = sub i32 %28, %ticks
  store i32 %sub, ptr %arrayidx24, align 4
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %29 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %arrayidx5, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %hz)
  %cmp29 = icmp ult i32 %30, %hz
  br i1 %cmp29, label %if.end25.cleanup_crit_edge, label %if.end31

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end31:                                         ; preds = %if.end25
  %arrayidx33 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 4, i32 %i.0129
  %31 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp34.not = icmp eq i32 %32, 0
  br i1 %cmp34.not, label %if.end36, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end36:                                         ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #16
  %33 = ptrtoint ptr %arrayidx33 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %mul37, ptr %arrayidx33, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %34 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %adapter, align 128
  %add.ptr.i125 = getelementptr i8, ptr %35, i32 4300
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i125, i32 0) #14, !srcloc !995
  %36 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %adapter, align 128
  %add.ptr.i126 = getelementptr i8, ptr %37, i32 4308
  %38 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i126) #14, !srcloc !992
  %39 = tail call i32 @llvm.bswap.i32(i32 %38) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %mul41 = mul nuw nsw i32 %i.0129, 9
  %shr = lshr i32 %39, %mul41
  %and = and i32 %shr, 63
  %arrayidx42 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 2, i32 %i.0129
  %40 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %and, ptr %arrayidx42, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %41 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %adapter, align 128
  %add.ptr.i127 = getelementptr i8, ptr %42, i32 4300
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i127, i32 184549376) #14, !srcloc !995
  %43 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %adapter, align 128
  %add.ptr.i128 = getelementptr i8, ptr %44, i32 4308
  %45 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i128) #14, !srcloc !992
  %46 = tail call i32 @llvm.bswap.i32(i32 %45) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %mul44 = shl nuw nsw i32 %i.0129, 4
  %shr45 = lshr i32 %46, %mul44
  %and46 = and i32 %shr45, 65535
  %arrayidx48 = getelementptr %struct.sge_idma_monitor_state, ptr %idma, i32 0, i32 3, i32 %i.0129
  %47 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %and46, ptr %arrayidx48, align 4
  %48 = ptrtoint ptr %pdev_dev52 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pdev_dev52, align 16
  %50 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %arrayidx42, align 4
  %52 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %arrayidx5, align 4
  %div59 = udiv i32 %53, %hz
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %49, ptr noundef nonnull @.str.195, i32 noundef %i.0129, i32 noundef %and46, i32 noundef %51, i32 noundef %div59, i32 noundef %39, i32 noundef %46) #17
  %54 = ptrtoint ptr %arrayidx42 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx42, align 4
  tail call void @t4_sge_decode_idma_state(ptr noundef %adapter, i32 noundef %55)
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %if.end31.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end
  br i1 %cmp, label %cleanup.for.body_crit_edge, label %for.end

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %idma_same_state_cnt) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_vf_mac_acl(ptr noundef %adapter, i32 noundef %vf, i32 noundef %naddr, ptr nocapture noundef readonly %addr) local_unnamed_addr #0 align 64 {
entry:
  %cmd = alloca %struct.fw_acl_mac_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %cmd) #14
  %0 = getelementptr inbounds i8, ptr %cmd, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 40)
  %pf = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  %shl = shl i32 %3, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 413138944
  %4 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or2, ptr %cmd, align 4
  %en_to_len16 = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 1
  %5 = ptrtoint ptr %en_to_len16 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 3, ptr %en_to_len16, align 4
  %conv = trunc i32 %naddr to i8
  %nmac = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 2
  %6 = ptrtoint ptr %nmac to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv, ptr %nmac, align 4
  %7 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.516)
  switch i32 %3, label %entry.sw.epilog_crit_edge [
    i32 3, label %sw.bb
    i32 2, label %sw.bb4
    i32 1, label %sw.bb6
    i32 0, label %sw.bb8
  ]

entry.sw.epilog_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %sw.epilog

sw.bb:                                            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %macaddr3 = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 11
  br label %sw.epilog.sink.split

sw.bb4:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %macaddr2 = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 9
  br label %sw.epilog.sink.split

sw.bb6:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %macaddr1 = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 7
  br label %sw.epilog.sink.split

sw.bb8:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %macaddr0 = getelementptr inbounds %struct.fw_acl_mac_cmd, ptr %cmd, i32 0, i32 5
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb
  %macaddr0.sink = phi ptr [ %macaddr0, %sw.bb8 ], [ %macaddr1, %sw.bb6 ], [ %macaddr2, %sw.bb4 ], [ %macaddr3, %sw.bb ]
  %8 = call ptr @memcpy(ptr %macaddr0.sink, ptr %addr, i32 6)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %entry.sw.epilog_crit_edge
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %9 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mbox, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %10, ptr noundef nonnull %cmd, i32 noundef 48, ptr noundef nonnull %cmd, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %cmd) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_read_pace_tbl(ptr nocapture noundef readonly %adap, ptr nocapture noundef writeonly %pace_vals) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %dack_re.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 1, i32 3
  %vpd.i.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 2
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry
  %i.08 = phi i32 [ 0, %entry ], [ %inc, %for.body.for.body_crit_edge ]
  %add = add nuw nsw i32 %i.08, -65536
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %add) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 32216
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i7 = getelementptr i8, ptr %4, i32 32216
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i7) #14, !srcloc !992
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %7 = ptrtoint ptr %dack_re.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %dack_re.i, align 4
  %shl.i = shl i32 %6, %8
  %9 = ptrtoint ptr %vpd.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %vpd.i.i, align 8
  %div.i.i = udiv i32 %10, 1000
  %div.i = udiv i32 %shl.i, %div.i.i
  %arrayidx = getelementptr i32, ptr %pace_vals, i32 %i.08
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %div.i, ptr %arrayidx, align 4
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond.not = icmp eq i32 %inc, 8
  br i1 %exitcond.not, label %for.end, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @t4_get_tx_sched(ptr noundef %adap, i32 noundef %sched, ptr noundef writeonly %kbps, ptr noundef writeonly %ipg, i1 noundef zeroext %sleep_ok) local_unnamed_addr #0 align 64 {
entry:
  %v = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %v) #14
  %0 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %v, align 4, !annotation !996
  %tobool.not = icmp eq ptr %kbps, null
  br i1 %tobool.not, label %entry.if.end13_crit_edge, label %if.then

entry.if.end13_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13

if.then:                                          ; preds = %entry
  %div41 = lshr i32 %sched, 1
  %sub = sub nsw i32 8, %div41
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32280, i32 noundef 32284, ptr noundef nonnull %v, i32 noundef 1, i32 noundef %sub, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %and = and i32 %sched, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.then.if.end_crit_edge, label %if.then3

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #16
  %1 = ptrtoint ptr %v to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %v, align 4
  %shr = lshr i32 %2, 16
  store i32 %shr, ptr %v, align 4
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then.if.end_crit_edge
  %3 = ptrtoint ptr %v to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %v, align 4
  %and6 = and i32 %4, 255
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  br i1 %tobool7.not, label %if.end.if.end13.sink.split_crit_edge, label %if.else

if.end.if.end13.sink.split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end13.sink.split

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %shr4 = lshr i32 %4, 8
  %and5 = and i32 %shr4, 255
  %vpd = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 2
  %5 = ptrtoint ptr %vpd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %vpd, align 8
  %mul = mul i32 %6, 1000
  %div9 = udiv i32 %mul, %and6
  %7 = ptrtoint ptr %v to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %div9, ptr %v, align 4
  %mul10 = mul i32 %div9, %and5
  %div11 = udiv i32 %mul10, 125
  br label %if.end13.sink.split

if.end13.sink.split:                              ; preds = %if.else, %if.end.if.end13.sink.split_crit_edge
  %.sink = phi i32 [ %div11, %if.else ], [ 0, %if.end.if.end13.sink.split_crit_edge ]
  %8 = ptrtoint ptr %kbps to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %.sink, ptr %kbps, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.end13.sink.split, %entry.if.end13_crit_edge
  %tobool14.not = icmp eq ptr %ipg, null
  br i1 %tobool14.not, label %if.end13.if.end27_crit_edge, label %if.then15

if.end13.if.end27_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end27

if.then15:                                        ; preds = %if.end13
  %div1640 = lshr i32 %sched, 1
  %sub17 = sub nsw i32 3, %div1640
  call fastcc void @t4_tp_indirect_rw(ptr noundef %adap, i32 noundef 32280, i32 noundef 32284, ptr noundef nonnull %v, i32 noundef 1, i32 noundef %sub17, i32 noundef 1, i1 noundef zeroext %sleep_ok) #14
  %and19 = and i32 %sched, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and19)
  %tobool20.not = icmp eq i32 %and19, 0
  br i1 %tobool20.not, label %if.then15.if.end23_crit_edge, label %if.then21

if.then15.if.end23_crit_edge:                     ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end23

if.then21:                                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #16
  %9 = ptrtoint ptr %v to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %v, align 4
  %shr22 = lshr i32 %10, 16
  store i32 %shr22, ptr %v, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.then21, %if.then15.if.end23_crit_edge
  %11 = ptrtoint ptr %v to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %v, align 4
  %and24 = and i32 %12, 65535
  %mul25 = mul nuw nsw i32 %and24, 10000
  %vpd.i = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 2
  %13 = ptrtoint ptr %vpd.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %vpd.i, align 8
  %div.i = udiv i32 %14, 1000
  %div26 = udiv i32 %mul25, %div.i
  %15 = ptrtoint ptr %ipg to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %div26, ptr %ipg, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.end23, %if.end13.if.end27_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %v) #14
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_sge_ctxt_rd(ptr noundef %adap, i32 noundef %mbox, i32 noundef %cid, i32 noundef %ctype, ptr nocapture noundef writeonly %data) local_unnamed_addr #0 align 64 {
entry:
  %c = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %c) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %ctype)
  %cmp = icmp eq i32 %ctype, 2
  %. = select i1 %cmp, i32 29360138, i32 29360139
  %0 = getelementptr inbounds i8, ptr %c, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 56)
  %2 = ptrtoint ptr %c to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %., ptr %c, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 1
  %3 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 4, ptr %cycles_to_len16, align 4
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2
  %4 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %cid, ptr %u, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %c, i32 noundef 64, ptr noundef nonnull %c, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp1 = icmp eq i32 %call.i.i, 0
  br i1 %cmp1, label %if.then2, label %entry.if.end14_crit_edge

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end14

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %ctxt_data0 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 1, i32 12
  %5 = ptrtoint ptr %ctxt_data0 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ctxt_data0, align 4
  %7 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %data, align 4
  %ctxt_data1 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 1, i32 8
  %8 = ptrtoint ptr %ctxt_data1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ctxt_data1, align 8
  %arrayidx5 = getelementptr i32, ptr %data, i32 1
  %10 = ptrtoint ptr %arrayidx5 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %arrayidx5, align 4
  %ctxt_data2 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 1, i32 4
  %11 = ptrtoint ptr %ctxt_data2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ctxt_data2, align 4
  %arrayidx7 = getelementptr i32, ptr %data, i32 2
  %13 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %arrayidx7, align 4
  %ctxt_data3 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 1
  %14 = ptrtoint ptr %ctxt_data3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ctxt_data3, align 8
  %arrayidx9 = getelementptr i32, ptr %data, i32 3
  %16 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %arrayidx9, align 4
  %ctxt_data4 = getelementptr inbounds %struct.fw_ldst_idctxt, ptr %u, i32 0, i32 5
  %17 = ptrtoint ptr %ctxt_data4 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %ctxt_data4, align 4
  %arrayidx11 = getelementptr i32, ptr %data, i32 4
  %19 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %arrayidx11, align 4
  %ctxt_data5 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %c, i32 0, i32 2, i32 0, i32 5
  %20 = ptrtoint ptr %ctxt_data5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ctxt_data5, align 8
  %arrayidx13 = getelementptr i32, ptr %data, i32 5
  %22 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx13, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.then2, %entry.if.end14_crit_edge
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %c) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_sge_ctxt_rd_bd(ptr nocapture noundef readonly %adap, i32 noundef %cid, i32 noundef %ctype, ptr nocapture noundef writeonly %data) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %shl1 = shl i32 %ctype, 24
  %or = or i32 %shl1, %cid
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %0 = tail call i32 @llvm.bswap.i32(i32 %or) #14
  %1 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %adap, align 128
  %add.ptr.i = getelementptr i8, ptr %2, i32 4604
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i, i32 %0) #14, !srcloc !995
  %3 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %adap, align 128
  %add.ptr.i27.i.i = getelementptr i8, ptr %4, i32 4604
  %5 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i27.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask)
  %tobool29.i.not.i = icmp eq i32 %.mask, 0
  br i1 %tobool29.i.not.i, label %entry.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.preheader

entry.t4_wait_op_done.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.preheader:                            ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i(i32 noundef 214748) #14
  %6 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i = getelementptr i8, ptr %7, i32 4604
  %8 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask12 = and i32 %8, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask12)
  %tobool.i.not.i = icmp eq i32 %.mask12, 0
  br i1 %tobool.i.not.i, label %if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.1

if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge: ; preds = %if.end4.i.i.preheader
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

if.end4.i.i.1:                                    ; preds = %if.end4.i.i.preheader
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1) to i32))
  %.val.i.i.1 = load ptr, ptr getelementptr inbounds (%struct.arm_delay_ops, ptr @arm_delay_ops, i32 0, i32 1), align 4
  tail call void %.val.i.i.1(i32 noundef 214748) #14
  %9 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %adap, align 128
  %add.ptr.i.i.i.1 = getelementptr i8, ptr %10, i32 4604
  %11 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i.i.i.1) #14, !srcloc !992
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %.mask12.1 = and i32 %11, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.mask12.1)
  %tobool.i.not.i.1 = icmp eq i32 %.mask12.1, 0
  br i1 %tobool.i.not.i.1, label %if.end4.i.i.1.t4_wait_op_done.exit_crit_edge, label %if.end4.i.i.1.if.end_crit_edge

if.end4.i.i.1.if.end_crit_edge:                   ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.end4.i.i.1.t4_wait_op_done.exit_crit_edge:     ; preds = %if.end4.i.i.1
  call void @__sanitizer_cov_trace_pc() #16
  br label %t4_wait_op_done.exit

t4_wait_op_done.exit:                             ; preds = %if.end4.i.i.1.t4_wait_op_done.exit_crit_edge, %if.end4.i.i.preheader.t4_wait_op_done.exit_crit_edge, %entry.t4_wait_op_done.exit_crit_edge
  %12 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %adap, align 128
  %add.ptr.i8 = getelementptr i8, ptr %13, i32 4608
  %14 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8) #14, !srcloc !992
  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr = getelementptr i32, ptr %data, i32 1
  %16 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %data, align 4
  %17 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %adap, align 128
  %add.ptr.i8.1 = getelementptr i8, ptr %18, i32 4612
  %19 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.1) #14, !srcloc !992
  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.1 = getelementptr i32, ptr %data, i32 2
  %21 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %incdec.ptr, align 4
  %22 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %adap, align 128
  %add.ptr.i8.2 = getelementptr i8, ptr %23, i32 4616
  %24 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.2) #14, !srcloc !992
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.2 = getelementptr i32, ptr %data, i32 3
  %26 = ptrtoint ptr %incdec.ptr.1 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %incdec.ptr.1, align 4
  %27 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %adap, align 128
  %add.ptr.i8.3 = getelementptr i8, ptr %28, i32 4620
  %29 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.3) #14, !srcloc !992
  %30 = tail call i32 @llvm.bswap.i32(i32 %29) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.3 = getelementptr i32, ptr %data, i32 4
  %31 = ptrtoint ptr %incdec.ptr.2 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %incdec.ptr.2, align 4
  %32 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %adap, align 128
  %add.ptr.i8.4 = getelementptr i8, ptr %33, i32 4624
  %34 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.4) #14, !srcloc !992
  %35 = tail call i32 @llvm.bswap.i32(i32 %34) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %incdec.ptr.4 = getelementptr i32, ptr %data, i32 5
  %36 = ptrtoint ptr %incdec.ptr.3 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %incdec.ptr.3, align 4
  %37 = ptrtoint ptr %adap to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %adap, align 128
  %add.ptr.i8.5 = getelementptr i8, ptr %38, i32 4628
  %39 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i8.5) #14, !srcloc !992
  %40 = tail call i32 @llvm.bswap.i32(i32 %39) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %41 = ptrtoint ptr %incdec.ptr.4 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %incdec.ptr.4, align 4
  br label %if.end

if.end:                                           ; preds = %t4_wait_op_done.exit, %if.end4.i.i.1.if.end_crit_edge
  %retval.1.ph.i.i11 = phi i32 [ 0, %t4_wait_op_done.exit ], [ -11, %if.end4.i.i.1.if.end_crit_edge ]
  ret i32 %retval.1.ph.i.i11
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_sched_params(ptr noundef %adapter, i8 noundef zeroext %type, i8 noundef zeroext %level, i8 noundef zeroext %mode, i8 noundef zeroext %rateunit, i8 noundef zeroext %ratemode, i8 noundef zeroext %channel, i8 noundef zeroext %class, i32 noundef %minrate, i32 noundef %maxrate, i16 noundef zeroext %weight, i16 noundef zeroext %pktsize, i16 noundef zeroext %burstsize) local_unnamed_addr #0 align 64 {
entry:
  %cmd = alloca %struct.fw_sched_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %cmd) #14
  %0 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 1
  %1 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2
  %2 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 1
  %3 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 2
  %4 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 3
  %5 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 4
  %6 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 5
  %7 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 6
  %8 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 7
  %9 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 8
  %10 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 9
  %11 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 10
  %12 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 11
  %13 = getelementptr inbounds %struct.fw_sched_cmd, ptr %cmd, i32 0, i32 2, i32 0, i32 12
  %14 = getelementptr inbounds i8, ptr %cmd, i32 28
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 0, ptr %14, align 4
  %16 = ptrtoint ptr %cmd to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 614465536, ptr %cmd, align 4
  %17 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 2, ptr %0, align 4
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 1, ptr %1, align 4
  %19 = ptrtoint ptr %2 to i32
  call void @__asan_store1_noabort(i32 %19)
  store i8 %type, ptr %2, align 1
  %20 = ptrtoint ptr %3 to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %level, ptr %3, align 2
  %21 = ptrtoint ptr %4 to i32
  call void @__asan_store1_noabort(i32 %21)
  store i8 %mode, ptr %4, align 1
  %22 = ptrtoint ptr %7 to i32
  call void @__asan_store1_noabort(i32 %22)
  store i8 %channel, ptr %7, align 2
  %23 = ptrtoint ptr %8 to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %class, ptr %8, align 1
  %24 = ptrtoint ptr %5 to i32
  call void @__asan_store1_noabort(i32 %24)
  store i8 %rateunit, ptr %5, align 4
  %25 = ptrtoint ptr %6 to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 %ratemode, ptr %6, align 1
  %26 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %minrate, ptr %9, align 4
  %27 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %maxrate, ptr %10, align 4
  %28 = ptrtoint ptr %11 to i32
  call void @__asan_store2_noabort(i32 %28)
  store i16 %weight, ptr %11, align 4
  %29 = ptrtoint ptr %12 to i32
  call void @__asan_store2_noabort(i32 %29)
  store i16 %pktsize, ptr %12, align 2
  %30 = ptrtoint ptr %13 to i32
  call void @__asan_store2_noabort(i32 %30)
  store i16 %burstsize, ptr %13, align 4
  %mbox = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 6
  %31 = ptrtoint ptr %mbox to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %mbox, align 8
  %call.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adapter, i32 noundef %32, ptr noundef nonnull %cmd, i32 noundef 32, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %cmd) #14
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_i2c_rd(ptr noundef %adap, i32 noundef %mbox, i32 noundef %port, i32 noundef %devid, i32 noundef %offset, i32 noundef %len, ptr nocapture noundef writeonly %buf) local_unnamed_addr #0 align 64 {
entry:
  %ldst_cmd = alloca %struct.fw_ldst_cmd, align 8
  %ldst_rpl = alloca %struct.fw_ldst_cmd, align 8
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ldst_cmd) #14
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %ldst_rpl) #14
  %0 = call ptr @memset(ptr %ldst_rpl, i32 255, i32 64)
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %len)
  %cmp = icmp ugt i32 %len, 256
  br i1 %cmp, label %entry.cleanup24_crit_edge, label %if.end

entry.cleanup24_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %offset)
  %cmp1 = icmp ult i32 %offset, 256
  %add = add i32 %len, %offset
  call void @__sanitizer_cov_trace_const_cmp4(i32 256, i32 %add)
  %cmp2 = icmp ugt i32 %add, 256
  %or.cond = and i1 %cmp1, %cmp2
  br i1 %or.cond, label %if.end.cleanup24_crit_edge, label %if.end4

if.end.cleanup24_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

if.end4:                                          ; preds = %if.end
  %1 = getelementptr inbounds i8, ptr %ldst_cmd, i32 8
  %2 = call ptr @memset(ptr %1, i32 0, i32 56)
  %3 = ptrtoint ptr %ldst_cmd to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 29360184, ptr %ldst_cmd, align 8
  %cycles_to_len16 = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 1
  %4 = ptrtoint ptr %cycles_to_len16 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 4, ptr %cycles_to_len16, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %port)
  %cmp5 = icmp slt i32 %port, 0
  %phi.cast = trunc i32 %port to i8
  %spec.select = select i1 %cmp5, i8 -1, i8 %phi.cast
  %u = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2
  %5 = ptrtoint ptr %u to i32
  call void @__asan_store1_noabort(i32 %5)
  store i8 %spec.select, ptr %u, align 8
  %conv6 = trunc i32 %devid to i8
  %did = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2, i32 0, i32 1
  %6 = ptrtoint ptr %did to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv6, ptr %did, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len)
  %cmp8.not49 = icmp eq i32 %len, 0
  br i1 %cmp8.not49, label %if.end4.cleanup24_crit_edge, label %while.body.lr.ph

if.end4.cleanup24_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

while.body.lr.ph:                                 ; preds = %if.end4
  %boffset = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_cmd, i32 0, i32 2, i32 0, i32 2
  %blen = getelementptr inbounds %struct.fw_ldst_i2c, ptr %u, i32 0, i32 3
  %data = getelementptr inbounds %struct.fw_ldst_cmd, ptr %ldst_rpl, i32 0, i32 2, i32 0, i32 4
  br label %while.body

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.body.lr.ph
  %buf.addr.052 = phi ptr [ %buf, %while.body.lr.ph ], [ %add.ptr, %cleanup.while.body_crit_edge ]
  %len.addr.051 = phi i32 [ %len, %while.body.lr.ph ], [ %sub, %cleanup.while.body_crit_edge ]
  %offset.addr.050 = phi i32 [ %offset, %while.body.lr.ph ], [ %add23, %cleanup.while.body_crit_edge ]
  %7 = call i32 @llvm.umin.i32(i32 %len.addr.051, i32 48)
  %conv16 = trunc i32 %offset.addr.050 to i8
  %8 = ptrtoint ptr %boffset to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 %conv16, ptr %boffset, align 2
  %conv18 = trunc i32 %7 to i8
  %9 = ptrtoint ptr %blen to i32
  call void @__asan_store1_noabort(i32 %9)
  store i8 %conv18, ptr %blen, align 1
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %mbox, ptr noundef nonnull %ldst_cmd, i32 noundef 64, ptr noundef nonnull %ldst_rpl, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not, label %cleanup, label %while.body.cleanup24_crit_edge

while.body.cleanup24_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

cleanup:                                          ; preds = %while.body
  %10 = call ptr @memcpy(ptr %buf.addr.052, ptr %data, i32 %7)
  %add23 = add i32 %7, %offset.addr.050
  %add.ptr = getelementptr i8, ptr %buf.addr.052, i32 %7
  %sub = sub i32 %len.addr.051, %7
  %cmp8.not = icmp eq i32 %sub, 0
  br i1 %cmp8.not, label %cleanup.cleanup24_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %while.body

cleanup.cleanup24_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup24

cleanup24:                                        ; preds = %cleanup.cleanup24_crit_edge, %while.body.cleanup24_crit_edge, %if.end4.cleanup24_crit_edge, %if.end.cleanup24_crit_edge, %entry.cleanup24_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup24_crit_edge ], [ -22, %if.end.cleanup24_crit_edge ], [ 0, %if.end4.cleanup24_crit_edge ], [ 0, %cleanup.cleanup24_crit_edge ], [ %call.i.i, %while.body.cleanup24_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ldst_rpl) #14
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %ldst_cmd) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_set_vlan_acl(ptr noundef %adap, i32 noundef %mbox, i32 noundef %vf, i16 noundef zeroext %vlan) local_unnamed_addr #0 align 64 {
entry:
  %vlan_cmd = alloca %struct.fw_acl_vlan_cmd, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %vlan_cmd) #14
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %vlan)
  %tobool.not = icmp eq i16 %vlan, 0
  %0 = getelementptr inbounds i8, ptr %vlan_cmd, i32 8
  %1 = call ptr @memset(ptr %0, i32 0, i32 40)
  %pf = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 7
  %2 = ptrtoint ptr %pf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pf, align 4
  %shl = shl i32 %3, 8
  %or = or i32 %shl, %vf
  %or2 = or i32 %or, 430964736
  %4 = ptrtoint ptr %vlan_cmd to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or2, ptr %vlan_cmd, align 4
  %or3 = select i1 %tobool.not, i32 3, i32 -2147483645
  %en_to_len16 = getelementptr inbounds %struct.fw_acl_vlan_cmd, ptr %vlan_cmd, i32 0, i32 1
  %5 = ptrtoint ptr %en_to_len16 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or3, ptr %en_to_len16, align 4
  %conv6 = select i1 %tobool.not, i8 0, i8 -64
  %dropnovlan_fm = getelementptr inbounds %struct.fw_acl_vlan_cmd, ptr %vlan_cmd, i32 0, i32 3
  %6 = ptrtoint ptr %dropnovlan_fm to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %conv6, ptr %dropnovlan_fm, align 1
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %nvlan = getelementptr inbounds %struct.fw_acl_vlan_cmd, ptr %vlan_cmd, i32 0, i32 2
  %7 = ptrtoint ptr %nvlan to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 1, ptr %nvlan, align 4
  %vlanid = getelementptr inbounds %struct.fw_acl_vlan_cmd, ptr %vlan_cmd, i32 0, i32 5
  %8 = ptrtoint ptr %vlanid to i32
  call void @__asan_store2_noabort(i32 %8)
  store i16 %vlan, ptr %vlanid, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %mbox8 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 6
  %9 = ptrtoint ptr %mbox8 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %mbox8, align 8
  %call.i.i = call i32 @t4_wr_mbox_meat_timeout(ptr noundef %adap, i32 noundef %10, ptr noundef nonnull %vlan_cmd, i32 noundef 48, ptr noundef null, i1 noundef zeroext true, i32 noundef 10000) #14
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %vlan_cmd) #14
  ret i32 %call.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_load_boot(ptr nocapture noundef readonly %adap, ptr nocapture noundef %boot_data, i32 noundef %boot_addr, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  %device_id = alloca i16, align 2
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  %sf_nsec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 9
  %2 = ptrtoint ptr %sf_nsec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sf_nsec, align 8
  %div = udiv i32 %1, %3
  %mul = shl i32 %boot_addr, 10
  call void @llvm.lifetime.start.p0(i64 2, ptr nonnull %device_id) #14
  %4 = ptrtoint ptr %device_id to i32
  call void @__asan_store2_noabort(i32 %4)
  store i16 -1, ptr %device_id, align 2, !annotation !996
  %add = add i32 %mul, %size
  call void @__sanitizer_cov_trace_const_cmp4(i32 589823, i32 %add)
  %cmp = icmp ugt i32 %add, 589823
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %5 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %6, ptr noundef nonnull @.str.204) #17
  br label %cleanup

if.end:                                           ; preds = %entry
  %pcir_offset2 = getelementptr inbounds %struct.cxgb4_pci_exp_rom_header, ptr %boot_data, i32 0, i32 2
  %7 = ptrtoint ptr %pcir_offset2 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %pcir_offset2, align 2
  %9 = tail call i16 @llvm.bswap.i16(i16 %8)
  %conv = zext i16 %9 to i32
  %arrayidx = getelementptr i8, ptr %boot_data, i32 %conv
  %10 = add i32 %size, -524289
  call void @__sanitizer_cov_trace_const_cmp4(i32 -524263, i32 %10)
  %11 = icmp ult i32 %10, -524263
  br i1 %11, label %do.end10, label %if.end12

do.end10:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev11 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %12 = ptrtoint ptr %pdev_dev11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev11, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.207) #17
  br label %cleanup

if.end12:                                         ; preds = %if.end
  %14 = ptrtoint ptr %boot_data to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %boot_data, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 21930, i16 %15)
  %cmp14.not = icmp eq i16 %15, 21930
  br i1 %cmp14.not, label %if.end21, label %do.end19

do.end19:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev20 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %16 = ptrtoint ptr %pdev_dev20 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pdev_dev20, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %17, ptr noundef nonnull @.str.210) #17
  br label %cleanup

if.end21:                                         ; preds = %if.end12
  %18 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1346586962, i32 %19)
  %cmp23.not = icmp eq i32 %19, 1346586962
  br i1 %cmp23.not, label %if.end30, label %do.end28

do.end28:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev29 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %20 = ptrtoint ptr %pdev_dev29 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pdev_dev29, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %21, ptr noundef nonnull @.str.213) #17
  br label %cleanup

if.end30:                                         ; preds = %if.end21
  %vendor_id = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %arrayidx, i32 0, i32 1
  %22 = ptrtoint ptr %vendor_id to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %vendor_id, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 9492, i16 %23)
  %cmp32.not = icmp eq i16 %23, 9492
  br i1 %cmp32.not, label %cond.end, label %do.end37

do.end37:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev38 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %24 = ptrtoint ptr %pdev_dev38 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pdev_dev38, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %25, ptr noundef nonnull @.str.216) #17
  br label %cleanup

cond.end:                                         ; preds = %if.end30
  %add40 = add nsw i32 %size, -1
  %sub = add i32 %add40, %div
  %div41 = udiv i32 %sub, %div
  %shr42 = lshr i32 %mul, 16
  %add44 = add nsw i32 %shr42, -1
  %sub45 = add i32 %add44, %div41
  %call = tail call fastcc i32 @t4_flash_erase_sectors(ptr noundef %adap, i32 noundef %shr42, i32 noundef %sub45)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool46.not = icmp eq i32 %call, 0
  br i1 %tobool46.not, label %if.end51, label %cond.end.do.end76_crit_edge

cond.end.do.end76_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end76

if.end51:                                         ; preds = %cond.end
  %pdev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 3
  %26 = ptrtoint ptr %pdev to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pdev, align 4
  %call52 = call i32 @pci_read_config_word(ptr noundef %27, i32 noundef 2, ptr noundef nonnull %device_id) #14
  %28 = ptrtoint ptr %device_id to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %device_id, align 2
  %30 = and i16 %29, -3841
  store i16 %30, ptr %device_id, align 2
  %device_id55 = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %arrayidx, i32 0, i32 2
  %31 = ptrtoint ptr %device_id55 to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %device_id55, align 2
  %33 = call i16 @llvm.bswap.i16(i16 %32)
  call void @__sanitizer_cov_trace_cmp2(i16 %33, i16 %30)
  %cmp58.not = icmp eq i16 %33, %30
  br i1 %cmp58.not, label %if.end51.for.cond.preheader_crit_edge, label %if.then60

if.end51.for.cond.preheader_crit_edge:            ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

if.then60:                                        ; preds = %if.end51
  %34 = call i16 @llvm.bswap.i16(i16 %30) #14
  br label %do.body.i

do.body.i:                                        ; preds = %if.end22.i.do.body.i_crit_edge, %if.then60
  %cur_header.0.i = phi ptr [ %boot_data, %if.then60 ], [ %add.ptr26.i, %if.end22.i.do.body.i_crit_edge ]
  %pcir_offset1.i = getelementptr inbounds %struct.legacy_pci_rom_hdr, ptr %cur_header.0.i, i32 0, i32 5
  %35 = ptrtoint ptr %pcir_offset1.i to i32
  call void @__asan_load2_noabort(i32 %35)
  %36 = load i16, ptr %pcir_offset1.i, align 2
  %37 = call i16 @llvm.bswap.i16(i16 %36) #14
  %conv.i = zext i16 %37 to i32
  %add.ptr.i = getelementptr i8, ptr %cur_header.0.i, i32 %conv.i
  %code_type.i = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %add.ptr.i, i32 0, i32 9
  %38 = ptrtoint ptr %code_type.i to i32
  call void @__asan_load1_noabort(i32 %38)
  %39 = load i8, ptr %code_type.i, align 4
  %40 = zext i8 %39 to i64
  call void @__sanitizer_cov_trace_switch(i64 %40, ptr @__sancov_gen_cov_switch_values.517)
  switch i8 %39, label %do.body.i.if.end22.i_crit_edge [
    i8 0, label %if.then.i
    i8 3, label %if.then19.i
  ]

do.body.i.if.end22.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22.i

if.then.i:                                        ; preds = %do.body.i
  %device_id5.i = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %add.ptr.i, i32 0, i32 2
  %41 = ptrtoint ptr %device_id5.i to i32
  call void @__asan_store2_noabort(i32 %41)
  store i16 %34, ptr %device_id5.i, align 2
  %cksum.i = getelementptr %struct.legacy_pci_rom_hdr, ptr %cur_header.0.i, i32 0, i32 3
  %42 = ptrtoint ptr %cksum.i to i32
  call void @__asan_store1_noabort(i32 %42)
  store i8 0, ptr %cksum.i, align 1
  %size512.i = getelementptr inbounds %struct.legacy_pci_rom_hdr, ptr %cur_header.0.i, i32 0, i32 1
  %43 = ptrtoint ptr %size512.i to i32
  call void @__asan_load1_noabort(i32 %43)
  %44 = load i8, ptr %size512.i, align 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %44)
  %cmp743.not.i = icmp eq i8 %44, 0
  br i1 %cmp743.not.i, label %if.then.i.for.end.i_crit_edge, label %for.body.preheader.i

if.then.i.for.end.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.body.preheader.i:                             ; preds = %if.then.i
  %conv6.i = zext i8 %44 to i32
  %mul.i = shl nuw nsw i32 %conv6.i, 9
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.045.i = phi i32 [ %inc.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %csum.044.i = phi i8 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %arrayidx.i = getelementptr i8, ptr %cur_header.0.i, i32 %i.045.i
  %45 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %arrayidx.i, align 1
  %add.i = add i8 %46, %csum.044.i
  %inc.i = add nuw nsw i32 %i.045.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %mul.i
  br i1 %exitcond.not.i, label %for.body.i.for.end.i_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %if.then.i.for.end.i_crit_edge
  %csum.0.lcssa.i = phi i8 [ 0, %if.then.i.for.end.i_crit_edge ], [ %add.i, %for.body.i.for.end.i_crit_edge ]
  %sub.i = sub i8 0, %csum.0.lcssa.i
  %47 = ptrtoint ptr %cksum.i to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %sub.i, ptr %cksum.i, align 1
  br label %if.end22.i

if.then19.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #16
  %device_id21.i = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %add.ptr.i, i32 0, i32 2
  %48 = ptrtoint ptr %device_id21.i to i32
  call void @__asan_store2_noabort(i32 %48)
  store i16 %34, ptr %device_id21.i, align 2
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then19.i, %for.end.i, %do.body.i.if.end22.i_crit_edge
  %size51223.i = getelementptr inbounds %struct.legacy_pci_rom_hdr, ptr %cur_header.0.i, i32 0, i32 1
  %49 = ptrtoint ptr %size51223.i to i32
  call void @__asan_load1_noabort(i32 %49)
  %50 = load i8, ptr %size51223.i, align 2
  %conv24.i = zext i8 %50 to i32
  %mul25.i = shl nuw nsw i32 %conv24.i, 9
  %add.ptr26.i = getelementptr i8, ptr %cur_header.0.i, i32 %mul25.i
  %indicator.i = getelementptr inbounds %struct.cxgb4_pcir_data, ptr %add.ptr.i, i32 0, i32 10
  %51 = ptrtoint ptr %indicator.i to i32
  call void @__asan_load1_noabort(i32 %51)
  %52 = load i8, ptr %indicator.i, align 1
  %tobool.not.i = icmp sgt i8 %52, -1
  br i1 %tobool.not.i, label %if.end22.i.do.body.i_crit_edge, label %if.end22.i.for.cond.preheader_crit_edge

if.end22.i.for.cond.preheader_crit_edge:          ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond.preheader

if.end22.i.do.body.i_crit_edge:                   ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.body.i

for.cond.preheader:                               ; preds = %if.end22.i.for.cond.preheader_crit_edge, %if.end51.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %boot_data.addr.0 = phi ptr [ %add.ptr, %for.body.for.cond_crit_edge ], [ %boot_data, %for.cond.preheader ]
  %size.addr.0.in = phi i32 [ %size.addr.0, %for.body.for.cond_crit_edge ], [ %size, %for.cond.preheader ]
  %addr.0 = phi i32 [ %add65, %for.body.for.cond_crit_edge ], [ %mul, %for.cond.preheader ]
  %size.addr.0 = add i32 %size.addr.0.in, -256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size.addr.0)
  %tobool64.not = icmp eq i32 %size.addr.0, 0
  br i1 %tobool64.not, label %out, label %for.body

for.body:                                         ; preds = %for.cond
  %add65 = add i32 %addr.0, 256
  %add.ptr = getelementptr i8, ptr %boot_data.addr.0, i32 256
  %call66 = call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %add65, i32 noundef 256, ptr noundef %add.ptr, i1 noundef zeroext false)
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %for.body.for.cond_crit_edge, label %for.body.do.end76_crit_edge

for.body.do.end76_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end76

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.cond

out:                                              ; preds = %for.cond
  %call71 = call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %mul, i32 noundef 256, ptr noundef %boot_data, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call71)
  %tobool72.not = icmp eq i32 %call71, 0
  br i1 %tobool72.not, label %out.cleanup_crit_edge, label %out.do.end76_crit_edge

out.do.end76_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end76

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

do.end76:                                         ; preds = %out.do.end76_crit_edge, %for.body.do.end76_crit_edge, %cond.end.do.end76_crit_edge
  %ret.0126 = phi i32 [ %call71, %out.do.end76_crit_edge ], [ %call, %cond.end.do.end76_crit_edge ], [ %call66, %for.body.do.end76_crit_edge ]
  %pdev_dev77 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %53 = ptrtoint ptr %pdev_dev77 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %pdev_dev77, align 16
  call void (ptr, ptr, ...) @_dev_err(ptr noundef %54, ptr noundef nonnull @.str.219, i32 noundef %ret.0126) #17
  br label %cleanup

cleanup:                                          ; preds = %do.end76, %out.cleanup_crit_edge, %do.end37, %do.end28, %do.end19, %do.end10, %do.end
  %retval.0 = phi i32 [ -27, %do.end ], [ -27, %do.end10 ], [ -22, %do.end19 ], [ -22, %do.end28 ], [ -22, %do.end37 ], [ %ret.0126, %do.end76 ], [ 0, %out.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 2, ptr nonnull %device_id) #14
  ret i32 %retval.0
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @t4_load_bootcfg(ptr nocapture noundef readonly %adap, ptr nocapture noundef readonly %cfg_data, i32 noundef %size) local_unnamed_addr #0 align 64 {
entry:
  %data = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %sf_size = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 8
  %0 = ptrtoint ptr %sf_size to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sf_size, align 4
  %sf_nsec = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 15, i32 9
  %2 = ptrtoint ptr %sf_nsec to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %sf_nsec, align 8
  %div = udiv i32 %1, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 524288, i32 %1)
  %cmp.i = icmp ult i32 %1, 524288
  %..i = select i1 %cmp.i, i32 -28, i32 458752
  br i1 %cmp.i, label %entry.cleanup58_crit_edge, label %if.end

entry.cleanup58_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup58

if.end:                                           ; preds = %entry
  %div2104 = lshr i32 %..i, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 65536, i32 %size)
  %cmp3 = icmp ugt i32 %size, 65536
  br i1 %cmp3, label %do.end, label %if.end5

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %4 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pdev_dev, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %5, ptr noundef nonnull @.str.221, i32 noundef 65536) #17
  br label %cleanup58

if.end5:                                          ; preds = %if.end
  %6 = ptrtoint ptr %cfg_data to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %cfg_data, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 17218, i16 %7)
  %cmp6.not = icmp eq i16 %7, 17218
  br i1 %cmp6.not, label %if.end13, label %do.end11

do.end11:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #16
  %pdev_dev12 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %8 = ptrtoint ptr %pdev_dev12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pdev_dev12, align 16
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %9, ptr noundef nonnull @.str.224) #17
  br label %do.end52

if.end13:                                         ; preds = %if.end5
  %sub = add i32 %div, 65535
  %div14 = udiv i32 %sub, %div
  %add15 = add nsw i32 %div2104, -1
  %sub16 = add i32 %add15, %div14
  %call17 = tail call fastcc i32 @t4_flash_erase_sectors(ptr noundef %adap, i32 noundef %div2104, i32 noundef %sub16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool.not = icmp eq i32 %call17, 0
  br i1 %tobool.not, label %lor.lhs.false, label %if.end13.do.end52_crit_edge

if.end13.do.end52_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

lor.lhs.false:                                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp18 = icmp eq i32 %size, 0
  br i1 %cmp18, label %lor.lhs.false.cleanup58_crit_edge, label %lor.lhs.false.for.body_crit_edge

lor.lhs.false.for.body_crit_edge:                 ; preds = %lor.lhs.false
  br label %for.body

lor.lhs.false.cleanup58_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup58

for.body:                                         ; preds = %if.end30.for.body_crit_edge, %lor.lhs.false.for.body_crit_edge
  %i.0112 = phi i32 [ %add32, %if.end30.for.body_crit_edge ], [ 0, %lor.lhs.false.for.body_crit_edge ]
  %addr.0111 = phi i32 [ %add31, %if.end30.for.body_crit_edge ], [ 458752, %lor.lhs.false.for.body_crit_edge ]
  %cfg_data.addr.0110 = phi ptr [ %add.ptr, %if.end30.for.body_crit_edge ], [ %cfg_data, %lor.lhs.false.for.body_crit_edge ]
  %sub24 = sub i32 %size, %i.0112
  %10 = tail call i32 @llvm.umin.i32(i32 %sub24, i32 256)
  %call27 = tail call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %addr.0111, i32 noundef %10, ptr noundef %cfg_data.addr.0110, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call27)
  %tobool28.not = icmp eq i32 %call27, 0
  br i1 %tobool28.not, label %if.end30, label %for.body.do.end52_crit_edge

for.body.do.end52_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

if.end30:                                         ; preds = %for.body
  %add31 = add i32 %addr.0111, 256
  %add.ptr = getelementptr i8, ptr %cfg_data.addr.0110, i32 256
  %add32 = add i32 %i.0112, 256
  %cmp22 = icmp ult i32 %add32, %size
  br i1 %cmp22, label %if.end30.for.body_crit_edge, label %for.end

if.end30.for.body_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.end:                                          ; preds = %if.end30
  %sub34 = add i32 %size, 3
  %and = and i32 %sub34, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %and, i32 %size)
  %cmp37113.not = icmp eq i32 %and, %size
  br i1 %cmp37113.not, label %for.end.cleanup58_crit_edge, label %for.body39.lr.ph

for.end.cleanup58_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup58

for.body39.lr.ph:                                 ; preds = %for.end
  %sub35 = sub i32 %and, %size
  %add40 = add i32 %..i, %size
  %umax = call i32 @llvm.umax.i32(i32 %sub35, i32 1)
  br label %for.body39

for.cond36:                                       ; preds = %for.body39
  %inc = add nuw i32 %i.1114, 1
  %exitcond.not = icmp eq i32 %inc, %umax
  br i1 %exitcond.not, label %for.cond36.cleanup58_crit_edge, label %for.cond36.for.body39_crit_edge

for.cond36.for.body39_crit_edge:                  ; preds = %for.cond36
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body39

for.cond36.cleanup58_crit_edge:                   ; preds = %for.cond36
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup58

for.body39:                                       ; preds = %for.cond36.for.body39_crit_edge, %for.body39.lr.ph
  %i.1114 = phi i32 [ 0, %for.body39.lr.ph ], [ %inc, %for.cond36.for.body39_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %data) #14
  %11 = ptrtoint ptr %data to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 0, ptr %data, align 1
  %add41 = add i32 %add40, %i.1114
  %call42 = call fastcc i32 @t4_write_flash(ptr noundef %adap, i32 noundef %add41, i32 noundef 1, ptr noundef nonnull %data, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call42)
  %tobool43.not = icmp eq i32 %call42, 0
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %data) #14
  br i1 %tobool43.not, label %for.cond36, label %for.body39.do.end52_crit_edge

for.body39.do.end52_crit_edge:                    ; preds = %for.body39
  call void @__sanitizer_cov_trace_pc() #16
  br label %do.end52

do.end52:                                         ; preds = %for.body39.do.end52_crit_edge, %for.body.do.end52_crit_edge, %if.end13.do.end52_crit_edge, %do.end11
  %ret.2.ph = phi i32 [ %call17, %if.end13.do.end52_crit_edge ], [ -22, %do.end11 ], [ %call42, %for.body39.do.end52_crit_edge ], [ %call27, %for.body.do.end52_crit_edge ]
  %pdev_dev53 = getelementptr inbounds %struct.adapter, ptr %adap, i32 0, i32 4
  %12 = ptrtoint ptr %pdev_dev53 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pdev_dev53, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp54 = icmp eq i32 %size, 0
  %cond56 = select i1 %cmp54, ptr @.str.202, ptr @.str.203
  tail call void (ptr, ptr, ...) @_dev_err(ptr noundef %13, ptr noundef nonnull @.str.227, ptr noundef nonnull %cond56, i32 noundef %ret.2.ph) #17
  br label %cleanup58

cleanup58:                                        ; preds = %do.end52, %for.cond36.cleanup58_crit_edge, %for.end.cleanup58_crit_edge, %lor.lhs.false.cleanup58_crit_edge, %do.end, %entry.cleanup58_crit_edge
  %retval.0 = phi i32 [ -27, %do.end ], [ -28, %entry.cleanup58_crit_edge ], [ %ret.2.ph, %do.end52 ], [ 0, %lor.lhs.false.cleanup58_crit_edge ], [ 0, %for.end.cleanup58_crit_edge ], [ 0, %for.cond36.cleanup58_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @arm_heavy_mb() local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #3 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #3

; Function Attrs: cold null_pointer_is_valid
declare dso_local void @_dev_alert(ptr noundef, ptr noundef, ...) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @flash_wait_op(ptr nocapture noundef readonly %adapter, i32 noundef %attempts, i32 noundef %delay) unnamed_addr #0 align 64 {
entry:
  %status = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %status) #14
  %0 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %status, align 4, !annotation !996
  %call14 = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 1, i32 noundef 1, i32 noundef 1, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %cmp.not15 = icmp eq i32 %call14, 0
  br i1 %cmp.not15, label %entry.lor.lhs.false_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

entry.lor.lhs.false_crit_edge:                    ; preds = %entry
  br label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.then9.lor.lhs.false_crit_edge, %entry.lor.lhs.false_crit_edge
  %attempts.addr.016 = phi i32 [ %dec, %if.then9.lor.lhs.false_crit_edge ], [ %attempts, %entry.lor.lhs.false_crit_edge ]
  %call1 = call fastcc i32 @sf1_read(ptr noundef %adapter, i32 noundef 1, i32 noundef 0, i32 noundef 1, ptr noundef nonnull %status)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %cmp2.not = icmp eq i32 %call1, 0
  br i1 %cmp2.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %1 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %status, align 4
  %and = and i32 %2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %dec = add i32 %attempts.addr.016, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec)
  %cmp5 = icmp eq i32 %dec, 0
  br i1 %cmp5, label %if.end4.cleanup_crit_edge, label %if.then9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then9:                                         ; preds = %if.end4
  tail call void @msleep(i32 noundef %delay) #14
  %call = tail call fastcc i32 @sf1_write(ptr noundef %adapter, i32 noundef 1, i32 noundef 1, i32 noundef 1, i32 noundef 5)
  %cmp.not = icmp eq i32 %call, 0
  br i1 %cmp.not, label %if.then9.lor.lhs.false_crit_edge, label %if.then9.cleanup_crit_edge

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %cleanup

if.then9.lor.lhs.false_crit_edge:                 ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #16
  br label %lor.lhs.false

cleanup:                                          ; preds = %if.then9.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call14, %entry.cleanup_crit_edge ], [ -11, %if.end4.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call, %if.then9.cleanup_crit_edge ], [ %call1, %lor.lhs.false.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %status) #14
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @t4_handle_intr_status(ptr noundef %adapter, i32 noundef %reg, ptr nocapture noundef readonly %acts) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #16
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %adapter, align 128
  %add.ptr.i = getelementptr i8, ptr %1, i32 %reg
  %2 = tail call i32 asm sideeffect "ldr $0, $1", "=r,*Qo"(ptr elementtype(i32) %add.ptr.i) #14, !srcloc !992
  %3 = tail call i32 @llvm.bswap.i32(i32 %2) #14
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !993
  %4 = ptrtoint ptr %acts to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %acts, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not57 = icmp eq i32 %5, 0
  br i1 %tobool.not57, label %entry.for.end_crit_edge, label %for.body.lr.ph

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %pdev_dev = getelementptr inbounds %struct.adapter, ptr %adapter, i32 0, i32 4
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %6 = phi i32 [ %5, %for.body.lr.ph ], [ %26, %for.inc.for.body_crit_edge ]
  %mask.062 = phi i32 [ 0, %for.body.lr.ph ], [ %mask.1, %for.inc.for.body_crit_edge ]
  %fatal.061 = phi i32 [ 0, %for.body.lr.ph ], [ %fatal.2, %for.inc.for.body_crit_edge ]
  %acts.addr.058 = phi ptr [ %acts, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %and = and i32 %6, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %for.body.for.inc_crit_edge, label %if.end

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.inc

if.end:                                           ; preds = %for.body
  %fatal4 = getelementptr inbounds %struct.intr_info, ptr %acts.addr.058, i32 0, i32 3
  %7 = ptrtoint ptr %fatal4 to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %fatal4, align 2
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %8)
  %tobool5.not = icmp eq i16 %8, 0
  br i1 %tobool5.not, label %if.else, label %if.then6

if.then6:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #16
  %inc = add i32 %fatal.061, 1
  %9 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pdev_dev, align 16
  %msg = getelementptr inbounds %struct.intr_info, ptr %acts.addr.058, i32 0, i32 1
  %11 = ptrtoint ptr %msg to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %msg, align 4
  tail call void (ptr, ptr, ...) @_dev_alert(ptr noundef %10, ptr noundef nonnull @.str.288, ptr noundef %12, i32 noundef %and) #17
  br label %if.end22

if.else:                                          ; preds = %if.end
  %msg9 = getelementptr inbounds %struct.intr_info, ptr %acts.addr.058, i32 0, i32 1
  %13 = ptrtoint ptr %msg9 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %msg9, align 4
  %tobool10.not = icmp eq ptr %14, null
  br i1 %tobool10.not, label %if.else.if.end22_crit_edge, label %land.lhs.true

if.else.if.end22_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

land.lhs.true:                                    ; preds = %if.else
  %call11 = tail call i32 @__printk_ratelimit(ptr noundef nonnull @.str.289) #14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %land.lhs.true.if.end22_crit_edge, label %do.end16

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end22

do.end16:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #16
  %15 = ptrtoint ptr %pdev_dev to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pdev_dev, align 16
  %17 = ptrtoint ptr %msg9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %msg9, align 4
  %19 = ptrtoint ptr %acts.addr.058 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %acts.addr.058, align 4
  %and20 = and i32 %20, %3
  tail call void (ptr, ptr, ...) @_dev_warn(ptr noundef %16, ptr noundef nonnull @.str.288, ptr noundef %18, i32 noundef %and20) #17
  br label %if.end22

if.end22:                                         ; preds = %do.end16, %land.lhs.true.if.end22_crit_edge, %if.else.if.end22_crit_edge, %if.then6
  %fatal.1 = phi i32 [ %inc, %if.then6 ], [ %fatal.061, %do.end16 ], [ %fatal.061, %land.lhs.true.if.end22_crit_edge ], [ %fatal.061, %if.else.if.end22_crit_edge ]
  %int_handler = getelementptr inbounds %struct.intr_info, ptr %acts.addr.058, i32 0, i32 4
  %21 = ptrtoint ptr %int_handler to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %int_handler, align 4
  %tobool23.not = icmp eq ptr %22, null
  br i1 %tobool23.not, label %if.end22.if.end26_crit_edge, label %if.then24

if.end22.if.end26_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end26

if.then24:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #16
  tail call void %22(ptr noundef %adapter) #14
  br label %if.end26

if.end26:                                         ; preds = %if.then24, %if.end22.if.end26_crit_edge
  %23 = ptrtoint ptr %acts.addr.058 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %acts.addr.058, align 4
  %or = or i32 %24, %mask.062
  br label %for.inc

for.inc:                                          ; preds = %if.end26, %for.body.for.inc_crit_edge
  %fatal.2 = phi i32 [ %fatal.1, %if.end26 ], [ %fatal.061, %for.body.for.inc_crit_edge ]
  %mask.1 = phi i32 [ %or, %if.end26 ], [ %mask.062, %for.body.for.inc_crit_edge ]
  %incdec.ptr = getelementptr %struct.intr_info, ptr %acts.addr.058, i32 1
  %25 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %incdec.ptr, align 4
  %tobool.not = icmp eq i32 %26, 0
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #16
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %fatal.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %fatal.2, %for.inc.for.end_crit_edge ]
  %mask.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %mask.1, %for.inc.for.end_crit_edge ]
  %and28 = and i32 %mask.0.lcssa, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %for.end.if.end31_crit_edge, label %if.then30

for.end.if.end31_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  br label %if.end31

if.then30:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 4", "r,~{memory}"(i32 0) #14, !srcloc !994
  tail call void @arm_heavy_mb() #14
  %27 = tail call i32 @llvm.bswap.i32(i32 %and28) #14
  %28 = ptrtoint ptr %adapter to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %adapter, align 128
  %add.ptr.i56 = getelementptr i8, ptr %29, i32 %reg
  tail call void asm sideeffect "str $1, $0", "*Qo,r"(ptr elementtype(i32) %add.ptr.i56, i32 %27) #14, !srcloc !995
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %for.end.if.end31_crit_edge
  ret i32 %fatal.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__printk_ratelimit(ptr noundef) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @t4_db_full(ptr noundef) #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @t4_db_dropped(ptr noundef) #3

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @dev_addr_mod(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #13

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.bswap.i64(i64) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.abs.i32(i32, i1 immarg) #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #5

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #14

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #15 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 517)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #15 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 517)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #3 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #6 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn writeonly uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly nofree nounwind readonly willreturn }
attributes #14 = { nounwind }
attributes #15 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #16 = { nomerge }
attributes #17 = { cold nounwind }
attributes #18 = { nounwind allocsize(0) }
attributes #19 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !5, !6, !7, !8, !9, !10, !12, !13, !14, !15, !17, !19, !21, !23, !24, !25, !27, !28, !29, !30, !32, !34, !36, !38, !39, !40, !42, !43, !44, !45, !46, !48, !49, !50, !52, !53, !54, !55, !57, !58, !59, !61, !62, !63, !65, !66, !67, !69, !70, !71, !73, !74, !75, !77, !78, !79, !81, !82, !83, !85, !86, !87, !89, !90, !91, !93, !94, !95, !96, !98, !99, !100, !102, !103, !104, !105, !107, !108, !109, !111, !112, !113, !115, !116, !117, !118, !120, !121, !122, !124, !125, !126, !128, !129, !130, !132, !133, !134, !136, !137, !138, !140, !141, !142, !143, !145, !146, !147, !149, !150, !151, !152, !154, !155, !156, !157, !159, !161, !162, !163, !164, !166, !167, !168, !169, !171, !172, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207, !209, !211, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !235, !237, !239, !241, !243, !245, !247, !249, !251, !253, !255, !257, !259, !261, !263, !265, !267, !269, !271, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297, !299, !301, !303, !305, !307, !309, !310, !311, !313, !314, !315, !317, !318, !319, !321, !322, !323, !325, !326, !327, !328, !330, !331, !332, !333, !334, !336, !337, !338, !340, !341, !342, !343, !345, !346, !347, !348, !350, !351, !352, !354, !355, !356, !357, !359, !360, !361, !363, !364, !365, !366, !368, !369, !370, !372, !373, !374, !375, !377, !378, !379, !380, !381, !383, !384, !385, !386, !388, !389, !390, !392, !393, !394, !396, !397, !398, !400, !401, !402, !404, !405, !406, !408, !409, !410, !411, !413, !414, !415, !417, !418, !419, !421, !422, !423, !424, !425, !427, !429, !431, !433, !435, !437, !439, !441, !443, !445, !446, !447, !448, !450, !452, !454, !455, !456, !457, !459, !460, !461, !462, !464, !465, !466, !467, !469, !470, !471, !472, !474, !476, !478, !480, !482, !484, !486, !488, !490, !492, !494, !496, !498, !500, !502, !504, !506, !508, !510, !512, !514, !516, !518, !520, !522, !524, !526, !528, !530, !532, !534, !536, !538, !540, !542, !544, !546, !548, !550, !551, !552, !553, !555, !556, !558, !560, !562, !564, !566, !568, !570, !572, !574, !576, !578, !580, !582, !584, !586, !588, !590, !592, !594, !596, !598, !600, !602, !604, !606, !608, !610, !612, !614, !616, !618, !620, !622, !624, !626, !628, !630, !632, !633, !634, !635, !637, !638, !639, !641, !643, !645, !647, !649, !651, !653, !655, !657, !659, !661, !663, !665, !667, !669, !671, !673, !675, !677, !679, !681, !683, !685, !687, !689, !691, !693, !695, !697, !699, !701, !703, !705, !707, !709, !711, !713, !715, !717, !719, !721, !723, !725, !727, !729, !731, !733, !735, !737, !739, !741, !743, !745, !747, !749, !751, !753, !755, !757, !759, !761, !763, !765, !767, !768, !769, !770, !772, !773, !774, !775, !776, !778, !779, !780, !782, !783, !784, !785, !787, !788, !789, !791, !792, !793, !795, !796, !797, !799, !801, !803, !805, !807, !809, !811, !813, !815, !817, !819, !821, !823, !824, !825, !826, !828, !829, !831, !832, !833, !835, !837, !839, !841, !843, !845, !847, !849, !851, !853, !855, !857, !859, !861, !863, !865, !867, !869, !871, !873, !875, !877, !879, !881, !883, !885, !887, !889, !891, !893, !895, !897, !899, !901, !903, !905, !907, !909, !911, !913, !915, !917, !918, !919, !920, !922, !923, !924, !926, !927, !928, !930, !931, !932, !934, !935, !936, !938, !940, !942, !944, !946, !948, !950, !951, !952, !953, !955, !957, !959, !961, !963, !965, !967, !969, !971, !972, !973, !974, !976, !977, !978, !980, !981, !982}
!llvm.module.flags = !{!983, !984, !985, !986, !987, !988, !989, !990}
!llvm.ident = !{!991}

!0 = !{ptr @t4_wr_mbox_meat_timeout.delay, !1, !"delay", i1 false, i1 false}
!1 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 285, i32 19}
!2 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!3 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 432, i32 2}
!4 = !{ptr @.str.1, !3, !"<string literal>", i1 false, i1 false}
!5 = !{ptr @.str.2, !3, !"<string literal>", i1 false, i1 false}
!6 = !{ptr @.str.3, !3, !"<string literal>", i1 false, i1 false}
!7 = !{ptr @.str.4, !3, !"<string literal>", i1 false, i1 false}
!8 = !{ptr @t4_wr_mbox_meat_timeout._entry, !3, !"_entry", i1 false, i1 false}
!9 = !{ptr @t4_wr_mbox_meat_timeout._entry_ptr, !3, !"_entry_ptr", i1 false, i1 false}
!10 = !{ptr @.str.5, !11, !"<string literal>", i1 false, i1 false}
!11 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 841, i32 2}
!12 = !{ptr @.str.6, !11, !"<string literal>", i1 false, i1 false}
!13 = !{ptr @t4_get_regs_len._entry, !11, !"_entry", i1 false, i1 false}
!14 = !{ptr @t4_get_regs_len._entry_ptr, !11, !"_entry_ptr", i1 false, i1 false}
!15 = !{ptr @t4_get_regs.t4_reg_ranges, !16, !"t4_reg_ranges", i1 false, i1 false}
!16 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 858, i32 28}
!17 = !{ptr @t4_get_regs.t5_reg_ranges, !18, !"t5_reg_ranges", i1 false, i1 false}
!18 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 1317, i32 28}
!19 = !{ptr @t4_get_regs.t6_reg_ranges, !20, !"t6_reg_ranges", i1 false, i1 false}
!20 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2081, i32 28}
!21 = !{ptr @.str.7, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2665, i32 3}
!23 = !{ptr @t4_get_regs._entry, !22, !"_entry", i1 false, i1 false}
!24 = !{ptr @t4_get_regs._entry_ptr, !22, !"_entry_ptr", i1 false, i1 false}
!25 = !{ptr @.str.8, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2774, i32 3}
!27 = !{ptr @.str.9, !26, !"<string literal>", i1 false, i1 false}
!28 = !{ptr @t4_get_raw_vpd_params._entry, !26, !"_entry", i1 false, i1 false}
!29 = !{ptr @t4_get_raw_vpd_params._entry_ptr, !26, !"_entry_ptr", i1 false, i1 false}
!30 = !{ptr @.str.10, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2780, i32 9}
!32 = !{ptr @.str.11, !33, !"<string literal>", i1 false, i1 false}
!33 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2786, i32 9}
!34 = !{ptr @.str.12, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2791, i32 51}
!36 = !{ptr @.str.14, !37, !"<string literal>", i1 false, i1 false}
!37 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 2808, i32 3}
!38 = !{ptr @t4_get_raw_vpd_params._entry.13, !37, !"_entry", i1 false, i1 false}
!39 = !{ptr @t4_get_raw_vpd_params._entry_ptr.15, !37, !"_entry_ptr", i1 false, i1 false}
!40 = !{ptr @.str.16, !41, !"<string literal>", i1 false, i1 false}
!41 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3294, i32 2}
!42 = !{ptr @.str.17, !41, !"<string literal>", i1 false, i1 false}
!43 = !{ptr @.str.18, !41, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @t4_dump_version_info._entry, !41, !"_entry", i1 false, i1 false}
!45 = !{ptr @t4_dump_version_info._entry_ptr, !41, !"_entry_ptr", i1 false, i1 false}
!46 = !{ptr @.str.20, !47, !"<string literal>", i1 false, i1 false}
!47 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3297, i32 2}
!48 = !{ptr @t4_dump_version_info._entry.19, !47, !"_entry", i1 false, i1 false}
!49 = !{ptr @t4_dump_version_info._entry_ptr.21, !47, !"_entry_ptr", i1 false, i1 false}
!50 = !{ptr @.str.23, !51, !"<string literal>", i1 false, i1 false}
!51 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3302, i32 3}
!52 = !{ptr @.str.24, !51, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @t4_dump_version_info._entry.22, !51, !"_entry", i1 false, i1 false}
!54 = !{ptr @t4_dump_version_info._entry_ptr.25, !51, !"_entry_ptr", i1 false, i1 false}
!55 = !{ptr @.str.27, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3304, i32 3}
!57 = !{ptr @t4_dump_version_info._entry.26, !56, !"_entry", i1 false, i1 false}
!58 = !{ptr @t4_dump_version_info._entry_ptr.28, !56, !"_entry_ptr", i1 false, i1 false}
!59 = !{ptr @.str.30, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3314, i32 3}
!61 = !{ptr @t4_dump_version_info._entry.29, !60, !"_entry", i1 false, i1 false}
!62 = !{ptr @t4_dump_version_info._entry_ptr.31, !60, !"_entry_ptr", i1 false, i1 false}
!63 = !{ptr @.str.33, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3316, i32 3}
!65 = !{ptr @t4_dump_version_info._entry.32, !64, !"_entry", i1 false, i1 false}
!66 = !{ptr @t4_dump_version_info._entry_ptr.34, !64, !"_entry_ptr", i1 false, i1 false}
!67 = !{ptr @.str.36, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3324, i32 3}
!69 = !{ptr @t4_dump_version_info._entry.35, !68, !"_entry", i1 false, i1 false}
!70 = !{ptr @t4_dump_version_info._entry_ptr.37, !68, !"_entry_ptr", i1 false, i1 false}
!71 = !{ptr @.str.39, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3326, i32 3}
!73 = !{ptr @t4_dump_version_info._entry.38, !72, !"_entry", i1 false, i1 false}
!74 = !{ptr @t4_dump_version_info._entry_ptr.40, !72, !"_entry_ptr", i1 false, i1 false}
!75 = !{ptr @.str.42, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3335, i32 3}
!77 = !{ptr @t4_dump_version_info._entry.41, !76, !"_entry", i1 false, i1 false}
!78 = !{ptr @t4_dump_version_info._entry_ptr.43, !76, !"_entry_ptr", i1 false, i1 false}
!79 = !{ptr @.str.45, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3337, i32 3}
!81 = !{ptr @t4_dump_version_info._entry.44, !80, !"_entry", i1 false, i1 false}
!82 = !{ptr @t4_dump_version_info._entry_ptr.46, !80, !"_entry_ptr", i1 false, i1 false}
!83 = !{ptr @.str.48, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3345, i32 2}
!85 = !{ptr @t4_dump_version_info._entry.47, !84, !"_entry", i1 false, i1 false}
!86 = !{ptr @t4_dump_version_info._entry_ptr.49, !84, !"_entry_ptr", i1 false, i1 false}
!87 = !{ptr @.str.51, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3349, i32 2}
!89 = !{ptr @t4_dump_version_info._entry.50, !88, !"_entry", i1 false, i1 false}
!90 = !{ptr @t4_dump_version_info._entry_ptr.52, !88, !"_entry_ptr", i1 false, i1 false}
!91 = !{ptr @.str.53, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3396, i32 3}
!93 = !{ptr @.str.54, !92, !"<string literal>", i1 false, i1 false}
!94 = !{ptr @t4_check_fw_version._entry, !92, !"_entry", i1 false, i1 false}
!95 = !{ptr @t4_check_fw_version._entry_ptr, !92, !"_entry_ptr", i1 false, i1 false}
!96 = !{ptr @.str.56, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3403, i32 3}
!98 = !{ptr @t4_check_fw_version._entry.55, !97, !"_entry", i1 false, i1 false}
!99 = !{ptr @t4_check_fw_version._entry_ptr.57, !97, !"_entry_ptr", i1 false, i1 false}
!100 = !{ptr @.str.58, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3481, i32 3}
!102 = !{ptr @.str.59, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @t4_prep_fw._entry, !101, !"_entry", i1 false, i1 false}
!104 = !{ptr @t4_prep_fw._entry_ptr, !101, !"_entry_ptr", i1 false, i1 false}
!105 = !{ptr @.str.61, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3507, i32 4}
!107 = !{ptr @t4_prep_fw._entry.60, !106, !"_entry", i1 false, i1 false}
!108 = !{ptr @t4_prep_fw._entry_ptr.62, !106, !"_entry_ptr", i1 false, i1 false}
!109 = !{ptr @.str.64, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3525, i32 3}
!111 = !{ptr @t4_prep_fw._entry.63, !110, !"_entry", i1 false, i1 false}
!112 = !{ptr @t4_prep_fw._entry_ptr.65, !110, !"_entry_ptr", i1 false, i1 false}
!113 = !{ptr @.str.66, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3638, i32 3}
!115 = !{ptr @.str.67, !114, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @t4_load_fw._entry, !114, !"_entry", i1 false, i1 false}
!117 = !{ptr @t4_load_fw._entry_ptr, !114, !"_entry_ptr", i1 false, i1 false}
!118 = !{ptr @.str.69, !119, !"<string literal>", i1 false, i1 false}
!119 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3642, i32 3}
!120 = !{ptr @t4_load_fw._entry.68, !119, !"_entry", i1 false, i1 false}
!121 = !{ptr @t4_load_fw._entry_ptr.70, !119, !"_entry_ptr", i1 false, i1 false}
!122 = !{ptr @.str.72, !123, !"<string literal>", i1 false, i1 false}
!123 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3647, i32 3}
!124 = !{ptr @t4_load_fw._entry.71, !123, !"_entry", i1 false, i1 false}
!125 = !{ptr @t4_load_fw._entry_ptr.73, !123, !"_entry_ptr", i1 false, i1 false}
!126 = !{ptr @.str.75, !127, !"<string literal>", i1 false, i1 false}
!127 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3652, i32 3}
!128 = !{ptr @t4_load_fw._entry.74, !127, !"_entry", i1 false, i1 false}
!129 = !{ptr @t4_load_fw._entry_ptr.76, !127, !"_entry_ptr", i1 false, i1 false}
!130 = !{ptr @.str.78, !131, !"<string literal>", i1 false, i1 false}
!131 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3663, i32 3}
!132 = !{ptr @t4_load_fw._entry.77, !131, !"_entry", i1 false, i1 false}
!133 = !{ptr @t4_load_fw._entry_ptr.79, !131, !"_entry_ptr", i1 false, i1 false}
!134 = !{ptr @.str.81, !135, !"<string literal>", i1 false, i1 false}
!135 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3698, i32 3}
!136 = !{ptr @t4_load_fw._entry.80, !135, !"_entry", i1 false, i1 false}
!137 = !{ptr @t4_load_fw._entry_ptr.82, !135, !"_entry_ptr", i1 false, i1 false}
!138 = !{ptr @.str.83, !139, !"<string literal>", i1 false, i1 false}
!139 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3773, i32 4}
!140 = !{ptr @.str.84, !139, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @t4_load_phy_fw._entry, !139, !"_entry", i1 false, i1 false}
!142 = !{ptr @t4_load_phy_fw._entry_ptr, !139, !"_entry_ptr", i1 false, i1 false}
!143 = !{ptr @.str.86, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3829, i32 4}
!145 = !{ptr @t4_load_phy_fw._entry.85, !144, !"_entry", i1 false, i1 false}
!146 = !{ptr @t4_load_phy_fw._entry_ptr.87, !144, !"_entry_ptr", i1 false, i1 false}
!147 = !{ptr @.str.88, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4157, i32 3}
!149 = !{ptr @.str.89, !148, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @t4_link_acaps._entry, !148, !"_entry", i1 false, i1 false}
!151 = !{ptr @t4_link_acaps._entry_ptr, !148, !"_entry_ptr", i1 false, i1 false}
!152 = !{ptr @.str.90, !153, !"<string literal>", i1 false, i1 false}
!153 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4224, i32 3}
!154 = !{ptr @.str.91, !153, !"<string literal>", i1 false, i1 false}
!155 = !{ptr @t4_link_l1cfg_core._entry, !153, !"_entry", i1 false, i1 false}
!156 = !{ptr @t4_link_l1cfg_core._entry_ptr, !153, !"_entry_ptr", i1 false, i1 false}
!157 = !{ptr @t4_load_mtus.avg_pkts, !158, !"avg_pkts", i1 false, i1 false}
!158 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 5851, i32 28}
!159 = !{ptr @.str.92, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6147, i32 3}
!161 = !{ptr @.str.93, !160, !"<string literal>", i1 false, i1 false}
!162 = !{ptr @t4_get_mps_bg_map._entry, !160, !"_entry", i1 false, i1 false}
!163 = !{ptr @t4_get_mps_bg_map._entry_ptr, !160, !"_entry_ptr", i1 false, i1 false}
!164 = !{ptr @.str.94, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6243, i32 3}
!166 = !{ptr @.str.95, !165, !"<string literal>", i1 false, i1 false}
!167 = !{ptr @t4_get_tp_ch_map._entry, !165, !"_entry", i1 false, i1 false}
!168 = !{ptr @t4_get_tp_ch_map._entry_ptr, !165, !"_entry_ptr", i1 false, i1 false}
!169 = !{ptr @.str.97, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6270, i32 2}
!171 = !{ptr @t4_get_tp_ch_map._entry.96, !170, !"_entry", i1 false, i1 false}
!172 = !{ptr @t4_get_tp_ch_map._entry_ptr.98, !170, !"_entry_ptr", i1 false, i1 false}
!173 = !{ptr @.str.99, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6282, i32 3}
!175 = !{ptr @.str.100, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6283, i32 3}
!177 = !{ptr @.str.101, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6284, i32 3}
!179 = !{ptr @.str.102, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6285, i32 3}
!181 = !{ptr @.str.103, !182, !"<string literal>", i1 false, i1 false}
!182 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6286, i32 3}
!183 = !{ptr @.str.104, !184, !"<string literal>", i1 false, i1 false}
!184 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6287, i32 3}
!185 = !{ptr @.str.105, !186, !"<string literal>", i1 false, i1 false}
!186 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6288, i32 3}
!187 = !{ptr @.str.106, !188, !"<string literal>", i1 false, i1 false}
!188 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6289, i32 3}
!189 = !{ptr @.str.107, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6290, i32 3}
!191 = !{ptr @.str.108, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6291, i32 3}
!193 = !{ptr @.str.109, !194, !"<string literal>", i1 false, i1 false}
!194 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6292, i32 3}
!195 = !{ptr @.str.110, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6293, i32 3}
!197 = !{ptr @.str.111, !198, !"<string literal>", i1 false, i1 false}
!198 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6294, i32 3}
!199 = !{ptr @.str.112, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6295, i32 3}
!201 = !{ptr @.str.113, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6296, i32 3}
!203 = !{ptr @.str.114, !204, !"<string literal>", i1 false, i1 false}
!204 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6297, i32 3}
!205 = !{ptr @.str.115, !206, !"<string literal>", i1 false, i1 false}
!206 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6298, i32 3}
!207 = !{ptr @.str.116, !208, !"<string literal>", i1 false, i1 false}
!208 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6299, i32 3}
!209 = !{ptr @.str.117, !210, !"<string literal>", i1 false, i1 false}
!210 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6300, i32 3}
!211 = !{ptr @.str.118, !212, !"<string literal>", i1 false, i1 false}
!212 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6301, i32 3}
!213 = !{ptr @.str.119, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6302, i32 3}
!215 = !{ptr @.str.120, !216, !"<string literal>", i1 false, i1 false}
!216 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6303, i32 3}
!217 = !{ptr @.str.121, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6304, i32 3}
!219 = !{ptr @t4_get_port_type_description.port_type_description, !220, !"port_type_description", i1 false, i1 false}
!220 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6281, i32 27}
!221 = !{ptr @.str.122, !222, !"<string literal>", i1 false, i1 false}
!222 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6309, i32 9}
!223 = !{ptr @.str.123, !224, !"<string literal>", i1 false, i1 false}
!224 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6599, i32 3}
!225 = !{ptr @.str.124, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6600, i32 3}
!227 = !{ptr @.str.125, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6601, i32 3}
!229 = !{ptr @.str.126, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6602, i32 3}
!231 = !{ptr @.str.127, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6603, i32 3}
!233 = !{ptr @.str.128, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6604, i32 3}
!235 = !{ptr @.str.129, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6605, i32 3}
!237 = !{ptr @.str.130, !238, !"<string literal>", i1 false, i1 false}
!238 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6606, i32 3}
!239 = !{ptr @.str.131, !240, !"<string literal>", i1 false, i1 false}
!240 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6607, i32 3}
!241 = !{ptr @.str.132, !242, !"<string literal>", i1 false, i1 false}
!242 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6608, i32 3}
!243 = !{ptr @.str.133, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6609, i32 3}
!245 = !{ptr @.str.134, !246, !"<string literal>", i1 false, i1 false}
!246 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6610, i32 3}
!247 = !{ptr @.str.135, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6611, i32 3}
!249 = !{ptr @.str.136, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6612, i32 3}
!251 = !{ptr @.str.137, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6613, i32 3}
!253 = !{ptr @.str.138, !254, !"<string literal>", i1 false, i1 false}
!254 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6614, i32 3}
!255 = !{ptr @.str.139, !256, !"<string literal>", i1 false, i1 false}
!256 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6615, i32 3}
!257 = !{ptr @.str.140, !258, !"<string literal>", i1 false, i1 false}
!258 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6616, i32 3}
!259 = !{ptr @.str.141, !260, !"<string literal>", i1 false, i1 false}
!260 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6617, i32 3}
!261 = !{ptr @.str.142, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6618, i32 3}
!263 = !{ptr @.str.143, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6619, i32 3}
!265 = !{ptr @.str.144, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6620, i32 3}
!267 = !{ptr @.str.145, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6621, i32 3}
!269 = !{ptr @.str.146, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6622, i32 3}
!271 = !{ptr @.str.147, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6623, i32 3}
!273 = !{ptr @.str.148, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6624, i32 3}
!275 = !{ptr @.str.149, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6625, i32 3}
!277 = !{ptr @.str.150, !278, !"<string literal>", i1 false, i1 false}
!278 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6626, i32 3}
!279 = !{ptr @.str.151, !280, !"<string literal>", i1 false, i1 false}
!280 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6627, i32 3}
!281 = !{ptr @.str.152, !282, !"<string literal>", i1 false, i1 false}
!282 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6628, i32 3}
!283 = !{ptr @.str.153, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6629, i32 3}
!285 = !{ptr @.str.154, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6630, i32 3}
!287 = !{ptr @.str.155, !288, !"<string literal>", i1 false, i1 false}
!288 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6631, i32 3}
!289 = !{ptr @.str.156, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6632, i32 3}
!291 = !{ptr @.str.157, !292, !"<string literal>", i1 false, i1 false}
!292 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6633, i32 3}
!293 = !{ptr @t4_sge_decode_idma_state.t4_decode, !294, !"t4_decode", i1 false, i1 false}
!294 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6598, i32 28}
!295 = !{ptr @.str.158, !296, !"<string literal>", i1 false, i1 false}
!296 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6637, i32 3}
!297 = !{ptr @.str.159, !298, !"<string literal>", i1 false, i1 false}
!298 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6640, i32 3}
!299 = !{ptr @.str.160, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6647, i32 3}
!301 = !{ptr @t4_sge_decode_idma_state.t5_decode, !302, !"t5_decode", i1 false, i1 false}
!302 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6635, i32 28}
!303 = distinct !{null, !304, !"t6_decode", i1 false, i1 false}
!304 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6670, i32 28}
!305 = distinct !{null, !306, !"sge_regs", i1 false, i1 false}
!306 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6703, i32 19}
!307 = !{ptr @.str.161, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6733, i32 3}
!309 = !{ptr @t4_sge_decode_idma_state._entry, !308, !"_entry", i1 false, i1 false}
!310 = !{ptr @t4_sge_decode_idma_state._entry_ptr, !308, !"_entry_ptr", i1 false, i1 false}
!311 = !{ptr @.str.163, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6747, i32 3}
!313 = !{ptr @t4_sge_decode_idma_state._entry.162, !312, !"_entry", i1 false, i1 false}
!314 = !{ptr @t4_sge_decode_idma_state._entry_ptr.164, !312, !"_entry_ptr", i1 false, i1 false}
!315 = !{ptr @.str.166, !316, !"<string literal>", i1 false, i1 false}
!316 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6749, i32 3}
!317 = !{ptr @t4_sge_decode_idma_state._entry.165, !316, !"_entry", i1 false, i1 false}
!318 = !{ptr @t4_sge_decode_idma_state._entry_ptr.167, !316, !"_entry_ptr", i1 false, i1 false}
!319 = !{ptr @.str.169, !320, !"<string literal>", i1 false, i1 false}
!320 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6752, i32 3}
!321 = !{ptr @t4_sge_decode_idma_state._entry.168, !320, !"_entry", i1 false, i1 false}
!322 = !{ptr @t4_sge_decode_idma_state._entry_ptr.170, !320, !"_entry_ptr", i1 false, i1 false}
!323 = !{ptr @.str.171, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8612, i32 3}
!325 = !{ptr @.str.172, !324, !"<string literal>", i1 false, i1 false}
!326 = !{ptr @t4_handle_get_port_info._entry, !324, !"_entry", i1 false, i1 false}
!327 = !{ptr @t4_handle_get_port_info._entry_ptr, !324, !"_entry_ptr", i1 false, i1 false}
!328 = !{ptr @.str.173, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8680, i32 4}
!330 = !{ptr @t4_handle_get_port_info._rs, !329, !"_rs", i1 false, i1 false}
!331 = !{ptr @.str.175, !329, !"<string literal>", i1 false, i1 false}
!332 = !{ptr @t4_handle_get_port_info._entry.174, !329, !"_entry", i1 false, i1 false}
!333 = !{ptr @t4_handle_get_port_info._entry_ptr.176, !329, !"_entry_ptr", i1 false, i1 false}
!334 = !{ptr @.str.178, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8733, i32 4}
!336 = !{ptr @t4_handle_get_port_info._entry.177, !335, !"_entry", i1 false, i1 false}
!337 = !{ptr @t4_handle_get_port_info._entry_ptr.179, !335, !"_entry_ptr", i1 false, i1 false}
!338 = !{ptr @.str.180, !339, !"<string literal>", i1 false, i1 false}
!339 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8869, i32 3}
!340 = !{ptr @.str.181, !339, !"<string literal>", i1 false, i1 false}
!341 = !{ptr @t4_handle_fw_rpl._entry, !339, !"_entry", i1 false, i1 false}
!342 = !{ptr @t4_handle_fw_rpl._entry_ptr, !339, !"_entry_ptr", i1 false, i1 false}
!343 = !{ptr @.str.182, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9122, i32 3}
!345 = !{ptr @.str.183, !344, !"<string literal>", i1 false, i1 false}
!346 = !{ptr @t4_prep_adapter._entry, !344, !"_entry", i1 false, i1 false}
!347 = !{ptr @t4_prep_adapter._entry_ptr, !344, !"_entry_ptr", i1 false, i1 false}
!348 = !{ptr @.str.185, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9172, i32 3}
!350 = !{ptr @t4_prep_adapter._entry.184, !349, !"_entry", i1 false, i1 false}
!351 = !{ptr @t4_prep_adapter._entry_ptr.186, !349, !"_entry_ptr", i1 false, i1 false}
!352 = !{ptr @.str.187, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9432, i32 3}
!354 = !{ptr @.str.188, !353, !"<string literal>", i1 false, i1 false}
!355 = !{ptr @t4_init_tp_params._entry, !353, !"_entry", i1 false, i1 false}
!356 = !{ptr @t4_init_tp_params._entry_ptr, !353, !"_entry_ptr", i1 false, i1 false}
!357 = !{ptr @.str.190, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9441, i32 3}
!359 = !{ptr @t4_init_tp_params._entry.189, !358, !"_entry", i1 false, i1 false}
!360 = !{ptr @t4_init_tp_params._entry_ptr.191, !358, !"_entry_ptr", i1 false, i1 false}
!361 = !{ptr @.str.192, !362, !"<string literal>", i1 false, i1 false}
!362 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10098, i32 5}
!363 = !{ptr @.str.193, !362, !"<string literal>", i1 false, i1 false}
!364 = !{ptr @t4_idma_monitor._entry, !362, !"_entry", i1 false, i1 false}
!365 = !{ptr @t4_idma_monitor._entry_ptr, !362, !"_entry_ptr", i1 false, i1 false}
!366 = !{ptr @.str.195, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10144, i32 3}
!368 = !{ptr @t4_idma_monitor._entry.194, !367, !"_entry", i1 false, i1 false}
!369 = !{ptr @t4_idma_monitor._entry_ptr.196, !367, !"_entry_ptr", i1 false, i1 false}
!370 = !{ptr @.str.197, !371, !"<string literal>", i1 false, i1 false}
!371 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10176, i32 3}
!372 = !{ptr @.str.198, !371, !"<string literal>", i1 false, i1 false}
!373 = !{ptr @t4_load_cfg._entry, !371, !"_entry", i1 false, i1 false}
!374 = !{ptr @t4_load_cfg._entry_ptr, !371, !"_entry_ptr", i1 false, i1 false}
!375 = !{ptr @.str.200, !376, !"<string literal>", i1 false, i1 false}
!376 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10207, i32 3}
!377 = !{ptr @t4_load_cfg._entry.199, !376, !"_entry", i1 false, i1 false}
!378 = !{ptr @t4_load_cfg._entry_ptr.201, !376, !"_entry_ptr", i1 false, i1 false}
!379 = !{ptr @.str.202, !376, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @.str.203, !376, !"<string literal>", i1 false, i1 false}
!381 = !{ptr @.str.204, !382, !"<string literal>", i1 false, i1 false}
!382 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10590, i32 3}
!383 = !{ptr @.str.205, !382, !"<string literal>", i1 false, i1 false}
!384 = !{ptr @t4_load_boot._entry, !382, !"_entry", i1 false, i1 false}
!385 = !{ptr @t4_load_boot._entry_ptr, !382, !"_entry_ptr", i1 false, i1 false}
!386 = !{ptr @.str.207, !387, !"<string literal>", i1 false, i1 false}
!387 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10606, i32 3}
!388 = !{ptr @t4_load_boot._entry.206, !387, !"_entry", i1 false, i1 false}
!389 = !{ptr @t4_load_boot._entry_ptr.208, !387, !"_entry_ptr", i1 false, i1 false}
!390 = !{ptr @.str.210, !391, !"<string literal>", i1 false, i1 false}
!391 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10611, i32 3}
!392 = !{ptr @t4_load_boot._entry.209, !391, !"_entry", i1 false, i1 false}
!393 = !{ptr @t4_load_boot._entry_ptr.211, !391, !"_entry_ptr", i1 false, i1 false}
!394 = !{ptr @.str.213, !395, !"<string literal>", i1 false, i1 false}
!395 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10617, i32 3}
!396 = !{ptr @t4_load_boot._entry.212, !395, !"_entry", i1 false, i1 false}
!397 = !{ptr @t4_load_boot._entry_ptr.214, !395, !"_entry_ptr", i1 false, i1 false}
!398 = !{ptr @.str.216, !399, !"<string literal>", i1 false, i1 false}
!399 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10623, i32 3}
!400 = !{ptr @t4_load_boot._entry.215, !399, !"_entry", i1 false, i1 false}
!401 = !{ptr @t4_load_boot._entry_ptr.217, !399, !"_entry_ptr", i1 false, i1 false}
!402 = !{ptr @.str.219, !403, !"<string literal>", i1 false, i1 false}
!403 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10677, i32 3}
!404 = !{ptr @t4_load_boot._entry.218, !403, !"_entry", i1 false, i1 false}
!405 = !{ptr @t4_load_boot._entry_ptr.220, !403, !"_entry_ptr", i1 false, i1 false}
!406 = !{ptr @.str.221, !407, !"<string literal>", i1 false, i1 false}
!407 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10720, i32 3}
!408 = !{ptr @.str.222, !407, !"<string literal>", i1 false, i1 false}
!409 = !{ptr @t4_load_bootcfg._entry, !407, !"_entry", i1 false, i1 false}
!410 = !{ptr @t4_load_bootcfg._entry_ptr, !407, !"_entry_ptr", i1 false, i1 false}
!411 = !{ptr @.str.224, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10727, i32 3}
!413 = !{ptr @t4_load_bootcfg._entry.223, !412, !"_entry", i1 false, i1 false}
!414 = !{ptr @t4_load_bootcfg._entry_ptr.225, !412, !"_entry_ptr", i1 false, i1 false}
!415 = !{ptr @.str.227, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 10768, i32 3}
!417 = !{ptr @t4_load_bootcfg._entry.226, !416, !"_entry", i1 false, i1 false}
!418 = !{ptr @t4_load_bootcfg._entry_ptr.228, !416, !"_entry_ptr", i1 false, i1 false}
!419 = !{ptr @.str.229, !420, !"<string literal>", i1 false, i1 false}
!420 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 223, i32 2}
!421 = !{ptr @.str.230, !420, !"<string literal>", i1 false, i1 false}
!422 = !{ptr @.str.231, !420, !"<string literal>", i1 false, i1 false}
!423 = !{ptr @fw_asrt._entry, !420, !"_entry", i1 false, i1 false}
!424 = !{ptr @fw_asrt._entry_ptr, !420, !"_entry_ptr", i1 false, i1 false}
!425 = !{ptr @.str.232, !426, !"<string literal>", i1 false, i1 false}
!426 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 186, i32 3}
!427 = !{ptr @.str.233, !428, !"<string literal>", i1 false, i1 false}
!428 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 187, i32 3}
!429 = !{ptr @.str.234, !430, !"<string literal>", i1 false, i1 false}
!430 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 188, i32 3}
!431 = !{ptr @.str.235, !432, !"<string literal>", i1 false, i1 false}
!432 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 189, i32 3}
!433 = !{ptr @.str.236, !434, !"<string literal>", i1 false, i1 false}
!434 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 190, i32 3}
!435 = !{ptr @.str.237, !436, !"<string literal>", i1 false, i1 false}
!436 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 191, i32 3}
!437 = !{ptr @.str.238, !438, !"<string literal>", i1 false, i1 false}
!438 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 192, i32 3}
!439 = !{ptr @.str.239, !440, !"<string literal>", i1 false, i1 false}
!440 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 193, i32 3}
!441 = !{ptr @t4_report_fw_error.reason, !442, !"reason", i1 false, i1 false}
!442 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 185, i32 27}
!443 = !{ptr @.str.240, !444, !"<string literal>", i1 false, i1 false}
!444 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 199, i32 3}
!445 = !{ptr @.str.241, !444, !"<string literal>", i1 false, i1 false}
!446 = !{ptr @t4_report_fw_error._entry, !444, !"_entry", i1 false, i1 false}
!447 = !{ptr @t4_report_fw_error._entry_ptr, !444, !"_entry_ptr", i1 false, i1 false}
!448 = !{ptr @.str.242, !449, !"<string literal>", i1 false, i1 false}
!449 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3441, i32 12}
!450 = !{ptr @.str.243, !451, !"<string literal>", i1 false, i1 false}
!451 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3446, i32 12}
!452 = !{ptr @.str.244, !453, !"<string literal>", i1 false, i1 false}
!453 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3453, i32 2}
!454 = !{ptr @.str.245, !453, !"<string literal>", i1 false, i1 false}
!455 = !{ptr @should_install_fs_fw._entry, !453, !"_entry", i1 false, i1 false}
!456 = !{ptr @should_install_fs_fw._entry_ptr, !453, !"_entry_ptr", i1 false, i1 false}
!457 = !{ptr @.str.246, !458, !"<string literal>", i1 false, i1 false}
!458 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3610, i32 2}
!459 = !{ptr @.str.247, !458, !"<string literal>", i1 false, i1 false}
!460 = !{ptr @t4_fw_matches_chip._entry, !458, !"_entry", i1 false, i1 false}
!461 = !{ptr @t4_fw_matches_chip._entry_ptr, !458, !"_entry_ptr", i1 false, i1 false}
!462 = !{ptr @.str.248, !463, !"<string literal>", i1 false, i1 false}
!463 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3568, i32 4}
!464 = !{ptr @.str.249, !463, !"<string literal>", i1 false, i1 false}
!465 = !{ptr @t4_flash_erase_sectors._entry, !463, !"_entry", i1 false, i1 false}
!466 = !{ptr @t4_flash_erase_sectors._entry_ptr, !463, !"_entry_ptr", i1 false, i1 false}
!467 = !{ptr @.str.250, !468, !"<string literal>", i1 false, i1 false}
!468 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 3089, i32 3}
!469 = !{ptr @.str.251, !468, !"<string literal>", i1 false, i1 false}
!470 = !{ptr @t4_write_flash._entry, !468, !"_entry", i1 false, i1 false}
!471 = !{ptr @t4_write_flash._entry_ptr, !468, !"_entry_ptr", i1 false, i1 false}
!472 = !{ptr @.str.252, !473, !"<string literal>", i1 false, i1 false}
!473 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4541, i32 20}
!474 = !{ptr @.str.253, !475, !"<string literal>", i1 false, i1 false}
!475 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4542, i32 19}
!476 = !{ptr @.str.254, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4543, i32 19}
!478 = !{ptr @.str.255, !479, !"<string literal>", i1 false, i1 false}
!479 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4544, i32 19}
!480 = !{ptr @.str.256, !481, !"<string literal>", i1 false, i1 false}
!481 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4545, i32 21}
!482 = !{ptr @.str.257, !483, !"<string literal>", i1 false, i1 false}
!483 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4546, i32 24}
!484 = !{ptr @.str.258, !485, !"<string literal>", i1 false, i1 false}
!485 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4547, i32 25}
!486 = !{ptr @.str.259, !487, !"<string literal>", i1 false, i1 false}
!487 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4548, i32 18}
!488 = !{ptr @cim_intr_handler.cim_intr_info, !489, !"cim_intr_info", i1 false, i1 false}
!489 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4540, i32 32}
!490 = !{ptr @.str.260, !491, !"<string literal>", i1 false, i1 false}
!491 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4552, i32 21}
!492 = !{ptr @.str.261, !493, !"<string literal>", i1 false, i1 false}
!493 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4553, i32 20}
!494 = !{ptr @.str.262, !495, !"<string literal>", i1 false, i1 false}
!495 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4554, i32 17}
!496 = !{ptr @.str.263, !497, !"<string literal>", i1 false, i1 false}
!497 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4555, i32 17}
!498 = !{ptr @.str.264, !499, !"<string literal>", i1 false, i1 false}
!499 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4556, i32 19}
!500 = !{ptr @.str.265, !501, !"<string literal>", i1 false, i1 false}
!501 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4557, i32 19}
!502 = !{ptr @.str.266, !503, !"<string literal>", i1 false, i1 false}
!503 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4558, i32 21}
!504 = !{ptr @.str.267, !505, !"<string literal>", i1 false, i1 false}
!505 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4559, i32 21}
!506 = !{ptr @.str.268, !507, !"<string literal>", i1 false, i1 false}
!507 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4560, i32 21}
!508 = !{ptr @.str.269, !509, !"<string literal>", i1 false, i1 false}
!509 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4561, i32 22}
!510 = !{ptr @.str.270, !511, !"<string literal>", i1 false, i1 false}
!511 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4562, i32 22}
!512 = !{ptr @.str.271, !513, !"<string literal>", i1 false, i1 false}
!513 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4563, i32 22}
!514 = !{ptr @.str.272, !515, !"<string literal>", i1 false, i1 false}
!515 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4564, i32 23}
!516 = !{ptr @.str.273, !517, !"<string literal>", i1 false, i1 false}
!517 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4565, i32 23}
!518 = !{ptr @.str.274, !519, !"<string literal>", i1 false, i1 false}
!519 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4566, i32 23}
!520 = !{ptr @.str.275, !521, !"<string literal>", i1 false, i1 false}
!521 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4567, i32 23}
!522 = !{ptr @.str.276, !523, !"<string literal>", i1 false, i1 false}
!523 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4568, i32 20}
!524 = !{ptr @.str.277, !525, !"<string literal>", i1 false, i1 false}
!525 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4569, i32 20}
!526 = !{ptr @.str.278, !527, !"<string literal>", i1 false, i1 false}
!527 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4570, i32 20}
!528 = !{ptr @.str.279, !529, !"<string literal>", i1 false, i1 false}
!529 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4571, i32 20}
!530 = !{ptr @.str.280, !531, !"<string literal>", i1 false, i1 false}
!531 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4572, i32 19}
!532 = !{ptr @.str.281, !533, !"<string literal>", i1 false, i1 false}
!533 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4573, i32 19}
!534 = !{ptr @.str.282, !535, !"<string literal>", i1 false, i1 false}
!535 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4574, i32 19}
!536 = !{ptr @.str.283, !537, !"<string literal>", i1 false, i1 false}
!537 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4575, i32 19}
!538 = !{ptr @.str.284, !539, !"<string literal>", i1 false, i1 false}
!539 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4576, i32 24}
!540 = !{ptr @.str.285, !541, !"<string literal>", i1 false, i1 false}
!541 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4577, i32 24}
!542 = !{ptr @.str.286, !543, !"<string literal>", i1 false, i1 false}
!543 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4578, i32 19}
!544 = !{ptr @.str.287, !545, !"<string literal>", i1 false, i1 false}
!545 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4579, i32 21}
!546 = !{ptr @cim_intr_handler.cim_upintr_info, !547, !"cim_upintr_info", i1 false, i1 false}
!547 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4551, i32 32}
!548 = !{ptr @.str.288, !549, !"<string literal>", i1 false, i1 false}
!549 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4296, i32 4}
!550 = !{ptr @.str.289, !549, !"<string literal>", i1 false, i1 false}
!551 = !{ptr @t4_handle_intr_status._entry, !549, !"_entry", i1 false, i1 false}
!552 = !{ptr @t4_handle_intr_status._entry_ptr, !549, !"_entry_ptr", i1 false, i1 false}
!553 = !{ptr @t4_handle_intr_status._entry.290, !554, !"_entry", i1 false, i1 false}
!554 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4299, i32 4}
!555 = !{ptr @t4_handle_intr_status._entry_ptr.291, !554, !"_entry_ptr", i1 false, i1 false}
!556 = !{ptr @.str.292, !557, !"<string literal>", i1 false, i1 false}
!557 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4749, i32 15}
!558 = !{ptr @mps_intr_handler.mps_rx_intr_info, !559, !"mps_rx_intr_info", i1 false, i1 false}
!559 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4748, i32 32}
!560 = !{ptr @.str.293, !561, !"<string literal>", i1 false, i1 false}
!561 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4753, i32 25}
!562 = !{ptr @.str.294, !563, !"<string literal>", i1 false, i1 false}
!563 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4754, i32 17}
!564 = !{ptr @.str.295, !565, !"<string literal>", i1 false, i1 false}
!565 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4755, i32 33}
!566 = !{ptr @.str.296, !567, !"<string literal>", i1 false, i1 false}
!567 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4757, i32 33}
!568 = !{ptr @.str.297, !569, !"<string literal>", i1 false, i1 false}
!569 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4759, i32 15}
!570 = !{ptr @.str.298, !571, !"<string literal>", i1 false, i1 false}
!571 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4760, i32 17}
!572 = !{ptr @.str.299, !573, !"<string literal>", i1 false, i1 false}
!573 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4761, i32 15}
!574 = !{ptr @mps_intr_handler.mps_tx_intr_info, !575, !"mps_tx_intr_info", i1 false, i1 false}
!575 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4752, i32 32}
!576 = !{ptr @mps_intr_handler.t6_mps_tx_intr_info, !577, !"t6_mps_tx_intr_info", i1 false, i1 false}
!577 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4764, i32 32}
!578 = !{ptr @.str.300, !579, !"<string literal>", i1 false, i1 false}
!579 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4777, i32 27}
!580 = !{ptr @.str.301, !581, !"<string literal>", i1 false, i1 false}
!581 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4778, i32 27}
!582 = !{ptr @.str.302, !583, !"<string literal>", i1 false, i1 false}
!583 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4780, i32 17}
!584 = !{ptr @mps_intr_handler.mps_trc_intr_info, !585, !"mps_trc_intr_info", i1 false, i1 false}
!585 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4776, i32 32}
!586 = !{ptr @.str.303, !587, !"<string literal>", i1 false, i1 false}
!587 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4784, i32 15}
!588 = !{ptr @mps_intr_handler.mps_stat_sram_intr_info, !589, !"mps_stat_sram_intr_info", i1 false, i1 false}
!589 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4783, i32 32}
!590 = !{ptr @.str.304, !591, !"<string literal>", i1 false, i1 false}
!591 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4788, i32 14}
!592 = !{ptr @mps_intr_handler.mps_stat_tx_intr_info, !593, !"mps_stat_tx_intr_info", i1 false, i1 false}
!593 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4787, i32 32}
!594 = !{ptr @.str.305, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4792, i32 15}
!596 = !{ptr @mps_intr_handler.mps_stat_rx_intr_info, !597, !"mps_stat_rx_intr_info", i1 false, i1 false}
!597 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4791, i32 32}
!598 = !{ptr @.str.306, !599, !"<string literal>", i1 false, i1 false}
!599 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4796, i32 18}
!600 = !{ptr @.str.307, !601, !"<string literal>", i1 false, i1 false}
!601 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4797, i32 18}
!602 = !{ptr @.str.308, !603, !"<string literal>", i1 false, i1 false}
!603 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4798, i32 17}
!604 = !{ptr @mps_intr_handler.mps_cls_intr_info, !605, !"mps_cls_intr_info", i1 false, i1 false}
!605 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4795, i32 32}
!606 = !{ptr @.str.309, !607, !"<string literal>", i1 false, i1 false}
!607 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4929, i32 24}
!608 = !{ptr @.str.310, !609, !"<string literal>", i1 false, i1 false}
!609 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4930, i32 24}
!610 = !{ptr @.str.311, !611, !"<string literal>", i1 false, i1 false}
!611 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4931, i32 24}
!612 = !{ptr @.str.312, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4932, i32 24}
!614 = !{ptr @ncsi_intr_handler.ncsi_intr_info, !615, !"ncsi_intr_info", i1 false, i1 false}
!615 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4928, i32 32}
!616 = !{ptr @.str.313, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4974, i32 18}
!618 = !{ptr @.str.314, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4975, i32 17}
!620 = !{ptr @pl_intr_handler.pl_intr_info, !621, !"pl_intr_info", i1 false, i1 false}
!621 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4973, i32 32}
!622 = !{ptr @.str.315, !623, !"<string literal>", i1 false, i1 false}
!623 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4913, i32 24}
!624 = !{ptr @.str.316, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4914, i32 24}
!626 = !{ptr @.str.317, !627, !"<string literal>", i1 false, i1 false}
!627 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4915, i32 22}
!628 = !{ptr @smb_intr_handler.smb_intr_info, !629, !"smb_intr_info", i1 false, i1 false}
!629 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4912, i32 32}
!630 = !{ptr @.str.318, !631, !"<string literal>", i1 false, i1 false}
!631 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4959, i32 3}
!632 = !{ptr @.str.319, !631, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @xgmac_intr_handler._entry, !631, !"_entry", i1 false, i1 false}
!634 = !{ptr @xgmac_intr_handler._entry_ptr, !631, !"_entry_ptr", i1 false, i1 false}
!635 = !{ptr @.str.321, !636, !"<string literal>", i1 false, i1 false}
!636 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4962, i32 3}
!637 = !{ptr @xgmac_intr_handler._entry.320, !636, !"_entry", i1 false, i1 false}
!638 = !{ptr @xgmac_intr_handler._entry_ptr.322, !636, !"_entry_ptr", i1 false, i1 false}
!639 = !{ptr @.str.323, !640, !"<string literal>", i1 false, i1 false}
!640 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4317, i32 13}
!641 = !{ptr @.str.324, !642, !"<string literal>", i1 false, i1 false}
!642 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4318, i32 13}
!643 = !{ptr @.str.325, !644, !"<string literal>", i1 false, i1 false}
!644 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4319, i32 13}
!645 = !{ptr @.str.326, !646, !"<string literal>", i1 false, i1 false}
!646 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4320, i32 13}
!647 = !{ptr @.str.327, !648, !"<string literal>", i1 false, i1 false}
!648 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4321, i32 13}
!649 = !{ptr @pcie_intr_handler.sysbus_intr_info, !650, !"sysbus_intr_info", i1 false, i1 false}
!650 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4316, i32 32}
!651 = !{ptr @.str.328, !652, !"<string literal>", i1 false, i1 false}
!652 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4325, i32 13}
!653 = !{ptr @.str.329, !654, !"<string literal>", i1 false, i1 false}
!654 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4326, i32 13}
!655 = !{ptr @.str.330, !656, !"<string literal>", i1 false, i1 false}
!656 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4327, i32 13}
!657 = !{ptr @.str.331, !658, !"<string literal>", i1 false, i1 false}
!658 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4328, i32 13}
!659 = !{ptr @.str.332, !660, !"<string literal>", i1 false, i1 false}
!660 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4329, i32 13}
!661 = !{ptr @.str.333, !662, !"<string literal>", i1 false, i1 false}
!662 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4330, i32 13}
!663 = !{ptr @.str.334, !664, !"<string literal>", i1 false, i1 false}
!664 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4331, i32 13}
!665 = !{ptr @.str.335, !666, !"<string literal>", i1 false, i1 false}
!666 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4332, i32 13}
!667 = !{ptr @.str.336, !668, !"<string literal>", i1 false, i1 false}
!668 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4333, i32 13}
!669 = !{ptr @pcie_intr_handler.pcie_port_intr_info, !670, !"pcie_port_intr_info", i1 false, i1 false}
!670 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4324, i32 32}
!671 = !{ptr @.str.337, !672, !"<string literal>", i1 false, i1 false}
!672 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4337, i32 21}
!673 = !{ptr @.str.338, !674, !"<string literal>", i1 false, i1 false}
!674 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4338, i32 21}
!675 = !{ptr @.str.339, !676, !"<string literal>", i1 false, i1 false}
!676 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4339, i32 20}
!677 = !{ptr @.str.340, !678, !"<string literal>", i1 false, i1 false}
!678 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4340, i32 22}
!679 = !{ptr @.str.341, !680, !"<string literal>", i1 false, i1 false}
!680 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4341, i32 22}
!681 = !{ptr @.str.342, !682, !"<string literal>", i1 false, i1 false}
!682 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4342, i32 21}
!683 = !{ptr @.str.343, !684, !"<string literal>", i1 false, i1 false}
!684 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4343, i32 19}
!685 = !{ptr @.str.344, !686, !"<string literal>", i1 false, i1 false}
!686 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4344, i32 19}
!687 = !{ptr @.str.345, !688, !"<string literal>", i1 false, i1 false}
!688 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4345, i32 19}
!689 = !{ptr @.str.346, !690, !"<string literal>", i1 false, i1 false}
!690 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4346, i32 19}
!691 = !{ptr @.str.347, !692, !"<string literal>", i1 false, i1 false}
!692 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4347, i32 17}
!693 = !{ptr @.str.348, !694, !"<string literal>", i1 false, i1 false}
!694 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4348, i32 17}
!695 = !{ptr @.str.349, !696, !"<string literal>", i1 false, i1 false}
!696 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4349, i32 17}
!697 = !{ptr @.str.350, !698, !"<string literal>", i1 false, i1 false}
!698 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4350, i32 17}
!699 = !{ptr @.str.351, !700, !"<string literal>", i1 false, i1 false}
!700 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4351, i32 17}
!701 = !{ptr @.str.352, !702, !"<string literal>", i1 false, i1 false}
!702 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4352, i32 17}
!703 = !{ptr @.str.353, !704, !"<string literal>", i1 false, i1 false}
!704 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4353, i32 17}
!705 = !{ptr @.str.354, !706, !"<string literal>", i1 false, i1 false}
!706 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4354, i32 17}
!707 = !{ptr @.str.355, !708, !"<string literal>", i1 false, i1 false}
!708 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4355, i32 17}
!709 = !{ptr @.str.356, !710, !"<string literal>", i1 false, i1 false}
!710 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4356, i32 19}
!711 = !{ptr @.str.357, !712, !"<string literal>", i1 false, i1 false}
!712 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4357, i32 16}
!713 = !{ptr @.str.358, !714, !"<string literal>", i1 false, i1 false}
!714 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4358, i32 20}
!715 = !{ptr @.str.359, !716, !"<string literal>", i1 false, i1 false}
!716 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4359, i32 18}
!717 = !{ptr @.str.360, !718, !"<string literal>", i1 false, i1 false}
!718 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4360, i32 19}
!719 = !{ptr @.str.361, !720, !"<string literal>", i1 false, i1 false}
!720 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4361, i32 18}
!721 = !{ptr @.str.362, !722, !"<string literal>", i1 false, i1 false}
!722 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4362, i32 17}
!723 = !{ptr @.str.363, !724, !"<string literal>", i1 false, i1 false}
!724 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4363, i32 16}
!725 = !{ptr @.str.364, !726, !"<string literal>", i1 false, i1 false}
!726 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4364, i32 17}
!727 = !{ptr @.str.365, !728, !"<string literal>", i1 false, i1 false}
!728 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4365, i32 17}
!729 = !{ptr @.str.366, !730, !"<string literal>", i1 false, i1 false}
!730 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4366, i32 21}
!731 = !{ptr @pcie_intr_handler.pcie_intr_info, !732, !"pcie_intr_info", i1 false, i1 false}
!732 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4336, i32 32}
!733 = !{ptr @.str.367, !734, !"<string literal>", i1 false, i1 false}
!734 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4372, i32 19}
!735 = !{ptr @.str.368, !736, !"<string literal>", i1 false, i1 false}
!736 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4374, i32 23}
!737 = !{ptr @.str.369, !738, !"<string literal>", i1 false, i1 false}
!738 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4375, i32 20}
!739 = !{ptr @.str.370, !740, !"<string literal>", i1 false, i1 false}
!740 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4380, i32 22}
!741 = !{ptr @.str.371, !742, !"<string literal>", i1 false, i1 false}
!742 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4382, i32 22}
!743 = !{ptr @.str.372, !744, !"<string literal>", i1 false, i1 false}
!744 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4385, i32 20}
!745 = !{ptr @.str.373, !746, !"<string literal>", i1 false, i1 false}
!746 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4388, i32 19}
!747 = !{ptr @.str.374, !748, !"<string literal>", i1 false, i1 false}
!748 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4398, i32 18}
!749 = !{ptr @.str.375, !750, !"<string literal>", i1 false, i1 false}
!750 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4400, i32 23}
!751 = !{ptr @.str.376, !752, !"<string literal>", i1 false, i1 false}
!752 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4402, i32 24}
!753 = !{ptr @.str.377, !754, !"<string literal>", i1 false, i1 false}
!754 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4404, i32 16}
!755 = !{ptr @.str.378, !756, !"<string literal>", i1 false, i1 false}
!756 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4405, i32 18}
!757 = !{ptr @.str.379, !758, !"<string literal>", i1 false, i1 false}
!758 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4406, i32 21}
!759 = !{ptr @.str.380, !760, !"<string literal>", i1 false, i1 false}
!760 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4407, i32 19}
!761 = !{ptr @pcie_intr_handler.t5_pcie_intr_info, !762, !"t5_pcie_intr_info", i1 false, i1 false}
!762 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4371, i32 26}
!763 = !{ptr @mem_intr_handler.name, !764, !"name", i1 false, i1 false}
!764 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4835, i32 20}
!765 = !{ptr @.str.381, !766, !"<string literal>", i1 false, i1 false}
!766 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4857, i32 3}
!767 = !{ptr @.str.382, !766, !"<string literal>", i1 false, i1 false}
!768 = !{ptr @mem_intr_handler._entry, !766, !"_entry", i1 false, i1 false}
!769 = !{ptr @mem_intr_handler._entry_ptr, !766, !"_entry_ptr", i1 false, i1 false}
!770 = !{ptr @.str.384, !771, !"<string literal>", i1 false, i1 false}
!771 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4866, i32 4}
!772 = !{ptr @mem_intr_handler._entry.383, !771, !"_entry", i1 false, i1 false}
!773 = !{ptr @mem_intr_handler._entry_ptr.385, !771, !"_entry_ptr", i1 false, i1 false}
!774 = !{ptr @.str.386, !771, !"<string literal>", i1 false, i1 false}
!775 = !{ptr @.str.387, !771, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @.str.389, !777, !"<string literal>", i1 false, i1 false}
!777 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4871, i32 3}
!778 = !{ptr @mem_intr_handler._entry.388, !777, !"_entry", i1 false, i1 false}
!779 = !{ptr @mem_intr_handler._entry_ptr.390, !777, !"_entry_ptr", i1 false, i1 false}
!780 = !{ptr @.str.391, !781, !"<string literal>", i1 false, i1 false}
!781 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 455, i32 3}
!782 = !{ptr @.str.392, !781, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @t4_edc_err_read._entry, !781, !"_entry", i1 false, i1 false}
!784 = !{ptr @t4_edc_err_read._entry_ptr, !781, !"_entry_ptr", i1 false, i1 false}
!785 = !{ptr @.str.394, !786, !"<string literal>", i1 false, i1 false}
!786 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 459, i32 3}
!787 = !{ptr @t4_edc_err_read._entry.393, !786, !"_entry", i1 false, i1 false}
!788 = !{ptr @t4_edc_err_read._entry_ptr.395, !786, !"_entry_ptr", i1 false, i1 false}
!789 = !{ptr @.str.397, !790, !"<string literal>", i1 false, i1 false}
!790 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 466, i32 2}
!791 = !{ptr @t4_edc_err_read._entry.396, !790, !"_entry", i1 false, i1 false}
!792 = !{ptr @t4_edc_err_read._entry_ptr.398, !790, !"_entry_ptr", i1 false, i1 false}
!793 = !{ptr @.str.400, !794, !"<string literal>", i1 false, i1 false}
!794 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 470, i32 2}
!795 = !{ptr @t4_edc_err_read._entry.399, !794, !"_entry", i1 false, i1 false}
!796 = !{ptr @t4_edc_err_read._entry_ptr.401, !794, !"_entry_ptr", i1 false, i1 false}
!797 = !{ptr @.str.402, !798, !"<string literal>", i1 false, i1 false}
!798 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4718, i32 16}
!799 = !{ptr @.str.403, !800, !"<string literal>", i1 false, i1 false}
!800 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4719, i32 13}
!801 = !{ptr @.str.404, !802, !"<string literal>", i1 false, i1 false}
!802 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4720, i32 18}
!803 = !{ptr @.str.405, !804, !"<string literal>", i1 false, i1 false}
!804 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4721, i32 19}
!805 = !{ptr @.str.406, !806, !"<string literal>", i1 false, i1 false}
!806 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4722, i32 19}
!807 = !{ptr @le_intr_handler.le_intr_info, !808, !"le_intr_info", i1 false, i1 false}
!808 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4717, i32 32}
!809 = !{ptr @.str.407, !810, !"<string literal>", i1 false, i1 false}
!810 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4729, i32 18}
!811 = !{ptr @.str.408, !812, !"<string literal>", i1 false, i1 false}
!812 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4733, i32 25}
!813 = !{ptr @le_intr_handler.t6_le_intr_info, !814, !"t6_le_intr_info", i1 false, i1 false}
!814 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4726, i32 26}
!815 = !{ptr @.str.409, !816, !"<string literal>", i1 false, i1 false}
!816 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4436, i32 17}
!817 = !{ptr @.str.410, !818, !"<string literal>", i1 false, i1 false}
!818 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4437, i32 23}
!819 = !{ptr @tp_intr_handler.tp_intr_info, !820, !"tp_intr_info", i1 false, i1 false}
!820 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4435, i32 32}
!821 = !{ptr @.str.411, !822, !"<string literal>", i1 false, i1 false}
!822 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4887, i32 3}
!823 = !{ptr @.str.412, !822, !"<string literal>", i1 false, i1 false}
!824 = !{ptr @ma_intr_handler._entry, !822, !"_entry", i1 false, i1 false}
!825 = !{ptr @ma_intr_handler._entry_ptr, !822, !"_entry_ptr", i1 false, i1 false}
!826 = !{ptr @ma_intr_handler._entry.413, !827, !"_entry", i1 false, i1 false}
!827 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4891, i32 4}
!828 = !{ptr @ma_intr_handler._entry_ptr.414, !827, !"_entry_ptr", i1 false, i1 false}
!829 = !{ptr @.str.416, !830, !"<string literal>", i1 false, i1 false}
!830 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4898, i32 3}
!831 = !{ptr @ma_intr_handler._entry.415, !830, !"_entry", i1 false, i1 false}
!832 = !{ptr @ma_intr_handler._entry_ptr.417, !830, !"_entry_ptr", i1 false, i1 false}
!833 = !{ptr @.str.418, !834, !"<string literal>", i1 false, i1 false}
!834 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4655, i32 23}
!835 = !{ptr @.str.419, !836, !"<string literal>", i1 false, i1 false}
!836 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4656, i32 23}
!837 = !{ptr @.str.420, !838, !"<string literal>", i1 false, i1 false}
!838 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4657, i32 23}
!839 = !{ptr @.str.421, !840, !"<string literal>", i1 false, i1 false}
!840 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4658, i32 25}
!841 = !{ptr @.str.422, !842, !"<string literal>", i1 false, i1 false}
!842 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4659, i32 27}
!843 = !{ptr @.str.423, !844, !"<string literal>", i1 false, i1 false}
!844 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4660, i32 24}
!845 = !{ptr @.str.424, !846, !"<string literal>", i1 false, i1 false}
!846 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4661, i32 29}
!847 = !{ptr @.str.425, !848, !"<string literal>", i1 false, i1 false}
!848 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4663, i32 24}
!849 = !{ptr @.str.426, !850, !"<string literal>", i1 false, i1 false}
!850 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4664, i32 30}
!851 = !{ptr @pmtx_intr_handler.pmtx_intr_info, !852, !"pmtx_intr_info", i1 false, i1 false}
!852 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4654, i32 32}
!853 = !{ptr @.str.427, !854, !"<string literal>", i1 false, i1 false}
!854 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4678, i32 25}
!855 = !{ptr @.str.428, !856, !"<string literal>", i1 false, i1 false}
!856 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4679, i32 27}
!857 = !{ptr @.str.429, !858, !"<string literal>", i1 false, i1 false}
!858 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4680, i32 24}
!859 = !{ptr @.str.430, !860, !"<string literal>", i1 false, i1 false}
!860 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4681, i32 29}
!861 = !{ptr @.str.431, !862, !"<string literal>", i1 false, i1 false}
!862 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4683, i32 24}
!863 = !{ptr @.str.432, !864, !"<string literal>", i1 false, i1 false}
!864 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4684, i32 30}
!865 = !{ptr @pmrx_intr_handler.pmrx_intr_info, !866, !"pmrx_intr_info", i1 false, i1 false}
!866 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4677, i32 32}
!867 = !{ptr @.str.433, !868, !"<string literal>", i1 false, i1 false}
!868 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4618, i32 16}
!869 = !{ptr @.str.434, !870, !"<string literal>", i1 false, i1 false}
!870 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4619, i32 15}
!871 = !{ptr @ulprx_intr_handler.ulprx_intr_info, !872, !"ulprx_intr_info", i1 false, i1 false}
!872 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4617, i32 32}
!873 = !{ptr @.str.435, !874, !"<string literal>", i1 false, i1 false}
!874 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4698, i32 24}
!875 = !{ptr @.str.436, !876, !"<string literal>", i1 false, i1 false}
!876 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4699, i32 23}
!877 = !{ptr @.str.437, !878, !"<string literal>", i1 false, i1 false}
!878 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4700, i32 25}
!879 = !{ptr @.str.438, !880, !"<string literal>", i1 false, i1 false}
!880 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4701, i32 26}
!881 = !{ptr @.str.439, !882, !"<string literal>", i1 false, i1 false}
!882 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4702, i32 26}
!883 = !{ptr @.str.440, !884, !"<string literal>", i1 false, i1 false}
!884 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4703, i32 26}
!885 = !{ptr @cplsw_intr_handler.cplsw_intr_info, !886, !"cplsw_intr_info", i1 false, i1 false}
!886 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4697, i32 32}
!887 = !{ptr @.str.441, !888, !"<string literal>", i1 false, i1 false}
!888 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4455, i32 5}
!889 = !{ptr @.str.442, !890, !"<string literal>", i1 false, i1 false}
!890 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4457, i32 5}
!891 = !{ptr @.str.443, !892, !"<string literal>", i1 false, i1 false}
!892 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4458, i32 25}
!893 = !{ptr @.str.444, !894, !"<string literal>", i1 false, i1 false}
!894 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4461, i32 5}
!895 = !{ptr @.str.445, !896, !"<string literal>", i1 false, i1 false}
!896 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4462, i32 25}
!897 = !{ptr @.str.446, !898, !"<string literal>", i1 false, i1 false}
!898 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4464, i32 25}
!899 = !{ptr @.str.447, !900, !"<string literal>", i1 false, i1 false}
!900 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4466, i32 25}
!901 = !{ptr @.str.448, !902, !"<string literal>", i1 false, i1 false}
!902 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4468, i32 25}
!903 = !{ptr @.str.449, !904, !"<string literal>", i1 false, i1 false}
!904 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4471, i32 5}
!905 = !{ptr @.str.450, !906, !"<string literal>", i1 false, i1 false}
!906 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4472, i32 25}
!907 = !{ptr @.str.451, !908, !"<string literal>", i1 false, i1 false}
!908 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4473, i32 24}
!909 = !{ptr @sge_intr_handler.sge_intr_info, !910, !"sge_intr_info", i1 false, i1 false}
!910 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4453, i32 32}
!911 = !{ptr @.str.452, !912, !"<string literal>", i1 false, i1 false}
!912 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4481, i32 5}
!913 = !{ptr @sge_intr_handler.t4t5_sge_intr_info, !914, !"t4t5_sge_intr_info", i1 false, i1 false}
!914 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4477, i32 26}
!915 = !{ptr @.str.453, !916, !"<string literal>", i1 false, i1 false}
!916 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4488, i32 3}
!917 = !{ptr @.str.454, !916, !"<string literal>", i1 false, i1 false}
!918 = !{ptr @sge_intr_handler._entry, !916, !"_entry", i1 false, i1 false}
!919 = !{ptr @sge_intr_handler._entry_ptr, !916, !"_entry_ptr", i1 false, i1 false}
!920 = !{ptr @.str.456, !921, !"<string literal>", i1 false, i1 false}
!921 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4495, i32 3}
!922 = !{ptr @sge_intr_handler._entry.455, !921, !"_entry", i1 false, i1 false}
!923 = !{ptr @sge_intr_handler._entry_ptr.457, !921, !"_entry_ptr", i1 false, i1 false}
!924 = !{ptr @.str.459, !925, !"<string literal>", i1 false, i1 false}
!925 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4505, i32 4}
!926 = !{ptr @sge_intr_handler._entry.458, !925, !"_entry", i1 false, i1 false}
!927 = !{ptr @sge_intr_handler._entry_ptr.460, !925, !"_entry_ptr", i1 false, i1 false}
!928 = !{ptr @.str.462, !929, !"<string literal>", i1 false, i1 false}
!929 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4517, i32 3}
!930 = !{ptr @sge_intr_handler._entry.461, !929, !"_entry", i1 false, i1 false}
!931 = !{ptr @sge_intr_handler._entry_ptr.463, !929, !"_entry_ptr", i1 false, i1 false}
!932 = !{ptr @.str.465, !933, !"<string literal>", i1 false, i1 false}
!933 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4520, i32 4}
!934 = !{ptr @sge_intr_handler._entry.464, !933, !"_entry", i1 false, i1 false}
!935 = !{ptr @sge_intr_handler._entry_ptr.466, !933, !"_entry_ptr", i1 false, i1 false}
!936 = !{ptr @.str.467, !937, !"<string literal>", i1 false, i1 false}
!937 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4633, i32 26}
!938 = !{ptr @.str.468, !939, !"<string literal>", i1 false, i1 false}
!939 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4635, i32 26}
!940 = !{ptr @.str.469, !941, !"<string literal>", i1 false, i1 false}
!941 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4637, i32 26}
!942 = !{ptr @.str.470, !943, !"<string literal>", i1 false, i1 false}
!943 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4639, i32 26}
!944 = !{ptr @.str.471, !945, !"<string literal>", i1 false, i1 false}
!945 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4641, i32 16}
!946 = !{ptr @ulptx_intr_handler.ulptx_intr_info, !947, !"ulptx_intr_info", i1 false, i1 false}
!947 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 4632, i32 32}
!948 = !{ptr @.str.472, !949, !"<string literal>", i1 false, i1 false}
!949 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6125, i32 2}
!950 = !{ptr @.str.473, !949, !"<string literal>", i1 false, i1 false}
!951 = !{ptr @compute_mps_bg_map._entry, !949, !"_entry", i1 false, i1 false}
!952 = !{ptr @compute_mps_bg_map._entry_ptr, !949, !"_entry_ptr", i1 false, i1 false}
!953 = !{ptr @.str.474, !954, !"<string literal>", i1 false, i1 false}
!954 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8454, i32 3}
!955 = !{ptr @.str.475, !956, !"<string literal>", i1 false, i1 false}
!956 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8455, i32 3}
!957 = !{ptr @.str.476, !958, !"<string literal>", i1 false, i1 false}
!958 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8456, i32 3}
!959 = !{ptr @.str.477, !960, !"<string literal>", i1 false, i1 false}
!960 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8459, i32 3}
!961 = !{ptr @.str.478, !962, !"<string literal>", i1 false, i1 false}
!962 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8460, i32 3}
!963 = !{ptr @t4_link_down_rc_str.reason, !964, !"reason", i1 false, i1 false}
!964 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8453, i32 28}
!965 = distinct !{null, !966, !"<string literal>", i1 false, i1 false}
!966 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8465, i32 10}
!967 = distinct !{null, !968, !"supported_flash", i1 false, i1 false}
!968 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 8955, i32 27}
!969 = !{ptr @.str.480, !970, !"<string literal>", i1 false, i1 false}
!970 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9087, i32 3}
!971 = !{ptr @.str.481, !970, !"<string literal>", i1 false, i1 false}
!972 = !{ptr @t4_get_flash_params._entry, !970, !"_entry", i1 false, i1 false}
!973 = !{ptr @t4_get_flash_params._entry_ptr, !970, !"_entry_ptr", i1 false, i1 false}
!974 = !{ptr @.str.483, !975, !"<string literal>", i1 false, i1 false}
!975 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 9098, i32 3}
!976 = !{ptr @t4_get_flash_params._entry.482, !975, !"_entry", i1 false, i1 false}
!977 = !{ptr @t4_get_flash_params._entry_ptr.484, !975, !"_entry_ptr", i1 false, i1 false}
!978 = !{ptr @.str.485, !979, !"<string literal>", i1 false, i1 false}
!979 = !{!"../drivers/net/ethernet/chelsio/cxgb4/t4_hw.c", i32 6210, i32 3}
!980 = !{ptr @.str.486, !979, !"<string literal>", i1 false, i1 false}
!981 = !{ptr @t4_get_tp_e2c_map._entry, !979, !"_entry", i1 false, i1 false}
!982 = !{ptr @t4_get_tp_e2c_map._entry_ptr, !979, !"_entry_ptr", i1 false, i1 false}
!983 = !{i32 1, !"wchar_size", i32 2}
!984 = !{i32 1, !"min_enum_size", i32 4}
!985 = !{i32 8, !"branch-target-enforcement", i32 0}
!986 = !{i32 8, !"sign-return-address", i32 0}
!987 = !{i32 8, !"sign-return-address-all", i32 0}
!988 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!989 = !{i32 7, !"uwtable", i32 1}
!990 = !{i32 7, !"frame-pointer", i32 2}
!991 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!992 = !{i64 6578957}
!993 = !{i64 2160267840}
!994 = !{i64 2160268227}
!995 = !{i64 6578539}
!996 = !{!"auto-init"}
!997 = !{i64 2160269829}
!998 = !{i64 2160270202}
!999 = !{i64 2160269009}
!1000 = !{i64 2160269459}
!1001 = !{i8 0, i8 2}
!1002 = !{i32 0, i32 33}
!1003 = !{i64 2160674000}
!1004 = !{i64 2160674493}
